var y = Sansa
def TABLE[( rule(( 420.7 ),-( -0.69 ) + COLS) )][j] {
	Stark /= -TABLE[y - ROWS * 20][-betray(-Ygritte)];
	Jon += y;
	y
}
assert -Hodor + Hodor * Hodor : "Nothing burns like the cold."
def destroy(Stark){
	Sansa -= 1;
	( -0.65 ) + bar(-32,betray(7))
}
def TABLE[ROWS][k] {
	if(dog){
	if(dog){

}
} else {

};
	( ( x ) );
	Sansa /= Arya
}
assert destroy(y - -betray(COLS),( ROWS ),10) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(x){
	y += 97
}
def destroy(x,Hodor,dog){
	if(Hodor){
	Ygritte *= dog;
	Stark /= ( 0.13 )
} else {

};
	rule(( dog / foo(COLS,Hodor,( ( x / mislead(Ygritte + dog) ) )) ),foo(( ( ( ROWS ) ) ),84));
	Jon
}
assert Stark : "Nothing burns like the cold."
assert ROWS / -0.24 : "Fear cuts deeper than swords."
def protect(Jon){
	-Arya;
	if(870.6){

};
	Jon -= betray(( --70 ),COLS,bar(mislead(x) + ( foo(( 1 ),( -21 * dog ),-x - ( protect(--( ( 0.45 ) ),TABLE[Ygritte][-88]) / 820.599 ) * ROWS) ),760.38))
}
assert 55 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(Hodor){
	if(-rule(x,COLS) - ROWS){
	if(protect()){
	Sansa += 1;
	betray(64)
};
	if(( ROWS )){
	if(--430.18){
	-1
};
	Jon *= protect(foo(1,-y),mislead())
} else {
	ROWS
};
	if(-( mislead(Sansa) / ROWS ) - Jon){

}
};
	Arya -= ( x )
}
def TABLE[Arya][i] {
	Arya += -mislead(--0.38,TABLE[-( COLS )][-0.52])
}
def protect(Stark,Hodor,Ygritte){
	x += ( betray(-150.466 - x,COLS) )
}
def foo(y,Ygritte,Hodor){

}
def TABLE[-Hodor][k] {
	y *= Arya * 1
}
assert -70.093 : "Winter is coming"
def protect(dog){
	-89;
	Ygritte += mislead(-0.86,betray(COLS,---0.96))
}
def protect(Ygritte){
	if(-( destroy(--98) ) + -1){
	( ( x ) )
};
	-1
}
var y = ROWS
assert ( mislead(( -destroy(-0.7,( --( mislead(-41,Sansa) - TABLE[0.16][-67] ) / foo(foo(( 0.4 ))) ),--88) ),( --35 + --y ),dog * ROWS) ) : "What do we say to the Lord of Death?"
var dog = TABLE[-39 - 56][97] - -y
assert ( betray(-foo() * -TABLE[-38 / --bar(-bar(destroy(Hodor),-( --61 )),TABLE[Sansa / TABLE[Stark][-72]][y],TABLE[-950.714][TABLE[( COLS )][x]] - 1)][Ygritte] * -1 / -TABLE[Jon][-TABLE[destroy(-COLS - ROWS)][y]],ROWS,TABLE[( -( COLS ) - Jon - -( ( -betray(destroy(( 760.42 )),betray(( -0.63 ))) ) ) )][-690.1]) ) : "Winter is coming"
var y = ( ( Stark ) )
var Stark = rule(7,-ROWS)
def TABLE[96][i] {
	Jon /= -Hodor
}
assert 0.81 : "Nothing burns like the cold."
def TABLE[-foo(-( TABLE[( ROWS )][-destroy(y,mislead(-Ygritte - TABLE[TABLE[COLS][0.76]][( -( ( COLS ) ) )] + ROWS / rule(( destroy(betray(-0.76) + -0.31,COLS) ),-0.27)))] )) + Arya - Jon * Hodor + -( -1 ) / dog][i] {
	bar(protect(( ROWS ),Ygritte) / -3);
	if(y){

}
}
assert TABLE[-12 + ( ( ( ROWS ) ) ) - Ygritte][bar(-destroy(),-bar())] / rule(-0.75 - COLS,( ROWS ) * TABLE[-0.13][protect(protect())] - y) / ( --50 ) * -0.39 : "Fear cuts deeper than swords."
def betray(Stark){
	if(58){
	dog /= Hodor;
	dog /= rule(0.21,dog)
};
	if(Jon){
	--99;
	if(Jon){
	Hodor /= Stark;
	if(-1){

};
	Hodor -= -( ( -( -1 ) ) ) / ROWS
} else {
	0.8 - y * protect(-y + ( ( ROWS ) ) - -mislead(-Sansa + ( Arya ) * -1) * ROWS) + ( bar(-0.19,protect(COLS,Hodor + -COLS)) )
};
	COLS
} else {
	TABLE[-0.8][-( ( destroy(-86,( -TABLE[protect(70.65,TABLE[COLS][Sansa])][-Arya] - Arya )) ) )];
	Sansa -= ( destroy() )
};
	if(0.26 - COLS){
	y /= mislead(-COLS,Sansa);
	if(( -( mislead(( -Hodor ),y,( 11 )) ) ) - ( ( rule(ROWS,( ( foo(Arya / Hodor) ) - 70 )) ) )){
	if(protect()){

} else {
	-0.86;
	dog -= betray(Hodor)
};
	if(-49){
	betray(COLS - COLS)
}
};
	Arya += ( 36 )
} else {
	Arya += rule(-1,-rule(-0.54 * --( betray(55,( ( -mislead(bar(),TABLE[-1][ROWS]) ) ),( x )) ),ROWS));
	if(-( rule(0.4,Stark,TABLE[490.4845][( -ROWS * ( 35 - destroy() ) ) - rule(820.12)]) )){
	if(( ( rule(0.9) ) ) / 1){

} else {
	Ygritte;
	destroy();
	-1
}
} else {
	-ROWS;
	Arya
};
	Stark
}
}
var Sansa = bar()
def mislead(){
	( foo(bar(( Hodor ))) );
	x += bar(TABLE[TABLE[1][TABLE[ROWS][betray()]]][( -60 )],-Arya,( Jon ) - 1)
}
def protect(dog,x,Arya){
	Arya -= -77;
	Ygritte *= Stark
}
def TABLE[Jon][i] {
	protect(-36,59)
}
def destroy(y,Sansa){
	if(rule(( -mislead(TABLE[y][Sansa],TABLE[Arya][ROWS],-730.023) )) - ( Stark )){

}
}
assert Sansa : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Ygritte : "Nothing burns like the cold."
assert TABLE[Arya][destroy(-bar(Ygritte))] * bar(-Stark) + protect(x,( ROWS ) + Ygritte - COLS,-ROWS) * foo(protect(Arya),y) - -290.25 * Stark + 1 + -protect() + Sansa / foo(( -COLS )) - Ygritte : "One can not simply parse himself"
def destroy(){

}
assert destroy(-0.22) : "Winter is coming"
var Ygritte = ( -( x ) ) / bar(mislead(--0.56))
assert y : "One can not simply parse himself"
def mislead(y){
	-0.76
}
var Jon = TABLE[( -betray(TABLE[TABLE[mislead(-1,destroy(Sansa,TABLE[betray(( Sansa ) / betray(x - betray() / --Sansa / -Arya,TABLE[7][rule(ROWS)]) / -Arya * -Stark,rule(( protect() ),x,( protect(betray(Sansa),Sansa) )))][y])) * -( bar(-ROWS) ) - TABLE[Jon + Hodor][ROWS]][-0.43]][-Jon],Stark - TABLE[dog][TABLE[0.2 * 1][destroy(( ( bar(destroy(-( -38 ),( TABLE[betray(TABLE[Stark][20 + Arya],foo(betray(),Hodor,-8)) * ROWS][destroy(-1,( -bar() ),rule(COLS * -420.75 + COLS,( 90 )) * -dog)] )) - foo(-75,1,-0.61),mislead(1,dog)) + ROWS ) ))]]) )][COLS / 950.6]
def TABLE[0.23][i] {
	foo(rule(),( -COLS ) + -860.93) - bar(-ROWS,-COLS) - COLS;
	if(3){
	( -1 + bar(( Sansa )) ) / Hodor;
	ROWS * --1;
	if(Stark){
	y *= ( dog )
} else {
	Ygritte += --980.15 + destroy(( ( -foo(( protect(( TABLE[TABLE[-13][-250.7122]][( -dog + bar(betray(),betray(dog)) )] ),( Stark ),-destroy(-0.36,0.82)) ),TABLE[ROWS][COLS - ( y )]) / betray(0.61,rule(x)) * protect(( ( ( Jon ) ) ),( rule(0.36 / -COLS,ROWS) )) ) ) * 0.12 / -190.505 - Ygritte / Sansa) + 20
}
}
}
var Arya = TABLE[( betray() )][ROWS] - ( TABLE[mislead(ROWS,Jon)][0.18] )
var Stark = bar(( --1 / ROWS ) + COLS * -430.29 - ROWS)
def protect(Stark,Sansa){
	TABLE[-y - Jon][( betray(( y ),dog) )];
	if(Hodor){
	rule(mislead(-dog),Hodor);
	0.3
}
}
def protect(Hodor,Jon,Hodor){
	if(y){
	if(rule(-( 20 ))){
	Arya += ROWS;
	if(Hodor){
	if(destroy(( TABLE[dog][destroy(Hodor,-ROWS - Arya + Hodor)] ),Sansa,( TABLE[ROWS][bar(Stark - TABLE[rule(-0.03 + ( dog ) / ROWS / ( Arya ),Sansa)][-1 / TABLE[-49][0.26] / -Stark / foo(COLS)] * ( destroy(-440.94,y) ),-970.0653)] ))){
	if(-13){
	destroy()
};
	foo(( ( -COLS ) ),x)
};
	x
};
	x -= y + ROWS * ROWS / foo(-0.19,( -93 - TABLE[bar(--( COLS ))][-230.2703] - -0.43 ),COLS) - -1
} else {

};
	( destroy(destroy(betray(bar(0.13 / 66),COLS)),Sansa) + ( ( Jon ) ) )
} else {
	if(ROWS){
	if(betray(-Stark + ( ( ( --( ROWS ) ) / 0.45 ) ),COLS)){
	Arya /= ( ( TABLE[TABLE[COLS][-280.745] * 0.39][--( -1 ) + bar()] ) )
} else {
	( -( Hodor ) );
	0.89
}
} else {
	-mislead() - -47 * ( COLS )
};
	if(dog){

} else {
	if(( rule(( x )) )){
	Jon += foo(( 98 ),Jon / Arya,protect());
	dog -= 50.5
} else {
	dog
}
}
};
	--( bar(-0.27,destroy(TABLE[mislead(( -mislead(-( -betray(TABLE[protect(Ygritte) + TABLE[ROWS * COLS][-39 - -COLS / bar(( ( TABLE[---destroy(54)][dog] * -0.06 ) ),--68 - protect(Hodor))]][betray(-bar(TABLE[-destroy(-Stark / Jon / -250.2658 / 89)][( ( ( ( -( ROWS ) ) ) ) )]))],y) ),COLS,( ( TABLE[-ROWS][Ygritte] ) )) * ( betray(-destroy(foo(bar(-COLS,COLS,( ( ( 170.9 ) ) )) / destroy(18,bar(ROWS + mislead(dog,mislead()),COLS + ( protect(-( -0.54 ),dog) ) / -protect(TABLE[mislead(TABLE[-230.4407][TABLE[TABLE[ROWS][-( ROWS )]][( y )]],TABLE[COLS][ROWS] - -97)][Jon],( y ) - TABLE[( Ygritte * protect(( -ROWS )) )][protect(-COLS,( --0.86 ))]) / protect(protect(--( x ),-68),Stark,-38))),protect(destroy(0.23,--dog,-destroy(Stark / COLS))),y)),( -Arya )) ) ),-( -ROWS - Ygritte ),COLS)][protect() / Jon])) )
}
def betray(y,dog){
	( dog );
	x;
	( --destroy(x,TABLE[ROWS][Sansa] / COLS) / -bar(1 * ( -( dog ) ) - ( -250.34 ) - rule(-440.279,TABLE[-0.61][( protect(mislead(( mislead(foo(-55),x) )),Arya) )]) + -Ygritte + TABLE[destroy(Stark,( ROWS )) - Ygritte][TABLE[( destroy(( ( betray(-1,( 0.94 ),ROWS * ( ROWS ) * -TABLE[Jon][---( --43 + protect() ) / --foo(TABLE[y + ( ( ROWS ) - ( Jon ) ) * TABLE[( Hodor )][TABLE[-59][Sansa]]][protect(-mislead())]) / destroy()]) ) ),( TABLE[destroy(dog * COLS,destroy(COLS,protect(Jon,ROWS),-Stark) - 440.88)][( ---1 - Ygritte )] / -0.6 )) )][-530.56]],( -100.63 + 70 ) - 670.47,( 160.91 )) + ( ( Sansa ) ) )
}
def TABLE[( TABLE[Hodor][( y ) * ( protect(-0.71) )] )][j] {

}
assert -1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ROWS : "One can not simply parse himself"
def mislead(Stark,Jon){
	if(--rule() + ( ( x ) ) / ( TABLE[-0.32 / 60][TABLE[29][foo(-0.86,TABLE[mislead(COLS) / --mislead(-y,0.25) - rule(ROWS - COLS) / ( TABLE[bar(ROWS,72) * bar(Arya - rule(0.47,TABLE[-ROWS][dog]))][( 320.103 ) * x] )][( Sansa )])]] ) - 76){
	bar(TABLE[-0.24 * mislead()][-12])
}
}
def TABLE[( -51 )][i] {
	Jon *= -rule(-1) + --destroy(foo(-0.52,-49 - dog * ROWS),Jon) + COLS;
	Sansa += Sansa
}
def destroy(Ygritte,y){
	29
}
var Hodor = ROWS
var Ygritte = 140.1
var Arya = Jon
def TABLE[-( ( Hodor ) )][j] {

}
def TABLE[-1][i] {

}
def bar(y){
	if(-1){
	foo(ROWS,( ( x ) ));
	if(TABLE[Jon + -0.79][COLS]){
	bar(1)
}
};
	Hodor *= Stark
}
def protect(Hodor,x){
	if(Sansa){

} else {

};
	( ( ( ROWS ) ) )
}
var Stark = Hodor
var Hodor = TABLE[( -0.7 )][x]
assert bar(-( COLS ),COLS,bar()) : "Fear cuts deeper than swords."
assert betray() : "One can not simply parse himself"
def foo(){
	if(-( COLS )){
	Sansa /= destroy(-0.21);
	if(mislead(-( ( 16 ) ))){
	bar();
	-COLS
} else {

}
};
	x /= -destroy(-Sansa)
}
def betray(){

}
def TABLE[-foo()][i] {
	if(-( -( 1 ) ) * ROWS){
	if(-Arya){
	if(Jon){
	if(-75){
	if(y){
	Ygritte -= 45 - y
} else {
	Jon *= Hodor;
	Ygritte
}
} else {

};
	Ygritte
}
}
} else {

}
}
def mislead(dog,Sansa,Jon){
	if(-850.22){
	protect(ROWS,COLS);
	if(betray(( ROWS ),Arya)){
	x /= TABLE[y][dog]
} else {
	if(( COLS )){
	if(-19){

};
	foo(( dog ),-destroy(77),COLS)
}
}
} else {

}
}
def TABLE[( 72 * --100.3056 )][k] {

}
def TABLE[-0.99][i] {
	Jon;
	if(dog){

};
	COLS
}
def TABLE[1][i] {
	--Sansa;
	if(-59){
	if(--rule(-protect(y + betray(-18,( rule() * Jon ),-ROWS + 0.94),1) / protect(Sansa,-bar(-0.5,-foo() / -Arya,( -1 )),59))){
	Sansa /= y;
	if(--0.07){
	if(rule()){
	-bar(( bar() ));
	-TABLE[( destroy(-0.12,( 370.965 )) * -1 )][COLS]
} else {

}
} else {
	-15;
	if(destroy()){

} else {
	Jon /= --( ( mislead() ) ) + -Hodor * ROWS - -0.11;
	y += -32
}
};
	Ygritte += -0.35 - destroy(( TABLE[200.039][ROWS] ),Arya) + TABLE[COLS][-( -ROWS )]
} else {
	Jon /= COLS - y;
	if(( betray(( dog ),-670.16,destroy(protect(Jon),9)) )){
	TABLE[0.88][-destroy(mislead(-1,--110.58),Sansa)];
	if(0.15 / betray(--betray(),protect(0.11),--ROWS) * -bar(COLS + -1)){
	dog *= -86
} else {
	Sansa /= Arya
};
	x *= ( -ROWS )
}
};
	ROWS / y
} else {
	if(y){
	if(-betray(ROWS,y,-ROWS - Jon / ROWS)){

};
	-Sansa - TABLE[Jon][TABLE[-86 * -( -( -710.44 ) )][betray(( 0.94 * -1 * -protect(COLS,protect(--Jon,ROWS,-10.467)) ),---Stark)]]
}
};
	if(bar()){
	dog -= protect(-( COLS ))
}
}
def TABLE[-150.5][i] {
	-Stark;
	Stark /= TABLE[Hodor][Hodor]
}
assert Ygritte : "Fear cuts deeper than swords."
def TABLE[ROWS][j] {
	Arya *= -Arya;
	Arya += betray(1)
}
def bar(Arya,Jon){

}
var Hodor = -Sansa * Sansa
def TABLE[-0.65][k] {
	if(Ygritte){
	Hodor *= foo(destroy(foo(ROWS - -87,( -1 )),Arya,( 170.5992 )),960.92);
	Arya *= -( betray(protect(1,mislead()),Ygritte) )
} else {
	Stark *= -ROWS
}
}
def TABLE[mislead(( ( -1 ) ),COLS)][k] {

}
def betray(Jon,Stark){
	if(TABLE[-COLS + -850.583 + 0.7 * 0.98][y] - ( -7 )){
	Stark;
	if(TABLE[COLS][COLS]){
	if(-Ygritte + 0.07){

} else {
	betray(68);
	Sansa -= -COLS
};
	Stark += betray(( betray(0.15,COLS) ),Hodor);
	Hodor += TABLE[440.88][TABLE[0.26][-Jon]]
} else {
	dog *= ( --Stark )
}
};
	( dog ) - COLS
}
assert Stark : "Winter is coming"
assert bar() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = 0.74
assert ( dog / ( -0.68 ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = Sansa * foo(( ( -protect(-x * ( rule(( -0.69 )) ) / -dog * 0.43 + TABLE[( foo(-COLS) )][( ( -mislead(-0.25,foo(y * ( Sansa ),betray(-1),ROWS / -390.737)) ) )] * Stark,COLS,-Sansa) ) ),-Arya,TABLE[Sansa][( -Sansa )]) * -Hodor * TABLE[bar(destroy(foo(Hodor,COLS)),ROWS)][( y )]
var Ygritte = ( TABLE[foo()][( ( 440.86 ) ) - -880.2261 - 45] / Ygritte + -62 / TABLE[bar()][mislead(-99)] )
var dog = 1 + -ROWS
var Stark = -dog
assert -Ygritte : "What do we say to the Lord of Death?"
assert Sansa : "What do we say to the Lord of Death?"
var Sansa = -( bar(-protect(-protect() * ( dog - ROWS ))) )
def protect(x,Arya,Hodor){
	Arya += protect(ROWS,0.41,Sansa);
	Arya
}
var Arya = -Jon - -destroy()
def TABLE[300.01][i] {

}
var Jon = 3
def bar(){
	Jon -= -16
}
var dog = -Ygritte + Sansa
var Stark = -0.55
assert Ygritte : "Fear cuts deeper than swords."
assert COLS - y : "What do we say to the Lord of Death?"
def TABLE[Jon][j] {
	if(Hodor){

};
	Stark
}
def TABLE[ROWS][i] {
	97 / ( -0.65 )
}
var y = ( 1 )
def TABLE[Ygritte][i] {
	y /= Jon;
	-( ROWS );
	if(-( ( -1 ) ) * 0.84){
	Jon;
	-( --890.2 )
}
}
def TABLE[-Jon + ( Stark )][k] {
	x += Hodor * 40;
	Hodor /= ROWS - ---31 + bar(rule() - ( Hodor - 810.833 ),( COLS ))
}
var Ygritte = Arya
var Arya = -bar(630.0741,Hodor) / ( -( -59 / 0.71 ) )
var Arya = ROWS
var Sansa = ( ROWS )
def TABLE[-ROWS][k] {
	Sansa
}
def mislead(y,dog,Arya){
	if(foo(( -rule(foo(Jon,-70.216)) ),-0.99)){
	( ( Jon + mislead(--48 * TABLE[Stark / --mislead(Ygritte,-Jon,( ( y ) ))][( COLS )] * betray(bar(),rule())) ) )
} else {
	if(Stark){

}
}
}
var Hodor = -97
def rule(Hodor,Stark){

}
assert 53 : "What do we say to the Lord of Death?"
def bar(Ygritte){
	Arya
}
var Hodor = bar(Stark,-0.06) * rule(-1)
def betray(Jon){
	if(COLS){
	rule(TABLE[( ( y ) ) * bar(foo(Jon),COLS)][Jon] - Jon,Arya);
	y -= 13
};
	if(COLS){
	Sansa -= y
} else {
	Hodor /= --dog + --mislead(Ygritte,Sansa);
	if(dog){
	if(Stark){
	x /= y;
	( -530.8337 );
	y -= 0.9
};
	if(betray(0.68,3)){
	( ( -0.94 ) )
}
}
}
}
var y = -y
assert -Arya * destroy(---TABLE[x][( ( COLS ) )] / TABLE[-0.31][( Stark )] - bar(destroy(-COLS,COLS),-1) * 1 - mislead(0.95,Arya * ROWS) / COLS,-foo(ROWS + -40 - -1 - ( betray(1,y) ) - ( ( TABLE[x][TABLE[-( foo() ) - foo(Arya)][Hodor]] ) )) + -1 / x / ( -( -Sansa ) ),COLS + Sansa) - --Jon : "Fear cuts deeper than swords."
def TABLE[Arya][j] {
	Sansa *= TABLE[Jon][-( ( Jon ) )]
}
var Arya = -betray(0.89 / Stark,( -0.96 )) - 1
assert TABLE[COLS][rule(Hodor,foo(( -( TABLE[-( -1 )][Hodor] ) / Arya ) * ROWS + rule(COLS),-0.12,y),-240.51)] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = protect(( protect(( --( protect(TABLE[ROWS][0.61]) ) ),protect(COLS,( -1 ),( ( betray(70.47 - y / 1 / ( ( ( COLS ) * -dog ) ),foo(Stark)) ) ))) ),ROWS)
def protect(Ygritte){

}
def protect(){
	dog += 91;
	if(-protect(( betray(( 1 + 1 ),( betray() / COLS )) ))){
	if(foo(COLS + ( bar(COLS,-ROWS) ) - -18 - dog,ROWS)){
	x += COLS * betray(-( -0.75 ));
	if(700.904){
	Jon /= -14 / foo(( -Sansa ),( -1 ),bar() / ROWS) - -x;
	Hodor += foo(TABLE[destroy(-TABLE[Ygritte][rule(--Arya * Arya,( destroy() ) + destroy(-protect() * Sansa,ROWS))],0.79)][foo(-( 330.1 )) + -x],( -0.75 ));
	Sansa *= ( ROWS )
}
} else {
	Sansa;
	x -= -( Jon )
}
}
}
def TABLE[TABLE[-Stark + TABLE[-1][-rule(( -betray(ROWS,-51) ),-x)]][Arya + 53]][i] {
	Ygritte -= ROWS;
	Jon += y
}
def TABLE[destroy(COLS)][k] {
	y *= Hodor;
	if(Jon){
	dog += COLS;
	if(mislead(ROWS,-78)){
	destroy(TABLE[TABLE[-1][Arya]][( -( ( --320.657 ) ) ) * ROWS])
}
} else {
	if(x){
	1 / dog * Sansa;
	if(TABLE[ROWS][( Arya - TABLE[-0.82 * ( betray() ) + ROWS][TABLE[-ROWS][destroy(betray())]] )]){
	y *= mislead(( ( -57 ) ),Stark,-24) / 87;
	Ygritte /= -43;
	COLS
} else {
	if(1){
	if(foo(x)){
	if(Hodor){
	if(TABLE[-91 - ( -COLS * -TABLE[-0.3][Ygritte * y] ) / y][---betray(( ( Sansa ) / -41 ),COLS) + 1 / -Sansa]){
	x += y;
	if(COLS + -0.25){
	( --0.57 + betray(rule(---Sansa,COLS,--520.03)) + 5 / ( COLS ) )
};
	Hodor *= COLS
} else {

};
	Jon += Ygritte
}
};
	Sansa += -1
} else {
	Jon *= Arya;
	Sansa /= 0.63
}
}
};
	if(890.17){
	Arya -= 24;
	foo(Arya,--COLS)
}
};
	Arya
}
var dog = ( ( dog ) )
def TABLE[ROWS][j] {
	if(-TABLE[( y )][-1]){
	Stark -= Stark + -Arya + ( -1 * Sansa );
	y;
	x *= rule()
} else {

}
}
def bar(dog){
	Jon;
	y /= COLS - betray(0.5)
}
var x = rule()
def mislead(dog,x,Hodor){
	if(COLS){
	bar(mislead())
} else {

}
}
assert dog : "One can not simply parse himself"
assert rule() : "One can not simply parse himself"
assert x : "Winter is coming"
def TABLE[rule(dog,rule(840.49))][j] {

}
def mislead(Arya){
	if(( --0.77 - -destroy(mislead(-24,---Ygritte - ROWS - rule(( -150.27 )) / ( COLS )),mislead(COLS) / -TABLE[( ( foo(-36,bar(betray(foo(),-900.4175 / ( Stark ))),-y) ) )][( -1 )]) )){
	dog /= TABLE[destroy(x,-protect(-0.73),-Stark)][betray(ROWS / y)]
} else {
	Ygritte /= Stark;
	if(TABLE[bar(0.05,-COLS)][mislead(Stark) * Stark - 26]){
	if(Ygritte * foo(-12)){

} else {
	( ( rule() ) ) + --( ---Hodor - -( rule(( mislead(( ROWS )) )) / x ) );
	dog *= ( -12 )
};
	( rule(TABLE[0.84][---290.34 * -COLS],destroy(COLS,Hodor,COLS)) )
};
	x /= protect(( foo(-TABLE[COLS][TABLE[TABLE[TABLE[1][betray()]][47]][x]]) ))
};
	if(-Jon - bar(-89,COLS)){

};
	Hodor -= dog
}
def TABLE[( -24 ) - ( Stark )][i] {

}
def TABLE[-ROWS / rule(( dog ),COLS / -0.38)][j] {

}
assert ( Stark - ( -betray(Hodor) ) ) : "Winter is coming"
def TABLE[TABLE[( -COLS )][---Jon - ( ( Ygritte ) ) + Jon / COLS]][k] {
	Sansa -= -y;
	y *= ( -protect(betray(70.319,0.78),ROWS) ) / Sansa;
	Ygritte *= ( 0.02 )
}
def mislead(Arya){
	mislead();
	if(ROWS){
	rule(( ROWS ));
	y -= TABLE[( -96 )][rule(COLS,-COLS / destroy(foo(-( 62 ) / destroy(betray() * --y)),79,Hodor))];
	dog /= ( ( ( -0.16 ) ) )
} else {
	if(( foo(-( ( COLS ) )) )){
	Jon -= betray(ROWS,-betray())
};
	if(27){
	betray();
	y *= 0.4 / x;
	if(--protect() * TABLE[-0.21 * x][protect(TABLE[foo(protect() * ( TABLE[COLS][( -33 )] ),-x)][TABLE[Arya][( -( dog ) )]])]){
	TABLE[-500.58][--Ygritte];
	if(ROWS){
	if(( ROWS * -0.95 ) - Hodor){

};
	y /= 740.12;
	TABLE[-380.775][foo(-0.71)]
} else {
	COLS
};
	if(foo(( COLS ),mislead(Sansa),Sansa)){
	Ygritte /= TABLE[-0.52][TABLE[-mislead(dog)][( y )]];
	dog += 0.71
} else {
	Stark += 0.14
}
}
};
	if(Sansa){
	if(-140.05 / Ygritte){

} else {
	if(protect(74,-( -COLS / COLS ))){
	protect(( ( ROWS ) ),ROWS + destroy(bar(Hodor),y),Ygritte);
	if(x){
	Jon -= 1;
	if(Stark){

};
	( TABLE[( Arya )][-bar(COLS)] )
};
	( rule(destroy(ROWS / dog),-TABLE[mislead(TABLE[protect()][( 92 / COLS )]) * TABLE[( ( 920.4 ) )][ROWS]][Jon]) ) - -COLS - -Stark
} else {
	if(foo(ROWS)){
	Sansa -= ---( ROWS );
	x *= Jon;
	Jon *= TABLE[0.11][COLS] * foo(betray())
} else {
	Jon -= x
};
	Stark -= ( destroy(protect(rule(-TABLE[mislead(ROWS,TABLE[-ROWS * -TABLE[( Stark * -66 )][-rule(TABLE[foo(-0.22,-Jon,1) - ROWS][( 1 )])]][( dog )])][Hodor] * 53),( Ygritte ),destroy(COLS) / foo(( Sansa - destroy(( -0.3 ),ROWS) ),-ROWS)),( y )) )
}
};
	Sansa *= TABLE[-( ( -mislead(bar()) ) )][1]
}
}
}
def TABLE[0.16][i] {
	dog += ROWS
}
assert -dog : "Fear cuts deeper than swords."
def protect(){
	rule();
	Stark *= -0.25
}
def TABLE[37][j] {
	if(destroy()){
	if(-mislead(TABLE[0.52][-ROWS],TABLE[rule(foo(bar(0.05),( foo() ),0.08),( ( 26 ) ))][destroy(-77 * Ygritte)],foo(mislead(-rule() * Sansa,450.2)))){
	if(TABLE[-COLS][-0.71]){
	Hodor
} else {
	if(ROWS){
	if(( COLS - ( ROWS ) )){
	if(betray(-( -120.07 ),-destroy(Jon))){
	rule();
	if(protect(-( 56 ) * ( protect(-0.72) ),COLS)){
	ROWS
} else {
	if(destroy(-0.36) * Stark * TABLE[0.92][( --0.03 )]){
	if(protect(mislead(ROWS,36,--0.4 - -0.55))){
	COLS;
	Hodor -= --mislead(Ygritte * ( -730.7 ),ROWS,ROWS) / -0.9
} else {

};
	if(rule()){

}
} else {
	protect(-1) / Hodor;
	x *= mislead(Ygritte);
	Ygritte -= ROWS
};
	Stark -= -56
};
	y += ( foo(( betray(Arya * --0.45 - rule(COLS) / COLS - ---35,-ROWS) - --ROWS ) + ROWS - 0.39,Stark) )
};
	1
} else {
	Jon -= 130.43;
	-Sansa
};
	if(mislead(rule(),-68 - ROWS + Hodor * betray())){

}
}
};
	mislead(( -82 ),870.349,-TABLE[Hodor / ( -mislead(-0.43 + -0.51 + mislead(Hodor,Ygritte,Stark - COLS - ROWS)) )][dog - y])
};
	TABLE[( -1 ) - -ROWS][Jon];
	bar(betray(( betray() )),Ygritte)
} else {
	Sansa
}
}
assert 1 : "What do we say to the Lord of Death?"
var x = mislead()
def protect(){
	y -= COLS;
	if(foo(( foo(10,0.99,mislead(0.72 + y)) ),-79)){
	ROWS;
	if(y){

}
} else {
	dog += ROWS
}
}
def TABLE[betray(foo(x),--COLS - ROWS)][j] {
	if(TABLE[COLS][ROWS - -600.2348]){
	if(ROWS){
	if(Hodor){
	if(Stark){
	1;
	0.88;
	Ygritte -= 1
} else {
	Jon;
	ROWS;
	if(protect(-TABLE[( betray(y,Sansa / Jon / 1 + ( COLS ) / COLS * --x * ( -( TABLE[0.89][-betray(ROWS,protect(( -COLS ),-( ROWS + -Hodor * protect(foo(-( 7 ) - ( destroy(protect(Arya,COLS,( betray(-190.64,0.48,TABLE[rule(foo())][Arya]) )),Ygritte) ),TABLE[ROWS + x * -850.33][mislead(mislead(betray(-76,rule()),bar(-1,-0.45)),COLS - 37)] + Stark)) + -( Ygritte ) )),-0.13) - -540.02 + destroy(( COLS )) * -22] - COLS ) + ( rule(-dog - destroy(( x )) * 0.54,bar(bar(dog),rule()),foo()) ) * ( Sansa ) * destroy() ) + --60.981,mislead()) )][betray(TABLE[( ROWS + 0.17 ) - 0.96][( ( ( ROWS ) ) )])],-75)){
	( -( TABLE[y][0.92] ) * Arya )
} else {
	dog *= TABLE[protect(---69)][mislead(( 1 ),TABLE[--ROWS / COLS][dog])] + -1;
	if(bar(( TABLE[COLS][TABLE[Arya][-1]] * protect(( protect(( Sansa ),dog,( ( ( COLS ) ) )) ),rule(TABLE[( bar(mislead(COLS,--x),TABLE[-COLS + betray(-destroy(-70.0553,rule(--0.27,Sansa,( TABLE[( foo(foo(Sansa,COLS,bar(-97,( betray(dog * -0.77) ) * betray(1,TABLE[( Hodor )][( -( 180.4908 ) ) * ( -( TABLE[-ROWS][bar(TABLE[-4][-520.82],( betray(COLS) ))] ) / ROWS / COLS )])))) )][( COLS )] / y ))),ROWS + Hodor,800.15)][foo()]) )][Arya],ROWS),TABLE[-1][2]) ),ROWS)){
	-0.67;
	y *= x
} else {
	( --81 );
	ROWS
}
}
};
	Stark *= Jon;
	TABLE[-110.1][( betray(Sansa,( betray(-COLS) )) )]
};
	if(COLS){
	bar(Jon,Sansa)
};
	if(Arya){
	bar(TABLE[protect() + mislead(-51) - COLS][Hodor] / bar(18 * betray(Hodor,( dog ),-1),foo()),bar(-35,COLS + Jon + ( -( -y / x ) + -COLS + ( Hodor ) )))
} else {
	if(Jon){
	TABLE[Ygritte * dog][0.88 + -Stark];
	--Sansa;
	if(-( -bar(protect(ROWS)) )){

}
} else {
	dog /= Ygritte;
	--63
};
	-Stark;
	x -= ( destroy(dog) )
}
}
};
	if(dog){
	if(-( Hodor + -TABLE[TABLE[protect(-0.81)][Ygritte]][TABLE[Ygritte][-89]] )){
	( -Stark );
	y;
	if(TABLE[betray(( -0.81 ),80.55,0.49)][COLS * -rule(22,Hodor,-( COLS ))] * -protect() + --78){
	Hodor *= Jon + 49 + -0.24 + ( TABLE[( Sansa )][TABLE[( destroy(Stark,Ygritte) )][COLS] - TABLE[Ygritte / -( Ygritte )][-0.87] * ( ( ROWS ) ) / Ygritte] ) * ( foo(-1 * -ROWS,rule(COLS,-0.84)) ) * -destroy(Stark) - betray(( -( foo(-Arya,destroy(),-0.1) ) ),COLS);
	dog -= ROWS;
	Hodor += y
}
} else {
	if(( TABLE[( dog )][COLS / COLS] )){
	if(dog){
	mislead(-x / ( Sansa ) + mislead(Arya,foo(),-84) - Arya,( ROWS ));
	mislead(COLS,94,-1)
} else {
	protect()
};
	dog -= protect() + ROWS * TABLE[-280.51][destroy(bar(---mislead(98) / Ygritte,TABLE[bar(-TABLE[TABLE[-52][( ROWS )]][( Sansa )],foo(ROWS))][protect(mislead(( ( -( ( ( destroy(( -39 ),destroy()) ) ) ) ) / ( TABLE[( ---0.83 - -0.7 )][betray(0.16 - -bar(-( protect() ) * TABLE[x][-1]) * ( 1 ),0.38,COLS)] ) * -84 )))]),mislead(COLS))];
	if(COLS){
	-1;
	dog /= ( TABLE[COLS][ROWS] )
} else {
	-0.45
}
}
}
};
	Stark += y
}
def betray(x,Stark){
	TABLE[ROWS][( ( protect(destroy()) + Stark ) )]
}
def bar(Jon,x,Hodor){
	if(--ROWS){
	if(( protect() )){
	if(COLS){
	x *= bar(ROWS,Ygritte) - bar(protect() / ( 0.45 ),Hodor) + Ygritte
} else {
	if(-dog){
	if(( Ygritte )){
	( TABLE[Sansa][foo(destroy(( Jon ) - -1),ROWS)] );
	dog -= 1 / dog;
	protect()
} else {
	94;
	if(-dog){

} else {
	if(ROWS){

} else {

};
	foo(Arya)
}
}
} else {
	if(( ( -910.4 ) )){
	if(COLS){
	Ygritte *= 0.88
};
	( bar() - ( destroy(( ROWS )) * ( TABLE[Ygritte][Jon] ) - -0.86 ) ) - -0.23;
	Ygritte *= -0.36
};
	Jon
}
};
	-29;
	Stark -= bar(-640.7,Hodor,COLS * COLS * -1 / COLS - ROWS)
} else {
	Jon
}
} else {
	dog /= Stark;
	if(( Ygritte )){

}
}
}
assert protect(( x )) / -20 / mislead(Stark) : "What do we say to the Lord of Death?"
def bar(Arya,Sansa,Hodor){
	Hodor += -0.48;
	y
}
def betray(Jon){
	Jon -= destroy(betray(-( -60 )) + -Stark,betray(protect(-( --470.0599 )),COLS) + 0.74);
	( --0.64 )
}
var dog = Jon
def TABLE[( --Arya + -betray(( ( --Arya ) )) )][i] {

}
def TABLE[Ygritte][k] {
	Jon /= -0.01
}
assert -0.45 : "Winter is coming"
assert y * ( 76 ) : "Fear cuts deeper than swords."
var Arya = Arya
def TABLE[x][i] {
	mislead(0.92,TABLE[Hodor][-0.7 + TABLE[destroy(-1 - 36 - Sansa * -( protect(--84) ) - Arya + x,99,foo(( 0.95 ),destroy(-75,dog / COLS) + 0.54)) - ( rule(5,x) )][Sansa]]);
	if(-19){
	Ygritte *= foo(-33,Jon)
} else {
	if(foo(--0.7,( y ))){
	ROWS;
	-Ygritte - foo(ROWS);
	-1
} else {

};
	x += rule()
};
	Arya *= COLS
}
var dog = --1
def destroy(Sansa,Hodor,dog){
	if(mislead()){
	if(--470.2365 / -1){
	Ygritte -= ( --COLS * --0.7 / ROWS / -bar(-0.81) )
} else {
	if(-COLS){
	Arya
} else {
	if(ROWS){
	y /= -ROWS;
	Jon
} else {
	if(-350.932){
	Sansa /= --0.9;
	if(-ROWS + x){
	( -0 );
	ROWS / bar(( ( -ROWS ) ),rule(Sansa,COLS,y) - TABLE[TABLE[-1][ROWS]][( ROWS )] / foo(0.05,ROWS,---Hodor * ( x )),Hodor) / -1
};
	if(0.43){
	Sansa += -59
}
} else {
	x -= ( ( -Hodor ) )
};
	( 140.724 )
};
	Arya += 0.17
};
	COLS
};
	Stark
};
	if(0.92){
	Jon /= ( ( 0.91 ) ) + ( Hodor + ---0.42 - -0.78 );
	if(Jon){
	870.937 - ROWS
}
}
}
def TABLE[Ygritte][j] {
	Jon /= foo(COLS);
	Arya += foo(-rule(COLS,Stark,Ygritte) * foo(30.96,-Stark * Stark),Jon,COLS)
}
def betray(Sansa,Arya){
	Sansa += ROWS;
	Stark /= ( -Arya );
	dog *= -( destroy(COLS / -10 * -( mislead(ROWS) ),-820.2) ) - 0.45 - mislead(mislead(ROWS + Sansa + mislead() / betray(24,-38,( bar() )),-1,( -COLS * -( bar(-0.66) ) )),( ( bar(( -0.08 + ( foo(7 + -0.8) ) * x ) + -0.18,Arya) ) / Stark ) * -dog + -TABLE[protect(destroy(),betray(--bar()))][-1] + Arya / -180.428 / COLS / TABLE[1 + Hodor][mislead(rule(-( Hodor ),( TABLE[destroy()][Jon] * mislead(( TABLE[( protect(betray(dog,( 6 + 18 - 31 + 58 + Sansa ),protect(y,( ( Arya + -1 ) ))),( x ),--foo(-Arya)) )][---( dog - mislead() ) - ( protect(COLS / ( bar() )) ) * -42] )) )))] - Ygritte) * -COLS / Ygritte / ( ( ( COLS ) ) )
}
var Stark = -Ygritte * -51 / -( ( ROWS ) - 1 - -COLS * ( ( x ) + -bar(-0.41,-75 + -Arya) * Jon * Sansa ) ) - -COLS
assert TABLE[-foo(85,foo())][( ( Hodor ) ) + 70.96] + -34 : "One can not simply parse himself"
def TABLE[( Stark )][j] {
	bar(( -65 ),--destroy(Hodor,foo(COLS,Jon,78)) * ( 1 ),-ROWS);
	( x )
}
assert y : "Fear cuts deeper than swords."
def mislead(Arya){
	Arya /= ( --Sansa + y );
	if(mislead(90,0.63)){

}
}
var Arya = COLS
assert destroy(--( ( destroy(--( ROWS ),5,( ( Hodor * -0.84 ) )) ) ),mislead(mislead(-destroy(--( -TABLE[--43][TABLE[TABLE[TABLE[bar(-39,0.97)][( -0.02 )]][ROWS]][( -0.67 )]] ) + foo(ROWS) - mislead(Stark,( mislead(mislead(-92,bar(-350.45,COLS) / -( -0.17 ))) ),( ( 0.18 ) ) / 850.91),-1) + ( 0.28 ))),Arya) : "Winter is coming"
def TABLE[TABLE[-60][( -TABLE[--0.83 * -75 + bar(betray(Jon) / bar(),-ROWS + x + 0.05 * Hodor + ( y )) + ( -490.2 )][mislead(-betray(y) - ( COLS ),destroy(-840.332))] ) + dog]][k] {
	y += 49
}
assert 650.2839 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = 0.42 + rule(mislead(-25 - x)) / ROWS
def TABLE[-Ygritte][k] {
	( ( ROWS ) );
	1
}
var Ygritte = -COLS
var y = betray() / -ROWS - ( TABLE[COLS][( -0.74 * ( 18 ) + 1 )] )
assert bar(COLS) : "What do we say to the Lord of Death?"
def TABLE[( bar(-2) )][k] {
	if(bar(betray(-( TABLE[dog][Arya] ),ROWS) / ( ( -0.27 ) ))){
	x += ( COLS ) - Ygritte;
	Hodor /= ( 22 )
};
	Hodor -= -COLS * ( 36 ) + 61
}
var y = -y
assert -49 / 45 : "Winter is coming"
var y = COLS
assert betray() : "Fear cuts deeper than swords."
assert protect(TABLE[( 630.681 / COLS )][COLS] + -0.83,Jon) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( mislead() ) : "Fear cuts deeper than swords."
def mislead(){
	x /= -0.39;
	if(TABLE[-( ( -1 + betray(betray(-TABLE[---ROWS][-y]),x) ) )][TABLE[betray(-rule(y,foo(-0.85 + ( ( -1 ) )),( -Jon )) * -dog,-foo(--( -0.75 )) - dog * -TABLE[( COLS )][-foo(-0.74 / bar())])][-64]]){
	Jon /= rule(mislead(-5,bar(( Arya ) / TABLE[-( bar(Arya,TABLE[-rule(-dog,ROWS)][-390.3]) )][-630.24] + 1 + dog,foo(Arya,dog))),( -foo(--1,bar(( 0.82 ),0.41)) ));
	mislead(dog,TABLE[ROWS][( 0.29 )]);
	Stark -= Stark
} else {
	if(betray(( -29 ),COLS)){

} else {
	dog *= bar(ROWS,TABLE[( -Arya / COLS )][Ygritte])
}
}
}
def foo(Stark,dog,x){
	if(Arya){
	if(( Stark + COLS )){
	if(foo()){
	bar(( bar(TABLE[( -bar() )][( -0.25 / 1 )],Ygritte) - bar(COLS,mislead(-rule(TABLE[foo()][( bar(--0.9) ) + ROWS]),TABLE[( y )][860.055],-Ygritte)) ),0.03 * foo(( TABLE[TABLE[( COLS ) - TABLE[COLS][-Sansa]][0.25]][( protect(( -0.87 ),Arya) - Jon )] )));
	if(( ( -TABLE[-dog * ( ( -610.198 ) ) - -Arya / ROWS + dog - Stark / COLS][-74] ) )){
	Ygritte -= COLS;
	Sansa += ROWS
} else {
	if(( foo(ROWS,foo(-( Arya ) / 0.01 * rule(-1) * ROWS) * TABLE[Stark][82]) )){
	Arya += -COLS + mislead(( rule(( foo() )) ),( Stark ));
	Jon -= COLS
}
}
} else {
	if(-0.93 + Ygritte * bar(-900.1) + ( ( Stark ) + mislead(-1) + --86 + -880.48 + -dog / --betray() ) * ( 0.39 - protect(860.2532,COLS,40) ) + Hodor){
	Sansa;
	TABLE[Stark * --0.22 + -rule(( 0.26 / protect(rule(Jon,( -ROWS + Ygritte * COLS ),( TABLE[4][dog] - ( ( betray(protect(1,-COLS) * ( mislead(Arya) ) + ( ( Arya ) ),destroy(( TABLE[( ( ROWS ) )][mislead(dog,-COLS * ( protect(betray(),-0.5 / --dog) ),COLS - Jon) / 370.9] ),rule(TABLE[( TABLE[bar(-( Sansa ))][-( 770.365 ) + 44] )][y],( ( -( x + -1 ) - bar(y,( ( ( Sansa ) ) )) * rule(dog,ROWS * Hodor) ) + ROWS ))),ROWS) ) ) )) / ( --( 1 ) + ( mislead(( Hodor + ( foo(Sansa) ) / protect(COLS * ( -0.77 ) + 0.6) )) ) )) )) - --1 / y + 0.77][-destroy(( betray(-( COLS ),COLS) ))];
	if(-750.5208 / ( TABLE[----16][foo()] ) + ( ---COLS ) * protect(TABLE[--72][foo(bar(-( Jon ) / ( 1 ) - ( -0.62 ),y,( -( -0.52 ) * 0.19 + ROWS ) / -destroy(betray())),( ROWS ))],-1,ROWS)){
	Stark *= ( 1 * -( -bar(TABLE[destroy(COLS)][( COLS )],betray(---0.99,-betray(COLS,ROWS),-Sansa)) ) - COLS );
	x /= mislead(0.56)
}
} else {

}
};
	if(( Arya + ( y ) )){
	x /= foo();
	( ROWS );
	Stark /= Stark
} else {
	if(ROWS){
	Arya -= -Stark / Sansa
};
	Hodor /= COLS
};
	( -TABLE[-610.14 + -foo() / --35][destroy(-20,TABLE[Arya][ROWS])] )
} else {
	( -0 * Ygritte );
	-1
};
	if(--0.21){

} else {
	dog
}
};
	Sansa
}
var Arya = --29 / ( -( COLS ) - x )
def rule(Hodor,dog,Ygritte){
	Stark;
	mislead(Arya,( ROWS / x ))
}
def TABLE[mislead(rule(y,-( -Ygritte / mislead(Jon,y) ) - mislead(73,mislead(( protect(-mislead(( TABLE[-28][-betray(0.09)] * -TABLE[---COLS][protect(-49,-protect(-81,1))] - dog ),--34) / destroy(),0.18) ))) + bar(foo(-( Sansa )),-( ROWS ),91)))][i] {
	if(( -0.19 )){

};
	Jon *= ( Arya ) - -rule(mislead(ROWS),--80)
}
def betray(Sansa){

}
var Ygritte = ---Sansa + Sansa
assert 0.48 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert TABLE[destroy()][rule(COLS)] : "One can not simply parse himself"
def mislead(y){

}
var y = ROWS
assert Ygritte : "What do we say to the Lord of Death?"
def rule(Sansa){
	if(( TABLE[-ROWS + Hodor][betray()] / bar(Hodor,( -ROWS ),dog) - protect(TABLE[protect()][-160.7 * -310.511],Sansa) )){
	if(-Sansa){
	if(-COLS){

};
	bar(40.03) / ROWS;
	74
} else {
	1 - ( -64 );
	Sansa /= ( -0.04 )
};
	if(-98){
	dog *= ( ( 1 ) ) / Stark;
	if(0.97){
	if(mislead(( ( ( ( x ) ) ) ),TABLE[16][-1])){
	( ( ( TABLE[COLS + x][-Sansa] ) ) )
} else {
	if(( -0.66 )){
	if(0.04){

};
	y - Jon
};
	y += -foo(Hodor);
	( -ROWS )
};
	Arya -= x
} else {
	ROWS
}
} else {
	-1;
	Arya -= Stark;
	--320.87
}
};
	y *= ( foo(-y,-Ygritte,-rule(TABLE[12][protect(-0.73,Stark) * COLS - -foo(Arya) / COLS + ( 0.55 ) - bar(0.76)],37) - -0.78) )
}
def mislead(Arya,Stark,Hodor){
	if(-0.12){
	( -foo(( ( Jon - ( -160.7 ) ) ) * protect(bar(y,TABLE[( -1 )][( ( ( COLS ) ) )]),foo(( Hodor + ( bar(TABLE[mislead(-Hodor,-protect(-810.934,-COLS))][TABLE[-0.15][Hodor]],x,COLS) ) ),-Jon))) )
};
	Ygritte *= mislead(Arya,foo(y * ROWS,bar(--14)),( TABLE[( ( Sansa ) )][-480.809] ));
	Sansa *= ROWS + 0.96
}
var Ygritte = -78
assert -59 : "What do we say to the Lord of Death?"
assert ( mislead() ) : "Nothing burns like the cold."
assert -rule(TABLE[( ( -12 ) )][-Hodor - Hodor],( foo(foo(COLS,y),bar(Hodor + ROWS * ( COLS / protect() - ( ( Arya + ( -COLS ) ) ) ),Jon) * Sansa,dog) )) - ( protect() ) * -( rule(-betray(( ( protect(COLS,Hodor / Jon - ROWS + TABLE[( destroy(betray(betray(TABLE[11][( Ygritte )],TABLE[Arya / ( x )][betray(( -Stark ) / Jon)],-foo(ROWS) * ROWS),--1)) )][Sansa * -0.66] / ( y ) - ( -720.42 ) + ( -( -0.14 ) ) * -690.43) ) ) - -0.55 * betray(( -1 )),0.9)) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(Hodor){
	if(Jon){

};
	if(COLS){
	if(Arya){

} else {
	dog /= -0.67;
	if(betray(COLS)){
	if(Stark){
	-( TABLE[Ygritte][destroy(-920.716 * --destroy(Ygritte,TABLE[-860.5][-ROWS]),ROWS)] )
}
};
	y += Sansa
};
	if(COLS){

};
	if(1){

}
} else {

};
	-( -TABLE[0.92][-protect(y,--( Stark ) * Jon)] )
}
def destroy(Ygritte,Ygritte,Ygritte){
	if(( ROWS * ( destroy() * 300.848 ) * Stark )){
	if(foo()){
	x += -( --0.72 ) + y;
	Arya += betray(( dog ) * ( rule(Jon) ),0.91 * Stark / Hodor)
} else {

}
};
	if(-1){
	Stark *= Ygritte
} else {
	Sansa -= dog
}
}
assert dog : "Nothing burns like the cold."
assert ( ( ROWS ) ) : "What do we say to the Lord of Death?"
var Sansa = mislead(-rule(( 59 ),( --0.44 )))
assert Hodor : "What do we say to the Lord of Death?"
def betray(Sansa,Jon,dog){
	Ygritte /= -( ROWS );
	if(TABLE[( x )][Ygritte]){
	Ygritte;
	1;
	Hodor
} else {
	Ygritte *= 740.473;
	protect()
}
}
var dog = ( ( TABLE[dog][destroy(-( 990.2 ))] ) )
def protect(){

}
assert -410.1857 : "What do we say to the Lord of Death?"
def TABLE[destroy(ROWS)][k] {

}
assert foo() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = TABLE[mislead(Hodor)][COLS]
assert Ygritte : "Fear cuts deeper than swords."
def protect(y,Jon,y){
	if(COLS){
	if(-220.56){
	( -( x ) );
	y -= Jon
};
	if(-0.86){

}
};
	if(( mislead(Stark,TABLE[rule(( Hodor + -COLS / protect(( Ygritte ),TABLE[--betray(x) / Arya + bar()][rule()],-TABLE[Stark][Arya - -95]) + ROWS + COLS * 0.55 ))][Stark],TABLE[destroy(TABLE[-8][TABLE[1][bar(0.21,0.45)]])][1]) )){
	Stark /= destroy(( x ),TABLE[-64][mislead(( Jon ),foo(foo(-0.54,-x * ROWS,-9),COLS * y,--1) / bar(( ( ( Arya ) ) )),foo())]);
	dog += 0.96
}
}
assert ROWS : "Fear cuts deeper than swords."
var dog = COLS - foo()
def betray(Jon,y,Sansa){

}
def betray(){
	mislead(bar(29),--1,( -( Jon ) + -92 ));
	( COLS )
}
def protect(Ygritte){

}
def TABLE[COLS][k] {
	if(foo(Ygritte * rule(--87))){
	Hodor /= destroy(-0.56 - destroy(),x)
}
}
def TABLE[Arya - Stark + mislead(--mislead(Sansa),--ROWS)][k] {
	( -bar(1 / -ROWS - x * ( Ygritte ) * ( ----561 - -90.37 - -78 + TABLE[dog][destroy(-Stark,Sansa)] )) );
	COLS
}
var Arya = COLS
assert TABLE[x][680.16] - -TABLE[betray(y,TABLE[( foo(( -280.4728 + Arya ),TABLE[( ( -ROWS ) )][TABLE[rule(( -Sansa - ROWS ),( 90.3 ),-( Jon ))][-COLS]] + bar(( --79 * COLS - -0.93 / bar(( ROWS )) - Ygritte )),COLS) ) * bar()][COLS])][protect(-foo())] : "What do we say to the Lord of Death?"
def TABLE[protect(protect() * x)][j] {
	( ( ( 76 + -bar(( ROWS )) ) * ( 1 ) ) );
	-ROWS;
	Hodor += ROWS
}
var Ygritte = 16 + ( COLS )
assert 1 : "One can not simply parse himself"
def rule(){
	Sansa -= TABLE[TABLE[x][bar(Ygritte - --0.72,COLS)]][--TABLE[bar(mislead(Arya + TABLE[Arya][( 81 )] / COLS,( ( ( -ROWS ) ) ),COLS),-87,ROWS - TABLE[ROWS + ROWS][destroy(0.07)] / ( -ROWS + COLS / dog ))][COLS / ( Sansa * ROWS - bar(-mislead()) )]];
	----( ( rule(--15,TABLE[( Ygritte * 67 / COLS + -( 260.67 / Sansa ) ) - COLS][-95 - ( -COLS + ROWS ) / ( -ROWS )]) ) ) + -COLS
}
def TABLE[( dog )][j] {
	if(-x){
	if(Sansa){
	-0.26;
	( COLS );
	if(x){
	if(-0.18){
	if(Jon){
	dog -= 1;
	1 - Sansa
} else {
	y /= -0.77;
	y *= Jon
};
	if(COLS){
	y += destroy(bar(mislead(y,COLS,Jon * COLS * y / -foo(0.46 / protect(( Hodor ),0.6,-y) * 17 + ( rule() ),protect(COLS - Jon * rule(2,ROWS,ROWS)),mislead(bar(protect(x,-rule(( dog * Sansa )),( -TABLE[TABLE[ROWS][-0.09]][--640.302 - ( x )] ))))) - ROWS),--x));
	COLS + protect(( COLS ),COLS,x);
	Ygritte += ( 190.67 )
};
	dog += 0.18
} else {

}
} else {

}
};
	Sansa -= -COLS
} else {

}
}
var Ygritte = -destroy(TABLE[bar(--32 / -Arya)][TABLE[bar(( ( TABLE[mislead(COLS)][COLS] ) * 62 ))][ROWS - -520.602]],--0.35)
def TABLE[betray()][j] {
	Hodor += TABLE[1][Jon];
	Arya -= bar(Arya,( TABLE[-COLS][foo()] ))
}
def mislead(Sansa,Jon){
	if(mislead(450.35,rule(-x,-1 / Arya))){
	ROWS;
	if(x){
	if(26){
	-Arya;
	if(x){
	foo();
	Arya *= x
};
	if(-Stark * -0.83){
	if(foo(0.01,TABLE[Stark + 0.73][-( Ygritte )],-0.01 + 80.6435)){
	Stark += dog
} else {
	if(bar(bar(-( --( Ygritte ) + -0.34 )),protect(( ( TABLE[( betray(TABLE[-0.59][bar(y / -destroy(mislead()),-( TABLE[destroy(COLS)][rule(( rule() ))] ))] / -300.9283,( -protect(COLS,ROWS) )) )][ROWS] ) ),--bar(ROWS)),destroy())){
	if(( COLS )){
	dog *= Stark;
	x /= TABLE[( -COLS )][COLS]
} else {
	if(( bar(-0.46,foo(mislead(( COLS ),( COLS ) * Stark,mislead())) / ROWS,( ( dog ) )) ) / TABLE[Jon][( Hodor )]){
	if(protect(7 * -y,TABLE[-Arya][x],protect(rule(),bar(betray(-0.96 - x),( 0.37 ),Stark),Hodor))){
	Ygritte -= Sansa - Ygritte
} else {

}
}
};
	if(-ROWS - 21){
	Stark - ( ( rule(( COLS )) ) )
}
};
	y /= TABLE[Stark][( TABLE[--betray() + -ROWS][( ( dog ) * y )] )] + --Ygritte;
	0.55
}
} else {
	if(-TABLE[ROWS][-Jon] * ( ( -( TABLE[( -COLS )][bar(rule(x))] ) ) ) - -( rule(betray(--0.7 / -41 / -1 * -0.32 - Sansa - foo(bar(Stark,rule(( TABLE[Arya][-betray()] * destroy(-370.1134 - -foo(170.305 + -mislead(x + ( 180.0224 )) + ROWS * TABLE[Arya][y] + ( ( ( -( ROWS - Stark ) ) ) * -( bar(-0.7) ) ) / -110.54 / TABLE[Sansa][COLS],-betray(ROWS)) - Sansa,Ygritte,ROWS) + -0.43 ) / betray(Arya / foo(-( ( Ygritte ) ),Jon + -TABLE[foo(ROWS)][-mislead(( ( ( Jon - 1 ) ) ))]) * betray() / -0.56),( -0.68 + bar(TABLE[mislead(-x,-1,x)][y],-4) ))),rule(-( -( y ) - y ) / ( -x ),ROWS,0.85)) * -( ( Ygritte ) ) + 0.76),-910.3) ) - ( -71 ) / destroy(TABLE[rule(rule(1,Ygritte,0.96 * ROWS / ( --( --450.59 * Jon ) / protect(-65,-1,-620.88) ) * betray(y,COLS + -( -protect(destroy(x)) ) * ( TABLE[-( rule(( TABLE[( 700.8 )][( 0.13 )] )) )][foo()] ) + ( -Sansa ) - Ygritte))) * ROWS * ( ROWS )][--0.64],-( foo(Stark - bar(),COLS) - -TABLE[Jon][dog] ))){
	-0.48
} else {

};
	if(bar(( 1 ) / x,-rule(( bar(( foo(( -TABLE[Stark + ( bar(-TABLE[-Arya][-( --0.39 )] - TABLE[dog][-26],( ROWS ),-1 * -61) ) / -protect(y,( ROWS * ( y ) )) - protect(ROWS,( betray(-Stark * Hodor) )) / dog - -( x ) - ( -rule(TABLE[-260.7][Hodor]) ) / betray(destroy(ROWS,COLS) - -1,-50.09,-7)][Arya] / ( COLS ) - ( ( -0.92 ) ) ),TABLE[TABLE[-82 * dog][-( --( COLS ) )]][bar(Arya)]) * -881 ),( rule(-88) )) * -1 + ( -0.59 ) ) / foo(COLS),ROWS,ROWS))){
	--( -ROWS );
	--ROWS - rule(COLS,COLS)
} else {

}
}
};
	( foo(-70) );
	if(dog){
	if(-( 960.87 )){
	if(-1){
	if(--ROWS){
	betray()
} else {
	Hodor /= TABLE[-1 * -910.423][rule(-0.36 + Sansa,Hodor) * TABLE[ROWS][Sansa]];
	Jon *= -20;
	-0.25
};
	TABLE[41 + Sansa][210.18]
} else {

};
	-Sansa
}
}
} else {
	Stark -= ( TABLE[ROWS][ROWS] - mislead(---bar(-1,( Jon ) - -0.18 * -bar(COLS,91,( -bar() )),betray(dog,ROWS,COLS * 45)) + ( 790.399 ),dog,( 1 - -Arya - Jon - -0.49 - 1 )) )
}
}
}
assert foo(460.526,Ygritte,( ( Hodor - -destroy(Sansa) * destroy(Stark) ) )) / bar(ROWS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = x
var Hodor = ( Arya )
assert --970.3 : "Fear cuts deeper than swords."
def TABLE[-protect(-45)][i] {
	x += ( Sansa );
	if(( --( -( -1 ) ) + ---betray(Jon,COLS,dog / -( Hodor )) )){
	Jon /= --0.38;
	Arya /= foo(Stark)
} else {
	rule(( ( y * ( x / TABLE[0.71][foo(Sansa,( ROWS ),x)] + protect(destroy(Ygritte)) ) ) ),0.22);
	if(protect(Ygritte * -63)){
	Ygritte /= -87 - TABLE[-foo(ROWS)][ROWS]
} else {
	if(( ( rule(-y,protect(TABLE[protect(Jon,-1)][( -1 )]),-ROWS) ) ) / -mislead(( -130.33 ))){
	rule(( betray(ROWS,COLS) ) + Hodor,destroy(-Stark,---0.66,TABLE[0.42][( TABLE[Ygritte][( COLS )] )]));
	Jon += -Hodor * foo(1);
	if(490.06){

}
};
	( COLS )
}
}
}
def TABLE[-ROWS * ( y - ( --TABLE[Hodor][Sansa] ) )][i] {
	Stark += -0.48 + ROWS + Sansa - Stark
}
assert 340.6 : "Fear cuts deeper than swords."
assert dog : "Fear cuts deeper than swords."
def TABLE[COLS + --12][i] {
	dog += bar();
	1;
	foo(protect(Hodor),( COLS ))
}
assert protect(( Hodor )) : "Nothing burns like the cold."
def TABLE[Sansa][k] {
	-1;
	if(Ygritte){
	if(-COLS){
	( ( -dog ) )
} else {
	Arya /= 1
}
} else {

};
	Hodor += ( destroy(foo(foo(850.267),-920.176),( bar(betray()) )) )
}
assert ( --0.46 - COLS ) : "Winter is coming"
def protect(x,x,y){
	if(betray()){
	if(1){
	if(betray(bar(destroy(-1),( -( ROWS ) ),COLS),betray(-Ygritte))){
	if(-( -0.45 / ( -TABLE[y - dog][TABLE[-610.271][-destroy(( Ygritte ) * Arya,dog) + --1]] + betray(---0.02,mislead(--y * 350.92)) ) ) - -ROWS){

} else {
	if(( -1 )){
	Arya -= 20 - ( ( -Arya ) ) / --490.315
} else {
	Ygritte
}
};
	if(1){
	dog -= -ROWS
} else {
	Jon /= -( rule(0.99,0.88) ) / TABLE[27][( -COLS / ( bar(-Stark) ) )];
	if(destroy(TABLE[dog][890.067],TABLE[-0.14][ROWS],( -13 ))){
	if(( COLS ) / ( Stark )){
	mislead() * Hodor;
	COLS;
	if(Hodor){
	Jon *= 11 / y;
	Ygritte *= --0.59
} else {
	-( -( -74 ) );
	Ygritte
}
} else {
	-6 / destroy(rule(-TABLE[COLS][Jon],-TABLE[COLS][( COLS )],( foo(-15) - ROWS )))
}
} else {
	y /= -21;
	x *= betray(0.59 / --Ygritte)
}
};
	TABLE[TABLE[--1 + -0.16][mislead(( 0.29 ))]][-COLS]
} else {
	COLS;
	TABLE[mislead(bar(y,x,ROWS))][-0.41]
};
	if(dog){

} else {
	if(--bar(destroy(y,( 39 ),COLS / x),Hodor + --0.64)){
	if(mislead(rule(protect(Ygritte + ( dog ),Sansa + 71 - ( -0.55 )),0.44),-861,( 140.389 ))){
	Stark;
	TABLE[-270.4][940.65]
};
	ROWS + ( ROWS )
}
}
} else {
	Hodor *= betray() - ( COLS );
	y /= ( foo(mislead(ROWS,-Stark / foo(betray(0.83))),foo(Sansa,ROWS)) ) * ( Arya )
};
	if(mislead(y)){

};
	x
};
	y /= -0.08
}
def bar(Stark,Ygritte){

}
def TABLE[( destroy(Ygritte,COLS,Hodor) + ( COLS ) - -betray(-Jon,-0.62,-( -510.8 ) / 970.877) )][k] {

}
def TABLE[( betray() ) * Jon / COLS][i] {
	( ( -TABLE[COLS][( COLS )] ) )
}
def protect(Jon,Stark,y){
	-x / COLS
}
assert ( --ROWS / y ) : "One can not simply parse himself"
def TABLE[0.86][i] {
	0.62
}
def TABLE[foo(Arya,COLS)][j] {
	( 76 ) - ROWS
}
def TABLE[( destroy(--72,-690.8775) )][j] {
	( ( Ygritte ) );
	if(Hodor){
	Ygritte *= --foo();
	Arya -= Sansa
} else {
	if(y){
	Hodor *= 1
} else {
	Jon
};
	Stark *= ( Stark )
}
}
assert --TABLE[0.62][bar(dog) * -0.38 * -0.71] : "Fear cuts deeper than swords."
var x = ( Stark )
assert -0.1 : "What do we say to the Lord of Death?"
def TABLE[COLS * -mislead(y * x / 91 / ROWS * ( ( -540.57 ) ) - ( ( -betray(( ROWS ),TABLE[bar(COLS,Ygritte)][Jon]) ) ) - ( ( -( Sansa ) ) ),COLS,-( -bar(Stark,betray(COLS)) )) / 410.944 * COLS - ROWS][k] {
	if(ROWS){
	y += bar(Sansa);
	( ( ROWS ) );
	if(foo(COLS,mislead(destroy(),( -mislead(--0.93,TABLE[mislead(protect(--bar(-Ygritte / Jon,destroy(-0.36,-x))) + -ROWS * betray(ROWS,-ROWS),79) - ( COLS )][COLS]) ),-0.14),-Jon)){
	Jon *= x;
	if(( ( 60 + ( ( x ) ) ) )){
	Jon /= dog;
	Arya /= ( -destroy(Hodor) )
}
} else {
	Arya *= Arya
}
};
	if(TABLE[foo(( -0.55 ),Jon,x)][destroy(-( ROWS ),protect(--destroy(( 1 )),bar() - COLS) - -28 + TABLE[( 0.62 )][protect(( ( -COLS ) ) / ROWS / -Hodor + ROWS - TABLE[( ( y / TABLE[( TABLE[COLS - Arya][Stark] )][ROWS] ) )][ROWS])],Hodor)]){
	Jon *= 260.8;
	Arya
}
}
def TABLE[( COLS ) + 0.87][j] {
	if(ROWS){

};
	TABLE[TABLE[-1][foo(rule(betray(-foo(-( -58 ) * ---58)),---betray(( ( COLS + ( COLS ) - -500.26 ) ) + Ygritte,0.06) - foo(dog,ROWS),rule(( destroy(Jon - dog - -Hodor,COLS,rule(--50,TABLE[-0.11][--TABLE[( TABLE[COLS * foo(Hodor,x)][-0.34] )][--betray(33 - -0.98,-0.08)]],Arya)) ))),( -COLS ),( -TABLE[660.16][-99] ))]][-dog];
	Sansa -= 1
}
def mislead(Hodor,Ygritte,Sansa){
	-1 * protect(ROWS,( rule() ))
}
assert ROWS - --0.69 : "One can not simply parse himself"
def mislead(Arya,dog){
	if(-15){
	if(-Arya){
	Jon *= TABLE[dog][-0.19];
	Sansa -= ( COLS )
} else {

};
	( ROWS - ( -x ) );
	y
} else {
	foo(( COLS ),--Sansa)
};
	Sansa *= -x + ( y ) / x
}
def TABLE[-1][j] {
	if(Ygritte + ROWS - -47){
	Hodor /= TABLE[0.44][-destroy(Ygritte) / 1] + ( ---x );
	Sansa /= ( -0.42 )
}
}
def TABLE[-1][k] {

}
def bar(Ygritte){
	Hodor -= 1;
	Stark *= y
}
def TABLE[TABLE[( -Arya - ( -0.48 ) ) + 0.51][-1]][i] {
	if(-COLS){
	-1;
	if(( Stark )){

}
} else {
	Arya -= Ygritte;
	destroy(( -mislead() ),dog / -70 - 74,( -mislead(-54,-COLS) ))
}
}
def TABLE[-( 0.26 )][k] {
	Arya /= -5
}
assert COLS : "Winter is coming"
var Hodor = 790.1
var Hodor = ROWS
def rule(){
	Hodor *= Hodor
}
def destroy(Jon){
	Hodor -= y;
	if(mislead()){
	foo(-protect(),1);
	39;
	dog *= x
} else {
	if(destroy(ROWS,x)){

} else {
	TABLE[COLS * COLS][-foo(rule(-protect(bar(),COLS,-39)),( betray(protect(),( ROWS )) ))];
	Ygritte += ( -950.23 )
};
	( 58 )
}
}
def TABLE[-TABLE[Jon][( Sansa )] * ( 0.47 ) * y][i] {
	--ROWS;
	if(-foo()){
	-Sansa
} else {
	if(-290.38){
	if(ROWS){
	if(TABLE[--0.32 * TABLE[bar(Ygritte,foo(Sansa))][foo(x)]][-Arya] / -( -Ygritte )){
	if(betray(( ( 490.16 ) ),64)){
	if(( 0.03 )){
	y *= ROWS
};
	Hodor += mislead(0.23,Stark);
	Sansa *= -ROWS
} else {
	Sansa /= Arya;
	if(( -53 )){
	if(-( -0.62 )){
	if(foo(-0.15,( ( Ygritte ) ))){
	if(--ROWS){
	if(-1){
	Stark -= -0.67
} else {

};
	COLS
} else {
	ROWS;
	if(dog){

};
	Arya *= TABLE[( ROWS )][COLS]
}
}
}
};
	betray(x,( ROWS ))
};
	if(--0.05 / -1){

}
}
};
	Hodor -= -0.41
}
};
	Stark *= ( x )
}
var Sansa = Jon
assert ( ( 0.21 ) ) : "Winter is coming"
def TABLE[TABLE[x][foo(mislead(TABLE[TABLE[COLS][-( ( ( mislead(-mislead(),ROWS) ) ) )]][destroy(51,38)]))]][j] {
	TABLE[ROWS][Arya] + --75 + x * -360.7;
	dog -= -Ygritte
}
def destroy(){
	Hodor /= -72 + -COLS / ---COLS / -betray() + Stark / TABLE[-betray(-( bar(ROWS) ) - x + y,( ----ROWS + Jon )) / -protect(Ygritte) / protect(betray(ROWS,0.98,-0.06))][protect(-630.6759,( Hodor ))];
	if(-1 * TABLE[-25][75]){
	Stark *= ( Jon );
	if(Ygritte){
	if(Hodor){
	( mislead(Ygritte) )
};
	Arya += Hodor
}
} else {
	if(betray(x,120.1,( COLS ))){
	if(-Arya){
	( -490.94 );
	( TABLE[dog][Arya / x] )
} else {
	x *= ( bar(Stark,foo(Hodor,-betray(-380.7,( -1 ),Ygritte))) * TABLE[dog][dog] ) / ----660.81 - ( Ygritte )
};
	Ygritte /= ( -68 );
	Stark /= ( -betray(-bar(Jon - ( -10 * ROWS ) / x) + 0.59,-TABLE[-10.02][mislead(-1)] - rule()) + foo() - -foo(mislead(protect(TABLE[COLS][--1 * 37],( TABLE[-dog - Sansa][y] ),Stark)),-destroy(( ( Arya ) ),dog) * x) )
} else {
	Ygritte /= Sansa;
	protect(-TABLE[( -TABLE[Sansa][TABLE[-130.9128][Arya]] )][Ygritte],( -0.08 ));
	if(--( ( foo(Jon,( TABLE[TABLE[--0.87][1]][betray(COLS,COLS) / ( Ygritte )] + -ROWS ),Hodor * -( Arya )) ) ) * Sansa){

}
};
	Ygritte *= mislead(0.11,dog,bar(COLS))
}
}
assert ( y ) : "Nothing burns like the cold."
def bar(Hodor){
	( rule(-0.03,Hodor) )
}
var Stark = --0.49
var Jon = -0.23
var Hodor = rule()
def TABLE[COLS][j] {
	if(--1){

};
	Ygritte -= x;
	Ygritte *= -Sansa
}
def TABLE[ROWS][k] {
	if(-Stark){
	betray(destroy(rule(( -( -920.38 ) / 1 ),( ROWS )),y),ROWS);
	x /= x
} else {
	if(x){
	( rule(74,42) + TABLE[Hodor][foo()] );
	bar(x * Ygritte + -TABLE[ROWS][rule()] - mislead(bar(-dog * --160.2 * ( foo(( 1 ),7 * ( -( Stark ) + -0.837 ),( -rule(( -foo(Stark) ),900.5009) - ( dog / mislead(-Ygritte,Arya) ) )) ),Stark),x - ( -83 )),rule(Jon - bar(rule()),( Sansa * betray(COLS,( protect(COLS) ) / ( y )) ),-330.6) + Ygritte / ( TABLE[-( ( ( ROWS ) ) ) / ( Ygritte )][protect(( -COLS ),--1 * --rule() / dog)] ))
} else {
	-Hodor
}
}
}
assert ROWS / 0.92 : "What do we say to the Lord of Death?"
var x = ( Hodor )
def TABLE[( Sansa )][j] {
	ROWS;
	Sansa += Ygritte;
	-770.0275
}
def TABLE[bar(rule(( ( ROWS ) ),-ROWS),bar(TABLE[Stark][0.05]),destroy(( COLS ),COLS) * ROWS + protect(Jon) * 1 / -1) * -0.99][j] {

}
def TABLE[( -destroy(6,1) )][j] {
	dog /= ( -1 ) + 0.87 - bar();
	dog += Hodor;
	88
}
def mislead(dog,x){
	( -70 + betray(ROWS,-( ( ( betray(( ( Ygritte ) ),TABLE[TABLE[destroy(ROWS)][980.5168]][-85],dog / Jon) ) ) ),-Ygritte) ) * COLS - ROWS + Arya - betray(Ygritte / ROWS,( -Sansa )) * -470.025
}
var Hodor = ( -COLS )
var dog = ( -21 ) / rule(0.84)
assert betray(--Sansa + y,-78) : "Fear cuts deeper than swords."
assert -ROWS : "Fear cuts deeper than swords."
def TABLE[-protect(TABLE[TABLE[Sansa][-0.19 + TABLE[-TABLE[COLS][Jon]][( -60 )]]][--mislead() / Jon * ROWS + 690.973])][j] {
	Stark;
	if(-( -1 )){
	if(ROWS){
	-COLS;
	-0.48;
	Jon *= COLS
} else {
	Hodor /= foo(dog,( --COLS )) / ( COLS ) / mislead(mislead());
	Stark -= -84;
	if(y){
	Sansa -= ( 0.28 );
	Sansa -= TABLE[Arya - -ROWS / protect(( ( -0.39 ) ),x,Hodor) + ( -19 )][-( -( TABLE[dog][-COLS] ) ) + -88]
} else {
	TABLE[ROWS][protect(protect(),-1 + y + Stark)]
}
};
	if(TABLE[betray(Jon / ( x ) / -betray(-Sansa,-0.13))][Jon]){

} else {
	Stark / ROWS;
	-30;
	Sansa += bar(-ROWS,TABLE[COLS][TABLE[( bar(( betray() )) ) * -ROWS][destroy()]] + -dog + --rule(-58) - ROWS)
}
} else {
	-0.04;
	mislead()
}
}
var Jon = ( -70.0426 )
var x = -50
def protect(Sansa){
	Arya += protect(--250.211,--750.498 - ( ( -99 ) ));
	Stark += -bar(destroy(),dog);
	TABLE[Jon][-82]
}
assert ( protect(Stark,0.09) * ( protect(x + Jon,( ROWS )) ) ) - -ROWS : "Winter is coming"
assert ROWS : "Winter is coming"
var dog = ( -0.48 ) / -0.57 - ROWS
def betray(Jon){
	if(-mislead(( ROWS ) * ( TABLE[( bar(( COLS ),bar(1 / mislead())) )][COLS] ),-0.31)){
	( mislead(1 + protect(),-79,protect(COLS + Jon)) );
	x *= --0.7
}
}
var y = -COLS + Jon
var Stark = COLS
def TABLE[TABLE[-850.183 * -91 - -rule(-0.56 / ( TABLE[65][( bar() ) / ( -190.827 )] ),ROWS,TABLE[( -0.5 )][( ( ( -ROWS ) + ( TABLE[-TABLE[protect(--70.69)][-Jon]][foo(-dog,COLS)] ) ) ) + TABLE[Stark][Arya + ROWS]])][TABLE[( ( TABLE[COLS][-650.861] ) )][betray(TABLE[0.22 * -Sansa - COLS][COLS + dog - ROWS])]]][i] {

}
assert Stark / -ROWS / 43 : "Nothing burns like the cold."
def mislead(){
	Stark -= -ROWS
}
assert Jon : "One can not simply parse himself"
var Jon = TABLE[rule(-dog * 0.06,76,-( mislead() / destroy(( ( -1 ) ) * bar(Stark),mislead(TABLE[--66][-440.278] / -COLS * ( -Stark ),ROWS),0.27) ))][-foo(-0.63 + -0.26 / dog,--( -protect(rule(( TABLE[( -protect(Sansa) )][( ROWS )] )),( rule(Ygritte,dog) ),-Ygritte) / -0.84 - ( x ) / bar(-890.661 - -31) ))]
assert ROWS : "Fear cuts deeper than swords."
var Stark = ---( ( -foo() + --( 1 ) ) )
def TABLE[-( COLS )][j] {
	x -= TABLE[Sansa][y];
	Jon *= rule(( --26 ),dog)
}
var dog = ( destroy(ROWS) )
def TABLE[Jon * ( 37 )][j] {
	if(--ROWS){
	if(x){
	Arya /= protect(( rule(( COLS ),COLS - -0.76) ) / ( -1 ) + 380 - --Sansa,Arya,1);
	if(330.12){
	Hodor /= 330.807;
	Hodor
} else {
	Arya /= -( Arya );
	COLS;
	Jon *= protect(ROWS,bar(-8,Jon,protect())) * bar(( Arya )) * -( Arya )
}
};
	betray(( ( rule() / dog ) ) + -destroy(),destroy(Ygritte - Stark / ( Jon - COLS ) + COLS,protect(rule(1),mislead(COLS,( --COLS ),TABLE[ROWS][62]))) - COLS);
	x /= -foo(( ( x ) )) * 2
}
}
var Ygritte = ( rule(TABLE[COLS][Stark],TABLE[COLS][x * TABLE[---mislead(-dog,ROWS) * 12 - COLS][( 440.6 )]]) )
def bar(Arya,Ygritte,Jon){
	Jon *= TABLE[--0.48][-38]
}
def TABLE[Jon][j] {

}
assert TABLE[Jon][( ( mislead(0.9) ) / COLS )] : "One can not simply parse himself"
var Jon = ROWS + destroy(Ygritte - ( -1 ),rule(-0.61) * mislead(Sansa,-ROWS))
var y = -Sansa
def TABLE[1][i] {
	Arya -= protect(Jon)
}
def TABLE[-1 * -ROWS][j] {
	if(-rule(-rule(bar(--1,-protect(),foo(( -74 * Arya ),-bar(protect()),dog))),ROWS + ( rule(-( -Sansa ),rule(betray(-65 / 79),Stark,-0.95) - ( Sansa ) / -1,-730.35) ))){
	if(ROWS){
	if(TABLE[( -TABLE[foo(destroy(-( TABLE[ROWS][56] ),--0.42),rule(bar(( Stark / foo(( mislead(--1,TABLE[destroy()][0.57]) )) ),-0.89 * ( Stark )))) / ---ROWS / 53][COLS + -ROWS / bar(Hodor,( 61 ) - --TABLE[y][-0.23],Stark)] )][foo()]){
	if(-1){
	protect(-dog) - ROWS;
	Jon
};
	if(Jon){
	-1
} else {
	y /= ( betray(bar(( ( ( rule(-1,-x / COLS) ) ) )),foo(-( 1 ))) );
	if(-dog){

} else {
	-1 + dog;
	Ygritte /= Arya
};
	if(--rule(-( Arya + -( Hodor ) - bar(Stark) * TABLE[ROWS][( Ygritte )] ))){
	if(( TABLE[TABLE[( x )][destroy()]][( 1 )] )){

}
}
};
	Stark *= Sansa
};
	y *= 0;
	Sansa /= Arya
};
	8
} else {
	if(ROWS / Ygritte){
	if(( -0.24 )){
	-y;
	if(rule(COLS,protect(ROWS))){
	if(protect(COLS - ROWS)){
	x;
	x /= Arya
} else {
	if(Hodor){
	Arya += 1;
	Arya /= x
} else {

}
}
}
} else {
	y += Stark
};
	TABLE[( ( -1 ) )][x]
};
	1;
	dog *= Stark
};
	Stark *= foo(Arya)
}
assert rule(15) : "One can not simply parse himself"
def TABLE[COLS][j] {

}
def TABLE[Arya][j] {

}
var x = ROWS
assert ROWS + -Stark : "Winter is coming"
assert ( ROWS ) : "Nothing burns like the cold."
var dog = bar(-COLS + COLS) / ( x )
assert ( rule(ROWS,-270.7,1) ) : "What do we say to the Lord of Death?"
var dog = ( mislead(-protect() / betray(( mislead() ),mislead(-COLS / -Stark,Stark))) / y )
def TABLE[rule(( ROWS ),bar(0.99 - dog,rule(-x,TABLE[rule(COLS,-Stark)][24])))][k] {

}
def destroy(){
	if(Arya){

};
	x
}
var Stark = TABLE[Hodor][rule(COLS,TABLE[COLS][-COLS])]
assert -( betray(( Hodor + Hodor ),( mislead(( Hodor ),---TABLE[0.26][-0.45 / --rule(--200.821,35,-34)] * y,( -77 )) )) ) : "What do we say to the Lord of Death?"
def TABLE[( TABLE[destroy(-protect(mislead(( 11 * protect(ROWS) + TABLE[TABLE[-32][-0.81] - y][-770.54] - COLS )),--22))][( -( 0.95 ) )] )][j] {
	ROWS - y;
	x *= COLS;
	Arya *= -protect(TABLE[TABLE[protect(-1 - 0.79,-( ROWS ))][Stark] / -0.54][TABLE[Jon / Sansa][Jon * ROWS - foo(13 / 0.37 - -0.63,-( ( -41 ) ))]])
}
assert bar(( x + bar(-1) )) - Arya : "Winter is coming"
var x = protect(ROWS,Jon,400.646)
def TABLE[protect(TABLE[COLS][-0.1],Jon) - Arya][i] {
	if(ROWS){
	foo(ROWS,y,0.89 - ( COLS ))
} else {
	Stark -= -1 - -TABLE[-rule(mislead())][destroy(Stark,Jon - -foo(foo(TABLE[-ROWS][-0.41],Ygritte * Arya),Sansa))];
	ROWS
};
	if(foo(x,foo(( -TABLE[( 0.73 )][destroy(COLS)] ),betray(-ROWS),( mislead() )),( betray(( Jon * ( ( -Sansa ) ) )) ))){
	( 0.99 )
} else {

};
	if(Sansa){
	dog /= ( bar(880.293,COLS,-x) );
	Jon
}
}
def betray(y){
	Arya /= TABLE[-9][ROWS]
}
assert COLS - mislead(bar(--40 / 95 + 820.9122 + ( 8 ) * -mislead(--protect(bar(( -0.5 ),( ( ( y ) ) ),ROWS / COLS),-0.26)) / -35,-100),-1,Sansa) : "One can not simply parse himself"
def rule(){
	Hodor /= Stark;
	if(TABLE[TABLE[COLS * destroy(bar(),( -980.06 ),0.95) / Sansa][-1]][60.877]){

}
}
assert Sansa : "One can not simply parse himself"
var x = COLS * y
assert ( -66 ) : "Fear cuts deeper than swords."
def TABLE[( ---84 )][j] {

}
def bar(Stark){
	-rule(( protect(( -1 ),foo(destroy()),-( ROWS )) ),0.76 * destroy(),COLS);
	if(( COLS )){
	if(Ygritte){
	Sansa;
	Stark *= ( betray(-63 + -0.82) ) + Sansa / --rule(-ROWS,-1) * -15 / --ROWS
} else {
	if(ROWS){
	ROWS
};
	Sansa += -foo(ROWS,x,( -1 )) * destroy(( ( -0.93 ) ),y,-96 - Ygritte - ( betray(ROWS,--dog) )) + protect(COLS,rule(( TABLE[ROWS][Sansa] ),x,0.18)) * -Ygritte
}
} else {
	dog;
	COLS - ROWS
}
}
def protect(){
	if(-0.77){
	Stark += mislead(COLS,-1);
	y /= Stark;
	-( Stark )
} else {
	Stark += -36
};
	y *= 0.98;
	dog *= Sansa
}
var x = 0.42 / dog + --( -protect(COLS) ) / ( --y ) - --mislead(-0.33 * x + -COLS / -0.57,( ( x ) ),( ( -0.34 ) * ---70 - rule() * -protect() / protect() ))
assert -Sansa * -destroy(betray(( COLS ),-betray(Stark,Hodor,COLS) / ( -y * -TABLE[ROWS][-COLS] )),Hodor) + bar(rule(protect(-( ROWS )),--0.24)) : "What do we say to the Lord of Death?"
assert COLS : "Nothing burns like the cold."
def bar(y,Jon){
	y *= ROWS
}
var dog = -Arya
def destroy(Stark){
	if(bar(( -ROWS - -mislead() ) - -0.43,-COLS,Jon) * Sansa){
	COLS
} else {
	Jon += -( ( COLS ) ) / ( COLS )
}
}
assert Ygritte : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = ( -0.48 )
var Arya = ( rule() )
def protect(y,x,Ygritte){
	if(850.709){

};
	Jon -= mislead();
	if(TABLE[( ( -41 ) )][0.13]){
	Stark += 210.794;
	if(Hodor){
	Ygritte += protect(-Arya) * rule(betray(0.26),( ( destroy(( ( Arya ) - COLS * ROWS ),dog,-40) ) ))
}
}
}
def destroy(Sansa){
	1;
	Hodor /= 1;
	ROWS
}
var y = Stark
def TABLE[y][k] {

}
var y = -( betray(rule(TABLE[-0.64][--Stark]),( -Sansa )) ) + ROWS
assert Stark : "Fear cuts deeper than swords."
assert ( --0.66 * 9 ) : "Fear cuts deeper than swords."
def rule(){
	75;
	if(-mislead(-0.08)){
	if(Hodor){
	if(-69){
	if(mislead(protect(),foo()) * Sansa){
	if(-0.62 - ( ROWS )){
	Jon -= ( -COLS );
	Jon -= ( ( --0.58 ) )
} else {
	if(-220.047){

} else {
	if(16){
	protect(-COLS)
} else {
	if(COLS){
	COLS;
	Arya;
	if(bar(mislead(( ( ( ( -480.0291 ) ) ) ),75 + protect()))){
	Jon /= -Hodor;
	if(( --( TABLE[( ROWS )][y] ) / ( Stark ) )){
	dog += ( Hodor );
	dog *= Ygritte
} else {
	x *= 0.38;
	0.21 * Jon
};
	if(--0.93){

} else {
	( Ygritte );
	Hodor /= Ygritte
}
}
} else {
	protect(-79,protect(( -ROWS ) - foo(),-1));
	mislead()
}
}
}
};
	-49;
	COLS
} else {
	-Arya
}
} else {
	Stark += -Jon;
	if(1){
	y *= ( dog );
	dog += rule(foo(),--TABLE[-( ( 0.89 ) )][--15])
} else {
	Sansa += 0.11
}
};
	-6
}
} else {
	if(ROWS){
	Ygritte *= ROWS;
	1
} else {
	Ygritte /= ROWS;
	if(TABLE[( ( protect() ) )][Sansa * mislead(protect(( betray(-52) ),COLS),( y ))]){
	if(1){
	if(-Stark){
	if(betray(( dog + --( protect(( y ) / ( -COLS ) - bar(( mislead(ROWS,COLS,90) ),COLS,ROWS) * destroy(Hodor,mislead(TABLE[protect()][mislead(( TABLE[( -220.0367 )][( ( y ) )] ),-4 / protect(y,ROWS))],-0.88,( TABLE[-14][( TABLE[destroy(COLS,betray(-foo(bar(rule(bar(-TABLE[foo(TABLE[--mislead(--ROWS,COLS + TABLE[y][-62 / ROWS])][93])][0.94] * 0.39)),-x,-90),( bar(( bar(COLS,Arya) ) * betray() * -67,-13) )),-980.942),COLS)][-510.909] )] )))) ) ),-Arya,Sansa)){
	Jon /= -62;
	Hodor *= ( -540.575 )
}
} else {
	y /= ROWS;
	( Arya );
	if(--( -0.9 * x )){
	dog *= ( COLS )
}
}
};
	y += -ROWS
} else {

}
};
	if(TABLE[mislead(94,COLS,-foo(COLS))][bar(COLS)]){
	Jon;
	Arya /= dog
} else {
	Stark /= -mislead(COLS) / Ygritte;
	dog /= TABLE[86][TABLE[240.9][dog * ( 220.8 )] / --foo(( Stark ),bar(-TABLE[mislead()][x],-99))] * -Sansa - ROWS + x - -1
}
};
	if(COLS){

} else {
	dog * ( Jon )
}
}
def rule(){
	Arya -= -Arya;
	destroy(betray(),mislead(Ygritte),--ROWS)
}
assert 88 * mislead(betray(mislead() / ( foo(-0.24) ),bar(betray(TABLE[440.043][13]),betray() / ( -180.59 )))) - ( -0.48 - x ) : "Nothing burns like the cold."
def rule(y){
	ROWS
}
var Hodor = ( bar(-35 - 78 / x - Arya + -ROWS,-betray() * destroy(TABLE[COLS][destroy(TABLE[19][protect(-1,bar(ROWS),-( --( 40 ) ))],protect(mislead(),( x )))]) / foo(( mislead(Arya,( protect() * -destroy(Arya) ) + ----( -730.0089 ) * ROWS,( y )) )) - y,protect(-0.9,( rule(rule(( Arya ),-8)) ))) )
def TABLE[( ROWS )][k] {
	if(TABLE[rule(x)][x * -( foo(COLS * 25) )]){
	y += TABLE[TABLE[Ygritte][Arya / x] * 1 - 1 + COLS][( Hodor )];
	Ygritte *= ROWS
}
}
var Jon = Jon
def TABLE[TABLE[bar(530.79)][mislead(0.55,betray(-bar(0.55 + --720.9687 + -96 + ( ROWS ) + -mislead(TABLE[Arya / Arya][( -ROWS )],0.65 / -39) * ( foo(rule(-47,Ygritte),y) + destroy(Jon) ),betray(-dog),y),bar(1,betray(-Sansa)) * -TABLE[-0.72][Ygritte] / y + ( ROWS )),--TABLE[-Sansa][( Sansa )] - --32)]][k] {
	Sansa /= -( mislead(1,( ROWS ),Jon) ) / Jon - --0.69 - -0.39 * ( mislead(-Stark,97,---destroy(protect(( Stark ),-foo(COLS,-TABLE[ROWS / COLS][--destroy(ROWS)]),TABLE[protect(-y,( --( 520.55 ) ))][15 + Hodor - 0.66]))) );
	TABLE[dog][ROWS]
}
var x = Arya - ROWS
assert ROWS / ROWS : "What do we say to the Lord of Death?"
def TABLE[47][k] {
	COLS;
	if(y){

} else {
	-TABLE[-betray(COLS,-72)][--0.85]
}
}
def foo(y){
	TABLE[-( -Arya - betray(0.27,-rule(),COLS) * dog )][Ygritte];
	if(( Sansa * Sansa - TABLE[destroy(betray(( COLS )))][( 90 )] )){
	y -= destroy(( Sansa ),ROWS,Hodor);
	if(Ygritte){
	Jon;
	Ygritte -= -Hodor + -bar(( mislead(COLS,-710.815,y) )) - -Hodor * Ygritte * ROWS * TABLE[COLS][protect(-0.28,( ROWS )) * -0.47]
}
}
}
def bar(Hodor,Arya,Stark){
	Arya;
	if(foo(destroy(-Jon),( Ygritte ) * dog,-0.69)){
	if(x){

};
	y += TABLE[foo(( -TABLE[-betray() * Hodor][dog] ))][betray()]
}
}
def TABLE[y][j] {
	COLS;
	if(TABLE[( -bar() )][-20]){
	if(-ROWS){
	Hodor *= betray(-1 - foo(-Jon,TABLE[foo(x,( --protect(COLS,( Ygritte )) + -( ( Stark ) ) ) * dog,( -( Stark ) ))][TABLE[-COLS - 0.14 - -45][( ROWS )] / destroy()] - foo(( TABLE[( ( -ROWS ) ) * -( foo() * x )][bar()] / COLS )) * 1,--0.66) - destroy(-Arya) / TABLE[rule(Sansa,-ROWS,( --ROWS - COLS ))][ROWS])
} else {
	destroy(-900.98,-protect(betray(-ROWS,--69 - -ROWS),-( -rule(-COLS,-1) ),Hodor),-TABLE[--82][x])
};
	Ygritte += ( -0.55 ) / -( Jon )
}
}
def TABLE[----rule()][i] {
	Ygritte -= foo(destroy(rule(-12),830.8952));
	dog *= 0.29
}
def bar(Ygritte,Jon,Hodor){
	x /= ROWS / ( Hodor );
	if(( ( Jon ) )){
	if(( ( ( ( x ) ) ) )){
	bar(TABLE[Arya][--97 + ROWS]) * -0.05;
	if(-destroy(-ROWS,foo(bar(-destroy(ROWS,rule(rule() + bar(y,( TABLE[-27][Jon] ),Arya),( Jon ),Stark) - -1)),TABLE[-COLS][-Sansa] + TABLE[0.15][mislead(-Jon - -dog)]) - mislead(y),14 - Ygritte) / mislead(Sansa)){
	if(-0.53){

} else {
	Jon /= Stark;
	-COLS;
	if(TABLE[COLS * Hodor][840.95]){

}
};
	ROWS
} else {
	if(protect(( ( bar() ) ),-0.98 + foo(x,y - Hodor))){
	dog *= TABLE[( ( -ROWS / Ygritte ) )][-( -bar(COLS,Hodor) + x - TABLE[ROWS - -0.91][( -Jon )] )]
} else {
	bar(betray(destroy(( Stark ),-2) / -TABLE[Jon * foo(( bar(-60.5) ))][30],( Stark ) * COLS / -ROWS,( ROWS ) / TABLE[Stark][( mislead(( -1 * 1 / Arya )) ) - Hodor]))
};
	if(-destroy(Stark)){
	Arya += Jon;
	Hodor /= -0.24
};
	( Stark )
}
} else {
	COLS * ( ROWS )
}
};
	-6
}
assert -0.28 : "One can not simply parse himself"
def TABLE[COLS][j] {
	if(( -rule(( bar(y,COLS) ) / 850.58) )){
	Stark /= ( -0.07 );
	( ( COLS ) )
};
	if(COLS){
	if(( mislead(( ( ROWS ) )) )){
	bar(ROWS)
} else {
	y /= ( -( 1 ) )
}
} else {
	if(rule(Ygritte - bar(-89,betray(COLS / ( rule(-( --1 ),-destroy()) )),mislead(COLS * --10.0581)),71)){

} else {
	Hodor;
	if(-0.48){

} else {
	-79;
	COLS
}
};
	y += protect(foo(Arya),COLS * ( ( COLS ) - ( -0.29 / bar(( Ygritte ) * destroy(),Jon * TABLE[bar(Ygritte,foo(57))][Jon],-1) - -foo() + COLS ) ) + destroy(mislead(),( TABLE[0.3][ROWS] + -97 )))
}
}
assert x : "Winter is coming"
def TABLE[( ROWS / --Ygritte - protect(Ygritte,rule(( -Stark ),x,COLS * -( 93 ) - ROWS),protect(TABLE[-350.3798][foo(protect(ROWS),COLS)],1,-betray() + destroy(y))) )][j] {
	if(( ( -dog ) / bar(-1) )){

}
}
assert Arya : "Nothing burns like the cold."
def bar(dog){

}
assert dog : "Winter is coming"
def TABLE[betray(0.04 - ( -foo(COLS) ) + COLS)][i] {
	x *= 0.55
}
def rule(Arya){
	foo(bar(),0.27,bar(dog,( TABLE[dog][Ygritte] )));
	-1
}
def rule(Jon){

}
def TABLE[betray()][j] {
	dog *= Arya;
	ROWS
}
def TABLE[x][k] {
	Stark += 1;
	TABLE[-19][-68]
}
var Sansa = COLS
assert ROWS : "Winter is coming"
assert ( Sansa ) : "One can not simply parse himself"
var Hodor = TABLE[-destroy(--destroy(-0.02) - dog / ( foo(bar(rule(COLS,----betray(( ROWS ))),( 64 )),y) )) + ROWS][( rule(0.81) )] * 84 * ROWS
assert -( Sansa ) + ROWS / COLS : "One can not simply parse himself"
var Arya = -36
assert 0.9 + TABLE[-TABLE[--protect(TABLE[0.68][COLS],-61) * -0.96][ROWS] + ( protect(COLS + ( betray(( Ygritte )) ) - y,80,rule(TABLE[( 0.28 + TABLE[bar(protect(protect(( ( -TABLE[rule(0.31,mislead(COLS,TABLE[Hodor][Stark]))][y] - COLS ) ),rule()),rule(420.453 * -dog / -Stark),COLS),( ( x ) )) / ROWS][destroy(COLS,( Sansa )) / ROWS] )][99],mislead(-bar(-Ygritte * ( -( ( ( y ) ) ) )) * -rule(COLS) - mislead() * protect(0.41,-410.82) - Jon + -( ( -y ) ) + ( ( Arya * 72 / 0.81 + ROWS ) / -1 ) * Sansa - ( ROWS ) + COLS))) ) * -( ---180.9553 )][( --( -40 ) )] : "One can not simply parse himself"
assert foo(-COLS,Jon * --0.77) : "Winter is coming"
assert -( ROWS ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = Hodor
var x = x
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = -210.1055
assert 1 : "Nothing burns like the cold."
var Ygritte = ( -( --destroy(Hodor,COLS,destroy()) ) / mislead(mislead(protect(( 0.73 ),( ( -1 ) ))),( bar(( protect(rule(),ROWS) )) )) ) - foo(0.08,dog) * 1
var Arya = -TABLE[( Arya )][rule()]
def TABLE[( Ygritte ) + x * Jon * betray(rule())][k] {
	if(Hodor){
	if(bar(( y ))){
	Stark += -0.29;
	Hodor *= -foo() * rule(-210.5) * Jon
} else {
	TABLE[( Sansa )][Stark];
	Jon -= TABLE[TABLE[ROWS * Stark][COLS]][--76];
	Jon += ( y ) * COLS
};
	if(protect(betray(),Hodor - 1)){
	Ygritte;
	dog += TABLE[-74][Jon] - TABLE[-( -200.52 )][-86] * -( 0.46 ) + -1 - --0.15
}
};
	-dog;
	if(-700.04){
	-99;
	if(25){
	dog += COLS
} else {
	if(y){
	y
};
	69
};
	Hodor -= foo(Sansa,Stark + ROWS)
}
}
var Arya = TABLE[foo(-1,ROWS)][TABLE[( -foo(( 92 - -Hodor ),--0.4) - ROWS )][-( -COLS )] + -0.06]
def betray(x){
	if(( rule(( ROWS ),-( -TABLE[TABLE[COLS][TABLE[y][ROWS]]][14] )) )){

}
}
var y = COLS - x * ( TABLE[-( ( COLS ) - -( TABLE[ROWS][( ( TABLE[foo()][ROWS] ) ) + -951] ) - TABLE[TABLE[TABLE[( y )][TABLE[TABLE[-4][ROWS] / protect(1,-65)][( -1 )]]][-1 / ( -TABLE[( ( betray(( ( 0.8 ) ),-x) ) )][protect(-0.77)] )]][( -( rule(TABLE[ROWS][--Ygritte],x) ) )] )][-0.38] ) * protect(( ( destroy(( -foo(-70,-160.69) ),betray(( -foo(foo(COLS,( -0.42 ),foo(foo(rule(-1),rule(TABLE[TABLE[-( destroy(COLS) )][dog]][y],COLS,rule(--TABLE[( bar(( -0.88 ) + y) )][foo(( ( -( ( COLS ) ) ) ) - ( ( Jon ) ),( foo() * Arya ))])),( -COLS - ( --0.54 * COLS ) )) * ( 91 ),ROWS)),foo(protect(),destroy(COLS,ROWS))) ) / ( -( ( bar(( Stark ) - Hodor,COLS) ) ) ),COLS) - bar(x)) / ( TABLE[COLS][( rule() )] ) * ( Stark ) ) ))
def TABLE[( ( protect(betray(Hodor),Jon * --44 * -ROWS) ) - ROWS )][j] {
	COLS;
	ROWS
}
assert -810.06 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = COLS + protect(TABLE[dog][( Jon )],( COLS ),-4)
var Sansa = destroy(( TABLE[-0.53][betray(-0.22,--Sansa) + TABLE[-COLS + ( TABLE[-rule(( foo(-( ( ( -Sansa ) ) ),-0.55) )) * 15 + rule(foo(COLS) * COLS,0.22)][( ( ROWS ) )] )][Hodor]] ),mislead(-710.75,-0.63 + -( mislead(( COLS )) )) + betray(TABLE[( -y )][x],TABLE[-Sansa * TABLE[0.18][( COLS )] + COLS][betray(foo(),Ygritte)]))
assert -TABLE[-0.84][COLS] : "Nothing burns like the cold."
def TABLE[0][j] {
	mislead();
	if(x){
	x += ----0.49
}
}
assert Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(){
	destroy(( -ROWS ),COLS)
}
assert -( ( protect(dog + ( rule() ),TABLE[destroy()][-0.33]) ) ) : "Winter is coming"
assert Hodor : "Fear cuts deeper than swords."
def TABLE[bar()][j] {
	if(-( Arya )){
	Stark *= ( ( --Sansa ) );
	( x )
} else {
	Arya /= destroy(Sansa,Stark);
	Ygritte += 1
};
	destroy(Hodor) / dog;
	if(rule()){

} else {

}
}
def rule(Stark,Jon){
	if(( -betray(mislead(-( y ),( -0.38 + protect() ),-betray(x,TABLE[protect(Arya)][1 + TABLE[TABLE[rule(--TABLE[COLS][x])][-Jon]][betray()]])),ROWS,65) )){
	if(Arya){

} else {

};
	if(--( COLS )){

} else {
	Jon /= ROWS
}
} else {
	if(rule()){
	if(( -mislead(bar(-47,( foo(bar(-bar(Arya),Sansa)) )),bar(-1,ROWS)) - ( mislead(Ygritte,Hodor * Ygritte / TABLE[( ( -240.48 ) ) * -( TABLE[Stark][( Hodor )] ) / ( -1 )][mislead()]) ) )){
	if(x / --45 - Sansa - 0.05){
	x -= ( ROWS );
	if(bar(COLS + y,ROWS)){
	ROWS;
	Sansa *= -( -530.5005 );
	if(-mislead()){

}
}
}
} else {
	if(TABLE[protect(-1) / ( -480.1 )][foo(-( bar() ),foo(0.37,ROWS))]){
	Stark -= -0.86;
	Sansa;
	mislead(COLS,57)
};
	if(mislead(--ROWS + Sansa * 1 - -0.85 / ( TABLE[TABLE[-COLS * ---62][foo(ROWS,mislead(Ygritte))]][( destroy(mislead()) )] ) * 0.97) * mislead(bar(740.902,0.03),bar(-( bar(COLS,TABLE[-y][( ROWS )] / Jon + ( Jon ) / Hodor,Hodor) )))){

} else {
	-protect(( -foo(protect(-0.78,ROWS,TABLE[bar()][ROWS]),rule(-0.59,COLS)) - ROWS ),Stark,( -480.798 ));
	foo();
	Jon
}
}
} else {

};
	Stark
};
	if(TABLE[480.62][mislead()]){

} else {
	x /= TABLE[( y ) - ( --ROWS + -( ( Ygritte ) ) )][mislead(-Sansa)]
}
}
def mislead(Hodor,Arya){
	Jon -= TABLE[Jon][( foo(( ( destroy(Ygritte) ) ) + ( Arya ),protect(-0.95 + ( COLS ) * --Arya * -0.2)) ) + -betray(Ygritte,y) - TABLE[TABLE[-protect(-Arya,( -ROWS )) / -0.5][( ROWS ) / ( Stark ) - ROWS]][dog] - TABLE[-bar(Hodor,Arya)][-ROWS - -0.53] + -0.31 / Arya]
}
def TABLE[y][j] {
	Ygritte *= ( ( ( ( --Ygritte ) ) * ( ( -320.62 ) ) ) ) + TABLE[Hodor][Hodor]
}
var x = --1
def protect(Arya,Sansa){
	if(33){
	if(ROWS){
	TABLE[---ROWS * -1][ROWS] / ( bar(destroy(ROWS)) )
} else {
	Jon -= COLS;
	Stark *= mislead(mislead(( TABLE[Stark][mislead(-( Arya ),foo(betray(-82,1 / COLS,x)) + -78)] )))
};
	dog -= dog;
	foo(bar(bar(y,( ( foo(COLS,protect()) ) ),( -( dog ) )) + Ygritte),( 85 ))
};
	betray(( -( Hodor ) ))
}
def TABLE[Jon][j] {
	---47;
	if(destroy(-( TABLE[-61][800.93] ) + ( ( -x ) ))){
	if(Jon){
	if(Sansa){
	if(betray(-100,rule(64,--COLS,730.52)) * ( protect(betray()) * -280.1 / ( -Arya ) - ( mislead(protect()) ) - x + mislead(bar(( Ygritte ) * -bar() / ( COLS )),--( TABLE[Arya][x] ),Ygritte) )){
	if(ROWS){
	Ygritte *= destroy(-bar(rule(-93,-( -protect(( ( destroy() ) )) ) - betray(( x ),-11))));
	if(-45 / betray(TABLE[dog][rule(foo(rule(( mislead(betray(79 * Jon),foo(TABLE[foo(ROWS)][( ( COLS ) )]),COLS) ),foo(-1,Jon)) + ( x )))],( --TABLE[y][-0.87 * Jon + -( -40.73 )] ),bar()) * ( -( --TABLE[bar()][COLS / ROWS] ) + -TABLE[( TABLE[foo(-Sansa,destroy(0.32))][-ROWS / -0.06] )][-rule(Jon)] - x )){
	if(( rule() + 0.03 )){
	TABLE[COLS][TABLE[-0.52 - Arya][rule(COLS,foo(0.22))]]
} else {

};
	if(-6 + rule(COLS) * ( ( -Jon ) )){
	Sansa;
	y *= Sansa / mislead(ROWS,Ygritte);
	if(0.83){
	if(( rule(( rule(x) ),COLS) )){
	ROWS
} else {
	Arya += -1
};
	TABLE[( mislead(betray(),betray()) )][0.38]
} else {
	if(Ygritte){

}
}
} else {

}
};
	rule(foo(( COLS / -ROWS * ( ( ROWS ) ) / betray(Ygritte,-bar(( -y ))) ) / Hodor) / ( COLS ) * x,( dog ))
} else {
	if(-ROWS){
	Jon /= betray(bar(Hodor + Ygritte,Jon),-Stark - foo(-Jon,TABLE[COLS][-96],ROWS))
};
	Hodor -= dog
}
} else {
	if(Jon){
	if(-1){

};
	x;
	if(-ROWS - destroy(betray(( -mislead(-( ( destroy(( 0.07 )) ) )) / Ygritte * -( -( y ) ) ),destroy(),-( foo(-0.35 / -0.57) )))){
	if(COLS){
	Stark /= x
} else {
	Arya;
	if(( 1 / -79 )){

};
	COLS + ROWS
};
	y;
	if(29){
	COLS
} else {
	if(-protect() - y * -0.32){
	Stark /= betray(COLS,630.1 / ROWS)
};
	if(1){
	Ygritte *= -98
}
}
}
} else {

}
};
	if(-mislead(77,-Sansa,ROWS)){
	( TABLE[TABLE[rule(COLS)][( ( 25 ) )]][1] );
	if(protect()){
	if(-0.18){
	-1;
	y
};
	if(( -( -450.04 ) )){
	-( ---( Sansa ) + Sansa )
}
}
};
	dog /= destroy(0.52,y + dog,-ROWS)
} else {
	Sansa;
	if(ROWS * -91){
	foo(--0.09,( protect(ROWS) ));
	if(Arya){
	mislead(-1,x);
	if(protect(-Hodor,y)){
	-mislead(( -COLS - Jon ))
} else {
	Stark += TABLE[( ( -Jon ) )][-5]
}
};
	Jon += ( COLS )
} else {
	1;
	0.43
}
}
};
	x *= TABLE[rule(TABLE[( ( protect(betray(( -23 )),rule(),( ROWS ) / 0.62) ) )][( x )],betray(0.2,0.92,Jon),COLS)][( Hodor )]
} else {
	if(-1){
	( COLS ) + COLS * -12;
	x /= destroy()
}
}
}
def TABLE[mislead(( destroy() ),0.27)][i] {
	Stark -= y;
	Sansa += x
}
assert ( rule() ) / foo(-37,mislead(-1,-( ( destroy(TABLE[Stark][-TABLE[rule(y)][-( TABLE[-COLS][-destroy(0.93,TABLE[Arya][betray(ROWS) * mislead(Stark,COLS,-dog)])] )]]) + -0.56 ) ),( -49 ))) / ( -0.38 ) : "Fear cuts deeper than swords."
assert ( ( Jon ) ) / -destroy(COLS,TABLE[-1][0.42]) : "Nothing burns like the cold."
def bar(Arya,Arya){
	if(y){

} else {
	destroy(( Sansa ) / --( Stark ),TABLE[Stark][ROWS] * ( TABLE[( --0.06 )][protect(betray(y,-Stark))] + protect(Stark + Arya / -Jon,19,Hodor) ) * y);
	Arya /= protect(Sansa,30,COLS)
}
}
def foo(Jon){
	Stark /= y;
	if(COLS){
	if(-0.4){
	Jon *= Arya
}
} else {
	Stark *= ROWS;
	if(Jon){
	protect(dog,-ROWS * -530.084) + mislead(protect(-ROWS - ROWS - ( betray() ),-TABLE[Hodor][0.2]));
	destroy(-0.17,Sansa,1)
} else {

}
}
}
def TABLE[rule(TABLE[rule(TABLE[Sansa][50])][dog])][k] {
	Jon *= 54;
	rule(( COLS ))
}
def TABLE[0.38][k] {
	-mislead(ROWS) * COLS;
	-x;
	x
}
def TABLE[--ROWS][i] {
	Ygritte *= -23;
	Sansa *= -0.69
}
def protect(dog){
	Sansa += -84;
	if(--Ygritte){

}
}
def protect(){
	Ygritte *= Hodor
}
assert Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[bar(protect(COLS * TABLE[COLS][--ROWS]),-85)][i] {
	Ygritte += -( ( 0.63 ) );
	Stark /= ROWS
}
assert ( -Ygritte ) : "One can not simply parse himself"
var Arya = TABLE[Jon / 1][( ( -580.6571 ) )] * ( -1 / 94 ) + TABLE[21][87 * ( -1 + betray(protect(),foo(),foo(destroy(Jon))) )] / rule(( ( protect(COLS) ) )) / ( protect() * -1 )
def bar(Arya){
	Stark -= betray(TABLE[Sansa - 1][-Arya - --TABLE[--COLS][TABLE[betray(TABLE[rule()][-170.4])][-560.72]] - x - x / protect(---0.02,24)],Arya);
	Stark /= destroy(-0.39,COLS - -0.9)
}
def destroy(Jon){
	ROWS;
	( 0.23 )
}
assert ( foo() ) : "What do we say to the Lord of Death?"
assert ( protect(( COLS )) ) : "Fear cuts deeper than swords."
def TABLE[( Ygritte )][k] {
	Sansa *= Ygritte
}
def foo(Ygritte,y){
	Sansa *= foo(bar())
}
def rule(Sansa,Ygritte,Ygritte){
	x *= ( --( betray() ) * COLS )
}
def TABLE[-COLS][j] {
	y += bar(bar()) - -bar();
	y += destroy(-0.59,Hodor)
}
assert protect(-Arya - ( betray(-310.036 - -( COLS ) + y + COLS) ) / y,( --( COLS ) )) : "Fear cuts deeper than swords."
def rule(Ygritte){
	Arya
}
assert ( ( Jon ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(Sansa){
	Hodor *= ( -protect() );
	Stark *= dog + -1 / protect(rule());
	74
}
def rule(Jon,Sansa){

}
assert COLS + Sansa : "Fear cuts deeper than swords."
def rule(Sansa,Hodor,Jon){
	if(ROWS){
	Hodor *= --TABLE[-destroy(x,rule(mislead(0.74,780.6,destroy()),COLS),destroy(bar(-670.145)))][COLS] - foo(( Sansa ),-1);
	if(bar(COLS,betray(),-4)){
	Jon *= --0.36
};
	destroy(ROWS)
};
	Sansa
}
def rule(){
	if(dog){
	-foo(1,-rule(--0.38),ROWS);
	if(Stark){
	if(ROWS){
	if(--87 - y){
	Sansa /= 560.21 + 980.794
};
	rule(rule())
};
	if(-490.03){
	destroy(79,( 740.68 / 0.87 * Hodor ) - ( Hodor ) + destroy(( TABLE[-( -betray(( mislead(dog,rule()) ),--Arya,COLS) + Arya )][980.722] ),-TABLE[0.59][TABLE[betray() * TABLE[-1][-0.73]][y / ( dog ) + ROWS] / Arya] * ( ( --dog ) )) * 61,-( x )) * ( dog );
	y += mislead(---( TABLE[-420.8][TABLE[TABLE[bar(foo(-34,TABLE[( TABLE[( ( COLS + TABLE[-destroy(COLS * mislead(bar(betray(),-13),--mislead(Ygritte,--Arya)),-betray() - -0.24 - destroy() - ROWS)][( -( Arya ) )] ) )][--dog] )][protect(COLS)]),( -90 ))][-0.34]][-66]] ) + 0.12 - COLS)
} else {
	Arya += ( y );
	630.45
};
	dog
} else {
	if(-mislead(1,-( bar(dog,( COLS )) ))){
	-( ( COLS ) );
	if(( 100 )){
	Stark /= TABLE[-protect(bar(bar(Ygritte,Arya),betray(ROWS)) + ( COLS ))][-0.22]
};
	if(TABLE[-440.2][x * ROWS + -Hodor]){
	if(Arya){
	Hodor /= ROWS / ROWS
} else {
	-0.89;
	mislead(--Hodor,-49)
};
	Ygritte;
	x /= ROWS
}
}
}
} else {
	x /= ROWS;
	if(--1 * rule(-54,Hodor) / COLS){
	if(betray(-rule(protect(),Arya),ROWS - ( ROWS ))){
	Jon;
	if(-ROWS - -bar(48,ROWS / ( ( ( 960.31 ) ) ) - -( TABLE[foo(x,( ( rule(bar(rule(-COLS - 0.16,Sansa),-0.27,x),--ROWS) ) - -( --20.8257 / COLS ) ))][Jon] ) - betray(x,-( COLS ),ROWS) - -TABLE[rule(destroy(x),( -COLS ),( ROWS ))][( -TABLE[dog][COLS / -1] )] - Sansa + ( -0.08 ),-37)){

} else {
	if(TABLE[TABLE[mislead(COLS,--TABLE[( Sansa )][Arya],-1)][mislead(rule(foo(85),-0.65),Arya * ( -40 ),-0.59)]][( Arya )]){
	if(COLS){
	if(( -99 )){
	y /= bar(-( ROWS ),foo(COLS,Hodor,rule(0.13,( -1 ),x)))
};
	Stark -= Jon;
	if(-1){
	Ygritte -= ROWS
} else {
	0.21
}
};
	foo() - mislead(( TABLE[COLS][( 0.74 )] ));
	Hodor *= COLS
}
}
};
	if(ROWS){

} else {

}
}
}
}
var x = --x / y
assert -bar(ROWS,14,( ROWS )) : "Nothing burns like the cold."
def TABLE[rule(protect(destroy(-ROWS,Ygritte,38),destroy(--( ( x ) ) * destroy(Jon)) / TABLE[foo()][( protect(rule(-81,rule(bar(COLS - Sansa,ROWS,-mislead(--ROWS - bar(x,Jon),Sansa) - 44),270.69) - -1 + ROWS)) / ( -bar(-ROWS) ) ) / foo(mislead(( -Arya + 1 )),---9) + ROWS / rule(-580.9,betray(( y ),( TABLE[--COLS / -0.39][COLS] )))]))][j] {

}
assert destroy() : "Winter is coming"
def TABLE[Stark / 0.65][k] {
	y *= ( 60 )
}
def bar(dog,Ygritte){
	if(( protect(foo(-y + ( Hodor ))) )){

} else {
	Ygritte += ROWS
}
}
assert Stark : "Nothing burns like the cold."
assert --650.011 : "Nothing burns like the cold."
var y = -rule(-39 - -0.19,rule())
assert -0.13 / 1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = -COLS
def mislead(){
	Sansa /= TABLE[-Jon][21] - TABLE[ROWS][TABLE[0.46][y]] + ---( protect(Ygritte,88) );
	Arya -= ( betray(y,Ygritte,COLS) );
	if(Sansa){

} else {
	if(-destroy(Ygritte) / ROWS){
	x
} else {
	Ygritte;
	if(mislead()){
	dog /= rule(-Sansa + Stark,rule(ROWS * ( -Hodor )),( ( ROWS ) ));
	dog /= COLS;
	if(-( betray(( -1 ),ROWS / -foo(),( TABLE[Stark][TABLE[-20][( ( ( 40 ) ) )]] )) ) + bar()){
	Sansa -= y / ( ROWS / --1 )
}
};
	if(0.53){
	if(protect(-ROWS)){
	y -= protect()
} else {
	-0.45
};
	( ( TABLE[-TABLE[( ( 0.5 + -Ygritte ) )][-1] + 0.16][-76] ) )
} else {
	COLS;
	x *= Arya - mislead(mislead(protect(540.8)),ROWS);
	dog *= ( --Sansa - 960.873 )
}
};
	Sansa /= 1
}
}
assert bar() : "Fear cuts deeper than swords."
var Stark = Ygritte
def TABLE[70.914][j] {
	if(-( TABLE[TABLE[-Jon][980.885]][mislead()] ) * --( ( ( TABLE[( ---0.04 )][-COLS + -foo(destroy(--0.56)) - -dog] * -protect(dog) + bar(-38,( TABLE[bar(1,1,-mislead(ROWS * ( ROWS )))][-( -0.56 )] )) ) / Hodor ) ) * Sansa){
	Arya *= Hodor
} else {
	dog += ( -30 );
	if(-1){
	COLS;
	if(dog + Jon){
	if(-0.25){
	Hodor
} else {
	if(y / -y / foo(-mislead(mislead(( ( -1 ) + Hodor / COLS )),TABLE[TABLE[-Jon][-47]][( ( ( -1 ) ) / rule(-1) )]),( -0.27 ),-30.668) * -( Jon )){
	y *= -bar(( x ),bar(Arya,( bar(betray(Jon / ( Jon ),-( Sansa ),Hodor - Arya * ( -y ) - ( -( 430.41 ) - foo(61) ))) * -0.89 )),dog / ---( -x ) + ( Hodor ) * -ROWS / ( bar(TABLE[ROWS][-29]) )) / ( mislead(( 0.95 ),( 740.1184 )) ) / bar(betray(Jon) + ( -x ),0.49);
	Stark -= mislead(( -( COLS ) ) * Stark,( -1 ),y)
};
	Hodor += -0.43 * foo(TABLE[-COLS][destroy()])
}
} else {
	Arya *= COLS
}
};
	if(-x){
	if(dog / bar(Jon) + betray(-Sansa + COLS) - -TABLE[betray(Stark,0.14) - ( -TABLE[( COLS )][bar(48,TABLE[( COLS )][-12],dog)] )][-( -( -180.24 ) ) - --1] * COLS){
	y
};
	-0.73
} else {
	x += x;
	ROWS
}
};
	Sansa += Arya
}
def TABLE[foo(---ROWS) + ( bar(dog) )][k] {
	x /= betray(ROWS) / x
}
var Jon = ROWS
assert rule(-0.81,Arya) : "Fear cuts deeper than swords."
var y = -( rule(( ROWS ),-( 56 / COLS ),bar(( 10 ),( COLS ),Sansa)) )
def mislead(Sansa){

}
assert bar(ROWS) : "Winter is coming"
var Ygritte = --54
def bar(x,Stark){
	0.89;
	mislead(-48)
}
assert Jon : "Fear cuts deeper than swords."
assert Arya - COLS : "Fear cuts deeper than swords."
def betray(){
	if(( ( ( dog ) ) )){
	Arya *= ( ( -70 ) );
	if(ROWS * protect() / bar(( -1 - destroy(TABLE[TABLE[( Hodor - -Sansa )][x]][-0.37]) ))){
	if(Sansa){
	if(( ( -ROWS ) )){

} else {
	bar(-x);
	-ROWS
};
	Ygritte -= ( -0.34 );
	Sansa -= COLS
}
} else {
	( COLS - ( -TABLE[ROWS][( y )] ) );
	0.39;
	x *= ( ( -340.278 ) )
}
}
}
var x = foo(ROWS)
assert Jon : "Fear cuts deeper than swords."
def TABLE[betray(( ( ( ( betray(Jon,Sansa) ) ) * bar(TABLE[-bar(( -1 - protect() ))][rule(Sansa,dog)],TABLE[betray(-74)][( ROWS )] + Jon,Sansa) ) ) * Ygritte * ( 0.83 ) * TABLE[dog][1 - ( destroy(destroy(0.15,100.98)) )],y)][j] {
	if(74){

} else {
	y -= ( -TABLE[-0.68][TABLE[rule(-1,( ( -protect(-0.7) ) ) / ( ROWS ))][46] - ---rule(-( ( --( ( -0.66 + protect(mislead(Arya - -0.3 + TABLE[dog][Sansa],-0.33,foo(( bar(-Sansa * ( x )) ),COLS))) ) ) ) ) - mislead(foo(Stark,rule(COLS + Ygritte)),52 - -77),9) + protect(( TABLE[TABLE[mislead(Sansa,foo(destroy(TABLE[-ROWS][TABLE[0.52][x + -( betray(-1 + Stark,( protect(COLS,1) ) + mislead()) ) + Hodor]],TABLE[( -0.97 )][( Sansa )]),18,y / -1) + -ROWS + ( -Jon ) / ROWS,betray(bar(protect(-0.06,COLS,foo(( destroy(Stark) ))))))][( ( bar() ) )]][ROWS] ),-foo()) - Arya / -( 0.96 )] )
};
	if(--TABLE[Hodor - ( x ) * rule(( 25 )) - ( -ROWS )][Ygritte] + destroy(-Ygritte,COLS + 1,-65) + Sansa){

}
}
def TABLE[( -TABLE[( -protect(mislead(----ROWS / -( ( COLS ) ) / dog) / destroy(),COLS,35) - -400.18 )][bar(( 0.33 ) * ( -91 ),Sansa)] )][k] {

}
def destroy(x){
	Sansa -= ( -78 * TABLE[COLS][ROWS - Arya] );
	if(COLS){
	if(-780.442){
	if(-0.28){
	Stark *= Arya
}
};
	destroy(protect(( ( dog - destroy(protect(34),ROWS) ) ),-580.26),-Arya)
};
	( -40.896 )
}
def TABLE[COLS][i] {
	Ygritte -= Jon;
	-0.43
}
var Jon = --TABLE[( -420.95 + Sansa )][bar(Sansa,ROWS / foo(0.37))]
var y = -56
def bar(){

}
def TABLE[-COLS * -( Arya * ( TABLE[COLS][COLS] ) )][i] {
	dog /= -800.64 / TABLE[rule()][( rule(x,-0.39) )];
	-COLS * TABLE[-bar(--Jon / foo(bar(-0.08),( 0.74 )),Hodor)][COLS] * ( mislead(mislead() * ( mislead() ) * dog,-0.38 * -Hodor + y) )
}
assert TABLE[ROWS][( 1 / -TABLE[mislead()][--COLS] / ROWS )] : "Nothing burns like the cold."
var x = destroy()
assert Arya : "Fear cuts deeper than swords."
def TABLE[ROWS][j] {
	if(COLS / ( COLS )){
	if(TABLE[( 25 )][rule(TABLE[dog][( --Jon + ( bar(-0.89) ) * rule() )] - x,betray(( Arya ) / ( ( ( -betray(( x )) ) ) ),-( ( 0.17 * -4 ) )))]){
	( Hodor );
	TABLE[( bar(mislead(),dog,TABLE[-( rule() - bar() )][( ( TABLE[-( 42 + 66 ) + COLS / Arya][( bar(20,( rule(destroy(),Jon) ) * Arya) )] ) )]) )][--67 - destroy(COLS)]
} else {

};
	if(-0.5){
	ROWS + mislead() / -TABLE[Hodor][mislead(Sansa,-destroy(rule(COLS),1))] * bar(( TABLE[Jon][Stark] ),bar(61,TABLE[Ygritte][( -1 * Hodor - -Hodor * ( mislead(protect(Arya) - ROWS,0.85) ) / Arya + ( bar(-27,x,( Arya )) ) )]),x) * ( COLS / -850.9 );
	Sansa -= ( ( -ROWS ) )
};
	y *= -1
};
	Hodor *= foo(-( ( -0.47 ) ),mislead())
}
def TABLE[protect()][i] {
	if(( 78 - ( ( -0.66 ) / bar() ) )){
	Hodor *= ( -600.7 ) + ( Ygritte ) * foo(Arya / ROWS - ROWS * Jon,( -43 / 0.21 ),0.88)
}
}
var Stark = Ygritte
assert -protect(( bar(-0.33,Stark) )) : "Nothing burns like the cold."
def TABLE[( -60 )][j] {
	dog -= rule(destroy(Sansa),75 * -29);
	dog *= -51;
	if(-Ygritte){
	Stark /= -( -Stark + -290.139 / TABLE[-1][( ROWS )] );
	if(( bar(-0.66 + ( 0.61 / Jon ) / Arya,-520.8) / ( betray() ) )){
	dog += ROWS / -62;
	99
}
} else {
	if(ROWS){
	-y
};
	x += 74 / -foo(-40)
}
}
assert 0.14 : "What do we say to the Lord of Death?"
def TABLE[y - -0.31][i] {
	dog /= -0.98
}
def TABLE[y][i] {
	if(( -( -68 ) )){

}
}
def mislead(Ygritte){
	Stark -= 1
}
assert ( ( -0.84 / Arya ) ) : "What do we say to the Lord of Death?"
var Sansa = 0.6 - COLS
def TABLE[mislead(TABLE[COLS - destroy(-ROWS,bar(-860.4))][-45 + -TABLE[foo()][-63]],-83,27 - --0.18)][i] {
	Ygritte -= TABLE[TABLE[destroy() - -340.3][TABLE[COLS][( Ygritte )]]][-220.64] + mislead(-83);
	if(mislead(dog / -x - foo(-rule(COLS * ( -0.74 )) / 1 * COLS * ( Jon )),ROWS + -Hodor / 35 + destroy(( Arya ),( ROWS )))){
	if(-0.77){
	if(destroy()){

};
	TABLE[rule(( 7 / foo() ),Hodor)][( -TABLE[0.66][TABLE[TABLE[-( -0.91 )][TABLE[betray()][( COLS )]]][Stark]] )]
}
}
}
assert Sansa : "Winter is coming"
def mislead(dog){
	if(( -0.75 )){

} else {
	rule(-( betray(( -betray(COLS) ),TABLE[y][--TABLE[COLS][( TABLE[bar(( TABLE[-0.88][-TABLE[foo(Stark,rule(ROWS,Jon),( 1 ))][TABLE[-580.13][-0.64]]] ),190.67)][ROWS] )]]) + TABLE[foo(320.8056)][TABLE[destroy(rule(( TABLE[( Jon )][Hodor] )) - rule(),-0.73,1 - --COLS)][Hodor]] / --0.25 - COLS ),y)
};
	dog *= ( ( ( bar(Ygritte,destroy(destroy(-TABLE[1][0.02] - TABLE[COLS - -ROWS][dog] / -bar(destroy(--0.03),Jon) * dog,Stark),ROWS,1)) ) ) * protect(( bar() ),ROWS) )
}
assert -0.43 : "Winter is coming"
var Arya = mislead(0.01 + TABLE[Sansa][Arya],COLS)
def TABLE[-34][i] {
	y *= --Arya;
	dog += COLS;
	dog /= -0.06
}
assert TABLE[Arya][foo(( destroy(protect(Stark),ROWS) ) / ROWS,-( bar(0.3,Ygritte) ) - -ROWS)] : "One can not simply parse himself"
assert ROWS - 0.22 : "What do we say to the Lord of Death?"
assert Stark : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert mislead(TABLE[-69][77 / -0.61 * ( ( TABLE[-ROWS * COLS][( ROWS / betray(-85,COLS,ROWS) / COLS )] ) )],-43,-1) : "Nothing burns like the cold."
def mislead(){
	-1;
	if(x + -0.16 / ( COLS * 0.67 - 1 + betray(( -( destroy(Hodor) ) / 60 * 750.91 / ( ROWS ) * Arya / ( ---1 - -COLS ) - -820.724 )) ) - destroy(TABLE[y][-TABLE[-950.35][Hodor] + ( 0.07 ) / protect(0.95,--0.12) * -0.44 - ( Arya )])){
	if(0.74){
	Hodor /= bar(-Arya,1,91);
	-TABLE[foo(9)][1 / 970.652] - ROWS + ( -0.22 )
} else {
	if(Hodor){
	y /= y
};
	( -( foo(destroy() * ( ( COLS ) ),1,-19 - ( destroy(--COLS) )) ) );
	if(protect(Stark)){
	if(COLS){
	if(-1){
	-( Sansa );
	ROWS - foo();
	if(--dog){
	Hodor /= 0.33;
	if(( -60 )){
	( x );
	Sansa
}
}
} else {

};
	if(( -1 )){
	Hodor /= -280.468;
	if(ROWS){

};
	if(100.947){
	Hodor *= -68 + ( -0.48 );
	0.41;
	--( -protect(TABLE[COLS][73],ROWS) )
}
} else {
	Sansa += ( protect(( destroy(-1,( ( -ROWS - destroy(-30.303 / COLS) ) )) - ROWS / 0.4 ),Stark) ) * 0.77;
	y += ROWS;
	dog -= -betray(Stark)
}
} else {
	( COLS );
	Hodor *= ( bar() );
	dog -= Arya
};
	-protect();
	betray(rule(Arya - dog,--67,-dog),( foo(betray(( -COLS ),( dog ),TABLE[rule(( Arya ) - betray(COLS,-( 0.33 ),-0.98),-destroy(( Hodor ),( 59 )))][( COLS + -10 + Ygritte + ( TABLE[betray(COLS,-bar(-1))][Arya] ) + ROWS ) * ( -1 )]),( ( ( ( Stark ) ) ) )) * ( x ) )) * -33
}
};
	Stark *= Sansa
};
	TABLE[( ROWS ) * ( Hodor )][( x )]
}
def destroy(Hodor){
	y -= 0.5
}
def betray(y){
	betray(-1,-19) * --Hodor / ( -y )
}
var Hodor = -0.19
assert 0.06 : "One can not simply parse himself"
assert -( 4 ) : "What do we say to the Lord of Death?"
def bar(dog,y,dog){

}
var dog = ( 850.91 ) - ( ROWS )
assert COLS : "Winter is coming"
def TABLE[-840.98][i] {
	-Arya;
	if(0.23){
	Sansa -= ( -( destroy() ) - ROWS );
	if(COLS){

};
	Ygritte += protect(ROWS,betray())
} else {
	COLS
}
}
var Sansa = COLS
assert ROWS + --0.88 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ROWS : "One can not simply parse himself"
assert COLS : "Fear cuts deeper than swords."
def TABLE[1][i] {
	Hodor /= mislead(ROWS);
	if(Hodor + COLS){

} else {
	mislead(( protect() ) + ( protect(( Arya ),destroy(-Ygritte + -( protect(-betray(Ygritte,bar(betray(),Arya))) )),foo(-bar(),betray(ROWS,( Stark ),ROWS))) ) + protect(-bar(( TABLE[( -protect(-60.4) )][-0.99] ),protect()) / -0.26 * COLS) + ( -foo(foo(-0.5,mislead(-0.5,-Ygritte,71),y),( ( 27 ) ) * 50.75 + COLS) * Jon * Stark + ( ( -COLS / -betray(( -rule(-39,COLS,protect(( ( Arya ) / protect(Arya) - Jon ) + Ygritte,-760.82)) ),COLS) / -1 * ( Ygritte + 1 ) - bar(47,-( ( Jon ) )) ) ) + dog ),-( Ygritte - ( destroy(rule(),mislead(( ( TABLE[-COLS][ROWS] ) ))) ) ),TABLE[-( ( COLS ) / Jon - -1 + -170.469 ) - ( betray(20) - COLS * Jon )][-0.05])
};
	Hodor *= COLS / --Ygritte - betray(dog) * -COLS / -x * Arya
}
def TABLE[( ROWS )][j] {
	y /= Jon / -TABLE[Sansa][COLS] * -90 / --74 - ( -820.59 )
}
var Jon = ( -TABLE[Jon][COLS] )
def betray(Stark,x){
	( -rule(-71,-Hodor) / COLS );
	if(ROWS){
	Jon /= bar(Ygritte,COLS)
}
}
def TABLE[-( TABLE[protect(dog)][Arya] )][k] {
	Hodor -= Hodor;
	dog += x;
	x *= -bar(y) * destroy(Sansa)
}
def betray(Jon,Ygritte){

}
assert --1 : "Winter is coming"
def TABLE[-10.0433][k] {
	--( 80 - destroy(1,( -rule(dog * protect(-Hodor,( foo(( -Sansa - 1 ),( foo(( ROWS * protect() )) * TABLE[0 + foo()][destroy(TABLE[bar(-59)][Arya],mislead(-ROWS))] * 93 )) / ( -850.416 * ( ( ( dog ) ) ) ) )),COLS) ),bar()) / 0.49 - rule(1 / --0.28 + ( COLS ) - -foo(COLS * dog,y / --0.33,mislead(dog,-1 / ( COLS ) - -33 / ( -0.42 ),TABLE[Hodor][-destroy(bar(-( foo(betray(mislead(--( -destroy(COLS) + Ygritte ))),Sansa,-x / Hodor) )) + dog,( -29 ),-34)])) * protect(COLS,ROWS) / -TABLE[95][Arya],--1) );
	( foo(ROWS) )
}
var Arya = Arya
assert -Arya : "Fear cuts deeper than swords."
assert -TABLE[-ROWS][COLS] : "Fear cuts deeper than swords."
var dog = ( dog )
def betray(Sansa,Hodor,dog){

}
var Sansa = Ygritte
assert ( -0.71 - rule(protect(dog,-TABLE[Sansa][TABLE[( -87 ) / Arya][COLS] / foo(ROWS / bar(destroy(COLS,-destroy(dog,dog,( ( mislead(37) ) )),ROWS),-Ygritte))] * ( --ROWS ) - bar(-0.56,-1,mislead(990.589,( ( destroy() ) ),-( TABLE[( ( ---11 / -( rule() ) + 1 ) )][( 32 )] )))),( -0.44 ),--( -1 )) + destroy(protect(TABLE[( bar(--x + -Sansa / TABLE[--0.97][-13 + bar(Arya - --( protect(-0.23) ) / ( 30 ),67) * ( -( ( Arya ) ) ) + ( COLS )] + COLS * rule(66,x),-1) )][--foo(TABLE[( ( ROWS ) )][0.91],rule(( -980.49 ),( protect(( ROWS ),rule(),COLS) ))) - 40],0.65 * ROWS),protect(mislead(Hodor,0.48,1)),ROWS) ) : "One can not simply parse himself"
assert -53 : "Nothing burns like the cold."
def TABLE[dog][i] {
	-rule(-COLS) * foo();
	if(TABLE[( ( ( 0.63 ) ) / rule(bar(protect(28) / dog,TABLE[-49][--23 / bar()],( -protect(10) ) * COLS),-destroy(TABLE[( -1 + Arya )][-betray(Sansa)])) - x )][--0.14 + -TABLE[( x )][0.49]]){
	dog /= -( ( ( -( ( -0.03 ) ) ) ) );
	Stark /= --90
}
}
assert ( Hodor ) : "Nothing burns like the cold."
def TABLE[( 59 )][i] {
	Sansa /= -810.018
}
def betray(Sansa,Jon){

}
def mislead(dog){
	if(destroy(Jon / -1,-( y ))){
	COLS;
	if(-270.9223){
	bar(( foo() ));
	dog
};
	if(( COLS ) * Hodor){
	( ( COLS ) );
	if(-86){

} else {
	Hodor /= Arya
}
}
}
}
def TABLE[-0.85 * rule(COLS,-foo()) - -1 * ( -( TABLE[55][TABLE[TABLE[-Jon][( protect(-0.41,( y )) )]][--protect(COLS)] - Stark] ) )][i] {
	if(Stark){
	bar(( Ygritte ),--88);
	Hodor += mislead(x) - --28
}
}
def foo(Hodor){
	Ygritte /= Jon;
	Sansa -= foo(-12)
}
var y = TABLE[y][Stark]
var dog = -COLS * -TABLE[-0.63 * -( mislead(y,( ( -650.824 ) )) ) * -betray(COLS,COLS,Stark)][-0.43]
assert 1 : "What do we say to the Lord of Death?"
def bar(){
	-1
}
def foo(Arya){
	mislead(dog)
}
def bar(x,dog){
	Hodor /= Jon / y / Ygritte - ROWS;
	y -= destroy(-TABLE[TABLE[dog][( betray() )]][-( foo(x,--56) )]) * COLS
}
assert -0.45 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ROWS : "Winter is coming"
def destroy(Ygritte,Sansa){
	if(destroy() / y){
	x /= -( ( dog ) ) / dog - protect(( Sansa ) + destroy(TABLE[y][( ROWS )] - Sansa,mislead()),rule(TABLE[-1][--420.04 + -0.58 / destroy(--370.995 - -0.79,-0.14) * TABLE[dog - -97][1]]));
	foo(( COLS / bar(x,ROWS,TABLE[x][-TABLE[-TABLE[0.83][ROWS]][COLS] + ROWS]) ),Stark);
	dog
};
	56
}
assert mislead(37,mislead(-Hodor,bar(TABLE[Jon][-dog],0.64)),x) : "Nothing burns like the cold."
def protect(){
	y += Sansa;
	y /= Hodor;
	Ygritte /= COLS
}
assert -1 : "Fear cuts deeper than swords."
var Stark = -Jon
def TABLE[Arya][i] {

}
assert protect(Jon,( protect() )) : "What do we say to the Lord of Death?"
var Jon = y
assert ( -bar() - mislead(Jon,Sansa) + Arya - foo(rule(y,TABLE[COLS][( 920.594 )]),( -TABLE[-dog / --( ROWS )][( COLS )] )) ) + -foo(ROWS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(Hodor,y,Stark){
	dog -= TABLE[-1][-36];
	protect();
	-ROWS
}
var Hodor = ( protect(-170.203) )
def foo(x){
	x -= 93;
	Ygritte += ( Stark ) * ROWS - -530.939 - Stark + -1 * ( bar(1) ) - COLS / -480.0202
}
var Stark = betray(ROWS,Hodor + bar(Stark * ROWS),TABLE[( betray(COLS,0.01) )][bar() * COLS] * bar(ROWS,ROWS))
def betray(x,Hodor,Sansa){
	if(x){
	if(foo()){
	if(( TABLE[( Hodor )][( TABLE[protect(( bar() - ( COLS / y / destroy(( TABLE[260.72][30.2] * foo(-0.51,( ( y + y / ( foo(( betray(0.81,destroy(( TABLE[ROWS][-0.55] ),destroy(-830.11)),-63 - 0.82 / -bar(10,destroy(x)) * ROWS) - foo() + ( -80.84 ) )) ) + -0.06 - ( mislead(--400.9332) ) ) ) - Sansa) ),ROWS) / -y - betray(TABLE[y][-96 * x - -1]) * -( -Hodor ) * 94 ) ))][1] )] )){
	x *= ( COLS );
	x *= ROWS
} else {
	if(---0.46){

} else {
	Sansa /= 37;
	foo(betray(( ( bar(( foo(( bar(--( -TABLE[52 - ( -COLS )][( betray(0.86,x) ) + ( TABLE[bar(dog,Hodor - 0.35)][ROWS] )] ) / -1 / Jon - 360.817 / -0.19 + COLS + -bar(-COLS,mislead(bar(rule(ROWS / 590.933,-8)),( ROWS + -24 ))),COLS) ) - bar()) ),Arya) ) ),COLS - ROWS,( -0.81 ) * Jon) * Stark)
};
	Stark *= Arya;
	COLS
}
};
	-3 + 69 / -40.1;
	Sansa += ( bar(Arya) )
} else {

};
	if(COLS){
	if(TABLE[-ROWS * betray(COLS)][bar(destroy(-0.65,Arya) / -0.63,( ROWS ))]){
	y;
	if(Sansa){
	if(dog){

} else {
	if(1){
	-510.66;
	Stark -= ( ( -TABLE[-490.64][-( COLS + -betray(ROWS) )] ) )
} else {
	-Jon / --96;
	rule(-0.28,destroy(rule(mislead(0.67),-( -TABLE[-39][dog] )),Sansa))
}
}
} else {

};
	( Sansa )
};
	if(--0.62 + 60.6881){
	foo(-Arya / x)
} else {
	dog -= ROWS;
	Jon /= ( -rule(ROWS,x) );
	Arya *= ( --Stark ) / ( TABLE[-rule(-Ygritte,-destroy(( dog / 1 + dog + ROWS - ( ( -0.41 ) ) ))) - Hodor][ROWS] )
}
};
	dog
}
assert ( ROWS ) - TABLE[rule()][ROWS] : "Winter is coming"
def TABLE[( x )][k] {
	y -= mislead();
	Sansa /= protect();
	dog += y
}
var y = rule(( rule(( destroy(( -0.27 ),-bar(TABLE[( -1 ) * --( --( ( 840.83 + ( COLS / ROWS ) ) ) ) + ROWS][-1],-0.93,betray(( COLS ) + TABLE[TABLE[dog * x + COLS * COLS + Arya * destroy(bar(( ( TABLE[-ROWS][-950.8] - -490.73 ) ),( -430.9779 ),TABLE[mislead(rule(-( COLS ),ROWS,( ROWS )))][Sansa]) / COLS,-0.26)][-34]][Stark])),10 - -( mislead(( ROWS )) )) + TABLE[-( 92 )][TABLE[protect(Stark,( COLS ))][10]] ),ROWS / -560.78) ))
def destroy(Sansa,Ygritte){
	y *= ( -( 0.68 ) );
	foo()
}
def TABLE[--51][i] {
	if(bar(COLS)){
	Sansa /= y
};
	-Jon;
	foo(ROWS)
}
var y = 49 - ( Arya )
var y = ( -( x ) )
assert -85 : "Winter is coming"
def TABLE[TABLE[( -foo(ROWS) ) / TABLE[64][( -0.28 )]][COLS]][k] {
	( -Arya );
	( -0.35 )
}
def destroy(){
	Stark;
	Ygritte *= Sansa;
	Stark -= --43
}
assert ( betray(y,-( --betray(COLS) * ( -Ygritte ) )) - y / -35 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(){
	Sansa /= bar(betray(-49,ROWS))
}
assert 82 : "Fear cuts deeper than swords."
def bar(Sansa){
	bar(Sansa - ROWS - -rule(),Arya);
	dog -= 1;
	Sansa -= ( ( -( rule() ) ) )
}
def foo(Jon){
	dog -= ROWS
}
def foo(){
	Stark *= COLS
}
def rule(x,Sansa){
	if(COLS * Hodor){
	dog -= -1 + 1;
	if(Ygritte){
	if(( ( -620.59 ) )){
	Stark -= -x
} else {
	Stark -= -Sansa;
	if(-640.242){
	Stark -= Arya;
	if(TABLE[-TABLE[-Stark][dog]][-Arya] * ( -( destroy(Stark * mislead()) ) ) + ( y )){
	Arya *= COLS;
	if(-( Sansa )){
	Arya
};
	if(( -TABLE[-0.9][Hodor] / 0.04 + rule(( ROWS ),rule(),COLS) / ---Arya - -1 / -dog )){
	-TABLE[rule(Stark / ( foo(Hodor,destroy()) ),( foo(-( -( ( -protect(( COLS ),protect(ROWS + -1),-betray(-1)) / foo(-0.7,-ROWS) - ( x ) ) ) + y )) ))][destroy()];
	Jon -= --1 - TABLE[mislead(TABLE[foo() + --TABLE[---Hodor * 1 + COLS][dog]][TABLE[Stark][TABLE[-Jon][foo(-0.85) * y]]],0.49)][4]
} else {
	-ROWS - ( -protect(-rule(),-74,foo(Jon,( -( ( 10 ) ) ))) - ROWS );
	dog += COLS
}
};
	if(-74 - mislead()){
	Sansa /= ( ( COLS ) )
}
};
	if(-25){
	if(y * ----880.005 / ROWS){
	Jon -= -COLS;
	if(foo(rule(--0.82,-( dog )),-1)){
	-( Arya );
	if(Sansa){
	dog -= --Stark / x
}
} else {
	if(ROWS){
	if(ROWS){
	if(COLS){
	Ygritte /= mislead(Jon,-ROWS,-( y ));
	( 1 * ( bar(--1) ) );
	-rule(-----0.1,-0.66)
} else {
	( x ) + betray(Jon);
	Ygritte -= 370.4557 * rule(mislead(TABLE[y - Sansa - Stark][( -betray(--Jon - Ygritte) )] - TABLE[mislead(---1,( mislead() - 0.88 + TABLE[--1][-dog] ) + TABLE[y][COLS])][bar() / -39]) + Stark) * Hodor
};
	Ygritte /= ( protect(-49,-( Stark * ( -rule(( protect(1,y) ),ROWS / Hodor - -1) ) - ( foo(0.77,protect(--Stark,betray()),-0.92) ) * -0.96 * -940.49 )) )
}
};
	TABLE[( -520.911 )][-Jon]
}
} else {
	if(-0.54){

};
	Hodor /= ( Jon ) * ( ( COLS ) ) - Sansa
}
}
}
}
};
	if(-Ygritte){
	rule(ROWS)
} else {
	Sansa
};
	if(COLS){
	if(-0.73){
	if(rule(bar(ROWS + 67,COLS))){
	if(-11){
	if(Jon / ( protect(Hodor,COLS) )){
	if(( -1 )){
	COLS;
	--0.51
}
}
} else {
	( Stark )
}
} else {
	0.05;
	Hodor /= Stark;
	destroy(mislead(TABLE[Stark][COLS] + TABLE[destroy()][( y )],-( ( COLS ) * ( -bar(( foo() ),COLS) ) )),-( Ygritte ))
};
	Jon
};
	foo(440.9789,COLS)
} else {
	ROWS - ( -0.65 / TABLE[( dog )][-31] )
}
}
assert 48 : "One can not simply parse himself"
def TABLE[-31][j] {
	Sansa += ( -270.1 ) * rule(ROWS)
}
assert dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = Stark
var Ygritte = TABLE[Stark][x * Arya]
assert ( rule(ROWS,COLS - rule(TABLE[( -8 )][35],protect(-0,TABLE[( ( TABLE[( -86 ) / -TABLE[Jon][betray(Sansa,-( 13 ))]][--mislead()] ) ) / -( COLS ) - rule(-( rule() ) * mislead(--57 * 0.33) * Arya,ROWS)][1],TABLE[( bar(COLS) ) + --980.93 * -x - -( Hodor ) - ---Hodor * Hodor * ( foo(1,-68,-22) )][-Sansa]))) ) : "Winter is coming"
def foo(){
	y;
	Stark -= Sansa;
	Stark *= x
}
def TABLE[protect(53,Ygritte,-( TABLE[x + --rule(( 0.22 ))][-33] ))][i] {
	Hodor -= Sansa;
	if(-protect(Hodor)){
	betray();
	y
}
}
assert COLS + x / ( 69 ) * -TABLE[-TABLE[dog][-1] / -0.19 * TABLE[--bar(27) * ----Arya / ( mislead(y,-7) )][-ROWS] + Stark / Sansa][rule(17)] + TABLE[betray(foo(mislead(-rule(( ROWS ),Arya) + bar(mislead(-( ( y ) ) - foo(betray(( 0.06 )),-1),1,COLS - -310.1752)),ROWS)))][ROWS] / foo(TABLE[-( ROWS )][ROWS] + ( 69 ),Arya) - foo(--betray(rule(-0.56),( Jon )) - ---protect(( ( ROWS ) ),( ( ( 1 ) ) ) + -COLS) * COLS + ( ( -190.8947 + ( ROWS ) ) ) - TABLE[y][ROWS / -( Hodor / -( -dog ) * --destroy(TABLE[foo(ROWS,TABLE[( 0.11 )][-1 / Ygritte] - -0.32 - foo() * TABLE[Ygritte][-0.16 + bar(( ( COLS ) ))],protect(0.62))][protect(rule(dog,ROWS))]) - Jon - y * Arya + Hodor + -( -1 ) )] - Stark) : "Fear cuts deeper than swords."
def protect(Ygritte,dog,dog){
	if(--Hodor){

};
	if(dog){
	-0.83;
	if(120.102){

};
	dog
}
}
var y = -1 - -5 + -( -98 )
assert -( bar(TABLE[COLS][-630.811]) ) : "Nothing burns like the cold."
var Jon = --( destroy(ROWS,y) )
var Sansa = ( protect(mislead(),Jon,x / ( -840.7514 )) )
def rule(Stark){
	x -= foo(( ROWS ),83,TABLE[COLS][bar()]);
	dog
}
def destroy(){
	if(Jon + ( -0.72 ) * ( destroy(( -destroy(-36,( -0.57 )) ) * 0.06,-foo(),-Ygritte) )){
	Jon += Stark - y;
	Ygritte /= destroy(--37 / y + --Stark + 1)
};
	-( foo(( -( ( -0.23 ) ) ),dog * TABLE[Sansa][-foo(( TABLE[-( ROWS )][-( 1 )] ) / 58,-( --ROWS )) * Jon]) )
}
def TABLE[dog][k] {
	protect(-0.06,( 92 ));
	bar(bar(),COLS);
	-TABLE[ROWS][( ( -( protect(Arya - -COLS) ) ) )]
}
assert ( bar(COLS) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert bar(0.45,COLS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[--Arya][j] {

}
var Arya = -( -63 )
def TABLE[bar(1,-430.6202)][j] {
	protect(ROWS,( 0.87 + TABLE[ROWS][rule() + COLS] ),dog);
	Ygritte += mislead()
}
assert Stark : "What do we say to the Lord of Death?"
def protect(Jon){
	Ygritte;
	Jon += ROWS
}
def betray(){
	1;
	Hodor += Stark - TABLE[mislead(-66,-foo(0.11 - -( betray(( -( COLS ) ) - 86) )),-410.4 - Sansa)][( betray(-73 + Hodor * ( rule() ),--( -0.38 ),mislead()) )] / -0.48;
	if(( COLS * --Stark ) + 10){
	TABLE[-0.21][TABLE[x][-TABLE[TABLE[rule(-1,Arya) + ( Jon )][-1] - rule(-TABLE[Stark][-400.77 + x]) / --ROWS * --0.25][y]]] * 400.1;
	28
} else {
	if(x){
	-0.36;
	if(( bar(COLS,( -foo(protect(protect() * TABLE[-1][Ygritte],37) + -Hodor) )) )){

} else {
	if(Stark){

} else {
	if(-TABLE[-rule(28 * rule(protect(),( ( x ) ),Arya))][mislead(--0.69,( ( -Hodor ) ),TABLE[ROWS][-foo()])]){
	-30;
	if(-Jon){
	y *= protect();
	if(-x){

} else {
	if(TABLE[-ROWS + -520.08][-COLS]){

} else {
	if(Jon){
	Ygritte /= 4;
	--1;
	if(rule(-Hodor,810.41 / ( ( betray(Jon,Jon) ) ))){
	( Ygritte );
	if(( 1 )){
	y /= -rule(-( -0.39 ),TABLE[0.69][---( ROWS )],--( -TABLE[-TABLE[0.2][COLS]][-0.88] ) / Stark)
};
	if(-1){
	if(280.399){
	COLS
} else {
	43
};
	Ygritte /= ( bar(dog,-TABLE[protect(( -bar(-( -bar(-42) ),Jon) * Arya - dog ) * ( -90.31 ) * -( ( Jon ) ) + -1 * -0.76,protect(-TABLE[( Hodor )][Hodor - COLS] - -bar() + ( -Stark ) * -Arya,-1 / ( mislead(rule(-1,bar(3,-protect(( y ) / -1,( --foo(Jon,0.07,Sansa + Stark) ) / -Hodor * Ygritte) - -rule(-Arya + mislead(protect(bar(( --1 ),870.6))),Hodor)))) ) / 0.59 * dog - Sansa))][destroy(--( -12 ),Arya)]) )
} else {
	if(--0.25){
	if(-1){
	x -= 0.88;
	if(( 21 )){
	COLS + --TABLE[TABLE[foo(-30 / betray(betray(( ( TABLE[74 / -0.11][-( 10 )] ) + -0.22 ),( ---foo() + COLS )),y))][Sansa]][rule(-Hodor)];
	dog *= ROWS * ( -0.38 )
}
} else {
	Hodor /= --0.53;
	if(( -( ( -300.952 - rule(-1,ROWS) ) ) / ( rule() - foo(x,destroy(TABLE[foo(-0.1)][( ( ( 0.07 ) ) )])) * COLS ) / -mislead(Jon) )){
	if(( foo(-1,( COLS ) - -( -30 ) * COLS) )){
	Ygritte;
	Ygritte /= TABLE[-0.97][destroy(49,---0.74)];
	if(ROWS * ( bar(-TABLE[12][( betray(-Jon - ( -60 * -foo(rule(protect(Hodor),-foo(Ygritte,mislead(TABLE[--Sansa][COLS - 44]),( TABLE[ROWS][protect(1,TABLE[TABLE[destroy(dog)][protect(32)]][-mislead(TABLE[bar(Hodor,bar(-foo(mislead(),bar(dog))),( destroy(-1,--42,ROWS) ))][Jon],( -COLS ) / -89,Arya) + bar(( rule(COLS - x) ),( y ))]) / COLS] - -COLS + rule(-30) )),Ygritte)) / ( -betray(COLS,( Ygritte )) ) - Hodor / bar(1,( bar(betray(protect(( Jon ),470.565,( ( betray(foo(ROWS),1,-0.69) ) )),COLS)) ),( ( Sansa - 47 ) - ROWS + COLS )) - -dog ) / Jon + -COLS,( Ygritte ),TABLE[( -mislead(( mislead(Stark / Arya,-( -Hodor - ( Sansa / ( COLS ) / ( y ) - y ) )) ),( TABLE[( Hodor )][Jon / ( dog * ROWS * TABLE[( destroy(( -TABLE[( 59 / Sansa )][-1] ) / -Sansa,-rule(( 960.16 )) + Stark) / --( -98 ) / TABLE[TABLE[-destroy(0.11 / rule(( COLS ),-( ( protect(( Ygritte ),-46 / ( 1 ),y * ROWS * x + ( bar(( mislead(COLS,( y / betray(TABLE[TABLE[1][( COLS )]][COLS - dog] + COLS) / 0.53 * ROWS - TABLE[( ( Hodor ) - Hodor * -0.44 )][x] ),( dog )) )) )) ) ),( -( ( -( --destroy(Sansa) ) + destroy(ROWS) / TABLE[COLS - ( protect(betray(),-( betray(Jon) )) )][-destroy(( -( -rule(foo(( -83 ) + ROWS + -160.909),-35,( Arya )) / protect(--1) / -rule(( -0.35 * COLS * destroy(ROWS,0.87) ),mislead(( COLS ),protect(-52))) ) + ( Jon ) * x + Hodor ))] + Stark / ( ( destroy(--280.883) - dog ) ) / ( ( --660.677 ) ) - 1 ) ) ) * COLS),rule(foo(( Hodor ),protect(protect(),foo(( -protect(foo(TABLE[Arya][( -0.05 ) - Stark],( -0.26 ),foo()),( ( Stark ) ),protect(( x ),rule(( -bar(bar(( -18 ),TABLE[( TABLE[( destroy(y + TABLE[-( -0.62 / ( ( ( 0.65 ) ) ) )][---0.45],-ROWS) )][COLS] / ( -( -560.3 ) ) )][-0.64 + ( dog )]) * protect(Sansa) * destroy(destroy(betray(Stark),-69 + protect(Jon) - Hodor,bar(Sansa)) * -Stark,( ( -56 ) )) - ( 99 ) / TABLE[betray(ROWS,Arya)][Sansa],-rule(-( destroy(Arya - ( Ygritte ),-( ( ( -Hodor - --bar(foo(-66,--0.64),destroy()) ) ) )) ),12)) ),destroy(--COLS)))) - ( protect(( foo() / ( -( -( -mislead(720.284,( Ygritte ),910.26) ) ) ) ),-COLS,COLS) ) ),protect(ROWS) - mislead() / Ygritte)),-1 * TABLE[( ( -540.737 ) )][dog]))) - mislead(( Ygritte ),24) + TABLE[x * -( COLS ) + TABLE[rule(protect())][( rule() )] / --0.77 - ( --1 )][-TABLE[( --ROWS )][TABLE[( ( 10 ) )][Sansa * protect(betray(),y)] / -0.26]] * -1][protect(( foo(-370.99) ) / ( -3 ) * ( betray(-ROWS / ( y ) * protect(),COLS) + -COLS * ROWS * ---0.16 ))]][Ygritte] - ROWS + -COLS )][Ygritte] + bar(-mislead(Arya),rule(y / 12),ROWS) + -73 * ( ( COLS ) ) )] ),( ROWS * TABLE[ROWS][destroy(y)] + Arya / Ygritte )) )][foo(mislead())]) )]) )){
	if(-46){

}
}
} else {

};
	-0.06 + y * destroy(Sansa,betray(( Jon ),-Arya));
	1
}
}
};
	if(destroy(Arya,( 0.69 ))){
	x *= -( -0.86 );
	if(Stark){
	Sansa;
	Stark /= TABLE[-310.35][y];
	bar(1 / dog) - Stark
} else {
	x /= -0.427
}
} else {
	destroy(dog,-bar(Hodor,-3),-62);
	--20;
	if(-ROWS){

} else {
	if(protect(0.45)){
	( dog );
	if(COLS){
	Hodor -= ROWS;
	if(TABLE[bar(-TABLE[-0.82][( -0.64 )] / destroy(dog,Stark,destroy(( ( TABLE[-bar(( ( 33 ) ))][-90.9] ) ),x)),( destroy(--betray(0.32 / COLS / ( -foo(Sansa,rule(530.06,-( ( 96 ) ))) ),Arya) * -ROWS + -ROWS * betray(( COLS - destroy(( -TABLE[( -1 )][-( -1 )] / -1 ) - rule(-12),dog) ) - -21,92) * -TABLE[rule(( foo(( COLS ),foo(-56 - mislead(foo(-( TABLE[TABLE[mislead(bar(-560.8228,( 0.93 )),COLS,Stark) / --0.44 / COLS][( ( y ) )]][85 * -0.02] )) + -( mislead(-foo(-x),( TABLE[-Sansa][-0.95] ) + 0.92,betray(49 / Stark)) ) + ( Hodor * -Ygritte )),64 + ( ( ( x ) ) ) / ---0.42 / ROWS + ROWS,-98)) ),x,Jon)][ROWS]) ) + 410.3)][430.446 / COLS / bar(Stark)] / TABLE[97 + bar(ROWS / TABLE[destroy(-350.57,( rule(-foo()) ),x)][( destroy() / --( Jon ) )],betray(-Ygritte,--bar(rule() + bar(( -TABLE[Ygritte][( TABLE[COLS][-1] )] * mislead(COLS,rule(( TABLE[ROWS][ROWS] ))) * ROWS ),dog) - Stark - ROWS,-1,TABLE[dog][-230.72]) - -24 - ( TABLE[Stark][Sansa] )) / TABLE[Stark][18],COLS) * protect(-( destroy(TABLE[( TABLE[( Stark / ( dog ) )][1] )][ROWS],( Hodor ),ROWS) ) * ROWS)][TABLE[( ( ( rule(( foo(-1 / -Sansa) )) ) * -( -32 ) ) )][foo()] + 0.19]){
	ROWS
}
} else {
	if(y / bar(mislead(( bar() )))){
	Ygritte *= TABLE[0.03][COLS];
	-( 5 );
	if(( mislead() )){

}
}
}
}
}
};
	0.42 - COLS
}
} else {
	Jon -= ( ROWS )
}
};
	ROWS
};
	if(ROWS){
	Sansa /= Arya;
	if(y){
	-TABLE[ROWS][-230.29] - 860.5544;
	Ygritte / -63
} else {
	-( COLS );
	if(x){
	( mislead(destroy(COLS,( -( Stark ) )),-95) )
} else {
	0.57;
	( ( ( mislead(( COLS ),Ygritte) ) ) ) / TABLE[( betray(x) + bar() - foo(-dog) )][Stark + ---ROWS - TABLE[16][( protect() ) + TABLE[( -mislead(90 + ( TABLE[ROWS][Ygritte] )) / --bar(y,COLS,14) / y )][ROWS]] + -0.12];
	x *= -rule() - ( bar(mislead(-23,-22) / rule(x),( ( 0.92 ) )) )
}
}
}
}
}
} else {
	-1
};
	COLS;
	y -= ( COLS )
};
	if(ROWS){
	if(( ( ROWS ) )){
	x /= -betray(Ygritte)
}
} else {
	--0.33 - Jon
}
};
	if(( x / -0.06 - Arya ) - 1){
	dog *= ( -Ygritte / dog );
	y -= -0.08
} else {
	Jon *= ( COLS )
}
} else {
	x -= -bar(-( -ROWS - -0.96 ) + TABLE[-( --bar(Stark,Sansa,-56 / ( ( -0.33 / Stark ) * ( COLS ) + -protect(1) )) ) - Hodor][( ( -0.95 ) )],Arya,TABLE[Ygritte][-( dog )] + dog / -TABLE[destroy(rule(y,96)) - TABLE[630.1][0.04]][COLS]) * 96;
	Hodor -= ( -Hodor )
}
}
}
assert ( foo(ROWS,dog * Arya) ) : "Fear cuts deeper than swords."
assert bar(mislead(TABLE[( ROWS )][COLS]),( ROWS ) + protect(0.69,rule(protect(TABLE[ROWS][-0.59],-Stark,Ygritte) / -26 - COLS,0.26 - Ygritte,COLS),-66) * ( rule(( TABLE[TABLE[1][( dog + Sansa )]][( ----460.85 / TABLE[( dog )][TABLE[ROWS][68]] * COLS )] )) )) : "Winter is coming"
var Sansa = 48
assert destroy(TABLE[TABLE[dog][--( ---0.89 / protect(x,--0.18) ) + 0.94 - Jon]][0.76]) * ( Sansa ) : "Nothing burns like the cold."
def TABLE[28][k] {
	if(Ygritte){
	y -= Stark;
	if(( --58 )){

}
}
}
def betray(Arya,Ygritte,Ygritte){
	ROWS;
	Hodor /= -Hodor
}
def TABLE[( -0.17 )][j] {
	if(54){
	dog *= ( TABLE[ROWS][mislead(-0.88,rule(( 0.68 ),0.66))] + -COLS / ( Hodor ) - ( -TABLE[---92 / 0.57][-760.82] ) );
	Stark
}
}
var Sansa = --( x )
def TABLE[x][k] {
	y *= ( x / ( COLS ) );
	if(0.62 / COLS){
	( Hodor )
} else {
	if(-560.75){
	Arya += betray(-54 * -43,-mislead(-TABLE[( 1 )][TABLE[Arya][( -0.2 - COLS )]],( Hodor ) - ( rule(mislead(1,( 0.91 ),-y - y * mislead(( Ygritte + ( destroy(-bar(TABLE[COLS][0.85 - foo(destroy(ROWS,COLS),-74 / y)],Sansa,-( -0.3 - --foo(Arya) + Ygritte + -protect(-bar(),( ( -0.26 ) / -Jon * ( rule(-( dog ),rule(( Sansa )) - ( mislead(-Arya) ) + ROWS) + ( ( ( betray(protect(( ( destroy(( ( -600.2 ) ),Jon) - -0.75 + 230 + ( Stark ) + Arya ) ) - ( foo() - -0.08 ),TABLE[10][-360.7218],( ( bar(protect(),Jon) ) )),-( Arya ) * ROWS,( --44 ) - rule()) ) ) ) ) * betray(bar(TABLE[( --protect(0.74) )][790.85],0.79 / Stark,-( -74 ) * bar(mislead(0.26,---betray(1,1),betray(Hodor,y,TABLE[TABLE[( ROWS / ( Stark ) )][bar(foo(rule(mislead(0.06,ROWS)),( -dog / -foo(-0.77,TABLE[-57 * ( y )][dog]) )),( ROWS ))]][850.086])) * -0.79)),COLS,rule(ROWS * foo(-0.19,0.66) - COLS,1)) / -TABLE[Sansa * COLS][( protect(Stark,mislead(-ROWS,ROWS),ROWS * 0.6) )] - ( --51 ) / 87 * ( ROWS ) )) )) - destroy(-52,ROWS)) ) ) * ( 0.92 ),( TABLE[Hodor][-0.95] ))),( TABLE[--27][Sansa] * 0.38 )) ) + y))
};
	-0.63;
	Arya /= -40 / Jon + ROWS
};
	-0.09
}
def rule(Arya){
	( COLS )
}
var y = 0.1
assert -1 : "What do we say to the Lord of Death?"
assert rule(-820.9062,( ( --0.06 ) ),Hodor / ( destroy(( ( COLS ) ) - -250) ) + 0.41) : "Winter is coming"
var dog = -50.3
var Ygritte = 0.76
var Stark = TABLE[-COLS][-ROWS] + -COLS + ( -betray(TABLE[y][( y ) * Arya]) )
assert -( -150.315 ) : "Winter is coming"
assert rule(Hodor,( protect(( bar() ) + TABLE[Sansa][destroy(--750.49,--( -1 ),-1)]) )) / ( rule(91) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[0][k] {
	x /= ( -y / ( COLS ) )
}
def TABLE[betray(( -1 ),1,1) / -510.4274 / --( Arya )][j] {
	if(rule()){
	Jon
};
	if(( ROWS )){
	if(ROWS){
	x
}
} else {
	9;
	Ygritte += -COLS
};
	ROWS
}
var Jon = destroy(protect(( protect(73) )),-x - ROWS)
def TABLE[ROWS / protect()][i] {
	if(Sansa){
	x += Sansa / Ygritte
}
}
def mislead(dog){
	y /= 0.53;
	if(( Ygritte )){
	ROWS;
	if(-COLS + dog * COLS){
	foo(0.39,-36);
	-( destroy(bar(ROWS - foo(( -Stark ),-Stark)),Arya) )
} else {
	if(dog - Sansa){

}
};
	if(( TABLE[-( 16 ) * betray()][-rule(mislead(destroy(-( betray(protect(-18),( x ),-mislead(-foo(--COLS + 64,TABLE[( foo(ROWS,( betray(-0.87,foo(dog)) )) )][-Jon],foo(-0.94,-TABLE[TABLE[1][Stark]][( Ygritte * TABLE[Jon][y] ) / ROWS])) / -0.8 / 710.252 - COLS * -82,foo(foo(Arya,protect(--0.19),( ( TABLE[rule(Stark,Arya * 1 * bar(bar(-0.99)) * Jon)][-1] ) )),Sansa,dog))) ),-COLS + destroy(-dog,destroy(( ( -0.95 ) ),destroy(Ygritte,96),0.72) * ( ( destroy(-0.02) ) ) + -Hodor)),( mislead() ) * 34 / COLS))] ) / 0.8881){

} else {

}
} else {
	y /= -1;
	x -= destroy(TABLE[( foo(bar(protect(0.19),protect(( -0.22 )),protect(0.28)),( TABLE[-rule(COLS / ( ( Ygritte * 1 * COLS * 0.68 + ( ( -1 ) ) * ( TABLE[y][COLS] ) ) * betray(mislead(-1 - ROWS,( ROWS )),( Sansa ),bar(0.7 - -110.01 + Jon / Ygritte)) ) / ROWS)][( --COLS + ROWS * -( x ) + 66 + Ygritte + ( bar(foo(TABLE[rule(40.505,Stark)][( ROWS )],Stark,ROWS)) ) )] ) / protect(TABLE[87][( COLS )],28)) )][Jon] + rule(x));
	if(rule(90,COLS)){
	Jon;
	( Hodor + -0.49 );
	if(COLS){
	if(-COLS){
	( COLS );
	y /= bar();
	-( dog * ( -17 ) * 1 - TABLE[protect(-9,Hodor,50)][-destroy(980.8451)] )
}
} else {

}
} else {

}
};
	if(-0.96){
	if(rule(-73)){
	if(-27){
	if(-( COLS )){
	betray(-52,-300.1,mislead(( -29 ),---( -57 )))
} else {
	if(destroy(-Sansa,mislead(Stark),-66 + COLS - 0.51)){

}
}
} else {

};
	Jon *= -mislead(-80 - -( -Jon ) + ( COLS ),protect(-( Arya ) + -bar(COLS,mislead(),( x )),( mislead(( Arya ),0.96 * bar(COLS,( -33 ))) )));
	if(--ROWS){

}
} else {
	250.68
};
	Arya /= destroy(--1,dog)
} else {
	Ygritte += -( -TABLE[-TABLE[0.13][( ( ( 39 ) ) ) + -dog + mislead(Jon)]][mislead(Hodor,--( Hodor ))] / Stark );
	if(-58){
	if(-300.271){
	if(( -( -0.92 ) ) * foo()){
	if(COLS){
	foo();
	if(16 / ( -1 ) + ( Jon ) + -ROWS){
	if(( COLS )){
	Ygritte += --66;
	Ygritte -= -mislead();
	Hodor *= -y
}
} else {
	( COLS )
};
	( rule(x,-73,( Stark )) )
} else {
	dog;
	x *= bar(( Hodor ),dog * Ygritte,-( TABLE[ROWS][0.84] ))
}
}
};
	if(x + Jon / y - -880.89){

}
} else {
	COLS;
	if(-7){
	if(23){
	-16;
	x
} else {

};
	dog -= ( Stark * -COLS )
} else {
	Hodor /= rule(( Hodor - -( protect(-45,bar(ROWS,--TABLE[Sansa][( --Arya + foo() )])) - destroy(bar(destroy(TABLE[COLS][bar(-45,TABLE[( COLS )][( -0.91 )],protect(0.76,ROWS))],250.534)),80,COLS) ) - x ),x,( ( ( 0.9 ) ) + -destroy(Sansa,--420.0848) * --COLS )) - rule(TABLE[-rule(60.8) - -rule(COLS,Jon,( foo(-COLS / ( -Jon ),--rule(( -0.13 ),COLS),-1) ))][--690.8]);
	destroy(TABLE[TABLE[-1][Arya * ( mislead(( -betray() ),( -0.11 )) ) + --( TABLE[( -0.06 )][99] )]][-foo(1)],TABLE[-42][destroy(-0.21)])
};
	Sansa *= COLS
};
	( TABLE[COLS][-COLS / ( ROWS )] )
}
}
def bar(x){
	Stark /= Stark;
	ROWS
}
def TABLE[x][i] {
	Arya -= rule()
}
assert 620.81 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = ( Hodor )
var Hodor = -TABLE[destroy(( TABLE[Arya][( -bar(ROWS,betray(-330.87,-1,0.05 / --ROWS)) )] ),-530.1652 / rule(COLS,-1) + ( betray(protect(( ( foo(dog,foo(y,ROWS,0.84)) ) ) - Hodor,COLS + -COLS,protect()),Arya) ))][0.3 + 83]
assert 0 : "Winter is coming"
assert foo() : "Nothing burns like the cold."
def TABLE[-bar(Sansa,-24) + -430.79 - Ygritte / betray(( 1 ),y)][i] {
	if(Sansa){
	-1;
	if(Jon){
	if(TABLE[COLS][-7]){
	-0.02 / Sansa
}
}
};
	if(bar(( -26 / -( ( -51 ) ) - ( Ygritte ) ))){
	if(-8){

};
	Arya *= COLS
}
}
def TABLE[1][k] {
	if(y){
	-85;
	if(foo(Ygritte,-1 * ( -0.41 ),48) + rule(TABLE[--TABLE[TABLE[-0.45][foo()] - TABLE[--0.01][TABLE[ROWS][--foo(TABLE[ROWS][( ( -( Hodor ) ) )]) - betray()]]][COLS]][920.1712])){
	if(740.94){
	-rule(-95 + ROWS,0.59) * dog;
	ROWS;
	x
};
	if(betray(-1,Stark)){

}
} else {
	0.39;
	if(ROWS){
	Arya += -TABLE[TABLE[ROWS + Stark][y] + betray(destroy()) - -80 - TABLE[--0.87][-mislead(71,( -( TABLE[----( Sansa )][Ygritte] ) - Stark ),bar(TABLE[Jon][foo(dog,Arya)]))]][Hodor];
	if(COLS){

}
}
};
	( 0.67 )
};
	dog -= 65 / --( TABLE[x][x] / --Ygritte + dog - ( TABLE[0.56][Sansa] ) / foo(bar(( -protect(protect(--1 + Ygritte,rule(destroy(88,-32),protect(( ROWS - ( 1 ) ) / ( TABLE[-0.91][Hodor] ) / -ROWS / TABLE[y][( Hodor / Arya ) * -destroy(mislead(( -0.41 / -0.29 )) - rule() + ( bar() * betray(-( -Stark ) / -bar(foo(0.84,x) + protect(TABLE[( -y ) - Ygritte + 0.95 + rule(COLS,0.74)][TABLE[( ( ( ( ( --foo(x,x) ) ) ) ) ) + ROWS][( ( ( -( -0.87 ) * Ygritte ) ) )]])),1,( -mislead(---------( ( --COLS ) + -1 ),-76) )) )) * -( 1 ) * ROWS]) + -0.09))) ),--Arya) + dog + Jon,( TABLE[ROWS][rule(x,Hodor)] )) );
	x
}
assert -Jon : "One can not simply parse himself"
def protect(dog,Arya){
	-Sansa;
	x + ( rule(-mislead()) ) / COLS
}
assert -1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = ( dog / -50.0172 )
def TABLE[y][k] {
	if(-( ( -900.9921 ) )){
	if(-0.75 * COLS){
	Stark *= -49
} else {

}
} else {
	-97 * ( TABLE[-COLS][Stark] ) / -TABLE[( mislead(Sansa) + betray(62) )][ROWS];
	-( TABLE[-Arya * 41][-110.97] ) - betray(1) * ( 75 ) / foo(Ygritte,Stark) / --rule(-1,ROWS,( ( -630.56 ) ));
	COLS + rule(Jon)
};
	Sansa += TABLE[ROWS / -protect(( TABLE[TABLE[y][-COLS]][TABLE[rule(--protect(foo(( Stark ),0.62 / Arya),ROWS) / Jon,-65,bar(rule()) / TABLE[-48][Arya])][-53]] ),Arya) * TABLE[-Stark][( 0.49 )]][--Ygritte]
}
var Hodor = mislead(COLS,rule(ROWS,Ygritte) - 0.34 / ( --( -foo(Jon / bar(98)) ) ),TABLE[destroy()][bar(mislead(( mislead(-0.09) - -COLS * -1 - rule() ) + ( --ROWS )) / ROWS)]) - -TABLE[Ygritte][-x]
def TABLE[--( 84 )][j] {
	if(COLS){
	Hodor += COLS
} else {
	Sansa /= foo();
	if(Sansa){
	if(( betray() )){
	Stark /= betray(bar(( Ygritte ),foo(ROWS,1),-COLS) * ( -protect() ),foo(),TABLE[-150.91][-protect(destroy(TABLE[COLS][-ROWS]),protect(( -COLS ),64,-0.62),Stark * Jon)]) + ( Stark );
	dog -= TABLE[( -COLS - -90 / 1 )][-0.88];
	( -98 ) * Stark
};
	if(-Hodor - --y){
	Hodor += ( rule(y,--0.27) )
}
};
	( -0.93 )
};
	Hodor * Sansa + ROWS
}
var y = COLS
def betray(Hodor){

}
var Arya = Arya
def mislead(Sansa){
	0
}
var Jon = bar(( ( dog ) ),( ( dog ) ))
def protect(dog){
	( ( -970.223 * protect() ) );
	if(-7){

}
}
var Sansa = ( betray(destroy(-bar() * -0.01,( ROWS ),---68),-280.6,mislead(90 / COLS,91,COLS)) )
def TABLE[-Arya][i] {
	if(--rule(1)){
	Stark *= 0.48;
	if(-Stark){
	destroy()
}
}
}
var y = ( dog )
def TABLE[Jon][j] {
	Jon -= COLS;
	if(( 64 )){
	-TABLE[ROWS][betray(ROWS)];
	if(-ROWS){

} else {

}
}
}
def rule(Jon,Stark,Arya){

}
assert Sansa / Jon / -39 + -( COLS ) + TABLE[Hodor][0.38] : "Nothing burns like the cold."
var Stark = -Sansa
assert TABLE[ROWS * COLS][( -0.08 * TABLE[-TABLE[destroy(-foo(47,( betray(destroy(( ( TABLE[ROWS][TABLE[( betray(1,mislead(-1,( -( -Ygritte ) ),Sansa)) )][( COLS )]] ) )),COLS,( rule(Stark,-170.736,-mislead()) )) )),TABLE[ROWS][0.65] / ROWS,0.52)][0.74]][ROWS / -66] )] : "Nothing burns like the cold."
assert COLS : "Winter is coming"
def TABLE[bar(Ygritte - TABLE[-0.13][betray()] / x,-Sansa,0.37)][j] {
	Stark += -ROWS;
	-0.39 - -( betray(--39,( 0.41 ),-960.16) ) / TABLE[bar(6)][-68];
	Sansa -= COLS
}
assert COLS : "Nothing burns like the cold."
var Arya = TABLE[( --dog / Ygritte - protect() ) / y * ( ( COLS ) ) * -foo(mislead(),-( Arya ))][rule(--Sansa,-mislead(--24,-foo()))]
def TABLE[ROWS][i] {

}
def TABLE[-Ygritte - betray(destroy(( ( rule(Ygritte,bar(Hodor)) ) ),---rule(TABLE[COLS][foo(protect(Sansa),-8)],-1)) - Jon + ( COLS ),foo(bar(( -COLS / 98 )),Sansa * bar(( -0.71 ) + ( ( -foo(-26,COLS * destroy(-0.82)) ) ))) / ROWS + Arya)][i] {
	ROWS;
	if(( 12 )){
	if(bar(-1,Ygritte)){

} else {
	Hodor /= ( ( -( ROWS ) ) * -0.82 ) / 0.81
}
};
	Stark -= protect(-0.31 + 0.85)
}
assert destroy(betray()) : "What do we say to the Lord of Death?"
def mislead(){
	if(Ygritte){
	-1;
	if(( -( foo(( COLS ),protect(COLS - x)) ) )){

} else {
	Stark
};
	Stark *= COLS
} else {
	Ygritte -= COLS
}
}
def rule(Hodor){
	-foo(Hodor) + 0.77
}
assert foo(0.97,1) : "One can not simply parse himself"
def destroy(Ygritte,dog){
	Hodor /= ROWS;
	if(-0.27 * dog){
	Stark += ( Stark )
}
}
def TABLE[Jon][j] {
	Stark -= betray(-ROWS * foo(rule(bar(( 71 ),COLS),( ( Arya ) ),( 90.204 - -1 )),Ygritte))
}
def protect(Hodor){

}
assert -foo(foo(-ROWS,----34 - ( -( ( -330.9 ) ) * -0.55 ) - 0.25 + ( ROWS )),( bar(TABLE[500.695][destroy() / y],---720.52 * ( foo(-260.019,Arya) )) ) / Ygritte) : "Nothing burns like the cold."
def rule(){

}
def mislead(Ygritte,Stark){

}
def bar(Sansa,y,Jon){
	-foo(y) * 0.17 - ( protect(TABLE[-( ROWS )][( ( -940.7 ) )],-Jon,TABLE[-1 + foo(COLS)][-ROWS]) )
}
var Stark = dog
var Ygritte = 0.76
var Jon = -92
def rule(Hodor){
	if(( COLS / -Hodor )){
	x *= -COLS + TABLE[Ygritte][( COLS ) / ( protect(ROWS,ROWS) )];
	if(TABLE[protect(( y ),foo(dog,( -83 ),Arya - -0.47 * y / dog) * 0.72)][foo(bar(),y)]){
	if(rule(y,COLS,Stark)){
	if(( x )){
	Arya *= rule(TABLE[destroy()][Arya],-( ROWS ),ROWS)
} else {

}
};
	( ( --( ( Jon / betray(COLS) ) ) ) )
} else {
	mislead(Jon,-1 / y);
	Stark
};
	( -dog )
};
	( ( COLS ) );
	if(-0.71){
	if(-mislead(ROWS,----70)){
	Stark /= betray(60.1);
	if(TABLE[Jon][COLS]){
	Hodor /= rule(dog,-Ygritte,ROWS)
} else {
	( -betray(mislead(),( ( TABLE[-72][-ROWS * Ygritte] ) ),ROWS) - -dog );
	( Arya )
}
} else {

}
} else {
	-destroy(Arya);
	if(( betray(Hodor) )){
	if(dog){
	if(COLS){
	Stark;
	ROWS;
	protect(y * 510.19 * bar(Stark,mislead(bar(--66)),Sansa),Hodor)
};
	Jon /= ROWS - Ygritte
} else {
	Jon -= -50
};
	Sansa /= -Sansa / ( COLS )
} else {
	Sansa -= 860.68;
	if(foo(( ROWS ),Ygritte * ( COLS ),rule())){
	-860.346;
	if(mislead(( Arya )) + ( ROWS )){
	Ygritte *= Ygritte * ( betray(-( COLS )) );
	-COLS
};
	x *= ROWS
};
	TABLE[---50.11][-1]
}
}
}
var Jon = TABLE[-490.89][Jon]
def TABLE[rule(( -390.8 * betray(-COLS / ( COLS )) ),Arya)][j] {
	if(( ( ( ( -1 ) * 68 ) + Ygritte + ( TABLE[1][( -120.68 )] ) - -destroy() ) )){
	if(betray(( y ) / COLS,( ( Arya ) )) + dog){

} else {
	y += ( foo(( mislead(( 1 ),-0.02,TABLE[ROWS][TABLE[Arya * ( -42 )][x]] + -dog + COLS) )) ) + ( 0.4 );
	Stark;
	if(-rule()){
	if(Jon){

};
	if(COLS){
	destroy(COLS,-1);
	Arya -= dog
} else {
	-0.52
}
}
}
}
}
def TABLE[-bar(( bar(( Sansa ),bar(-protect(( foo(TABLE[foo(( ( COLS ) ))][TABLE[ROWS - ( ( 0.53 ) ) + ( foo(Hodor,rule(TABLE[0.42][COLS])) + rule(--ROWS,-TABLE[destroy(COLS)][y] / Jon) - -( -( mislead(( -1 ),( -TABLE[foo(ROWS + ( COLS ))][( 48 )] )) ) ) ) / -17][Arya * -1]]) )))) ),Ygritte) - -ROWS][i] {
	( COLS )
}
var Hodor = bar()
def bar(dog){

}
def TABLE[( ( Hodor / COLS ) )][j] {

}
assert destroy(TABLE[TABLE[Stark][bar(-( -Hodor * destroy() ))]][betray(ROWS)],( ( 0.95 ) )) - mislead(rule(-betray(-ROWS),foo(---1),COLS),TABLE[( COLS )][( protect(COLS) )]) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = destroy(-0.5)
def TABLE[0.59][i] {
	if(destroy(protect(-0.28),bar(mislead(Sansa,TABLE[( COLS )][ROWS]),bar(COLS,rule(( -x - --11 )) - --0.04,( COLS * ( -1 ) )) - -1 / -bar(x,-0.07,( Sansa + TABLE[TABLE[64][mislead(( Stark ))]][100] )))) - betray(ROWS,mislead(-TABLE[-( -Jon )][-Arya],-TABLE[bar(betray(ROWS),-50)][-170.0745]),Sansa) / -( ( rule(-dog,290.757 / TABLE[-destroy(1) * ROWS][-COLS],Arya) ) )){
	-Arya;
	Hodor *= 84;
	-0.67
} else {
	Jon *= Stark
}
}
def betray(x,Stark,dog){
	if(Sansa + TABLE[1][( TABLE[mislead(TABLE[ROWS][bar(betray(protect(Jon,TABLE[Ygritte][bar(ROWS * ROWS,-48)]) / -0.81,Sansa,ROWS),protect(( Ygritte )))],1)][-x] ) / -1]){

} else {
	Jon -= ROWS - -mislead(0.32)
};
	if(0.03){
	TABLE[Hodor][destroy()] * ( ( protect(0.98,-34) ) - COLS )
}
}
def TABLE[TABLE[( -COLS )][Ygritte]][j] {
	if(--ROWS){
	x
};
	x += ROWS
}
assert -( betray(protect(( ( ROWS ) ),TABLE[( mislead(--x - -53 - 1 * destroy(-1,betray(protect(Hodor,-( ( 7 ) )),( protect(ROWS) ))) + -protect(),-1) )][Stark] + -0.79 + ROWS) * -Stark) ) : "Fear cuts deeper than swords."
def protect(y){

}
def TABLE[-0.99][j] {
	Sansa /= -94
}
var x = -( Sansa ) / -( y ) + foo(y - -ROWS + ( rule() ),protect(( ( 69 ) + TABLE[y][81] )),TABLE[20.33][( TABLE[ROWS * bar(-protect(mislead(betray(mislead(-destroy(Jon) / ( x ) - TABLE[-820.46 - 13][-0.64])),Ygritte),protect(-Stark,Sansa))) + COLS][ROWS] )])
def betray(){
	destroy(Ygritte,( 99 ),-COLS + ( 33 ))
}
def destroy(Jon){
	if(ROWS){

} else {
	y *= mislead(59,TABLE[600.813 * ( -( ( --dog ) ) )][ROWS]);
	if(ROWS){
	if(Jon / bar(-0.91)){
	Arya -= TABLE[rule(betray(Sansa,-18 * 0.57,-0.68))][( 23 )];
	Arya /= ( TABLE[-33][( mislead(mislead(ROWS,TABLE[-TABLE[-1][foo(-310.683) * ( 18 )]][1] + 0.87)) / ROWS )] )
};
	-Hodor - -35
}
};
	Stark *= destroy()
}
var Ygritte = bar(-rule(betray(bar() - destroy(( rule(1) )) / TABLE[-1][0.51 * COLS - ( TABLE[-11][ROWS] ) / protect()],mislead(--( COLS ),Hodor - Jon)),-( -Ygritte )),TABLE[protect()][Stark] - -0.38)
def TABLE[( ( dog ) ) / ( ROWS + COLS + 0.99 )][k] {

}
def betray(Hodor,dog){
	ROWS + -foo() / Sansa * -0.23 - x;
	y *= ( ( COLS ) )
}
def TABLE[ROWS][j] {

}
def rule(y,Sansa){
	( mislead(( TABLE[Stark][-50] )) );
	y
}
var Jon = -( rule(( TABLE[( 980.2 ) * dog + COLS][0.99] )) )
assert ( ( -Ygritte + Hodor ) ) / COLS : "Nothing burns like the cold."
def TABLE[Sansa][k] {

}
assert ( x ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(Stark,Jon,Sansa){

}
def mislead(Hodor){
	0.43;
	( ( COLS ) ) * -75
}
assert mislead(foo(foo(( Ygritte ))),Jon) : "One can not simply parse himself"
var Sansa = -1
assert foo(destroy(Hodor + ( -Sansa ))) : "One can not simply parse himself"
assert ( bar(rule()) ) * x : "Nothing burns like the cold."
def protect(Jon,Sansa){
	x /= -Arya / ROWS * Arya;
	y -= Jon
}
assert protect(1 * Arya) : "Winter is coming"
def foo(){

}
var x = ( -0.15 )
var y = protect(ROWS)
def TABLE[Hodor - ( ( Hodor ) ) + COLS][j] {
	if(( COLS )){
	Sansa -= 1
}
}
def TABLE[foo(-880.4372 + Arya / ( Hodor + -Arya ),-( ( TABLE[( destroy() )][y] ) ))][k] {
	Jon /= x - Stark - ( foo(( ( protect(ROWS) - ( destroy(67) ) ) ),Arya - ROWS) - Arya );
	24;
	if(--( Jon )){
	Sansa;
	--( x / -x - COLS ) / ( -rule(--0.73 / -22) )
} else {
	-0.93;
	COLS
}
}
var Stark = ( -( rule(protect(-0.99 + 97,( -24 ),--8),betray()) ) )
var dog = -( COLS )
def betray(Sansa,Stark,Jon){
	-ROWS
}
var Jon = ---0.39 + Jon
var Sansa = -44
assert ( -280.77 ) : "Fear cuts deeper than swords."
def mislead(Jon,y){
	if(Jon + -destroy(protect(COLS,Sansa,( Jon ) / -0.92 - -ROWS * -( TABLE[-1][Stark] - bar(( protect() ),( COLS )) ) * dog),( rule(( ( -530.0517 ) + -COLS + 49 )) )) - ( ( ( 1 ) ) )){
	if(-protect(-rule(-Stark,( TABLE[Sansa][-( -betray(COLS * TABLE[390.9][-60],1) ) / COLS] )) - y * foo(Hodor / ( -foo(0.13) ) * Sansa,COLS,COLS))){

} else {
	Jon /= -( -0.61 )
}
} else {
	if(Stark){
	Arya *= Arya;
	foo(( ( betray(Stark,-COLS,Sansa) ) ),( TABLE[-19][490.233] / ( --Stark ) ) + --( ( dog ) - Arya ),protect(-1))
};
	rule();
	Ygritte
};
	Arya *= -( -0.33 );
	Sansa -= ( dog )
}
def mislead(x,Arya,x){
	if(780.911){
	Hodor -= TABLE[ROWS][ROWS]
}
}
var Ygritte = Arya
assert Ygritte : "What do we say to the Lord of Death?"
def destroy(){
	dog -= ( -( destroy(rule(bar(120.331 + COLS)),-1,Jon) ) * Hodor )
}
var Jon = ROWS
def TABLE[Hodor][k] {
	Stark *= TABLE[-ROWS + ( rule() )][-84] + bar(betray(-ROWS,-( ( 95 ) - foo(( ( -protect(COLS) ) / Hodor ) + TABLE[850.9][-( TABLE[bar(ROWS)][ROWS - mislead(720.4) - Sansa] )]) )),1);
	if(protect()){

} else {
	-320.86
}
}
assert ( ( TABLE[Ygritte][-410.696] ) + ( ROWS ) ) : "Nothing burns like the cold."
assert x : "What do we say to the Lord of Death?"
assert foo(Jon) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[---COLS][i] {
	x /= --ROWS;
	Stark += ROWS
}
var dog = -1
var x = Hodor
def betray(Sansa){

}
def destroy(){
	dog += mislead();
	Hodor /= betray(destroy(ROWS,-foo(x * --10 * TABLE[Stark * -( -rule(-390.504,( -betray(dog,( -( 60 ) )) )) ) + 0.03 + foo(( COLS ),-destroy(-0.17,0.22),( -destroy() + -rule() ))][( TABLE[-40.2][y] )]) + --36) + --Stark,( Hodor ))
}
assert -ROWS - -protect(( -foo(rule(Ygritte,foo(( x ) / protect(( -ROWS )),Hodor))) )) : "One can not simply parse himself"
var y = x
var Jon = -( 370.162 )
var y = -1 / bar(y,( destroy(( -1 )) )) * ( x ) - --680.758
var dog = protect(-( -ROWS ),-0.15)
def bar(y){
	-( -1 );
	980.06 / betray(TABLE[betray(( Ygritte ),( 1 + rule(COLS) ) * TABLE[ROWS][( --0.67 )])][( Ygritte )],-( --bar() ) * 83) / -foo(-bar(y));
	Jon += --ROWS * betray(( Stark ) + -bar(( ( -COLS ) - -ROWS ),ROWS,-protect()))
}
assert bar(protect(COLS + betray(( ( Hodor ) ),Sansa * -Sansa),x,-480.713),ROWS) : "Nothing burns like the cold."
def mislead(){
	Hodor *= -COLS;
	if(-( ROWS )){

} else {

}
}
def destroy(dog){
	Hodor -= -Stark;
	dog;
	dog -= foo(Ygritte,-protect(-970.8891) - ( x - -1 ) - -foo(ROWS,Hodor),mislead(dog))
}
var y = ROWS - ( 1 )
assert bar(mislead(TABLE[-rule(-( destroy(Arya,-( ( Jon ) ) + destroy(---destroy(-64,rule(( ROWS ),-TABLE[-( -1 ) + TABLE[( mislead() )][( -( COLS ) )]][68],Stark)) + TABLE[( rule() )][290.4] + betray(( ( mislead(bar(ROWS),-80.81 - 1 * dog - -42) ) ),( ( COLS / betray(Jon) / ( ( 0 ) ) + -510.2743 ) ) - COLS) * 0.33),-20) ) / -destroy(dog) + -mislead(Sansa / --betray(--97,1,-dog) * -mislead(--1,destroy())) - -rule(0.01,-0.83,-( ( ROWS ) ) - -1 * -18) * -0.77,ROWS)][Jon])) : "Fear cuts deeper than swords."
def betray(Hodor,Jon){
	Stark;
	mislead() / Stark
}
var dog = ( Jon )
var y = betray(Sansa,y)
def foo(Sansa,Ygritte){
	destroy(Hodor - ( -1 ),ROWS);
	x;
	y *= ( ( ( Sansa / -98 ) ) )
}
def rule(Arya,Stark){

}
def betray(){
	-( ( mislead(97 / 92) - -protect(-( 890.6481 ) / Stark + 45,-5) ) ) * ( 320.814 );
	if(rule(( -( ( -y / -0.43 ) ) )) + protect(70,( Jon ))){

} else {
	Stark -= --( ( -Arya ) ) + ( TABLE[Jon][ROWS] ) + -7;
	ROWS / TABLE[( -19 )][-1] / TABLE[TABLE[protect()][mislead(-1)]][Jon] - Stark;
	if(Stark){
	( -1 );
	if(-( Hodor )){
	if(570.121){

} else {
	if(Arya){
	y /= 0.07
};
	x
};
	-0.78 * rule();
	if(( COLS + -0.84 + 20 * TABLE[COLS][--1] ) + ( destroy(foo(--1,( Sansa ))) )){
	if(Jon / TABLE[mislead(dog - dog / x)][( 0.11 )]){
	if(-( -COLS )){
	( mislead(mislead(( -protect() ),( ( protect(---( destroy(Ygritte,bar(protect(dog) * COLS - y),COLS) ),-1) ) )) / ROWS) );
	if(( Stark )){
	Sansa += Stark
} else {
	Ygritte -= ( TABLE[13][54] )
};
	foo(dog * 1,Ygritte,--( ROWS ))
} else {

};
	if(( ROWS )){
	dog -= Arya / ( TABLE[-0.68][25] )
};
	-40
}
}
}
}
};
	if(y){
	Sansa += foo(-800.6478 + protect(( 92 )));
	if(( 240.192 - ROWS )){
	if(-0.27){
	Ygritte *= 0.76 + 0.05;
	( ( betray() ) )
};
	if(7){
	-dog;
	( Ygritte );
	Stark *= Jon
} else {
	if(x - ( ( -----1 ) )){
	COLS;
	y *= --0.68 / TABLE[foo(COLS,-Jon + Sansa,( TABLE[mislead(-42)][bar(-Sansa + x,x)] ))][( -820.601 )] * ROWS
} else {
	Ygritte;
	-ROWS
};
	y -= betray(y - COLS)
};
	( ROWS / y )
};
	Ygritte /= Arya
}
}
def TABLE[bar(-Stark - -Hodor - Stark,-39,1)][k] {
	foo(betray(-35 / COLS,rule(65,Arya)));
	if(ROWS){

}
}
def TABLE[( x )][i] {
	-COLS
}
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = 86
assert -0.28 : "Nothing burns like the cold."
def foo(x,Hodor){
	Jon *= rule(mislead(protect(),( --1 ),bar()),-0.69);
	----Hodor;
	Hodor *= ( foo() )
}
assert mislead(rule(x,86 + ( -0.89 ))) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[rule(( 99 ))][i] {
	Sansa
}
var y = -TABLE[--ROWS + ROWS - ( betray(-Stark / COLS,-ROWS,0.23) )][( ( TABLE[-1 * rule(COLS) - COLS][Stark - ROWS] ) )]
assert -dog : "Winter is coming"
def protect(){
	dog /= x;
	-( 1000.1 );
	if(( -0.52 )){
	Stark -= foo(( ( COLS ) )) * -73;
	-0.92;
	if(protect(( -1 ))){
	--1
}
}
}
def TABLE[( rule(COLS - -Ygritte - mislead(( -91 )) + Arya / COLS - 1 + ---59,( ( ( COLS ) / Sansa ) / rule() ),( -0.86 )) )][i] {
	Sansa
}
def TABLE[-70][k] {
	if(Stark){

};
	if(-0.92){
	-0.05 - ROWS;
	if(-640.761){

} else {

}
} else {
	-460.05
};
	COLS
}
var y = Ygritte
def mislead(Arya,y){
	if(--COLS){
	Sansa *= 0.43;
	if(Ygritte){
	Ygritte /= -0.13 + -( mislead(( y * -destroy(COLS) ),1) )
};
	if(-( ROWS + ( ROWS + bar(betray(( betray(destroy(bar(foo(-870.21,-foo(0.45),Hodor),( ( -ROWS + 0.73 ) ),Ygritte),foo(mislead()),COLS),Ygritte) ),Stark,bar(( 1 ) / -0.56 + -y)),ROWS) ) - -TABLE[foo(-COLS,17)][COLS] + ROWS - protect(( ( Jon - ( rule(0.1,Stark + COLS,( Stark )) ) / COLS ) )) ) / -1){
	Sansa -= Ygritte;
	Sansa *= ( 0.9 / x )
}
}
}
var y = ( Ygritte * --0.55 / destroy(Arya) * -1 )
var dog = ( ( TABLE[1][--bar(30 - -ROWS,mislead(TABLE[-Hodor][destroy(( Hodor ) * y - dog - destroy(-Jon,COLS,Arya))],protect() + 13 + TABLE[( x )][Jon + -( ( ROWS ) )] / -97 / dog,mislead())) - dog] ) )
def betray(Stark,Hodor,Arya){
	y *= COLS;
	if(Hodor){
	( protect(( rule(foo(-protect(0.79,-ROWS)) + ( rule(-rule(( -0.91 ),bar()),-( protect(-( ( ( --mislead(rule(Arya,COLS),dog,destroy(foo(-1),Sansa) - ( 0.08 / -0.73 * x )) ) ) ) + ROWS) ) / bar(rule(-TABLE[( -TABLE[ROWS][0.75] )][( 1 )],Hodor),COLS)) )) ),dog) );
	Ygritte += ( y )
} else {
	Sansa += ( ----( 0.66 ) )
};
	-mislead(-1 / Hodor,( ( COLS ) ),bar(COLS))
}
def foo(Arya,Jon){
	if(33){
	( destroy(COLS) );
	-bar(dog,--( protect(bar(1 + protect(-( Hodor )))) ) - Jon)
} else {
	-TABLE[COLS][0.32] / protect(49,( rule(1) ) - destroy(),Jon - ( mislead(Hodor - -780.978) ))
}
}
def TABLE[-1 / ROWS * dog][k] {

}
def foo(Hodor){
	Sansa *= -4;
	rule(ROWS)
}
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = -( x )
def TABLE[mislead(( -1 ),( Arya * 70 ),COLS)][j] {
	bar();
	y - --0.27 * COLS - ( --Hodor + rule(COLS) ) + TABLE[40][Ygritte]
}
assert dog : "Fear cuts deeper than swords."
var y = foo()
assert COLS : "One can not simply parse himself"
assert betray(ROWS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert COLS : "Nothing burns like the cold."
def TABLE[Sansa][k] {
	if(Sansa){
	if(-x){
	x -= Sansa;
	Jon /= --Jon
}
} else {
	bar(Jon,( Ygritte )) / COLS / -betray(-foo(-0.91,0.19,--Ygritte * -mislead(0.9 * TABLE[-( -1 * ROWS / mislead(x - -0.13) / COLS )][( y )]) * -Jon + -24 / -foo(rule(-betray())) / y * -foo(-79,bar(COLS)) * -foo(Ygritte,( TABLE[--( betray() )][TABLE[-TABLE[81][ROWS]][( protect(TABLE[-79][x]) )]] / ( protect(( -0.21 )) ) )) / -TABLE[Hodor][TABLE[( ROWS )][-45]]));
	-1
};
	ROWS;
	Stark += ROWS
}
def TABLE[Sansa][k] {
	rule(--mislead() * COLS) / -1 * -foo(( 1 ),--0.4 / TABLE[COLS][mislead(COLS,-0.53 - ( ROWS ))] + -( foo(( bar(--450.02 + ( -60 ),betray(-Arya)) ),bar(TABLE[TABLE[Stark][61 * rule(-bar(rule(destroy(-betray(destroy(betray(( -( ROWS ) + ( COLS ) ),-dog,( ROWS )),-TABLE[COLS][( ( dog * -COLS ) )] / TABLE[( ROWS )][TABLE[-0.31][--ROWS]] * x,ROWS)) * -46,Ygritte) + -( ( COLS * ( -Arya ) ) ) / foo(protect(TABLE[ROWS][ROWS] / Ygritte + -COLS * -1 + bar(89,COLS,Arya) * -( 0.13 ) + 94)),-TABLE[-bar(--1,-protect(),-0.04)][( -Jon )],-1 + ( foo(y,Stark) )),-rule(--0.31 * -510.3,---rule(--rule(TABLE[COLS - Ygritte + -1 * ( ( foo(bar(Hodor)) ) )][-0.06],rule(( ROWS ),-( TABLE[Arya][destroy(foo(--0.97))] )))) * ( mislead() ) / ( 70.556 ))) - betray(18 * ( -74 ),( --betray(mislead(-0.48,Jon)) - COLS ),-960.936),0.54)]][Sansa - rule(COLS,COLS,-x - -betray(--0.59,Sansa))]) * protect(),mislead()) + betray(( Arya )) ) - Hodor,betray(-TABLE[590.2763][Sansa],-( COLS ) - Hodor + ROWS)) - foo(x,( Hodor )) / -betray(destroy());
	if(1){
	( COLS );
	if(-0.08){

}
}
}
def TABLE[1][k] {
	if(-COLS){

};
	if(dog){
	if(destroy(420.7)){
	if(foo()){
	if(TABLE[mislead(TABLE[dog][-foo(foo(),mislead(Stark,( Ygritte )))])][Hodor]){

} else {
	y += -0.79
}
};
	Stark *= COLS
};
	Jon
} else {
	( Ygritte );
	Stark;
	if(ROWS){
	TABLE[--ROWS][--0.27 + ( -75 + -Hodor - TABLE[-rule(-1,TABLE[Stark - Arya][( TABLE[ROWS][protect(( Ygritte * ( ( TABLE[---0.62][ROWS / ROWS - ( -ROWS ) + --x] ) / ( bar(-( COLS )) ) ) ) / Ygritte,Ygritte)] - betray(COLS,-0.81,( COLS )) + x ) - 300.123],( bar(-66) ))][-0.15] ) + bar()]
} else {
	x
}
}
}
var y = ( ---74 )
var Hodor = ( -mislead(TABLE[( rule(rule(-1,destroy(mislead(betray(-Arya,-( -( COLS ) )),-44,foo()),TABLE[y][97])) * ---COLS,ROWS) )][46],x) - -( betray(( destroy(( Arya ),---( dog )) )) ) )
var x = destroy()
var Hodor = -ROWS - ( TABLE[( destroy(Arya,Arya) )][( destroy(( Ygritte ),Sansa,Hodor) + TABLE[-foo()][TABLE[-1 - -TABLE[protect(--56 / ( ( --67 ) + ( Jon ) ),TABLE[( ROWS )][2 - x],ROWS)][( Sansa )] - -530.15][5]] )] ) - foo() / Jon + rule(foo(protect(1),-( y - -360.2 ) * dog - -31 + betray(--dog,-0.5)),bar(( Hodor ))) * rule(COLS) / mislead(-41,-1) * Stark / ( -Hodor )
assert -21 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(Jon){
	if(COLS){
	if(mislead(Hodor,-protect(TABLE[dog - 240.9604 - ROWS / Stark][COLS],--( --mislead(Stark / ROWS / -0.15 + ( ( -0.34 ) ) * foo(-( -mislead(x,TABLE[COLS][-Hodor] / 12) ) + ( COLS - 1 / x )),mislead()) )))){
	Ygritte += ( --0.19 - ( ROWS ) ) - x;
	71
} else {
	if(Stark){
	COLS;
	if(-dog){
	if(-0.88){
	---( -y ) - ( ( TABLE[TABLE[390.6051][Ygritte]][0.66] - COLS ) );
	if(TABLE[Stark][Arya]){
	if(mislead(Sansa)){
	COLS;
	dog *= ( -rule(-42,43) - COLS / 1 )
}
} else {

};
	Arya /= -Hodor
};
	if(COLS / -Hodor){

} else {
	390;
	foo(-Jon)
}
} else {
	Arya -= ( ( TABLE[ROWS][betray(foo(-0.99),-Arya)] + ( x ) + -dog ) );
	Ygritte /= --32;
	dog /= ( ( -TABLE[-( ROWS )][-Sansa] ) ) * Hodor + Stark
}
};
	if(ROWS){
	Ygritte *= Stark;
	destroy(betray(dog),foo(x,-72,TABLE[ROWS / TABLE[( Arya )][TABLE[( ( 960.81 ) )][Stark]] * foo(( ROWS )) * ( 85 )][0.03]),Hodor)
} else {
	mislead(( Jon ),( -( -98 ) ),COLS);
	-dog
}
}
} else {
	if(( ROWS )){
	if(betray(Hodor / --Stark)){
	Hodor -= -( --0.51 - ROWS ) * betray(( ( destroy(--50.685) ) * --0.86 * x / 91 )) + ( Hodor );
	Ygritte += ( -Stark * ( -Hodor ) )
};
	ROWS
};
	if(-0.78){
	bar(COLS,ROWS);
	COLS;
	if(-COLS){
	Jon += ( betray(-( COLS ),ROWS) )
} else {
	y -= destroy(rule(ROWS))
}
} else {

}
};
	if(-( TABLE[dog][rule(-93,--0.81) - ( Arya )] )){
	if(( -rule() )){
	dog /= ( protect(Hodor,( y + 580.65 + COLS )) );
	Ygritte += -42
}
} else {
	Hodor -= COLS
};
	660.3
}
def TABLE[foo(-Jon - ( Arya ),( protect() ))][j] {
	if(-x){
	-bar(Sansa,54);
	if(rule()){

} else {
	x -= rule(Sansa)
}
};
	if(( --destroy(--0.78,-930.88,destroy()) / -( -510.71 + 22 ) )){
	Jon /= 0.55
};
	bar(ROWS,-0.94,-foo(690.2009,( ---mislead() )) - --( TABLE[Ygritte][y] ))
}
var y = ROWS
var x = -47 / Sansa
def TABLE[--( 26 )][i] {

}
def protect(Stark,dog){
	if(0.03){
	( -0.05 );
	Jon *= -( x )
}
}
def TABLE[-24][j] {
	Hodor
}
var Ygritte = -protect(930.335)
var Jon = ( dog )
assert foo(dog,29,( rule(( -Sansa / destroy(-COLS,betray(COLS * COLS)) / Jon + ROWS ),Jon) )) : "Winter is coming"
def foo(Stark,Stark){

}
var Hodor = 16 * ( TABLE[-( -dog ) - betray(470.951,-0.95)][COLS] / -dog - ( ( TABLE[( dog * ( protect(( ROWS )) ) )][foo(-rule(Jon,y,--x))] ) ) )
def betray(dog,Stark){
	Jon
}
assert ( TABLE[( --Ygritte )][-( 69 )] ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -( rule() ) : "Winter is coming"
def protect(dog,y){
	( -mislead(( -0.18 ),x) );
	Stark += 0.35;
	COLS
}
assert 0.65 : "One can not simply parse himself"
var Arya = bar()
var y = ---( -0.33 ) / ROWS
var x = x
def TABLE[COLS - bar(TABLE[-ROWS + 100][0.27])][j] {
	---ROWS;
	Arya /= Hodor;
	Stark += protect()
}
assert ( Arya ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = -0.59
var dog = -ROWS
def foo(Jon){
	if(protect()){

} else {
	Sansa += COLS
}
}
def protect(dog,Stark){
	if(590.966){
	if(49){
	Sansa *= -( ( ( ROWS ) ) ) / Stark + foo(protect(-COLS,( 32 - ROWS )) / Stark,TABLE[-28][protect(23,x,y) - Arya]) + destroy(dog);
	1;
	if(-0.06){
	Arya += ROWS
} else {

}
} else {
	COLS
};
	-TABLE[COLS][protect(dog,( mislead(TABLE[( -200.9 * dog )][1]) / 0.25 ) * ROWS,rule())];
	0.66
} else {
	if(-54){
	-protect(COLS,( protect(y,-bar(TABLE[Arya][( x )] - ROWS,-x)) )) * TABLE[TABLE[Arya][1]][ROWS] * -99;
	Ygritte *= ( -290.317 );
	Hodor -= COLS
};
	-TABLE[480.768][-TABLE[TABLE[x][94 - -COLS] - ( -betray(TABLE[( ROWS ) + destroy(-0.76)][-0.44]) )][( ( ( -0.62 ) ) )]]
};
	Sansa
}
def protect(Stark){
	if(0.81){
	Sansa /= protect(-Ygritte,ROWS);
	( ROWS / y * -( TABLE[-( 0.24 ) * Hodor - -mislead(( ( -( Ygritte ) + -0.86 ) ))][-destroy(--0.36) / ( bar() )] ) + ( -810.9818 ) ) - protect(-590.3,( ROWS )) * --0.41;
	if(Ygritte){
	if(-82){
	Arya -= x;
	if(TABLE[destroy(Arya,-Sansa)][-73]){
	protect(( 84 )) - Arya
} else {
	Arya /= Sansa;
	if(-880.58 + -0.91){
	( mislead(dog,-( 0.69 )) );
	if(Stark){
	COLS
} else {
	if(Jon){
	( ( -62 * COLS ) )
};
	x -= COLS
}
} else {
	if(-destroy(ROWS,y)){
	-15
};
	dog += COLS;
	-1
}
}
}
} else {
	Hodor
}
};
	Stark /= 28 - -betray(TABLE[Jon][-99 - ( x )],TABLE[rule()][Jon] + TABLE[-COLS * ( 78 )][72] * protect() * protect() / ( Arya )) * ( Arya ) * 37;
	Stark += -( bar(TABLE[( COLS + -TABLE[foo(COLS)][ROWS] ) * -bar(foo(),---rule(57,TABLE[TABLE[-Sansa * TABLE[Hodor][TABLE[rule()][Stark]]][-1]][( ROWS )]))][-83 * 47 * ( x )]) - ROWS )
}
def TABLE[TABLE[-0.09][-0.36] + -foo(foo())][i] {
	( -ROWS + bar(protect(destroy(Hodor,bar()),( -64 )),( COLS )) )
}
def betray(x,Jon,y){
	( ( Arya ) - TABLE[-55][( Sansa )] * -dog )
}
var Sansa = COLS * -( mislead(y,35,TABLE[1][( COLS )]) )
def TABLE[Sansa][k] {
	Ygritte += ( dog )
}
def destroy(Arya,Hodor){
	if(( Arya )){
	foo(( --dog / -( ( -83 ) * 0.92 + ( -50 - bar(mislead(COLS,--Ygritte * ( ROWS ))) + Arya ) + betray(TABLE[destroy(( --26 ),-90.1013)][-y],destroy(-y + --protect(1,betray(-1,TABLE[---mislead(0.29,( ROWS ) + -510.9,-ROWS * ( -COLS ))][Stark],rule(ROWS,--rule(530.397)) / protect(( Sansa + TABLE[-TABLE[COLS][COLS]][Hodor] ),( -TABLE[x][-TABLE[-foo(betray(TABLE[betray(foo(y,-11))][75]),ROWS) + mislead(( ( -0.68 ) ),COLS)][TABLE[TABLE[-2][Ygritte / ( Stark )]][rule(x,TABLE[COLS][protect(-COLS,-bar(TABLE[TABLE[dog][betray()] * ( ( ( -24 ) ) ) * Arya - 290.7509][y] / Arya,TABLE[-0.73][mislead(TABLE[dog][-31 * -destroy(--43,y,bar(-0.98)) + 59])]))])]]] ))),ROWS) / -53 + --rule(ROWS * rule(TABLE[ROWS][mislead(( x ),betray(--850.945,TABLE[bar(-ROWS,( 1 ),betray())][y]),Jon)],-bar(-COLS + 64,-350.69),foo(foo(ROWS - ( 0.18 ),dog,--ROWS))),TABLE[0.55][ROWS] * x) - --0.16 / y,160.065),-82) ) ))
} else {
	if(foo(Arya + ( -23 ),ROWS,Arya)){
	y /= Arya + --44 / TABLE[TABLE[-830.8][COLS - destroy(ROWS + destroy(bar(ROWS,-14),y,( -12 )))]][protect(Arya,Hodor)]
}
};
	Stark;
	Stark
}
assert ( TABLE[22][-Stark] ) : "One can not simply parse himself"
assert foo(Ygritte,foo(dog,-protect() - COLS),-1) : "One can not simply parse himself"
def TABLE[COLS][j] {

}
var Sansa = rule(bar(ROWS))
def TABLE[-COLS / ( TABLE[TABLE[( COLS )][ROWS]][-0.98] )][j] {

}
def bar(Sansa){
	rule() - x * betray(COLS)
}
def TABLE[COLS][k] {

}
assert ( ( -39 ) ) : "Fear cuts deeper than swords."
assert -Stark : "Winter is coming"
def mislead(y,Arya){
	-betray(0.45,--( ( betray(55,-1) ) ))
}
def rule(){
	if(y){

}
}
def rule(Arya,Stark,dog){

}
var Stark = ---rule(destroy(protect(rule(),Hodor,foo(dog,COLS,x + ( 0.44 - -( Stark ) ) * ( ( COLS ) ))),TABLE[protect()][x]),bar(-0.68)) - -protect()
def TABLE[( Sansa )][i] {
	Hodor -= COLS;
	if(-( -TABLE[-mislead(-( ( -Stark ) ),-( 64 ) / -bar(protect(-93)) / ( 40 + -TABLE[-TABLE[ROWS / ROWS][1 - ( TABLE[( -x )][-Sansa] + -38 )] / ROWS - Jon / TABLE[rule(( dog ))][( ( -dog ) )]][bar(( ( y ) ) - 74)] ))][0.59] * foo(( TABLE[--25][-COLS - -x] )) * Ygritte - ( -47 ) + TABLE[-COLS - -bar(-( -31 ),mislead(TABLE[-rule(( --dog - y + mislead() + ( TABLE[Sansa / ( 660.009 )][rule(Arya)] ) / -0.86 - -Jon ))][ROWS]),betray(-990.474)) * -950.134][94] / y ) - --0.72){

} else {
	-1;
	Sansa += 8
};
	if(Sansa * bar(-( Stark ),0.39,--20 / x)){
	-TABLE[Arya][-ROWS - -( -Arya ) / betray(COLS,( foo(betray(--destroy(COLS,( COLS ),x)) - foo(Hodor)) ))]
} else {
	if(y){
	TABLE[rule(-3) / 1][-x];
	x *= ROWS;
	Hodor *= -COLS
};
	if(ROWS){
	protect(( ROWS ),( -0.05 ))
}
}
}
def TABLE[Jon][k] {

}
assert -78 : "Nothing burns like the cold."
var Arya = dog - --10 / Stark
var Sansa = --( COLS )
def protect(Ygritte,x){
	if(Hodor){
	Arya -= ROWS;
	if(-( x )){
	if(mislead()){
	if(x){
	Arya -= foo(-1,-52) / protect(-35 / --62,-Hodor) / ( ( -0.98 ) );
	--Sansa
};
	if(--0.59){
	if(TABLE[-( bar(( ( x ) ),mislead(COLS,TABLE[Hodor][destroy()],-bar())) )][Sansa]){

} else {
	Ygritte *= ---x - foo(bar(dog,( -Ygritte )));
	if(Ygritte){
	-70;
	COLS;
	Ygritte /= 0.14 + ROWS / ROWS
} else {
	if(( COLS )){
	if(ROWS * foo(ROWS) - Arya + ( -( betray(-TABLE[-COLS][destroy()],y + -84) ) + ( ( Jon / ( ( protect(protect(betray(-ROWS,( rule(-( betray() ) / mislead(TABLE[COLS * x][-bar(Sansa - x,( COLS * x ),TABLE[bar()][( -( Ygritte ) * TABLE[ROWS][Jon] )])],( protect(TABLE[bar(( Ygritte ))][ROWS],betray(foo(COLS + 59 * TABLE[-69][ROWS] + ( rule(bar(ROWS,( -0.03 + x ))) )),TABLE[--y][bar(Stark,-rule(),-50)],x + ( ROWS )),Stark) ),Stark) - ( betray(foo(-Sansa,bar(rule(1,Sansa - -0.55 * 0.88) / COLS,( ( -75 ) - mislead(( 330.278 )) )),Ygritte),y) ),( ( destroy(COLS,dog) ) )) ),foo())) * bar(ROWS) + -ROWS / TABLE[( -Jon )][x],y * Ygritte) ) ) ) ) )){
	0.81;
	Ygritte;
	Ygritte /= betray(dog,ROWS) / COLS - y
} else {
	Hodor += -foo(COLS,74,Stark) + -( -COLS * y )
};
	Jon += 0.94 * -13 * ROWS * rule(( dog ),( -( x ) )) / 0.61 / Sansa;
	Arya -= ( ( 0.83 - 26 ) )
}
};
	if(y){
	dog *= ( -0.82 );
	if(betray(( -1 ),mislead())){
	( destroy(Arya,betray(Arya,-1)) )
}
}
};
	Sansa *= protect(-mislead(ROWS,-rule(TABLE[Hodor][----1],TABLE[----TABLE[Sansa][-rule(ROWS)]][( ( 69 * COLS ) )]))) / ( TABLE[-( -Hodor )][( ( 32 - x + ( ROWS ) ) - ROWS )] )
};
	if(1){
	Arya += TABLE[betray(betray(( -58 - TABLE[Sansa * Sansa][ROWS] ),( -Hodor + TABLE[( ( ( -0.91 ) ) )][ROWS] + COLS ) / Arya),-( COLS + destroy(-1) ))][Sansa] + ( ( 0 ) )
}
};
	if(--9 - 580.6202){

} else {

}
} else {
	if(-( COLS )){
	( -1 );
	if(( Hodor )){
	dog *= ( TABLE[COLS][betray(Hodor)] );
	if(( foo(Hodor) * -750.3 ) - -dog * -0.92 - Ygritte){

}
}
} else {

};
	if(( 29 )){
	if(30){
	if(85 * Ygritte){

}
} else {
	-1 / ( COLS ) + 1 + foo() - destroy(1,COLS) + COLS - Sansa;
	if(foo(( 1 ))){
	Ygritte += -Hodor;
	Ygritte *= -( Hodor )
} else {
	COLS;
	if(( destroy(-ROWS,rule(-ROWS,foo(--0.72 - 140.4))) + ROWS )){
	-24
}
}
}
};
	dog *= ( destroy(Stark) )
}
}
}
assert -TABLE[COLS][Hodor] : "Fear cuts deeper than swords."
def rule(){
	if(-0.97 + -( Arya ) - -1){
	Arya /= foo(( y ),( COLS ),( ( Arya ) ));
	dog /= -70;
	Jon += COLS
};
	destroy(-( 1 ),destroy(--( TABLE[-0.52][1] ),TABLE[Jon * -( 330.756 )][betray(-1,--0.57)] - -0.43,bar(( -0.68 ) * Stark,destroy(TABLE[( ( rule(y * bar(-1,rule(Ygritte),COLS),( ROWS )) ) ) * Jon][-( ( ( -90.989 ) ) / ROWS )],0.74,ROWS * mislead(-94)) * Hodor - TABLE[Ygritte][mislead(0.44)])))
}
assert -TABLE[( -Stark )][Hodor] : "One can not simply parse himself"
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[destroy(( destroy() )) - ( -rule() + --ROWS )][k] {

}
def foo(Sansa){
	if(rule()){
	-94
}
}
var x = protect()
def TABLE[betray(x * Sansa / mislead(( Arya ),protect(( -70.8 + -( -ROWS ) ),COLS),-ROWS),foo())][j] {
	y *= -1
}
assert -Arya : "Nothing burns like the cold."
var Arya = ( -0.17 )
def TABLE[-bar()][j] {

}
assert -0.73 : "Nothing burns like the cold."
def destroy(Jon){
	if(--1){
	( mislead(protect(( Hodor ))) );
	Arya += ( ROWS );
	if(0.11){
	( ( x ) - -0.64 );
	x *= Ygritte
} else {
	foo(24)
}
} else {
	x
};
	if(foo()){
	Arya *= Jon;
	dog /= ( Arya )
} else {

}
}
assert ( ROWS ) : "Fear cuts deeper than swords."
assert COLS : "One can not simply parse himself"
assert bar() : "Nothing burns like the cold."
def TABLE[1][k] {

}
def bar(Arya,dog,Sansa){
	Arya *= -740.34;
	Hodor -= -COLS / destroy(-foo() / COLS,destroy(Ygritte,dog))
}
def TABLE[( ( COLS ) )][k] {

}
def mislead(y,Arya){
	if(bar(ROWS,--0.6) * Sansa / ROWS + ( ROWS ) * COLS){
	x;
	Hodor -= COLS
} else {
	COLS * -betray(26,Sansa / betray(TABLE[-COLS][dog],ROWS,x),1);
	if(( 76 ) + --82){
	( -540.02 )
}
}
}
def foo(Ygritte){

}
var Stark = TABLE[COLS * Jon][Sansa - COLS]
def rule(){
	Ygritte += dog
}
assert -TABLE[rule(Hodor,-20 + bar(( ( TABLE[y][( Stark )] ) ) / -TABLE[-0.5][( betray() - -1 / TABLE[protect()][( -foo(COLS - ( ( COLS ) ),( -( -foo() - ( Stark ) ) ) - -betray(-0.99)) )] )],bar(21,dog - -1,TABLE[protect(350)][-dog]) * -0.6 + x) - Ygritte)][Hodor] + Ygritte : "Winter is coming"
def bar(dog,Stark){
	TABLE[-COLS][ROWS];
	Stark -= protect(y)
}
def TABLE[0][k] {
	if(---510.354 + ROWS + TABLE[0.48][--1 - ( protect(foo(Ygritte * Ygritte)) )]){
	( betray(-( rule(bar(-y)) ),-1) ) * 74
};
	if(x){

} else {

}
}
var dog = -TABLE[ROWS][( ( ---( ( rule(( ( ROWS ) ),destroy(( -0.51 ))) ) ) ) ) - ROWS]
assert bar(Stark) : "What do we say to the Lord of Death?"
def TABLE[foo(protect(COLS / Jon))][i] {
	Stark *= ( ( COLS ) * ( --1 ) )
}
assert ROWS : "Winter is coming"
var x = mislead(-foo(destroy(),-foo(( -Sansa ))))
def TABLE[-( foo(( betray(-1) )) * COLS * TABLE[( -480.62 )][( ( -1 ) )] )][k] {

}
def TABLE[-ROWS / -rule(Stark,bar())][k] {
	betray(( ( ( -ROWS ) ) ) + -protect(-( ( Hodor + Jon ) )));
	if(-ROWS + Arya * ( ( -86 ) - 0.21 ) * ROWS){
	Hodor
};
	Stark += ( destroy(Stark) )
}
def TABLE[TABLE[ROWS][dog]][i] {
	if(y){
	if(-betray(-bar(170.98,TABLE[1][-protect(dog)]) - foo(( -0.59 ),betray(ROWS)) - -0.35) - -TABLE[( Stark ) + TABLE[mislead(Arya,COLS)][TABLE[COLS][TABLE[bar(-0.57)][( Hodor )]] / ( mislead() ) + 0.22]][mislead(-( 0.38 / ( -0.15 - bar(ROWS) ) ))]){
	protect(mislead(-1,Arya / ( COLS / mislead(TABLE[ROWS][TABLE[destroy(Jon / x)][mislead(ROWS,Stark)]]) )),( COLS ) * COLS)
} else {
	ROWS;
	-0.97
};
	betray()
}
}
assert ROWS + --COLS * Jon : "Winter is coming"
def destroy(Sansa,y){
	ROWS - y;
	x /= Stark
}
def TABLE[Stark * destroy()][k] {
	Arya *= ROWS;
	-( ( rule(TABLE[-destroy(destroy(),-470.31 + ( -mislead() ),( COLS ))][ROWS],TABLE[-440.566 * protect(y,-dog * TABLE[0.59][ROWS] - bar(( -0.91 ) - ( protect(-protect(( protect(-( ROWS ),protect(rule(),( mislead(destroy(( Arya )),Arya) * -( ( ( ( -dog ) ) ) ) * COLS + Jon ))) ),-( destroy() ),--betray())) ),Hodor) * -0.54) * -0.94][TABLE[( ( destroy(protect(TABLE[-370.85][-1],COLS,-0.15)) ) )][mislead(-0.56)]]) ) )
}
def TABLE[betray() + -dog][k] {
	if(ROWS){
	Jon -= --COLS;
	if(-1){

};
	destroy(rule(( -bar(COLS,-1) - -( 66 ) ),-( bar(-0.34 + destroy(dog,ROWS,x)) ) * mislead(--1 / y,ROWS,---( -( TABLE[destroy(Sansa) + ( x )][TABLE[ROWS][foo(protect(rule()),Ygritte,-480.05)]] ) )) + 44)) * TABLE[-( ( 0.2 ) * -rule(( y ),-0.47) - -Stark )][bar(900.22 - rule(1,-betray(bar(( TABLE[TABLE[-Sansa][ROWS]][0.81] + ( 0.77 ) ),100,Arya),Stark,-47) * -0.92,-Sansa + mislead(ROWS,ROWS) + ROWS) / --40 - -Hodor,destroy())]
} else {
	if(foo(( ( dog ) ) - Stark,20,-ROWS * Jon)){
	Arya;
	( --( 2 ) );
	if(( TABLE[-bar(-0.49 - ( ( ( ROWS + Jon ) ) - TABLE[TABLE[-Hodor * Jon][( rule(-480.7) + TABLE[0.3][bar()] )]][ROWS] * ( -0.69 ) ),Ygritte)][-( dog - -1 )] )){
	if(rule(( bar(( protect() ),-9,Ygritte / -Arya) ))){
	if(--x){
	if(( COLS )){
	Jon -= -ROWS
} else {
	COLS
}
}
}
}
} else {
	if(Ygritte){
	if(-0.81){

};
	Jon
} else {
	ROWS
};
	COLS
}
}
}
assert -Sansa : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = ( COLS )
def TABLE[COLS / ( ( ( ( -0.65 ) ) ) )][j] {
	if(-40){

}
}
def foo(Arya){
	Ygritte -= rule(bar(63),protect(foo(Hodor) - ( -TABLE[Stark][TABLE[mislead(ROWS,--1)][rule(protect() + Arya)]] * ( Stark ) ),-1))
}
def bar(Stark){
	ROWS
}
def destroy(Arya){
	if(destroy(0.78,( Arya / 74 ),-16)){
	Ygritte -= COLS;
	y /= Sansa
}
}
def TABLE[--Jon][j] {
	foo()
}
def TABLE[ROWS][j] {
	ROWS
}
var Hodor = TABLE[COLS][( -( Stark - ROWS ) * bar(y,( ( -dog - 0.14 - Jon - ( Stark ) / -( x ) ) )) )]
var Stark = ( x )
var Sansa = 89 - ( COLS ) + 98
def protect(Sansa){
	Jon += ( 28 );
	mislead(Sansa);
	if(foo(foo(-79),COLS,ROWS)){

}
}
assert -COLS : "What do we say to the Lord of Death?"
def rule(x,Ygritte){
	if(( -0.63 ) - destroy(( ROWS )) * mislead()){
	-( -ROWS * ( COLS - -980.4 ) )
}
}
def bar(Arya){
	---120.5 * TABLE[rule()][Sansa];
	Hodor -= betray(betray(Stark,( ( Ygritte ) )),( TABLE[-Ygritte][-x * protect(Arya) / ( 380.424 )] ))
}
assert foo() : "One can not simply parse himself"
def bar(){
	Arya -= -860.305 * -( ( COLS ) ) + Arya + TABLE[-Ygritte / 870.73][betray(-ROWS / -rule(),COLS,ROWS)];
	if(( -1 )){

}
}
assert dog + -COLS : "Winter is coming"
assert ( -TABLE[protect(rule(ROWS,84,( x )),--( ( protect() ) ))][( ( ( mislead(protect(( 0.96 ) + 1,foo(-destroy(-26,rule(( betray() )) - ROWS,bar(-280.53,( ( bar() * Ygritte ) ) * dog)),--protect()),rule(y,790.038,Arya))) ) ) )] * ROWS ) - Jon : "Fear cuts deeper than swords."
def mislead(){
	y;
	if(Ygritte){
	TABLE[( -8 ) + Arya][TABLE[-71][Arya]];
	y += 0.38;
	-protect(-51,( TABLE[x][Hodor] ),betray(COLS,-( -28 )))
} else {
	if(-Arya * --0.41 * mislead(ROWS)){

} else {
	( --TABLE[ROWS][( rule(-bar(foo(rule(-1,-TABLE[dog][11],-19),-Jon),-Jon / --y * ( ( 99 + Ygritte ) ) / -49,-300.736)) )] * -71 );
	ROWS;
	if(TABLE[rule(Stark)][destroy(-47 / 0.66 * destroy(COLS,mislead(( 0.69 )),foo()))]){

}
}
}
}
def protect(Hodor,Stark){
	Hodor -= 0.53
}
assert ROWS : "Nothing burns like the cold."
var Stark = x
var Stark = Ygritte * --( 0.59 ) * ( y )
def TABLE[--66][j] {
	Hodor -= TABLE[TABLE[( -86 )][ROWS + ( Ygritte )]][( ( ( bar(0.9 * Stark) * TABLE[( --29 ) + COLS][-Stark - ( Arya )] ) ) )]
}
assert -23 : "Winter is coming"
def foo(Stark,Ygritte){
	Sansa
}
def betray(Hodor,dog,Sansa){

}
def TABLE[( ROWS )][j] {
	ROWS
}
var Ygritte = ( -74 )
def betray(Sansa,Sansa,Stark){

}
var Sansa = 61
def bar(Arya,Arya){

}
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = ( Ygritte )
var dog = 870.03
def TABLE[x][j] {
	ROWS;
	COLS;
	if(y){

}
}
def rule(y,Sansa){
	x;
	Ygritte *= TABLE[( Arya * -0.44 ) - ( TABLE[( bar(-0.2,( x ) * ROWS,0.98) * ( -( protect(TABLE[-48 / -ROWS][-COLS],-( ROWS )) ) + y ) )][TABLE[foo(Ygritte,( protect() ))][Ygritte]] )][--Sansa];
	TABLE[TABLE[( Sansa ) - mislead(COLS,dog) / ( ( ( -( 890.434 ) ) ) ) + -COLS][protect(0.18,bar(-900.559,x))] * x][( ( destroy(-16,Hodor) ) ) - rule(rule(-1 / foo(( -ROWS ),Sansa) - -( bar(destroy()) + -630.953 + -rule(ROWS) ) / -70.56),( -foo(COLS) ))]
}
def protect(y){

}
assert ( COLS ) : "Nothing burns like the cold."
assert Jon - -1 * TABLE[-540.801][--50.26] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(){
	if(TABLE[--Stark][-betray(TABLE[mislead()][protect(x,ROWS / rule(-mislead(),-1),Arya * TABLE[betray(( -16 )) * -64 + TABLE[-84][-betray(-0.31,Stark * ROWS)]][( COLS )])])]){
	730.94;
	Jon *= -( -Stark );
	if(ROWS){

} else {
	( x );
	-0.08;
	47
}
}
}
def mislead(){
	if(( ( y ) ) / Hodor){
	if(( ( -Ygritte - ( 1 * 1 ) / Jon ) )){
	if(rule(bar(-destroy(),foo(rule()),1),ROWS)){

} else {
	if(Hodor){
	x;
	if(bar()){
	Jon /= Jon - Stark;
	dog -= ( -TABLE[( ( bar(ROWS) ) )][( Ygritte )] )
};
	if(0.78){
	Sansa += -0.27;
	Sansa -= ( rule() );
	if(-( Arya )){
	if(-61){
	if(bar(( ROWS / betray(COLS) / ( ( rule(( rule() ) - ( COLS ) * -Jon,COLS) ) ) ))){

}
} else {
	if(660.12){
	x /= foo(Arya,Arya);
	x -= bar(COLS)
};
	0.9
}
}
} else {
	TABLE[rule(Stark + Jon,---Hodor / rule(-55,Arya),TABLE[-76 + ( 0.74 )][( -( y ) )]) + ( TABLE[Stark][TABLE[foo()][--ROWS]] / Sansa )][-COLS];
	dog -= Ygritte
}
}
}
}
}
}
var dog = ( Hodor )
var x = -TABLE[ROWS][-dog] - -Sansa / COLS
assert -dog : "Winter is coming"
var Hodor = 0.38
assert -y * ( -530.959 ) : "One can not simply parse himself"
def TABLE[-( TABLE[( ROWS ) * ROWS * -800.12][-Ygritte - -1] )][j] {
	( -( -29 ) )
}
def TABLE[( COLS )][k] {

}
var Hodor = Sansa
var x = ( TABLE[240.7679][y] - COLS )
def TABLE[( y / COLS / y )][j] {
	y -= -Sansa + -destroy();
	if(x){

}
}
var Sansa = ( -1 )
var dog = Stark
var Hodor = -betray(-ROWS * destroy(0.51,foo(COLS,-( 0.48 ),TABLE[dog][ROWS]),foo(--( foo(ROWS,-foo(( --400.3 * protect(( -Arya )) ),-( Ygritte ),--ROWS)) ),0.27 + -790.4)),betray())
var Arya = -foo(( 0.97 ))
assert Sansa : "One can not simply parse himself"
def betray(Sansa){
	bar();
	Ygritte -= x;
	0.99
}
var Sansa = ( dog )
var Jon = Jon
def mislead(dog,Stark,Ygritte){
	Stark /= 440.266 + -1
}
def TABLE[foo(ROWS)][i] {
	Hodor /= -( protect(destroy(( ( betray(-TABLE[--x][( rule() ) - Hodor] * --Hodor / foo() + ROWS,Stark) ) )),foo()) );
	( 1 * COLS / ( x ) )
}
var Stark = bar(COLS - -0.75,TABLE[betray(COLS,Ygritte,TABLE[-TABLE[-TABLE[-COLS][-65]][( dog )]][foo(mislead(67),0.76)])][COLS] / ROWS + ( ROWS ) - foo(),-ROWS)
def TABLE[betray(( foo() ))][j] {
	dog -= Hodor
}
var Stark = bar(ROWS,-Jon)
var Arya = destroy(( protect(Arya) - 26 / -protect(Arya) - -( -dog ) * TABLE[ROWS][Ygritte - COLS] ))
def TABLE[( -0.71 )][j] {
	1
}
assert 90 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[x][k] {
	Jon -= Arya + 50
}
def protect(){

}
assert rule(ROWS) : "Fear cuts deeper than swords."
var Ygritte = protect()
assert COLS : "Nothing burns like the cold."
def TABLE[-69][i] {
	55 * destroy(Hodor,Stark) - -0.08;
	if(Arya - 0.93){
	Ygritte += -670.78
} else {
	dog
};
	if(ROWS){

}
}
def TABLE[betray(ROWS)][j] {
	COLS / -( 0.4 );
	if(-44){
	if(-64){
	y -= Stark * --ROWS;
	ROWS;
	Ygritte -= 20
} else {
	destroy(y,ROWS);
	destroy(( Hodor / TABLE[( ( rule(-COLS) ) )][Ygritte] ),ROWS)
};
	if(-( dog ) + ( x ) * 99){

}
} else {

}
}
var Ygritte = 1
def protect(Jon,Jon){
	0.51;
	x -= ( -0.45 );
	Hodor /= ( ( --1 - foo() ) )
}
def rule(dog){
	-COLS;
	Sansa += -dog + TABLE[-rule(-0.19,-0.97) + rule(Ygritte,rule(--( -0.62 + ( ( destroy(Arya,( ( --Jon / ( 0.92 ) ) )) ) ) ),( 7 )))][mislead(( Jon ),( -TABLE[ROWS][0.95] ),COLS)]
}
def TABLE[1][j] {
	if(y){

} else {
	( ( -20 ) );
	ROWS
}
}
var Ygritte = bar(COLS - 0.17,--0.66)
assert ROWS : "Winter is coming"
def rule(Jon){
	-1;
	Hodor *= --97;
	mislead(COLS,foo(COLS),0.77)
}
def betray(Jon){
	18;
	940.445
}
assert -0.09 : "What do we say to the Lord of Death?"
var dog = Arya
assert destroy() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[--( -foo(( Jon )) )][k] {
	Jon /= rule(Hodor);
	x /= ( foo(( -rule(y) * -850.93 - ROWS * ( protect(COLS,33) ) ) / -1) )
}
def foo(Jon){
	ROWS;
	Ygritte /= -COLS;
	if(( -0.02 )){
	-0.72
} else {
	Hodor *= -0.27;
	if(protect(Stark,COLS)){
	dog *= -0.12;
	y -= protect(bar(TABLE[rule(9)][( 37 )],bar(-foo(rule(Stark,y,bar(( -foo(91) ) + y,( COLS / TABLE[( -TABLE[protect(x,Hodor + -47) - rule(protect(0.05),ROWS)][Sansa - -( mislead(TABLE[Sansa][Stark] / -rule(bar(TABLE[COLS - rule(( --dog )) + 0.25][-ROWS],COLS,( x ) / ( ROWS ))),ROWS) )] - dog )][( betray(betray(190.6807,-0.11),0.36) )] )) + rule(ROWS))),Stark)),( ( betray() ) )) - x
} else {
	if(COLS){
	if(ROWS){
	dog += bar();
	x;
	Jon
} else {
	if(( ---ROWS * Stark )){

} else {

}
}
};
	TABLE[( COLS )][-10]
}
}
}
var Arya = -170.1
def TABLE[-Stark * COLS][i] {
	( protect() );
	Hodor /= ( 1 );
	Ygritte -= ( destroy(Jon,-780.36,foo(( -20.73 / foo(( Sansa ),TABLE[---( -( -( TABLE[dog][ROWS] ) ) )][( Hodor )],-( mislead(( ROWS )) )) * -240.8 ) + Sansa,-1)) )
}
var Ygritte = --600.7877 + bar() / rule(COLS,-( ROWS ) - Ygritte + ROWS)
assert -1 * ( 53 * bar() ) : "What do we say to the Lord of Death?"
def TABLE[-( ( Arya ) )][j] {
	--ROWS - COLS * ( ( Arya ) );
	Stark *= ( mislead(destroy(),---Stark,Hodor) + -0.3 );
	-0.52
}
def TABLE[TABLE[Jon][--Sansa]][k] {
	dog += foo(-y)
}
assert -0.53 : "Winter is coming"
def TABLE[-COLS][j] {
	destroy(x,( -betray(( ( -Arya ) )) ));
	if(COLS){
	if(-110.282){
	( betray() );
	0.92
} else {
	if(ROWS){

};
	if(-foo() * Jon){
	if(-COLS + Ygritte){
	y -= ( ROWS )
}
} else {
	if(-ROWS / Ygritte - ( COLS )){
	-91;
	y /= COLS
} else {
	--0.89;
	Hodor *= rule(--790.4719 * -0.81,foo(protect(foo(Sansa),-( -0.43 ),-y),foo(rule(( Jon )) - ( -0.28 )),protect(0.71 + Ygritte)))
};
	Jon /= ( ( -280.9 ) ) + ( 1 )
}
}
} else {
	mislead(0.44,betray(( -1 ),-( ( -( -( --Sansa ) / -COLS ) ) ) / y / ( ( -Arya ) ) + -COLS),protect(-rule(-Sansa * ( --0.48 )) - --0.91))
}
}
assert ( ( -900.231 ) ) : "What do we say to the Lord of Death?"
def TABLE[-protect(Stark,-9)][j] {
	( -Ygritte );
	dog - ( Arya )
}
def TABLE[ROWS / ( x )][k] {
	if(( 54 )){
	Jon /= -Jon;
	Arya /= -( ( TABLE[-710.592][-protect(( y - Arya ),0.99) / ( -0.54 )] ) );
	Hodor += -( ( 940.79 ) )
};
	0.53;
	Jon -= destroy(mislead(Arya,0.65,-0.51),betray(-0.36 * foo(),COLS,betray(800.6 - -( COLS ),-0.5)))
}
assert -0.88 : "Nothing burns like the cold."
def TABLE[Jon - -rule(0.85,-( foo(99) * Sansa + ( ( -ROWS ) ) ),dog) + bar(protect(0.98 + Sansa) - -destroy(ROWS - Stark,-91) / Stark,-( TABLE[Arya][COLS] - Jon ),COLS) - foo(bar()) / protect(( 69 )) / Arya * -ROWS][i] {
	( -0.48 );
	-22
}
def bar(Sansa,y,x){
	Ygritte *= ( ( -0.22 ) );
	Ygritte
}
def TABLE[( ROWS )][i] {
	if(( ( -rule(bar(TABLE[betray()][Hodor],TABLE[-96][bar(( protect(COLS,-100) ),protect(COLS,bar(-TABLE[( protect(-bar(( ( Arya ) ),COLS - ( -61 )),ROWS) * ROWS - foo(-protect(66,bar(foo(Arya,--910.276),( Arya )) + -1) / Sansa + 0.25,bar(),( COLS )) )][-COLS]),x))] / foo(--880.891,Hodor)),mislead(bar(-79),Hodor)) ) )){
	-dog;
	77
}
}
def foo(y,x){
	-20 / betray(COLS,0);
	if(-1 * Jon + COLS){
	if(COLS){
	Jon /= Stark
};
	if(-1 / foo(( ( -bar(betray(protect(),dog),TABLE[( ( destroy(betray(COLS),ROWS,-ROWS / x + betray(-Stark / Sansa,destroy(-betray() * bar(foo(COLS),Stark),-COLS)) * foo()) ) ) - mislead(TABLE[-44][( Arya ) - 70.377 * foo(-0.93)]) + Hodor][( -1 )]) ) ))){
	if(-1){
	if(-( -0.74 )){
	if(-1){
	if(4){
	Sansa *= -TABLE[betray(-( -0.18 * -COLS ),---84,-1 / 33)][ROWS]
};
	ROWS + ( Sansa );
	Jon
} else {
	if(1){
	if(--Sansa){
	Arya -= -( ( 16 ) );
	y *= -0.67
} else {
	Stark -= ROWS;
	Stark += protect(y);
	Sansa /= TABLE[TABLE[( -x )][dog]][Stark]
}
} else {
	Sansa *= 0.31;
	if(-Stark - Jon){
	Arya += x;
	Sansa += -Sansa
};
	if(( ( COLS ) )){

}
};
	-( TABLE[COLS][Stark] ) * ( Jon );
	-ROWS
};
	if(rule(( -58 ),-0.16)){
	( ( betray(Arya * -390.08) ) );
	if(( rule(rule(x * -( --ROWS ))) )){
	48
};
	Arya *= x
} else {

};
	Jon /= foo(Sansa,dog)
} else {
	x += -Hodor
}
} else {

}
} else {
	( betray(( -0.59 )) )
}
} else {
	bar(( -( --30 ) ),660.617 - ( protect(( y )) )) * -64;
	TABLE[bar(TABLE[foo(( foo(x,Sansa,-880.12) ),( ( bar(dog) ) ))][( -1 )]) - Ygritte][betray()]
}
}
def TABLE[( 80 ) / -0.61][k] {
	Stark -= rule();
	16
}
assert protect(-ROWS) : "One can not simply parse himself"
var Arya = -0.36
def TABLE[bar(TABLE[-1][-destroy(ROWS,TABLE[destroy(( -93 ),rule(TABLE[52 + bar(destroy(ROWS,TABLE[TABLE[-Hodor][Sansa]][--ROWS])) + ( foo() )][ROWS],bar(( mislead(-32) )) + ROWS / bar(),TABLE[( foo(--1,Jon,bar()) ) + mislead(Arya)][Stark]))][( foo(foo(-90.36),( ( Sansa ) )) )])],-0.14,Hodor)][i] {
	( -75 )
}
var Ygritte = ( ( dog ) )
def TABLE[( -( protect(Ygritte,-30) ) / rule(ROWS - ( foo(protect(y,Stark) / -720.167,-1) ) + ( Hodor ),ROWS - ( --0.5 * 1 )) - ( ROWS ) + TABLE[Arya][93] + bar(---protect(-mislead(betray(TABLE[ROWS][Stark])),-0.53) - -mislead(-foo(0.25,foo(destroy(-Stark,1,mislead(( -520.341 ),destroy(COLS,( TABLE[--( ( -foo(1) ) )][( Stark )] )))),betray(COLS)) + destroy(),-( betray(TABLE[ROWS][( betray(betray(-6,ROWS / COLS),-1) )]) )) - rule(-x - rule(-0.43)),TABLE[( TABLE[( ( ( -0.67 ) ) )][TABLE[Sansa][Stark - y]] )][y])) ) - TABLE[COLS][( 1 )]][k] {
	x /= ROWS + ( x );
	if(ROWS){

} else {
	x -= -( -( y ) - COLS );
	if(dog){
	56;
	if(x - ( 43 )){
	dog *= y;
	Hodor
};
	Arya *= -mislead(x,-ROWS - ROWS)
} else {
	y += TABLE[72][x - 1]
}
}
}
var Sansa = COLS
var Hodor = -760.6049 + destroy(Hodor,( Hodor ))
def foo(Stark){
	dog *= protect();
	if(mislead(protect(bar(betray(-Hodor,ROWS / Sansa / -0.18 - ( destroy(rule(( -28 ),880.9 * -Hodor + betray(( -1 ),( -( -55 ) / Ygritte ),COLS) / ( 0.22 ))) ) - ROWS)),betray(( -mislead() ),TABLE[-0.94][-0.58])) * ( TABLE[---37][TABLE[-Ygritte][COLS]] ))){

} else {
	if(ROWS - destroy()){

}
};
	-45
}
assert COLS : "What do we say to the Lord of Death?"
def TABLE[y][k] {

}
assert -75 : "What do we say to the Lord of Death?"
var Ygritte = --COLS
var dog = ( -TABLE[-0.1][-0.58 - dog] + -foo(--75 - -( COLS ),90,( Jon ) + ( Stark * ( -( Ygritte ) ) )) - ---ROWS )
assert -( 0.91 ) : "Fear cuts deeper than swords."
assert ( -( protect(-0.64,TABLE[0.41 * Jon][Stark]) ) ) : "One can not simply parse himself"
assert ( -mislead(0.48,Arya,( -250.58 )) ) : "Winter is coming"
def TABLE[0.47][k] {
	Stark /= TABLE[destroy(27,Ygritte)][--0.38]
}
def TABLE[Arya][i] {
	1 / ( ---0.64 / 830.9038 + x * -COLS - x - mislead(TABLE[-79][dog - COLS]) )
}
def protect(){

}
var Jon = Hodor
var Sansa = destroy(destroy(( protect(protect(rule(TABLE[destroy()][-foo(--0.99 * -( TABLE[( Hodor )][COLS + -0.41] ),mislead(destroy(--COLS,( ( ( COLS * ( Ygritte ) * -84 ) ) / ( ( -( ( destroy() ) - mislead(-Arya * betray()) ) - Arya * mislead(x) ) ) ),ROWS) * -300.94) - --ROWS) / ( protect(TABLE[-betray(( ROWS ),protect(betray(TABLE[COLS][( ROWS )],y),destroy(--48 * ROWS,Arya),Arya),TABLE[( ( -Ygritte ) )][COLS])][Arya],betray(( COLS ))) / COLS )],--1 + ( -( ( ( mislead(( ( --0.36 ) ),-protect(COLS,10,TABLE[( ROWS )][-Jon]) + COLS * ROWS - ( 43 ),-0.77) ) ) ) ) - TABLE[31][-destroy(-foo(betray(x),COLS + -COLS - --1),Ygritte,ROWS) * -rule(( rule(--0.85 - ( Arya - ( 0.04 ) )) ),-destroy())],( ( COLS ) )),Arya),protect(-0.43,ROWS),protect(-95)) ) + -ROWS),-( TABLE[Stark][x] ) * foo(-1,foo(-COLS,-56),COLS * COLS + betray(TABLE[protect(mislead(-( ( 0.2 ) ),( mislead(-COLS) )) / Jon)][protect(-( TABLE[( ( -77 ) )][mislead(Stark,betray(-dog),82)] ),( ( ( ( --0.69 ) ) + rule() - 77 ) ))]) * 3))
var dog = -destroy(-foo())
assert ( -protect(( betray(-1,-mislead(-betray(dog,0.97),bar(-( Sansa ) - ( 15 ) * ROWS / ( -( ( -( dog ) ) ) )),( ( ( COLS ) ) )),--( TABLE[y][Stark] - TABLE[-1][( TABLE[--( 50 + -ROWS )][-ROWS] )] * Jon * y )) + x * TABLE[protect(protect() - 7 - Stark + rule(COLS,-0.89 / y,Stark) / ( -( ( 0.94 ) ) ) * 36,-640.335 + Jon / destroy(( -0.77 ),-Ygritte,( Ygritte )),-1) + ( -400.7 )][protect()] ),x) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-0.5 * betray(53)][k] {

}
assert Sansa : "Nothing burns like the cold."
def mislead(x,Sansa){
	Sansa *= foo()
}
def protect(Stark,Sansa){
	x += COLS;
	betray();
	-0.22
}
assert ( y / ROWS ) : "What do we say to the Lord of Death?"
assert -rule(betray(Sansa)) : "Nothing burns like the cold."
def rule(Arya,Sansa,Stark){

}
var dog = bar(--11 + ( 1 ),--0.46,Stark)
def TABLE[foo(86)][k] {
	if(COLS){
	protect(TABLE[95][bar()],Sansa,( ( betray(TABLE[bar(rule(---foo() + -25))][foo(Sansa * ( -foo(870.7955 - dog) * ( 0.16 ) ),COLS + Stark)]) ) ))
};
	if(dog){

}
}
var dog = 31
def TABLE[COLS][j] {
	if(betray(foo(TABLE[Arya][foo(-1,x)],foo(-protect(),x,79) * -( betray(-mislead(-dog,( 0.74 * ROWS / Ygritte + mislead(dog,betray(( rule(( ( -( protect(protect(( ROWS ))) ) / COLS / TABLE[45][COLS] ) ) + ( ( --( ( Sansa ) ) * bar() ) ),-0.57) - ROWS * -destroy(Sansa,Jon) ))) )),-( -950.082 ) * Hodor) )))){
	Ygritte += -foo(72 - 15 + ( -420.901 ) * ---ROWS / -950.1 * ( -0.17 - ( ( COLS ) ) - -COLS - protect(x,TABLE[-( betray(COLS) )][TABLE[-25][0.32]]) * ROWS )) - bar() + ROWS * -destroy(( ( Stark ) ),protect(-x)) + ROWS
} else {

};
	Hodor *= 0
}
assert -bar() : "Winter is coming"
var Sansa = -0.08
def betray(x){
	if(( y )){
	TABLE[destroy(-( foo() ) + -( ( TABLE[ROWS][( ( rule(destroy(-0.02,--foo(( ( betray(--0.04,-( -x ) - ( -1 )) ) / TABLE[ROWS][protect(( 96 ),x)] ) / mislead(160.18,-0.2),destroy(COLS,Sansa)),y),90) ) )] ) * Stark ),bar(TABLE[ROWS][( y - -ROWS * ( protect(-COLS) ) - x + COLS )],ROWS,x))][-( --betray(y,betray(foo() - ( ( 970.778 ) ),TABLE[TABLE[betray()][TABLE[-TABLE[( -destroy(5) * Hodor / ( destroy(mislead(57 / ( ( ( protect(( --0.68 - -Arya + -TABLE[bar(1)][Arya] / ( ( Stark ) ) / -53 - -TABLE[protect(dog,-Ygritte)][-0.96] * Jon * ( -28 ) )) ) / -( 1 ) / destroy(( destroy(--0.8,90,Hodor) ),COLS / ( ( -( TABLE[-( -betray(ROWS) ) * TABLE[TABLE[450.2078][( TABLE[36][-Jon - --51] * COLS )]][COLS]][TABLE[( -Arya ) - ( -x ) * ROWS / -betray(COLS,-28,-35 - -58) - -21][Arya + ( -y + TABLE[( ROWS )][-10] )]] ) ) )) ) - -17 ) + -betray(destroy(Arya) - -Sansa + dog) / rule(--0.71,-ROWS - ( ( betray() ) ))),ROWS) + Arya ) )][ROWS]][TABLE[-0.17][TABLE[bar(( -77 ))][COLS]]]]][Arya])) / x ) / -dog]
};
	dog -= -500.52
}
def TABLE[TABLE[rule()][destroy(dog,ROWS) + --protect(betray(-68,--550.3636 * -bar(Ygritte,360.1185)),1,-23 - 1)]][k] {
	Stark *= dog;
	if(--y){
	if(( dog )){
	x -= Hodor;
	0.05
}
}
}
def betray(Jon,Ygritte){
	if(-TABLE[-0.49][-x + protect(-COLS + -1) * TABLE[rule(( -( betray(Arya / ROWS) ) ))][( -COLS )]]){
	if(-protect(0.43 - -1)){
	( Sansa ) - TABLE[Ygritte][Sansa]
}
}
}
def rule(Jon,y){

}
assert ( -1 ) : "What do we say to the Lord of Death?"
var Arya = betray(51 - TABLE[ROWS / Hodor][-0.2 + Stark - dog] / Sansa)
assert -0.47 : "One can not simply parse himself"
var Ygritte = y
assert ( COLS ) : "Winter is coming"
def TABLE[TABLE[Arya][-Ygritte]][k] {
	Sansa *= ( rule(COLS,--1 + COLS) )
}
assert Stark : "Nothing burns like the cold."
def TABLE[( COLS )][j] {
	Ygritte += destroy(destroy(( -betray(Hodor,dog) ),( dog ) * ( -( 99 / TABLE[--90.204][( -mislead(---bar(( -0.02 ),-ROWS) + -42 * TABLE[Jon][1 + TABLE[--Stark][rule()] - ( TABLE[Hodor][x] ) - -99],-( Ygritte )) )] ) )))
}
def TABLE[-( --( ROWS ) * ( -( Hodor ) + ( -TABLE[( rule() )][-88 - COLS] ) - foo(-0.94) + -betray(( ROWS + mislead() ),x) ) + x ) + ( Ygritte )][i] {
	Ygritte - -68 / y
}
def TABLE[ROWS][j] {
	if(-79){
	mislead(Jon / 1);
	if(0.07){
	if(37){

} else {
	Stark += -ROWS;
	if(COLS){

};
	y *= -( bar(ROWS,TABLE[-27][( -1 ) * -16 + destroy() / Sansa]) / -390.5 )
}
} else {
	if(( rule(foo(protect(Jon,( -COLS ))),( ( TABLE[ROWS][mislead(y,Hodor,( Ygritte ))] ) + COLS ),ROWS) )){
	Sansa += -protect(Sansa);
	if(protect(-0.03,protect())){
	if(-foo(protect(-Sansa,0.68))){
	if(-ROWS / dog){
	if(bar(-( protect(--( ( destroy(Sansa,--( ( -protect() ) ) / ( ( mislead(86) - ( Ygritte ) ) ),bar(0.02)) ) ) / -mislead(-0.18 * mislead(-COLS + dog / TABLE[-( mislead(foo(-0.73 - TABLE[-900.08][rule(COLS,-TABLE[ROWS][-0.95] * ROWS / ( 0.08 ) + -bar(destroy(0.85,0.52,COLS / -( rule() )),TABLE[96][-rule()])) - betray(Arya,destroy())] + COLS),TABLE[COLS][-140.2 / Sansa]) * Ygritte )][( TABLE[ROWS][-84] )])),Stark) ))){
	Ygritte /= -betray(TABLE[COLS][x]) / --640.97 + ---26 + Sansa;
	if(bar(-0.09,-( -0.1 ))){

} else {
	Sansa * ( dog )
};
	y /= -COLS + Arya
}
};
	y += foo(foo(betray(foo(y) * ( betray(TABLE[COLS][ROWS],ROWS) )),0.54,--x),bar());
	Hodor += mislead(( 570.63 ),Sansa)
} else {
	Hodor -= -52 / ROWS
}
}
}
}
};
	Arya *= ( foo() ) / COLS
}
assert -( foo(ROWS,-28) ) : "Nothing burns like the cold."
var Jon = mislead(rule(86,-( TABLE[TABLE[-0.42][foo(-( 0.75 ),Hodor,( -ROWS - ( protect(Stark) ) ))]][( foo(Hodor,-1,Stark + ROWS * Hodor) )] ) - Stark),ROWS) * ( ( bar(y) / bar(Jon) - -x * x - -1 * COLS ) ) * x
assert mislead() * 0.85 : "One can not simply parse himself"
def TABLE[( Sansa )][i] {
	Jon /= rule(Sansa,Arya,( ( -rule(( ( TABLE[-Hodor][ROWS] ) ),( -betray(foo(),10,( -ROWS ) / -betray() / x) ) + rule()) ) - mislead() ));
	( Arya ) + -4
}
assert ( ROWS ) : "What do we say to the Lord of Death?"
var Jon = Hodor
assert COLS : "What do we say to the Lord of Death?"
def protect(Hodor){
	if(-770.741){

} else {
	y += mislead();
	if(-COLS - ( foo(0.29 / Sansa) )){
	--420.884
} else {
	Arya /= protect(Ygritte);
	Arya /= -54 / Hodor
}
}
}
def betray(x){
	if(betray(--dog * Stark,Ygritte * Ygritte,( ( Hodor ) ))){
	if(40.849){
	if(--1){
	ROWS;
	Jon *= ( ( -560.016 ) )
} else {
	Sansa *= -0.59 + -0.13 - 1
};
	-Ygritte;
	rule() - destroy() * COLS + ( 10 )
};
	Jon += 61
};
	mislead(destroy(-1,-0.95 / ( 200.34 )),rule())
}
def betray(dog,Arya){
	ROWS
}
def TABLE[foo(Ygritte,( Stark ))][i] {
	-0.61 + TABLE[ROWS][( TABLE[ROWS][-TABLE[---betray(protect(Ygritte,TABLE[( betray(-72) )][( Stark )],mislead() + rule(( COLS ))))][-COLS * dog] - ( 0.02 - -destroy(-bar(),COLS) + bar(0.08) - ROWS )] / ROWS + mislead(TABLE[-foo(y,-ROWS * 5 - ( ( TABLE[-ROWS - Stark][( ( bar(betray(Ygritte,COLS,betray()),destroy(bar(Stark,betray(TABLE[( Jon )][79])) * --TABLE[1][( ROWS )])) ) * -( ROWS ) )] ) ),-rule(protect()) + TABLE[-y][54] - x)][protect(( ( 62 ) ),-( -91 ))],protect(( ( -COLS ) ) * COLS,mislead(( ( COLS ) ),x + dog))) / -25 )];
	dog += -40
}
def betray(Sansa,Stark){
	if(( ( protect(x) ) / protect() )){
	y -= ( Ygritte );
	rule(ROWS,COLS);
	Stark /= COLS * mislead(COLS / ( Sansa ),dog)
}
}
var Arya = TABLE[foo()][( -55 )]
var Hodor = ( -Hodor )
def bar(Stark,Jon){

}
def TABLE[57][k] {
	bar(COLS,92)
}
def foo(Stark){
	dog *= x;
	if(( ROWS ) + ( ( -( ( ROWS * -( Sansa ) ) ) * TABLE[ROWS][betray(COLS,destroy(TABLE[( 830.45 )][ROWS],--dog))] ) - rule(COLS,protect(-rule(( Stark ),Stark),-COLS)) + y )){

} else {
	( ( COLS ) );
	Hodor;
	if(-ROWS){

} else {

}
};
	if(( destroy() )){
	if(x){

};
	protect()
} else {
	if(rule(-protect() * ( Hodor )) / -( -1 )){
	if(foo(52,COLS)){
	Jon /= Hodor;
	-( COLS );
	--x
}
}
}
}
def destroy(y,Hodor){
	if(( TABLE[COLS * Jon][-Hodor] ) + COLS){

}
}
def TABLE[COLS][j] {
	Ygritte *= destroy(440.889,-( COLS ))
}
assert --( COLS ) : "Nothing burns like the cold."
var dog = -( Ygritte )
def rule(dog){
	0.32;
	( bar(dog,Ygritte,( -Stark ) / Arya) * -1 / Stark );
	Hodor /= bar(( Sansa ),Arya) * COLS * 0.05 * ROWS / -520.14 * COLS
}
assert ( -TABLE[-Sansa][Sansa] ) / -( -ROWS ) : "Winter is coming"
def mislead(dog,Sansa){

}
def foo(Stark,dog,Jon){
	if(( destroy(( ( -COLS ) )) )){
	if(betray(70,--mislead(41,42) / mislead(-1 * y + Sansa)) / 0.24){
	if(destroy(( -TABLE[Sansa][-0.16] ),-Stark * -ROWS,x)){

}
} else {
	-73;
	if(0.99 / Ygritte){
	ROWS;
	if(( foo(-TABLE[destroy(bar(( ( Sansa ) ),--51 + 0.18 + bar(y,55) - -ROWS,-bar(ROWS)) - ROWS + ROWS,-0.02,( ( ROWS ) / ( -0.95 ) - --rule(( Jon ),dog) ))][-Stark] / -rule(( -0.13 ),TABLE[600.56][-Sansa - ( mislead(-COLS) ) * 0.86 * ( -1 )]) - TABLE[TABLE[destroy(-24,( Jon ),( COLS ))][foo(( 1 ),COLS,61)]][( rule(( 81 ),--19) * ( y ) )],-0.85) - COLS )){
	( destroy(Stark,22,protect(-0.72,Arya)) );
	( -( Stark ) );
	Stark += COLS
}
};
	if(-69 + -Jon){

}
};
	if(54){
	if(-betray(-( ( Arya ) ))){
	Sansa;
	Sansa *= TABLE[1][-dog / betray(1,-90 / ROWS + --COLS) * Hodor];
	---210.43
} else {
	COLS;
	-38 / y + COLS
};
	if(( ( 60 ) )){
	x *= Hodor;
	x /= dog
} else {
	Sansa /= ROWS;
	if(foo(--ROWS,TABLE[y][betray()]) / ( 14 )){
	if(-20){

} else {

};
	if(rule(( protect(( bar(foo(-Ygritte * mislead(-0.75,910.46,--destroy(Sansa,ROWS))),Hodor,--2) * 340.6 ),-( bar() ) / ( ROWS )) ),-0.89)){
	y *= x
}
} else {
	if(( betray(ROWS,COLS) )){
	Ygritte += betray(( -rule(( ---0.45 - -( 1 ) + -0.73 )) + Stark ) + ( ( -TABLE[( --bar(( -Arya ),( -1 ),Jon) * ( ( ROWS / ( dog * -930.28 * ( bar(( ( rule(( -COLS ),1,TABLE[( TABLE[480.35][-0.67] ) + bar(-160.282,( ( ( -( rule(( 50 )) ) ) ) ) - ( ( ( protect(-( betray(Ygritte) ),-0.61 * ( rule(bar(( Sansa ))) ),( -betray(Arya,COLS,-rule(TABLE[Ygritte][-11] * 320.2)) - mislead(-TABLE[mislead()][--54],0.66) )) ) ) ))][-0.94]) ) - ( -11 ) ) - -0.08 * --( ( TABLE[ROWS][foo(Arya + ( -( ( Jon ) ) / ( -COLS ) ))] ) )) + ( ( ( mislead() ) ) ) ) / ( dog ) ) ) ) )][1] ) ),( 22 ),-96);
	if(y){
	if(( protect(--35) + betray(( TABLE[150.21][-TABLE[0.63][( Hodor / mislead(( Jon - TABLE[rule(rule(-0.22,-x))][TABLE[COLS][-1 / ROWS + protect(( destroy(Stark,betray(Arya),dog) )) * betray()]] )) )]] )) ) / -40){

} else {
	-protect(Arya);
	if(betray(Ygritte,COLS,Sansa)){
	Stark *= x
}
}
} else {

};
	x *= ROWS / -rule(--33)
}
};
	dog += bar(dog,ROWS) * bar(dog,COLS) - 0.27 - -97
};
	y /= ( Jon - COLS + protect(Ygritte / --destroy(--59,( 75 )) / ROWS + protect(),( COLS )) )
} else {
	if(---6){
	dog -= --870.81 * x
} else {
	Hodor /= ( 840.83 )
};
	Jon /= --18;
	ROWS
}
} else {
	if(-( 0 - dog ) * -ROWS){
	COLS;
	if(( Sansa )){
	Sansa += -TABLE[ROWS][y];
	-( -0.24 )
};
	( foo(( -bar(ROWS) / TABLE[30.11][x] ) + Stark,x,ROWS) )
} else {
	Hodor -= ( TABLE[( -TABLE[-Hodor][COLS] )][0.47] - --TABLE[0.67][bar(98)] - protect(830.0153,Sansa) )
};
	if(Ygritte){
	( -Stark )
} else {
	if(mislead()){

}
}
};
	Sansa *= -84
}
assert COLS : "One can not simply parse himself"
assert destroy() : "Winter is coming"
def mislead(){
	( -0.59 )
}
assert --( -44 ) : "Nothing burns like the cold."
def TABLE[Ygritte][k] {
	if(Hodor){

} else {

};
	if(1 + Hodor){
	if(--TABLE[Jon][COLS]){
	Sansa -= rule(TABLE[0.77][( destroy(COLS) )] + TABLE[0.68][( -betray(ROWS,( protect(( Hodor ),Stark) )) )] / COLS) * -1
};
	dog /= foo(Ygritte)
}
}
def protect(Ygritte){
	if(mislead(-( mislead(rule(72),protect(dog)) - COLS ),TABLE[COLS][COLS],Stark * Jon)){
	Jon
} else {
	x /= Sansa;
	y *= TABLE[dog][-0.88 - --Jon]
};
	0.43;
	Sansa /= Ygritte
}
def TABLE[COLS][j] {
	Hodor += foo(-rule(-0.94,ROWS + Ygritte + Sansa))
}
var Jon = -35
var x = -Stark + 1
assert 92 : "Fear cuts deeper than swords."
def TABLE[COLS * foo(rule())][i] {
	Jon += Ygritte;
	if(Arya){

} else {

}
}
assert y : "One can not simply parse himself"
def mislead(Sansa,x){

}
def TABLE[-ROWS][j] {

}
var dog = betray(( 1 * x ),rule(( x ),-990.395))
assert ( mislead(-( --0.22 ),foo(-ROWS,( -94 ),betray(foo(--0.34,destroy(y,-0.24)),-470.58))) ) : "Winter is coming"
assert COLS : "One can not simply parse himself"
assert protect(( Stark + ( -( ( TABLE[Arya][-TABLE[( ( x ) )][foo(Hodor * TABLE[-Jon + ( --530.47 - Hodor ) + ROWS][TABLE[( betray(TABLE[COLS][( -33 )],y,protect(protect(-ROWS + ( foo(foo(-ROWS + betray(),y),-TABLE[destroy()][-TABLE[( 380.475 )][-protect(ROWS)]],foo(TABLE[Sansa][ROWS])) ),mislead(-210.85)),COLS)) + ROWS - rule(( --83 * mislead(-destroy()) )) ) / ( bar(foo(y,TABLE[COLS][ROWS],COLS)) )][( ROWS )]],-rule(( ( betray(-55) ) ),-Jon,-1 - ( ( foo(-foo(betray(-14,destroy(mislead(Stark,--0.2 - ( COLS ),ROWS),( ( betray() ) )) + ( bar(-( foo() )) )),-100)) ) / y - --Stark + rule() )) - -90)]] ) ) ) + dog ),( ( Arya ) ) + --68 + ( ( ( TABLE[( 1 )][( ---120.989 )] ) ) ),betray(-890.83)) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = ( ROWS ) * ( 0.1 ) + COLS
def betray(Jon,Hodor){
	if(( destroy(mislead(-570.954,COLS)) )){
	( betray(Jon,( COLS )) ) * destroy() * ( 1 );
	protect(( 1 ),66,bar(-betray(-( -( --1 ) ),protect(-1) + Stark,-Sansa),89))
} else {
	if(y){
	( 690.249 )
} else {
	TABLE[( rule(( foo(foo(-1,TABLE[destroy(( Arya * ( foo() ) ),-1 - y / Stark)][bar(destroy(destroy(440.8475),-500.0222))],0.05),( -( ( -COLS ) ) - mislead(Hodor,Ygritte,78 + 37) ),-0.13 - Arya) / TABLE[--( COLS )][980.1] - Jon )) )][betray(( Stark ),TABLE[TABLE[rule(( ( -790.165 ) + ROWS ),-Stark,-Hodor)][mislead(ROWS)]][23],-( -10 ))];
	y += ( ( COLS * bar(TABLE[-0.18 * y][betray(x,ROWS)],( ( ( Jon - protect(protect(rule(-0.01),-Sansa)) ) ) ) * -mislead(mislead() + -380.5)) ) )
};
	y /= -0.97
};
	( -bar() );
	Jon *= 0.43
}
def TABLE[betray(-Ygritte / 860.2215,betray(betray(( -y ),-270.5898,rule(rule(y,--910.21) - ( Arya ) - ---470.2751 * betray(0.8),-( -COLS ),( TABLE[-betray(-63,rule(ROWS),Arya)][( TABLE[( --130.85 )][-32 / Ygritte] * ( -960.13 ) )] ))),dog),( ( destroy(Hodor,( destroy(y,COLS,( x )) )) ) ))][j] {
	if(TABLE[( ( -protect(-TABLE[-0.27][y],mislead(),Ygritte) ) )][0.67] - rule(-COLS,betray(Sansa,( -61 ))) / -( -40 ) + -ROWS){

}
}
var Arya = -1
assert COLS + -rule(x,Hodor) : "What do we say to the Lord of Death?"
def TABLE[1][j] {
	Hodor *= TABLE[COLS][( ( bar(( Arya )) ) )];
	if(( --0.86 - 0.34 ) / 60 - TABLE[-0.57][0.66]){
	if(0){
	dog += protect(-foo(foo(( ( ( ---betray(-COLS,-( ROWS - ( ROWS ) * Sansa ),rule(betray(( -0.49 ),( --Arya - destroy(( ROWS )) )),rule(( --destroy(-680.0797,dog,COLS) ),430.061) + ( Ygritte )) / ( dog )) ) ) ),( -71 ) - -( -Hodor )))) - foo(foo(-35,1 * 0.66,( foo(-22) - ( x ) )),rule(--27 + ( bar(( COLS ),0.77) )) - 1 - ROWS * ( Ygritte + ( -COLS ) )) * COLS;
	Arya /= 0.45;
	TABLE[destroy(TABLE[COLS][( foo(TABLE[1][-1 + 0.3]) )],( x ),rule(1,ROWS,( -84 / 95 ))) / TABLE[-y][-rule(betray(( -ROWS ),betray(dog),( destroy(foo(TABLE[ROWS][Stark] - betray(-1)),mislead(-COLS,79,35)) )),( rule() ),-960.3) - TABLE[( destroy(mislead(TABLE[Jon][bar(-( ( foo(860.574,( -1 ) - --0.75,( 0.3 )) ) )) * ( ( Sansa - 96 / foo() ) )]),betray()) )][930.2464]]][COLS]
} else {

};
	Arya
} else {
	--ROWS - betray(-TABLE[foo() * ( COLS )][bar(Hodor) / y / ( mislead() )],-15) + Jon / -0.84;
	( Arya )
};
	rule(94)
}
def TABLE[-Stark][k] {
	Jon += ( -TABLE[( bar(( -0.88 ),protect(-ROWS / -( foo(-TABLE[--bar(COLS / Arya + ( COLS - y * x + 15 + rule(-( betray(COLS - ( ( COLS ) ) + TABLE[destroy(0.98)][( -betray(( destroy(--mislead(),( Ygritte ),0.11 + mislead()) ),-dog,Jon) )]) ),69) * Jon - -1 ),Sansa)][Ygritte],-Stark) ),TABLE[-0.9][( rule() )]) - -x) )][1] )
}
def bar(){
	if(-63 / -TABLE[COLS][bar(--y + COLS - destroy(( COLS ),Arya) - 27,0.23)]){
	if(TABLE[-ROWS][ROWS]){
	if(destroy(TABLE[( ( ( ( ( TABLE[y][0.33 * COLS] ) ) ) ) ) / -1][-1],Arya,y * y)){

};
	foo(foo(-26 - -( TABLE[-160.668][-ROWS] ),33),( ROWS + ( --0.34 ) ) - Jon + Arya - -0.83,Ygritte);
	y /= ( betray(1) )
} else {
	if(-( ROWS )){
	y /= ROWS;
	Stark -= ( 93 )
} else {
	if(-betray(x)){
	Arya -= betray();
	if(-1){
	if(protect(dog)){
	Jon /= --ROWS
} else {
	COLS;
	Ygritte *= ( COLS )
}
}
}
}
}
} else {
	y;
	if(-1){
	COLS;
	Ygritte *= ROWS
}
};
	dog -= TABLE[ROWS][Jon] * -TABLE[foo(ROWS,y)][-0.33 - -( bar(( TABLE[-ROWS][destroy()] - ROWS )) / ( -( ( destroy(-Hodor / -y * ROWS / ( x ) * destroy(-( ( ROWS ) ) / -0.68) / ROWS,-foo(TABLE[-( -480.04 ) - ( -( ( -dog * 1 * Jon ) ) )][mislead(betray(destroy()))] + rule(destroy() / -290.0463 * protect(ROWS,foo(COLS),ROWS)) + ( ( 0.37 ) ) / ROWS),-( 1 - x )) ) / Hodor ) + dog / ( Sansa ) ) + COLS )];
	-mislead(Sansa - -TABLE[-Stark / -rule(COLS,( ( -42 ) ) / protect(rule(-79,Sansa),-0.21))][1 * Stark]) * destroy(( dog ))
}
var dog = ROWS
def bar(Hodor){
	y /= -( 1 ) * -0.83;
	if(-COLS){
	y /= -( ROWS )
} else {
	if(-bar(-0.93,( --x ),mislead(bar(Jon),--0.74,COLS))){
	-93
} else {
	( -0.33 );
	if(-0.37){
	if(ROWS){

} else {
	y;
	betray(TABLE[destroy(( ( mislead(( ROWS ) + -0.91 + -Stark * betray(-0.6,COLS) - foo(( 50 + mislead() ),( COLS )),1) / Hodor ) ),mislead(),Sansa)][rule(COLS)],0.33 + destroy(mislead(-13,( ( COLS ) )))) / COLS
};
	x += -TABLE[Hodor][( --1 ) / Arya]
} else {
	Stark / Stark / COLS
};
	-Stark
}
}
}
def TABLE[Hodor / 0.19][j] {
	dog /= ( -rule(Ygritte) + x / ( foo(rule(bar(bar())),destroy()) ) );
	( 0.07 ) - ( Hodor );
	( Stark ) - rule() - 350.1318
}
def rule(Arya){
	TABLE[-ROWS - foo(( ROWS ))][0.57];
	if(COLS){
	foo(( foo(y) ) * protect(-0.39,( protect(Arya,49) ) - 0.62),( -0.12 ),( COLS - destroy(Ygritte) ));
	bar(Hodor,COLS)
}
}
assert TABLE[dog][protect(Ygritte,rule(-rule(destroy(destroy(TABLE[-0.02][rule(( -rule() ))],Sansa),Hodor))))] : "One can not simply parse himself"
var Hodor = 1
assert y : "What do we say to the Lord of Death?"
assert COLS : "Nothing burns like the cold."
def foo(Stark,Jon){
	x *= -0.32
}
def TABLE[-Jon][j] {
	TABLE[( -COLS )][-0.27]
}
def TABLE[-protect(( mislead() + ( 1 ) ))][k] {
	if(( -79 )){
	Hodor += y
};
	-76 / ( 43 )
}
def bar(Jon,dog,Jon){
	1
}
def TABLE[ROWS][j] {
	dog /= -ROWS;
	TABLE[-1][-1]
}
var Hodor = ( ( ( -dog ) ) )
assert -TABLE[-610.09][( 0.13 - COLS )] : "Fear cuts deeper than swords."
assert Stark : "Nothing burns like the cold."
def destroy(dog,Ygritte){
	if(-ROWS){
	( -ROWS )
} else {
	if(Jon + -COLS){
	Sansa += ( ROWS ) + ( betray(-mislead(betray(betray(COLS,-Hodor),1),COLS,-( -destroy(340.94) - rule(-rule(COLS,0.1),COLS) )),ROWS) );
	( foo(mislead(( Stark ),mislead(-COLS,foo(150.67,1,Jon)) * destroy(-Ygritte,COLS,Stark) + Stark),-0.14,-1 / 0.7) + foo(-0.12,TABLE[---COLS][0.67]) )
} else {
	-( TABLE[betray(-COLS / -1,mislead()) + 1][Sansa] ) - Arya;
	x /= destroy()
}
}
}
assert COLS * betray(ROWS,protect(TABLE[COLS][-( Hodor )],COLS * TABLE[--0.22 + ( ROWS )][Jon]),-( Ygritte ) - Jon + COLS + COLS) : "Winter is coming"
def bar(Stark,dog){
	if(Arya){

};
	Hodor += -0.94
}
assert ( ( Ygritte ) ) : "Winter is coming"
def TABLE[Ygritte][i] {
	if(-12){
	destroy(20,--( ( TABLE[( ( -1 ) )][Ygritte * ROWS] * ( -87 + 0.69 ) ) ))
} else {
	if(ROWS * bar(Ygritte,Ygritte)){

} else {
	if(rule(mislead() * TABLE[( COLS )][( protect(foo(( -1 )),1,0.72) )] - betray(-Ygritte + ROWS,COLS / betray(Sansa,destroy(Jon)) + ( ROWS )))){
	TABLE[dog][TABLE[-( betray() ) - -0][--TABLE[( Jon )][-rule(Ygritte)] * ( COLS )] - -foo(-( ROWS * ( ( 24 ) ) ),destroy(y,( -70 ) / ( rule(( -95 ),( ( foo(COLS + Jon,TABLE[( -COLS ) / -COLS][( betray() )]) ) )) )) / -0.56)] * ( mislead(ROWS) )
} else {
	if(--mislead(96,( foo(( Stark ),( -x )) ))){
	if(foo() + -36){
	if(( 510.499 )){
	rule(-8,Jon,COLS)
}
};
	0.68;
	Arya -= COLS
};
	if(-dog){
	Arya /= y
};
	dog
};
	if(Stark){
	if(rule(COLS,protect(0.85,( dog )))){
	protect(TABLE[-58][70],protect())
}
}
};
	Hodor /= ( foo(Jon,TABLE[-( Jon )][Stark],TABLE[( -x + --Sansa - dog / ( -6 ) )][( 60.315 )]) )
};
	dog /= 170.84 + 0.18 - --89 + -Hodor + -TABLE[-COLS + Stark][COLS];
	rule(-910.4039,mislead(Stark,-Stark),Hodor)
}
def rule(Arya,Jon,y){
	y *= ( mislead() );
	if(TABLE[( 0.59 + COLS * -( -Arya - COLS + dog ) )][--1 / ( --rule(ROWS) )]){
	Hodor /= -33
}
}
def TABLE[-betray(destroy(bar(TABLE[mislead(( ( 0.45 ) ) * bar(Jon),y)][ROWS],TABLE[1][-0.43 * 0.53])),( protect(Jon,TABLE[mislead(0.71,ROWS,rule(-( 21 ),y))][( y )] / ( Arya ),-1) ))][k] {
	Ygritte += 36;
	y += -44 + -64
}
assert -420.7716 : "One can not simply parse himself"
def protect(Sansa,Stark){
	0.7;
	dog /= -TABLE[foo()][Hodor]
}
assert --590.489 : "Fear cuts deeper than swords."
def bar(Jon,Ygritte){
	x /= bar(TABLE[ROWS][( Arya )] - dog,TABLE[y][Stark]) / TABLE[ROWS][foo(TABLE[0.69][COLS],( ( -0.32 ) ) + Stark,mislead())]
}
var Stark = betray()
def TABLE[x][i] {
	if(-COLS){
	if(0.18){
	Ygritte -= ( -COLS - ( -Stark ) - 0.18 );
	-destroy(destroy(bar(Hodor,rule(( -TABLE[TABLE[( Hodor )][-0.63 * ( -y )]][1 + destroy()] + ( bar(-1,-320.6766) - rule(( ( foo(( protect() ),Arya,870.5485) - -destroy(28,rule()) * ROWS ) - mislead() ),-y) ) - betray(y) ),betray(0.72)))),foo(),0.77 + -0.34)
} else {
	Hodor *= protect(TABLE[dog / -foo(COLS) / COLS - 27][0.96] + TABLE[ROWS / COLS][TABLE[( x ) - TABLE[ROWS][dog] / dog + --( Stark )][-0.51]],protect(),TABLE[-1][79])
}
}
}
assert 1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[--0.66][j] {
	( betray(bar(-75)) );
	Sansa -= -Sansa + COLS;
	ROWS
}
def TABLE[-destroy() + protect(protect(ROWS,1),-destroy(( destroy() ))) - -0.4][k] {
	if(COLS){
	COLS;
	if(Stark * Jon){
	Sansa += 0.13;
	Ygritte /= COLS
} else {

}
};
	Ygritte *= -bar(( ( COLS + -1 ) ),1,COLS)
}
assert -TABLE[( -0.63 )][COLS] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( Stark )][j] {
	y += -0.16
}
var Ygritte = protect(-TABLE[bar()][foo()])
assert bar(( 1 )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = -( TABLE[-1 + betray(ROWS,-COLS,-y * COLS) / -0.6 + ROWS][COLS * x] ) + -1 * 0.79 / ( -( TABLE[--1][-35] ) ) - protect(ROWS,COLS)
def betray(Stark,Stark){
	if(( COLS + -dog )){
	if(( mislead(-( ( COLS + TABLE[ROWS][ROWS / Jon] ) ) + foo(bar(-( -TABLE[COLS][92] ) - ROWS * rule())),77) )){
	if(-980.7){
	if(-94 * -( ( -ROWS ) ) + ---ROWS - TABLE[mislead(betray(( Jon )))][betray(ROWS,rule(-COLS),--Hodor)]){
	-0.57
};
	-130.92
} else {
	if(y){

}
};
	Stark *= ( dog )
} else {
	TABLE[protect(bar(foo(-0.91 + ( ( ( ( TABLE[COLS][Ygritte + -y] ) ) ) ) + ( -920.245 )),protect(--COLS * -1)),foo(-0.69))][( COLS )];
	if(62){
	if(( -97 )){
	Arya /= -74 / ( rule(Arya) ) - -1
} else {
	if(--160.017){
	Arya -= ( y ) / protect(-Stark,destroy(Arya,( rule(0.95,x,ROWS) ),ROWS)) - -TABLE[Sansa][Hodor] + 55;
	if(x / Jon - -55){
	Sansa += COLS;
	x *= ---rule(-Arya - x * COLS,--1)
}
}
};
	if(TABLE[( ( ROWS ) )][Jon]){
	0.44
};
	-0.51
};
	---protect(-( foo(Arya,dog,Hodor) / protect() ),( ( ( -0.47 ) ) )) * ( Stark ) * bar(protect(mislead(Jon,( ( COLS / -Arya ) )),-0.28,TABLE[betray(-34)][-43]),-protect()) * TABLE[0.08][-( TABLE[y][70 / -870.3] ) * -0.24 - y]
};
	( x )
}
}
def TABLE[destroy(mislead(bar(( ( ( -x ) ) ),TABLE[ROWS][TABLE[protect()][COLS]]),destroy()),580.45,-390.8046) * Sansa][i] {
	foo()
}
var Hodor = COLS + dog
var y = -0.76
var dog = mislead(-( -Jon ),Sansa)
assert bar(bar(( 69 / ROWS ),-20),destroy(-rule(( COLS * ROWS )) + ROWS,( --73 )),TABLE[protect(betray(mislead(mislead(Stark,ROWS))) - -TABLE[( -330.744 )][-( -31 )])][-21]) : "Winter is coming"
def TABLE[-0.35][j] {

}
assert Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[destroy(-6)][i] {
	x *= mislead(ROWS,1)
}
def rule(Arya){

}
def TABLE[Sansa][i] {
	foo(-22)
}
assert 1 : "What do we say to the Lord of Death?"
def TABLE[ROWS / y][j] {
	Ygritte += -bar(( dog + bar(1) ),-98,( foo(Stark) ))
}
def mislead(){
	x * destroy(-1);
	bar(-foo(destroy(47,( -410.12 ),( Sansa )),-1))
}
def TABLE[-y * -COLS / betray(TABLE[TABLE[---TABLE[--( destroy(foo(mislead(( bar(Sansa) ),rule(Stark,( ( rule(rule(-0.22 / dog),COLS) ) ),TABLE[( Stark )][TABLE[protect(Hodor)][( ROWS )]] + -ROWS / -( ( -ROWS ) )),Arya),ROWS - bar(-690.41)) * TABLE[rule(-Sansa)][COLS]) ) * bar(Sansa,-( -660.6929 ) - Jon / TABLE[y][Hodor] / -( -Ygritte ))][ROWS] * rule()][-ROWS / COLS]][--0.27]) * foo(x * ( destroy() ),-Hodor)][j] {
	dog
}
def destroy(Stark){
	foo(COLS,-betray());
	( ( ( -destroy(( -Sansa + destroy(( ( TABLE[--mislead(-TABLE[42][COLS],mislead(mislead(0.13),ROWS),COLS)][46 / -( y ) * 59] ) ),destroy(( Sansa ),x,COLS)) * -630.454 )) ) ) );
	-0.92
}
assert dog : "Fear cuts deeper than swords."
var Hodor = Hodor * TABLE[( ( -Jon ) )][770.114]
assert ( 50 ) : "Nothing burns like the cold."
assert ( 23 ) : "Fear cuts deeper than swords."
def protect(Ygritte){
	if(( ( foo(Hodor) - -840.388 ) )){
	y /= --COLS;
	if(mislead()){
	Ygritte -= destroy(foo(( -9 ),( dog ),betray()) * 0.04,390.9567 + protect(Stark))
} else {
	if(( Stark ) - -Arya){
	if(Jon){
	Sansa += 1
}
} else {
	1;
	if(80){
	Sansa *= ----Jon * mislead(mislead(betray(( ( 0.38 ) )),-810.01),( -protect(-50.092,destroy(--y),y) )) + 1
}
};
	Ygritte += 0.14
}
} else {
	-0.51 - ( ( -1 - betray(TABLE[( -betray(mislead(foo(( Ygritte )),( -COLS - -( -900.63 ) / Sansa + ( ( foo(Hodor - COLS * ( -TABLE[( -0.33 )][( -( ( 0.91 ) ) )] - ( ( ROWS ) ) ),( mislead() )) ) ) ),Sansa) / rule(),dog) ) / 1][-( destroy(-0.37) ) + ( -foo(COLS) )],ROWS) ) );
	if(( 17 )){
	Arya *= -0.16;
	if(Hodor){

} else {
	Hodor /= protect();
	Sansa /= bar(foo(betray(-48,--0.95,rule())));
	-1
}
};
	Jon -= --Stark
}
}
def mislead(dog,Ygritte){
	Sansa *= ( rule(( 0.85 ) / dog,88) )
}
var Hodor = destroy()
def mislead(Ygritte){
	Jon /= Jon;
	bar(bar(betray(),--89))
}
def protect(x,Stark){
	x -= foo(-( ROWS ));
	if(--TABLE[( ( ( destroy(0.57) ) ) )][Hodor] * mislead(destroy(-TABLE[Arya][---ROWS],TABLE[--Hodor][( -30 ) + protect(COLS) - -0.25] / rule(----Stark + COLS,--TABLE[Stark][mislead(-Arya)]),-TABLE[14][mislead(8)]),ROWS,( --TABLE[TABLE[x][-COLS]][foo()] )) - -1 * betray(COLS - foo(),-( ( Hodor ) ))){
	Stark += -TABLE[ROWS][ROWS]
} else {
	-rule(dog,38,-39 * mislead(--1));
	foo(-TABLE[0.47][destroy(-mislead(-680.261 - TABLE[rule(dog)][( protect(protect(( protect(betray(ROWS),betray(-490.65)) ) * -Stark,Hodor,ROWS / mislead(mislead(x / mislead(mislead(Hodor,-dog) + betray() * Jon + 1)))),( COLS + -0.52 )) + dog )],( -430.01 ),( -0.06 )))],TABLE[destroy(-foo(Jon - -0.32 - --90 / ROWS,( x )),TABLE[-27][( -20 )])][-Jon],52);
	if(-COLS / Stark){
	ROWS
} else {
	if(TABLE[rule(rule(( ( Sansa ) ),TABLE[Arya][Arya]))][x]){
	Arya -= betray(TABLE[Sansa][TABLE[COLS][( TABLE[Hodor][Arya] )]],( Sansa ));
	rule(-47 + -470.68 / ( betray(Jon,protect(-0.37,-1,ROWS) - -0.68) ),-0.07 - Ygritte);
	if(--( ( 49 ) )){
	if(( ( -300.505 ) - ( ( Arya + --0.97 / Ygritte + -TABLE[( -TABLE[ROWS][-0.58] * ( rule(ROWS) ) / ( 22 ) )][( ROWS )] + rule(17) ) ) )){
	if(y){
	Ygritte
};
	if(COLS){
	if(ROWS){
	x -= protect(-betray(TABLE[-630.166][TABLE[--1][Sansa]]),Jon)
} else {
	Arya += Stark;
	if(( TABLE[foo(dog)][-TABLE[( mislead(COLS * mislead(protect(-ROWS / 33))) )][( Arya )]] ) * ( ( Arya ) ) / TABLE[ROWS / Hodor][Arya]){
	-Arya
}
};
	ROWS
}
}
} else {
	if(( betray() )){
	if(betray()){
	y -= ROWS / ( rule(-0.3 - -destroy() - TABLE[TABLE[( -protect(( -COLS ),--destroy(14,( y - ROWS ) / mislead(( 34 )),780.8) * Jon,92) * -Arya )][48 * y / 1] - ( 1 )][( 0.22 ) - y],COLS) )
};
	if(x){
	if(-rule(TABLE[100][Arya])){

};
	Sansa += ROWS - ( ( ( -40.3 ) ) )
};
	Hodor -= ( Ygritte )
};
	if(( -( 0.5 ) ) - TABLE[-430.98][( -dog )] / ( dog )){
	-78 - -( ( COLS ) )
} else {
	rule(ROWS)
}
}
};
	if(bar(( mislead(protect(mislead(-34),mislead(---89 / ROWS / ( 0.83 ),ROWS),dog),( -betray() )) ),--0.12,dog) + protect(-0.23,( -0.35 ),Arya) * ROWS){
	if(Ygritte){
	Hodor += -( --1 );
	( 220.3449 )
} else {
	Ygritte -= bar();
	( ROWS + rule(( Hodor )) );
	-0.75 + COLS
}
} else {
	x += -protect(-ROWS,rule(ROWS,Stark))
}
}
}
}
def destroy(Ygritte,Ygritte){
	y *= dog
}
def TABLE[TABLE[destroy(-1,bar(-ROWS - Jon,destroy(Stark),betray(-57 + ROWS,-( ( ROWS ) ) + foo(-490.446,dog,-betray(COLS * ( ( -dog * COLS / ( betray() ) - 0.69 + x / Ygritte ) + foo(mislead(bar(Hodor),COLS,-COLS + ( ( Ygritte ) )),24) ),( ROWS ))) / betray(Sansa,-480.59),-( -bar() ))))][-27]][j] {
	Arya -= ( --980.455 );
	Hodor += Stark;
	if(ROWS){
	y /= rule(-( -protect(Hodor) ),ROWS) - -( destroy(Sansa) - -Jon )
}
}
def foo(Ygritte,Stark){
	Stark -= -ROWS;
	Sansa /= protect(rule(Arya,Jon * COLS))
}
def TABLE[( TABLE[foo(betray(-ROWS,( COLS ) + ROWS - destroy(--( rule(Ygritte,-50) ) / -Jon / Hodor + ROWS - ROWS,-( TABLE[destroy(-510.859,protect(foo(),x) * dog)][-( ( --TABLE[( Stark / -76 + bar(Jon,-43,destroy()) )][rule(TABLE[Sansa / ROWS / ( ( ROWS ) )][ROWS]) / TABLE[610.042][rule(-Jon,5,-ROWS - COLS)] + ROWS] ) )] )) * Ygritte - -24 * bar(destroy(ROWS),destroy(betray(( -ROWS - ( -1 * Arya ) ),( ( rule() ) )),-( Arya + TABLE[foo(rule(-1 - destroy(Jon) - ( Arya ) * COLS))][---ROWS + Hodor / -1] ),Hodor),betray(-63,-Stark))))][--Hodor] )][k] {
	( ( ( 0.76 ) ) );
	if(rule(ROWS,Sansa) + 80){
	Arya /= Arya;
	if(-y){
	if(protect(Arya,( mislead(21,( ROWS )) ),Sansa)){
	Sansa -= ( -0.61 )
} else {
	if(rule(-Ygritte)){
	Ygritte -= COLS - protect();
	Stark -= 1
} else {
	if(TABLE[foo(betray(ROWS,( --Ygritte - -0.67 + -( -TABLE[( ROWS )][mislead(-( ( dog ) ))] ) + dog )),Sansa / -( -( protect(-Stark) ) ))][Hodor]){
	if(-93){
	( Jon );
	Ygritte /= -COLS
};
	( x )
} else {
	-39
};
	Jon / ROWS
}
}
}
};
	dog /= COLS
}
def destroy(Ygritte,Stark){
	Hodor += -( mislead(( ( Arya ) ),( bar(rule(),ROWS) ) * mislead(-620.6)) );
	Sansa += ( Jon );
	Ygritte -= foo(( ( betray(47) ) ))
}
var y = 0.3
var Ygritte = mislead(0.12)
var x = -( TABLE[Arya][-protect(COLS) + ( COLS )] ) * COLS
var Arya = TABLE[TABLE[betray(0.03,bar())][( --580.07 )]][x]
var Arya = x / foo(73 + TABLE[TABLE[-80][TABLE[-( betray(-1,-dog + rule(74)) )][--0.4]]][x])
def TABLE[COLS][k] {
	dog -= -bar(( 0.19 ),Jon - --Ygritte / mislead(betray(( -Stark )),betray(3,x,---ROWS),rule(COLS * ROWS,-( ( Sansa ) ) - -betray(y))));
	Stark -= -Arya;
	foo(130.78)
}
var dog = -( ROWS )
var Hodor = -0.72
assert -mislead() : "Fear cuts deeper than swords."
def bar(x){
	if(protect(-30,Stark) - TABLE[Sansa][--0.84] * ( Jon )){

} else {
	-mislead(COLS)
};
	Jon -= betray(-Sansa)
}
def TABLE[TABLE[0.5 + ( Hodor )][rule(( TABLE[ROWS][-0.65 * TABLE[rule(-rule(Ygritte,Arya,ROWS),( COLS ))][0.28 / -1 / COLS * 90.43]] / ROWS ),Hodor)]][k] {
	x /= foo(ROWS,-0.5 + rule(rule(-( -0.31 ),Stark)))
}
var Hodor = bar(( Stark - TABLE[ROWS][0.42] ))
var y = 1
var Ygritte = Hodor
var y = rule(ROWS,61,ROWS)
def betray(y){

}
assert destroy() : "One can not simply parse himself"
def TABLE[COLS][j] {
	-Stark - -protect();
	Ygritte /= TABLE[COLS - Sansa * COLS][( -51 )] - mislead(Hodor,-0.89);
	y -= -0.76
}
def protect(){
	Jon -= mislead(foo(-6,-0.5,protect(Sansa)) - ( ROWS ) * 60,rule(-210.6962))
}
def TABLE[( Ygritte ) / ( TABLE[Ygritte][protect()] ) * ( -0.61 - betray(TABLE[protect(( ( ( x ) ) ),Ygritte,betray())][Ygritte - 65],-890.493) )][j] {
	if(x){
	if(( Arya )){
	if(Jon){
	if(-ROWS){

};
	dog /= ( 810 );
	y += -96
} else {
	Jon /= mislead(( -1 ),0.42);
	Stark
};
	dog += ROWS - mislead(mislead(--COLS))
} else {

};
	y *= ROWS
} else {
	bar(y,dog / dog);
	-foo(destroy(COLS,ROWS) * x / rule(( Ygritte ),( COLS )),--2)
};
	if(-1){
	bar()
} else {
	x /= ( destroy() )
};
	if(( destroy(-1 - 0.47 + 1) ) * dog){
	Ygritte /= Jon;
	( 740.65 );
	-Sansa
}
}
var Stark = ROWS
assert Sansa : "Winter is coming"
def TABLE[-TABLE[ROWS][( Ygritte )]][k] {
	if(Ygritte){
	ROWS;
	Hodor += ( ROWS ) + 180.081
};
	if(30.277){

}
}
def TABLE[( TABLE[340.08][destroy(protect(-dog,( -COLS )),dog)] )][j] {
	Hodor /= -0.02;
	destroy(( x ),( -0.42 ) - ( Jon ))
}
var Hodor = ( betray(destroy(Ygritte,TABLE[-48][Hodor - TABLE[( x )][-0.22] * destroy(--destroy()) * bar(TABLE[( Jon - -0.98 / 45 )][COLS],-0.1)])) )
var y = -280.52
var x = 0.36
def foo(Stark,Arya){
	if(860.3){
	ROWS;
	if(destroy()){
	-1 * -0.37
};
	if(COLS){
	Stark += 0.18
} else {
	-61
}
}
}
assert ( -74 + TABLE[610.183][COLS] ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = destroy(300.81)
def foo(Stark,dog){
	Arya *= destroy(x,-y);
	dog += -foo(---TABLE[-foo(ROWS,TABLE[0.27][0.87 - -35])][--3] / ( bar(Hodor) ),( -0.49 ));
	-ROWS
}
def rule(dog){
	Ygritte *= COLS;
	if(( COLS )){
	( TABLE[TABLE[-31][-0.12]][--910.416 / ( ( Sansa ) ) + COLS] );
	TABLE[x * -0.39 * 0.9][TABLE[-( -( Arya + Ygritte * Ygritte ) ) - destroy(COLS) / -1][Arya / -0.64]] - rule()
}
}
var y = mislead(-290.433)
assert ROWS / Arya : "Nothing burns like the cold."
def TABLE[( rule(-x + ROWS / -TABLE[TABLE[rule(Sansa,-0.08) + 250.7 - Arya][-( -( -mislead(-0.6 - ( rule(Stark) )) ) )] - destroy(( Sansa ))][-COLS] / Jon,dog) ) - ( ( -Stark ) ) / COLS][k] {

}
def TABLE[( -x )][j] {
	if(93){
	if(destroy(y)){
	Arya -= COLS;
	if(-38){
	if(1){
	dog += -betray() + 190.0499
} else {
	Jon += 7;
	Ygritte /= -( TABLE[y][-COLS] )
}
} else {
	Sansa *= dog
};
	ROWS
} else {
	rule(rule(foo(Stark),protect(),-11))
};
	if(bar(1,Sansa)){
	Ygritte -= foo(( Arya ),Jon,1) / ( bar() );
	Ygritte += COLS;
	-0.42 / -ROWS + ( -( ( ( Ygritte ) ) ) - ( rule(-81) ) )
}
} else {

}
}
assert -0.75 : "Winter is coming"
var x = ( TABLE[-0.83][TABLE[y * -x][-870.974]] )
def bar(){
	Ygritte
}
def mislead(Arya){
	if(-16 / ( Arya ) - --( ( TABLE[COLS][20] ) - foo(-ROWS) ) * Hodor + 650.929){
	Hodor -= mislead(-39 + rule(Ygritte) + COLS,( bar(Hodor * y) ))
} else {
	if(Hodor){
	( -0.12 );
	if(Ygritte){
	rule(Jon);
	Arya += destroy(( ( 0.58 ) ))
} else {
	x
};
	--COLS
};
	protect(-y,0.13)
}
}
def TABLE[-100][k] {
	if(Sansa){
	y;
	if(( betray(foo(-40,-TABLE[COLS / foo(Ygritte,( -( ( 290.329 ) ) ))][mislead(-protect(ROWS,destroy(),protect()) - 79,0.13,bar(-0.25,COLS))]),-1) )){
	if(( -53 )){
	protect(-( Hodor ));
	-1
} else {
	protect(betray(rule(--dog / -2,-( ROWS )),Hodor,-0.28) - ( mislead(( Sansa ) + -x,dog) ),1 * -0.12,TABLE[( COLS )][( -74 )])
};
	if(73 + 310.422){
	93
}
} else {
	Ygritte += foo(( COLS ),--TABLE[COLS][-Stark] + COLS);
	if(ROWS + ( bar(( 1 - ( ( TABLE[ROWS][-1] ) ) )) )){
	if(COLS){
	if(( -foo(-TABLE[Arya][y]) + 100.649 ) - y){

};
	Arya
} else {
	--TABLE[-1][foo(ROWS,( 0.12 ))] * -COLS
}
} else {

}
}
} else {
	if(( COLS )){
	y
};
	-480.26;
	-0.46 - -0.82 - mislead(-1,( Ygritte / mislead(destroy(COLS,-62) - COLS,bar(),ROWS) ) + bar(bar(Sansa,--( -82 ) - ROWS + destroy(Jon,( mislead(-1,( ROWS ) - ( 0.02 * x ) - destroy(--51 / -dog) / TABLE[COLS][TABLE[-0.75][Jon]] / -mislead(-Ygritte / ROWS / 25) - COLS) + --Ygritte ),60) * ROWS + -COLS * TABLE[destroy(750.15 / -710.23,COLS,betray(dog + 35))][-rule(TABLE[destroy(Ygritte) / -Sansa][( protect() )]) * ROWS / ( bar() )] + -0.45,-0.32)))
};
	-1;
	Hodor += -( Ygritte ) * x
}
def protect(Hodor){
	if(destroy()){
	Sansa *= -ROWS;
	if(y){
	0.82;
	if(-( COLS )){
	Hodor *= ROWS;
	Ygritte *= 43
} else {
	Sansa -= --41
}
}
}
}
def TABLE[( -foo(( ( -Ygritte ) )) )][k] {
	foo(-880.213,COLS);
	x
}
def foo(Ygritte,Hodor){
	dog *= Ygritte / ( x )
}
assert ROWS : "Fear cuts deeper than swords."
assert -dog + TABLE[-mislead(COLS,-COLS - Ygritte / 31,( rule(( TABLE[mislead(x,Jon,0.87) / rule(x,-0.98) - -( -foo(-COLS,Jon,--96 + ( Ygritte )) ) + ( ( dog ) )][Ygritte] ),-y) )) - ( COLS )][-protect(protect(TABLE[Stark][-bar(-Hodor,( foo(Jon) + ( --28 ) ),protect(( 75 )) * -ROWS)]),0.34)] : "Winter is coming"
var Ygritte = ROWS
assert ROWS : "What do we say to the Lord of Death?"
def betray(x,Stark){
	x *= y;
	45
}
var Stark = ( destroy() )
def TABLE[dog][k] {

}
assert -TABLE[bar()][dog] : "Fear cuts deeper than swords."
assert protect(-14,( ( Jon + TABLE[-Ygritte][9] ) )) : "Fear cuts deeper than swords."
def TABLE[-67][j] {

}
var x = ( COLS ) / 340.05
def TABLE[( ( foo(y,betray(( 71 ))) ) )][k] {
	( TABLE[destroy(-( Ygritte ),destroy(( -ROWS ),x))][-TABLE[dog][rule() + 0.32]] );
	if(( -COLS / Arya ) - COLS + foo(foo(-COLS,protect(x,0.53),COLS),Sansa) * -73 * destroy(Jon)){
	if(Stark){
	dog -= TABLE[-( COLS ) * destroy(x,-90.29,-89)][COLS];
	( 85 ) * mislead() - -220.63 + betray(-protect(-0.99 / -COLS) * ( -COLS ) * ( Stark ) + 27 / TABLE[Hodor][-0.76],( -93 - protect() ),-0.57);
	Arya
};
	destroy(--22,0.84)
};
	if(x){

} else {
	x += mislead(-0.47,( ( ( mislead(-1,( -destroy(-( ( bar() ) * TABLE[-0.13][destroy(Ygritte,-67)] / -ROWS ),bar(-TABLE[( -5 )][---1],COLS)) )) ) ) / COLS - -foo(bar(),( COLS )) * -( -850.9 ) ))
}
}
def TABLE[-0.74][k] {
	Ygritte *= betray(-bar())
}
var Stark = x
var Sansa = Jon
assert bar(-( TABLE[-1][foo(( betray(destroy()) )) / betray()] )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = --foo(foo(x))
def TABLE[--92][j] {
	if(TABLE[y][-66]){
	--COLS;
	Sansa -= -betray(( x ),COLS) / rule(protect(( ( TABLE[---( TABLE[COLS][1] )][-20] ) ),COLS,( Ygritte - dog )),( Sansa ));
	foo()
}
}
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = COLS
def TABLE[-( -Hodor )][k] {

}
def TABLE[foo()][k] {
	Jon /= ( mislead(TABLE[Arya - rule(foo(rule(--0.96)))][Hodor],dog / -( 0.78 ) / bar(protect(-0.57,-TABLE[--1][Sansa]))) );
	if(( 86 - Jon )){
	Stark += ( protect(destroy(ROWS,---rule(-88,-ROWS),TABLE[TABLE[-ROWS - ROWS][-0.26]][Jon]),( -780.199 * TABLE[( 940.38 ) + foo() * -1][destroy(ROWS)] )) );
	Sansa *= Sansa;
	y *= protect(-0.46,-y) + -1 * -( -( 0.79 ) + -980.13 )
}
}
assert ROWS : "What do we say to the Lord of Death?"
var Hodor = 550.897
assert --betray(( -TABLE[( -540.554 )][Arya] ),( -870.681 ),ROWS) : "One can not simply parse himself"
def TABLE[rule() + destroy(COLS,TABLE[foo()][Sansa],( ( TABLE[0.07 - Stark][COLS] ) ))][j] {
	if(ROWS){
	--150.14
};
	Arya *= -Jon
}
def foo(y,Stark,Ygritte){
	( COLS ) * COLS;
	Jon *= x
}
def TABLE[ROWS][i] {
	dog *= x
}
var y = betray()
def protect(Hodor,y){
	Arya -= betray(( protect(bar(),dog,-( -0.74 ) - Ygritte) ),Jon);
	COLS
}
assert 88 : "One can not simply parse himself"
assert ---Jon * Jon : "One can not simply parse himself"
def TABLE[( ( 1 ) )][k] {
	if(23 + 25){
	Sansa /= ROWS;
	dog
} else {
	if(Sansa){
	y
};
	if(rule(-COLS,Arya,COLS + --11 + COLS) * COLS){
	-61 + ( bar(TABLE[rule(--( dog ) * x * -ROWS) / ( Hodor )][-1],-rule(COLS + 0.76 - Hodor * ( -83 ))) );
	COLS
};
	if(destroy(( betray(-Arya) ) - ( 0.05 + ( -1 ) ) * COLS / dog / COLS,--640.2,-1)){
	if(protect(---COLS)){

} else {
	if(-dog){
	protect();
	ROWS;
	if(45 + protect(1)){
	if(COLS){
	x /= 270.26;
	Sansa *= ( COLS );
	( -0.51 )
} else {
	dog += COLS;
	ROWS;
	Ygritte -= -760.98 * ( --protect(TABLE[( ( TABLE[bar(600.04,TABLE[TABLE[TABLE[mislead(y,( x ) - -( COLS ) / ( ( ROWS - 1 ) ),( protect() ))][bar(TABLE[TABLE[foo(Stark,foo(TABLE[-0.72][( ( --0.53 ) - 0.63 )],foo(-0.16))) / ( --( -240.96 ) )][--0.45 + ( protect(Sansa,protect(TABLE[COLS][rule(TABLE[( foo(COLS,-( x )) )][TABLE[y][mislead(Sansa,( --Stark / ( ROWS ) ),-30 + x)]])] + ( foo(77,x) ),mislead(COLS * --( foo(bar(destroy(-( 550.5484 )) / -Jon - -mislead(( -0.11 )) - ---Sansa,1)) ) * ( protect(betray(),( ROWS )) ) + ROWS),-15)) )]][( x / dog )],-x,-( Arya ))]][-6]][rule(destroy(),Jon - TABLE[TABLE[COLS][-0.5]][Hodor])])][ROWS] ) )][protect(rule())]) )
}
}
};
	if(COLS){
	bar(TABLE[( destroy() )][( ( Stark ) )] / mislead(Ygritte / 53 - TABLE[TABLE[Hodor + COLS][---42]][COLS] / Stark) / betray(protect(--1),( ( -COLS ) )),1)
} else {

}
};
	ROWS
}
}
}
assert ( ----( ( ( --1 ) ) ) ) : "Fear cuts deeper than swords."
var Stark = ( mislead(betray(COLS,0.21,ROWS),bar(TABLE[--TABLE[( 32 )][destroy(COLS,( ( 1 ) ) + ( TABLE[16][betray(Ygritte)] ),( 710.5 ))]][x],dog,( -520.124 ))) )
assert destroy(destroy(),( foo(1) )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(Sansa,Hodor,dog){
	-Jon;
	x += ( -rule(-COLS,destroy() + -0.05) - Stark )
}
def protect(){

}
def TABLE[( ( -1 ) )][i] {
	if(ROWS){
	if(Sansa){

} else {
	TABLE[bar(y,( TABLE[betray(( 1 )) / Jon][-0.84] ))][bar(dog,TABLE[COLS - ( ( -77 ) )][COLS] * ( -1 ))]
};
	Hodor /= -Hodor
} else {

};
	0.73
}
assert -1 : "Nothing burns like the cold."
assert ( -960.65 ) : "Winter is coming"
def protect(Ygritte,Jon,dog){
	if(( ( -rule(Hodor + bar(88,( 1 ))) - -1 / --7 + ( y ) ) )){

} else {
	Jon *= ( TABLE[0.93][-( protect() )] );
	ROWS
}
}
assert COLS : "What do we say to the Lord of Death?"
assert dog : "Winter is coming"
var y = --TABLE[ROWS][COLS]
def rule(Sansa,dog){

}
assert --dog : "Winter is coming"
var Jon = -38
var dog = -73 * ( -16 / ( -0.72 ) )
def destroy(Sansa){
	bar(TABLE[TABLE[-destroy() - TABLE[55][( ( ROWS ) )]][Stark]][-TABLE[TABLE[-1][( ( 94 ) * -0.15 * mislead(( TABLE[ROWS][-0.71] ),TABLE[Ygritte][destroy(dog,destroy(mislead(protect(),( --91 ),Arya)))]) )]][-( --protect(-( 43 )) )]]) + --0.89 + TABLE[rule(-81,-820.68)][( betray(bar(1,rule(mislead(ROWS,betray(1,TABLE[COLS][( Ygritte )])) * mislead(Stark))),COLS,Arya) )] - TABLE[ROWS][-Sansa];
	if(Hodor){

}
}
def TABLE[Hodor][j] {
	Ygritte += rule();
	Stark *= bar(-1)
}
assert x : "One can not simply parse himself"
def protect(){
	if(Stark){

};
	y -= ( Jon )
}
def TABLE[-rule(670.881,( -( COLS ) ),protect(( --64 ),TABLE[Sansa][-0.86]))][i] {
	TABLE[TABLE[foo(betray(TABLE[27][( -0.14 )] / ( Stark )),Ygritte)][( ( Arya ) + -67 )]][Jon * Arya];
	if(bar()){
	y /= protect(-0.02 - dog)
} else {
	Arya *= ROWS;
	y *= ROWS;
	COLS
};
	rule(rule(-0.55),-ROWS,( 1 ))
}
def TABLE[TABLE[Stark][79]][k] {
	Jon /= -1;
	Jon *= ( -1 )
}
def foo(Sansa,Ygritte){
	if(Stark){
	if(bar(( Jon ),ROWS - Ygritte)){
	if(Stark){
	Stark -= -1;
	if(protect(TABLE[-1][Jon] * -5,-mislead(Sansa))){
	Hodor /= 1;
	Ygritte *= Sansa
} else {
	Stark /= ( TABLE[1][-( foo(Jon,x,0.88) )] )
}
};
	if(( -0.49 - destroy(( Stark ),dog) )){
	if(foo(0.33,bar(Arya))){
	Jon *= COLS;
	ROWS
}
} else {
	ROWS * COLS + COLS;
	Stark *= -79
}
};
	if(mislead(Sansa,( dog ) - -87,-foo(x + rule(COLS,ROWS),Sansa))){

} else {
	if(Sansa){
	y += 0.03;
	dog /= 0.84
} else {
	if(Stark){
	COLS;
	Jon /= --( mislead(-TABLE[1][rule(-bar(Ygritte),y) / -64],COLS) + -Arya / Ygritte + 30 )
} else {
	if(0.76){
	Hodor *= ( ( ( ROWS ) ) );
	if(-870.7643){

};
	-( -ROWS - -Arya )
};
	( bar(Stark) )
};
	-ROWS / x - rule(-4,-46) / bar(-0.4) + -ROWS
}
}
};
	if(TABLE[destroy(( -( rule(y,-2,54) ) ),y,COLS)][-COLS] / ROWS){
	ROWS;
	if(-COLS){
	if(x){

} else {
	Sansa *= Sansa + TABLE[protect(bar())][rule(0.64)]
};
	if(-rule(COLS)){
	if(ROWS){

} else {
	-80.9983
}
} else {
	Sansa += ROWS
}
}
}
}
assert y * Stark * foo(ROWS - ( 750.85 ) * ( -0.45 * -10 ) / ROWS * -( ( ( Hodor * -230.133 ) ) ),-0.77 / betray(-( Jon ) + ( dog / foo(betray(( ROWS ),mislead(( ( ( -foo(--TABLE[COLS / ( Sansa )][Stark] + protect(mislead(ROWS),-y),x * 12 * dog,TABLE[Ygritte][( -ROWS )]) ) ) ),-Jon),protect(x)) + TABLE[protect(TABLE[-Sansa + COLS * TABLE[( -270.66 )][4 * Stark]][protect(COLS / ( -38 ),( -( ROWS ) ))],ROWS,ROWS)][ROWS],-( destroy(Jon,foo(---1 / destroy(0.67,-( -41 )))) )) ))) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( protect(-( ( 0.4 ) ),-0.8,Ygritte) ) * --0.58 - 0.57 + dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(){
	if(-mislead()){
	if(dog){
	Ygritte -= bar(-0.51) / -destroy(17) - 0.62;
	if(rule(0.65,( --COLS - ( TABLE[Jon][foo(-540.625,( Ygritte ),--0.02)] ) / -betray(COLS) ))){
	( destroy(COLS,( destroy(protect() - TABLE[bar(dog)][-1] / ( TABLE[( Stark )][dog] ) + TABLE[Stark][betray()]) )) );
	Jon += COLS
} else {
	( COLS - 0.67 ) * 0.86;
	Sansa /= dog
}
} else {

}
};
	x += ROWS
}
var Stark = Sansa
assert protect(-0.85,-( Ygritte ),mislead(ROWS,TABLE[TABLE[protect(-COLS,1)][protect(Hodor - Stark,( 1 ))]][x / rule(0.51) - ( --71 )],foo(ROWS,--Hodor,( y )))) : "Winter is coming"
def TABLE[Ygritte][j] {
	Stark *= Jon
}
assert -710.8 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = foo(Hodor,bar(-5,mislead(y,260.793)),-COLS) + ROWS
def TABLE[-0.88 * betray()][j] {
	if(Hodor - ROWS){
	if(-ROWS){
	dog *= betray(( dog ));
	if(--3){
	Stark -= Arya;
	if(ROWS + -630.586 + COLS){
	COLS;
	x;
	Stark += Arya
} else {

}
} else {

};
	Sansa -= -0.59 / ( ( 1 ) )
} else {
	if(foo(foo(---TABLE[Sansa][( COLS ) * COLS] + ----0.48 - protect(( COLS * Arya + ROWS ),( -0.41 ),( dog ) / ( ROWS )) * -ROWS,Sansa),COLS,Jon)){

} else {
	if(( -TABLE[TABLE[TABLE[Arya][TABLE[ROWS][--TABLE[-( -66 )][-ROWS]]]][y]][Ygritte] )){
	if(65){
	( ( ROWS * --72 ) )
} else {
	-1
};
	y -= COLS
};
	y += ( Arya );
	if(Arya){
	( -1 );
	if(0.99 * TABLE[-0.97][41]){
	dog *= -Stark + -TABLE[4][destroy(-bar(-TABLE[destroy(-destroy(85,( Stark )),-ROWS + Arya,( 0.97 ))][protect(ROWS * ( Arya ),( 1 ) - COLS,-140.9458)],-( -ROWS )),ROWS,-Arya)] - -TABLE[y][0.07];
	( 1 )
}
} else {
	Sansa /= -420.105
}
}
}
}
}
def TABLE[rule(Sansa)][j] {
	if(Hodor){
	Hodor += ( mislead(COLS,rule(COLS,y)) );
	Stark *= --TABLE[Stark][betray(1 - protect(-0.74,TABLE[-260.126][-TABLE[1][-1]],TABLE[Hodor][( TABLE[TABLE[--830.7859][bar()]][( ( Stark ) )] )]),Stark)] - COLS;
	destroy(bar(),mislead(-Stark + -24 - ( --COLS ) - COLS / Stark,ROWS),betray(Hodor) + Jon)
} else {
	if(ROWS){
	if(( mislead(( destroy(( ( -( -betray(betray(-foo(protect(Sansa,bar(0.71,( ROWS )),--( mislead() )),ROWS) + TABLE[Arya][bar(foo(Ygritte),--57)]),rule(betray(dog,destroy(( -73 ),ROWS,COLS)))) * destroy(bar(x),0.17,Jon) - Ygritte ) ) )) ),Arya + TABLE[36][Arya] + ( 230.668 )) )){
	0.72 - bar() * protect(--96 - ( -dog ) * -34,destroy(COLS,foo()));
	Jon
} else {
	ROWS;
	92
};
	COLS
} else {
	-0.1
}
};
	x -= ( -( ( -85 * COLS ) ) )
}
def rule(Ygritte){
	if(ROWS){
	if(Stark){

} else {

}
} else {
	Hodor += COLS
};
	Sansa -= ( -mislead(-1,destroy(Arya) / protect(),TABLE[( rule(( Jon ),protect(ROWS)) )][COLS]) );
	ROWS
}
var dog = -370.0756
def TABLE[( -0.89 )][k] {
	ROWS
}
def TABLE[--ROWS][k] {

}
def betray(Arya){
	ROWS
}
var dog = -rule(COLS,( ROWS ),-rule(mislead(betray())))
var Stark = -251
assert protect(--0.28,-0.75 - -----0.8) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[foo(destroy(),protect(-Jon,-TABLE[COLS][ROWS - mislead(1,5) / ( -mislead() )] - dog),ROWS)][k] {
	Stark /= TABLE[Sansa][destroy(dog,TABLE[( --340.95 ) + ( ( dog * Sansa ) ) + ROWS][( ( TABLE[-700.7 / betray(Jon)][0.45] * -59 ) + 100.82 ) + ROWS] / ( -Sansa ))] * y
}
def foo(y,Stark,Hodor){
	---destroy(TABLE[( Sansa )][mislead(Jon,Jon - ( TABLE[bar(COLS)][TABLE[TABLE[mislead(rule(( -ROWS / rule() )))][( -Stark )]][-73]] ))] / -Sansa * ( destroy() ),COLS)
}
def bar(Stark,Arya){
	ROWS;
	if(80){

} else {
	y /= 1
}
}
def destroy(){
	if(COLS){

}
}
def mislead(){
	if(-( ROWS + ROWS / -890.882 ) * --0.27){
	( -880.85 );
	if(-1){
	y;
	Stark += ( betray() );
	if(-0.17){
	x
} else {
	mislead() / foo(x);
	if(60.4){
	-( -Sansa )
} else {
	if(COLS){
	if(( 1 )){
	dog -= -1;
	Hodor -= protect(TABLE[Sansa][( ( protect(-( --1 ),-1,destroy(-y,-( Jon )) - protect(-19) - ( mislead(( COLS ),-( bar(-0.09) ) + 120.8,-Jon) )) - foo(-0.66) ) - 280.535 - Arya )]) + Arya
};
	if(ROWS * Hodor){
	Arya *= destroy(-x,( betray(ROWS,--( -y ),protect(TABLE[betray(ROWS - betray(Ygritte))][( Ygritte )],-0.61)) ) + bar(destroy(dog),-0.24,-63));
	if(Hodor - foo(Ygritte) - ( COLS ) / -0.22){
	-( 0.75 ) + betray(92,protect(COLS,ROWS / COLS / ( foo(-ROWS) )),( 33 ));
	if(x){
	if(-40){
	-0.55
}
};
	if(-0.81 * COLS / -72){
	if(x){
	-foo(( Ygritte ),4 * bar(ROWS) - ROWS,mislead(-1));
	dog
} else {
	Jon += -y;
	Stark -= Stark;
	if(-500.8){
	90;
	rule(mislead(destroy(mislead(x,( ( -73 - -TABLE[ROWS][Sansa] ) ),rule(rule(-25),Stark) * 0.9),COLS,dog * 670.6)),Hodor - bar(Hodor,Jon,( -bar(-( -( ( --24 + bar(71,COLS) ) ) / Stark ) / Arya,( protect(Sansa) ) * mislead(-( ( Arya ) ) + -910.47,protect(Sansa),1)) ) * -1),rule(0.98) + COLS * ( protect() ))
}
};
	if(destroy(destroy(bar(Stark + mislead(COLS + TABLE[-x][( ( -Hodor ) )],41))),( COLS * 8 / -betray() + ( Stark ) ) * dog - Jon)){
	if(-mislead(--bar(),TABLE[protect(ROWS)][( 1 )])){
	x *= ---( rule() ) - Sansa - COLS;
	Arya *= -79
} else {
	if(51){

} else {
	if(( rule(dog,-Sansa / -23 / TABLE[y][1 * 46]) + destroy(--48 + COLS) ) + Stark){

};
	Arya *= ( ( protect(( -( ( -( TABLE[bar(x,( TABLE[ROWS][dog / Sansa] ),foo(Ygritte / 1,rule(ROWS) + ( destroy(110.1) ) * ---1))][-94] ) * rule(39 - protect(),0.01) ) ) ),-3) ) )
}
};
	if(dog){
	protect();
	if(Sansa){
	Sansa += --Sansa - --0.28
}
} else {
	Sansa += Sansa;
	10.541;
	if(TABLE[COLS][destroy(-TABLE[destroy()][( ( 980.518 ) )]) / rule(-0.87,-Sansa,--0.6)]){

}
};
	dog /= foo(-( ( TABLE[foo()][Stark] ) ),-TABLE[-0.24][-( Sansa )] - ( mislead(ROWS * Ygritte) ))
}
} else {
	if(ROWS){
	if(mislead()){
	if(-29 - -1){
	Sansa
} else {

};
	if(mislead(destroy(( ROWS ),( Stark ),Hodor)) - mislead(Sansa,Ygritte) * bar(0.43)){
	( ROWS );
	x *= -50;
	Jon += ( ( destroy(betray(dog - -0.53,-( Hodor )),-94) ) )
} else {
	Hodor -= ( COLS + dog + -49 )
};
	TABLE[-destroy(ROWS)][Hodor] * -0.16
} else {
	Hodor -= ( ---79 );
	Sansa *= ( 1 )
};
	Arya += COLS - Stark / rule(COLS,( y ) / -97)
};
	destroy(( -TABLE[-17 / COLS][Jon] ),TABLE[( bar(-1) )][( TABLE[ROWS][dog] )])
}
}
}
} else {
	if(destroy(-40.1)){

} else {
	Jon /= -dog
};
	y -= -0.09
};
	-ROWS
}
}
} else {
	if(-15){
	Jon += y;
	betray(foo() / dog,Ygritte,Sansa);
	Stark /= Jon
};
	Arya
}
}
}
var Sansa = ( -0.6 ) + ( 0.34 - -500.3 )
assert foo(( 850.344 ),( COLS ),ROWS) : "Winter is coming"
def TABLE[( -0.28 )][i] {
	Sansa /= Sansa;
	if(ROWS){
	930.8677
};
	Arya -= Ygritte
}
var Jon = 670.898
def TABLE[-( ( destroy(-0.95) ) )][i] {
	if(-Hodor){
	Sansa += TABLE[Jon * -1 / -( protect() ) + ROWS][( foo() )];
	( protect() )
}
}
def betray(y,Hodor,Stark){

}
def betray(Hodor,Arya,x){
	if(ROWS * Arya - Arya){

} else {
	y;
	if(( destroy(( 0.27 )) ) + COLS){
	Arya -= -480.332;
	if(--betray(Hodor / foo(Hodor,-120.78),---670.5)){
	Hodor += COLS
};
	Ygritte /= rule(mislead(( 14 )),-COLS) + ( ( TABLE[-69 + ( -betray(Jon) ) * ( -Ygritte ) + TABLE[-ROWS][-x] / bar(--1)][Arya] ) ) * -( -0.18 )
} else {

}
};
	if(ROWS){
	-( 74 )
} else {
	Arya += y;
	if(42){

};
	dog
};
	if(COLS){
	( 0.08 );
	( 0.22 ) + -betray()
} else {
	if(ROWS){
	if(-( -betray(16 / ( -62 ),ROWS / TABLE[( Arya )][-Sansa]) )){
	if(-350.545){

} else {
	Jon -= protect(TABLE[--320.447 + -71][TABLE[( ( 100 ) - ( -protect(0.34) ) - 84 )][-0.22]],COLS,( Sansa ));
	if(protect(Hodor) - ( Sansa )){
	Stark;
	if(TABLE[TABLE[-ROWS][mislead(( Ygritte ),Hodor)]][-50.511]){
	if(Arya){

};
	Stark
} else {
	x /= Stark * ( protect(destroy(y,( 7 ),-370.78 + betray(-( -( --Jon * ( 1 ) ) ) / 0.71,Sansa,Arya * -( -COLS )))) * COLS - ( --protect() ) * 56 * -COLS / rule(-24,betray(-( ( bar(-bar(COLS,( -bar(mislead(( protect(( 150.33 ) + ( ( ( protect() ) ) )) ),-0.37),-1) + -( x ) * y )),( x )) ) ),foo(Ygritte) * ( COLS )) / ( ( ( 0.42 ) ) ) - Ygritte,35) )
}
} else {
	Hodor -= COLS
}
}
}
};
	if(Jon){
	Ygritte
};
	if(ROWS){

}
}
}
assert 2 / COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(Arya,Stark){
	( -69 )
}
def mislead(Arya){

}
assert ( Ygritte ) : "Fear cuts deeper than swords."
def TABLE[-Jon][i] {

}
def TABLE[( -0.62 )][k] {
	Arya;
	if(-( ROWS )){
	TABLE[dog][foo()]
}
}
def rule(x){
	if(-TABLE[-1][Arya]){
	Sansa;
	Stark /= -0.44
} else {
	if(--TABLE[destroy(--63 - bar(COLS,( y ) / TABLE[COLS][ROWS]) * destroy(bar(protect(Jon),destroy(),Jon),COLS))][-1] * Arya){
	if(Hodor){
	-( x ) + -( -0.47 )
};
	y *= --1
}
};
	( ROWS )
}
def TABLE[betray(ROWS) + COLS][i] {
	Ygritte *= -0.85;
	protect(TABLE[-18][1],ROWS)
}
assert foo(dog) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(){

}
var Ygritte = ( ( ROWS ) )
var x = y
def betray(Hodor){
	if(Stark){

};
	Arya -= -Sansa - dog;
	( ( -0 / Sansa * TABLE[Sansa * bar(Arya,Ygritte,protect())][( -y )] ) )
}
assert 0.48 : "Nothing burns like the cold."
def bar(dog,x,x){
	Sansa
}
def TABLE[29][i] {
	if(-52){

}
}
def betray(Arya,Sansa,Stark){
	Ygritte;
	if(( TABLE[-protect(rule(( ( -46 ) ),( y )),1)][( y / Hodor )] )){
	if(90){
	if(( COLS / Hodor )){
	y /= 4
} else {
	TABLE[-mislead() * 0.82 / -1][( COLS )];
	if(-COLS - ( ROWS / Ygritte )){

}
};
	Stark -= ( Arya )
};
	if(66){
	if(-COLS){
	if(rule()){
	( Sansa );
	COLS
} else {
	-0.84;
	Sansa += Arya;
	-740.36
};
	COLS
} else {
	protect();
	-dog;
	if(51){
	if(Arya){
	betray(TABLE[foo(( Sansa ),ROWS)][ROWS]);
	-( ( TABLE[Ygritte * --( ----470.22 ) - COLS][protect(mislead(-COLS,-1,protect(protect())),--0.96)] ) );
	( ( COLS ) )
} else {
	protect(( -0.17 ),1,Stark);
	if(rule(COLS,Ygritte)){
	if(COLS + ( ( ( bar(( -830.21 ),TABLE[-49][rule()],( bar(x,13 + -TABLE[50.658][--( protect(-0.89,( -rule() )) ) + bar(( TABLE[0.83][20] ),Arya,-TABLE[protect() - betray(Arya,-ROWS)][Arya]) + --( Stark / -340.006 )] + protect(( --TABLE[--1][Jon / ROWS / ( ( dog ) )] ),Jon,bar(-ROWS,( ( Ygritte ) ),Sansa)),bar(COLS,( Stark )) * Ygritte) )) ) ) )){
	dog *= -( y );
	COLS - Sansa
} else {

};
	foo()
};
	destroy(bar(-49,rule(foo(0.12,-ROWS * ( TABLE[77][mislead(Jon)] )) + Stark)),( 1 ))
};
	if(Ygritte){
	Stark;
	Ygritte *= ( ROWS )
}
} else {

}
};
	ROWS / protect(TABLE[-dog - COLS][betray(-foo(-630.649,0.54),--0.92,-70)]);
	if(--0.64){
	if(-ROWS * x){
	if(-mislead(-mislead(-79,( COLS )),COLS,( y ))){
	if(ROWS){
	if(dog){
	if(ROWS * ROWS){
	if(bar()){
	if(betray()){
	Arya *= ( -ROWS )
} else {
	--Sansa - TABLE[dog][---mislead(-COLS - Sansa,mislead(( ( destroy(( -TABLE[betray(y,destroy(rule(Sansa,betray(-0.9,rule(-( Sansa ),Ygritte))),rule()) * Stark,Sansa)][--Jon] / -95 )) ) ),( foo(-51) ))) / -42 + TABLE[ROWS][-foo(COLS,ROWS)]]
};
	Hodor += dog
} else {
	if(( -0.09 )){
	( ( 61 ) );
	if(destroy(betray(),( -y + ( --( Sansa ) * ( Arya ) ) ) + ( Ygritte ),( -1 ) + ( COLS ))){
	Ygritte /= destroy(50,46,( 51 ))
}
};
	COLS;
	dog += -5
}
} else {
	( -COLS / x );
	Ygritte -= ---0.92
};
	Jon /= Arya
} else {
	1;
	770.2;
	0.68
};
	y
} else {
	if(-Ygritte){
	x -= ( -25 );
	( ( dog ) )
} else {
	if(foo(mislead(mislead(-0.19)),COLS,( Jon )) * betray(betray(( --Stark ),--foo(),Jon))){
	if(( ---rule(----( TABLE[ROWS][TABLE[x][ROWS]] ),rule(-1 * ( -0.21 / COLS ))) * Jon - ( ---bar(1 - -TABLE[bar(bar(dog),--69 - -Hodor) * COLS][( ( mislead() ) )]) - Stark + ( ROWS ) * 89 * betray(( foo(bar(COLS,COLS)) )) ) )){
	Sansa /= -0.44;
	---mislead(-( ( Hodor ) * Sansa )) * Sansa / ROWS - ---Sansa * Ygritte
}
};
	y /= Ygritte
};
	Sansa *= bar(190.3,protect(),0.63)
};
	if(--Stark){
	-( 1000.43 );
	if(mislead(-0.55,ROWS,destroy() / ( COLS ))){
	0.65
}
} else {

};
	if(-1){
	Arya /= 270.0065 * dog / mislead(-Stark) * Hodor / betray(bar(-960.2578) - 0.25,-Hodor);
	if(( ( Stark ) / ROWS )){

};
	Hodor *= 18
}
} else {

}
} else {
	Arya += ( ( -TABLE[rule(-betray(TABLE[rule()][dog],betray(-( dog ) + ( -x / protect(TABLE[mislead(0.41)][mislead(mislead(-0.45 / -TABLE[protect(foo(18,betray(-69,-Stark - Arya)),-94)][-53] + 25),bar(-1,Hodor))],--( ( foo(COLS,( foo(Stark,-mislead()) ) - 7 * COLS * TABLE[( COLS * Arya )][destroy(Arya)] + ( protect() )) - ( Hodor ) ) )) )),COLS),-0.71,Jon - -Ygritte * -Jon) + rule()][foo(-TABLE[COLS][( -0.38 )],( ( -50 ) ))] ) );
	if(y){
	if(( Hodor )){
	Arya /= 1
};
	if(y){
	Hodor += ( -protect() );
	0 + ( -78 )
} else {
	Sansa /= Jon
}
} else {
	( bar(protect(( TABLE[Hodor][y] ) - ( TABLE[COLS][( mislead(Ygritte) )] ) / ( ROWS )) + ( protect() ) - ROWS - protect(-( protect(Sansa) ),ROWS) + TABLE[7][( ( TABLE[TABLE[-COLS][0.27]][TABLE[700.86][-30 - COLS / -TABLE[-destroy(-84,-1 / ROWS / ( ( destroy() ) * ROWS ),-( mislead(Hodor,ROWS) * Stark ))][( -( Sansa ) )]]] ) )] + ( -35 * ( foo() ) )) );
	( foo(TABLE[-1 - bar(-dog,-0.74) - x - -450.88][ROWS],( y ) * COLS) )
};
	Arya
};
	COLS;
	Hodor += -830.375
} else {
	if(Jon){
	Sansa /= Sansa * 0.1;
	dog += TABLE[TABLE[ROWS + Sansa][betray(( bar(--Stark + ( 49 )) ))]][COLS]
} else {

}
}
} else {
	if(Ygritte){

};
	Jon *= -( foo(Stark) )
}
};
	Ygritte *= -( -82 )
}
def foo(y,Hodor){
	if(destroy(( rule(-8,bar(Arya),( -0.96 + ---( ( mislead(x,rule(-COLS,( -TABLE[protect(TABLE[-1][-1] - COLS)][-dog] ),-0.57)) ) ) * COLS + ( ( ----47 / ( Ygritte * Arya / -380.3677 ) ) ) - ( ROWS ) - bar(-( 0.94 )) * TABLE[Jon][protect(( -0.74 ),dog,rule(-60,TABLE[Hodor][Hodor] + COLS) - -63)] - -Stark * COLS + -0.31 )) ))){
	Jon -= COLS + Arya / Ygritte;
	if(Ygritte){
	( Stark )
} else {
	if(82){
	y *= ( ROWS ) / Sansa + COLS;
	if(3){
	360.19
};
	Ygritte += ( COLS )
} else {
	y += ROWS;
	x
};
	Ygritte /= ( ROWS ) + -( 1 ) + 30.382
}
};
	Jon -= ( 57 )
}
def bar(Jon){
	if(( ROWS ) + -4){

}
}
def TABLE[Hodor][k] {
	y /= Stark;
	dog -= 8
}
def rule(Sansa,Stark){
	-Hodor * betray(--0.12,( -( rule() ) ));
	if(4){
	Jon;
	41
}
}
def TABLE[mislead(-rule(dog - 15))][i] {
	Sansa *= Sansa;
	if(protect()){

} else {
	-1;
	Arya /= ( bar(Stark / --97 / --( ( protect(-dog,-11,TABLE[( -99 )][rule()]) ) ),COLS,COLS) )
}
}
def TABLE[--0.62 / 44][i] {
	if(-TABLE[ROWS][-1]){
	if(0.99){
	if(mislead()){
	-TABLE[( rule(Sansa + bar(-1,foo(-Hodor),ROWS)) )][mislead(--500.5 * ( ( -( destroy(bar(-0.83,--Stark / -7)) ) ) ))]
} else {
	if(-71){
	if(betray(ROWS,Jon / dog)){
	if(( -( ( y ) ) )){
	dog /= COLS;
	if(COLS){
	if(COLS){
	if(-1){

} else {

}
} else {

};
	betray(( -0.13 ))
}
} else {

};
	foo();
	( COLS ) / betray(COLS)
} else {

};
	if(Sansa){

}
} else {

};
	if(0.17){
	if(COLS){
	if(Stark){

};
	y;
	-620.2257
} else {
	if(--0.8 * 77){

}
}
} else {

}
};
	destroy()
} else {
	ROWS
}
}
}
var dog = destroy(-( -Stark ),Ygritte,dog) + -COLS
def TABLE[( COLS )][i] {
	Hodor *= Jon;
	-bar(betray(),bar(Ygritte,47))
}
def TABLE[-0.99 * destroy(( Jon ),( destroy(-85 - COLS,TABLE[1][-93 / ROWS / mislead(COLS,x,-ROWS)]) )) - foo(-380.1,COLS)][k] {
	if(-protect(destroy(-0.77,( ( 410.38 ) / bar(( COLS ) + TABLE[-betray(Arya,( --foo() )) * ROWS][destroy(-0.13)],Stark,( dog ) * rule(( Jon )) / -rule(protect(bar(--betray(( protect(ROWS,-protect(betray(foo(1),( ( ROWS ) ),Stark))) ))),COLS),-390.192)) )),betray(COLS,-ROWS,bar(bar(),mislead(y)))) + betray(( 0.43 * -0.1 ),foo(rule(( -bar() ),( ( destroy(--foo(( Stark )) + ROWS) ) )),Ygritte) / -0.62) * TABLE[Arya][rule()] + ( protect(-1,-0.59) ) * -0.39){

} else {

}
}
def betray(y,Stark){
	( -x );
	Sansa /= Arya - rule(protect(-0.12,y,( ( dog ) )),betray(TABLE[Hodor][-0.42] + ROWS))
}
def protect(Arya,Ygritte,Jon){
	Sansa -= ( ( -COLS - ( mislead(0.83) ) ) );
	y /= -( --Stark * ( COLS ) - protect(--rule(TABLE[COLS][-foo(rule(-80),1 / ROWS)])) - -TABLE[-62][ROWS + -ROWS] - rule() * Jon )
}
def TABLE[( ---ROWS )][i] {
	-Jon
}
def TABLE[y][j] {
	if(COLS){
	if(( -71 )){
	Ygritte += destroy(TABLE[bar(-810.63,dog)][( TABLE[--TABLE[Stark + -Ygritte - y][( 0.67 )]][( ROWS )] )]);
	if(( -1 )){
	x /= -betray(( ROWS ),-1 * COLS * COLS / dog,COLS)
}
} else {

};
	y += bar(dog,--foo());
	Hodor -= ( Hodor )
};
	72;
	dog *= ( ( ROWS ) )
}
var Stark = 13
assert protect(-0.65,protect(protect(( Sansa ),-1,--destroy(TABLE[ROWS][TABLE[Ygritte][0.52]] / Jon,880.7543,0.97)))) : "Fear cuts deeper than swords."
def foo(Arya){
	if(--Jon){
	Arya -= ( foo(0.47) - y * ( ( -ROWS + 0.75 ) ) ) / Ygritte / ROWS - --( mislead(Hodor) )
} else {
	Jon += --mislead() * -( COLS ) * bar(0.68) / ( ( TABLE[mislead()][-bar(( -300.78 ))] ) / 1 ) + protect(mislead(Jon));
	if(mislead(foo(---82,35))){
	if(destroy(mislead(Hodor,destroy(( Jon ),Ygritte,( -( -Hodor - ROWS ) / ROWS )),-91),-TABLE[Stark][bar(-0.26,( TABLE[-( --Ygritte )][( ( foo(rule(COLS),----( ROWS )) - ---( ( COLS ) * 35 ) * bar(Jon) ) )] ) / ( --1 + 1 - -Sansa ))],destroy(dog,-ROWS,--dog) + Hodor)){
	28
} else {
	( -0.02 );
	if(-0.33){
	Jon *= -610.12 * -1;
	( foo(-0.6,( ( -Sansa ) )) );
	x /= ROWS
};
	if(bar(Stark,-0.58)){

} else {
	TABLE[Jon][TABLE[-foo(-Sansa - 76 / -1,mislead(-Arya,-20 / -680.412 / 300.072))][-0.12]]
}
}
};
	if(-290.0155){

}
};
	y /= ( -foo(( ( ( 0.69 ) ) / bar(TABLE[-58][-1] - 97,--( ROWS ) / ROWS,-mislead(x - Hodor,Sansa)) ) + Stark,y,dog) )
}
def TABLE[-98][j] {
	-( foo(1) );
	dog /= destroy(Jon,x)
}
def rule(x,Arya){
	if(TABLE[( -81 )][Sansa]){
	dog += -ROWS;
	if(betray(( COLS ),mislead()) - ( ( foo(dog) ) )){
	y += -Sansa
}
} else {
	x += -0.2 * ( TABLE[TABLE[mislead(-310.62)][( -0.85 )] / ( -0.92 ) - ROWS][Jon] );
	if(y){
	Arya -= -0.1;
	Sansa *= -rule(destroy(( -Hodor ),y,betray(-rule(( ( 330.8142 ) ) + -3) + 780.1,TABLE[x * -( 0.01 )][Stark]) - mislead(Arya + Ygritte,protect(TABLE[Hodor][TABLE[Stark][ROWS]],foo(-bar(foo(( ROWS + ( 0.31 ) ),( -1 )) - TABLE[-0.87][foo(COLS / -mislead(-0.02,( --0.18 - COLS ) + bar(( --betray(dog / COLS + ( COLS ) / ROWS + --0.09,-Ygritte) ),rule(COLS,Ygritte),rule(( -Jon / -210.7 ))),dog),foo(-0.11,( destroy(foo(mislead()),( protect(Ygritte,-Jon * bar(( Arya ),( ROWS ))) )) ),destroy(betray(y),-betray(---0.16 * Sansa) / Hodor * Arya) / ( Sansa / COLS )),COLS)]),-x),( foo(TABLE[-1][--( Ygritte * ROWS / -COLS )] - TABLE[( mislead(( COLS )) )][COLS],--66) / 0.48 )))));
	ROWS
}
}
}
def destroy(Hodor,dog){

}
assert 0.56 : "Fear cuts deeper than swords."
assert foo(-Arya / -0.99,-COLS) : "What do we say to the Lord of Death?"
assert ( foo(-0.53 * TABLE[x][-COLS - ( TABLE[TABLE[-0.63][TABLE[-ROWS][betray()]] + ( -( --0.42 / -COLS ) * -( Jon ) / ( ( -( COLS / -0.32 * -74 * Ygritte ) * COLS ) - ROWS ) )][TABLE[--Ygritte][ROWS] + 0.68] )] + TABLE[-Jon + -0.74][TABLE[-910.7286][( -rule(Hodor - Stark / --( destroy(1) ) / COLS) )]] + COLS,-( -ROWS ),0.33) ) : "One can not simply parse himself"
def protect(Sansa,Arya){
	Jon /= foo(ROWS);
	0.63
}
var dog = ( bar(81 * TABLE[--betray() - TABLE[( -( bar(dog) ) * ( destroy(rule(TABLE[rule(--85,rule(( -( -25 ) ),-x))][--20],y)) / betray() ) - 470.83 )][TABLE[( -COLS )][ROWS]]][ROWS],TABLE[Stark][ROWS]) ) / ( -57 + foo(-mislead(rule(-ROWS,bar(0.7,-0.42)) / Jon,ROWS),Stark) )
def bar(dog,Stark){

}
def mislead(y){
	Hodor /= TABLE[--0.26 - ( rule(( -Arya )) )][0.76 + TABLE[-x][TABLE[-290.75][-54] / ROWS]]
}
assert COLS : "Fear cuts deeper than swords."
var Sansa = ---COLS
var y = Sansa
var x = ( TABLE[mislead()][ROWS] )
assert -( ( mislead(Arya) ) ) : "Nothing burns like the cold."
assert rule() : "Fear cuts deeper than swords."
var Jon = COLS
def TABLE[Ygritte][i] {
	-TABLE[( betray(x) )][( ( -900.9 + 0.13 ) )]
}
def TABLE[87][i] {
	TABLE[protect(( --55 * ( -38 ) * ( COLS ) ),( 390.3387 ))][rule()];
	Hodor += protect()
}
def TABLE[bar(x)][k] {
	if(-62){

}
}
def rule(dog,x,Ygritte){
	if(mislead(--COLS,Hodor)){
	COLS
} else {
	if(-0.54 * 0.16){
	Arya -= destroy()
};
	x *= dog + -57;
	Hodor /= -0.75 + -340.22 + 10
}
}
def bar(dog,Jon){

}
def foo(Ygritte,dog,y){

}
def bar(Arya,dog){
	( y )
}
assert TABLE[0.77][TABLE[0.43][-betray(protect(TABLE[Stark][90],Arya) / Jon,-betray(-protect(COLS))) / -0.1]] : "Fear cuts deeper than swords."
def foo(Jon,x){
	if(Arya){
	y -= betray(ROWS) / foo(Jon + foo(COLS / COLS + bar(protect(ROWS - -96,0.75)),0.08,( 0.39 )),-0.61,-rule()) * -( betray(y + Hodor,( Sansa ),3 + destroy()) )
};
	ROWS;
	x += y
}
assert 280.68 : "What do we say to the Lord of Death?"
var dog = betray(-foo() + -( ( Hodor ) ) + x)
def betray(Sansa){
	if(protect(1,-ROWS)){
	if(-TABLE[5 - dog][Jon]){
	TABLE[( ( TABLE[-0.27][foo(Jon,COLS)] ) )][betray(( TABLE[Hodor][( foo() )] * ROWS - -dog - ( destroy() ) * -( Stark - protect(y - bar(--mislead(0.12,430.3,94) / foo(bar(dog),Ygritte,TABLE[TABLE[dog * ( rule(( 0.1 / foo(-( -ROWS )) * -x / 0.13 ),-( -690.17 + -1 ),destroy(69,dog)) )][( betray() )]][( ( y ) * TABLE[TABLE[COLS][1 / -0.79 * ( -Arya ) + ( foo(--( -1 ) / bar(--23 / ( ( destroy(rule(-0.07,destroy(( COLS ) * TABLE[COLS][dog * TABLE[-Jon / Jon - ( -TABLE[destroy(-x * mislead(-COLS,75,Ygritte) + --0.84,( y ),80)][ROWS] )][0.75]] / -0.15,ROWS),ROWS + -( Hodor ) / -bar(( -protect(-18) ),-x,( 0.25 )) + ( COLS ) / betray())) ) * destroy(x,-0.28) ),95)) ) + ROWS]][-( x )] )]),-COLS)) - y ) ))];
	foo(( Arya ),ROWS);
	Ygritte *= -0.05
}
} else {
	ROWS
};
	x *= ROWS;
	if(COLS){

}
}
def TABLE[0.25][i] {
	if(-1 / bar(69) + COLS){

};
	-180.97 / ROWS + ROWS + betray(COLS - 100.5317)
}
assert COLS : "Nothing burns like the cold."
var Sansa = COLS
assert ROWS : "Fear cuts deeper than swords."
assert Stark + rule(( betray(( foo(TABLE[-0.78][( foo(( mislead(mislead(TABLE[-0.67][( -( -Jon ) )]),( Sansa ),TABLE[--81 * ( COLS )][Hodor]) - -y - rule(mislead(protect(COLS),COLS)) ),-TABLE[rule(ROWS - -86 / ( -( -( ( -48 ) ) ) )) - protect(Sansa) - -Stark][( ( Ygritte ) )]) ) - -( TABLE[( COLS )][-0.93 - destroy(( x ),--67 + protect(),Arya)] ) * ( 0.49 )],mislead(Jon,x),-( Arya / -Hodor )) )) ),mislead(),TABLE[bar(( -TABLE[mislead(-ROWS,y,COLS / -540.58) / ( ( Sansa - protect() ) )][foo(mislead())] ) / -5 + COLS,0.18)][---0.71]) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-1][j] {
	Arya *= ( --ROWS - -270.509 * ( -59 ) + --91 )
}
assert rule(-0.01,( COLS )) : "One can not simply parse himself"
def TABLE[rule(--TABLE[11][TABLE[--Jon][--betray(-35,( -1 ),bar(mislead(protect(-0.66 / Ygritte),1),foo()))]] + 0.62)][i] {
	if(--Hodor * -COLS){
	protect(52 + ( -betray(foo(( ( Jon / -( TABLE[betray(COLS,0.4 - mislead(0.27,TABLE[destroy(--67 + ( --42 / bar(0.12,destroy(-25,( ( COLS ) ) - Sansa,19)) ))][destroy(( Jon ),-destroy(--42,destroy(TABLE[bar(betray(-protect(),-88,betray(( COLS ),COLS,3)) - Hodor) + ROWS / -1][( Ygritte ) / mislead(TABLE[mislead(betray(TABLE[COLS][( rule(-( ROWS ) + destroy(TABLE[TABLE[( ROWS )][COLS]][-( foo(-1 - Sansa) )],--0.08,1),( protect(destroy(-1,foo(x,foo(( ( mislead(( ( 0.4 ) ),( y ) / TABLE[betray(-55)][-COLS]) ) ),( Arya ),( -1 )),( 0.6 ) * --( 75 ))),COLS) )) )] / COLS,betray(bar(-59 * rule(TABLE[-COLS][COLS],-92) / TABLE[y][protect(destroy(20,( ( betray(foo(ROWS),ROWS,rule(-rule(( 97 )) / ( TABLE[-67][( Jon ) / foo(--75,( mislead() )) - -betray(-( bar(Arya) ))] ) * ( -1 ),Hodor)) ) )))],-540.5,-TABLE[-18 / Sansa / -( -betray(Jon,COLS / Hodor) )][foo()]),mislead(x + ( TABLE[y][ROWS] + --COLS ) + ( ( protect(-Jon,( Hodor ),-34) ) ),-0.82,y)))) * Jon][-40],( ( mislead() ) ) - Stark)]))) - bar(1)] + ( ROWS ) * 0.39,0.47),protect(-590.55) - ROWS * --480.96) * y][bar(Hodor,COLS)] ) ) ),( ( ( 0.55 ) ) ),TABLE[x][protect(ROWS + TABLE[ROWS][--0.51])]),( -COLS ),-bar(bar(420.144,TABLE[x][-protect(-rule(0.98))] + -55),0.56) + Ygritte) / betray(Ygritte,85) ),--0.38);
	Arya
};
	if(( ( -61 ) )){
	if(-bar(rule(ROWS,Sansa - Stark),ROWS) / --66 / ROWS){

}
};
	Stark
}
def TABLE[--TABLE[foo(--ROWS)][-0.62] * Sansa][j] {

}
assert ( 61 - ROWS * COLS * mislead(( ROWS )) ) : "Winter is coming"
def foo(x){
	( ( betray(Sansa) ) + ( y ) / ( COLS ) + TABLE[TABLE[--89][( -99 ) * -( Sansa )]][protect(COLS,-340.1769)] )
}
def TABLE[ROWS][i] {
	if(( 0.65 )){
	rule(( TABLE[Hodor][Arya] ))
} else {
	71
};
	Ygritte
}
var x = TABLE[-bar(bar(foo(Arya,-protect(x),( bar(( COLS )) ) * y - rule(-TABLE[protect(TABLE[-190.777][mislead(foo(--90 - -y),( rule(-rule(Stark * ---1,-TABLE[( protect(bar(COLS,Ygritte),( foo() )) ) + y][ROWS]) + -0.49) ),( ( --foo(mislead(TABLE[-260.4][-0.49],Ygritte),TABLE[-TABLE[-1][TABLE[--( -( ( Sansa ) ) - TABLE[0.24][destroy(TABLE[ROWS][y * x + ROWS])] )][( TABLE[Sansa][-0.75] )]]][( ---ROWS - destroy() )]) ) ) - ( -58 ) + ROWS + TABLE[Ygritte][1 + ROWS])] - bar(-( y ) - rule()),TABLE[( ( mislead(bar(TABLE[( Hodor / protect() )][y],foo(mislead(---Sansa - ( Arya ),Ygritte)) / -foo(betray(),-( -43 * COLS + mislead(-TABLE[rule()][( Hodor )] * -( Ygritte ),-foo(TABLE[Ygritte - Stark][ROWS] + foo(Ygritte,( betray(-COLS * -0.73) )),Jon)) )),mislead(190.4263))) ) )][( rule(COLS,TABLE[( 1 )][bar(betray(betray(-ROWS,0.41)),ROWS)],Sansa) )])][protect()],ROWS - 49) + Ygritte - TABLE[-COLS][--protect(-COLS,y)] - ( Arya ) + -91)),( TABLE[Jon][y] ),mislead(protect(--( ( mislead() ) ) * ( ( ( foo(-rule(betray(62,COLS)) - ( ROWS ) - destroy(betray(( COLS )),destroy()) - -( y - rule() )) ) ) ),ROWS)))][ROWS]
assert betray(y,Arya,ROWS) : "Fear cuts deeper than swords."
def TABLE[bar(x)][k] {

}
assert x : "Nothing burns like the cold."
assert Ygritte : "Winter is coming"
def protect(Stark){
	90;
	Stark -= -980.263
}
def betray(Stark,y,Hodor){
	TABLE[--rule(ROWS)][--70]
}
def TABLE[( --Jon )][j] {
	x *= --( -0.89 ) / ROWS;
	dog /= -y
}
def TABLE[bar()][j] {
	Hodor;
	dog -= -0.99
}
def foo(Arya,dog){
	if(73){
	46
};
	if(x){
	( -bar() )
} else {
	dog -= 80.5;
	if(( foo(--rule(dog * -24),--0.38) )){
	-910.5 + -y - TABLE[1][Hodor]
};
	if(( rule(Ygritte,protect(0.26,TABLE[ROWS][-0.26 + rule(ROWS)])) )){
	ROWS * x + -1
} else {

}
}
}
var Arya = COLS
def TABLE[ROWS][k] {

}
def TABLE[( mislead(ROWS) )][i] {
	mislead(dog,foo(--0.02,ROWS,ROWS));
	dog -= 66;
	if(x){

} else {

}
}
var Hodor = 840.75
def bar(x,dog){
	if(80.908 / -betray(dog)){
	Sansa += -0.75 + Jon
} else {
	if(( -destroy() )){
	if(0.75 * protect(( COLS ) + ROWS + Sansa * foo(x,protect(x)),Sansa,1 * bar(-( 5 )) * -Arya * Hodor)){
	if(Sansa){
	if(Sansa){
	-1
}
} else {
	if(COLS){
	if(-0.88 - -x * destroy(Jon)){
	0.71
};
	Jon
} else {
	Hodor
};
	if(betray(( 51 ) + TABLE[-TABLE[ROWS][-Ygritte]][COLS])){
	if(1){
	if(-ROWS + ( -ROWS )){
	if(ROWS){
	Arya /= --0.47 / ( -Jon ) * 76;
	dog *= ( dog )
};
	Jon
} else {
	dog /= ( ( ROWS ) );
	dog -= 0.31;
	if(( Hodor )){
	foo(-foo(Hodor,bar(26),( 44 )),rule(bar(Ygritte),-Stark));
	( ROWS - -protect(Jon) * -bar(bar(Sansa,( Jon ),57)) )
}
};
	if(-86){
	if(foo(COLS)){
	if(destroy(900.784,-TABLE[destroy(Jon,1) * ( -ROWS )][( ( protect() ) / ( ROWS ) + ( ( -Stark ) / -0.14 ) / betray(protect()) )] * -1,-52) * foo(Arya)){

} else {
	if(Sansa){

} else {
	destroy(( Hodor + ( TABLE[-betray(foo(0.37) + ROWS)][( -18 )] ) + -0.61 ));
	Arya -= 32
};
	if(COLS){
	if(x){
	if(-0.05){

} else {
	0.45
}
}
} else {
	Arya -= ROWS;
	ROWS * -dog;
	Arya -= ( -( -590.09 ) * TABLE[COLS - dog][( Hodor )] )
}
};
	if(COLS){
	Jon *= TABLE[Sansa][( Jon )];
	if(destroy(( 0.56 ) - mislead(( ( -75 / ROWS - y ) ),-( TABLE[protect(TABLE[ROWS / Stark / --dog - -( y ) / COLS][( TABLE[bar(91 * mislead(ROWS) * ( COLS ) + TABLE[TABLE[( COLS - COLS )][mislead(foo(),ROWS)]][ROWS - -destroy(( --Ygritte ),destroy(( destroy(y,-1) ),--ROWS - ROWS - ---( ROWS ) / Stark))] + 0.37 / TABLE[-mislead(betray(( Jon ),ROWS)) / -rule(20,( y ),betray(Jon,( destroy(-Jon) ),-0.4)) / ROWS][Sansa] / betray(Hodor),-28,( -460.49 - ( ROWS ) - -10 - ( -( foo(( -0.51 ),rule(y)) ) ) / foo() / -TABLE[--Ygritte][( destroy(--( 630.1 ),foo(( -97 ),-( ( COLS ) ),TABLE[bar(-610.49,( TABLE[( -1 )][( 80 )] ))][( betray(y) )] * Arya),Arya - ---0.03 / 0.64 * foo(-( COLS )) / -betray(-32,protect(),-x) - protect(COLS,( ROWS - -91 ))) )] ))][48] / Jon + ( Stark ) / betray(-ROWS + -Stark + -( betray(-TABLE[-( y )][protect(TABLE[( 830.922 )][ROWS],Jon - 0.26)] + TABLE[foo()][( COLS - ( ( 0.3 ) ) )],----protect(x,-( --TABLE[71 + destroy(TABLE[COLS][COLS - ( -( TABLE[mislead(protect(COLS))][foo(-Ygritte,71)] ) )] + ( TABLE[-( foo(-( Jon ),ROWS) )][protect()] ))][dog] - ( TABLE[ROWS][-Hodor] ) )),( Arya )) - -1 - betray(-600.46,-0.37) )) )],---COLS) - Jon][betray(( Sansa ) * betray(( foo(( ROWS ) / Ygritte,0.57) ),( TABLE[( COLS )][TABLE[1][TABLE[1][420.158]]] )) * COLS,-protect(COLS))] ) * ROWS + bar(bar(TABLE[--( destroy(Arya,ROWS,-ROWS) )][-COLS],x,Jon)),( COLS + 1 )),-y + ( betray(ROWS * -16) ))){
	Arya += 0.88
} else {
	82
};
	if(1){
	-46 / 0.76;
	if(-0.66){
	Ygritte -= betray(-TABLE[400.14][mislead(mislead(foo(protect(protect(-450.031,Ygritte),foo(-82)) - -14),-0.27))] - -66 + ( ( 1 ) ),-Sansa,( ( bar(-0.71) ) ));
	if(COLS){
	if(COLS){
	Sansa += -41
} else {
	Ygritte -= ( Stark / y + -380.8411 )
}
} else {
	-89
}
}
} else {
	if(-340.3 + Hodor){

} else {
	y /= Hodor * ( betray(foo(destroy(COLS,bar(COLS)),0.18)) * Arya + -14 );
	if(bar(bar(--Jon / destroy(83) * ROWS,Arya,( bar(78,betray(),bar(mislead(y,y / TABLE[-1 * Arya - ( -ROWS )][Ygritte]))) )),1 * -0.08)){
	betray(-0.93,COLS - Ygritte,Stark);
	dog /= ( -COLS / -43 / -dog );
	if(-86 * 1 + Stark * --1){
	1
}
}
}
}
} else {
	Sansa;
	Ygritte *= -1
}
};
	-340.5 + -20;
	if(-300.413){
	if(( protect(COLS + COLS * ROWS + ROWS - -37 - ROWS,( x ) / 82,betray(rule(( mislead(foo(COLS,ROWS,-18),x) / 8 ),bar(y,-92,betray(Sansa,( Sansa )))),foo(-betray(),( Stark )),TABLE[( -0.29 )][-COLS]) - ROWS) )){

};
	Arya;
	Stark -= betray(protect(bar(0.97)),310.072) / -ROWS
} else {

}
} else {
	y += ROWS + protect(mislead(0.27,--0.35,Hodor),TABLE[rule(TABLE[( TABLE[--TABLE[Hodor][x]][destroy(-0.86,mislead(-TABLE[97 + TABLE[( COLS )][( mislead(TABLE[y][0.37],mislead(TABLE[x - ( ( -dog ) )][( ROWS )],destroy(bar() * dog,-0.97))) )]][Jon],destroy(--83)))] ) * COLS][ROWS / 451],( ( ( foo(( TABLE[Arya][-foo(protect()) * protect() + ( COLS ) * -x * TABLE[ROWS][1] + rule(-0.31) * -y * ( bar() )] ),dog) ) ) )) * x][betray()] - ( ROWS ),COLS);
	if(-protect(y)){
	dog -= COLS;
	if(-x / mislead(-40,Stark)){
	if(Ygritte){
	dog - Jon;
	dog -= rule(Stark,( destroy(COLS,Stark,-0.06 - -0.38 - COLS) ),dog);
	rule()
};
	0.36
};
	if(( rule(--COLS,-1,0.83) )){
	COLS
} else {
	Stark += TABLE[Hodor][-protect(Ygritte,TABLE[-( Arya )][( -0.68 )]) + TABLE[22 - --Ygritte][-( Arya )] / y];
	-Sansa / --Jon * -1
}
} else {
	if(bar()){
	Sansa *= ( bar(( foo(( -( -1 ) ),-0.62 - COLS) / ( -destroy(( ROWS * betray(protect(( betray(-1) ))) ),( 480.641 )) ) ),Ygritte,-bar(x,bar(x,-( -0.74 )))) );
	if(--7){
	y -= -94;
	Sansa
} else {
	0.93
};
	-( protect(1) )
};
	if(73){
	Ygritte /= ROWS
} else {
	if(36 + -ROWS){
	Jon -= Stark
} else {
	Sansa *= ( destroy(TABLE[1][( ( Jon - -46 ) )],COLS) )
}
};
	rule(-destroy(( ( 0.15 ) ),Hodor,( mislead(-79,( ( ( ( ( -mislead(( TABLE[foo(ROWS,bar(ROWS,56))][-1 / destroy()] - 880.006 ),0.95,21) * 280.649 ) / TABLE[TABLE[-mislead()][( 0.79 )] * dog - TABLE[Jon][Stark * x]][-270.6749] ) ) ) )) )) / destroy(-510.31,COLS) / protect(COLS - foo(bar(dog,rule(-( y ),destroy(-ROWS,-betray(destroy(rule(-( ROWS ) - 900.256,Jon - -destroy()),( x )),-0.51) * Ygritte * -99 - TABLE[-rule(-ROWS * ( Hodor ),( COLS ) * 11)][-1] - Sansa))),-foo(-( 0.81 ))),( -dog ) - ( COLS ),--Hodor / -( 940.39 ) * ( -dog )))
};
	-10 * COLS - ( destroy(Hodor + ROWS) ) / Jon
}
};
	if(-mislead()){
	-betray(( 0.05 ),betray(( ( Arya ) )) / -Ygritte) + rule(protect(rule(dog,-Stark * Hodor) * foo()),-( y ));
	( -x - -( protect(( destroy(60) )) ) / Ygritte )
};
	if(43){
	( ---mislead(Arya,ROWS) );
	if(bar(( rule(Sansa,( ---3 * --mislead(-0.44,betray(( ROWS / TABLE[( --1 )][COLS] ),-1),destroy(betray(TABLE[rule()][TABLE[-( ( betray(Ygritte,( Sansa ),( -0.89 )) ) )][Ygritte]]) / -1) / y * ( ROWS )) - mislead(( y ),ROWS) )) ),ROWS,destroy(Hodor,0.56,( Stark )))){
	Ygritte += Arya;
	if(1){
	if(-41){
	Ygritte /= TABLE[TABLE[rule(TABLE[-1][betray()],bar(-0.76),( Jon ))][( COLS )]][( y )];
	if(( COLS )){
	if(1){

};
	if(x){
	Stark /= COLS
}
};
	Stark *= Jon / x
};
	if(( ROWS )){
	if(( --( -TABLE[mislead(-dog / ( rule(( -TABLE[TABLE[-34][Jon]][protect(mislead(-y))] ),Ygritte) - 0.19 ))][-foo(-protect(( TABLE[rule(--( -0.94 - COLS ) * ( 1 ),Hodor)][1] )),TABLE[mislead(TABLE[-( destroy() ) - -Hodor - ( protect(--Hodor) )][foo()])][destroy(( betray() ))]) * ROWS * 0.84] ) )){
	if(ROWS){

};
	if(-TABLE[-bar(-0.67 - 0,-( ( -86 + TABLE[-rule(0.73,-0.18)][-72] ) ) - rule(foo(),rule(),-destroy() - mislead(( -destroy(COLS) ),-0.04) / TABLE[COLS][( ROWS )]),Stark + Hodor)][dog]){

}
} else {
	-TABLE[COLS][destroy(( -84 ),ROWS)];
	bar(( 1 ),450.161,x)
}
} else {
	x -= -Jon;
	Jon -= -0.75
};
	if(( betray(-TABLE[foo(46,-0.85 * ( -( ( Sansa ) ) ),foo())][Jon]) + ROWS * COLS * mislead(Arya) - Ygritte )){
	Sansa -= 18;
	x += TABLE[( -ROWS * ( TABLE[-( Jon )][( -destroy(COLS / ( ( -Hodor + -0.53 ) ),-( -11 ),TABLE[-ROWS][--0.23]) )] ) )][( ( 0.27 ) )]
} else {
	x *= foo(protect(),61);
	if(( 0.17 )){

} else {
	dog -= destroy(Arya,COLS);
	x -= -830.17;
	Stark += -1
}
}
};
	Sansa
} else {
	if(-12){
	dog /= Jon;
	protect(( bar(dog,( betray(( -120.83 ) + -bar(-x / TABLE[TABLE[--COLS + 22 + -mislead(betray(bar(TABLE[bar(-( ( betray(TABLE[destroy(betray(-Stark,-Stark,-1 - -TABLE[mislead(---0.59,( -26 ),( dog ))][( Sansa )]) / ( -( ROWS ) ),Sansa,-Sansa)][ROWS],x) ) * TABLE[1][TABLE[( y )][TABLE[betray(mislead(y,( TABLE[-0.97][0.7] ))) * -920.4322][Arya]]] - ( 1 ) ),Stark)][ROWS - betray(TABLE[-39][mislead(-410.36)])],ROWS,ROWS)),x) + --0.82][( Stark )]][( -0.9 )]) / -0.61 / ( -0.93 + betray(1,COLS) )) ),mislead(--protect(ROWS))) - betray(0.03,COLS) + ( ( -1 ) ) - rule(970.23) * -20.16 ))
} else {
	Arya *= ---0.27
}
}
} else {
	dog += -Ygritte;
	y -= ( -3 - -0.97 ) * ( COLS )
}
};
	if(foo() * -86){

} else {

}
};
	bar(( -1 ));
	if(-COLS){

} else {
	Arya += foo(-( x ) + -TABLE[Ygritte][TABLE[70][( -TABLE[-mislead(-( --0.22 ))][-0.69] ) / TABLE[-destroy(18)][COLS]]],COLS,-TABLE[0.33][0.84]);
	Ygritte /= 0.67;
	if(1){
	if(COLS){
	if(COLS){
	ROWS
} else {
	if(-ROWS){
	( -Stark )
} else {
	if(ROWS){
	if(betray(-56)){
	if(dog){
	if(( COLS ) * bar(foo(-0.54,0.81) / ( COLS ) + Stark,-29)){
	( Jon );
	Sansa -= rule(destroy(( COLS ) / Hodor))
} else {
	-1
};
	if(COLS){
	x /= --66
} else {
	if(foo()){
	Arya /= TABLE[foo(TABLE[0.32 - -destroy(( -1 / dog )) - rule(-dog,-( -( TABLE[mislead()][TABLE[-rule() - 560.146][ROWS] * --protect(ROWS,0.24 / destroy(Ygritte),( Sansa )) + -0.15] ) ) * -0.85)][0.6] + x,Sansa,COLS)][( betray(COLS) )];
	Sansa += mislead(Ygritte)
} else {
	Arya *= 73
};
	dog /= Sansa;
	-protect(89)
};
	betray(43 - Stark,--40.5747)
} else {
	if(-0.69){
	-( 91 );
	if(mislead(TABLE[COLS][( x )] * TABLE[ROWS][-1])){
	if(( -Stark / foo(( ( --TABLE[protect(Ygritte)][dog] ) - -750.077 - ( -COLS ) - COLS + -COLS )) )){

}
}
} else {
	Jon
};
	Stark /= ( rule(TABLE[0.79][mislead(-75,COLS)],destroy(-1,rule())) );
	if(mislead()){
	if(betray()){
	x /= Jon;
	if(( ( -ROWS / dog / Jon ) )){
	if(betray(960.428 * TABLE[0.35][x] * ROWS,x)){
	if(-dog + ( 100.273 ) + -1){

} else {
	Hodor * TABLE[63][91 + TABLE[Ygritte][Hodor]] - 42
};
	( dog )
}
}
}
} else {
	Hodor -= foo(Hodor,-ROWS) - ( TABLE[( COLS )][ROWS - ( 0.15 ) * -( ( Jon ) ) * -0.84] )
}
};
	rule(1 * 0)
}
} else {
	if(-( ( --TABLE[TABLE[-0.22][-0.54]][protect(( ( ( COLS ) ) ))] ) )){

}
};
	COLS;
	Stark /= -0.55
};
	protect(Jon - foo(),( TABLE[( -Jon - 1 )][ROWS + Jon] )) * Ygritte;
	if(mislead(Sansa,-680.053 - protect(0.35,protect(destroy(-Jon,COLS),dog - -( ( -55 ) / --1 ) / x,-0.65 - x) * COLS),-COLS * Sansa) / COLS - ( ( x ) - dog / ( 69 ) * --ROWS )){

} else {

}
}
} else {

}
} else {
	Sansa += bar(0.88 + -( Arya / ( -bar(-30.6 * --0.21 * ( ( 1 ) )) / -rule() ) ) / ROWS);
	if(ROWS - foo(protect(( ( ( Stark ) ) ),-ROWS,-COLS / ROWS + -30 * dog) / betray())){

} else {
	dog -= COLS
};
	if(bar(( -( ( -Jon ) * -Ygritte ) + -( 0.45 ) / TABLE[TABLE[-COLS][--0.94 - dog]][TABLE[betray(( rule(-protect()) / betray(--COLS) ),-250.961) * Jon][-destroy(ROWS) - TABLE[-( protect() / -foo() + ( foo() ) )][( TABLE[( protect(COLS + -x / mislead(-6,TABLE[( ( COLS ) * ( y ) )][dog]),( -ROWS * --Ygritte - COLS )) ) / ( rule(( ROWS ) + -19,Jon) )][--Arya * x] )]]] / destroy(-( COLS ) * Arya,Jon * Arya - COLS) ),Ygritte)){
	dog;
	Arya *= rule(destroy(mislead(),---TABLE[bar(( Arya ))][protect()],dog),-Jon);
	TABLE[dog][COLS]
}
}
}
} else {

};
	COLS
} else {
	if(foo(mislead(-38,destroy(),-1 - -Jon))){
	74
} else {
	if(1){
	if(--TABLE[-Stark][rule(1,-1)]){
	Jon;
	x /= -( -1 );
	Arya
} else {
	if(mislead(destroy(COLS,( ROWS )))){
	-dog * --betray(-destroy(betray(Jon,-1),--ROWS,destroy(COLS,( rule(( 0.03 ),-COLS * -x * mislead(-( ( ( COLS ) ) ),-( ( -Jon ) ),ROWS),COLS) )))) - -( bar(protect(1,-0.58,( TABLE[( --( bar(TABLE[( protect(---( -0.09 ) - bar(--dog / mislead(TABLE[-protect(0.93)][Arya]),-8,--Ygritte * ( mislead() ) * -Jon - ( ROWS ) / --88 / ( Sansa )) * Hodor) * -dog )][Stark],---Jon * --90.64 - Stark,( 0.15 * -( destroy(( ( ( ( ( dog ) ) ) ) ),bar(-ROWS,Hodor,--9)) ) )) - bar(--TABLE[-1][-dog - -0.38 / ( -0.23 )],dog - -0.88) + ( mislead() ) + -x + TABLE[COLS][-protect(Stark)] + -1 ) )][rule(COLS)] )) + -30 * -13 - -( y * COLS ),TABLE[destroy(( ( ( -45 ) ) )) + Ygritte][( foo(Hodor) - -rule(rule(),COLS,foo(Ygritte,TABLE[( ( ROWS ) )][mislead(foo())]) * --52) + -0.9 ) + COLS] * destroy() + 260.42) );
	Hodor /= bar(-52) - -y
} else {
	Arya -= COLS;
	y -= -0.74
}
}
}
};
	-( protect(Stark) ) * -0.52
};
	Sansa += ( ( x ) + y )
}
}
def TABLE[protect(ROWS * protect(( TABLE[--ROWS][-0.24] ),( --( -0.16 ) ) + -protect(ROWS) / ( -ROWS + -1 ),-0.37)) + betray()][i] {
	COLS
}
assert ( TABLE[-destroy(-dog) + --bar(570.65,bar(rule(-850.34 / ( ( 1 ) )),ROWS)) + foo(COLS)][-23 + Sansa] ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-COLS + ( TABLE[-750.278][( foo(-ROWS) )] )][i] {
	TABLE[dog][protect(-( -1 - -44 + ( Arya ) / ( 350.9 ) )) / 0.15];
	if(Jon){
	dog - 640 * mislead(-650.39);
	destroy(( ( --1 - ROWS * protect() - protect(x) ) ));
	if(20.8814){
	if(ROWS){
	-650.54
} else {
	Ygritte /= -COLS
};
	Jon
} else {
	mislead(--840.85,ROWS,ROWS) * 40
}
} else {
	x *= -( ( Hodor ) )
}
}
def TABLE[( -foo(-mislead(mislead(Stark))) )][k] {
	1
}
def TABLE[protect(--0.81,-91)][i] {

}
def protect(x,Hodor,Arya){
	ROWS;
	0.68
}
assert destroy(TABLE[Stark][( ( foo() ) )]) / -TABLE[COLS][protect(52 * rule(-0.06 - rule(-0.03) * 41 * -foo(0.01,destroy()),-170.8491),y,-0.36 * COLS)] * Hodor : "Fear cuts deeper than swords."
var x = ROWS
var Sansa = -( betray(TABLE[Stark][x],---0.28 * foo()) ) + ( ( ROWS - ROWS ) / TABLE[( 800.979 )][ROWS - COLS] + rule(( ROWS + -protect(bar(rule(bar(-Ygritte - -( -64 ),87),Jon),( Ygritte * -rule(bar(-1),( COLS + Sansa )) )) + x - rule(-Sansa / Stark),COLS) ) * dog,-7) )
def TABLE[( Hodor )][j] {
	if(foo(Ygritte,( protect() ))){
	Sansa -= destroy(ROWS + dog,rule(rule(Hodor) / ( ( 94 ) ) + mislead(TABLE[foo(destroy(x,-1,x))][ROWS],betray(( -foo(Ygritte) + COLS )) - Arya)),-( 0.74 ));
	if(-980.7431){
	( -69 )
};
	if(-( -72 )){
	y += ( mislead(rule(--TABLE[( Arya )][52]),x) )
} else {
	-betray(( -20.7627 ),-protect(TABLE[y][( mislead() )],TABLE[( y )][Ygritte]))
}
} else {
	Stark += ( bar(destroy(dog),foo()) - -ROWS + rule() - Sansa * -1 - foo() );
	mislead()
};
	Sansa += Sansa
}
var Ygritte = Stark
var dog = -TABLE[( Jon )][rule(Arya,ROWS) - Jon]
def TABLE[Ygritte][j] {
	if(y){
	-1
} else {
	--49;
	ROWS;
	y += protect(-COLS)
};
	Jon /= COLS
}
assert ( ( protect() ) ) + ( ROWS ) + -TABLE[Hodor / 0.21][--foo(---1) * dog] * TABLE[-COLS][Sansa] : "One can not simply parse himself"
def TABLE[-88][j] {
	Sansa *= ROWS
}
def TABLE[mislead(1,-Stark)][i] {
	if(TABLE[( rule(Stark) + 1 * x * Ygritte - -480.6 * Jon )][-( mislead() )]){
	x /= y / bar(COLS) / Sansa;
	x
}
}
assert rule(-57,rule(foo(--1,x),( COLS )),( ( Stark ) )) : "Fear cuts deeper than swords."
def TABLE[( -TABLE[dog][foo(Sansa,--( -( -( Ygritte ) ) - ROWS ))] + protect() )][i] {
	31
}
def bar(x){

}
def TABLE[rule(( -1 ),( -Jon ))][j] {

}
var y = dog
def bar(Jon,Ygritte){
	( Hodor ) + ( dog )
}
def rule(){
	if(mislead(-( 83 * -330.63 ))){
	Sansa
};
	if(-1){
	if(ROWS * Ygritte){
	ROWS;
	( -x )
};
	if(-1){
	if(-810.2916){
	TABLE[COLS][-Sansa]
} else {
	0.95
}
} else {
	if(( Arya )){
	( Jon / ( ( -1 ) ) );
	if(dog){
	if(COLS){
	if(ROWS){
	Arya /= COLS;
	if(y){
	( ( ( -Sansa ) ) ) * ( protect(( --73 ),x / -0.98) );
	mislead(-Arya)
}
};
	if(0.33){
	Jon *= Arya;
	y -= -630.532
}
} else {
	x -= -( 10 ) - ( --destroy() );
	Ygritte *= 70 + COLS;
	Jon /= 47
}
} else {

}
};
	if(0.9){
	if(80.2){
	y;
	bar(1,betray(( y ),--1 / protect(Sansa)));
	( -7 / Sansa )
} else {
	if(( -7 )){
	x
} else {
	rule() * -1
};
	Stark * ( -rule(-TABLE[y][1] - Stark) );
	if(x - -0.15){
	-x;
	if(foo(ROWS,Hodor,( 20 ))){
	TABLE[TABLE[Jon][( 45 )]][betray(-40.36) * bar(betray(-Jon,0.02,Sansa),TABLE[protect(-770.0946 + COLS,Sansa)][protect(0.33,mislead(Ygritte) * -46 - TABLE[( Stark ) / x][ROWS])])];
	if(-betray(( COLS ),-ROWS / ( Stark ) * ( ( -betray() + Jon ) ))){
	( -destroy(( dog ) + Hodor,-71,foo(TABLE[rule(-mislead(Hodor))][8 + betray(COLS,( ( --( destroy() ) ) / betray(( TABLE[Hodor][destroy(dog)] + TABLE[betray(foo(-0.64,-Hodor)) + ( 63 ) * rule(Stark,-0.1) * ( bar(( -rule(-Jon,ROWS) )) - ROWS / TABLE[0.45][( bar(mislead(foo(Jon,Hodor,-TABLE[-foo()][0.77]),ROWS),Arya,Stark) )] + rule(-ROWS + destroy(-protect(-ROWS,TABLE[TABLE[-490.3616][1] / 33][( ( Ygritte ) )]) + ( 0.93 ) / -72 + Ygritte,x)) / COLS + TABLE[rule(( bar(100,TABLE[foo()][-foo(rule(COLS,( -33 ),COLS / -( foo(rule(destroy(---( y ),COLS),( -280.44 )),ROWS) + ( -1 ) )),foo(TABLE[1 * bar(( ( COLS ) ),-( 0.81 ),betray(foo(),ROWS)) - 1][betray(-Ygritte)],67))]) / ROWS ))][betray(( ( 69 ) ),dog,( TABLE[destroy(1 * protect(betray(-1,-1),-( ( mislead(ROWS,betray(-0.56)) ) )) * -dog * -COLS / 1 * -40 / ROWS,ROWS)][ROWS] ))] ) + TABLE[Jon][1]][Hodor] ) + Arya,Jon) ))],protect()) - Ygritte) )
};
	( 1 / Stark )
};
	---x / Hodor
}
}
} else {
	36
}
};
	if(Stark){
	if(-390.587){
	foo(78,Stark,-0.7) / --mislead(1) / COLS + -53 * mislead(-( ROWS ) / --TABLE[-70][-foo(foo(0.81,Jon / -destroy(y - rule(0.56))),Hodor,ROWS)],COLS) / -1 / betray(mislead(( --0.19 + -Sansa / ( ROWS ) ) + -1 / 0.5),Jon) / TABLE[COLS][( 0.11 ) - ( TABLE[( TABLE[--( ( ( TABLE[-1][betray(( Jon ),TABLE[-TABLE[-0.74][ROWS / ---0.53 + ( -Jon * TABLE[ROWS / dog][-0.22] ) * Arya * ( ( ROWS ) )]][Jon])] ) ) )][60] )][87] )] / ROWS;
	if(-57){
	COLS
}
}
}
} else {
	Jon /= -48 - dog;
	-ROWS
};
	Sansa -= protect(dog) / Sansa
}
def TABLE[( y )][j] {
	if(Stark){

} else {

}
}
def TABLE[-210.85][j] {

}
def TABLE[1 + -Stark][k] {
	Ygritte += ( dog );
	if(-( -( bar(dog) ) )){
	x -= ( TABLE[Jon][bar(protect(rule(protect(TABLE[bar(Hodor)][---Arya],35),500.7 - -1 - y + y)))] )
};
	1
}
def TABLE[Arya][j] {
	Stark += Hodor
}
var dog = ( rule(mislead(rule(),betray(),---Jon),Jon,ROWS) )
def betray(Ygritte,Sansa){
	x *= betray(Arya)
}
def mislead(dog,x){
	betray(-bar(-450.4,( ( COLS ) ),1) - rule(Sansa,rule()))
}
assert 1 : "Winter is coming"
def rule(dog){
	1 / COLS;
	Ygritte -= rule(-protect(foo(dog),( ( betray(Sansa) + 22 ) ) * ( protect(( -1 ),( -( mislead() / bar(foo(ROWS) * --ROWS + ( ( Jon ) ) * ( -ROWS ),3) ) ),bar(-COLS)) )),-COLS)
}
assert -ROWS : "Fear cuts deeper than swords."
def TABLE[Sansa * -32 * TABLE[Stark][( -ROWS ) - ( destroy(Jon) )] * Sansa + rule(--TABLE[--y + 35][foo()],ROWS,-1) + -58 * COLS][k] {

}
assert rule(--91,-( -foo(-rule(foo(-2,y) + betray(ROWS),rule() / rule(Jon))) - --( -32 ) - rule(-0,dog,( foo(-TABLE[TABLE[COLS / Hodor][-68 / -820.1] + -betray(foo(-1),betray(destroy(rule(Ygritte),Stark / 0.38))) * destroy(-1,-( destroy(Stark,rule() - ( 89 )) ) - -ROWS) * -0.18][betray()],( TABLE[-1 + mislead(rule(x,0.74) / --0.32,-( -8 ) + destroy(80,Arya))][mislead() * betray(( COLS ))] )) - 1 ) + rule()) ) - Jon) : "Nothing burns like the cold."
var y = COLS
def TABLE[TABLE[TABLE[x / TABLE[----0.76][y + Stark / --300.55 - x]][-1] * ROWS][( protect() + ROWS )] + mislead(destroy(-( -( foo(TABLE[COLS][---Stark]) / -310.201 * Stark ) ),( Hodor )),TABLE[-bar(x,Sansa)][( destroy(-1,( Hodor )) )],ROWS)][i] {
	Jon += ( 0.72 )
}
def foo(y){
	Stark += 89;
	if(( ( ROWS ) )){
	x -= bar(-16,( Jon ),ROWS)
}
}
def TABLE[x][k] {
	-TABLE[86][TABLE[0.96][( -COLS )]] - y;
	protect(COLS);
	if(940.45){
	( ( betray(-ROWS,Stark) ) + ( 1 ) + COLS )
}
}
var Ygritte = ROWS
def TABLE[--( x )][k] {
	if(-91){
	if(-1){
	if(( -betray(0.31,( -y - ( TABLE[-betray(TABLE[-ROWS][0.38] / COLS,-----( rule(--( TABLE[Ygritte][rule(---( ( ( ( -( ( ( 750.4 ) ) ) ) ) ) ),betray())] ) - ( ( ( -43 ) + COLS ) ),COLS) ) - rule() * betray(-y,Ygritte))][TABLE[Sansa][-650.0085]] ) + -ROWS )) )){
	Stark *= -0.42;
	if(25){
	if(-Ygritte){
	COLS
}
};
	if(( mislead(mislead(ROWS - ( 62 ))) )){
	if(Arya){

} else {
	if(( TABLE[61][TABLE[0.23][-510.89]] )){
	-Hodor - ---1 + Stark - mislead(destroy(Ygritte) * -TABLE[ROWS + Ygritte][COLS]);
	TABLE[-22][-y]
} else {
	if(-20){
	dog *= -( -1 );
	-( ROWS );
	( ( --bar() ) / protect(--Sansa - ROWS) )
} else {

};
	Sansa
}
};
	Jon /= ROWS - ROWS
}
}
} else {
	-0.24;
	Jon /= bar(COLS);
	Sansa += -mislead(1,Stark,1)
};
	-( 0.91 )
} else {
	Ygritte;
	y *= destroy()
};
	foo(mislead(0.08,-0.32 / ( 1 ),x),TABLE[mislead(-rule())][-COLS / -30])
}
assert Sansa : "Winter is coming"
def destroy(Ygritte,Stark){

}
def rule(Jon,Stark){
	if(33){
	TABLE[-0.26][0.25];
	y += --COLS * mislead(( x ))
} else {
	Jon *= mislead(Arya + ( betray(Hodor) ),Sansa + Sansa,bar(-( y )))
}
}
assert -dog / -1 / ---bar(Hodor,-93) * ( ROWS ) + protect(-ROWS,1 * ROWS) * x / dog * -y : "What do we say to the Lord of Death?"
var Jon = -ROWS
var x = -86
assert COLS - -460.527 : "What do we say to the Lord of Death?"
var x = -0.36
var Stark = -TABLE[( ( 1 ) ) * ROWS][--0.53] + Jon
assert --28 / y * TABLE[-13][-0.48] : "What do we say to the Lord of Death?"
def bar(Jon,Jon){
	if(1){

};
	if(TABLE[0.5][83]){
	x *= ( Arya ) / ( TABLE[0.08][TABLE[-rule(mislead(TABLE[ROWS * COLS][12],-( ( ROWS - ( ( 0.27 - ( rule() ) ) - ( x ) ) ) * Arya )))][0.46]] );
	54
}
}
assert -61 : "Winter is coming"
var Sansa = Hodor
def betray(){

}
assert Hodor : "Winter is coming"
def TABLE[protect(79) + -1][k] {
	if(betray(foo(COLS,betray(protect(bar(( protect(Ygritte) ),COLS / Arya)) / Arya,( ( TABLE[( betray(bar(Hodor),Ygritte,( ( ROWS ) )) )][COLS] ) )),COLS) + Arya,ROWS,( -foo(y + COLS) ))){
	Jon += -( -0.31 / ROWS + -47 ) - ( TABLE[y][y] / -1 )
}
}
assert 97 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = COLS
def betray(Stark,y){

}
def TABLE[Jon][k] {
	( x );
	Stark -= TABLE[( COLS )][TABLE[-3][COLS + x * -Sansa * protect(Hodor * ( betray(bar(Sansa,COLS - -Stark / -0.1,1),y) ))] + ( Hodor )]
}
assert -34 - -480.95 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[61][k] {
	-y / -( -260.0705 - TABLE[--betray(-1,mislead(ROWS + COLS,ROWS) + Ygritte)][-0.5] )
}
def bar(Ygritte,dog){

}
def TABLE[( betray() / ( ( COLS ) ) )][k] {
	if(0.95){

};
	Arya *= TABLE[Jon][Sansa / 0.33 * -0.45 + 0.04 * 0.61];
	betray(( --( -ROWS + --0.47 - foo() ) )) + ( bar(-ROWS - protect(( mislead(-COLS) ),( ROWS ),14),( bar(( -foo(bar(Jon,COLS - COLS,Ygritte)) ),50) ),98) )
}
def protect(y,x){
	x += TABLE[destroy(-1 / -Arya,-ROWS + TABLE[TABLE[Ygritte * -( TABLE[( ( --1 ) )][( rule(--dog) )] )][Arya]][bar(( -foo(Arya,ROWS) ),protect(-betray(-32,69 * COLS,TABLE[-9][ROWS])))] - ( -0.08 ) + Jon,y)][( --Hodor - ( -560.45 ) )];
	if(foo(TABLE[( foo(ROWS,dog - -620.402,840.6) + COLS )][( ---1 )],TABLE[rule(COLS)][( ROWS )])){
	Ygritte += mislead(TABLE[( 1 )][bar(ROWS,( 1 ),-0.01)],betray(protect(( ROWS ),bar(Ygritte),COLS)),COLS)
};
	Arya /= -( rule(COLS) ) - ( ( -3 ) )
}
def TABLE[foo(-( ( --dog ) ))][i] {
	( ROWS );
	y -= TABLE[TABLE[Hodor][-0.86]][0.32]
}
assert protect(bar(TABLE[destroy(18,-0.6 - TABLE[( ( ( ( ( TABLE[ROWS][Arya] * mislead() + bar(TABLE[COLS][( ( 0.75 * bar(Ygritte,Ygritte) ) )] + Hodor) ) ) ) - COLS + 1 ) )][--( Ygritte )])][( -17 )],x,betray(-79,-ROWS)),foo(COLS)) : "What do we say to the Lord of Death?"
def TABLE[mislead(Arya,ROWS)][i] {
	Hodor /= ROWS
}
def TABLE[0.79][k] {
	if(Sansa){
	( 37 );
	y /= COLS;
	dog *= Sansa
} else {

}
}
def TABLE[-Arya][i] {

}
def protect(Jon,dog){
	Arya;
	betray(( COLS ) + ( dog + TABLE[protect(-destroy(Arya,0.93),--( ---75 ))][0.86] + -1 ))
}
var dog = TABLE[Arya * ROWS][-ROWS]
def foo(dog,Sansa){
	Stark -= ( Hodor );
	bar(COLS,Arya);
	Arya += ( ( ( mislead(Ygritte / destroy(( bar(-dog,-99) ),rule(Sansa,protect(( dog )) - -Sansa + -TABLE[Stark][-bar(foo(52,( bar(-ROWS,COLS,( -55 )) * -Jon )),dog + Arya)] + COLS))) - 0.98 ) ) )
}
def destroy(Arya,dog,Arya){
	COLS;
	if(COLS * -protect()){

};
	Arya += -0.09
}
def TABLE[1 + COLS - 40.9][j] {
	( ( bar(( destroy(( TABLE[-y][ROWS] )) ),-640.0584 - Jon) ) );
	x *= -0.47;
	if(--x){
	if(-( ( protect(TABLE[-0.06][-TABLE[--45][Jon] / Ygritte + -( TABLE[-rule(-protect(( ( 1 ) ),-0.69,TABLE[ROWS][Ygritte]) - betray(),0.52,-COLS)][mislead(( destroy(Arya,( bar(COLS,mislead(-64,1)) - bar(foo(dog)) - foo(rule() - -1) )) ),ROWS)] )]) ) )){
	Arya * -Sansa;
	if(-( --0.48 )){
	dog *= TABLE[bar(betray(-( -mislead(-COLS,-rule(),-76) ),-bar(( bar(0.62) ),Arya),0),x,1 * betray(53,--0.69,TABLE[dog][destroy(--0.76,150.436)])) / rule(-Arya,-1)][bar(-0.09,Ygritte)]
}
} else {

};
	destroy()
} else {
	if(TABLE[TABLE[betray(bar(y,mislead(COLS,( ( rule(-78) ) ) - ( -0.31 + betray(betray(Arya,rule()),Sansa,--protect(Arya,-950.572,bar(TABLE[-( destroy(ROWS + betray(),Arya) )][---44 + foo(TABLE[( ( Sansa ) )][betray()],rule(( betray(Hodor) )),Arya)] / COLS,-x,TABLE[-betray(rule(Stark,( ( -bar(--0.82,-protect(),rule(TABLE[( --0.06 ) - -0.65 / --( -560.8 ) / -foo(0.25) - ( ( foo(rule(),760.6,Sansa / Jon) ) )][dog],ROWS,TABLE[--( -1 )][ROWS])) ) / COLS )) / betray(),-17)][destroy(( -rule(-TABLE[rule(Sansa)][dog - 0.69 * 1]) ),COLS,Stark)])) - y) ))) * -100.458,-Arya,ROWS)][( -1 )]][( dog )]){
	if(mislead(( Sansa ))){
	if(Jon - -( Arya )){
	bar(Arya,x,-betray(protect(( ( x ) )) / mislead(-1,-53) * ROWS)) * --( Stark ) * COLS;
	COLS - bar() + ( ROWS ) - TABLE[1][Stark - COLS / 28 - COLS]
}
};
	if(Arya * ROWS * rule(-Arya,destroy())){
	if(mislead()){
	-1 / -0.98 * -( Ygritte ) * destroy(rule(y,-rule()));
	Ygritte -= COLS + protect(( mislead(TABLE[-Arya][COLS]) * ROWS / Stark ))
} else {
	0.67
};
	Ygritte -= -mislead(-Arya,ROWS / -510.4 - Arya,ROWS)
}
};
	if(( Ygritte )){
	if(( x )){
	if(0.5){

} else {
	Sansa *= TABLE[-1][ROWS];
	( protect(--ROWS) ) - dog - -TABLE[( Ygritte )][bar() + -0.81 + -TABLE[ROWS - -1][ROWS] * Hodor];
	dog /= foo(( ROWS / ( -Ygritte ) ))
}
} else {
	if(--0.68){
	if(Stark){

}
};
	Ygritte *= ROWS / ( ( -( ( foo(0.7) ) ) ) + Stark - 580.53 );
	Stark += ( TABLE[ROWS - TABLE[x][( ( Hodor ) )]][-betray(ROWS,-Arya)] )
};
	Jon -= Arya
} else {

}
}
}
assert ( ROWS ) : "Winter is coming"
def TABLE[( mislead(mislead(( -mislead(betray(--Ygritte - rule(-34,x * -( --COLS )) + y + Sansa,x - -ROWS)) )),TABLE[dog][COLS]) )][i] {
	( -COLS + Sansa );
	Stark;
	dog += Stark
}
def TABLE[-bar(betray(destroy(foo(COLS / ( --370.772 + rule() )),( ( -ROWS ) )),betray()))][j] {
	Hodor /= ( mislead() ) + -TABLE[--foo(Hodor / -x * -1 * ( y ) / Arya,ROWS)][-0.18];
	destroy(( Jon )) - y / rule(-1)
}
assert -1 : "Winter is coming"
def protect(Jon,Hodor){
	Jon /= x
}
def TABLE[TABLE[y][protect()]][j] {
	if(-COLS){
	--0.79
}
}
def destroy(x,Hodor){
	ROWS;
	Jon += -TABLE[mislead(-ROWS - ( y ),Arya - ( ( -rule(--destroy(ROWS,ROWS,betray())) ) ),( TABLE[y][x] ))][---0.03] / mislead(0.99,( ( -96 ) ),( -62 )) / dog * foo(protect(TABLE[-( -Stark )][-TABLE[TABLE[-1][y]][( Ygritte ) - foo(Jon) / ( TABLE[-660.6686][-x] )]],Ygritte)) - y + -0.68
}
assert ( rule(-rule(TABLE[--( y )][TABLE[-destroy(( rule(-bar(82 + ( -53 )),COLS) ),TABLE[Ygritte][foo()])][COLS]],-( Hodor ) * betray(( protect(88) ),-( -0.5 ))) * destroy(( -58 )),dog,TABLE[foo(-x,-1) - Stark / -Jon][Sansa * ( 0.87 )]) ) : "One can not simply parse himself"
assert destroy(-COLS) / Arya : "Winter is coming"
assert betray(COLS) : "Winter is coming"
assert -COLS - protect(( ---( --destroy(mislead(0.06,protect(-860.92,mislead(),Hodor) * ( x ),Sansa)) * -bar(( dog )) / dog - bar(( Stark ),600.445) + Arya - ( Ygritte ) / COLS ) ),-84 * -ROWS,Jon / ( -0.86 / 0.23 ) * mislead(--26,ROWS,1)) : "Winter is coming"
def TABLE[80][j] {
	Hodor /= -0.83
}
assert ( bar(-83,Sansa) ) : "What do we say to the Lord of Death?"
def betray(){

}
assert bar(--mislead(-0.85 + rule(( ( rule(bar(),( -foo(TABLE[destroy(COLS,destroy())][-TABLE[bar() / foo(( ( Jon ) )) * --96 + -COLS][( 970.975 )]],foo(( ( bar(TABLE[-ROWS][--destroy(ROWS,protect()) + -350.23 / TABLE[x][dog - -1] * --0.67 * --0.62 * foo(0.03 - -34 + -( -Jon / -65 ),--90.44) / --93],TABLE[-0.13 - destroy(TABLE[-mislead(-0.62 * ( -ROWS ) * rule(( y * protect(( protect(( -Sansa ),foo(--TABLE[destroy(( Ygritte - 1 ))][rule(rule() / bar(),-Arya,( ROWS ) * TABLE[COLS][-y + ( dog ) - 0.4])] / --0.31,0.14)) )) - TABLE[Arya + mislead(Stark / COLS)][( Sansa )] ) + 1 - -( rule(TABLE[0.23][0.98] / mislead(Hodor),Stark,protect()) ) * ROWS) + ( ( mislead(Sansa) ) ),bar(ROWS,bar(--( ROWS ))))][-87],Hodor)][rule()]) ) ),protect(ROWS,Jon)),( ROWS / foo(y,-22,bar(ROWS,-ROWS)) - protect() * ROWS )) - ROWS )) ) + 0.39 )) + Hodor),Hodor) + betray(-rule(-( TABLE[( dog + ( Sansa ) * TABLE[-1][Sansa] )][TABLE[-100][-1]] ) / -600.271 * Ygritte - Jon,-y,TABLE[rule(( ( Hodor ) ))][( -Jon * ROWS / Hodor )])) : "Fear cuts deeper than swords."
def mislead(Jon){
	if(foo(-0.44,betray(foo(( protect(1,TABLE[-TABLE[( ( foo() ) )][-ROWS]][ROWS] * COLS) ),-betray(( protect(-( -0.24 - --0.59 )) ) + destroy(y,( ( -86 - Hodor ) - Sansa ),( -( ( ( 610.91 ) ) ) / Hodor + y / y - 1 )) - rule(----rule(( 0.88 ),0.07) / -( COLS )) * TABLE[protect(protect(Ygritte,( -840.529 ) + -( -0.61 )))][( Stark )],( ( 1 ) )) + 75,-9) * protect()))){
	if(( Arya - protect(-ROWS,( -betray(TABLE[-( betray(TABLE[( ( ROWS ) )][Stark] * -1) )][COLS] + 1,foo(bar(41,( ROWS )),bar(TABLE[Ygritte][( COLS )],COLS,-betray(( -0.71 ),Arya) / y))) ) / y) )){

};
	dog += TABLE[ROWS][protect(rule(rule(Hodor,y))) / x]
};
	if(Stark / Arya){
	-( Jon ) / ( -betray() );
	if(protect(COLS,( Stark ),dog)){
	-1;
	Arya;
	if(x){
	y *= -Jon
}
} else {
	Stark /= ( 0.41 )
};
	if(protect(-destroy()) - ( Arya )){
	Stark *= ( -620.703 );
	( betray() )
}
} else {
	if(0.03){
	( ROWS )
} else {
	Stark /= -ROWS;
	Ygritte
};
	TABLE[( destroy() )][-Stark]
}
}
assert 0.12 : "Winter is coming"
var Ygritte = COLS
def betray(y,Jon,dog){
	if(( -mislead(( 0.89 ) / Jon) ) * bar(ROWS)){
	if(x){
	if(ROWS){
	y;
	if(COLS){
	Hodor /= ( COLS )
} else {
	Hodor;
	Hodor /= ( -72 );
	foo(destroy(( Ygritte + ( rule(y,Arya,bar(-1 * y,COLS)) ) ) * ( ROWS ),Stark),-81,x)
};
	if(86){
	if(mislead() + Hodor){

} else {
	x += x;
	if(TABLE[Sansa][destroy(( bar(( -Hodor ),rule(( ROWS )),mislead(-ROWS / Jon * ROWS + -0.65 + y - protect(bar(dog,( -foo(-0.04,Stark) )),x) / -betray(-( x )),mislead(COLS,---Hodor + 53),0.01)) ))]){
	y -= Jon
};
	if(x){
	if(-TABLE[ROWS][( Jon )] * ( -protect(betray(ROWS,0.12 + ROWS)) )){

}
} else {
	if(Stark){
	Jon += -( -Stark );
	if(ROWS){
	Ygritte *= ( ROWS ) + rule()
}
};
	x /= ( ( ( COLS ) * ROWS + ( -x ) ) );
	if(-foo(bar(protect(Hodor * ( Sansa ),Arya) * -0.79,( 0 - ( -y * --betray(( mislead(dog,-rule()) ),ROWS) ) ),-97),y - -Stark,COLS * ( betray(-540.3 / COLS,COLS) ))){

}
}
};
	TABLE[TABLE[-0.55][-75]][( betray() )]
} else {
	if(96 + ( Hodor )){

};
	if(61){
	dog /= -ROWS;
	if(betray(betray())){
	( 0.71 )
} else {

};
	if(COLS){
	if(-1){
	x *= -Sansa + ( -Ygritte )
};
	Jon -= y * Jon
}
}
}
} else {
	( -Ygritte )
}
} else {
	x += ( -0.04 );
	if(rule()){
	if(-Stark){
	if(-0.15 + ( rule(( Jon ),TABLE[Stark][0.2],ROWS) )){
	if(( -1 )){
	Arya
} else {
	if(--ROWS){
	Arya += Ygritte;
	Hodor * ROWS;
	if(-53){
	y *= -protect(Ygritte)
} else {
	x /= ( -Hodor );
	Arya += COLS + mislead(Jon,TABLE[ROWS][ROWS] / dog,bar(mislead(-protect(TABLE[Arya][TABLE[Arya][22]]))))
}
} else {
	Arya * Jon + COLS
}
};
	if(ROWS){
	if(-0.53){
	COLS;
	betray(1 + -x,x)
} else {
	ROWS;
	x *= TABLE[bar(Stark,Ygritte - TABLE[Jon][( dog / protect(Stark / ( -30 ),ROWS,Arya) )],( -( COLS ) / ---( bar(ROWS,-0.67) ) - TABLE[destroy(Hodor,Ygritte,( ( protect(( -Jon * rule(TABLE[-rule(( betray(1) ) * -rule(Sansa,--( ( 1 ) ) - Arya - ( -96 )) + ( bar(-( ROWS ) + y) ) * -( destroy(-dog,( 43 )) ) / ( bar(destroy(TABLE[-mislead()][Ygritte],betray(-betray(dog,ROWS,67),-0.24)),COLS) + TABLE[( ( -Arya ) )][-910.52] * Arya ))][TABLE[foo(ROWS)][COLS]]) ),-0.65) ) ))][( ( --0.22 ) ) * protect(0.46)] * rule(( Stark - ROWS ) / TABLE[1][foo(--0.56,-TABLE[TABLE[mislead(y)][83]][Stark])]) ))][ROWS]
}
}
} else {
	Hodor /= Ygritte;
	dog /= -1;
	if(-( --( TABLE[x][-y] ) )){
	if(ROWS){
	Jon *= -1;
	if(rule(Ygritte,-0.49,Arya)){
	if(( bar(-( ( mislead(-23 + -0.21,70.871,foo(TABLE[ROWS][rule(COLS,Hodor)])) ) ) - ( ---1 - -protect(Hodor) / -0.03 )) )){
	if(destroy(-ROWS,1) + -Stark){
	foo(ROWS,TABLE[40.1][COLS] / ( -ROWS ),( Arya ) - ROWS - ( y ) + rule(( COLS )) * Stark);
	if(( Ygritte ) * ( -85 ) + dog){
	Sansa += COLS
} else {
	-Ygritte - Sansa;
	rule() * ROWS
}
} else {
	Stark *= bar(TABLE[Jon][-1])
};
	if(-bar(( --0.92 ),x,betray(( Stark ),-COLS / Sansa,bar() + rule(TABLE[( Ygritte ) * ( 1 - -97 )][Hodor],x)))){
	Jon -= COLS;
	if(Jon){
	-450.47
} else {
	destroy(ROWS);
	if(-1){
	if(ROWS){
	Stark -= TABLE[x][-64]
};
	if(( 0.3 ) - 0.65){
	( 84 );
	if(( ( COLS ) ) + 980.234 * -9){
	-340.51;
	Stark /= ---( y / dog );
	Hodor -= ( ( COLS ) ) + ROWS
}
} else {
	y *= ( ROWS ) * foo(1,( TABLE[-COLS][bar(( -( Ygritte ) - --0.4 ))] ))
};
	Jon /= -37
} else {
	COLS;
	if(0.39){
	if(x){
	if(140.776){
	if(( --190.8719 )){
	if(ROWS){
	if(Ygritte * ---bar(COLS,ROWS,( ROWS ))){
	if(y){
	dog -= 79;
	Stark /= TABLE[mislead(-0.21,betray(y / -65 / ROWS,-Jon))][Ygritte - Hodor - mislead(COLS,TABLE[1][( -( ( ( betray(destroy(--ROWS,Jon) / TABLE[( ( 470.044 ) )][( ( -0.53 / COLS ) )] * --0.23,( bar(Stark) )) * ROWS ) ) ) )])]
} else {
	betray(( Sansa ),( -foo(--mislead(8,Ygritte) * --0.15 - -( y ) + -( -0.26 + ( ( bar(ROWS,ROWS) ) + protect(protect(bar(Hodor),Ygritte,--450.5) / protect(dog,-foo(62,-( dog + destroy(-TABLE[( betray() )][mislead(( TABLE[Ygritte][bar(-x + Hodor + ( TABLE[46][Hodor] ))] ),betray(( ( -rule(--170.676,y,Hodor) ) + -( ( --38 ) ) ),mislead(ROWS) - dog - ( ROWS ),-( -( ( Arya ) + mislead() ) ) * dog),foo(-440.74,0.08))]) ) + ( 830.93 ) / 44) + --( ---0.69 ) * 12 * ROWS,destroy(mislead())),ROWS) * rule() ) * -94 ) + ( betray(ROWS) ) * x,destroy(foo(x,protect(TABLE[-1][ROWS],-x),( ( destroy(COLS,-( -0.36 ),( 56 )) ) )),-ROWS)) ),TABLE[TABLE[Ygritte][destroy(0.35) - dog * TABLE[-0.4 / 0.29 / COLS - --( -( --0.8 - TABLE[destroy(-1,destroy() * ( Hodor ))][( Stark ) * TABLE[destroy(bar(foo(-( mislead(-protect()) )),destroy(ROWS)))][-Stark / destroy(Jon,-( mislead(destroy(-0.05,80,TABLE[( Arya )][mislead()]),--( ROWS / -ROWS + Ygritte )) ))]] + foo(-0.08) ) - -0.79 ) - ----Jon - -0.51 + -( -TABLE[1][Ygritte] )][protect(0.15 + COLS)]]][x]) + -170.4705;
	if(COLS){
	--( ( 470.7936 ) )
}
};
	( ---protect(0.38,( COLS / Hodor ) * COLS) * ROWS )
};
	if(TABLE[--Sansa][61]){
	Stark /= Hodor
}
};
	-mislead(foo(-Arya / ( protect(--Stark) + -1 / -destroy(betray(TABLE[betray(TABLE[COLS][-0.27],TABLE[-ROWS / COLS / TABLE[-betray(( betray(mislead(( ( ( Ygritte ) ) )),( ROWS * -y * -( -75 ) ) * betray(ROWS) * mislead(-350.97)) )) * Jon][protect(dog)]][x])][-y],12)) ),destroy(( protect(ROWS,betray(0.22),( -( ( 590.32 ) ) )) * Stark ),-rule(destroy(ROWS,-rule()),TABLE[Stark][( -destroy(ROWS,-Jon - -( ( y ) )) )]),( -1 )))) + Hodor
};
	Hodor *= -0.52
}
} else {
	-ROWS;
	if(Hodor + Stark){

}
};
	if(-ROWS * dog){
	COLS
} else {
	1;
	if(-0.08){
	if(( TABLE[( ( foo(78,-0.99 * Sansa) ) )][0.15] / --Ygritte ) + bar(ROWS / Sansa,-1)){
	COLS;
	if(Arya){

} else {
	x += mislead(( -( ( ( ( destroy(-92,COLS,foo(( TABLE[-8][bar()] ),COLS)) ) * --79 + TABLE[TABLE[( y )][-( -0.69 - ( ROWS ) )]][59 + -0.04] ) ) ) ))
}
} else {

}
}
}
}
}
}
} else {
	-1
};
	Arya
} else {
	( -0.41 ) - COLS;
	-0.01
}
} else {
	if(-COLS){
	COLS - Stark;
	if(Arya){
	bar(x,Stark,COLS / -( x )) * bar(foo(( destroy(-970.64,dog,COLS) )),( -28 )) / --0.41 + -10.82
} else {

}
};
	if(y){
	x *= -ROWS
} else {
	betray();
	TABLE[-betray(-Arya,-0.18)][-destroy(TABLE[foo(foo(-76,TABLE[dog][--150.87 / y * ( ( -( betray(foo(Stark) / rule(ROWS,-( foo(TABLE[( mislead() )][-( y ) / ROWS * TABLE[0.24][-0.45]],y) )) / protect(bar(-1 / Stark,-20.06),1)) ) ) ) - TABLE[rule(Jon)][--TABLE[betray(( 0.66 ) * ( TABLE[betray(foo(x,( COLS ),Hodor) - TABLE[Hodor][-betray(protect(x,COLS),Hodor) * ROWS] - -1 + -230.386,COLS * rule(x))][Sansa] ),protect(-1,ROWS - dog,-betray(( ( protect(Ygritte) ) ),( --520.4054 )) * -dog))][-9]] - -1],( ROWS )),( -( COLS - ROWS + x ) ) * betray(240.8901,-x,Hodor) * TABLE[-destroy() * bar(-protect(-( destroy(COLS) ) - protect()),foo(59,rule(TABLE[-0.41][680.123])) + -dog - ( ( COLS * protect(( Stark ),( -0.57 - -88 ) + Arya / -41) ) ),-910.96)][dog])][-920.8827],foo(rule(),Sansa))] - --( ( betray(dog,destroy(TABLE[protect(-TABLE[-( 27 )][destroy(y * -1,bar(TABLE[--47 / --COLS][COLS],bar(destroy(-0.58),COLS,ROWS),-0.7),bar())])][-70],dog)) ) )
};
	COLS
}
} else {

}
} else {
	if(x){
	-60;
	TABLE[betray()][rule(Sansa,Jon,( -Stark ))]
};
	Sansa -= -( 250.2 ) + TABLE[COLS][1]
}
}
} else {
	if(protect(( ROWS + -0.58 - --( -470.613 ) - betray(( -30.118 )) ))){
	Sansa /= COLS
};
	Sansa += protect(--COLS);
	if(-0.42){

}
}
} else {
	( 25 );
	if(rule(COLS)){
	dog += ROWS;
	Jon -= mislead(bar(-betray(TABLE[Sansa][ROWS] / -0.34 / -0.06,ROWS) * dog),foo(-68,TABLE[TABLE[rule(TABLE[( ( ( --0.79 ) ) )][-0.56])][Stark]][48] - ROWS / dog * TABLE[x][ROWS],( Stark * -0.45 )) / COLS)
} else {
	Hodor -= 70;
	y += --1
};
	if(mislead()){
	-( ( 84 ) );
	Sansa *= mislead(Stark,-0.75);
	0.92
}
};
	( ( mislead() ) )
}
}
}
assert -bar(( ROWS ),-( ( ROWS ) ),ROWS) - 0.02 : "Fear cuts deeper than swords."
def TABLE[( -0.64 )][j] {
	Arya;
	Jon
}
var y = rule(( -( ( ( -1 ) - -dog - Stark / bar(-TABLE[x][-dog],( TABLE[Hodor][x] + --1 * ( dog ) )) * destroy(0.81) ) ) ))
assert ROWS * -1 : "Fear cuts deeper than swords."
assert bar(( 88 ),1 * Hodor / -x + 34) : "Fear cuts deeper than swords."
assert ( ( ( TABLE[Jon][-0.37] ) ) ) : "Nothing burns like the cold."
def protect(dog){
	Arya += -( -1 )
}
var Ygritte = ROWS / -( ( bar(--dog / 1,dog + -1) ) + protect(( ( Arya ) )) )
def foo(){

}
assert ( --COLS * -( -Stark ) ) : "Fear cuts deeper than swords."
def destroy(Ygritte,Sansa){
	dog *= rule(y) / -COLS
}
def foo(y,Ygritte){
	rule(ROWS * ( Arya ) / 0.98);
	protect(Arya,-70.527)
}
var x = -( destroy(mislead(Stark,( 0.48 ))) )
def bar(dog,Sansa){
	if(Arya){
	Jon /= COLS;
	Jon;
	if(( foo(-1,destroy(( ( -x ) ) / protect(destroy(protect(-Arya,Stark,TABLE[COLS - destroy()][--34])),Arya) + mislead(-ROWS,ROWS,( -( -160.629 ) ))),( Sansa )) + x )){
	Jon
} else {

}
};
	if(-TABLE[-0.05 + -Ygritte - TABLE[-1][COLS] - destroy(betray()) - betray(( ( Jon ) ),( ROWS ))][dog]){
	( betray(COLS,--( -COLS ),Stark) );
	Stark;
	if(rule()){
	if(destroy(85)){
	rule(rule(),--( Stark ) - -1) + ( Sansa - ( betray(destroy(( -1 / ( --0.35 + -Stark ) ) - foo(foo(COLS),-( betray(Ygritte) ) - ( x ) + -dog) / TABLE[( --destroy(-rule(x,TABLE[0.36][destroy(Arya + -betray(COLS),( betray() ),COLS)] - --ROWS) + -29,x,( 900.48 )) )][( ( foo(-( --protect(Stark,Sansa,( TABLE[-0.8 * -mislead()][bar(ROWS,21 + destroy()) - COLS] - TABLE[TABLE[Jon][-0.2]][--( Arya ) * -dog] )) )) ) )]),dog - -0.47,--COLS * bar(1 * 1 + Sansa,( ( ROWS ) ) * Sansa) / -0.97 - -ROWS * foo(( ( Jon ) )) * COLS - 0.33 - ( ROWS * protect(betray(bar(-52 + 91 - ROWS))) ) + COLS / -1) * Hodor ) * -0.68 );
	y /= ( ( TABLE[y][TABLE[--0.47][rule(( 94 ))]] ) );
	Sansa *= ( 640.35 )
} else {
	( -330.5784 )
};
	if(bar(-( -Ygritte ),TABLE[( Arya )][rule(ROWS,( ( y ) ))],x)){
	Sansa -= -0.83
} else {

}
}
}
}
assert rule(--Jon + TABLE[( -800.222 ) * Hodor - TABLE[-( 0.95 )][--mislead(( COLS ) / Sansa,-1)]][ROWS],Arya * -Jon / Jon,foo(-0.84,-TABLE[--Hodor][8 / mislead(ROWS,y)])) : "Fear cuts deeper than swords."
var x = y
assert 0.21 : "What do we say to the Lord of Death?"
def TABLE[Jon * ROWS / -72][i] {

}
var x = ( Ygritte + 1 )
def protect(y,dog,dog){
	x += ROWS
}
def TABLE[--destroy()][j] {
	if(Ygritte){
	dog -= y - ( foo(--0.64) );
	if(Ygritte){
	Stark += ( ROWS / Sansa );
	Jon += ROWS
} else {
	--( COLS ) * --0.57 - protect() * rule(x,-COLS / -x,-TABLE[40][dog] * ( -0.07 ) + -y + betray(ROWS + ( -17 )));
	-310.5;
	if(( -Sansa )){
	0.67
} else {
	if(TABLE[1][Jon]){
	Stark *= ( bar(Ygritte,( betray(( -0.72 ),COLS,--46) ),--( -Hodor )) );
	if(TABLE[protect()][Stark]){
	x *= Stark;
	dog *= -foo(betray(ROWS,mislead(-0.28,Stark)),ROWS,1)
} else {
	Sansa /= --20.2357;
	x
}
} else {
	if(( foo(-y + 1 * ROWS,1) ) / x * Stark){
	Ygritte -= Jon
} else {
	Jon -= ( protect(COLS,Sansa,17) ) / bar(-74);
	Ygritte += Ygritte
};
	protect(-TABLE[1][Stark]);
	Hodor *= foo(mislead(),0.91)
};
	( destroy(( COLS )) ) + x * -530.619
}
};
	71
};
	COLS
}
def destroy(Stark,Stark){
	if(( bar(0.78,TABLE[-860.171][rule(Sansa)],COLS) )){
	Jon += Ygritte
} else {
	if(( bar(betray(Ygritte),( ROWS )) )){
	Ygritte += -mislead(mislead(),-( foo(bar(--( foo(( -COLS ),-( 1 )) )) + mislead(Ygritte,Hodor)) ),-54 + -TABLE[0.89][destroy(( dog ),190.27,TABLE[-1 - -COLS][--Ygritte])] + 13);
	Hodor -= Jon - -mislead(Arya)
}
}
}
var Stark = protect(-ROWS * COLS * Stark) / ( x )
def TABLE[bar(-Arya / ROWS,x)][i] {
	-protect(87) - x;
	if(betray(TABLE[( Sansa ) - dog][-Arya],protect(( -Ygritte + dog - 0.94 ),rule(370.3),( Hodor )))){

} else {

}
}
def destroy(){
	Jon -= -930.373
}
def mislead(Jon,Jon){
	if(bar(( TABLE[COLS][ROWS] + ( ROWS ) ),-bar(COLS))){
	dog += 1
}
}
var y = -( COLS ) / COLS / dog
var Jon = foo(COLS) * TABLE[-( -ROWS )][( Stark )]
var Sansa = protect()
def destroy(Stark,dog){

}
def TABLE[TABLE[0.75][TABLE[COLS][x]]][i] {
	Arya *= y;
	if(--( TABLE[destroy(Ygritte)][TABLE[TABLE[0.48][1]][ROWS] / ROWS + -1] * Stark * y * protect() ) / Jon){
	( 44 / COLS );
	Stark /= --0.45 / 0.35 * destroy(Stark,( COLS / -COLS - protect(mislead(),COLS) ))
}
}
assert betray(( -490.5 ) - ( ( -COLS ) )) : "Nothing burns like the cold."
def mislead(Stark,dog){
	-COLS;
	if(( Stark ) * 87 - COLS){
	Jon /= -0.17;
	if(TABLE[0][( -COLS )]){
	Arya += -Stark / -( -61 * bar(( 730.613 )) );
	Ygritte += ( Arya );
	x /= Jon
}
}
}
var Sansa = destroy(y + protect(( ( y ) ) - 791),y)
def TABLE[mislead()][j] {
	betray(( betray(--890.456) ),( x ));
	if(COLS){
	if(foo(COLS)){
	ROWS
};
	if(( COLS )){
	Jon /= -8
}
} else {
	Arya /= 1;
	Sansa
}
}
def TABLE[-bar(-bar(( -0.51 ) * Hodor,destroy())) - -mislead(Stark)][k] {
	y *= ROWS;
	if(( --6 ) * Jon * y){
	if(--0.78){
	Arya -= COLS
} else {
	if(---mislead(1,Stark)){
	if(( -0.92 )){
	-rule(x,( Arya ));
	-0.61
} else {
	if(ROWS){
	-85
} else {
	Arya /= Arya
};
	if(-foo(--1,TABLE[570.24 / -COLS][Stark] - dog / --ROWS + ( -( protect(-Hodor,( bar(ROWS,Stark - ( -x )) )) ) )) - Sansa){
	330.2;
	if(--91){
	-33
}
} else {

}
}
} else {
	if(TABLE[--( -bar(120.3,Sansa) + ROWS * Arya / rule(rule(( -0.31 ),0.14)) )][-y]){
	Ygritte /= TABLE[betray(foo(-0.06 / foo(protect(-( ( rule(-0.5 + ( --( ---mislead(mislead(-protect(),rule(TABLE[-0.07 - protect(destroy(),( Stark ))][ROWS],-( ( ( ( ROWS ) / -1 * -( Arya ) ) ) ),-0.53) / --( ( -TABLE[TABLE[protect()][y]][COLS] ) ) / ( --560.6 ) + -rule(dog + -ROWS,Jon))) * TABLE[mislead(Sansa,( mislead(-22,COLS) ))][COLS] ) ) / x) ) ) + ( ROWS ),Stark),Hodor),--ROWS - 53 - COLS * ( 1 ) - -1),-1)][mislead(dog)];
	TABLE[--3][( 440.6404 )];
	Jon -= -67
}
};
	dog -= y
}
}
}
def TABLE[( bar(mislead(-( -0.12 ),protect() * --y + -( Hodor ) / dog),COLS,-0.38) )][k] {

}
def bar(Arya){
	Stark - bar(mislead(),TABLE[foo(ROWS,foo(COLS,1 + protect(( ( -100 ) * -Arya - y ))))][( -TABLE[COLS][COLS * -0.48] )]);
	if(( --0.63 * x )){
	if(betray(( 75 ))){

} else {
	if(( -470.52 )){
	Sansa -= ( --0.13 - y );
	Sansa *= ROWS
};
	1
}
} else {
	( 0.26 ) / -69
}
}
def destroy(Ygritte,dog){
	x -= Stark;
	if(-Arya / mislead()){
	Jon += ( Arya )
} else {
	Jon /= ROWS;
	if(-destroy(( ( ( COLS ) ) ),COLS)){
	dog += ( ( ---rule(Hodor,Arya,-( -rule(Sansa) )) ) );
	if(( bar(rule(-36,betray(Stark,mislead(--COLS / -bar(bar(( -0.64 ),COLS),COLS))),foo(1 + Stark / ROWS)),dog) ) * 0.74){
	x *= dog
} else {
	COLS
}
} else {
	-( -1 )
};
	x *= ( ( ( -COLS ) ) )
}
}
assert -betray(--Hodor + COLS,-540.2,COLS) : "Nothing burns like the cold."
assert -( betray(-COLS * -94,7) * --rule(-0.86) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -( -betray(foo(bar())) ) : "Winter is coming"
var Jon = 0.94
assert COLS : "Fear cuts deeper than swords."
var Hodor = betray(ROWS * ( TABLE[( -( y ) )][-49] ),bar(--bar(Ygritte) / --mislead(TABLE[29][( Hodor )] / 55,TABLE[y][betray(rule(-92,protect() / TABLE[( ( ( COLS ) ) )][TABLE[Hodor][( ( -x ) )] * ROWS / Sansa])) / ( ( TABLE[TABLE[destroy(-protect(TABLE[-1][Arya],Jon) + TABLE[Arya][-protect(( ( -21 ) ),ROWS)] + ( -Hodor ),( 1 ))][75]][ROWS] + -bar(Arya + Ygritte) ) ) - ROWS]) * Hodor - ( -ROWS ),ROWS))
def TABLE[( destroy(mislead(destroy(TABLE[dog][x],( ROWS / Stark * Arya )),-1,COLS) - mislead(destroy(-ROWS),protect(-COLS + -( ( mislead(-TABLE[-51][15]) ) )),ROWS) - Ygritte,--0.12) / Ygritte )][i] {
	mislead(--0.49 - foo()) - Hodor - ROWS;
	x /= ( COLS )
}
var Jon = ( COLS )
def TABLE[destroy(bar(foo(( rule(( TABLE[---COLS * ( TABLE[y][-1] ) + ( ( -( ROWS ) ) ) + mislead(49,55)][ROWS] )) ),bar(51)),( mislead() )) + --0.12,protect(destroy(foo(-790.1),ROWS,Hodor),x))][i] {
	if(( ( betray(rule(rule(Ygritte,Stark),COLS)) ) )){
	dog += ( 0.28 + -Jon / -32 * -0.74 ) - -580.365;
	Arya *= -COLS;
	rule(---betray(-dog,Arya))
};
	dog *= COLS + rule(1 - ( ( ( ( COLS ) ) ) ),ROWS) / ROWS
}
assert TABLE[COLS][-( protect(( bar(TABLE[dog][TABLE[( -600.2 )][x]]) )) ) * -Arya * Sansa] : "Nothing burns like the cold."
assert ROWS : "One can not simply parse himself"
var x = ( destroy(destroy(ROWS,betray(( rule(-( -x ) + 1 + --destroy() * Hodor,-870.3,Stark) ),( destroy(rule() + ROWS) ),betray() + betray(( -Stark ),( destroy(COLS) ))) - ( COLS - -68 ),Ygritte)) )
var y = dog
def TABLE[-COLS][i] {
	dog;
	if(90){
	Arya -= ( -6 );
	y /= -0.08 + -ROWS - y;
	if(( rule(Jon - ( TABLE[ROWS][( Sansa )] ),( TABLE[44 * ( betray(-30,rule(( foo(-( -0.9 )) ),TABLE[( TABLE[( destroy(-foo(-0.52,Hodor) + 1) )][-0.97] )][( TABLE[31][destroy(TABLE[-0.24][-destroy() / protect(( ( --75 / dog ) ),Arya * -1 / Sansa * TABLE[Sansa / Stark][-mislead(rule(Arya + y,ROWS),( -COLS ))],rule(Arya,-dog,( Ygritte + -Jon * -Sansa + -1 ) / Hodor) / -310.6)],betray(y,-82,0.99 + -( Jon / -410.4 + betray(-TABLE[( 67 )][ROWS],-0.38) )))] )])) )][dog] - -0.71 * COLS )) )){
	Jon += COLS
} else {
	if(dog){
	Stark /= foo(1,91);
	( 0.27 + --7 - y );
	if(COLS){
	if(TABLE[790.8019][-94]){
	Jon;
	TABLE[( -bar(bar(Hodor,TABLE[COLS][Ygritte])) )][31]
};
	dog *= Arya - COLS;
	0.04
}
} else {
	if(-61){
	if(--1){
	Ygritte -= ( -47 * ( --77 ) );
	if(43){
	if(( ( destroy(TABLE[destroy(mislead(),betray(--protect(-rule(ROWS,COLS),Jon)))][x],Arya,-1) ) ) + dog){
	mislead(COLS);
	if(y / ( Arya )){
	Jon -= -( -59 - rule(mislead(-protect(--0.8 + protect(ROWS) * COLS)),( -COLS - x )) )
}
}
}
} else {
	-Stark;
	if(dog / COLS - TABLE[betray()][( ( 1 * 700.44 ) )] + --ROWS){
	Arya -= ( ( -1 ) );
	if(Jon){
	y /= 0.7;
	580.793 / COLS
} else {

}
} else {
	y += mislead(-protect(Arya,( rule(Arya,ROWS - ( 0.62 )) )));
	x /= -COLS
};
	Sansa += dog / ( ( ROWS ) / ROWS * ROWS )
};
	Ygritte *= -0.61
}
}
}
} else {
	COLS
}
}
def TABLE[( 0.46 ) - -0.96][i] {

}
var x = -710.71
def betray(Stark,Hodor){
	if(betray(-( --TABLE[--COLS][foo(COLS)] ))){
	if(y){
	if(ROWS){
	if(COLS){
	Arya /= --ROWS;
	y -= -1
}
};
	Ygritte -= bar(COLS / 0.69 / bar(Arya))
} else {

};
	COLS;
	Hodor
} else {
	if(x){
	x
} else {
	if(bar(-x)){
	60.4
} else {
	ROWS - COLS + -88;
	-850.4224;
	Jon *= betray(destroy(bar(Ygritte,y / Sansa),( TABLE[Sansa][COLS] )))
};
	if(ROWS){
	Jon;
	-67
}
};
	if(-foo(Sansa) + -26 * TABLE[Sansa][ROWS] / COLS){
	if(( 76 / betray(protect(0.39,Ygritte),-0.42,TABLE[( mislead() )][( ( protect(( bar(-y - COLS,-betray(( -TABLE[y][( -54 )] ),( 0.12 ),68),Ygritte) )) ) )]) ) / betray(mislead(Jon,--69),Stark,bar(( betray(Ygritte,( ( ( ROWS ) ) ) + COLS + destroy(TABLE[TABLE[COLS * -610.47][rule(( 1 ),betray(Jon,COLS * ---( ( foo(-TABLE[1][( Jon )] * ( -37 + ( protect(90.7) ) - ( COLS ) * x ),destroy(-70),Sansa) ) ) * ( TABLE[protect()][x] ) + x,ROWS)) / COLS]][protect(( Arya ),-bar(dog),-( y * COLS ))] - -foo() * Arya) + ( -7 )) * -80 + ( -( --1 - TABLE[--COLS][betray(ROWS)] ) ) ),---Sansa))){
	if(( 1 )){
	foo(( ( Hodor ) ) / COLS,--foo(-( bar(TABLE[-0.68][-( -x )],( -82 ),x) ),rule(( -destroy(ROWS) ),-( COLS ),x),51),--0.48) / ( protect(( --Arya )) )
} else {
	Jon * y;
	Arya -= -0.8 - 7
}
} else {
	if(TABLE[97][betray()]){
	Arya += COLS
} else {
	if(-0.94){
	-0.34;
	y += ROWS
} else {

};
	x /= ( Jon + 760.0529 )
};
	Jon
}
} else {
	dog *= -y * y;
	if(Ygritte){

} else {
	--bar(750.58,betray(betray(rule(bar(-25,-Stark),-destroy(710.9) * TABLE[COLS][-( Hodor )])) + ROWS + ( -1 ),( rule(( -1 )) )),-COLS);
	Arya /= Ygritte;
	-y
}
}
};
	( Ygritte )
}
assert ROWS : "What do we say to the Lord of Death?"
def foo(x){
	( TABLE[protect(rule() - mislead(),-ROWS,mislead(protect(),protect() / ( ( TABLE[ROWS][mislead()] ) + ( -ROWS ) / destroy() ) - ( 1 ) / ( 0.44 )))][TABLE[Arya][( --COLS - x )]] );
	y *= -ROWS
}
def foo(y){
	Hodor;
	Sansa /= ( betray() )
}
def TABLE[TABLE[destroy(Stark)][COLS] + ( -68 - -y )][i] {
	Ygritte += x;
	Stark /= Jon
}
def mislead(Ygritte,Jon,Hodor){
	COLS
}
var Sansa = ( protect(ROWS + foo(foo(ROWS,-bar(83)),730.6669) + mislead(ROWS,-( protect() )) / COLS,( -20 ),dog / -ROWS) - COLS )
var Arya = --54
def protect(y,Ygritte){
	if(bar(( -28 ) * ( Stark ),ROWS)){
	x -= 560.799;
	if(x){
	if(( ROWS )){
	if(-( y / foo(98 * 81,ROWS,x) - ( betray(COLS,( ( -Ygritte ) )) - bar(-61) + -( 21 ) + Sansa ) + ( ( -1 ) ) )){
	if(73){

};
	if(protect(x) - TABLE[--( Jon )][( ( Stark ) - ( -11 ) - Sansa - Stark + -1 ) - 1]){
	( ( ( -0.1 ) ) / dog );
	bar(( ( -1 ) ));
	x *= 0.71
};
	destroy(betray(( Jon ),mislead(--2,TABLE[1][TABLE[mislead() + Ygritte + Hodor][-TABLE[-0.83][COLS] - ( ( -Stark ) / -1 ) - ( Ygritte ) + COLS * ( dog ) * dog * ( y )] * -84])))
} else {
	if(0.12){
	TABLE[bar(bar(mislead(betray(),( ( -340.9 ) ),95 / y)) / -21,rule(destroy(COLS),1),( ROWS ) + bar(protect(dog + foo(-1)) - protect(bar(ROWS / --TABLE[COLS][1],Stark + ( -TABLE[-mislead(( Stark ))][-35] ),( -TABLE[( COLS ) + ROWS][20 + COLS] )) * ( -foo(Arya,1,-36) ),-Jon / ( destroy(( dog * ( ( mislead(Arya * -bar()) ) ) - COLS ),ROWS) ))) + COLS - ( protect(-ROWS * 96) ) + rule(( ROWS ) + ROWS,( protect(-0.71,Arya) ),TABLE[-( -y )][ROWS]))][770.956];
	if(( x )){
	Arya -= ( ROWS * -y * -0.91 )
};
	COLS
} else {
	x -= -Sansa;
	Arya -= ( -17 )
};
	( ( TABLE[COLS][-( -( -1 ) )] / ( foo(destroy(bar(COLS / -( TABLE[Ygritte + 840.71][0] ) / ROWS,bar(TABLE[TABLE[-( y * -Ygritte * --790.215 + -Jon )][-0.78] + 20 * -70 / 1 - -97 * -TABLE[680.863][( 1 )]][Hodor],y)),x),-0.43) ) - foo(x * Stark,protect(24,71,0.53) - protect(y) + TABLE[mislead(( TABLE[Sansa][ROWS] / 97 ),Ygritte)][-0.77]) / -0.52 - TABLE[COLS][ROWS / Hodor] ) )
};
	if(( Hodor )){

}
}
};
	( ( Sansa ) )
} else {
	Stark /= -670.238
};
	-78
}
def bar(Hodor,Ygritte){
	Arya += -TABLE[protect(( TABLE[ROWS][Hodor] ),Ygritte)][foo(mislead(),betray(--530.602))]
}
def TABLE[-COLS][j] {

}
assert mislead(dog) : "Winter is coming"
def TABLE[( mislead(640.65,( protect(( ROWS ),-( rule(x - -0.89) )) ),COLS) / COLS ) - Stark][k] {
	if(Sansa){
	if(--foo()){
	Hodor *= x;
	Ygritte *= --Ygritte + ( COLS ) * y;
	if(betray(-0.99 + --33)){
	dog += -10.1473;
	Ygritte /= 220.5068;
	Arya += -ROWS
} else {
	y /= betray(x)
}
} else {
	COLS;
	if(( ---betray(ROWS - 0.8,TABLE[0.6][-1]) + TABLE[-TABLE[-0.84][Ygritte]][Sansa] * -Stark )){

};
	if(-ROWS){
	if(( ( COLS ) )){
	mislead(460.675);
	destroy(ROWS)
};
	Sansa - ( -0.15 )
} else {
	dog += -TABLE[rule(ROWS,( 0.49 ),-Hodor)][1]
}
};
	if(COLS){
	if(-11){

};
	y /= ( destroy(-870.4998) )
} else {
	( -rule(bar(( y ),-83,( ( y ) )) * mislead()) );
	Arya
};
	if(Jon){
	Jon *= foo(-84,Ygritte)
} else {
	Arya += Jon;
	if(TABLE[mislead()][Ygritte]){
	if(destroy(( -protect(-rule(--ROWS,-( ( 0.76 ) ),--destroy(protect(ROWS),-ROWS + Sansa)),rule(TABLE[( Arya ) * -30][320.0812]),--95) / ( COLS ) ),Sansa - TABLE[-50][( ROWS ) - Ygritte])){
	if(betray()){
	Arya += 77
} else {
	if(-ROWS){
	if(rule(x,bar())){
	Stark /= betray(ROWS,1)
} else {
	Ygritte /= Hodor;
	y -= Ygritte;
	Hodor += Jon
};
	-ROWS * 0.46
} else {
	if(COLS){
	Stark /= ( -mislead() * y + protect(x / 0.09,( TABLE[protect(bar(TABLE[( protect(( dog * x ),( -protect(TABLE[betray(protect(ROWS),Arya)][( bar() )],destroy(TABLE[destroy(foo(TABLE[foo(-TABLE[Hodor][-79 + Jon] + 0.2,ROWS)][Ygritte],ROWS,( destroy() / protect(-( --mislead(-bar(99),Ygritte,( ROWS )) )) )) * foo(-0.63,dog)) + bar(-0.8,rule(mislead(betray(( TABLE[( -0.77 )][protect()] ),( Jon * ( 0.89 ) )))))][-TABLE[( -( betray(( -foo(ROWS) + Stark ),TABLE[ROWS][TABLE[y][0.43] + Jon],rule(dog)) - dog ) ) + COLS][-( ( TABLE[x][COLS] ) )]]) / ( ROWS * COLS + bar(ROWS) ) / --( ( foo(-400.312) - -31 ) ) - x * 0.39 - -0.64) + -0.92 ),mislead(-( -0.7 ))) )][Jon],COLS,--Sansa) / Jon,Sansa)][-36] / ROWS ),46) );
	Jon -= destroy(protect(( TABLE[mislead(rule(),--( betray(protect(TABLE[Sansa][COLS],--COLS,mislead(( ( 92 ) )))) ))][COLS] ),TABLE[21 * 95][dog]),Sansa);
	Stark -= rule(destroy(10.4))
} else {
	-18;
	-760.463
}
};
	if(( ROWS )){
	if(-destroy(---foo(Hodor),mislead(x,TABLE[-mislead(( ( y ) ),( 0.93 ) + COLS)][rule(---0.15,bar(mislead(( -ROWS ),rule(-TABLE[bar() + -0.91 - TABLE[( mislead(rule(Arya)) )][-81] * y * ( -Hodor ) / ( ( 580.0665 ) ) * -Arya][Stark]) / ( ROWS ) - ROWS),ROWS))]))){
	Jon -= ROWS;
	if(-ROWS){
	if(--1){

};
	Stark -= TABLE[80][protect(ROWS,-56 * -6)]
}
} else {
	0.08
};
	if(y){
	if(( 0.96 + 1 )){
	y += Sansa;
	if(0.58){
	--1 + x;
	if(( TABLE[COLS][rule(-0.81,-0.67,-COLS)] )){
	Sansa;
	if(y){
	Hodor *= x;
	if(ROWS){
	Sansa /= -40;
	ROWS;
	if(-1){
	( ( ( TABLE[Arya][-40.8] ) * -dog ) + COLS );
	Arya /= Stark
} else {
	52
}
};
	if(( ROWS )){

} else {

}
} else {
	if(--destroy(-COLS)){
	( betray(( COLS ),-Stark,-Hodor) );
	if(Sansa * -97 / Ygritte){
	-0.45
};
	Sansa -= -0.22
}
}
}
} else {
	x /= Stark;
	Arya /= 0.19
};
	if(( 0.68 )){
	-TABLE[protect(( --Sansa )) * -42][Ygritte];
	( -rule(--0.25,COLS + y) )
} else {
	1;
	Arya
}
};
	( Hodor )
}
} else {
	56;
	bar(ROWS,( dog + ( ( ( ( ( betray(protect(--COLS)) ) ) ) ) ) / Stark ),Hodor + ( 54 )) * ( ( y ) )
};
	Ygritte -= ( -( TABLE[40.717][( -1 )] ) )
};
	-Hodor
} else {
	Arya *= COLS
}
}
}
};
	if(-5){
	if(Hodor){
	Jon *= COLS;
	if(COLS){

};
	( -( -0.32 ) )
} else {
	dog -= Stark
};
	ROWS
};
	if(-COLS){
	if(Sansa){
	if(( -240.98 / bar(COLS,0.4) )){
	( y );
	-0.47
}
} else {
	y += ( ---870.378 )
}
}
}
assert ROWS : "Fear cuts deeper than swords."
var Stark = ( -0.41 )
def protect(Sansa){
	Hodor /= ( COLS )
}
assert -( -destroy() ) + COLS : "One can not simply parse himself"
def foo(x){
	dog *= Arya - ( rule(dog) );
	x /= --dog
}
var dog = COLS
def TABLE[Sansa][i] {
	if(x){
	x += --bar(-( COLS ) * -83,TABLE[TABLE[Stark][Jon]][foo(-0.09,0.89) * -Arya],ROWS);
	if(bar(mislead(-ROWS))){
	x += --( betray(-COLS,0.17,bar(-( -Jon ),Arya,mislead(Arya) - -COLS)) );
	Sansa -= Stark
} else {
	ROWS;
	x -= dog;
	x -= COLS
}
} else {
	if(protect(-1,-TABLE[( Hodor )][TABLE[-dog][( -betray(-( ( 0.26 ) ),foo(-Arya / destroy(dog,ROWS / bar(destroy(Hodor) + -ROWS - Ygritte,1,foo(-( COLS ),( Arya ),( -Sansa ))),rule(( COLS )) * --ROWS / Sansa - betray() / -1 * destroy(Arya,dog - y)) / rule(destroy(( ( rule(mislead(ROWS,Stark) * 0.5 / ( ( -TABLE[rule(-Stark,770.76,-( -49 ))][protect(Ygritte,bar(),( 0.01 ))] ) + -1 * 410.3 * Sansa ) * TABLE[ROWS][( -67 )] - -COLS) ) ),-41,-ROWS - -0.79 * -( -1 )),betray(ROWS + --0.5 / -1 * ROWS,-TABLE[y][destroy(protect(protect(TABLE[COLS][ROWS],Sansa)),Stark,( Hodor - rule() ))])),x)) - --ROWS - foo(--destroy(( mislead(-( -0.34 ),80) ),Hodor,Hodor)) )]],( rule(-27,--Hodor * Jon,destroy(Arya,( mislead(9 * -1) )) + Ygritte) ))){
	y += 54;
	Stark += Hodor
} else {
	-320.766
}
};
	if(( -rule(-240.367) )){

};
	if(bar(betray(COLS,mislead(( ( Ygritte ) * x )) + destroy(foo(COLS,( Hodor ),Arya),43 / -0.76,x) + ( ( 67 ) )),betray(protect(0.14) - ( protect(-x / ROWS * Hodor,Arya,( TABLE[63][bar(0.55,TABLE[TABLE[Ygritte][-930.5]][y + -protect()],-50)] )) )),-protect(COLS))){
	if(Hodor){
	-1 / destroy(-Jon,( -94 ))
};
	if(( Arya - -0.77 )){
	if(betray(( -0.35 ),Stark,Hodor)){
	Sansa -= -( Stark )
} else {
	Stark;
	Stark /= dog;
	Stark -= y
}
} else {
	destroy(1);
	Sansa += rule()
}
}
}
def foo(){
	dog /= Hodor;
	x;
	( -74 )
}
var Ygritte = Stark
def TABLE[24 / ( COLS )][i] {
	if(-20.0734 * Jon){

}
}
var dog = bar()
var Sansa = COLS
def TABLE[-0.54][k] {
	if(-----7 - ( 240.94 ) * -670.4439 / --betray(Jon - -0.96) / -foo(Stark,destroy(Sansa,1)) + -930.4){

};
	Ygritte += -97;
	if(( Stark + ROWS / x )){
	COLS + -protect(76,Stark,protect());
	TABLE[ROWS][ROWS + mislead(-0.25)]
} else {
	x += -( -25 );
	Arya /= Jon / bar(ROWS + COLS / 0,( 41 )) + protect(Jon)
}
}
var Sansa = -( 1 )
def rule(y,dog,y){
	if(--protect(-11,-261) / ( -( -0.22 / -580.1773 ) )){
	if(ROWS){
	Hodor += -920.11 * -91;
	--0.73
};
	4;
	Stark *= rule(Arya,-1 * -COLS)
}
}
var Arya = -950.3
var x = Sansa * 0.53
def TABLE[Ygritte][k] {
	Hodor - betray();
	( ( foo(-1,1) ) )
}
def destroy(Hodor){
	if(( ( 840.4 ) )){
	if(ROWS){
	-1
} else {
	if(ROWS){

} else {
	mislead(-foo(( COLS / ---mislead() ),foo(protect(-( -81 - destroy(destroy() - ( --87 )) * ( -65 - -19 ) ),Ygritte),-rule(Jon + foo(-x + betray() * foo(-68),COLS)),COLS)) * betray(-betray(( TABLE[foo(-44,0.5)][-ROWS] )),-x,-COLS),( -( -0.17 ) ))
};
	Sansa
}
} else {
	Ygritte += ( protect(Jon) )
};
	Sansa *= ( COLS + bar(dog,mislead(-( 1 ),( 35 ))) );
	if(TABLE[TABLE[y][destroy(Arya,-1,Sansa / ( Arya ))]][0.06 * -TABLE[-COLS][rule()]]){
	if(( protect(( -5 ) - ROWS) )){
	TABLE[-protect(TABLE[( COLS )][y],-4)][TABLE[ROWS][0.02]];
	if(-1){
	if(-72){

};
	if(Sansa){
	y *= ( ( Jon ) );
	if(Hodor){
	( ROWS )
}
} else {
	destroy(( -Jon + dog ) / -Jon,-( destroy() ),-destroy(foo(foo(ROWS + ( mislead(---Hodor,( -COLS )) / Sansa * ROWS )) / -TABLE[-y][-bar(destroy(protect(),( COLS ),-0.42),COLS)],TABLE[-34 + 99 * bar(Jon,-780.9507)][COLS],( --dog )),COLS));
	Jon *= ( ( ( 21 ) ) ) * ROWS * -24
}
} else {

};
	if(-ROWS){
	COLS / --foo(( destroy() ),-0.72) / ( ( x ) - -0.63 - ( -36 ) );
	Arya -= ( x );
	if(protect(y)){
	( 30.195 );
	-( ( TABLE[( y )][-( ( 0.38 ) )] ) ) / mislead(90,betray(-0.52,( ( ( --0.89 ) ) ),3) * COLS + ROWS)
} else {

}
} else {
	mislead(COLS)
}
} else {
	Ygritte / rule(-( Hodor ) + -0.66);
	x /= -0.22 - dog
}
}
}
var Hodor = ---0.71 * COLS - protect()
assert ( Jon ) : "What do we say to the Lord of Death?"
def TABLE[440.3][k] {
	Hodor -= ( TABLE[dog + ( bar(---betray()) )][-betray(ROWS,37)] );
	dog += y
}
def TABLE[foo(x)][k] {
	x -= ( COLS );
	( -protect() )
}
var Sansa = ( ROWS )
def TABLE[91][i] {
	Stark *= -COLS;
	TABLE[Jon - Arya][mislead(-35,-39,x)];
	if(( foo(x / -0.17 * -0.69) )){
	if(TABLE[TABLE[( --rule(Sansa) )][Arya]][TABLE[-dog][-( Hodor )]]){
	( --x );
	if(-TABLE[0.67][( -89 )] * -bar(1 - mislead(-mislead(--TABLE[-protect(COLS,( foo(Hodor,COLS * Jon + 78,--TABLE[Hodor][ROWS] + ( Jon )) - ( -1 / foo(-82) + COLS / betray(foo(ROWS),Ygritte) ) ),y)][bar(-1)],rule(protect(--destroy(Ygritte / ROWS,Sansa + TABLE[COLS + Stark / ( ( Hodor ) ) + Jon / TABLE[( 18 ) - Arya / ROWS / --620.311][( ROWS )] - ( 52 )][--Arya * 30 - 0.41])) / COLS),protect(TABLE[dog / destroy()][Ygritte],COLS)) - -1,-protect(foo(Arya),ROWS),mislead(TABLE[( --( -0.42 ) - -Jon ) + Jon - dog][( ( betray(protect(-0.46) - Sansa - destroy(-970.593)) ) )])) / TABLE[bar(( ROWS ),( ( ( Jon ) ) ),-( Ygritte ))][0.21] / Stark / Stark * protect(Hodor,ROWS) + ROWS,betray(y,( --COLS )),COLS) / destroy(-0.32,rule(TABLE[Sansa][-97],bar(-( bar(( mislead(Arya,Hodor) )) ),-bar(mislead(-34,-TABLE[( ( rule(TABLE[( -( -0.1 * -1 / -1 ) - -dog + -( 0.19 ) - ( -27 ) )][( Stark )],-94 * -rule(COLS,ROWS) * -0.53 - -( 0.29 * protect(Hodor,y / ( betray(( Hodor ),( Jon ),( 0.52 )) )) )) / dog ) )][-dog])))),COLS / x)){
	---x;
	-2;
	Hodor += TABLE[ROWS][ROWS]
} else {
	dog -= bar(0.01,0.62,betray(COLS));
	-70
};
	if(-33){
	if(-0.35){

} else {
	x /= ( -1 ) * x;
	( Hodor + ( TABLE[----Jon][( bar(Arya) )] + rule(ROWS) ) )
};
	COLS
} else {
	Jon
}
};
	( -mislead(1) )
}
}
var Arya = foo(Sansa,TABLE[COLS][-( ( ROWS ) )],protect(COLS) * -( x ) * TABLE[COLS][betray() * COLS / ( TABLE[COLS][-Stark] - y / Stark * ( ( COLS ) ) )]) * ( ( mislead(-2,( ROWS )) ) )
assert protect(betray()) : "Fear cuts deeper than swords."
var Sansa = COLS
assert ( ( 58 ) ) + --y : "One can not simply parse himself"
def betray(Stark,Stark){

}
var dog = ROWS
def destroy(x){

}
def TABLE[--( TABLE[-rule(Arya,( -0.43 ) - TABLE[TABLE[-( ( -0.42 ) )][0.38]][x] * Hodor,destroy())][0.93] )][i] {
	Ygritte += -0.92 - ( -protect(-ROWS,-TABLE[ROWS][1] / -( 57 )) ) / TABLE[x][-y] - ROWS - -800.1 + ( dog ) + ( -250.782 ) / ( ( -830.665 ) );
	if(-0.66){
	if(y){
	dog
} else {
	Jon /= protect(COLS)
}
}
}
assert ROWS : "What do we say to the Lord of Death?"
def TABLE[TABLE[( ---protect(Ygritte,protect(COLS,protect()),COLS) )][betray()]][j] {
	-ROWS;
	if(( ROWS )){
	rule(bar(),( ROWS ),( ( rule(y,0.76,( -( COLS ) * ( -( ( x ) / ( -26 ) ) ) )) ) ));
	if(--( ( Arya ) )){
	Ygritte;
	y -= ROWS
} else {
	if(x){
	betray(Sansa);
	26 / TABLE[( -1 )][-rule(--66 + ( -45 ),COLS)]
};
	if(destroy()){
	Hodor
}
};
	if(bar(-protect(destroy(Ygritte - TABLE[foo()][-betray(( y + Hodor )) * -betray(1 * y,-Ygritte - COLS,Sansa)] + ( betray(( betray() )) ) / -19)),( -1 ))){

}
} else {
	( 0.12 )
};
	if(Jon){
	Arya *= -100.209 + protect();
	if(0.42){
	Hodor *= TABLE[COLS][-Stark];
	Jon -= TABLE[( protect(( -960.1 ) / Stark * -( ( -60 ) ),y,-0.21 / ( x )) )][( protect(Stark,ROWS,-1) )]
}
}
}
assert Hodor : "One can not simply parse himself"
assert ( bar(34,dog) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[1][j] {
	Ygritte /= Sansa
}
var x = bar()
def foo(Sansa,y,Stark){
	if(( -COLS ) * -0.88 / ( y )){
	if(Hodor){
	if(-40.9537){
	if(betray(-( TABLE[foo(Arya,( ( --1 ) ))][Sansa] ))){
	---0.49;
	Jon;
	mislead(destroy(( Jon + COLS ) / -TABLE[foo(-1,ROWS)][( 8 )]) + 82,ROWS * -28 * foo(Sansa,-( -mislead(bar(foo(Jon))) )),dog)
} else {

};
	-( 94 );
	Arya /= 21
} else {

};
	dog -= ( betray(-0.74) );
	y *= -0.46
};
	if(( destroy(-420.8402) )){
	if(-Jon){
	if(ROWS){
	24
};
	Arya;
	Stark *= -1
} else {
	foo() - ( -120.317 )
};
	if(( COLS ) + -y - -1 + foo(( -66 )) - ROWS * ( ( --24 / ( -59 ) ) ) * 0.59 / -94 - Arya - -1){
	TABLE[-1][-79]
};
	if(( -0.03 ) - protect(( Arya ),Jon,ROWS)){
	dog *= -0.38;
	if(-16 / ( y )){

} else {
	ROWS;
	if(--rule(0.01,-82 + ( -20 ) * 2 / 0.05 - ( -( mislead(COLS) ) ))){
	dog -= ROWS - y / ( 1 ) / -0.57;
	Stark *= dog
};
	-49 + mislead(-COLS - ( ROWS - -0.07 ))
}
} else {
	dog += ROWS + ROWS;
	if(ROWS){
	650.406;
	if(-890.49){
	if(betray() + Sansa - ( -0.77 ) * 93){

} else {
	Arya *= Jon - -rule(Ygritte,-protect(620.04,y) * --ROWS * -63 + ROWS,--1);
	if(TABLE[-0.69 + x][( ( betray(-34 + mislead(foo(ROWS,betray(destroy(TABLE[( 37 + foo(COLS) + ( ( ( -0.91 + ( Hodor ) ) ) - ROWS ) ) + bar(ROWS,bar(bar(Ygritte),COLS),x)][( betray(bar(( Hodor ),Jon,TABLE[y][COLS]),TABLE[COLS][mislead(-ROWS,( 55 ) + ( -COLS ))]) )],( 0.09 ),mislead()),COLS)))) ) / ( -x ) )]){
	if(Sansa){
	y
};
	Sansa += 0.25;
	dog += ( ( -( -80 ) ) )
} else {
	TABLE[-13][( 0.47 )]
}
}
} else {
	-1;
	( ( TABLE[-foo(COLS,COLS)][foo(-890.295,COLS)] ) ) / destroy()
}
};
	Sansa *= ( Ygritte )
}
} else {
	Arya /= ( mislead(---( Arya )) );
	if(ROWS){
	COLS
}
};
	-940.07
};
	if(-1){
	if(COLS){
	Stark -= Ygritte;
	if(-( ( -rule(ROWS,Stark - TABLE[( x )][TABLE[dog][ROWS]]) / Ygritte ) * -( rule(( Hodor ),-0.15) ) + 84 / 0.45 ) - dog - -( -rule(destroy(--12,-( -0.78 )),-Ygritte) )){
	if(bar(dog,ROWS)){
	if(1){
	Jon -= ( -0.55 );
	y -= TABLE[0.05][-( protect(-0.92,-Arya) )];
	Jon += rule()
} else {
	if(580.32){
	Ygritte /= -78;
	ROWS * --680.788;
	Stark *= -mislead(( 0.49 ),( 93 ),TABLE[Sansa + Stark][foo(-rule(COLS,betray(-Jon,0.73 * -720.24 * COLS + ( dog )),-( ( 1 ) )),ROWS)] + 790.7 / bar())
};
	if(rule(x,bar(270.115))){
	( TABLE[( --( ( Arya ) ) )][Ygritte] );
	if(-y){
	if(-TABLE[0.14][0.22]){
	if(( --ROWS / --790.9981 - ( COLS ) - bar(-mislead()) )){
	x *= -480.124 + bar(( ( -TABLE[-( x - TABLE[x * ( ( -27 ) )][-( destroy(Jon) )] ) - -1][COLS] ) * bar(-0.7) * 48 / -78 ),-25);
	if(( -0.63 )){
	ROWS;
	Arya += destroy(mislead(48,( 0.93 ),TABLE[( 14 )][ROWS]),( ( foo(betray(--x - ( -( TABLE[4][TABLE[COLS][bar(ROWS,COLS)]] ) / ROWS ) / rule(-1,COLS + COLS,-( ( ( foo(ROWS,( ( -66 ) ) * Ygritte) ) ) ) * Hodor * -y * 0.81 / rule(-betray(0.79) * -protect(betray(0.74,ROWS / ( Arya ) / mislead(-Arya,foo()),Arya),COLS),( Stark ),-COLS) - -COLS) / TABLE[( foo(-0.75,Ygritte,-70.89 * COLS) )][Jon] + -1,-x,( -protect(Hodor,COLS,-80.46) )),Ygritte,destroy(0.02,dog)) ) ),-0.41);
	if(ROWS){
	-1;
	if(dog){
	if(mislead(-ROWS,24,COLS) * betray()){
	betray(( -foo(TABLE[ROWS][TABLE[protect()][TABLE[COLS][74]]],COLS) ),mislead(),TABLE[Arya][( ( foo(( rule(foo(-dog,Ygritte),( TABLE[( ( ( ROWS - y ) ) )][( protect(Arya,-protect(),COLS) ) / -180.149] ),Jon) ),-69) ) )]);
	-( ( Arya ) / -0.74 - Jon / ( ( betray(2) ) ) )
} else {
	if(y - ( -( TABLE[-21][foo(---TABLE[-( protect(( Arya ),ROWS) ) * ---betray(dog,Sansa) + ( 0.08 ) + ROWS][destroy(COLS,bar(Hodor,mislead(dog,-protect(0.8,( betray(17) ) - Sansa * protect(ROWS,19) + TABLE[rule()][-11]),15)) * 0.25)],--1) + -27] ) + betray(( -TABLE[( TABLE[ROWS][--( ( Hodor ) ) - -32] + ( -0.66 ) * TABLE[TABLE[-mislead(-1,mislead(( y )))][TABLE[mislead(( ROWS ))][( -protect(TABLE[y][-31 + rule(rule(betray() * ROWS),Arya)]) - protect(COLS) / ROWS * -68 )]]][---0.79] )][COLS] ),foo(),destroy(-( Sansa ))) )){
	if(COLS){

}
} else {
	if(0.27){
	if(bar(mislead(( Hodor )))){
	if(--TABLE[x][TABLE[TABLE[-1][ROWS / TABLE[COLS + TABLE[---TABLE[0.77][-( ( Hodor ) )] + y][Ygritte]][TABLE[-0.29][0.38]]]][( ROWS ) / -Jon * protect()]] * -710.263){
	if(240.0546){
	y -= --0.5;
	x -= --0.18 / Sansa
};
	if(-TABLE[-0.14][0.36] + ROWS - -5){
	y /= ( ROWS );
	dog *= mislead(TABLE[TABLE[( ROWS )][-0.38]][Arya],-71) - x
} else {

}
} else {
	Jon /= ( 0.65 );
	Hodor *= -Sansa
};
	Stark += foo(mislead(),mislead(( ( -Jon ) )) - ( -0.76 * bar(COLS) ),( TABLE[ROWS][--TABLE[-980.874][TABLE[ROWS][-COLS - -( betray(-TABLE[rule(-1)][-protect()],bar(foo(( ROWS ),Sansa - Arya),protect(betray(-28,-1,ROWS),-TABLE[protect(ROWS,1) * -0.24][( protect(-0.89) )]))) ) / -( ( -destroy() / -0.52 / -0.21 * x ) )]]] ))
};
	Jon -= -0.23;
	Arya += ( 740.39 )
};
	Ygritte += ROWS
}
};
	betray(TABLE[Jon][-0.89])
} else {

}
}
} else {
	0.43;
	( COLS - --1 )
}
};
	mislead(-0.3,-betray() + ( 0.85 ) / --TABLE[160.77][--37] / ( 0.82 ) - ( Hodor ),Jon);
	if(( Ygritte )){
	dog += TABLE[Sansa][rule(bar(Jon * ( 0.74 - Hodor * ( destroy(-( -betray(destroy(destroy(ROWS + Stark,-ROWS + -Ygritte) * ( -( destroy(Sansa,( y ) - -1,TABLE[foo(( Hodor ))][-Stark]) ) )),Jon) ) * dog,--41) ) )),-( -dog - ( rule(( TABLE[-bar(foo(),( x ))][( ( 0 ) ) * COLS] ) - betray(COLS,35),ROWS) ) ))]
}
} else {
	COLS;
	if(Jon){
	protect(-( Stark ),( -x - ROWS ));
	if(protect(-mislead(( ( TABLE[-( -0.7 ) + -( foo(-( Jon ),rule(Hodor,COLS) + -protect(( -rule(bar(TABLE[550.035][destroy(betray(-COLS))],COLS / bar(Ygritte)),ROWS) + ( Arya ) ),( Stark ),( Stark ))) )][97] ) ),13,--( COLS - bar(-51 + ( COLS ) * ( Stark + ( ( ---COLS ) ) ),destroy(),Jon) + TABLE[( Hodor )][Hodor] )))){
	if(( COLS )){
	Jon /= betray(-bar(mislead(),-TABLE[0.7][( 42 )],Arya) + ( -80 ) / ( ( -1 ) ) + -30.2) * protect(( protect(y,( TABLE[( protect(---foo(-TABLE[y][dog + -410.1128 * ( -77 )],protect(-( 1 ) + --0.71,( betray() )),-Stark * 1 - ROWS - 45) + mislead()) )][( Ygritte )] )) ) - betray() + TABLE[destroy(bar()) + Hodor * Jon * y * ( ROWS )][betray(Arya,protect(( -34 + ( ROWS ) + Hodor )))],-1 / bar(-83)) / ( ROWS )
} else {
	78;
	y -= -y;
	if(TABLE[( --2 )][protect()]){
	if(-TABLE[betray(( y ) * -23,-10.852 + betray(-ROWS) / -1)][( TABLE[ROWS][-400.059] )]){
	Ygritte *= ( -ROWS );
	ROWS
} else {

};
	if(COLS){
	if(( -900.2719 )){
	-( ( -betray(-foo(-protect(---TABLE[betray(-mislead(( ROWS ),-0.96,x))][( ( Hodor ) )] - -( -0.47 ),( ROWS ))),destroy(( bar(-410.023,-39) + -COLS + ROWS ))) / betray(dog) * destroy() * ( 0.44 ) + mislead(TABLE[( -27 )][( rule(-960.96) + dog )],-( rule(-36,-betray(betray(TABLE[TABLE[ROWS][Sansa]][ROWS / ROWS / -destroy(betray(--( Stark ) + ( -18 ) + ( -( x ) ) / Jon) - destroy(-TABLE[--20][( COLS )] + 86 - TABLE[rule(TABLE[Sansa][-( -0.21 )])][Sansa] / ----bar(Hodor,( y ),betray(bar(( 1 ),ROWS))),0.22))]),( --( TABLE[-( ( COLS ) )][-ROWS] ) ))) ) + betray(y,foo(-Jon - betray(Stark) - COLS / ( -53 ),( protect(-y) ),TABLE[-Arya][Hodor]),x)) / TABLE[530.773 - TABLE[ROWS + -rule(ROWS) + ( x / ( bar(rule(-betray(( --39 ),Arya,-( 0.46 * ( -1 ) * foo(-1) ) / rule()),1,-TABLE[COLS][-0.53] + --630.78),foo(-0.14)) ) )][protect() - Stark]][( Hodor )] * ( --0.08 ) ) )
};
	Sansa *= mislead(TABLE[--1][( ( TABLE[( 1 ) + ROWS][betray(Arya)] ) ) / -1 / bar(ROWS,mislead(y / --mislead(60,y,ROWS),-rule(-foo(bar(COLS,71,-COLS * ( -0.52 )),-Jon) / ( 0 ),bar(( ( ( ROWS ) ) )),-betray(45) - ( ( rule(ROWS,Hodor,-( COLS )) + ( ROWS ) - rule(bar(COLS,Jon),dog) ) )))) - ( mislead(foo(TABLE[-mislead()][dog] * bar(TABLE[0.28][Jon],ROWS) - --93),-220.725) )],y)
}
}
};
	Stark /= -0.97
} else {
	destroy(COLS / -( ( 260.452 ) ),protect(--bar(( TABLE[-0.23 * -destroy(x,-destroy()) + 770.531 - ( COLS )][mislead(( x )) / -1] ))),---700.762)
};
	Arya += foo(( ( TABLE[Jon][rule(foo(-COLS,bar(),---99),y)] ) ),-( -0.22 ),Hodor)
} else {
	Sansa *= 58;
	if(betray(COLS,COLS)){
	if(-dog){
	Arya -= -foo(dog,dog);
	Hodor += --0.18 + ( --1 ) + Sansa
};
	if(-( --foo(TABLE[dog][-0.5] * ( x ),foo(bar(-COLS - rule(-( ( destroy(Stark,Hodor) ) )) / -COLS - -0.8),-Hodor,destroy(ROWS))) )){
	-1
}
} else {
	y += protect(( -910.8 ) * destroy(Sansa,foo(bar(-Hodor))),protect(700.11) - 540.3457 / ROWS,rule(protect(bar(),-bar(),( 1 * -580.7747 + Ygritte ))))
}
}
}
} else {
	Arya += dog;
	if(( ROWS )){
	Jon -= -ROWS;
	ROWS
};
	x -= Hodor
};
	if(TABLE[( dog )][mislead(TABLE[y][-3] - --0.61,betray()) / -destroy(x,mislead(dog))]){
	Stark + foo();
	y
} else {
	( 0.54 ) - betray(Ygritte);
	betray()
}
} else {
	x += mislead(protect(COLS - -TABLE[COLS][-0.83],23,rule() - --COLS),Arya);
	if(( Hodor / Sansa )){
	if(330.48){
	Ygritte *= Jon;
	if(Sansa * ( betray(TABLE[( -1 )][-Arya + -mislead(1,betray(Jon,-( ( mislead() ) )),mislead(( ( bar(ROWS,-rule(mislead(5),( -26 ),foo(-ROWS,-rule(1 * --16)))) + --35 ) ),Jon,Stark - mislead(foo(dog,protect(y)))))]) )){
	Stark -= COLS;
	foo(( 0.82 )) * TABLE[( Stark - COLS )][Stark]
}
} else {
	-( betray(--foo(Arya) / TABLE[0.12 + Arya][-0.24] / mislead(( ( -1 ) )),-370.053) );
	Stark += x
}
} else {

}
}
}
};
	Arya *= COLS / bar()
};
	if(--TABLE[-0.16][x]){
	Hodor *= Hodor - protect(destroy() - 0.09 - 22 * rule(COLS,-COLS) + dog)
}
} else {
	rule(0.03 - -1 - TABLE[bar(TABLE[ROWS][( --Hodor )],-70.309)][COLS] + rule());
	if(-( ROWS )){

}
}
} else {
	if(( -mislead(Jon) * ROWS - destroy(betray()) )){

} else {

};
	y -= -0.24 - Jon;
	( y )
}
}
def TABLE[TABLE[--1][-( ( rule(Sansa) ) )]][j] {

}
assert ( --0.09 ) : "Nothing burns like the cold."
def TABLE[foo(( -1 ))][j] {
	Jon /= -( -rule(COLS) )
}
def TABLE[-1][k] {
	if(-ROWS){
	-37 - -dog / -protect(--COLS * mislead(dog,0.78) + -0.69)
} else {
	Arya -= TABLE[790.84][foo(--dog,-bar(ROWS))];
	x += protect(ROWS,Sansa) + 100
};
	if(( x )){
	dog -= 1 / -63 + -9
} else {
	Arya *= dog;
	if(y){
	Arya += y;
	bar(Arya,--1)
};
	y *= -protect(-1,TABLE[ROWS][( ( Stark ) ) - -TABLE[-( TABLE[-80][600.75] )][Arya] / COLS / TABLE[-650.5][-( Arya ) - ( --rule() ) / bar(Ygritte,rule(( 0.36 ),betray(----58,TABLE[Ygritte][x]) * ( ( -mislead(COLS) ) + rule(--13) / ( -660.315 ) * --y ),-COLS))]])
}
}
def destroy(Jon){
	if(0.42){
	Hodor /= Stark;
	if(-( Ygritte )){
	( -1 )
} else {
	if(y){
	rule();
	Jon += Ygritte * rule(( Stark ) / mislead(--foo())) + TABLE[destroy(ROWS / foo(-15,mislead(Stark,-0.42,-y) / destroy(mislead(dog,destroy(1),-0.73) - rule(COLS + bar(-COLS + protect() - TABLE[( Sansa ) + -ROWS][1] / -bar(),ROWS) + dog,-Stark,-0.75),destroy(-y))) - mislead(-ROWS)) + ( mislead(-1 - ( --Hodor ),-betray(TABLE[--( -COLS )][mislead(betray(3,( mislead(-COLS,y,mislead(980.7,-45)) / -1 * -( Ygritte ) )))])) )][( dog )]
};
	-destroy();
	dog /= -Stark
};
	Sansa -= -49 / -Sansa * dog / dog / ( 0.4 )
};
	( -Arya / Ygritte / ( ( x ) + Sansa ) )
}
var Hodor = betray()
assert ---1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = TABLE[protect(--0.39,0.97 / ( protect(Hodor,Arya,0.6) ) * -0.17 / ROWS + -( COLS ),x)][ROWS]
var dog = -63
assert 0.12 : "Nothing burns like the cold."
def mislead(){
	-betray() / -TABLE[TABLE[-0.56][y] - 0.32 + -ROWS][betray()]
}
assert TABLE[Jon][( Ygritte - x )] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -38 : "Fear cuts deeper than swords."
assert -rule() : "Nothing burns like the cold."
def destroy(Arya,Sansa,Arya){
	TABLE[foo(91,--51 + ROWS)][-protect()];
	if(( destroy(( ( x ) ),-0.33) )){
	-63;
	Ygritte;
	Jon += Stark
}
}
assert COLS : "What do we say to the Lord of Death?"
def foo(Ygritte){
	bar()
}
def betray(Arya){
	Sansa
}
var Stark = Sansa
var Arya = -rule()
assert Sansa * -0.45 * rule(0.11) : "What do we say to the Lord of Death?"
var dog = -1
var Arya = -17
var Stark = protect(bar(foo(( protect(( ROWS ),TABLE[destroy(-( ( --1 ) ))][0.8],ROWS) )),--1) - -x)
def TABLE[COLS][k] {
	Arya += -Jon - Sansa
}
def foo(Arya){
	COLS * TABLE[--1][0.75] + -71;
	if(Jon){
	Hodor
} else {
	if(bar()){
	if(( -0.15 )){
	12;
	-1
} else {
	destroy();
	if(-destroy(( --Hodor ))){
	TABLE[( -dog )][bar(ROWS)];
	if(COLS){
	COLS;
	if(COLS){
	Jon /= -0.47
} else {
	Sansa *= -( -8 );
	rule(Stark,( Arya ));
	Sansa *= rule()
}
};
	Jon *= ( -770.018 )
}
}
};
	dog
}
}
def TABLE[dog - 0.4][k] {
	dog += mislead();
	if(ROWS){
	y -= ( 0.12 );
	if(ROWS){
	destroy(mislead(ROWS,Hodor),( 1 - ( x ) )) + Stark;
	bar(Hodor * COLS,( mislead() ));
	-62
} else {
	if(ROWS){
	if(foo(( ROWS ))){
	if(ROWS){
	if(-1){
	Hodor -= ROWS
};
	ROWS
};
	Sansa += TABLE[-COLS][( betray(--73,x / --0.17) )];
	Arya -= bar(TABLE[COLS][-( Stark ) + foo(-COLS)])
} else {
	Sansa *= y;
	430.65
};
	-0.23;
	Stark
} else {
	if(COLS / -2){
	if(dog){
	x /= -dog - -1 / ( --76 );
	TABLE[-60.24 * ROWS][( 0.86 )]
}
} else {
	if(( -110.78 )){
	if(-330.517){
	Jon;
	Ygritte += -0.92
} else {
	ROWS;
	0.34
}
};
	if(( 1 )){

}
};
	dog *= destroy()
}
}
} else {
	if(87){
	0.64;
	if(--28 + -mislead() * Hodor){
	if(( Ygritte )){
	Arya /= ( ( COLS * 1 ) ) * ROWS
} else {

};
	Hodor -= ( -0.07 );
	if(protect(Arya)){
	if(-TABLE[1][COLS]){

};
	if(( Arya )){
	dog;
	1;
	-TABLE[17 - -60.54][-690.63]
} else {
	if(betray()){
	TABLE[Arya][-foo(Sansa)]
} else {
	if(( -destroy(-( --( ( 1 ) + ( -70 ) ) + -89 * protect(-52,Jon) ),-1,( -Sansa )) )){
	Hodor /= ROWS;
	betray(--0.46 - ( -310.87 ));
	Stark += ROWS
};
	y -= mislead(protect(),-( 0.13 ) - ( -Jon ),-COLS)
};
	Stark *= -0.5
}
} else {

}
}
} else {

};
	Ygritte
}
}
def TABLE[-ROWS][j] {
	ROWS;
	if(destroy(ROWS,16)){
	( bar() )
} else {
	Hodor *= ( protect() )
};
	Ygritte -= ( 0.4 )
}
def betray(dog){

}
def rule(Ygritte){

}
def foo(y,Ygritte){
	Sansa -= Jon
}
def foo(y){
	if(COLS){
	( -0.89 )
};
	if(-0.52 - -65){
	COLS
}
}
var Arya = rule(rule(81 / ROWS) - Jon)
var Stark = -mislead(( dog ) / mislead(--( COLS )),330.187)
def TABLE[TABLE[COLS][1] - foo(( betray(-39,87,mislead()) ),Ygritte)][i] {

}
def rule(x,Arya,x){
	if(rule(--1)){
	dog -= -bar(Hodor);
	if(rule()){
	if(-dog){

} else {
	Sansa *= -Stark - x
};
	betray(destroy(),bar(750.4,foo() * protect(-69,-850.5,rule(--mislead(1)))) - bar(rule(-971,-destroy(Ygritte)),betray(-protect(--Stark,COLS)),0.01),-y + 77)
}
}
}
def TABLE[COLS][j] {
	if(COLS){
	Hodor -= Hodor / TABLE[COLS][TABLE[-0.94][TABLE[TABLE[( destroy(protect(-Arya),Hodor) )][Ygritte + betray(-COLS,Stark) + ( -foo(COLS,Ygritte,-23 * ROWS) )]][COLS]]];
	if(bar(betray(( -rule(Ygritte) ) - Jon,( Ygritte ))) + COLS){
	dog += -( -COLS )
}
} else {
	if(COLS){
	if(0.19){
	Sansa /= y + destroy(COLS,dog,( Arya ) + COLS + -destroy(protect(Ygritte,-mislead(protect(destroy(y,Hodor / 830.59 - foo(Stark,Hodor)) - foo(Hodor,COLS) * 0.19,Arya) + -500.4845 + mislead(destroy(-51,-mislead(( Jon ) / Jon,-( -0.58 ),COLS)),foo(0.97)),( ( -69 ) ))),betray(( -0.19 ))) / 0 / destroy(ROWS / -TABLE[Arya + ( ( --28 / ( rule(dog,( ( y ) )) ) ) ) * Sansa][( -rule() - ROWS * ( protect(( ( Hodor ) )) ) / Stark )]) * Ygritte)
}
} else {
	dog /= ( 0.53 + betray(0.3,Sansa) );
	Jon
}
};
	if(0.57 - ( -1 * COLS )){
	x
} else {

}
}
assert TABLE[( ( x ) )][Sansa] : "Nothing burns like the cold."
def foo(Jon,Jon){
	dog *= ( -betray(TABLE[Stark][dog],( 0.65 )) )
}
assert x : "One can not simply parse himself"
def TABLE[-protect(0.93,-91)][j] {

}
assert TABLE[betray(( ( --y * 0.25 ) ),70)][( Sansa ) * -ROWS - COLS] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = -dog
assert ROWS : "What do we say to the Lord of Death?"
assert ( Sansa ) : "What do we say to the Lord of Death?"
assert ( y ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -0.73 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(){

}
def TABLE[Sansa][i] {
	y -= -Sansa - Ygritte - Hodor;
	Jon *= -150.267;
	( --0.68 )
}
def TABLE[Hodor][i] {
	x += TABLE[( Hodor )][foo(bar(),ROWS) * -72];
	Arya -= protect() - COLS
}
var y = ROWS
def destroy(y){
	if(Stark){
	protect(( bar(destroy(-( ROWS )),ROWS) ),betray(y - Jon + destroy(( -( -1 ) ),Stark),ROWS) - -1 / -0.98 - Hodor);
	Sansa;
	y /= betray(ROWS,COLS)
} else {
	x -= betray(Sansa,destroy(0.19 * mislead(mislead(--( Ygritte * -bar(-20.112) + -0.41 - Jon ),x) * -0.34 - x),protect(88,-820.3 * COLS,( foo(rule(foo(--0.14,( Hodor ),rule(TABLE[--59 - TABLE[-TABLE[-0.94][TABLE[Sansa][( ( Sansa + ( -0.94 - ROWS ) - ( mislead(-( ( --Hodor ) ) + ( 1 * 0.1 ),23,betray()) ) * Ygritte ) - x )] + y]][( foo(( COLS )) )] - --0.66][( --( Stark ) / 5 )] - ( x ),( rule(rule(bar(TABLE[protect(( 0.3 ),protect(( ( Arya ) )))][-COLS]),( ( ---0.37 * TABLE[ROWS][( TABLE[TABLE[TABLE[( 0.76 )][--protect(-0.85 * -( ( Arya - Stark / ( -1 ) ) ) - Sansa + ( Hodor ) + Hodor * destroy(( 27 ),30,ROWS) + -Stark - mislead(TABLE[COLS][-0.09] * TABLE[( TABLE[ROWS][Ygritte] )][Stark],foo(1,( x ) + ( 660.3 )) - ROWS,TABLE[mislead(0.62 / ( ( Arya ) )) * 35][Jon / Jon / ( 72 )])) * ( COLS )]][betray(Jon * ( -470.7 ),ROWS)] - COLS][( ( TABLE[( destroy(bar(x)) + Sansa - ( ( foo(x) ) ) )][( bar(58 * -( -20.71 ) + rule(( -rule() + -1 ),TABLE[mislead(( ( Hodor ) - Hodor * TABLE[TABLE[-destroy()][0.28]][x] / -protect(COLS) ))][betray(bar(TABLE[( -0.07 + ( ( COLS ) ) )][0.81],TABLE[COLS][bar(-( COLS ),bar())],Arya)) / Sansa],Arya),x,-rule(COLS,Jon,-7)) - TABLE[0.21][-( -1 ) - Jon] )] * 0.08 ) )] )] * bar(protect(COLS + rule(ROWS,370.983))) ) / Jon ))) ))),protect(),( ROWS )),-ROWS) ))),-33);
	if(0.43){
	if(bar(destroy(x,--ROWS / -COLS / 0.49 - Ygritte))){

} else {
	( 0.96 )
}
}
}
}
def TABLE[-ROWS][k] {
	( 1 );
	if(y){
	0.89 - ROWS;
	Hodor *= Ygritte;
	if(-53){
	Arya;
	if(-x / Hodor){
	Arya -= TABLE[( Jon )][Jon + ( y * TABLE[62][TABLE[-41 + betray(destroy(( Jon ),--1),Arya,ROWS)][--0.75]] ) * ( ( TABLE[ROWS + -20][COLS] ) / COLS )];
	dog *= ( ( -960.789 ) )
} else {

}
} else {
	if(-1){
	( -0.14 )
};
	x - -36 * ( ( --0.09 - mislead(-1) ) ) - -( protect(destroy(rule(0.49 * Hodor)),1) ) - -x;
	Sansa *= -COLS + -Ygritte + ( destroy(-( x - TABLE[COLS][dog] ),dog) )
}
} else {
	foo(( ( --0.88 / COLS ) ),-1);
	Ygritte -= ROWS
}
}
assert y : "Nothing burns like the cold."
def mislead(dog){
	if(betray(bar(Hodor),-TABLE[Ygritte][-Jon])){
	Arya += Arya
} else {
	Jon *= betray()
}
}
var Jon = Hodor
assert ( mislead() / ROWS ) : "What do we say to the Lord of Death?"
def TABLE[Jon][i] {
	-protect(-65);
	Sansa += x;
	Sansa *= ( TABLE[-35][ROWS] )
}
assert ( -0.83 ) : "One can not simply parse himself"
def betray(Arya){
	dog *= -76;
	if(-( Arya ) + ROWS){
	if(-1){
	-COLS;
	if(betray(93,--21)){

};
	if(( Hodor + betray(protect(Arya,x),y,-0.29) )){

}
} else {

}
};
	( mislead(foo(foo(mislead(0.64,Jon)),-( COLS ),0.3),TABLE[( destroy(COLS,rule(rule(Arya,bar(( Ygritte ),-Jon)),y)) )][0.22]) ) + foo(TABLE[( Sansa )][-0.56 * TABLE[-ROWS][COLS]],0.99)
}
assert -rule(x,Jon) : "Fear cuts deeper than swords."
var y = -----y
var Jon = dog
def rule(Hodor){
	if(foo(( Ygritte ))){

};
	Jon += TABLE[Arya / mislead(mislead() / mislead(Jon,COLS) * ( ( rule() ) ),0.24,87 - rule(COLS,protect(-0.07 - protect(dog) + TABLE[ROWS][rule(-1)],( ( TABLE[0.38][( ROWS )] ) )) / -( ( COLS ) )))][-95]
}
def TABLE[( Hodor )][i] {
	if(4){
	-56;
	mislead(( -29 ))
};
	if(24){
	if(( ( Arya + -0.72 ) )){

} else {
	ROWS
};
	y += TABLE[-0.11][-84] + TABLE[Sansa][mislead(( 1 ),rule(foo(( 0.32 )),Ygritte)) + dog]
} else {
	if(COLS){
	if(COLS){
	y *= 1
};
	Hodor += -0.89;
	( ( -Hodor ) )
} else {
	( ---( Ygritte ) / ( ---COLS ) );
	( -Sansa * 97 - Sansa )
}
}
}
var Hodor = --betray(protect(),( dog ) * ( COLS ) * TABLE[-( -COLS )][TABLE[-71][( -Stark * foo(Jon) / -rule(( ( Arya ) ),destroy(( -Ygritte )),( COLS )) )]] + COLS + ( ( -( Jon ) ) ) + -ROWS) / -640.8 * protect(( 38 ),rule(COLS))
def TABLE[-( ( -0.6 ) )][j] {
	if(COLS){
	if(protect()){
	y;
	if(( dog )){

} else {

};
	if(( 87 )){
	Sansa *= ( 70 / -41 / ( ( -800.297 ) * foo(Hodor,( TABLE[Jon][-bar(89)] ),rule(protect(),Sansa)) / ( ( ( ( -0.27 ) ) ) ) ) - COLS - Stark );
	y += ROWS
} else {
	if(( ( ROWS ) ) * Jon){
	-Arya
} else {
	Stark /= COLS;
	foo(ROWS);
	if(dog){
	Arya *= destroy();
	dog
} else {
	-71
}
};
	0.17;
	Hodor *= ROWS
}
} else {
	if(( ROWS ) * TABLE[( destroy(Stark,78,COLS) )][( y )] - betray()){
	Arya -= -1;
	Sansa *= -protect(( -53 ),TABLE[89 * -TABLE[---98 / --( Stark )][ROWS] + ( COLS )][ROWS],( ( y * -24 ) ) + 15)
} else {
	if(-protect(bar(( COLS ),( betray(-0.73) ) + x),-1)){
	ROWS;
	if(betray(Sansa,destroy())){
	if(foo(-1 + Hodor + ( rule() )) * ( Jon )){
	Hodor /= protect()
};
	if(( -( Arya ) )){
	---TABLE[ROWS][Stark];
	x += betray(-COLS)
} else {
	if(Arya){
	if(--TABLE[ROWS][-75 * COLS] * -89){
	( ( ( TABLE[bar(COLS,1)][mislead()] ) ) )
} else {
	Sansa /= ( COLS ) / -1
};
	Arya *= destroy(-betray(TABLE[foo(0.84,( -2 ))][-0.64]),-1);
	if(Arya){

}
} else {
	Ygritte
};
	Jon /= 1;
	y += ( ( foo() * rule(( -60.021 - ( ( -53 ) ) ),ROWS,( -0.2 )) ) )
}
} else {
	y + destroy(TABLE[-( COLS )][rule(( dog ),( TABLE[--78][mislead(Stark)] - ( -44 ) ),-86 * betray())] / -( 0.4 ),( ( ROWS ) ),( ( ( ROWS ) ) * -ROWS ))
};
	-Hodor
} else {

}
}
};
	COLS;
	if(ROWS){
	if(---48 - 360.5972){
	Stark += y
} else {
	if(93){
	Arya;
	-Stark;
	if(ROWS){
	ROWS * 38 + 0.93 + Sansa * betray(( dog ),COLS);
	if(bar(betray(betray(0.83,Arya)) + ( betray(Jon,-780.057,Jon) ),( COLS ),protect(TABLE[Jon][-45] + ( bar(0.92,TABLE[-45][destroy(( bar(protect(ROWS,ROWS,dog)) ),Stark / 0)],dog) )) + ROWS)){
	if(( ROWS )){

};
	-foo(--1 * 0.47,-95)
}
} else {
	Stark -= rule(foo(protect(Jon,( 0.15 ),y) / ( ROWS + bar(-0.73,( ( foo(Hodor,COLS) ) + -1 ),Stark - ROWS) ) / ( foo(dog,-1) )) - 0.54);
	ROWS
}
}
};
	33 - betray(COLS,Ygritte);
	x /= ( x )
} else {
	Stark += -220.21;
	Sansa += 0.46;
	if(-COLS / 210.5168){

}
}
} else {

};
	if(dog){
	Jon += -x;
	if(Jon){
	Sansa -= ( y )
} else {
	-Sansa;
	if(-mislead(ROWS * -1 / protect(COLS),( ROWS ) / ROWS,protect(destroy(6),Stark)) + -( ( -foo(( -1 )) + -0.91 ) + bar(-protect(Arya,ROWS,-TABLE[360.9][( TABLE[Jon][--TABLE[rule(betray(-TABLE[dog][Ygritte]))][-2] + -880.242] )]) * --TABLE[foo(rule(Stark * ROWS,TABLE[--bar(foo(foo(Sansa * ( ( -Sansa ) ) / Ygritte),COLS,dog))][-Hodor]),COLS,( 0.88 ))][( Arya )] - foo(mislead(( COLS + destroy(dog,TABLE[Jon][( -x / ( dog ) )]) + ROWS * COLS ),( 520.86 ))),ROWS) / bar(betray(( rule(160.9712,( 610.54 )) ),-TABLE[-COLS][-22] - -0.95 + COLS + ( ( ( dog ) + mislead(( ROWS )) ) ),COLS),protect(Sansa,---Arya * Arya,ROWS / ( ( ( -ROWS ) ) ) / TABLE[Jon][-( -1 ) + COLS - Ygritte])) )){

}
}
}
}
def TABLE[( -590.6 )][j] {
	( dog ) / protect(-Ygritte,COLS);
	if(-93){
	Arya -= ROWS + Sansa;
	Sansa -= foo(TABLE[y / 0.03][--( mislead() )]) / dog;
	if(rule(Hodor)){
	( 47 )
}
} else {
	-Hodor * -COLS;
	ROWS;
	if(TABLE[Jon][COLS]){

} else {
	y *= protect(0.97)
}
}
}
assert ( COLS ) : "Nothing burns like the cold."
var Stark = ( --( -1 ) * Stark )
assert Jon : "Winter is coming"
assert ---TABLE[( 0.37 )][-720.793] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Hodor,y){
	dog /= -890.064
}
assert mislead() : "What do we say to the Lord of Death?"
def TABLE[0.87][k] {
	Ygritte;
	if(rule(-TABLE[TABLE[0.34][bar(-dog + ( dog ))]][TABLE[rule(rule(),ROWS,COLS - COLS - foo(-COLS,( Ygritte )))][x / COLS] * y / Jon - destroy(Arya)],ROWS * -Stark)){
	if(33){
	if(-dog){
	Sansa *= Jon;
	Hodor *= ( rule(( ROWS ),-280.2783 / -( TABLE[Hodor][Jon * Jon] - protect(-0.31,-0.3) ) * Ygritte) )
} else {
	-Ygritte / mislead(38);
	COLS;
	if(TABLE[-Jon + ( rule() )][bar(bar(),( -240.94 ) * rule(-x + ( TABLE[betray(mislead() / COLS + --y,-ROWS * protect(ROWS,( COLS )) + 1 + ( ROWS ) - ( ( betray(( -120.42 ) - -1,-ROWS) ) ),protect())][( rule() )] / ( TABLE[Stark][( protect(( y )) )] ) ),( COLS / Stark + TABLE[TABLE[protect()][-0.03 / x] * 0.07][COLS] ),-( -33 )) * 110.863)] - rule(( 0.7 ) / Jon + -y / TABLE[betray()][-dog + protect(( 0.67 ),TABLE[Sansa][ROWS] + dog / 67,( -56 )) + Sansa + -Jon / protect(COLS) / ( ( protect(--bar(rule(TABLE[-COLS][protect(betray(( foo() )),foo(ROWS + ( COLS )))]),( foo(y,dog,ROWS) ) + betray(( -550.33 ),( TABLE[-0.1][mislead()] ))) / ( -destroy() )) ) )] / TABLE[-TABLE[0.54][Jon]][x])){
	-85;
	if(( Sansa )){
	( --Hodor + x ) * ( -1 * x )
};
	if(bar(COLS,-( -1 ) / ROWS + rule(TABLE[Sansa][Arya * ROWS] * destroy(y,TABLE[( rule() )][-Hodor * -28],120.0314),( ROWS ) + bar(( -0.16 )),( 700.628 ) - ROWS) + ( 0.67 ) + -0.3,protect(-Sansa,TABLE[-foo(( 0.13 ),( TABLE[ROWS][betray(protect(-( -Arya ),( 94 / 480.406 )) - protect(destroy(COLS,mislead(0.72),TABLE[-destroy(-80,( Ygritte ) / ROWS)][Hodor]),foo(Ygritte,ROWS,COLS),( --protect(rule(--410.919,COLS,0.65 / TABLE[1][-67] * 0 - COLS),--foo() * -0.25,-bar()) )) + dog - -( ( ( -42 ) ) - 0.76 ),TABLE[x][TABLE[--30.684][--760.4802]])] ) / ( Sansa ))][Hodor]) / destroy(y))){
	ROWS * ( ( Ygritte ) + 28 );
	if(x){

} else {
	Hodor *= protect(-23,Arya);
	if(( ( ( protect(( -0.09 ) + ROWS,( -( ( Sansa ) ) )) ) - TABLE[TABLE[---1 + dog][( -230.94 )]][-destroy()] ) )){
	x -= Sansa
}
}
}
} else {
	y *= COLS - 6;
	if(betray()){
	-44;
	Ygritte /= protect() / 85 + bar(x,-1)
}
}
}
};
	if(( ( -0.65 ) )){
	if(( ( ( -45 ) ) * COLS )){
	mislead(dog * x,Ygritte);
	( x )
}
} else {
	x /= ROWS;
	if(( 0.67 )){
	x *= bar(Jon,ROWS,-83);
	Arya *= ( -mislead(( destroy() ) * ROWS) )
}
};
	protect(protect(),0.35,( ( ( ( bar(mislead(mislead(-Ygritte + ROWS,87,---63),mislead(-( Jon ),y,Ygritte - -1 / -1) * -mislead())) ) ) ) )) * ( ( x ) )
}
}
def TABLE[( Jon )][i] {

}
def TABLE[--1][k] {
	COLS
}
def TABLE[( dog )][j] {
	Sansa += -10.25
}
assert dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = -( destroy() ) * -0.54 / dog * --rule(-1,( ( ----dog / ( ( ( ROWS ) ) ) ) ) * -Hodor) * ROWS
assert x : "One can not simply parse himself"
def TABLE[Hodor][i] {
	Ygritte *= x
}
def TABLE[COLS][j] {
	dog;
	dog += 32;
	Sansa *= protect(-1,-0.85 / --0.76) + ( -y / -5 )
}
var Hodor = ROWS
assert COLS : "Winter is coming"
def betray(y){
	COLS / Stark
}
def TABLE[( ( ROWS ) ) - ( Hodor )][j] {
	if(( -Stark )){
	if(-Ygritte){
	if(( Ygritte )){
	mislead(( -Hodor ) * x / ROWS,destroy(),-rule(COLS));
	Ygritte;
	Hodor += ( ( Sansa ) )
} else {
	if(22){
	if(Sansa){

};
	if(protect()){
	Ygritte /= 1;
	Arya += protect(-destroy() * ROWS,protect(COLS,Stark))
} else {
	Stark;
	if(ROWS){
	if(-y){
	if(( ROWS )){
	if(mislead() + -COLS){
	Jon;
	if(ROWS){
	Hodor *= 0.3;
	dog;
	1
} else {
	if(mislead(TABLE[rule(COLS)][mislead(---Hodor * -bar(Jon,-0.07) + 1,( ( -1 ) ))],--( ( Sansa ) ) * COLS)){
	betray(ROWS,Arya);
	if(-protect(protect(---bar(--95,TABLE[ROWS][-( 1 ) / -900.4 + rule(-1,0.98,-190.5 - bar(ROWS,ROWS))]),-dog)) + -300.38){
	if(( -980.74 )){
	if(-TABLE[destroy(-( -Hodor * foo(-y) * Jon + -1 ) / ROWS / Jon / -92 / COLS,( dog ))][foo(protect(x / Hodor - -2,( -( mislead(protect(-TABLE[-( -TABLE[( Hodor )][x] )][bar(( -ROWS - rule(TABLE[TABLE[-( mislead(-COLS) ) + COLS / -0.12][rule()]][-10.609 * protect(Hodor,TABLE[( -Ygritte )][Hodor])],-( betray(-( -10 - ROWS )) )) ),-1)],-0.01),-300.514) ) )),1)]){
	mislead(Sansa,y);
	Sansa /= ( TABLE[( ( rule() ) ) + -( -mislead(Sansa,-10 + ( --68 * ( ( 54 ) ) ) - ROWS) / TABLE[( 0.25 )][-( betray(Jon) ) * 74] )][1] )
} else {
	Arya -= ( -Arya ) + betray(ROWS,bar(Stark,( Stark ),( ( Sansa ) / Arya )));
	if(COLS){

}
}
};
	Stark
}
}
}
};
	-35 + 0.72 / -92
} else {

};
	if(ROWS){
	Sansa /= ( -7 );
	if(-y){

}
} else {
	1;
	if(( -0.88 ) - 0.72){
	if(Stark){
	if(ROWS){
	if(0.14){
	dog += ROWS
}
} else {
	37 + 740.566;
	if(TABLE[protect(protect(( mislead() )),rule(TABLE[-1][rule(-81)] / ROWS / 44))][-1]){
	( 1 ) * 1 - protect(TABLE[COLS / mislead(TABLE[( -protect(Hodor,-56,ROWS) + destroy(ROWS,mislead(Ygritte),betray(-Arya,( betray(TABLE[( COLS )][protect()] * ( ( rule(foo(-TABLE[betray(foo())][Hodor] - COLS),COLS) ) )) ))) / ( TABLE[( -290 * ( -300.9218 ) * ( ---TABLE[( ( ( TABLE[destroy(58 - 880.5 + ( ( bar(-( mislead(-bar(Ygritte,x),0.93,( --0.17 - -x )) )) ) ))][-0.95 - ROWS] ) ) )][-0.67] * TABLE[-ROWS][-Sansa] ) ) - -rule(Jon)][-61] ) )][bar(( -ROWS ),Hodor / -foo(---COLS + destroy(mislead(),ROWS)) * 0.21) * -( ROWS )])][-450.8]);
	if(( Ygritte ) / 28){
	if(-( ( ROWS + Ygritte ) )){
	-( ROWS ) - 620.226
}
};
	83
}
};
	( dog * ( ( 14 ) + betray(mislead(bar(-( COLS ))),1 * mislead(Ygritte),---COLS - y) * -( -0.65 ) ) + Stark ) + ROWS;
	if(TABLE[TABLE[0.23][Ygritte] / protect(74 / -940.393)][-0.36]){
	y *= rule(--49,1)
} else {
	if(-protect()){

};
	if(Sansa){
	-43;
	if(betray(y) / betray(dog,-( -rule(( ---0.99 / Hodor )) + --0.89 - COLS )) / ( 0.25 ) / -bar(---44 + 0.29,-mislead())){

} else {
	Ygritte += ( ( -mislead(COLS) ) )
};
	Sansa -= -91
} else {
	Stark /= Arya;
	Stark /= dog
};
	0.31
}
} else {
	( mislead(y) + -betray() / TABLE[rule()][betray()] / 1 * Arya )
}
} else {

}
}
} else {
	Stark /= ( 69 );
	y += 72;
	if(0.9 - betray(ROWS,63)){
	dog /= y;
	Ygritte *= -Stark
}
}
}
}
} else {
	ROWS;
	dog += ( foo(protect(( ( ( Stark ) ) )),( COLS ),( --( ( -18 ) ) + TABLE[( Ygritte )][protect(-( -( mislead(ROWS) ) ),mislead(betray(destroy(-1 + COLS - TABLE[COLS][( foo(( -dog )) * Hodor ) + ( TABLE[-1][Sansa] )],( -1 )),ROWS,( foo(-y + ( -rule() ) * 0.73,-ROWS) )),Stark))] )) )
}
}
} else {
	Sansa += y
}
}
}
assert 0.25 : "One can not simply parse himself"
var Stark = ( COLS )
var y = TABLE[( foo(0.16 * ( protect(mislead(Jon,dog,Sansa),dog,( ROWS / TABLE[( -( y ) ) - -460.6][COLS] / ROWS + Arya )) * Sansa - Arya ),TABLE[-32 + COLS][-25] / COLS) )][TABLE[1][protect(bar(ROWS,x - 1 * x),COLS)]]
assert x : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = Hodor
assert -COLS : "What do we say to the Lord of Death?"
var y = ( COLS )
def bar(Ygritte,Stark,y){

}
assert ( 1 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[TABLE[Ygritte * ROWS][( -ROWS )]][k] {
	if(--( destroy() )){
	if(x){
	dog;
	if(-660.6){
	x
}
}
};
	-( COLS )
}
assert protect(-( --79 ) - -y / Sansa * y - --ROWS + ROWS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert COLS : "What do we say to the Lord of Death?"
def protect(Sansa){

}
var Sansa = -destroy(( -0.98 * betray(( -TABLE[Arya][Ygritte + ( 51 )] ),-58) ),x,( ( 760.253 ) ))
def destroy(Hodor){
	if(COLS){
	if(( COLS )){
	if(y){

};
	bar()
}
}
}
var dog = 1
def TABLE[0.57][j] {

}
assert -Jon : "What do we say to the Lord of Death?"
def TABLE[Sansa][i] {

}
assert ---0.53 : "Nothing burns like the cold."
assert Stark : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = protect()
assert TABLE[rule(-0.42,Arya) - TABLE[-0.8][Stark * Ygritte]][14] + Sansa : "Nothing burns like the cold."
assert ROWS : "Winter is coming"
def bar(Sansa){
	if(ROWS){
	Arya *= 950.94
} else {
	Sansa += betray(-270.31 - -( betray(( mislead(( ( ROWS ) ),-destroy(Ygritte,destroy(--dog / ( --( COLS ) - -foo(foo(Sansa,ROWS,rule(Jon)),( --65 )) - -( destroy(-TABLE[-ROWS][-Hodor]) ) - TABLE[-1][-0.05] + -Sansa ),0.27,betray(x + -dog / dog - TABLE[ROWS][--1 + 0.3],46,-1)))) ),-950.37,protect(foo(-0.39,mislead()),x)) ),mislead(rule(TABLE[( COLS )][-( Ygritte ) / 34],ROWS),TABLE[-ROWS][TABLE[( -1 + ROWS )][rule(rule(bar(-0.04,( -26 )) * ROWS),-dog + --77)]],( x )),ROWS);
	Jon;
	if(0.31){
	if(-mislead()){
	if(-( 29 )){
	if(y){
	x
} else {
	if(( bar(Jon) + y )){
	if(foo(rule(mislead()),---Stark,TABLE[COLS][-6])){
	Jon += TABLE[betray(Hodor + 0.17,bar(TABLE[0.54][( 1 )],x,TABLE[-1 / -Jon][-rule() / bar(mislead(-1,( ROWS / Sansa )),mislead(),Jon * protect(y,( Arya )))]))][-protect(850.25,-0.23)];
	COLS;
	if(y + dog){
	if(y){
	-Arya
};
	if(-1){
	if(( -ROWS )){
	Sansa -= --39 - ROWS
} else {
	if(( -75 )){
	if(-0.58){
	if(Stark + 970.535){
	if(bar(-71)){
	if(Sansa){
	if(TABLE[mislead(ROWS)][64]){
	ROWS * -0.65;
	if(ROWS){
	Ygritte += --740.63 / bar(( COLS ) / COLS,( 67 ),-( betray(-0.76) )) / 0.09 - Sansa - -y - y - destroy(-protect(ROWS,( -ROWS )),( TABLE[( 0.17 )][dog] ) - dog) / TABLE[( ( COLS ) )][-dog] - ( bar(COLS / -83) );
	Arya /= -protect()
}
} else {
	if(--( ( -ROWS ) / Jon ) - mislead(-49 + -Sansa,foo()) / ROWS * COLS + --y * -destroy() - protect()){
	if(1){
	if(-1){
	Arya /= COLS
} else {
	110.928;
	if(-27){

} else {
	( Arya )
}
};
	if(( ROWS )){
	COLS;
	Arya /= protect(800.2764 - -COLS * destroy())
} else {

}
};
	-TABLE[( -0.76 )][Jon] + -Ygritte
} else {
	if(( ( -( ROWS ) ) ) - Hodor){
	if(COLS){
	destroy();
	if(( y )){
	if(1){
	0.64
}
}
} else {
	y += 0.82
};
	if(protect(-Stark)){
	x /= ( Jon );
	-0.15
} else {

};
	y += 90
};
	bar(x)
}
};
	TABLE[Arya][( -COLS + x )]
} else {
	Arya += COLS
};
	Ygritte -= -1
} else {
	Hodor /= 130.128;
	if(1){
	if(63){

} else {
	if(ROWS){
	if(-( -51 )){
	if(ROWS){
	if(-9){
	if(Ygritte){
	x += -0.76;
	mislead()
};
	if(( -foo(dog,mislead(( 64 )),Sansa) ) / TABLE[0.71][61]){
	Hodor;
	if(1){
	COLS;
	Jon += Stark
}
};
	Jon -= --0.41
};
	mislead()
} else {

}
} else {

};
	Hodor *= Jon
} else {
	( Arya )
};
	( -Ygritte )
}
} else {
	--ROWS * COLS + mislead(foo(foo(COLS) + Jon - --( Arya * -0.15 ) - ( mislead() ) / -( Ygritte ) / Jon,ROWS));
	if(1){

};
	if(-rule(Jon,-( -0.6 )) - destroy(foo(--( -73 )),---mislead()) + 0.11){
	-64 * -y * TABLE[( mislead(-Ygritte,dog) )][Sansa];
	( TABLE[Ygritte][rule(-0.63) + Arya] )
} else {
	Stark += bar()
}
}
};
	87
};
	Jon /= protect(-110.315,COLS)
} else {
	--( -30 );
	if(-y){
	Stark -= ROWS
};
	-Arya
}
} else {
	Stark /= TABLE[( ROWS )][ROWS / 61]
}
};
	-Ygritte
} else {

}
}
};
	( ROWS );
	if(-480.655){
	if(-( ( COLS ) ) * protect()){

} else {
	if(( ROWS / protect() - TABLE[-58 / Hodor][Hodor] )){

};
	x /= rule()
}
}
} else {

}
};
	-( protect(-COLS,-bar(-91) - destroy(--0.21,740.299 * -0.82),TABLE[Hodor][-Jon]) );
	Jon * -( betray() )
} else {

}
} else {
	if(( Sansa ) + Arya){
	bar(TABLE[rule(( rule(mislead(),-83) ),( ( ROWS ) ),( bar(protect(ROWS,--betray() + ( ( COLS - Sansa ) ) / destroy(0.04,COLS)) * TABLE[Sansa][protect(COLS - ( rule() ),--1000.4824 * Stark)] * Ygritte) ))][TABLE[Ygritte][-TABLE[0.24][( ROWS )] - x / betray(ROWS) * -COLS] * ROWS])
} else {
	ROWS
};
	destroy(-0.75 - -mislead(-0.96,Arya,TABLE[protect(COLS)][-( y ) * -Arya / -1])) / COLS
};
	-380.413
} else {
	if(Hodor){
	if(( Sansa )){
	-x
} else {
	x += -Stark;
	x
};
	ROWS
};
	-( 390.077 ) + ---0.55 * ( Sansa / Stark ) - 57 * protect() + -170.7861 - ( -0.63 ) * -99
}
}
}
def TABLE[-0.96][i] {

}
var Ygritte = -Hodor
def TABLE[mislead(bar(-56 * 0.36,Sansa,( ( -COLS ) ))) / ( ---( mislead(ROWS) ) )][i] {
	if(1){

};
	if(COLS){
	COLS
}
}
def protect(Sansa){
	-( --Arya )
}
assert y : "Nothing burns like the cold."
def TABLE[-360.46 - -TABLE[-Ygritte][-protect()] - -TABLE[Sansa][-dog]][i] {
	dog -= bar(-bar(COLS / Hodor,COLS,---8))
}
def protect(){
	Hodor *= Jon;
	Ygritte /= COLS
}
var y = TABLE[Sansa][-37] / Arya
assert foo(( Stark + TABLE[bar() / protect(-betray(( -Ygritte / 1 * -( x ) ),( 180.18 + rule(( ( ( Stark ) * ROWS ) ),ROWS) )),( COLS * 100.429 ))][-0.96 * -440.9679 - ROWS / mislead(destroy(y - ( foo(TABLE[rule(bar(),destroy(-betray(-0.66),( -Sansa ) / ( -protect(destroy(( Ygritte ),Hodor),( --88 )) ),betray(0.21,( x ))))][1],( ( protect() ) )) * -94 ) / -0.55 * bar(TABLE[( rule(bar(10,Stark),--Jon * Stark,ROWS) )][( TABLE[TABLE[betray(-510.322)][Ygritte]][TABLE[foo(COLS)][-17]] ) / 49]) + -1 / ( ( 37 ) )) * ( ( ( dog + 1 ) ) ) / 0.58 * ( Stark ) - ROWS / Ygritte,740.51)] ),( ( -TABLE[-1][COLS] ) ) / ( TABLE[-78][1 + foo(-1,rule())] ),Hodor) : "Fear cuts deeper than swords."
var Ygritte = ( ( -ROWS / y ) + -betray() ) + 270.702
def mislead(x,Ygritte,Ygritte){
	51;
	-( Sansa ) * -84
}
var y = Arya + -x
assert bar(-870.0065,mislead(),-Ygritte * ROWS * Stark * -30.787 - 520.15) : "Fear cuts deeper than swords."
assert ROWS : "Winter is coming"
def TABLE[destroy()][j] {
	--1;
	-( ( Ygritte / Hodor ) * Stark )
}
def TABLE[-0.07][i] {
	if(ROWS){
	Arya -= ( rule(-Ygritte,( TABLE[( protect(-ROWS) + Arya )][Jon] )) );
	----dog;
	Hodor += betray(( protect() ) / COLS,TABLE[Stark][0.94])
} else {
	if(-TABLE[( 970.93 )][protect(-( Hodor ),( --( mislead(y,x + TABLE[( TABLE[0.36][bar(Sansa,rule(dog,protect(Stark - -52 - 80,rule() + destroy(-790.87))))] - 80 )][ROWS],ROWS) - ROWS - protect(COLS,-( COLS ),( -protect(ROWS,-0.81) )) ) ))]){
	Sansa += ( ROWS )
};
	Hodor /= COLS
}
}
def TABLE[COLS][j] {
	bar(Hodor)
}
def protect(){
	if(-0.43 + ( ( TABLE[Arya][Hodor] ) )){
	if(Arya){
	rule(( 1 ),17);
	COLS;
	if(( ( foo(COLS) ) ) / ROWS){
	Hodor -= bar();
	if(-600.4 * x){
	if(TABLE[foo(( Stark ),-Arya)][( --COLS )]){
	if(-ROWS - COLS / COLS){

};
	TABLE[-80][( ( Hodor ) / foo(--150.2612 / -TABLE[Sansa][-COLS]) )]
}
}
} else {
	x
}
};
	if(900.9){
	if(TABLE[rule(( Sansa * ROWS ),dog)][COLS]){
	if(y){
	if(( Arya + ( ROWS ) ) + TABLE[rule()][ROWS]){
	Jon -= 15
} else {
	( -Sansa ) + foo(foo(),Hodor) + Arya;
	( y );
	( Arya )
};
	if(foo(Ygritte - protect(Stark,( ( -1 ) ) - bar(-0.88) * ( -x )) * -890.6 / protect(-86) * ( TABLE[( Ygritte )][-destroy(-TABLE[-foo(betray(protect(),( bar(TABLE[0.72][Jon] * TABLE[97][y / ( -450.5 ) + 0.98 + foo(TABLE[-0.44 / -0.84][( betray(--betray(53,TABLE[ROWS][bar(y)] + destroy(( 230.087 * --( -TABLE[84 * -3][Stark - -destroy(-0.83,-( ROWS )) / -( foo(( rule(foo(-y,y)) ),ROWS) + ROWS )] * Jon / ( y ) ) ),rule() * -( protect(ROWS / -0.77) ) + -mislead(( TABLE[-1 - Arya][-0.11] * ROWS ) * y,100) / ( y ) / destroy(-660.7561))) + COLS,dog) )],dog + -0.25 + -( destroy(x) ))]) )),-TABLE[x][mislead(( -TABLE[ROWS][COLS] ))]) + protect(TABLE[1 + -( mislead() )][bar()]) - ROWS][43 - destroy(foo(Ygritte),Hodor)] * -Jon / -bar(( 1 * COLS ),mislead(foo(( Stark ),destroy(TABLE[-Ygritte][75],--40 - ( -Hodor * ROWS ) * ROWS),-1))) - ( -0.51 ),y)] ))){
	y *= COLS
} else {
	if(( -dog - ( Jon ) )){
	Arya += -dog
} else {

};
	Ygritte /= -26
}
};
	if(( destroy(-230.1421,destroy()) ) - ROWS){
	if(1 / foo(( 1 ),( betray(( dog + ROWS ),COLS,-( ( -58 ) * COLS ) + dog) )) + ( bar(0.14 - Arya * rule(1,--ROWS),x) )){
	Jon /= --( mislead(destroy()) )
};
	if(( ( betray() ) )){
	Sansa += Stark;
	if(( --betray(TABLE[destroy(Hodor)][5]) / COLS )){
	protect(( 0.51 ))
}
} else {
	-( COLS ) * COLS
};
	if(-bar(COLS,y + COLS * -16 + ( -( 1 ) ) * COLS / Hodor,( Jon ))){
	Stark /= ROWS
} else {
	Arya += Arya
}
}
}
} else {
	if(( bar(( TABLE[( -0.03 )][rule(protect(--26,ROWS,Stark))] ),0.43 + x,790.765) )){
	if(ROWS){
	Stark /= 90.321;
	if(ROWS){
	Hodor /= ( Jon );
	if(0.9){
	rule(-ROWS,-550.7156) / ( Hodor ) + foo(ROWS,Stark) / COLS;
	foo(1);
	mislead(67,destroy())
}
};
	if(( -( ROWS ) )){
	x *= Arya
}
} else {
	dog /= Stark
};
	Stark *= foo()
}
}
}
}
var Stark = --( foo(mislead(Ygritte,-71 / 0.83),Ygritte) )
assert 0.4 : "What do we say to the Lord of Death?"
var Stark = COLS
assert -x : "What do we say to the Lord of Death?"
def TABLE[22][j] {
	dog *= ROWS;
	dog += Jon;
	if(( Stark * 22 ) - dog){

}
}
def TABLE[Hodor][j] {
	if(foo(( -( 0.05 ) ),foo(-x * protect(rule(Jon),-600.66,-990.43) - ( protect(betray(),betray(-mislead(),bar(bar()))) - COLS ),0.12) - -47 - protect(( -0.27 )))){
	if(rule(COLS)){
	Stark -= bar(COLS,betray(-TABLE[4][( 94 )],Stark));
	y -= x
};
	Hodor /= bar(ROWS)
} else {
	dog /= -destroy(--foo(-( Hodor ) + 0.38,-TABLE[rule(-1 + rule() + ( -ROWS - -( 28 ) ),destroy())][( TABLE[foo(TABLE[bar(foo(protect(dog,Stark + COLS,bar(TABLE[ROWS][COLS] / 30.73,Sansa / rule(( -38 ) * ( foo(betray(-830.58,( ROWS )),( 39 )) ) * ( ---( 1 ) ),-( protect(foo(COLS,-Ygritte)) )),-( -49 / mislead(-COLS,Stark / betray(490.739,destroy(1,protect(35,-0.56))) - ( Arya ),-( bar(foo(610.135,destroy(TABLE[-protect() - ( -0.35 )][-46 * -26])),--56) )) ))),mislead() * ROWS,TABLE[Hodor][foo(TABLE[( rule(TABLE[0][840.42],--56 / Hodor,30) )][-TABLE[-TABLE[-270.0612][protect(bar(mislead(--COLS / ( dog ),TABLE[mislead(Sansa,-( y ) + foo(-TABLE[Sansa][foo()] / COLS - ( TABLE[-97][-y] ) * -52,-TABLE[( ( COLS ) ) + -1 - bar()][( ( --95 ) ) - Ygritte]))][TABLE[betray(foo(x / x,Ygritte)) / Ygritte / bar()][510.4919]]) * ( COLS ) - -( COLS )),betray(-betray(protect(TABLE[-TABLE[-0.29][foo(Arya,destroy())]][---( ( -0.15 ) + Sansa )],( foo() - -TABLE[-Arya + ROWS * -120.5174][protect(Stark,ROWS)] ),( Stark )),( ( ( ( -rule() ) ) ) ) / -33 + -3)))]][-0.58]],mislead(0.65,12 - betray(TABLE[TABLE[COLS][rule()]][( -Jon ) * betray(betray(-0.34 + ( betray(( x )) )),( mislead(( betray(COLS,-0.13) ) * destroy(dog * COLS * ( -400.04 ))) ))],Stark),-betray(COLS,94,( y )) - -ROWS) + x)]))][( Hodor )],Hodor,Ygritte)][Ygritte] + --destroy(( ( -0.38 ) ) - Stark + x / ( ( bar(( Jon ),-TABLE[x][-x] * ROWS) ) ) + ( rule(990.9532) * -590.4 + protect(ROWS - foo(ROWS,-1) + ROWS) ),-Ygritte,ROWS) )],ROWS),bar(TABLE[COLS][dog],TABLE[-1][betray()],-0.63 + TABLE[COLS][---COLS / Jon]),-0.68) / -( -destroy(( COLS ),mislead(-1,Hodor,destroy())) );
	( dog );
	foo(( -0.99 ),bar(0.75) + ( -Sansa ),TABLE[( ( ( rule(0.1,970.8184 * x * Jon * Ygritte) - -betray(100.4) / -30.04 ) ) )][Jon / ( ( -610.551 ) )]) + ( ( -1 ) )
};
	( TABLE[Stark][( ROWS )] )
}
def protect(Arya,Hodor){
	-betray(TABLE[protect(TABLE[-Stark][7 * rule(-80)],( -0.09 ))][-24 - ROWS],-930.3734 * TABLE[rule(( TABLE[( -Hodor ) + ( -betray(-93) - TABLE[0.13][( COLS )] ) / 0.39 / -89][COLS] ),-ROWS)][betray()] * --COLS) * -rule(Sansa);
	x /= ROWS;
	dog /= Arya
}
assert -740.3942 : "Winter is coming"
def TABLE[ROWS + TABLE[destroy() - Hodor][1] + -1][j] {
	Sansa += ( ( Stark - -270.6 ) ) * bar(-( 80 ),( -( ( -x ) ) ));
	-970.3 / dog
}
def destroy(x){
	protect(protect(-Sansa) - -( -2 ),Hodor / ( ROWS / ( ROWS / betray(0.86 + ( -( TABLE[TABLE[Sansa][( y )]][mislead(x,( Ygritte ))] - dog ) ),-93,Hodor) ) + ( mislead(-83,ROWS,TABLE[-1][COLS]) ) ))
}
def rule(Sansa,Stark){
	if(Sansa){
	if(-y){
	if(--ROWS + foo(destroy(( rule(-59,--8) )) * -Sansa)){

};
	Jon -= --bar()
} else {
	if(bar(Jon) + rule()){
	x /= ROWS / Stark;
	if(Sansa + TABLE[-12][-x]){
	if(dog){
	COLS - -x
};
	foo(foo(-protect()),0.06,( Sansa ))
} else {

}
}
}
} else {
	Arya -= ( Arya );
	dog /= dog
}
}
def TABLE[Ygritte][j] {
	if(-87){
	( COLS - mislead(420.903 * TABLE[COLS / mislead(--y,ROWS)][Ygritte],Hodor) );
	if(protect(1,-COLS)){
	dog += ( Sansa );
	if(-20.325){
	---Jon;
	( dog ) - --77
};
	x -= bar(-870.05)
};
	Ygritte -= x
};
	Arya;
	if(( Hodor - Hodor )){
	-50;
	foo(y)
}
}
def rule(Arya){

}
var dog = ( mislead(ROWS,y,-240.36) )
def TABLE[-12][i] {

}
def TABLE[3][j] {
	if(-destroy(ROWS,rule(betray(Ygritte + ROWS,-TABLE[( ( -1 ) )][bar(ROWS,y)],( -68 ))))){
	( ( ( COLS ) * TABLE[( Arya / -betray() )][-0.91] ) );
	--x;
	x
} else {
	Sansa += --dog * y - dog;
	if(protect()){
	Arya *= protect(-0.59)
}
};
	-350.7679;
	if(COLS - --destroy(TABLE[TABLE[--( ( bar(-Stark) ) ) * Arya][( foo(-( COLS ),Stark) )]][( -betray(-63,betray(( ( protect(-1 * ( betray() )) ) ))) )],TABLE[-( ROWS ) - ( --ROWS + ( ROWS ) )][--ROWS])){

} else {
	if(--COLS){
	Stark -= Jon * Stark * -protect(COLS,-750.571) - -( rule(COLS) ) + rule(-68);
	Arya *= rule(( betray() * ROWS ))
} else {
	Sansa /= ROWS;
	( --10 / COLS );
	-( -betray(--0.83,( -( ( ( ROWS ) - ( 86 ) ) ) ) + protect(bar(( -Stark ),rule(-( -200.77 ))),15)) ) * 0.45
}
}
}
def protect(y,Sansa){
	( ROWS );
	if(destroy(ROWS) - dog){

} else {
	dog /= ( Sansa );
	Sansa += --( x ) * 77
};
	dog += mislead(( -TABLE[( ( -destroy(( Jon ) + Stark,foo(y)) ) - TABLE[( ROWS )][betray(Jon,rule(Arya,mislead(-( ( 82 ) ),53 - COLS)),TABLE[54][COLS])] )][0.38] + ROWS ),0.36,destroy(x,0.76))
}
def TABLE[-( protect() )][i] {

}
def protect(Stark,x){
	destroy(1 / TABLE[y][( -rule(-68,bar(-TABLE[COLS][protect(COLS,betray(),rule(( protect(-TABLE[-0.42 * ( mislead(rule(ROWS),( Hodor )) * -ROWS - --bar(foo()) ) / TABLE[ROWS][-destroy(-880.138) + -19]][0.26] + ( mislead(destroy(( ( mislead(--0.32 / -0.45) ) * -( ( TABLE[-Stark][bar(Jon) * COLS * ROWS] ) ) / ( 890.6 ) / -( 0.46 ) ),--ROWS * -Hodor),x) ),( Arya / ---Stark )) ),-0.11))]),ROWS) )]) / destroy(--0.97,Ygritte);
	( foo(( ---1 ),betray(bar(-1,ROWS))) );
	Arya
}
def rule(){
	Jon *= -mislead();
	-protect(250.4943)
}
var Sansa = -0.87
def rule(Sansa,Sansa,y){
	if(COLS){
	if(( -0.74 - COLS ) / ( mislead(-TABLE[-Jon][destroy(foo(foo(--TABLE[dog][destroy(-dog,480.8098 * ( y ) / ROWS)])),-( foo(protect(betray(Sansa)),destroy()) ))]) )){
	if(betray(-Ygritte)){
	x *= ( Sansa )
};
	Hodor /= protect()
} else {
	1 + ( bar(bar(Ygritte)) );
	-----COLS;
	Ygritte /= ( COLS )
}
}
}
assert -y : "What do we say to the Lord of Death?"
var Ygritte = Hodor
def TABLE[( ( foo(( -TABLE[Arya][41] ),Hodor) ) ) * -860.095][k] {
	TABLE[-( -1 )][-38]
}
def bar(Ygritte){
	if(( TABLE[rule(-betray(COLS),-betray(Jon)) - Stark + -( destroy(-rule(),-( protect(( protect(Arya / Stark / -betray(-99 + ( ------51 ),0.2,dog)) )) )) / rule(protect(-rule(-3),ROWS),mislead(),x) )][TABLE[-66][( destroy(-rule(),betray(COLS)) )]] )){
	x /= 1 / destroy(foo(Ygritte,52)) + 81 * ROWS * -1;
	x -= TABLE[dog - TABLE[( -destroy(foo(-14,--0.77,0.44)) + ( -Hodor ) )][--( rule(COLS,31) ) / --0.1 * x]][( rule() )]
};
	( ( Arya ) - foo(destroy()) * ---destroy(TABLE[( -( -( betray(-940.1) ) / rule(( -98 ),dog) ) - -1 - -0.85 ) - TABLE[dog][betray(Hodor) - protect(COLS,Ygritte)]][-( Arya ) / Hodor],-bar(-TABLE[( Hodor )][foo(x - ( y ) - -0.73 + -( -rule() ) - ( COLS ),-0.89) + --ROWS])) - -ROWS + ( ( 0.84 ) ) )
}
var Stark = destroy(-42)
def TABLE[Sansa][j] {
	y += ( Jon );
	---dog;
	if(Hodor){
	if(-ROWS){
	if(Stark){
	mislead(x,foo(Ygritte));
	Arya *= ROWS
};
	if(Jon){
	if(Sansa){

} else {

};
	if(TABLE[-COLS][betray(ROWS / -( -580.5 - -340.2747 ))]){

} else {
	if(-Sansa){
	x *= ( ( betray(-0.23,betray(TABLE[( -0.05 )][Ygritte])) ) )
}
}
} else {
	if(destroy(Arya,-36) / COLS){
	if(( bar(( Sansa / --COLS ) - ( ( -TABLE[-COLS / Hodor][mislead()] ) ) + mislead(foo(Jon + TABLE[COLS + TABLE[-0.31][Ygritte] * ROWS + ( COLS )][rule(-43)],-91,-0.33),( TABLE[destroy(40.755)][1] )),( TABLE[( protect(TABLE[--Ygritte][( -87 )],mislead(1,Arya * -830.129 + Sansa),-( mislead(COLS) ) + ( ROWS )) / -45 )][( ROWS )] ),TABLE[ROWS][COLS]) - betray(( --51 ),COLS,-71) )){
	if(-( -( Hodor * 850.76 ) / 0.76 ) + -0.93 / Hodor + 42){
	if(TABLE[-Stark][-35]){
	if(COLS){
	y;
	y -= ( foo(( x / bar(( Sansa ),betray(y)) * x )) );
	Ygritte *= 25
}
}
};
	Stark -= y
}
} else {
	( foo(-mislead(destroy(protect(x),-0.89),Jon,mislead() * COLS + bar(( -0.04 ) + -69,Hodor,( -( 0.1 ) )) / Jon) / 0.45 * rule(( ( 0.54 ) ),ROWS,Arya + foo(-betray(mislead(TABLE[betray(bar(),-590) + Ygritte][destroy(mislead(-36,Arya + betray() * -0.76) - ROWS,-26)],rule(),-1)),Sansa)),COLS) )
};
	if(Arya){
	if(( Stark / -540.6 )){
	if(0.48){
	0.42
};
	Stark += betray(( --( mislead(y,-1) ) - mislead(TABLE[Sansa - Ygritte][1],0.77,Sansa) ),-bar(( ( protect(Ygritte,TABLE[rule(ROWS,--y * ( mislead(0.06) ))][TABLE[COLS][--0.69 / ROWS + Jon]]) ) / ROWS ),( ( TABLE[Jon][( -Hodor )] ) ),-bar(bar() - ( ( foo(Stark / ROWS * -( ( TABLE[protect(-0.27 / ROWS)][-Jon] ) + betray(( -1 ),TABLE[ROWS][--mislead(x - -TABLE[3][ROWS],-bar(( ( -61 ) )),ROWS) - TABLE[destroy(1)][-TABLE[Jon][-mislead(0.66,TABLE[-betray(ROWS,-17,( destroy(( ( -betray(---1) - TABLE[45][TABLE[Arya][COLS]] - ( -0.98 ) ) ),x) ) - Arya * TABLE[( ( -0.75 ) - -92 + COLS )][COLS]) * 250.644 + -650.1002][( rule() )] + TABLE[( -14 )][-Jon - -COLS])] / ( destroy(1) )]]) ) - -290.6,TABLE[Stark][foo(-( TABLE[Sansa][foo()] * mislead(COLS,-destroy(( ROWS ),destroy(-130.87,COLS),Hodor)) + COLS )) + TABLE[( 0.65 )][dog / bar(ROWS,foo(( ( -COLS ) ),Hodor,-Stark) - --1 / COLS,15 * -Stark)]],Jon) ) ) / ( -0.9 - 6 ),COLS,-( -Hodor ))),mislead(foo(betray(),-94) - -0.68,COLS / ( --TABLE[Jon][rule(-ROWS,rule(protect()))] ),ROWS)) + -x
};
	Stark *= 740.168;
	if(71){
	Arya /= TABLE[0.77 - rule(destroy(mislead(destroy(-1,( -bar(( -( destroy(foo(82,160.2105 + 36,( Ygritte ))) * COLS ) ) * ( -( protect(( Sansa ),Jon) ) + ( Jon ) ),-570) ),-bar(destroy()))) / 0.25 + 40.894,( Ygritte ),-( betray() ) / mislead()),rule(( Arya ),( ---1 )),--destroy(TABLE[bar(( -ROWS * protect() ),( foo() ))][dog] * ( ( ( 0.08 * ( COLS ) ) ) ) - 700.5798,dog,COLS))][Stark / Hodor];
	if(Jon){
	Stark += y
}
}
} else {
	Ygritte *= Stark;
	if(( -87 )){
	if(-56){

} else {
	if(bar(--8 + -COLS)){
	0.52;
	dog -= protect()
};
	x - 0.72;
	rule(( ( ( -74 ) ) + 29 - 0.41 + ROWS ) + betray(-COLS,23),( ( dog ) ) * betray(-15 + protect(),Hodor))
};
	Ygritte;
	if(ROWS){
	x -= ( -0.45 / ( ROWS ) )
}
};
	if(y){
	if(( protect(COLS,-1,-TABLE[-( ( -0.35 - ROWS ) )][foo(ROWS * ---200.1474,Arya)]) )){
	-mislead(foo(--( ( COLS ) ) - destroy(( ROWS ) - protect(-protect(TABLE[Stark][ROWS] / ( --Arya + ( ( -Jon ) ) + bar(TABLE[-620.95 * -betray(( Sansa ),( TABLE[betray(ROWS,Ygritte,ROWS)][TABLE[rule(( mislead() ) + -0.39,-x)][( ( COLS ) )]] ),( betray(-1) ))][betray(TABLE[Stark][300.364] - y,( -( Hodor ) ))],x,320.305 + Hodor) ) + 50,COLS + -1))) / --ROWS));
	if(mislead(--foo(destroy(foo(--0.64)) / -COLS - ( destroy(-rule(),( Arya ),-1) + Stark ),foo(--5,ROWS,betray(destroy(( rule(-ROWS + foo() + TABLE[-0.38][mislead(( COLS ))] + Hodor) )),COLS))),dog + bar(dog,destroy(-360.55,-0.12),( -Sansa )))){
	Sansa -= mislead(protect(bar(COLS,( COLS )) - ROWS,0.5),-0.02,TABLE[y][-0.03]) * ( Stark );
	Ygritte /= rule(--Hodor - Ygritte,94);
	-52
}
}
} else {
	COLS
}
};
	if(-( Stark )){
	x *= ---32
} else {
	-( -0.96 ) / ( destroy(COLS,0.57 - -860.77) );
	if(dog){
	Sansa -= --210.4
}
}
}
} else {
	Hodor += betray(Sansa,-Arya,-Hodor)
};
	if(destroy()){

} else {

}
}
}
def TABLE[--940.1124][j] {
	Hodor *= TABLE[( TABLE[rule(bar(( ROWS ),( -( TABLE[COLS][-1 / ( bar() ) - TABLE[Sansa][protect(COLS,rule(ROWS,( protect(59,TABLE[--Sansa][-foo() / mislead(-62,destroy())]) )),betray(260.24,Stark,-TABLE[ROWS][COLS]))] + rule(destroy(Arya / ( Stark ),TABLE[0.63][-18],( TABLE[ROWS][-( mislead(COLS - betray(-Sansa / ( Jon )),Sansa) ) - Sansa] ) - foo(-0.25)),-ROWS)] ) )))][( -1 )] / rule(COLS,-( Sansa * 81 ) / COLS) + Hodor )][( ( -0.87 ) )]
}
def TABLE[--920.05 + Hodor][j] {
	rule(41,ROWS);
	Jon /= rule();
	if(76){
	if(-destroy(foo(( ( dog ) ) - ( ( COLS ) + ( dog ) * -y - --0.79 ),Ygritte,foo()),COLS,foo()) / 98){
	if(Ygritte){
	Arya *= -30
};
	-( ( ( ( Arya ) + protect(-destroy() / ( ( 0.74 ) )) / ROWS - -ROWS * -1 ) - ( ( foo(1) ) ) + Arya / Sansa ) ) - foo(betray(y,TABLE[bar(0.24)][( Stark )] + betray(COLS,bar(( rule() ),( Arya ))),-COLS) + x) + ( -0.1 )
} else {
	if(COLS){
	bar(Arya,-ROWS);
	( Arya )
};
	Hodor /= Arya
}
} else {
	if(bar(Sansa,foo(( Ygritte ),Arya))){
	Jon -= destroy()
}
}
}
def protect(){
	Jon /= x;
	if(( ( 0.49 ) )){
	if(( protect(COLS) ) / -62 / TABLE[( -mislead(-1,-( Hodor ),( -0.79 )) )][-( TABLE[Hodor * --rule(Arya) - ( -rule(COLS) )][COLS] )]){
	y -= COLS
};
	if(( mislead() )){
	y += TABLE[--1][( 80.93 ) + -( ( TABLE[-betray(COLS)][Ygritte] ) )]
} else {

}
} else {
	if(-( Arya )){
	Sansa /= dog;
	Stark /= betray(TABLE[-0.12][bar(( ROWS / dog ))] / ( -TABLE[( ROWS )][-95] ),( ( --mislead(77) ) ),( 70 / ( foo(TABLE[Sansa][0.88],( -x ) - 55) ) / foo(( 1 )) ));
	dog -= Ygritte
} else {

}
}
}
assert ( protect(( bar(-22,( TABLE[Ygritte][Stark] ),-16 + -dog - mislead(--0.63,betray(( bar(-68,10) ),( dog / -680.7 ))) * ( rule(-Jon,-19) ) / 50.5 + betray(1) * ( TABLE[-protect(-ROWS / -protect(Ygritte),Arya)][y] )) ) * Hodor) ) - 78 : "One can not simply parse himself"
def TABLE[Sansa][k] {
	if(-0.3){
	Jon
};
	x -= -1
}
def TABLE[dog][k] {
	if(( Hodor ) * x){

} else {
	COLS * -protect();
	if(0.26){
	if(-ROWS - ( TABLE[-Stark][foo(protect(betray(),-0.03),Hodor)] )){

}
} else {
	y += foo(63);
	Stark /= destroy(Sansa);
	Sansa
};
	if(bar(-0.15,-COLS / ( ( ( rule(rule(Sansa)) ) ) ) * ( destroy(Hodor,( ( ROWS ) )) / ( 1 ) - rule(COLS - ( COLS ) + mislead(ROWS)) ) - COLS,1 * ( --45 ) - destroy(COLS,-19)) * protect()){
	-0.18;
	if(ROWS){

} else {

}
}
};
	if(COLS / destroy(1)){
	if(-( ( ---1 * ROWS / ( ( -dog + ROWS ) ) ) ) + betray(--( COLS ))){
	destroy(Ygritte * x)
};
	Ygritte /= ( TABLE[TABLE[( TABLE[bar()][-1] )][COLS]][TABLE[dog][-( --COLS - --Jon )]] * -x )
} else {
	Sansa += -1;
	Sansa *= -dog
}
}
def TABLE[-91][k] {
	if(TABLE[ROWS][( ( 0.65 / Stark ) )]){
	if(( 92 )){
	( 970.031 );
	Jon /= -0.45;
	0.88
};
	1;
	( ( ROWS ) ) * ( COLS ) / Ygritte + ( -( -Sansa ) - -foo(-0.47,( ( ---( protect(ROWS,dog,-0.17) ) ) )) )
}
}
var Arya = COLS
var Ygritte = ROWS
def TABLE[Jon][i] {
	if(( -0.63 )){
	if(Hodor){

} else {
	Jon += TABLE[( ( ( bar(-Hodor,Sansa,-0.62) ) ) ) + Hodor][1];
	( -79 );
	if(( -Stark )){
	foo(71 * COLS,y,COLS) / COLS
} else {
	if(destroy(-0.01,-x * destroy(-( -710.211 ),y,( -1 ) / Arya) + 600.5081)){
	Arya;
	if(77){
	dog -= Stark + ( COLS )
};
	if(0.4 / foo(TABLE[COLS][-0.6] + ( bar() )) / -1){
	if(x){
	Hodor /= rule(1);
	COLS
}
} else {
	ROWS;
	if(-75 / -1){
	---foo(Arya)
}
}
} else {
	( y )
}
}
};
	dog
} else {
	y;
	-810.43;
	Stark /= -93
}
}
def protect(Arya,Stark){
	if(( -COLS - 90.97 )){
	--1 / bar(foo(TABLE[Ygritte][-foo(TABLE[-( y )][-( -0.54 ) * -( -rule(TABLE[-13][Sansa]) )])]),Sansa);
	if(Ygritte * ( dog )){

} else {
	x -= 1 + mislead(-1)
}
};
	( ( ROWS ) * betray() + --( ( ROWS ) ) )
}
assert foo(-48) : "Nothing burns like the cold."
var Jon = ( TABLE[mislead(96,-ROWS)][-75] )
def TABLE[( -ROWS )][j] {
	( x );
	Ygritte *= 240.92
}
def TABLE[rule(TABLE[ROWS / Hodor][x])][k] {
	45 + mislead(protect(-22,rule(( 350.47 ))),Hodor);
	y += ( ( -670.85 ) )
}
assert ( --0.03 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(y){

}
assert -TABLE[-0.23 / --1 + Arya][betray(-1 + ROWS)] : "Winter is coming"
def mislead(Arya,Arya){
	if(mislead(( 0.07 ))){
	foo(destroy(38),TABLE[betray(Hodor)][COLS / TABLE[-destroy(Sansa,( Jon ))][-83] - -( TABLE[destroy(23,1)][-COLS] )]);
	if(betray(71)){
	if(bar(-1 - -foo(-( ROWS ),TABLE[mislead(Sansa)][Stark] * Jon) * ( ( ROWS ) * protect() - rule() - COLS * ( 1 / ( COLS ) - Jon ) / -Ygritte + TABLE[( -TABLE[-0.64][TABLE[Hodor][COLS + COLS]] )][Arya] ) * --1 * --TABLE[-( TABLE[Jon][foo()] )][( Stark )],COLS,-40.88)){

}
} else {
	if(400.607){
	-0.59;
	0.07
} else {
	Arya -= 78;
	x -= bar(-Jon,Hodor);
	y *= -1
}
}
}
}
var Hodor = 0.81
def protect(Stark,Ygritte){
	--( 23 ) * COLS;
	Sansa -= x
}
assert ( Jon ) : "Nothing burns like the cold."
var Hodor = 92
def betray(Stark,Stark,Jon){
	-protect(COLS,-dog);
	Ygritte;
	Ygritte += -x
}
def foo(Hodor,dog){
	if(-0.46){
	bar(-bar(bar(Arya,Arya),COLS),( Sansa ) + ( --240 / rule(bar(),COLS) * TABLE[( destroy(--TABLE[betray(0.17)][4] + -( -0.85 ) * -1,x,y) ) * foo(( 31 ),rule(COLS),ROWS) + COLS * -380.5958 + Ygritte][( -bar(mislead(mislead(1,-17))) )] ),( bar(COLS,ROWS,ROWS) ))
};
	destroy(66 - -52) + bar(-( Sansa + destroy(Stark,130.3,( 440.751 / COLS )) )) + ( ( ( ( --COLS / TABLE[mislead(-50.05,-TABLE[( -0.8 )][bar(rule(mislead(Arya - Jon,x * rule(),( ( TABLE[protect(Jon,bar(bar(),foo(Ygritte,-350.2)),COLS)][TABLE[-COLS][bar(0.24,-160.5198)]] ) )),COLS + Jon))])][( 97 )] - Ygritte + -Sansa ) ) * COLS ) ) + Jon - ROWS;
	Sansa *= -( y )
}
def destroy(Jon,Jon){

}
def betray(x,Jon,y){
	if(( bar(TABLE[ROWS][Arya]) )){
	y / ( 0.29 ) / -19;
	-36;
	betray(-TABLE[TABLE[( ( -( ----( TABLE[-bar(ROWS)][( ( TABLE[( rule(dog) )][( -0.17 )] ) )] ) + 0.35 * mislead(rule(ROWS * ROWS,( ( ( rule(Sansa,-Ygritte) ) ) ),bar(91,--destroy(20) * ( ( Stark ) )))) * -Ygritte ) - ( ( dog ) ) ) ) / ROWS][protect()]][ROWS]) - Jon
}
}
def betray(Ygritte,Jon,dog){

}
def rule(y,Arya){
	COLS;
	betray(Sansa,x)
}
def foo(Stark,dog){
	x
}
assert x : "One can not simply parse himself"
def protect(dog,x){
	Ygritte -= Hodor;
	if(TABLE[-660.7][TABLE[Hodor][1]]){
	if(COLS){

};
	bar(( 710.6 ),Sansa);
	protect()
};
	rule(Arya * ( 0.36 + y ),( COLS - Stark ),-57 / ROWS) * -0.07
}
def TABLE[-0.92][i] {
	x *= ( y )
}
var Jon = y
def TABLE[TABLE[--79][-950.7715]][k] {
	-Ygritte
}
def TABLE[x][j] {
	x
}
assert -Arya / -98 - Sansa - ( ( -ROWS ) ) : "Winter is coming"
def TABLE[Hodor][k] {
	if(( rule(COLS,y) )){
	y -= Stark;
	TABLE[( ( TABLE[-27][( -0.41 )] ) )][-1 * ROWS - COLS - --foo(destroy(0.09,Arya / ( -0.18 )),ROWS / -28 - -Ygritte)]
} else {
	if(x){

} else {

}
}
}
var Stark = -96
def TABLE[mislead(TABLE[TABLE[ROWS][-foo(1,ROWS)]][Sansa],Ygritte,( bar(920.79 / -0.6 - 89 / ( Arya * TABLE[( COLS )][betray(protect(COLS,ROWS),ROWS) / ( Jon )] - 0.72 ) - rule(( ( foo(mislead(foo(TABLE[foo(TABLE[230.044][( Hodor - foo(( TABLE[-ROWS][--protect(-protect(foo(( ( -( -9 ) ) ),y),x),91)] ) - ( ( Stark ) ),rule(ROWS,COLS),destroy(( mislead(Arya) ) * -0.95)) * ( mislead(TABLE[TABLE[140.272][-( 0.98 )] - -dog][-TABLE[-TABLE[COLS + --0.14][Hodor]][TABLE[-0.57 - -1][( Jon )] - ( -670.36 )]],bar() - 0.25,0.31) ) )],ROWS)][TABLE[0.71][--( Arya )]] * COLS))) ) - -Arya + betray(( Sansa ) + 1 * --( foo() )) ),0.43)) ))][j] {
	if(TABLE[y][Stark]){

};
	if(TABLE[-TABLE[ROWS * protect(destroy(Hodor),protect(73,betray(---Hodor,COLS)))][-0.97]][( ( protect(destroy(-destroy(-( -93 ),-COLS / 0.41 * TABLE[-( dog )][( ( ROWS ) )]) * ( protect(ROWS,-TABLE[( -mislead(destroy(( bar(-ROWS) )),--35 - -56,( -Arya ) - -0.72) )][Sansa] * bar(TABLE[COLS][-mislead(foo(( ( Sansa / -( foo(320.527,rule(-( COLS - COLS ),mislead(( Hodor ),Jon))) ) ) ),-0.97),0)],ROWS - ( -Arya ) * ( Sansa ),--foo(-65) - ROWS) + ( --0.66 ) * protect(mislead(( -260.9005 ),Jon * COLS),Ygritte) * ( foo(TABLE[250.1][rule(-x,Sansa,--67) + -( TABLE[0.16][-( Sansa )] )]) ) / ( ( COLS ) ) - COLS / ( destroy(foo(190.6),betray(Stark,foo(-y))) ),ROWS) - ( Arya ) ) - Hodor + -Sansa,-TABLE[0.58][--bar(COLS,Arya)],COLS),rule(COLS,foo(( -betray(-Ygritte,Arya) ) / ( mislead(y) ) - ROWS))) ) )]){
	( -Hodor );
	if(( --y )){
	if(--1){

};
	y += betray()
}
};
	dog -= -1 - Hodor
}
def TABLE[18][i] {

}
def foo(Ygritte,Stark){
	if(Ygritte){

} else {
	--bar(y) / -0.44;
	if(( ( Jon ) )){
	if(x - protect(-1 - ( -0.26 ),--55,-Ygritte * -0.04)){
	if(--44){
	COLS;
	if(( COLS )){
	0.9 * ROWS
} else {

};
	if(mislead(( mislead(( betray() )) ),y)){
	foo(-( 0.41 )) - Hodor;
	x += rule()
}
} else {
	if(-Arya){

};
	y -= -1
}
} else {
	( -17 );
	x *= mislead(1,-36);
	if(( -1 )){
	if(( -Jon ) * 0.93){
	Arya += -COLS
} else {
	-30;
	dog -= ( -COLS - 42 );
	if(COLS){
	1;
	if(betray()){

} else {

};
	( ----48 )
} else {
	rule(( -rule(--1) - ( 88 - protect(( dog + COLS - Jon ),TABLE[-60][--78]) * -33 ) * y ) + 0.55);
	Hodor /= Ygritte
}
}
}
};
	Stark /= Hodor;
	if(0.85){
	-0.87 / TABLE[protect(( ( Ygritte ) ) * betray(-dog) / -89)][COLS];
	bar(( bar(foo(TABLE[Hodor][-Sansa],x),COLS,0.94) + ROWS ) + -0.23,-( COLS ))
}
}
};
	0.14
}
var Stark = ( -COLS )
def rule(Arya){

}
assert TABLE[TABLE[-( ( -1 ) ) - ( ( Sansa ) )][--( TABLE[ROWS][COLS] ) + ROWS / ROWS / x + Ygritte]][( protect() )] : "Nothing burns like the cold."
assert ROWS : "Fear cuts deeper than swords."
var Sansa = --TABLE[-80][Ygritte]
def bar(Hodor,y,Ygritte){
	Ygritte += -x
}
def TABLE[-Stark + ( dog )][i] {
	( --690.616 );
	if(Arya){
	if(0.74){
	Stark -= destroy(ROWS)
} else {
	if(--( ( ( betray(0.26,dog) ) ) )){
	Sansa;
	dog /= ( --COLS ) * Arya
};
	if(dog){
	( dog )
}
};
	if(protect(bar(foo(Sansa)),-rule())){
	Hodor *= -Sansa
}
} else {
	y -= Sansa * Stark
};
	Sansa *= betray(Sansa / ( betray() ))
}
assert foo() : "Nothing burns like the cold."
def protect(Sansa,Jon){
	if(-rule(rule(mislead(-1,( ROWS ))))){

};
	TABLE[( betray(Stark) )][dog];
	Arya / ROWS
}
def destroy(){
	if(( ROWS )){
	dog *= rule(-COLS);
	( dog ) * ( protect(--0.9,rule(( ----95 + -670.493 / ROWS ))) );
	-Stark
} else {
	Jon += -0.56
}
}
assert 77 : "Nothing burns like the cold."
def TABLE[( rule() )][i] {
	if(----betray(bar(69 * TABLE[-1][Stark] + -TABLE[Stark][COLS],foo(-83)))){
	x
} else {
	ROWS;
	if(y){

} else {

}
}
}
assert COLS : "Nothing burns like the cold."
var x = mislead()
def foo(Ygritte){
	TABLE[COLS][--500.964];
	betray(foo());
	( rule(( ( 0.78 ) )) * -84 - ( -1 + x * Stark ) )
}
assert mislead(-destroy(TABLE[( 6 )][( Arya ) * ( bar() ) - -Ygritte] / Ygritte,TABLE[( ( -TABLE[betray()][dog] ) ) + y * -0.52 - bar(Arya,y,Sansa) - -foo(-( destroy(Arya,-1) )) + bar(TABLE[betray(0.59,-0.94)][betray(Jon,-1,y)],foo(-COLS - protect(-0.49,( -1 )),destroy(Hodor)),ROWS) + TABLE[bar(COLS * ( 0.79 + x ),--mislead(COLS),COLS)][Jon] - Ygritte][68 + mislead(Stark,66)])) : "Nothing burns like the cold."
assert -430.152 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[COLS][j] {
	rule(foo(Hodor,( ---dog ) / bar()));
	dog += COLS
}
assert ( betray(0.86,COLS) ) : "What do we say to the Lord of Death?"
def rule(Jon,Hodor,Ygritte){
	Arya /= ( ( ROWS ) )
}
def mislead(x,dog){
	Sansa *= ( -protect(( -COLS ),COLS,Jon) );
	if(Ygritte){

}
}
assert -43 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(x){
	if(Arya){
	Sansa -= -ROWS;
	if(-destroy() / ( -ROWS ) / --ROWS * protect(44)){
	if(--0.39 - foo(y,-Jon - -y + TABLE[betray(0.58)][13],destroy(( 880.654 ),63,ROWS)) * -640.997 * ROWS + -0.59 / -y){
	-foo(-ROWS)
};
	Arya -= Arya - -94
};
	ROWS
} else {
	Sansa += COLS
};
	if(-( 0.79 )){
	( 0.37 )
}
}
var dog = TABLE[ROWS][bar()]
def TABLE[-13 * 55][i] {
	if(COLS){
	-0.49;
	( bar(-66) ) / Ygritte;
	if(( destroy() )){
	if(bar()){
	Arya /= COLS
} else {
	Stark * y;
	if(-foo()){
	Sansa *= -20 * ROWS
} else {
	Sansa;
	Arya -= destroy(-( -650.7492 ),TABLE[( 0.21 )][betray(bar(dog,Sansa,COLS / mislead(( ( -Hodor * -1 / --TABLE[Arya][( 0.8 )] * --72 - COLS ) )) / ( ROWS / -COLS - Ygritte - 23 + ROWS - 10.256 )))] + -0.12 - TABLE[( -x ) / dog][310.716])
};
	if(Arya){

}
}
}
} else {
	dog;
	-dog - protect(Hodor,-Arya)
}
}
def bar(Arya,Arya){

}
def TABLE[-( -1 )][k] {
	x /= -( -0.5 );
	if(destroy(TABLE[Ygritte][-Sansa + --1 * -Jon * COLS])){
	if(x){
	( ( -Ygritte ) );
	if(x / -COLS){
	y *= Stark * betray(Hodor) / Ygritte + -13;
	Ygritte /= ( destroy(Hodor,( --61 / x )) )
};
	Ygritte -= protect(destroy())
} else {
	if(( Arya )){
	if(Hodor){
	if(betray(Hodor,COLS) - -COLS){
	if(--13){

} else {
	if(Ygritte){
	x -= ( foo(1) ) - ROWS;
	if(( ( ( protect(440.74,-0.49,betray(( dog - ROWS ))) ) + ( rule() ) ) * ( -99 ) )){
	Sansa += -0.22 - ROWS;
	-( -44 )
}
} else {
	if(-35){
	betray(y)
} else {
	Sansa *= -1
};
	if(COLS){
	y *= -29 + 0.2 - --COLS * -COLS;
	COLS
} else {

}
}
};
	Ygritte /= ROWS
} else {
	-( dog ) - -0.39;
	Arya /= COLS
}
} else {
	-TABLE[-0.63 - -1][COLS] * -1 / --0.51;
	if(-1 * COLS / COLS / dog){
	y *= --( x )
}
};
	dog -= ( COLS - -0.77 / ( -( TABLE[TABLE[protect(destroy(ROWS),-TABLE[--550.42 * -0.27][TABLE[-Arya - ( -Ygritte )][0.19] / Arya])][-Sansa]][--dog - dog * ( rule() * dog )] ) + -betray(--bar(x,22 - COLS - ROWS / -( bar(( ( TABLE[Sansa - Arya][( TABLE[y][---protect(destroy(foo(TABLE[x][foo()]),Hodor),--740.9,0.37) / betray(-foo(-68 - ( 0.98 ) / 1,Sansa)) / ( ---1 / Ygritte )] )] ) ) - -( foo(1,( x ),( ( Arya ) ) - -y / ROWS * ( 320.027 )) ),( -rule(TABLE[( -ROWS )][-0.94],ROWS) ) + Arya * TABLE[TABLE[( bar(TABLE[Arya][-ROWS * Hodor],-dog) )][TABLE[( ( -( betray(dog) ) ) )][Sansa]] + ( -1 ) * -( ( ( -1 ) ) )][TABLE[Sansa][( ROWS )]] - -( Ygritte ) - ( COLS )) )) * ROWS) + -0.77 ) - Jon )
};
	if(-53 * -230.396 - Stark){
	if(dog){
	Arya -= destroy()
} else {
	x *= COLS;
	( --( betray(ROWS) ) )
};
	( mislead(Arya,destroy(( mislead(-0.66) ),-930.843) / Ygritte - -95 * betray(TABLE[( COLS )][( -( 0.3 ) / ( bar(TABLE[Stark][-55 + Stark]) ) )])) ) * Sansa
};
	--1 + -0.81
};
	Ygritte += COLS
}
}
def TABLE[mislead(( bar(620.576) ),x + ( -( -1 ) / ( ( -1 ) ) )) - ( COLS )][i] {
	if(y){
	if(ROWS){
	betray(1,foo(( -Jon ),rule(bar() * 0.46 + -0.11,( -( ROWS ) ))));
	y -= TABLE[COLS][TABLE[( foo(Hodor,Stark) ) + 0.87][1]];
	if(foo(Hodor,Hodor)){
	x -= -1 - dog;
	if(-Ygritte / TABLE[destroy(ROWS,-( protect(7 / -( COLS )) ))][bar(-( 14 ))] * bar(-( dog )) - mislead(-0.63) * mislead(---1)){
	( ( mislead(( -COLS )) ) );
	Sansa -= -ROWS
}
}
} else {
	ROWS;
	if(( ROWS )){
	46 - COLS;
	TABLE[ROWS][TABLE[COLS * TABLE[Arya][betray(-( ( 70 ) ),protect(( Hodor ),Arya,mislead(( ( bar(850.9695,( --15 )) ) ),destroy(190.8224,--Hodor + -24 / ( ROWS + Jon ) - ( COLS )))) / foo(foo()) / protect(--56 / ROWS + -690.8852))] / ROWS + betray(COLS)][-( 0.39 )]];
	if(COLS){
	if(( ( y ) )){
	( ( y ) )
};
	if(( mislead(TABLE[( -x )][foo(( ROWS ))],protect()) )){
	Arya -= -TABLE[( Hodor )][-63]
};
	( betray(x,destroy()) * ROWS ) * bar()
}
} else {
	Jon;
	Arya *= 0.04;
	-1 - TABLE[dog][betray(mislead(betray(1),Arya) * -Ygritte)] / ROWS
}
};
	y /= ( COLS ) - 7;
	protect(bar(Sansa),protect(5,rule(rule(foo(COLS + -120.262 + y - -50.7 - ( -0.99 ) * Stark,71)))))
} else {
	if(bar(( bar(TABLE[rule(Jon)][Sansa],Hodor,protect()) ) + COLS / 0.9) * TABLE[--( Jon * Sansa ) / -85][--0.335]){
	if(( 1 )){
	if(betray(Arya,-1,-destroy(69))){
	y -= ( ( ROWS ) );
	if(foo(( rule(protect(ROWS) - ( TABLE[--0.99 - x * foo(( -0.18 ),860.6,rule(dog,-----0.56,-97)) * betray(-63)][-57] ),-destroy()) ),-43 - ( ( -TABLE[( x - bar() )][Stark] ) ))){
	Hodor /= ( Arya )
};
	mislead(destroy(-( -72 * betray(( Hodor * -120.21 * ( 570.322 ) ),destroy(1,-810.21) - betray(-( ( -0.58 ) ) * Ygritte,0.68),-Sansa) )) / ( x + COLS ),0.06)
}
} else {

};
	Arya;
	if(rule(--0.02) / bar(dog * ( bar(Ygritte,x - ( 65 ),ROWS) )) / ROWS){
	Stark += mislead(ROWS,( Sansa ) - ( -0.18 ) + -Jon - Hodor,( --protect(( Hodor )) / COLS ));
	if(64 - ( ( -ROWS * ( x ) * -0.65 ) + TABLE[destroy(bar(Stark))][--0.43] )){

} else {
	0.61 * ( ( 86 ) );
	if(-foo(rule(TABLE[COLS][-rule(-0.58)]))){
	if(protect(( Arya ))){
	Hodor *= dog
};
	( -dog )
} else {
	-1
}
};
	if(( Hodor + y * --38 )){
	if(-bar(TABLE[-( ( foo(--ROWS - mislead(( mislead(rule(x,x),-0.54,dog) ),mislead(ROWS)),-0.23,-bar(77,Arya + ( 710.8 ))) ) )][22] - bar() + foo(-20 * ROWS,( dog ),Jon) / -0.71)){
	Stark -= bar(--( TABLE[( -ROWS / TABLE[790.76][-1] / ( ( destroy(-ROWS + destroy(( rule() ),ROWS),( COLS ),Stark) ) ) )][rule(mislead(x,Ygritte - --( TABLE[0.28][( Ygritte )] )),Sansa) * 0.33] ) - Jon,-74);
	Hodor += foo(dog,COLS / TABLE[( ( ( COLS * -( ( foo(Hodor - Jon + TABLE[-87][( ROWS ) * -0.42] / -Stark,( foo(-79) ),-( -destroy(( --1 )) )) ) ) ) * y + bar(-Stark,Arya,foo()) / -( --770.136 ) * -64 ) )][( -64 ) / --mislead(ROWS,710.034)],-0.27);
	( -ROWS )
} else {
	--betray(Ygritte,-760.765) / ROWS
};
	Jon /= protect();
	Sansa *= Arya
}
}
}
};
	COLS;
	if(rule(-foo(--bar() + mislead(-1),COLS))){
	dog *= -0.78
}
}
def TABLE[Stark][k] {
	bar(--0.45);
	x += 0.05;
	if(1){
	dog += -880.477;
	betray(-ROWS)
}
}
assert foo(Ygritte) : "One can not simply parse himself"
def TABLE[foo(0.04)][i] {
	if(-Jon - COLS / Sansa){
	if(( x )){

}
};
	if(foo(( -0.38 )) + 0.66){
	Stark -= ROWS
} else {
	Arya += rule(64,-foo());
	if(-dog / -0.18 / 1){

} else {
	if(65 + Arya){
	if(Jon){
	if(TABLE[-1][-0.97]){
	Jon /= Ygritte;
	Arya *= destroy(( ( 830.6577 ) ))
};
	( Stark )
};
	if(( 1 )){
	Hodor;
	Ygritte /= TABLE[( y )][( x )] / ( -0.94 );
	Jon -= betray(-0.06 * TABLE[1][-Arya],dog) / -900.1 / --TABLE[protect(0.28,betray(( COLS )),rule(( destroy() ),( y )))][protect(( -0.51 ),Sansa)] + foo(bar(Stark) / destroy(COLS,---90.631))
} else {
	Jon -= 50.579;
	if(( ( --0.1 ) )){
	dog;
	if(x * ( -( Hodor ) / ( -0.83 ) )){
	Ygritte += COLS;
	ROWS * Stark
} else {
	mislead(-82,rule(foo(),-protect(mislead(-COLS,( ( ROWS ) ))),rule()) * 0.97 * ( ( Jon / 0.91 ) ) - betray() / mislead(ROWS * TABLE[-( ROWS * -47 )][0.1] + mislead() * ROWS / TABLE[ROWS][( TABLE[( COLS )][COLS] )] + TABLE[Jon][68] / TABLE[-1][TABLE[betray(-1,ROWS)][-410.05]],Ygritte + ( ROWS )),rule(protect(( foo(( ( ( 53 ) ) ),TABLE[betray(--1 * ( destroy(0.66) + -( Jon ) / -Hodor ) / rule(protect(betray()),rule(destroy(-87,protect(-71 * -6) / betray(Stark,y))),Jon + protect(TABLE[-0.13][-Arya]) / ROWS))][-rule(( ( ROWS * --ROWS ) ),-45)]) )),( ROWS )));
	--170.98;
	COLS
}
}
};
	Sansa /= -( -TABLE[( -( COLS ) - Stark / ( -TABLE[COLS][foo(dog,( COLS )) * ( --Ygritte )] + -Hodor * --TABLE[COLS][-ROWS] - -( 0.58 ) * dog * betray() ) )][180.9514] * -Sansa )
};
	if(TABLE[-betray(( ( -( foo() ) ) ),-590.6976)][COLS]){
	if(-( mislead(foo(Arya),-650.2382) )){
	x += ( -20 );
	if(-destroy(mislead(1,foo()),88,0.51)){
	Hodor -= bar(( TABLE[destroy(foo(Jon))][Stark] ),-mislead(( Sansa ) + protect(TABLE[( -35 )][bar(bar())]),( -900.15 )) * ( COLS ) + -0.92);
	if(ROWS){

} else {
	dog -= ROWS;
	if(-1){
	mislead(( ROWS ) - x);
	ROWS;
	Hodor
};
	Hodor
}
} else {
	dog /= 0.35
}
} else {
	if(protect(Ygritte)){

} else {
	if(Sansa){
	Jon *= Arya / betray(Hodor,TABLE[( TABLE[-1 * destroy(( ( destroy(ROWS * Hodor,Hodor + Jon + 0.82) ) ),betray(Arya))][( ( Arya ) ) - 1] )][bar()])
};
	if(( mislead(COLS,-1 - ( ( -460.6 ) ) * mislead(-24,( Ygritte ))) )){
	if(rule(Ygritte)){
	COLS;
	Jon;
	if(COLS){
	Stark *= ( -COLS )
}
} else {
	Ygritte += Hodor;
	Jon -= Ygritte
};
	y /= ( Hodor )
} else {
	if(-34){
	-0.04;
	Sansa;
	if(Arya){

}
};
	Ygritte *= ( mislead(1) ) * ( rule(betray(--Sansa * ROWS * --dog,TABLE[rule(Stark)][-0.5 - 720.6697 * --0.25 * x / Jon / destroy(Ygritte)])) )
};
	-rule(Ygritte)
};
	Jon *= 0.03;
	if(rule(mislead(destroy(rule(56,( COLS ),TABLE[( COLS )][COLS])) + -TABLE[-0.37][( TABLE[-foo(( -0.87 ))][( ( -83 ) )] )] * ROWS * -0.71 / destroy(TABLE[-rule(ROWS,--310.2349 / 55,destroy(0.81))][-destroy(18,destroy(COLS))],-TABLE[450.96][x] / -0.86,TABLE[( ( rule() ) )][1]) / --81 - ( -27 )))){
	dog += -0.95 + Jon
}
}
};
	Arya *= Arya
}
}
}
assert Sansa : "Nothing burns like the cold."
assert -60 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Ygritte : "Winter is coming"
assert -destroy(-foo(-1 + 100.8 - Sansa,betray(betray(Sansa,24),destroy(0.26,52),--85 - Sansa)) + 740.73,betray(ROWS,( --protect(ROWS) / Arya )),80) + foo() : "One can not simply parse himself"
assert -49 : "Fear cuts deeper than swords."
def rule(x,Stark){
	-0.36;
	foo()
}
var y = -( -88 )
def TABLE[( Jon )][i] {
	if(-mislead(foo(TABLE[protect(Ygritte / ROWS,y)][bar(x,x)],protect(360.494,( 41 ) * betray()),destroy(-COLS)) * x)){

} else {
	if(COLS){
	-80
} else {
	-( ( TABLE[-y / -2][-Hodor] ) )
};
	Ygritte *= TABLE[x][COLS]
};
	Ygritte += ROWS;
	Jon
}
assert -Arya : "One can not simply parse himself"
var Stark = --ROWS + -0.55 * Sansa * ( -1 )
assert -0.86 - bar(Hodor,ROWS) - -1 + ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(dog,Hodor){

}
var Stark = TABLE[3][ROWS]
assert -Arya : "Nothing burns like the cold."
assert -y : "Fear cuts deeper than swords."
def TABLE[Jon - -ROWS - ( Sansa ) / Arya][k] {
	if(ROWS){
	Jon *= COLS
};
	ROWS
}
def foo(dog){

}
assert --0.82 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = -Ygritte
assert 980.8394 * TABLE[Arya][ROWS / -860.007] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(Hodor,dog){
	Stark *= rule(Ygritte,destroy(mislead(),Arya));
	if(--( ( bar(bar(dog,Jon),TABLE[ROWS][TABLE[Ygritte][1] + COLS],-Arya) ) ) - -1){

}
}
var dog = 48
def TABLE[( -COLS )][j] {
	Sansa *= Stark * -Ygritte
}
assert TABLE[Hodor][( -Stark )] : "Fear cuts deeper than swords."
def betray(dog,Hodor,Stark){
	-TABLE[-y * --Jon - rule(-750.46,-Arya,COLS) - -( TABLE[-20.972][TABLE[ROWS][-ROWS / ( ROWS ) + 1 + rule()]] )][93];
	TABLE[betray()][mislead(---protect(-1,1),( -Stark ),( Sansa ))];
	y * -Arya
}
var Hodor = Stark
assert ( -690.624 ) + ( ROWS ) + foo(-80 + -protect()) : "One can not simply parse himself"
def protect(y,y){
	Sansa *= -0.59
}
var Jon = 1
assert protect(COLS,protect(( Arya ) * -ROWS * x,Ygritte) - mislead(-Arya,-0.43 - y / betray(-0.38) - TABLE[1][ROWS / ( mislead(TABLE[mislead(( -780.2804 / -betray() ),-destroy(),TABLE[COLS][Hodor])][( -COLS * -destroy(betray(-0.97,rule(ROWS - -0.96 + dog,COLS) * 23)) )]) + 580.4 )] + -690.1436 - TABLE[protect(( 24 ),-58,bar())][y],Hodor),-55) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = ( -0.84 / -y ) - -0.68
def TABLE[COLS][j] {
	if(( foo(-590.877,betray(-1,250.53) + ROWS,destroy(76,-Ygritte) - -( -( bar(destroy(ROWS,ROWS,rule(-COLS) + COLS) / Arya) / ( Sansa ) ) )) )){

} else {
	if(Stark){
	Stark -= betray(TABLE[( ---ROWS + -27 / ( Ygritte ) ) * 0.04 - ( x )][Ygritte]);
	if(betray(-1,Arya,COLS)){

} else {
	Sansa
};
	if(-740.35){
	if(ROWS){
	530.465;
	dog += -15;
	Arya
} else {
	-foo(-mislead())
};
	bar(COLS,Arya) * y
} else {
	if(( -foo() )){
	COLS;
	ROWS
} else {
	Ygritte *= foo();
	-( -( Jon / 660.777 ) )
};
	if(( Ygritte ) - 1){
	38;
	Stark -= ( mislead(( 1 / TABLE[-TABLE[-1][TABLE[foo(Jon,COLS,Stark)][-mislead(-( dog ),1) + ( rule(TABLE[foo(85)][8 * -COLS],-1,TABLE[( ROWS )][-Jon]) ) + foo(TABLE[( TABLE[--( protect(x,TABLE[( betray(74) ) - Hodor / ---( --0.67 ) * -840.2381 / COLS * 47 - 16 - Ygritte][-foo(rule(0.03),-mislead(Arya,( protect(betray(COLS,-45 / Ygritte,-TABLE[ROWS][--( 1 )]),Arya) + ROWS )),---ROWS)],( rule(-( ( --0.38 ) ),-47) ) * -98) )][-( ROWS ) + Hodor] )][ROWS])]]][TABLE[( ROWS )][Jon]] ) - betray(TABLE[destroy() - TABLE[mislead(-bar(Ygritte))][-ROWS + bar(Jon) * --220.9735 - -COLS + Ygritte - -destroy()]][( -1 ) - Hodor],destroy(-0.22 + ( ( Jon ) ),dog))) )
} else {
	dog += -1
}
}
};
	if(mislead(betray(( protect(TABLE[0.6][0.26],dog) ),0.44 / protect(-( 580.032 ) * Sansa,--1 * Stark))) * -1){
	if(( TABLE[rule(0.42 * ROWS * 1,74)][ROWS] ) - y){
	Arya -= betray(-94,bar());
	Hodor -= ROWS
} else {

};
	if(bar(-foo(COLS,( foo() )),Jon,TABLE[ROWS][dog])){
	Ygritte;
	ROWS
}
} else {
	COLS
}
}
}
assert COLS : "One can not simply parse himself"
def betray(y,Ygritte){
	Arya -= 0.43;
	-y
}
assert protect(( protect(1) / protect(-mislead(( dog ),( ( TABLE[Arya][x] + 32 / ( ( ( ROWS ) ) ) + -44 ) )) / ( -0.17 )) ) + ( COLS ),( COLS ),-83) : "Nothing burns like the cold."
assert -0.86 : "Nothing burns like the cold."
def TABLE[Ygritte][i] {
	x /= TABLE[( COLS * destroy(destroy(dog - ( ROWS )),-27) )][90 / -21]
}
def TABLE[( ROWS )][i] {
	if(ROWS / protect(Arya,dog)){
	y -= bar(dog)
};
	if(--460.5722){

} else {

}
}
var Ygritte = 0.32
def protect(Arya,Ygritte,Ygritte){

}
assert rule() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = 76
var Ygritte = ( COLS / -1 ) * Sansa / x
assert -ROWS : "Fear cuts deeper than swords."
assert 0.06 / protect(-120.24) - ( ( ( betray() ) ) ) : "Nothing burns like the cold."
assert -1 : "One can not simply parse himself"
assert -1 / ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Hodor,Sansa,Arya){
	Hodor /= protect(ROWS,--( dog ))
}
assert Ygritte : "What do we say to the Lord of Death?"
def TABLE[94][i] {

}
def mislead(Stark){
	x /= Arya;
	foo(-TABLE[protect(Ygritte,-( -( foo(-foo()) ) ),( foo(0.71 - ( destroy(--bar(Sansa,-( ( TABLE[( COLS / TABLE[( -foo(( x ) * ( Jon * TABLE[( ROWS )][COLS] ) * 1) )][dog] * -Jon )][( ( COLS ) )] ) ),-bar(( protect(rule()) ),destroy(-betray() + destroy(58) - ( 24 ))) / -12 + -0.6 * mislead(-78,53,Arya)) * Sansa) / 100 ) + -y,protect(y,Ygritte)) / foo(destroy(COLS,bar(Jon / dog - -34)),protect(-8,0.59,Sansa),-510.3461) ))][ROWS] - mislead(-( -( -( bar(( -ROWS )) ) ) + Arya )));
	if(( -mislead() / bar(( ---mislead() - -0.16 + COLS / destroy(--Sansa - Stark,( 1 )) )) + --foo(( dog ),23) )){
	mislead(rule() + COLS,-COLS * TABLE[TABLE[Sansa][x] / bar(( ROWS ))][destroy(( -rule() ),ROWS)])
} else {
	( ( -( mislead(1) ) ) );
	Jon += -( bar(-COLS,( -destroy() ),-( ( betray(TABLE[Hodor][-1 - ( mislead(Sansa,mislead(( 0.79 ),TABLE[Hodor][-rule(-410.9,TABLE[protect(COLS)][rule(Stark,870.3412,betray())],( ( ---y ) ))],( TABLE[ROWS][19] ))) )]) / protect(foo(y * 0.93),betray(rule(0.56 * -820.246),x) + TABLE[( foo(foo(Sansa,( -55 / destroy(( ROWS ),-( Stark )) )),300.7) )][-COLS],protect(foo(protect(COLS,( TABLE[( 0.24 )][Stark] * -220.45 ))),dog)) ) )) / destroy(-( x )) )
}
}
assert ROWS / ( rule() + bar(( mislead(( foo(30,destroy()) )) ),foo(1),-ROWS * ( Stark )) ) : "Winter is coming"
def betray(dog,Jon){
	Hodor += TABLE[TABLE[( -rule(-49 * betray(dog / y / mislead(( ( protect(( --foo(-Hodor - ( --dog ) + -COLS) )) / y ) ))),( -0.85 )) * dog )][( TABLE[y - betray() * -x / ( 1 )][Arya - 41] ) + Jon]][bar(--50.367 / Arya / ( protect(x,Stark) ),rule(( ( -1 ) ),( rule(-TABLE[( -1 ) / -85][70 - -( TABLE[-Stark][destroy()] )],Ygritte) )),y)];
	if(( foo(protect(foo(( protect(COLS,-Hodor) )),( COLS ) * -1,Arya) + mislead(y),bar(1,75)) + TABLE[-1][( TABLE[Stark][-( destroy() )] )] )){
	x -= ROWS;
	TABLE[Sansa][Jon]
} else {
	Jon
}
}
def foo(Hodor,Hodor){

}
def TABLE[bar(-( Sansa ),440.1 * ( -ROWS ),ROWS)][k] {
	Stark;
	Ygritte += ROWS - -0.46
}
def TABLE[( -betray() )][i] {
	Jon
}
def destroy(dog,Arya){
	if(-1){
	-rule();
	if(( ( ( ( -31 ) ) ) )){
	if(1){
	Ygritte /= COLS - TABLE[COLS][20.658]
};
	Ygritte += 330.468
}
};
	Sansa /= ( ( destroy(destroy()) - ( Jon ) ) )
}
def TABLE[Sansa][j] {
	-54;
	if(-TABLE[( 92 )][betray()]){
	if(( destroy(Sansa,y / -580.334,y) / ROWS )){
	Sansa *= ROWS;
	Jon *= Stark
} else {
	ROWS;
	Stark *= -140.5
};
	Ygritte += -TABLE[( -0.06 )][0.62] / destroy(ROWS * COLS + -Hodor,Hodor);
	if(ROWS){
	-1;
	Arya /= TABLE[-( -( COLS ) - ( Ygritte ) )][-0.44]
} else {

}
} else {
	73
}
}
def TABLE[dog][i] {
	destroy(Sansa,( COLS ));
	( bar(0.38,bar(Sansa,-dog),foo(Sansa,-foo(Stark / --77,y))) );
	if(COLS){
	Arya *= Hodor
} else {
	( ( ( -x ) ) );
	if(Ygritte){
	dog *= Arya;
	Ygritte -= TABLE[Hodor][-Jon];
	x -= COLS
} else {
	if(y){
	if(-0.6){
	Sansa /= -bar(-0.71,-ROWS - -TABLE[rule(( mislead(x,bar(( ( -83 ) ),2)) ))][destroy(( bar() * COLS )) * -Hodor] * ( rule(x,TABLE[ROWS][----0.14],( -mislead(Ygritte,Stark,TABLE[-( --0.46 ) - -dog][( -48 )]) )) ) * -( foo() ),-betray(--1,ROWS));
	Arya *= 0.62
} else {
	dog += -1 * ( Arya )
};
	-TABLE[rule(-1)][( ( foo(-ROWS - ROWS - COLS * ( TABLE[-ROWS][-ROWS] ) * ( --0.82 * 0.91 ) - betray(protect(dog),( ( ( ( COLS ) ) - -betray(-64) ) )) - ( betray(ROWS,1) ),betray(ROWS)) ) ) + y]
} else {
	if(Stark){
	if(-( ( --1 + x ) + rule(-47,mislead(1,y),-Arya) )){
	if(Stark){
	Arya;
	if(--21){

}
};
	-110.538
} else {
	( Stark )
}
};
	if(destroy(bar(78,-ROWS - Hodor),-TABLE[Hodor][( -0.31 - -foo(Stark,-16) )],rule(betray(destroy(),--1,COLS) - Ygritte,y,-5))){
	if(y){
	-840.6;
	if(destroy(( --0.78 ))){
	Ygritte += -( -40 )
}
} else {

}
} else {
	TABLE[-1][TABLE[( 11 )][TABLE[-950.4908][-0.62 * -Arya]]];
	-( Hodor / 390.084 )
}
}
}
}
}
def bar(Ygritte){
	Arya
}
assert -0.42 / -( TABLE[COLS][( -0.88 )] ) / ( ( 1 ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert 95 : "Fear cuts deeper than swords."
def rule(Jon,x){
	if(( --foo(( -x )) )){
	if(( Ygritte - -Jon - ROWS / Hodor )){
	-ROWS / Arya
};
	( ROWS )
};
	ROWS
}
def foo(Jon,Stark){
	TABLE[580.63][( -0.52 )];
	if(destroy()){
	( 0.58 );
	Sansa
} else {
	protect(TABLE[Stark][-Arya],( COLS ));
	Arya *= 0.6
}
}
assert Ygritte - foo(-Jon,-0.79) : "Nothing burns like the cold."
assert betray(Ygritte * -1 * Stark,rule()) : "Fear cuts deeper than swords."
var Sansa = ( Hodor )
assert rule(COLS,TABLE[ROWS][Arya] * Sansa,-28) : "One can not simply parse himself"
var Arya = -Ygritte
def foo(Hodor,Arya,Sansa){
	if(Hodor){

} else {
	-88
};
	if(-0.14 - ( destroy(mislead(-ROWS,ROWS - Jon)) )){
	if(--Hodor){
	if(COLS){
	ROWS + --1 * COLS / bar(( ( -( Jon ) ) ) / -0.82)
} else {

};
	if(COLS){
	if(Hodor){
	if(-COLS){
	x + 410.6;
	if(protect(TABLE[-22][-ROWS])){
	if(protect(-COLS,-( ( COLS ) ) / rule(-rule(Arya)))){
	if(-( bar() ) * ---TABLE[( bar(protect(-( Stark ) / ( ( -destroy() ) ) + COLS,ROWS,Jon)) )][Jon]){
	Arya += ( bar(( TABLE[-850.13][-84] ),ROWS,betray(ROWS / Jon - TABLE[( mislead(TABLE[Jon][protect()]) )][ROWS],( bar() ),rule())) );
	COLS;
	Sansa += -640.5859 * rule(-570.087) / TABLE[ROWS][TABLE[-ROWS / 0.91][y]]
} else {
	Stark -= Jon;
	( COLS );
	-0.78 + mislead(-( destroy(betray(( ( mislead(bar(betray(--100.694),ROWS),290.4,mislead(-COLS)) ) - COLS ) / Hodor,COLS)) ),( 770.425 ))
};
	430.3;
	if(-( TABLE[foo(Ygritte)][Jon] )){
	if(-0.67 - ROWS){
	if(COLS){

} else {

};
	ROWS;
	rule()
};
	if(--COLS){
	y += 60;
	Hodor *= betray(destroy(( -ROWS )),-320.046 - -1,Jon)
} else {

};
	if(Stark){
	Stark;
	if(mislead(1 / ROWS / -( 1 ),1,-1)){
	y /= ROWS
};
	Stark -= protect(ROWS)
}
}
} else {
	x *= ROWS;
	Sansa /= Sansa
};
	if(y){
	Jon *= -5 - -( ( -bar(( protect(( ( destroy(x - ROWS) ) )) ),96,( -0.57 )) + -Ygritte ) );
	if(-( ( ROWS * rule(TABLE[ROWS][TABLE[-13][ROWS]]) + -rule(TABLE[COLS][Jon],-1) ) * ROWS ) - foo()){

} else {
	Stark += foo(( ( -490.751 * -81 ) ))
}
} else {
	mislead(Arya,y,( -dog ) / COLS / 92);
	if(-0.97){
	-( -TABLE[destroy(( betray(COLS,-0.23) ),destroy())][COLS] )
}
}
};
	Hodor /= ROWS + -Ygritte
};
	mislead(ROWS,x)
}
}
} else {
	y
}
}
}
def destroy(Ygritte){
	if(Arya){
	if(TABLE[-( Arya )][-Hodor + ( 550.56 ) - bar(-ROWS,ROWS)]){
	Arya
} else {
	Jon -= ( TABLE[Hodor][TABLE[-28][betray(TABLE[0.51][foo(--0.01,-0.11 / ( rule(-71) ) + dog * mislead()) - rule(-TABLE[y][y],0.78,( COLS )) - TABLE[-570.1][TABLE[0.5][ROWS]]],x)]] * -ROWS )
};
	-COLS * -rule(destroy(( protect(bar(0.32,ROWS)) ),Ygritte),-ROWS,ROWS)
}
}
assert -ROWS : "What do we say to the Lord of Death?"
def mislead(x,Sansa,Stark){

}
def protect(){
	if(protect(ROWS)){
	Arya /= ----21;
	Sansa *= ( ( COLS + ROWS / Ygritte ) )
} else {
	dog *= betray(protect(TABLE[( 49 )][Arya],TABLE[1][rule() * TABLE[-( Stark )][COLS]]),-COLS);
	if(-Ygritte){

};
	destroy(0.71,betray(dog,Arya))
};
	y *= -Jon / destroy() / ( 91 );
	dog /= COLS
}
def betray(dog){
	x *= -betray(COLS);
	if(( -1 )){
	if(Stark){
	if(( rule(COLS,Jon,x) )){

} else {

};
	if(protect(Hodor,56)){

};
	Jon -= COLS
} else {
	Arya *= Jon
};
	if(-mislead(-Ygritte)){
	dog += destroy(ROWS,mislead()) - 18;
	destroy(Hodor,Sansa + foo(bar(ROWS),-73),( 0.17 ) * -bar(ROWS))
};
	0.14
};
	Ygritte += ( -0.95 ) * -( COLS ) / ROWS
}
assert protect(( -25 ) * rule(Ygritte * --( -0.51 ) / foo(betray(COLS / Sansa / ( ( -( foo() ) ) - 0.89 * x + mislead(-1) ) / Arya + COLS) * Arya) / ( COLS * 1 ),-Jon + -ROWS - ( ROWS ),TABLE[Arya][destroy(-bar(---0.5,bar(betray(ROWS,-dog))) + rule(---Sansa,45),ROWS)] * Stark),35) : "What do we say to the Lord of Death?"
def TABLE[betray(foo(( -0.21 ),dog,TABLE[Sansa][Hodor + ( dog ) * ( -Jon )]),Sansa)][j] {
	y += -1
}
var dog = ROWS
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(Jon,dog){

}
assert -0.87 : "One can not simply parse himself"
var dog = -0.25
def betray(x){

}
def betray(){
	Hodor -= -( ---83 ) * Sansa;
	Jon *= 26;
	if(rule(dog,( --0.43 )) - Ygritte){
	Ygritte;
	-TABLE[Sansa / x][foo(-0.71)]
}
}
var x = ( -58 + ( ( Arya ) * ( ( -71 ) ) ) / -( ( ( ( dog ) ) ) ) )
def TABLE[--TABLE[--300.328][-1]][i] {
	if(-1 * ---destroy(COLS) + ( -950.1 )){
	if(( Arya )){
	Hodor += -( bar(-( -( foo(ROWS,-860.75) ) )) ) + 790.285;
	Jon *= Sansa
}
} else {
	protect(-640.9,rule(foo(-destroy(rule(( destroy(( ( ROWS ) )) ),ROWS + destroy(-0.24) + rule(-0.95) / Arya + -56 + TABLE[--730.06][-47] * -0.03 * ROWS + ROWS / ROWS / COLS),81),-( -0.3 ))),-rule(( Sansa ) * TABLE[--47][mislead(TABLE[TABLE[--0.15 * COLS][1]][y])]) * -0.62)
};
	( Sansa )
}
def TABLE[betray(-13,ROWS,TABLE[-( betray(-66) )][300.22])][k] {
	dog *= --destroy(Arya) - dog;
	if(COLS){
	-( TABLE[( y )][-36] );
	x;
	if(( dog )){
	Ygritte -= destroy(destroy(( 830.52 ),-0.98,Arya),-y)
}
}
}
assert betray(ROWS,-ROWS,( -1 )) : "Nothing burns like the cold."
def TABLE[-ROWS][i] {
	Arya *= Stark;
	betray(Jon - -Stark + 1 + -Hodor - Ygritte);
	if(0.65){
	Ygritte += COLS;
	if(0.24){
	x += 270.548 + 1
} else {
	Jon *= rule(--1 - --( ( foo(--0.05) ) ) * ( COLS - 0 ),COLS,COLS * ( -TABLE[( 45 )][( -( -protect(protect(-( TABLE[-610.2929][bar(COLS)] ),ROWS,foo(bar(-TABLE[( ( y ) )][-ROWS + -1]),y,( -59 ))),TABLE[TABLE[foo(Jon,protect(-65))][( ( foo(310.585,ROWS / TABLE[COLS][dog]) ) )]][mislead(rule(Arya * -mislead())) - protect()],-Arya * 87) / 0.8 + ( -0.29 / ( Ygritte ) ) ) )] )) / ( ROWS )
}
} else {

}
}
def rule(Sansa){
	Stark += 0.65
}
def TABLE[Jon][j] {
	Hodor *= -COLS
}
var Jon = ( protect(( ( mislead(ROWS,( -betray(( -rule(( Arya * 90 - Hodor )) )) )) / ( 0.47 ) + Hodor / ( ( -62 ) ) * TABLE[( ( ROWS * TABLE[-0.03 / TABLE[--foo(Sansa)][-( TABLE[-COLS - ( -440.5726 )][rule(Sansa,Ygritte,( rule(( Jon + x ),-1 - -75) ))] ) * COLS]][-0.48] ) )][ROWS] + -97 - COLS ) )) * ( -( ( bar(-bar(( 0.68 )),-( COLS )) / betray() ) ) + protect(( COLS - ( --1 + -1 ) - Stark - Hodor ),-TABLE[( --ROWS - Stark )][0.23]) + TABLE[( 24 )][protect(( --protect() + bar(-COLS,COLS) ),ROWS) / ( ROWS )] ) * 0.34 + -1 )
assert dog : "One can not simply parse himself"
var Stark = Jon
assert ( destroy() ) : "One can not simply parse himself"
def TABLE[protect(( protect(protect(( protect(( -COLS ) + TABLE[dog - -y + ( TABLE[Arya][destroy(-0.53,TABLE[COLS][COLS])] )][y]) + ( Sansa * -0.95 ) ),Jon * -x / -8 - Ygritte,--TABLE[Sansa][TABLE[TABLE[--98 * ( Arya )][-( protect(( ( ( -26 ) ) )) )]][90]] - y),( ( ( ( y ) ) ) )) ))][j] {

}
var Arya = -Hodor
var x = dog
def betray(Sansa,Ygritte){
	( Stark + -bar(ROWS) * rule() - --( TABLE[--Stark / ( betray(Ygritte,-betray(-880.9,-y)) + 1 + COLS ) * 1][-770.004] ) * ROWS );
	if(protect(79)){
	TABLE[Ygritte][42];
	-0.98
} else {
	if(-56){
	if(--TABLE[1][destroy()] - -Sansa - ( 0.12 )){
	( ( ( 1 ) ) );
	if(( -0.54 )){
	if(x){

} else {

};
	-( 66 )
};
	Ygritte *= 1
} else {
	Arya += Stark;
	Hodor / x
};
	-Hodor
};
	if(-0.32){
	Hodor
} else {

};
	x /= destroy(( bar(-TABLE[( 930.56 )][destroy()]) ),( Hodor ))
};
	Sansa *= betray(foo(betray(-( TABLE[( -1 ) + -TABLE[( betray(protect(0.1,protect(( foo() ))),( 0.61 - COLS ),protect(protect(-40 - 26,( ROWS * Arya - -( -x ) / Hodor )),0.5 + -15 * Sansa,-( TABLE[-0.94][79] ))) )][y]][-COLS] - 1 * --ROWS / betray(COLS,TABLE[95 * ( x )][--destroy(1) * x]) ))),--( ( rule(--49,mislead(betray(( -0.77 )))) + Stark ) + rule(protect(TABLE[-( Ygritte )][28] - dog)) ),0.49 + ( x )) - -Ygritte
}
def TABLE[rule(mislead(( -1 ),destroy(-90,mislead())),-0.31)][j] {
	Sansa -= TABLE[x][-Jon];
	if(rule(1)){
	if(-Ygritte){
	if(1){
	if(-57){
	if(rule(x)){
	-0.11
} else {
	if(( -x )){
	-Jon
};
	--0.2 / 51 - ( -39 ) * -0.66
};
	-72 * x
} else {
	-1 / -TABLE[-( -( ( ( Hodor ) ) ) / -170.4928 )][Ygritte]
}
} else {

}
} else {
	Arya
};
	Arya *= -COLS
} else {
	Stark *= dog;
	Jon *= betray(--79)
}
}
assert Jon : "Winter is coming"
def TABLE[-780.372][k] {

}
def TABLE[y][j] {
	dog -= ( ( Hodor ) ) - -94
}
assert ( -COLS ) : "Fear cuts deeper than swords."
var Ygritte = -1 + Stark
var dog = protect(( --1 )) + ROWS
def TABLE[( TABLE[foo(mislead(--protect(destroy(),ROWS,dog),Sansa) - Ygritte,( foo(y,COLS) ))][bar()] )][j] {
	if(COLS){
	if(-0.5){
	Hodor -= -Jon;
	if(COLS){
	dog -= COLS - ROWS
}
};
	if(( Stark )){
	Arya += -( -( 61 ) );
	Sansa += --75;
	Hodor += TABLE[---COLS * dog / Stark][( 44 )]
} else {
	if(protect(dog,Hodor)){
	TABLE[-1][-290.65]
}
}
} else {
	if(1){
	Jon
};
	if(( -1 * ROWS / TABLE[( -25 )][-protect(-( ( Sansa ) ),Stark)] ) / protect(( -0.75 ),( -y ),TABLE[dog][y])){
	dog;
	x -= -35 / betray();
	betray(-0.73,-Hodor,-1)
} else {
	if(TABLE[Jon][( mislead(-700.1) )]){
	( y / ( ROWS ) )
} else {
	COLS;
	if(-1){
	if(43){
	Stark /= -840.8;
	y /= ( foo(( Sansa )) )
} else {
	x -= Stark
};
	dog *= Sansa
} else {
	x -= -Arya + 0.14 + protect() / destroy() - y * -0.25 - Sansa
};
	Sansa / COLS + ROWS
}
};
	foo(98)
};
	y += -0.88 * 0.35 / ( -0.76 + -Hodor * mislead(-destroy(-1),mislead()) )
}
def TABLE[Jon][i] {
	x /= -0.77;
	y *= -0.5;
	Stark += COLS
}
def TABLE[TABLE[x][protect(86,ROWS) * COLS + ---dog + -Sansa - y + ( ( TABLE[( 0.67 )][-Stark] ) ) - COLS / 0.52]][k] {
	y += ---betray(Arya) / 62
}
def destroy(x){
	if(-42){
	-9
}
}
def foo(Jon,x){

}
assert -bar(Hodor + Stark,ROWS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(Arya){
	if(( Hodor )){
	( Arya )
} else {
	Arya -= -0.33;
	if(Sansa){

}
}
}
assert Sansa : "Fear cuts deeper than swords."
assert 31 : "Fear cuts deeper than swords."
def TABLE[( Jon )][j] {
	mislead(-( Jon ));
	Arya += --0.2
}
assert bar() + foo(( -( -( TABLE[-34][COLS] ) ) )) : "One can not simply parse himself"
var y = -36
def TABLE[-Arya][j] {

}
assert --31 : "Fear cuts deeper than swords."
def rule(Arya){

}
assert 77 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = -( 400.97 )
assert ( --y + -x ) : "Nothing burns like the cold."
def TABLE[betray()][j] {
	if(-Ygritte){
	if(x){
	Sansa /= -( foo() ) / ( Hodor ) / rule(-COLS,betray(x,mislead(mislead(( COLS ) / y + 0.52),ROWS))) - Jon * COLS
} else {

}
} else {

};
	Hodor *= 87;
	Ygritte /= Arya
}
def TABLE[-170.03][k] {
	Sansa -= Ygritte / mislead(Arya,protect());
	COLS
}
def mislead(Ygritte){
	Stark += -84
}
def protect(y,x){
	if(( destroy() )){
	Sansa += 0.02;
	Hodor -= dog
} else {
	-foo(-24,1) / ( TABLE[--TABLE[-rule(Stark + x)][COLS] + ( betray(( -40.379 ),-( COLS ),( 0.35 )) )][( rule(5,---Ygritte / -34 / ( ROWS ) / 1 / Ygritte / 810.9,foo(( Hodor ),-( dog / ( Ygritte ) ))) ) * foo(TABLE[COLS][ROWS],COLS,-Hodor) / Hodor] );
	if(-TABLE[0.47][mislead(-0.49,-230.401,1 - rule())]){
	COLS * Ygritte;
	x += mislead()
}
};
	Stark /= betray();
	if(Stark){
	x += -1 / dog
} else {
	if(( -0.01 )){
	if(73){
	x *= y;
	if(dog){
	if(TABLE[( COLS )][y]){
	bar() * ( --destroy() / ( Hodor * destroy(bar(-64)) ) - dog )
}
} else {
	if(0.85){

};
	TABLE[Hodor][TABLE[49 + ROWS][-dog]]
}
};
	Stark += Arya
}
}
}
assert dog : "What do we say to the Lord of Death?"
def TABLE[-0.77][i] {
	if(COLS){

}
}
def bar(Stark){

}
assert Sansa * ( --x ) : "Fear cuts deeper than swords."
assert -0.75 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = ROWS
def TABLE[1][k] {
	y *= ROWS;
	if(( -32 )){
	-0.67;
	Hodor *= -0.08;
	if(TABLE[( ( --39 ) )][--970.8]){

}
}
}
def rule(Sansa){
	Sansa -= ( -( 170.4 ) );
	Hodor += bar(TABLE[TABLE[ROWS][-TABLE[COLS][-Arya]]][( -0.09 )] * -y)
}
def TABLE[( y ) * Stark * ( TABLE[( rule(betray(( COLS ),TABLE[( bar(Jon,ROWS) + 0.93 )][COLS],ROWS * ROWS * destroy(-870.0101,bar(-Stark),rule(foo(foo(COLS + 280.46,foo(dog,--( destroy(38) )))),Arya) / COLS + ( ( COLS * ( 1 ) * -TABLE[-1][dog] ) )))) )][protect() - -dog] )][i] {
	if(0.03){
	Arya -= --destroy() + ( COLS );
	-destroy(80,destroy(x,1))
}
}
var Arya = ( -x )
var Ygritte = -rule()
def TABLE[foo(-93)][j] {
	dog -= COLS;
	if(betray(38,rule(ROWS,( -0.8 ),( rule(rule(-rule(y,mislead(Stark,Ygritte)),Ygritte),-0.54,ROWS) ) + ( -0.34 )) / -COLS,-0.2)){
	Sansa /= destroy(TABLE[33][dog / COLS] / y,( ( --TABLE[destroy(--ROWS - Stark,Stark)][-protect(-( 370.98 )) - Hodor] + -96 ) ))
} else {

};
	bar(mislead(( --4 + protect(dog) ),Jon,COLS) / bar())
}
def TABLE[-mislead(betray(TABLE[0.81][Jon],bar(-( ( -1 ) / ( ( betray(-96,( ( Hodor ) )) ) - y ) )))) + dog][i] {
	protect(ROWS - -0.92,destroy(ROWS,ROWS,-mislead(foo(COLS),betray(790.3,( TABLE[-( COLS )][( -520.093 )] ),COLS))))
}
def TABLE[Hodor][i] {
	Stark += ROWS;
	( ROWS )
}
def TABLE[-Ygritte][j] {
	y /= y
}
def TABLE[Ygritte - Ygritte][i] {
	if(y){
	Sansa += -Sansa;
	x *= Arya
}
}
def TABLE[Hodor][k] {
	Hodor /= -protect(COLS + -betray(protect() * rule(dog,1)));
	Sansa /= COLS
}
def foo(){
	y += ROWS;
	Stark += -0.62;
	if(98){
	if(( -protect(-400.2796) * -1 - Jon )){

}
} else {
	dog += foo(( mislead() ),rule(foo(Arya,-0.96) - Hodor));
	if(-1){

} else {
	Ygritte *= bar(betray(( Arya )) * Stark)
};
	if(Hodor){

} else {
	0.88
}
}
}
def mislead(Ygritte){
	if(( y )){
	protect(bar());
	y *= -COLS;
	COLS
} else {

};
	( dog ) - COLS
}
def rule(Ygritte){
	COLS / 98;
	-Stark + 0.22 * ----foo(Hodor)
}
def mislead(Ygritte,Jon){
	Ygritte /= --( TABLE[TABLE[COLS * Ygritte][( --( -5 ) )] + 0.76 - Ygritte][( foo() )] ) - ROWS;
	0.68;
	if(COLS){
	destroy(0.75)
} else {
	Arya /= -x;
	-0.51 / dog - 86
}
}
var Hodor = bar()
var Hodor = ( --ROWS + ( -93 ) )
def destroy(Jon){
	mislead(destroy(betray()));
	Jon -= -Hodor
}
def rule(){
	Arya;
	if(-1 - mislead(Sansa) + ROWS){

} else {

}
}
var Hodor = Ygritte
def foo(Ygritte){
	41;
	protect(TABLE[Sansa][mislead(( ( TABLE[( Arya )][( --destroy(0.49) )] ) - rule() ) / TABLE[x][dog] * 61 + ( -foo(-Sansa - destroy(COLS),Arya) + 220.763 ) + -0.21,( Hodor ))],ROWS * ( destroy(1,Ygritte,Ygritte) - 0.13 ))
}
assert -ROWS : "Winter is coming"
def TABLE[( Sansa )][j] {
	if(( --ROWS )){
	Arya *= Hodor;
	if(--0.18 + Hodor){
	( -COLS );
	Sansa /= TABLE[( rule(TABLE[( bar(Arya,-Stark / COLS) * -860.3793 * mislead(--TABLE[Ygritte][( ( ( -0.82 ) ) )]) )][0.31]) )][Arya]
};
	1
} else {
	Sansa *= rule()
};
	Hodor /= -bar(-38,Stark / betray());
	if(TABLE[( -120.19 )][mislead(( 0.71 ) * ROWS)]){
	if(-ROWS * betray()){

} else {

}
} else {
	Ygritte
}
}
var Hodor = Jon
def foo(Hodor,Arya){
	Hodor += -0.72;
	if(COLS * -( -TABLE[betray(protect(rule(TABLE[betray(mislead(TABLE[28][-destroy(-( --destroy(mislead(Arya,dog * -0.23)) ))],bar(TABLE[foo(-destroy(mislead(destroy()))) + betray(ROWS / -Stark / 0.49 - x)][-( protect() ) - ( ( COLS ) )],COLS,( betray(0.28,( destroy(ROWS) )) )))) * -1][--0.87],23),( ( dog - rule() ) - ( Jon ) + -ROWS ) * destroy() + destroy(810.476),COLS))][COLS] )){
	if(( ROWS )){
	-Hodor
};
	if(-15){
	840.4525 * 1
} else {
	if(Sansa){
	betray(ROWS + -1 / TABLE[rule(0.89,ROWS,( x )) - bar(1)][destroy(mislead() + protect(1,COLS,TABLE[ROWS][-1 - -6]) - mislead(( ROWS ),-0.24) * betray(( ROWS / COLS )) / -( ROWS ))] / ( --0.95 ) / betray(TABLE[-1][-6]));
	( bar(-48,destroy(rule(( -0.45 ) - COLS,TABLE[foo(( COLS ),( ( ROWS ) ))][0.8]),foo(betray(-foo(-TABLE[COLS / Ygritte - ROWS][-( --Ygritte )],COLS,ROWS),y),protect(),( destroy(-0.05 / COLS) ))),rule()) )
}
};
	if(betray(ROWS / 0.97)){
	COLS;
	Arya -= COLS + ( -7 )
}
};
	Sansa -= -ROWS
}
assert Jon : "Fear cuts deeper than swords."
assert COLS : "Fear cuts deeper than swords."
assert ( COLS ) : "Nothing burns like the cold."
assert Jon : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[foo() * betray(COLS,--400.48)][i] {
	Sansa /= destroy(( -COLS - 0.16 + -( 88 ) + -( TABLE[x][-TABLE[0.06][( COLS )] * --Sansa] ) ),TABLE[destroy(destroy(ROWS / ( COLS + 64 ),COLS),ROWS - Hodor * -( -Ygritte ),Ygritte)][0.4]) - -0.03
}
def TABLE[protect(x,dog) * protect() + betray(protect(),( TABLE[COLS][y / Hodor] )) + TABLE[-Stark][y]][i] {
	TABLE[foo(Arya,28 - x)][betray()]
}
var Ygritte = Ygritte
var Stark = mislead(--COLS,-TABLE[1][-0.88] / TABLE[( ( destroy(Sansa + COLS,-COLS * COLS / TABLE[TABLE[bar(--ROWS / dog,destroy(( -( Jon ) ),-( protect(( Stark )) )),-35)][betray()]][COLS],COLS) ) )][TABLE[0.58][( -( --ROWS - bar(TABLE[( destroy(Hodor) )][ROWS],COLS) ) )]] / destroy(rule(( Arya )),y + Jon,ROWS - -0.85) * -TABLE[-( foo(Arya,betray(-270.17 / Arya * Stark,y)) )][destroy(bar(( -bar(--41 * ( Ygritte ),Ygritte) ),betray(Hodor,-destroy(COLS,COLS))),ROWS)] * ( TABLE[-TABLE[( betray(mislead(0.24)) )][protect(COLS,-TABLE[x][Jon],dog)] - 0.96][ROWS + destroy(rule(COLS))] ),-bar())
var Hodor = -( -destroy(COLS) )
def betray(){
	if(-Stark){
	COLS
}
}
var Jon = ( destroy() )
def protect(dog){
	if(betray(-ROWS,( -1 ))){

} else {
	TABLE[-Hodor][( ( Stark ) ) / COLS] - destroy(--Stark - -99)
};
	-910.072 - Ygritte * bar(-52);
	( ROWS )
}
def TABLE[Arya][i] {
	if(rule(TABLE[protect() - Arya][( -foo(-ROWS,TABLE[( --0.08 )][940.888]) )],-62) * Sansa - protect(mislead(Ygritte),TABLE[( ( -73 / -75 ) )][( ( ( ( TABLE[TABLE[x][-( ROWS ) / COLS]][mislead(betray(),( 500.79 - Ygritte ),protect(Stark,COLS)) / ( ROWS / -0.37 ) - foo()] ) ) ) )],( -710.5751 + foo(-bar(-66) - 1,-COLS,Jon) + -620.1 ))){
	if(41){
	dog;
	--Stark;
	Sansa
};
	if(betray(destroy(Arya) * 0.31 - Arya,( -( 0.01 * bar() + -0.82 ) + ( Sansa / foo() ) ))){
	if(-destroy(-1,( COLS ))){
	if(x){
	Ygritte /= --( 0.02 );
	if(COLS){

};
	y /= x
} else {
	Arya /= -30
};
	( -Sansa );
	Sansa /= ( dog ) * ( 1 ) * -ROWS
};
	x /= Ygritte;
	if(40){
	if(Jon){

} else {

};
	y /= ( ROWS );
	COLS / Hodor
}
} else {

}
};
	if(y){
	Sansa += -TABLE[TABLE[destroy(rule(Sansa,---1,( dog ) - -590.1 * betray(( ( -y - ( Arya ) ) ),COLS * COLS,-1) / Hodor),( ( Stark ) ),-98)][1]][x * -dog] + protect(Ygritte) * Ygritte - ( -ROWS / ( Arya ) * Arya )
} else {
	rule(COLS,Hodor)
};
	Jon
}
assert Stark : "Winter is coming"
def TABLE[Ygritte + Arya][i] {
	if(( 22 )){
	if(betray(TABLE[rule(-34) * y][-ROWS])){
	Jon
} else {
	Hodor;
	ROWS
}
};
	if(COLS){
	if(COLS){
	1;
	dog
} else {

};
	Hodor /= -90.62 * Arya / ( -580.8193 )
} else {

}
}
def TABLE[( -0.73 ) * COLS - Arya / 1][k] {
	( foo(x / ( 1 )) );
	if(COLS){
	--Jon
} else {
	87;
	Arya /= dog;
	-Arya
}
}
var Jon = COLS
def TABLE[x][j] {
	if(Arya){
	Arya /= ROWS;
	if(Ygritte){

} else {
	Arya += bar(Stark,-28,protect(Hodor,-0.05,Ygritte));
	Ygritte;
	if(Hodor){
	y;
	---1 - mislead(-dog,bar(-Sansa)) - destroy(( betray(-56,destroy(( dog ),( dog )),Stark) ),Ygritte * ( ROWS )) + -0.77 / -Sansa * -21
}
};
	if(-( COLS * Sansa )){
	Jon += -0.42
} else {

}
};
	Hodor -= dog
}
def mislead(Stark){

}
def mislead(Jon,Arya){
	if(-protect()){
	x += Sansa;
	Sansa
} else {
	Arya /= protect();
	---22 + Sansa - foo(protect(260.36 * dog,COLS + ( COLS ) - y),COLS) * ( ROWS ) * x / -0.87
};
	y /= y / ( destroy(--( -0.45 ),( COLS ) - ROWS,-40) )
}
var Jon = 1
assert TABLE[-COLS + -Stark][Ygritte] : "What do we say to the Lord of Death?"
def bar(){
	if(0.98){

}
}
var Sansa = ROWS
def protect(Arya){
	Jon /= -0.87;
	-72
}
var Jon = TABLE[( TABLE[x][-Stark] )][740.765 - ROWS]
assert ( protect(mislead(Sansa)) ) : "One can not simply parse himself"
def TABLE[COLS][i] {
	Ygritte /= ( -11 );
	rule(TABLE[( ( Stark + ( 94 ) ) )][--31])
}
var Stark = -32 / ( Ygritte ) + ( betray(-0.64 + 97) )
var Jon = -Stark
def rule(Jon,Jon){
	if(( 0.03 + ( mislead(Sansa) ) )){
	( Sansa );
	Stark /= ROWS
}
}
var Hodor = protect()
assert ( ROWS / -Sansa ) : "One can not simply parse himself"
def betray(dog,y,x){

}
var Hodor = ( 77 )
def TABLE[-31][j] {
	TABLE[protect(-0.18,Hodor)][-dog / Ygritte];
	y -= ( -0.26 )
}
def TABLE[-( ( ( protect(-ROWS * COLS) ) ) )][i] {
	dog /= --13;
	Sansa -= -790.5
}
def rule(Hodor,Ygritte,Arya){
	Ygritte += mislead(x * 0.38,-0.83,Arya) * Ygritte;
	y *= betray(( TABLE[bar(TABLE[( 84 )][( mislead(Arya) * -mislead() )],COLS,-72)][foo()] ) + ( ( Arya ) ))
}
def TABLE[-ROWS][k] {
	if(( ( protect() ) )){
	if(( Stark )){
	if(rule()){
	if(-COLS){
	mislead(Jon / -0.93)
};
	Hodor /= -910.223 + bar(-0.8,rule(COLS,TABLE[Hodor][protect()] / ( ROWS - -ROWS )));
	-1
} else {
	Hodor;
	Stark *= 0.18
}
}
} else {
	Jon += ( ( TABLE[Hodor][20.661] ) );
	-COLS
};
	-95
}
def mislead(){
	x;
	if(-98 / -( ( --0.46 ) )){
	Jon -= ( ROWS );
	Jon *= --TABLE[-1][-0.01]
}
}
def betray(Hodor,y){
	x -= -TABLE[-TABLE[-0.68][rule(TABLE[COLS][( -490.909 )],rule()) + dog]][-0.55] / rule(-0.77,140.42 * destroy(ROWS,--dog + TABLE[COLS][TABLE[TABLE[ROWS][betray(destroy(--1,TABLE[Stark][ROWS]),( betray(COLS,destroy(( ( -1 ) ),rule(( TABLE[ROWS][Hodor] ),destroy(protect(-( -1 ),-1)),TABLE[x][mislead(Jon,TABLE[( -80 )][( betray(( ( ( destroy() ) ) ),Ygritte / x) )]) * --0.21 / COLS] + TABLE[33][860.81] * -57),rule(betray(( -Stark ))) / protect() - Hodor + Ygritte),-36 * Jon * destroy()) ),-0.54)] - -85][-0.42] - ROWS / Jon] - -600.35,0.92),destroy());
	if(-COLS){
	Ygritte -= ( destroy(y * 53,x * Hodor,rule(( x ),dog,COLS)) );
	-Stark;
	if(( -93 )){
	Ygritte += ( -Stark );
	betray() / COLS
}
};
	dog += COLS
}
var x = COLS
def destroy(Ygritte,Sansa){
	Sansa *= Ygritte;
	if(ROWS){

}
}
def TABLE[Sansa][i] {
	y += -1 - destroy(Jon / protect() + -49) - ROWS;
	if(ROWS){

};
	x += Ygritte
}
def TABLE[-14][j] {
	if(( protect(-Sansa,-31) ) - bar(COLS,y,--690.8557) * -foo(destroy(-26),-950.96 / Ygritte - -60.29,( ( -1 ) ))){
	ROWS
};
	COLS;
	Stark
}
def foo(Stark,dog,Jon){
	Stark
}
def TABLE[betray(betray(( protect(COLS) ),-betray(rule(rule() - Stark),--x)),TABLE[COLS][protect(--x)])][i] {
	Jon /= betray() - ROWS * Jon / Stark
}
def TABLE[ROWS][i] {
	destroy();
	if(Arya){
	Jon
} else {
	Ygritte -= dog;
	( 200 / TABLE[0.5][1 / -31] - ROWS ) - betray(bar(protect(COLS,ROWS)))
}
}
def protect(){
	if(Hodor){
	Sansa;
	Stark *= x;
	TABLE[-16][Sansa]
} else {
	-x
}
}
def rule(Jon){
	Arya;
	Sansa -= bar(y) + --0.81
}
assert Jon : "Nothing burns like the cold."
def TABLE[ROWS][k] {
	if(( -COLS )){
	if(( -TABLE[( ( TABLE[1 / x][( ( --96 / dog - --betray(--betray(Ygritte) + destroy(foo(( COLS ),COLS),ROWS,( ( 310.026 ) )) + Arya + -ROWS - ( y ) * -0.83 / Stark,COLS,y) ) )] ) )][TABLE[destroy()][-58] / -1] / -0.54 )){

};
	Jon /= protect(--( -TABLE[( TABLE[( Arya / destroy(( ( ( Sansa ) ) ),-260.704) )][( 170.467 )] * --TABLE[COLS][Jon] ) * Stark][Hodor] / -x ) * ( 1 ) * ROWS,98)
}
}
assert --COLS : "Nothing burns like the cold."
def bar(Arya,Jon){
	Arya *= Sansa
}
def TABLE[COLS][i] {
	-betray(COLS);
	if(-99 - -0.6){
	x *= TABLE[COLS][1]
}
}
var Stark = protect(--1 / y)
def TABLE[Arya + -TABLE[Jon][( 46 )]][k] {
	if(-ROWS){

} else {
	y /= Jon;
	if(betray(TABLE[ROWS][foo(-62)],rule())){
	if(0.97){

} else {
	if(-80.07 / 10){
	if(( -0.67 * COLS + TABLE[--Arya][TABLE[TABLE[foo(-0.08)][-ROWS]][( Jon )]] )){
	x += COLS + Sansa
};
	if(foo(-( betray(y) ) + -0.2)){

} else {

};
	if(50){
	( ( -1 ) )
}
} else {
	x -= ( TABLE[Sansa][foo()] )
};
	-ROWS + Jon
}
} else {
	Sansa *= Jon
}
}
}
assert rule(-Stark,11) : "Winter is coming"
def TABLE[-Stark][k] {
	-140.68
}
var Sansa = ( COLS + ROWS )
assert --( -y ) : "Fear cuts deeper than swords."
def TABLE[-740.46][j] {
	if(-Hodor){
	---0.57;
	if(0.71){
	if(-1){
	if(( x )){

};
	Ygritte *= 53;
	destroy(( ( -0.35 * COLS ) ),0.06)
}
}
}
}
def TABLE[-0.41][k] {
	foo(-( Sansa ) - ( 400.73 ),-0.58)
}
def destroy(dog,Stark){
	x += 39;
	if(-0.63){
	( COLS )
} else {
	if(-0.14){
	Jon += -COLS
} else {
	if(protect(-( 78 ),( dog ),610.6671)){
	Ygritte
} else {
	if(--49 * Arya + COLS){

};
	Hodor -= Ygritte;
	bar(ROWS)
}
}
}
}
assert TABLE[Stark][--y] : "One can not simply parse himself"
var Hodor = y
def destroy(){
	Stark;
	if(rule()){
	Arya += TABLE[( --1 / mislead(y,ROWS) )][ROWS]
}
}
def TABLE[protect()][k] {

}
def TABLE[600.976][k] {
	x;
	if(foo(( betray() / -0.66 - -Stark ) / 0.06 - mislead(y,87) / y,-( ( COLS ) )) / ( 0.69 ) * TABLE[rule(-ROWS,TABLE[betray(-COLS)][ROWS] - x + ROWS + ( COLS - ( protect() ) - ( Arya ) )) - protect()][TABLE[( destroy(Stark) )][bar(TABLE[betray(0.85,destroy())][42],-49)]]){
	TABLE[( rule(Arya / -( 65 )) )][ROWS]
} else {

};
	if(( Sansa )){
	if(( x )){
	360.84
};
	TABLE[-0.79][870.9919]
} else {
	if(Jon){
	49 - -protect()
} else {
	destroy(--540.68);
	if(COLS * x){
	if(ROWS - x * COLS){

}
}
};
	-mislead(bar(foo(--0.53 * ( Sansa ) - protect(bar(COLS),0.47))))
}
}
def TABLE[COLS][i] {
	Sansa += -bar();
	Stark *= rule();
	ROWS
}
assert COLS : "One can not simply parse himself"
def TABLE[COLS - Ygritte][k] {
	if(79){
	500.1794;
	TABLE[Jon][Sansa]
}
}
var x = Jon
var Stark = Arya
def TABLE[( COLS )][j] {
	if(betray(Stark)){
	if(destroy(--Jon,-64,foo() * TABLE[TABLE[ROWS / Sansa][-COLS]][ROWS])){

} else {
	if(-0.32){

} else {
	if(TABLE[440.963 / y * bar(40) - 66][32]){
	Stark /= ( -74 );
	dog *= ---ROWS - Hodor * ( mislead(rule(-74 / mislead())) ) / 64
}
}
}
}
}
def TABLE[foo(Stark)][j] {
	-TABLE[mislead(0.23,( dog ))][-foo(-0.91 / COLS,foo(COLS,y + ( Ygritte ),Stark),Stark)];
	Sansa
}
def TABLE[( rule(dog) )][j] {

}
var Stark = destroy(TABLE[( 3 )][rule(TABLE[-59][TABLE[Stark][27]],-0.88,protect(destroy(Ygritte,( mislead() )),( Stark )))],ROWS / ( 0.78 ))
def TABLE[Hodor / betray(-dog,ROWS)][k] {
	if(ROWS){
	mislead(( mislead(--( bar(TABLE[ROWS][ROWS]) - -0.51 * -1 )) ) / ROWS,ROWS)
};
	if(( Stark - -COLS )){

}
}
assert -30 : "Nothing burns like the cold."
def TABLE[-Jon * Hodor][j] {

}
def foo(Sansa){
	Ygritte -= ROWS;
	Stark -= betray(-93)
}
assert -bar(--TABLE[x][Ygritte]) - COLS / -Sansa : "Winter is coming"
def TABLE[-97][j] {
	if(dog){
	--( ROWS * -400.478 ) * ( Sansa )
} else {

};
	if(-ROWS){
	if(ROWS){
	dog *= rule(mislead(destroy(-protect(ROWS) / ( y ))),( -( -1 + COLS ) + bar(( TABLE[protect(ROWS,protect(dog,-( COLS ) / Sansa))][bar(-1,160.8,dog)] + COLS )) ),Jon);
	Stark;
	if(Ygritte){
	x *= -( ( ( destroy(( TABLE[COLS][-0.99] ),bar(( ( ( -190.87 ) ) ),( Arya )),COLS) ) ) )
} else {

}
} else {
	if(( -920.5 )){
	Stark *= ( bar(Jon,4 + destroy(( ( ( TABLE[ROWS - -0.84 + ROWS - TABLE[ROWS][( rule(( TABLE[TABLE[x][-330.22]][( dog + -ROWS + Hodor - --Hodor * -( ( COLS ) ) + 1 / -1 )] )) )]][-( dog ) + ROWS] - -( ( -ROWS ) ) ) ) ),-66)) )
} else {
	Jon /= x
}
};
	destroy(9,foo(( ( Hodor ) ),860.47)) - ( ( ( -rule(-31,1,Sansa) + 94 * ROWS + ROWS ) ) );
	Ygritte -= mislead()
}
}
def rule(dog,x){

}
var Sansa = ( -0.44 )
def foo(Ygritte,Arya){
	y *= ( bar() ) + ROWS;
	if(Arya){
	Sansa
}
}
assert -Jon : "Winter is coming"
def TABLE[0.24][k] {
	( ( 0.13 ) );
	x *= ( Stark )
}
assert Jon : "Fear cuts deeper than swords."
def TABLE[dog][i] {
	if(destroy()){

} else {
	if(rule() - ( ( foo() - -Hodor ) )){
	( ---rule(bar(betray(Arya / y,Sansa,COLS)) / protect(Hodor,TABLE[ROWS][-rule(TABLE[mislead(-mislead(foo(--TABLE[-( Jon + ( ( ( ( 16 ) ) ) ) - y ) / ( bar(protect(TABLE[COLS * ( ( COLS ) )][Arya],-COLS),mislead(--200.1 - ROWS,TABLE[COLS][TABLE[mislead()][8 + ( 0.42 )]]) - -0.39,( -Arya )) )][( destroy() )],-Arya,---betray(1))),Ygritte)][Stark] + -( -88 ) - foo(-0.23 - Jon + -0.46 - 440.1) / COLS + betray(1,ROWS,dog),destroy(-0.86,Stark) / mislead(),( Arya + ( -0.45 ) ))] * -0.28)) + ROWS )
} else {
	TABLE[TABLE[betray(betray(COLS / -COLS) + COLS,( --ROWS / TABLE[( Hodor )][-mislead(-1,betray(betray(( 0.12 ),310.13),x))] / COLS ),-0.87)][--y * 0.28] - -Stark][( -mislead(970.21,( Arya * TABLE[-840.413][COLS / -rule(( -Stark )) - ( betray(-dog) )] / Jon ),bar()) )]
}
};
	if(33){
	82;
	if(Jon){
	if(-0.61){

};
	Jon /= --Jon / x
};
	protect(1,dog)
}
}
def TABLE[85][i] {
	-1;
	if(-( destroy(-destroy(dog,53,ROWS) / COLS,( 1 )) )){
	Hodor /= ROWS;
	34;
	x += -ROWS
}
}
def TABLE[Jon][j] {
	y /= ( -COLS - COLS - ( TABLE[TABLE[( bar(( 0.56 * ( ( --( protect(foo(rule(betray(Hodor)) + -0.01),0.51) ) - -0.67 ) ) * Hodor ) / Jon,-bar(y - bar(( ( COLS ) )) - ( -bar() ))) )][-ROWS]][( foo(dog) )] ) )
}
def TABLE[0.78][i] {
	y *= betray();
	Ygritte
}
def TABLE[x][j] {
	Stark;
	Arya /= ( ---destroy() + ( bar() ) ) / Hodor
}
def foo(Jon,dog,Ygritte){
	( COLS ) * destroy(-protect(( Arya )) - Jon,0.89,TABLE[TABLE[( -910.9928 )][COLS]][TABLE[( 37 - -( mislead(-0.99,( bar(1) )) ) / foo(bar(-0.07),---54 - ( mislead(Sansa,( TABLE[x][bar(ROWS)] + COLS )) ),foo(ROWS)) - Sansa * Hodor )][-ROWS]]);
	if(--betray(-x * -0.62)){

}
}
var Ygritte = ( Ygritte )
var Hodor = 1
var Stark = Sansa * mislead(TABLE[-destroy(-92)][Hodor],--79 - -90,Ygritte)
def TABLE[bar(( destroy(-690.93,-74,x) ))][k] {
	dog -= COLS;
	if(-( -Sansa - 1 )){
	Sansa /= -betray(( TABLE[( destroy(-1,betray(( dog ),( TABLE[protect(-14 * -1)][TABLE[-68][63]] ),( ROWS ))) )][bar(COLS)] ));
	mislead(( ROWS ));
	( rule(COLS) )
};
	if(TABLE[Arya][y - foo(( TABLE[-0.1 - -36 - -Hodor - betray(TABLE[COLS][COLS])][rule(( y ))] ))]){
	if(foo(y,0.65)){
	Stark *= -bar(-( -COLS ) * -990.989) - -mislead(-( y )) + -Jon
} else {
	Sansa *= -bar();
	if(( ROWS * --60 )){
	if(COLS){
	Hodor -= rule(COLS,-ROWS,12);
	Sansa
} else {
	y *= -( -800.096 / 0.11 );
	if(-0.04){
	y *= ---ROWS + TABLE[( ROWS )][destroy(-1,-( TABLE[0.36 + -TABLE[COLS][Stark] * COLS][( TABLE[y + Ygritte][440.045 / Arya] )] ))];
	y += ( Jon ) * TABLE[ROWS][Sansa + COLS]
}
};
	if(( COLS - Jon + x )){

} else {
	if(---13){
	if(-y * COLS){
	Sansa *= --22 / ( Stark )
}
};
	TABLE[-ROWS][Jon] * ( -0.89 + -1 )
}
} else {
	Sansa *= rule() / 0.86
};
	COLS
};
	mislead(-y,TABLE[-ROWS][( TABLE[-Sansa + destroy(TABLE[--0.85][( ( bar(COLS) ) )] * -( -55 ),( ( dog ) ) - COLS)][( betray(-rule(-ROWS,-1),--mislead() - COLS) )] )])
} else {

}
}
def TABLE[-1][k] {
	Hodor -= mislead(-70);
	protect(1,ROWS,y) - 0.36 * COLS
}
assert -y : "One can not simply parse himself"
def TABLE[-480.14][j] {
	COLS;
	y /= mislead();
	( Jon )
}
def TABLE[( TABLE[-bar(destroy(-betray(),( -1 / TABLE[-3][foo(--0.32,Ygritte)] )))][( -68 / --1 )] )][k] {
	if(mislead(-1) + --0.8 + -0.7){
	x -= TABLE[-1][Ygritte]
} else {
	dog += ( ( -320.032 ) );
	( ROWS );
	COLS
}
}
assert -ROWS : "Winter is coming"
assert ( Hodor ) : "Fear cuts deeper than swords."
def TABLE[destroy(( -Jon - betray(---TABLE[foo()][-dog] + foo(( COLS ))) * bar(Sansa) / --880 * ( 73 ) ),-( 480.278 ))][j] {
	( foo(-rule(0.62)) )
}
var dog = ( -bar(( TABLE[-45][dog] )) )
def TABLE[ROWS][i] {
	dog += -mislead();
	if(( mislead(COLS,-Sansa,y) ) * ( ( Jon ) )){
	Jon += COLS;
	Hodor += TABLE[-TABLE[-140.16][( 0.95 )]][Ygritte] + --1
}
}
def TABLE[-ROWS][j] {
	-Hodor
}
def bar(Jon,Jon){
	if(destroy(190.6,ROWS * ---530.2 + protect(protect(83,( foo(ROWS + ( Arya )) * ( ( COLS ) ) + ( 86 ) ),bar(-69,bar(),-dog)) + y - Sansa / COLS,( -( COLS ) - Ygritte )))){
	if(Stark){
	Stark /= Stark;
	if(ROWS){
	Hodor *= Jon - destroy(protect(-340.67));
	y *= ( x );
	if(Hodor){

}
}
}
};
	Stark -= Ygritte
}
def TABLE[destroy(-TABLE[92][bar(COLS / -destroy(bar(Sansa),foo(( x - TABLE[-57][protect(dog,-rule(( Arya ) - betray(destroy()) + y,TABLE[1][65],Arya))] ),foo(-870.55)),mislead(rule(TABLE[-40][-270.332]))) - -49 - -19,ROWS,( -0.44 ))],Stark)][j] {
	if(-protect(TABLE[Jon][-( 0.31 )])){
	--COLS;
	if(( -Sansa + 0.32 * ( COLS ) - mislead(rule(( Ygritte ),COLS,( ROWS ))) ) * -0.05){
	ROWS + -dog;
	y += TABLE[mislead(( protect(-Jon) ),mislead(dog))][( ( ROWS ) )];
	if(rule()){

}
}
} else {
	x /= y;
	foo(560.76 / ( Ygritte ),( COLS ))
}
}
def foo(){
	if(y){
	Hodor /= -26 * betray(( bar(bar(-TABLE[rule() / -1 / ROWS][ROWS]) + COLS - ( ( -x / bar(Arya) ) ) - foo(Stark),( --Stark ),--0.87) ),bar(( destroy(Sansa,ROWS) ),( destroy() )) * TABLE[ROWS][TABLE[Sansa][-y / y]]);
	if(betray(Stark,Jon / Stark / Sansa,( 1 + TABLE[-0.52][-59] * -foo() * -mislead(Hodor) ) - ( ( -COLS ) )) - protect(-ROWS) / ( betray(Sansa * ( ( -58 ) ),TABLE[Stark][-( -28 )]) - ( ROWS ) ) * ( -77 ) + 71){
	TABLE[0.69][-TABLE[destroy(betray(13) + ROWS,1,11)][ROWS]];
	if(COLS){
	if(ROWS){
	rule(TABLE[-Arya * Arya / ROWS][70])
};
	if(-ROWS){
	foo(-0.52);
	Jon += mislead(foo(-x),( ( mislead(Hodor,-mislead(betray(),bar(( COLS ),( Jon )),-ROWS),68 / dog + -COLS) ) ));
	if(81){
	---0.54 - 70.251;
	Arya *= -0.33 / -( ROWS ) * 1 * y;
	bar(COLS)
} else {
	if(Jon){
	--TABLE[foo(( Jon ))][TABLE[Stark][-COLS - TABLE[COLS][Sansa]]] - dog;
	Stark += Sansa;
	if(betray(-( bar() / ( ( ----Hodor * -1 / ( 0.82 * -COLS + 710.8738 ) ) ) ),( --COLS ),-COLS / ROWS)){
	COLS
}
} else {
	if(-protect(-TABLE[---( x )][TABLE[-foo(-1,destroy(-betray(-0.02),foo(foo(y,-1),-TABLE[ROWS][Stark]),( COLS / COLS )))][( destroy(dog) ) + 0.71]],mislead(y)) / 1){
	x -= -0.25;
	Arya *= dog;
	x += Arya
}
}
}
}
} else {

}
} else {
	Sansa
}
} else {
	if(-( ( --( ( bar(COLS) ) - y ) / TABLE[-1][Stark] / bar(-0.56,TABLE[destroy()][( -Ygritte )]) ) )){
	if(TABLE[( Hodor )][-ROWS]){
	if(( ( 0.12 / y - Sansa ) )){

} else {
	( ( y ) )
};
	x *= COLS
} else {
	( -0.57 );
	if(betray()){
	if(ROWS){
	if(y){
	( COLS - -83 + -Ygritte );
	-0.59
};
	if(Stark){

}
};
	ROWS
} else {

};
	Sansa * bar() / 59 / TABLE[bar()][ROWS] - ( Hodor )
};
	if(destroy(-Sansa / x)){
	Hodor += -( rule(COLS * 1) );
	TABLE[protect()][y];
	if(rule(TABLE[x - -( Arya ) / Stark * COLS][--1 * Stark / Jon],Ygritte - ( -COLS ),rule())){
	if(( -48 )){
	Sansa /= Ygritte;
	Hodor *= TABLE[x][protect(x)]
};
	dog -= -x / ROWS
} else {
	x -= Ygritte
}
} else {
	dog *= protect(ROWS);
	77
}
} else {

};
	if(-ROWS / TABLE[( Jon )][( betray() )]){
	ROWS
};
	Stark *= ( COLS )
};
	if(-destroy(-( --TABLE[( -ROWS + Stark )][( ( -dog ) )] ))){
	( ( foo(( -0.6 ),-780.067 / dog,( -( TABLE[-( Arya )][( -TABLE[-61][TABLE[-Arya - ( 0.59 )][protect(destroy(),--0.02)] * TABLE[COLS][-1]] )] ) ) * ( dog )) ) - betray(( -( ( ( -( -mislead() ) ) ) + -y - --1 ) )) );
	Hodor -= -0.3
} else {

};
	-ROWS
}
def TABLE[betray(bar(rule(( -ROWS )),-0.89))][k] {
	43
}
var y = ROWS
def foo(){
	ROWS;
	if(bar(foo() * protect(x,TABLE[COLS][-ROWS] * Ygritte / ( Jon ) + COLS),mislead(-1,Sansa) + ( ( ( -140.5 ) ) ),protect(( 89 )) - destroy(--0.67) / ( ( bar(y) ) ))){
	0.46;
	dog /= 120.008
}
}
def destroy(Sansa,dog){
	--( ---0.9 ) - ( --0.17 ) + ( x ) / 1 + COLS;
	x -= x
}
var x = 96
def protect(x,Ygritte,Arya){
	Stark += bar(--TABLE[( bar(49,-( -COLS * 360.9 * protect(0.77,Stark / TABLE[rule(TABLE[-1 * -foo(78)][--( ( ( -490.9451 / -x / -1 ) / ROWS ) )],( ( ( betray() ) ) ))][destroy(x,( Jon ),-1)]) / Hodor ),( ( bar(( y * TABLE[82][( 96 )] ) - Arya,ROWS) ) / ROWS )) )][( 0.52 )] - TABLE[0.91][98 - ( destroy(-1,ROWS) )] - y)
}
def foo(x){
	if(( -y )){
	Stark /= -Sansa;
	protect(830.0034,-2) * destroy(-0.72) + ( ROWS )
};
	COLS
}
def TABLE[( ( rule(COLS) ) )][j] {
	-( mislead() * 60.984 );
	Sansa /= ROWS
}
def TABLE[Arya][j] {
	Sansa += mislead(bar(Ygritte,( ( ( -( Stark / ( bar(( x / -1 ),TABLE[--0.59][-Hodor],foo(COLS,-COLS,Arya)) ) ) + 0.56 ) ) )));
	Stark *= -ROWS
}
assert ( Stark ) : "What do we say to the Lord of Death?"
var y = 0.93
def foo(Sansa){
	( mislead(( ( 0.38 ) ),dog) )
}
def TABLE[( --39 - --( foo(( ( ( ROWS ) ) ) / TABLE[( protect(x,-1) )][940.9]) ) / Stark * -x )][j] {
	( ( mislead() * destroy(Hodor) ) + -( destroy(-rule(( ( 1 ) ),( Jon ),-foo()),ROWS) ) );
	if(dog){
	Sansa += Sansa / ( -TABLE[destroy(( -Stark ),-0.23)][Stark] );
	Stark *= betray(Stark,Jon);
	Sansa -= 7
} else {

}
}
assert 480.861 : "What do we say to the Lord of Death?"
var y = ROWS
var x = protect(Sansa,( -0.13 ),0.73)
def TABLE[Ygritte][k] {
	if(-77){

} else {
	Stark *= x
}
}
var x = Stark
def destroy(Hodor){
	betray(Sansa,Hodor,Jon);
	dog *= -( Sansa )
}
def bar(Arya){
	Jon += -0.87;
	Hodor
}
def rule(Sansa,Stark,Hodor){
	if(-1){
	-1
};
	( Arya );
	if(COLS){
	( ( -Hodor ) );
	Ygritte += ( -( COLS + foo() ) );
	( -0.58 )
}
}
var Stark = ( ROWS )
def destroy(Arya,Stark){
	Jon *= ---Arya;
	if(0.91){
	if(-11){
	if(ROWS){
	ROWS;
	--( y )
}
}
};
	TABLE[Stark][TABLE[( -0.76 )][ROWS]]
}
def foo(Arya,Arya,Stark){

}
var Ygritte = ( ( COLS ) )
assert Hodor : "Nothing burns like the cold."
def foo(Arya,dog){
	-destroy(COLS)
}
assert 0.48 : "Nothing burns like the cold."
var Sansa = TABLE[760.343][( TABLE[TABLE[ROWS][COLS]][x] )]
def TABLE[( -ROWS )][i] {

}
assert destroy(betray(ROWS,( -Jon )),-450.882 - ( -dog ),-COLS) + --destroy(y,-0.85) - -( COLS ) / mislead() / TABLE[( TABLE[( -bar(ROWS,( -79 )) * ROWS )][bar(( 84 ) - Sansa)] ) + -550.7][rule()] : "What do we say to the Lord of Death?"
def foo(x,Jon,Jon){
	-56;
	y -= ( ( Ygritte ) );
	if(x * ROWS){
	-( ( ( ( 0.87 - -( -Ygritte ) - -protect(Stark) ) ) ) ) + -( COLS );
	x -= 54
}
}
def TABLE[COLS][i] {
	if(ROWS){
	if(dog){
	( betray(-1,TABLE[foo(COLS) / -TABLE[( TABLE[y][dog] )][COLS]][TABLE[rule(-830.316,ROWS) + 46][( Ygritte )]],-510.11) );
	if(bar(Jon,ROWS) + destroy() * bar(1)){
	rule(( -1 ),( betray() ));
	if(x){

} else {
	Arya *= ( 41 );
	if(TABLE[( -rule(bar(--630.7),y) )][( -mislead(-1,0.43) )]){
	dog += -COLS;
	Ygritte
}
};
	if(-TABLE[bar(30)][destroy(-( betray(Stark / ( TABLE[-( betray(-9 / ( ( -0.12 ) ),-1 - 9,95) + rule() )][89] ),ROWS) ),-foo(TABLE[TABLE[--1 - ( x )][-0.22]][-77],Ygritte / -destroy(destroy(( Ygritte )),-87) / bar(COLS)))]){

} else {
	if(-0.78){
	Jon -= -ROWS;
	Sansa *= -0.22 * betray(Stark) / ---rule() / -TABLE[-1][-betray(TABLE[mislead()][ROWS + -( foo(( TABLE[ROWS][x] ) + -620.25) ) / ROWS / bar(TABLE[TABLE[-COLS][( 1 + -1 )]][-670.8] * 1 / ( ( foo(0.15,( ( -0.39 ) )) ) ),( destroy(foo(-Arya)) / betray() - 0.87 ))] - betray(-Jon,1),0.89)] + -mislead(destroy(( protect(TABLE[ROWS][betray(Ygritte / ROWS / -( Ygritte ) / Ygritte - -bar(( -520.9339 ) - -COLS,COLS * protect(Jon)) + -dog)] + Stark + ROWS) ),bar(COLS,-17))) - x
} else {

}
}
}
};
	Hodor
} else {
	if(-COLS){
	dog /= --1
}
};
	Jon;
	Sansa *= foo(0.8,Hodor) + TABLE[30.55][ROWS]
}
def TABLE[830.9][k] {
	1;
	if(( ( ROWS ) )){
	Ygritte += -0.25
} else {

}
}
def destroy(){
	if(rule(--0.62,-0.85 - Ygritte,TABLE[0.26][0.83])){

} else {
	x += COLS + dog * protect(TABLE[-foo(betray(-mislead(-1)),--45 / --rule(--dog * Stark,130.7))][--Sansa],bar(x)) + -TABLE[rule(Hodor)][TABLE[ROWS][-( Ygritte ) + Jon] / TABLE[bar(TABLE[( -dog )][destroy(Jon,foo(-ROWS) + x - COLS)])][Sansa * betray(Jon) + protect(protect(36 * protect(---ROWS) * -0.16))]]
}
}
def protect(dog,Arya){
	Hodor;
	0.14
}
def mislead(Stark,Ygritte,Hodor){

}
def rule(Stark,Jon){
	ROWS * ( ( Hodor ) )
}
def bar(Jon,x,Arya){
	x /= betray(rule(( TABLE[( -1 )][Ygritte] ) - ROWS + -30 / mislead(--1),rule(Arya,ROWS,COLS),--destroy(TABLE[( --ROWS )][betray(ROWS + rule(Arya,( ROWS ) / --0.67))])),bar(-750.667,COLS,-48))
}
var Stark = -1
def TABLE[0.69][i] {
	x *= ROWS;
	Stark += COLS
}
var Sansa = COLS
def rule(Arya,y,Jon){
	if(0.3){
	TABLE[protect(foo(foo(COLS,Ygritte - ( TABLE[COLS][Stark] * -betray(Sansa * x,TABLE[bar(TABLE[( ( --protect(Jon) ) )][0.4])][-( protect(1 * -60) )],--0.62) ),rule(( Ygritte ))) / ( Arya ) * -( Stark * rule(Sansa,1,protect(32)) ) / protect(bar(),-0.41 - COLS,ROWS * -Stark - Stark),COLS),( dog ))][mislead(Ygritte)];
	betray();
	if(( x )){
	y /= betray(ROWS,-( ( Hodor ) )) * foo(TABLE[---1][-( TABLE[--0.32 / 82][bar(Jon,-COLS * ROWS,COLS)] )] * 55,TABLE[bar(1,730.8443)][foo(( -ROWS ),( ---0.1 * -ROWS ))] - destroy(( ROWS ),rule(-dog)) / -0.76,--73) * ( destroy(mislead(),-betray(Sansa,-TABLE[-Jon][Arya]),( bar(-0.52) )) );
	( -0.45 );
	-0.03
} else {
	Sansa *= TABLE[-x][bar() * -( y )];
	-0.6
}
} else {
	if(-ROWS){
	bar(--73)
} else {
	if(-betray(rule(( Stark * ( 0.97 ) ),230.8,--Jon + ROWS),y,( 41 ))){
	if(COLS){
	Sansa *= -69;
	Jon /= 44
};
	Hodor -= 56;
	Hodor -= -0.24 / betray(-( -COLS ),-( bar(( -93 )) )) - 0.64
} else {
	Arya + Sansa;
	x /= y;
	-0.17
};
	if(ROWS){
	Jon /= -90;
	if(0.57){
	if(protect(-0.06,Jon - Arya)){
	Ygritte;
	if(-0.91){
	if(bar(TABLE[COLS * ROWS / x][( ( destroy() + TABLE[-Stark][foo(Hodor)] / COLS ) )],bar()) * ( -1 ) + -TABLE[0.32][Stark] * -0.2 / Arya + -destroy(35)){
	dog /= 75 * ( COLS );
	x += COLS
} else {
	if(0.69){
	Hodor += foo() / bar(ROWS,-99 / 370.89)
}
};
	mislead(-( Arya ) * Hodor) / TABLE[rule(( Arya ))][Sansa]
} else {
	destroy(ROWS,dog)
}
};
	( --1 + ROWS )
} else {
	destroy(TABLE[foo(bar(1),( TABLE[-( Ygritte )][TABLE[( 58 )][TABLE[ROWS][rule(-ROWS,bar(ROWS,0.76,Jon))]] + -y / -Arya] ))][-( TABLE[---810.6099][-0.51 * y + ( 1 ) * 0.98] - Stark - Sansa )],-y - ( ( --protect(-49,Stark) * mislead(betray(x * ---17 + mislead(( destroy(Stark,bar(destroy(TABLE[-880.3][-200.05] - rule(COLS,Hodor)),protect()),Ygritte) ),TABLE[Jon + COLS][-TABLE[betray(( destroy() ))][ROWS]],TABLE[--0.17][--Hodor - ( ROWS )])),mislead() / 78 + -81,protect(betray(Jon),ROWS)) * -0.76 ) ),betray(ROWS / Sansa + 0.49,( 22 ),1) + 1);
	Ygritte /= -( Arya )
}
}
};
	-ROWS;
	if(COLS){
	( -0.06 );
	if(( COLS )){
	foo(foo(-1 / ( betray(( bar() ),-Stark) ),TABLE[Sansa / -800.14][destroy(( -betray(Arya) ),1,ROWS) * ( -mislead(-97) )],-0.95));
	dog *= COLS;
	if(y){
	Arya *= -TABLE[Sansa][Ygritte - betray(betray(y) * betray(-destroy(( Stark )) / Ygritte,-betray(-protect() - ( 6 ),foo(0.74)) + protect(-1,x) + ( -( -0.77 ) ),-COLS),Hodor)] + COLS;
	if(destroy(( ( 78 ) * foo(-90.61) ))){
	Ygritte /= Arya;
	COLS * Arya
}
}
} else {
	Sansa *= -0.28
}
}
};
	Hodor *= ROWS
}
var Jon = mislead(protect(91,( destroy(( TABLE[25][0.31] )) ),-87),1 / ( ( dog ) ))
assert 90 : "Winter is coming"
var Jon = --390.397
def TABLE[-( ( ---( Sansa ) + betray() * 0.4 ) )][i] {
	Sansa -= COLS;
	if(bar()){
	if(Hodor * Hodor * ( TABLE[Jon][( ( ROWS ) )] )){

} else {
	if(COLS){
	bar(--0.67);
	if(0.28){
	1 / Ygritte;
	if(betray(-0.41)){
	Stark += 0.51
} else {
	Sansa -= bar() + 0.15;
	Hodor /= foo(( dog ),Ygritte);
	Sansa += --y
};
	mislead(0.15)
} else {

}
};
	1;
	y *= COLS
};
	Hodor -= -0.99
} else {
	Ygritte
};
	if(TABLE[( 28 ) - protect(TABLE[-( -0.78 )][Ygritte])][x]){
	if(x){
	--mislead(1)
} else {
	Jon;
	if(destroy(foo(( ROWS ),destroy()))){
	x -= ( COLS );
	Sansa;
	0.97
}
};
	dog /= ( -0.95 );
	if(COLS){
	if(rule(0.44,( rule(destroy(),Stark) )) + COLS){

} else {
	Arya
};
	dog -= Hodor
}
}
}
assert ( bar(( ROWS )) ) : "Nothing burns like the cold."
assert ( Ygritte ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = ( ( -0.59 ) )
assert TABLE[Hodor][Ygritte] : "What do we say to the Lord of Death?"
assert 59 : "One can not simply parse himself"
def rule(Jon){
	if(-21){
	ROWS;
	-betray(COLS,ROWS);
	--0.85 * destroy(( -Arya ) - -86) + bar()
} else {
	if(rule(-( ( TABLE[protect(betray(ROWS,( ( foo(( 65 ) * ( ROWS ),-COLS,( 1 ) + -COLS) ) )))][Jon] ) ),x / -( bar(Sansa,( COLS - ( --1 ) / ( -Jon ) )) ),dog)){
	COLS - -600.5;
	if(TABLE[ROWS][( protect(ROWS) )]){
	if(ROWS){
	if(-0.64){
	if(96){
	Ygritte *= ---mislead(0.42,rule(-120.552) - ROWS,-COLS * ( --0.91 * ---17 ));
	x += 69;
	Stark
}
} else {
	if(rule()){

};
	0.61
};
	x *= --( Hodor / TABLE[TABLE[-0.04][( ( x ) )]][Hodor] ) + betray(88,dog)
}
}
}
}
}
def rule(){

}
assert mislead() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( -COLS ) - -( dog )][k] {
	y *= -0.58 / ( ( COLS ) ) * -COLS;
	-rule(betray(ROWS,bar(( -12 )),1),rule(COLS,--1 - ( rule(Ygritte,TABLE[TABLE[ROWS][0.15]][( 1 )]) )));
	Stark /= protect(COLS)
}
def TABLE[( foo(( -95 ),-590.513) )][i] {
	if(( ( Sansa ) )){
	Jon /= ---rule(-COLS,( 1 ),y);
	if(-1){
	Arya /= 0.62;
	if(-0.54){
	Stark *= 13;
	Hodor *= 0.74
}
}
} else {
	-19;
	if(( y )){
	Arya -= foo(TABLE[Hodor][20],COLS,bar(TABLE[( 450.6 )][rule(dog)] / y,ROWS));
	ROWS
}
};
	TABLE[bar(ROWS,0.36 * -Jon,bar(bar(( ( Hodor ) * 0.96 ),73),( x ),-1))][( betray(dog) ) / -bar(dog / -Hodor) + 23 / foo(( ( rule(Sansa,ROWS) ) ) / ROWS / ( Jon ) / mislead(COLS,10),-0.76,rule(-1 * --1 - protect(bar(mislead(ROWS,Ygritte) / -0.07),Ygritte / mislead(betray(TABLE[ROWS][COLS],( betray(--0.7) ))) + rule()),COLS,Stark)) * ( 0.92 )]
}
def TABLE[ROWS][j] {

}
def rule(Ygritte,Jon){
	if(( Hodor )){
	y *= Stark;
	x += mislead(0.63,83)
}
}
assert --( y ) : "Winter is coming"
assert 690.9 : "Fear cuts deeper than swords."
assert foo(dog * ( dog ) * -1) + -TABLE[ROWS][1] : "One can not simply parse himself"
def TABLE[ROWS][j] {
	y /= COLS;
	Sansa += TABLE[( x )][-betray()];
	Arya += ROWS
}
def TABLE[Sansa][j] {
	if(COLS / 0.32){
	if(ROWS){
	if(( protect(-0.56,Sansa) )){
	( -y )
} else {
	if(TABLE[( ( 750.831 ) / -Arya )][destroy(rule(COLS),( ( destroy(( mislead() / mislead(foo(( ( -98 ) ),-foo(COLS) + -( -( --( ---x - TABLE[Stark][( Arya )] ) ) * COLS )),destroy(COLS * -( 78 ) + Stark),-0.01) )) ) ),-0.51)]){
	Jon -= rule(mislead(ROWS,Ygritte));
	if(( COLS )){
	Ygritte /= foo(--0.67 + ( Stark ));
	( protect(( ROWS ) - Stark,foo(( ( ( Jon ) * -56 / dog ) - ROWS )) - COLS) );
	Ygritte -= ( ROWS )
} else {
	( TABLE[COLS * ROWS][protect()] )
};
	if(( -protect(bar(0.26,( COLS ))) )){
	x /= -foo(--40,COLS,( ( -protect(-0.32) ) ));
	Jon -= ( destroy(TABLE[COLS][-0.06],0.81) )
} else {
	Sansa += mislead(y)
}
}
};
	Stark += -41
};
	( ( dog - protect(( ( Hodor - Sansa + dog - -Ygritte ) )) * 44 ) );
	Hodor -= ( ROWS )
} else {
	betray()
};
	if(COLS){

}
}
def betray(Sansa,Hodor,Arya){
	if(1 - COLS){
	Jon -= Arya
}
}
def destroy(Stark){
	-0.07;
	Ygritte *= ( ( TABLE[destroy()][770.9] ) );
	Sansa -= mislead(rule(ROWS * ( 1 + ( ( Arya * mislead(( -TABLE[-foo(TABLE[--0.2][29],( ( ( betray() ) ) )) + ROWS][-Ygritte] ),Sansa / TABLE[( -Stark )][betray(Stark,Hodor - Sansa)]) * Sansa ) ) ) / -COLS,-0.31 * betray(bar(Stark,-68),-0.04) + rule(TABLE[ROWS - 34][0.37 * Stark * ( bar(COLS,ROWS) ) / Hodor]) + ( --Arya ) - Arya / -protect(-TABLE[( rule(y,Arya * destroy(ROWS,( y ),betray(1,-TABLE[betray()][dog] * ROWS - ( -protect(-( -rule(Sansa) ) + betray(( ( ( ( destroy(dog * TABLE[ROWS][COLS]) ) ) ) - -0.71 ),--COLS),bar(( foo(COLS) * Sansa + COLS ),--y - ROWS,-TABLE[--0.66][-y] + Sansa)) )))) ) + dog][( ( TABLE[610.339][betray(( ( 0.11 + ( COLS ) / 0.55 * TABLE[0.04][foo(ROWS)] ) ),( COLS ))] / ( 0.77 ) ) )] - mislead(-rule(bar(),TABLE[COLS][-( ( -790.401 ) ) - -26 - ROWS]),bar(),rule() + -33) - mislead()),1),-COLS,-56)
}
def bar(){

}
var Hodor = destroy(-0.08,Sansa)
var Arya = TABLE[-1][ROWS]
assert ( -510.4372 ) : "Nothing burns like the cold."
assert -COLS * betray() : "Winter is coming"
def TABLE[( TABLE[ROWS][y] )][j] {
	Hodor /= -COLS
}
assert 0.22 : "Winter is coming"
def protect(Hodor,Ygritte){
	if(-destroy(-betray(TABLE[ROWS][-foo(rule(( COLS ),rule(-ROWS,0.71,COLS) * COLS - ( Jon )) + Hodor + ( ( Jon ) ),COLS)],Sansa))){
	if(TABLE[280.112][17]){
	( ROWS / 32 - COLS )
} else {

}
};
	Arya *= -380.105
}
def destroy(y){
	1
}
assert mislead(Arya,foo(),-Ygritte) : "Winter is coming"
def TABLE[( Stark ) + Stark][k] {
	y + Ygritte
}
var y = ( TABLE[Arya][90] )
def TABLE[Jon * -1][i] {
	dog *= mislead();
	Stark -= -1
}
def destroy(Arya,y,y){
	y += foo(rule(TABLE[COLS][480.8]),67,ROWS) - -1
}
assert ( COLS ) : "Fear cuts deeper than swords."
def destroy(Arya,Arya,dog){
	Ygritte *= -protect(Jon)
}
def destroy(Stark){
	Hodor *= -56;
	x += COLS;
	x += ( 0.12 )
}
var y = --32
def bar(){
	Sansa;
	if(y * -0.52 + betray(foo(( Stark ),-0.19),ROWS)){
	x -= ( rule() );
	Arya -= ( -( ROWS ) / COLS )
} else {

}
}
var Sansa = -190.326
var Arya = 0.72
assert -46 * -0.26 : "Fear cuts deeper than swords."
def foo(Arya,Hodor){
	if(Jon){
	Ygritte /= ---ROWS + Ygritte + ROWS
} else {
	if(y){
	-9;
	Ygritte - -1
} else {
	if(460.1866 + ( destroy() )){
	if(Sansa + mislead()){
	if(TABLE[-0.12 - -( -COLS )][ROWS]){

} else {

}
};
	if(--8){

}
};
	Stark -= Hodor
};
	rule(rule(y,foo(-( -bar() ))),69,mislead()) - ROWS;
	Arya /= Hodor
};
	protect(( ( Ygritte ) ),( Jon ));
	y
}
var Ygritte = COLS
var dog = TABLE[COLS][COLS]
var y = -Arya / Jon
assert bar(( ( ROWS ) ),mislead() / Ygritte,-1 + ( betray() )) : "One can not simply parse himself"
def TABLE[Jon][k] {
	Sansa
}
var Stark = -0.97
assert COLS : "What do we say to the Lord of Death?"
var Stark = Sansa
var Sansa = --35 + ( dog )
assert dog : "Nothing burns like the cold."
def mislead(Hodor){
	if(Arya){
	Stark -= destroy(ROWS + destroy(TABLE[-58][( COLS )]) / 0.67,-ROWS);
	if(330.4){
	x - y;
	( ( Stark ) );
	if(-dog){
	--1
}
}
}
}
def protect(dog){

}
assert COLS : "Nothing burns like the cold."
assert -33 : "Winter is coming"
var y = ( ROWS )
def TABLE[( destroy(( -( dog * Arya ) / -64 + rule(-Arya,-440.075) )) )][j] {
	( -( --0.64 ) ) / Jon;
	Sansa += y
}
var Sansa = ( ROWS * bar(x) + TABLE[-Stark][COLS] )
def mislead(){
	Arya -= Arya;
	Jon
}
assert -1 / ( TABLE[COLS][COLS + foo() + COLS] ) + foo(destroy(-84),--89) : "What do we say to the Lord of Death?"
def rule(x){
	if(ROWS){
	Stark /= 0.81;
	y;
	( betray(ROWS,Sansa) )
};
	Jon -= ROWS
}
def betray(Arya){

}
def bar(Ygritte,Arya){
	if(Sansa){
	----980.158
} else {

};
	ROWS;
	if(Sansa){
	if(-820.662){
	if(betray()){
	destroy(dog,-12)
}
};
	if(-85){

}
}
}
var Ygritte = dog
var Stark = -( bar(( COLS ) / ( -90.81 - protect() + rule(bar()) * foo() ),--ROWS) ) / betray(-destroy(dog,1,81 / -0.58))
var Stark = -6 * protect(rule(-Ygritte,-( x ),ROWS))
def rule(Stark,Ygritte){

}
def TABLE[TABLE[-TABLE[---9][TABLE[foo(( -980.58 )) - -bar(Stark) * -Arya][( ( TABLE[( ( ( -0.66 ) ) )][-COLS + mislead(Stark,ROWS,dog / foo(-63) / -x * Jon / betray(dog,Ygritte + -0.44,( TABLE[-foo(Arya,Stark,dog)][destroy(-Stark)] )))] - --Jon + betray(TABLE[mislead()][rule(-protect(bar(-41 - Sansa,foo() + COLS,COLS) + COLS,-( ( Sansa ) ),-1),TABLE[Jon][( Sansa )],protect(-foo(rule(betray(-y,-1 / ( betray(TABLE[dog][protect(( -ROWS + -y / -destroy(TABLE[-Arya][-100] - -0.76) ),-990)]) ) - destroy(-0.66) / 0.46,betray(TABLE[Ygritte / ( Sansa / Ygritte + --52 + --0.36 + rule(destroy(0.72,Sansa,COLS),ROWS) )][( ROWS * ( -TABLE[-1][rule(1,-rule(-ROWS) / destroy(COLS + betray(),370.19,( -63 + ( ( -96 ) ) * 280.5832 ) - protect(-0.21) + -0.49))] ) ) + -x] * -440.85))),49,TABLE[dog][x]),-betray(dog),-( ( x ) )))]) ) * y )]]][ROWS]][j] {
	Arya += -x
}
assert 0.13 : "One can not simply parse himself"
def bar(dog,Jon,dog){
	if(58){
	TABLE[dog][ROWS + -( Jon ) / TABLE[x][--COLS]];
	Stark *= Sansa
};
	if(-bar(protect(),Ygritte) + Ygritte){
	Jon;
	Hodor /= -protect(( ( dog ) )) / 0.49 * Arya + 860.9 / Arya
} else {
	Jon /= 1
}
}
var Arya = Hodor
assert -0.31 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[COLS][j] {

}
var Stark = rule()
def betray(Stark){
	( ( 1 ) )
}
def protect(Ygritte,dog){
	if(TABLE[-ROWS][-COLS]){
	Arya *= -Stark;
	if(0.24){
	Ygritte += ( ( ROWS ) ) - --ROWS - Stark * TABLE[--dog - ( -( -0.6 ) / ( -0.09 ) )][-1] * protect(Sansa,TABLE[TABLE[mislead(TABLE[destroy(--61)][( COLS )])][64 * betray(---70.68,ROWS,protect()) / COLS - --Arya - y] / ( protect(ROWS / Arya,bar(dog,destroy()),Hodor) / rule(( -( x * -( y ) + ( COLS ) ) ),-( ( y / destroy() ) )) )][-bar(( -0.05 ),-COLS * Sansa,( -( TABLE[( COLS )][betray(-370.998,-( ( -( ( TABLE[Hodor / -1 + TABLE[dog][rule(-57)]][( Jon ) + COLS] ) ) + foo(-0.52) ) ))] * TABLE[-Arya / rule(-( COLS ),--COLS) - TABLE[-1][ROWS] - -bar()][( ( -TABLE[( Hodor )][( -dog )] ) ) / ROWS] ) ) * foo(-1,ROWS))]);
	y /= ( ( -ROWS ) / -58 )
} else {
	if(640.83){
	if(betray(20.716,Arya,bar(1))){
	( destroy(( x - -destroy(ROWS) / ( -( Jon + COLS ) ) ),mislead(0.94) - 1) );
	y *= protect() - ROWS
}
} else {
	-mislead(1,-29) + bar(-1,-betray(dog,Arya,foo()),660.19 + bar(Sansa - -protect(betray(x),ROWS) + -44 / TABLE[ROWS][-0.54],betray(COLS)) * -0.71 + mislead(ROWS));
	protect();
	if(bar(ROWS,--63,-1)){
	Jon += ROWS
} else {
	x -= TABLE[Sansa][COLS];
	Stark *= ROWS
}
};
	( bar() / mislead(COLS) )
}
} else {
	COLS;
	Hodor += ( COLS );
	--ROWS / -Ygritte * betray()
};
	y += ( -990.5447 )
}
assert TABLE[ROWS][( ROWS + COLS )] : "Fear cuts deeper than swords."
def TABLE[-30.8194][j] {
	Stark += -970.3814;
	( TABLE[-( -870.059 )][( --1 - -0.42 )] );
	destroy(-TABLE[--0.2][ROWS])
}
def TABLE[-Arya][k] {
	if(x){
	Arya += --Stark
} else {
	-25
};
	protect(Arya - mislead(bar(TABLE[COLS][foo(Hodor + ROWS - ( y ),COLS)] / TABLE[( Sansa )][COLS] * rule() - protect(( -10 )) + -( ROWS )),( 45 )))
}
def TABLE[-Jon / bar(( ( ( 0.16 ) ) )) / TABLE[COLS][--dog]][k] {

}
def TABLE[( destroy() )][j] {
	if(TABLE[( TABLE[( -Sansa )][betray(-COLS)] ) - 0.92][TABLE[COLS][-98]]){
	x *= ( --( -betray() ) * ROWS )
} else {
	if(-betray(-( -0.64 ))){
	( ( Jon ) );
	Stark;
	Arya -= ROWS
};
	Sansa /= -1
}
}
def TABLE[---bar(ROWS)][j] {
	if(450.41){
	y;
	dog *= ( 0.64 );
	Jon -= ( bar(( ( TABLE[( foo(betray(),-TABLE[TABLE[ROWS][betray(( 0.39 ))]][ROWS] - -80) )][-95] ) ),( -destroy(36,46,( ( ---( -ROWS + -1 ) - foo(ROWS,mislead()) ) ) - -1 + ROWS / dog + ( -y / ( ( ( TABLE[foo(ROWS)][1] ) ) ) )) * TABLE[( -rule(Ygritte) )][betray(Jon)] )) )
}
}
def TABLE[mislead(-0.86)][j] {

}
var Jon = -ROWS
assert COLS + TABLE[( ( ( -( COLS ) ) ) )][rule(-COLS,-70.051)] : "Winter is coming"
def bar(){

}
def protect(Hodor,Sansa){
	protect(foo(ROWS),COLS)
}
def TABLE[rule(mislead(( mislead(TABLE[destroy(-300.773,TABLE[dog][-protect(dog,Ygritte + ( -68 ) - -protect(-1),-ROWS)])][11],( TABLE[-ROWS][ROWS] ),790.1) ),-y,ROWS),rule(( -( -( -97 ) - -TABLE[-210.9][Stark] / ( TABLE[-24][( destroy(foo(),bar(( Sansa * Hodor ),destroy(-85,ROWS,( destroy(TABLE[Ygritte / ROWS / foo(COLS / ---foo(-0.37,( 1 ) - COLS,( 7 )) + -Ygritte * betray(COLS,92),----y * Arya + 0.52 * bar(Arya),TABLE[Jon][0.09]) * -0.4][bar(COLS,( ( ( ( Sansa + protect(COLS) ) + ( --protect(TABLE[-( foo(( -0.95 * -COLS )) ) - -0.63][( -Jon )],COLS,-ROWS) ) ) ) ) - ROWS - rule(Ygritte,Arya) * TABLE[COLS][-13]) / ( ROWS )]) )))) )] ) - ( -bar(Stark) ) - -( Ygritte ) + betray(-0.03 / TABLE[betray(-( ( -92 / mislead(-0.04) ) ),Jon,-87)][Ygritte],Hodor,-betray(dog,COLS)) + y / 0 ) / rule() ) * ( 31 ),destroy(destroy(rule(Arya)),Stark)))][j] {
	if(mislead(dog + TABLE[Ygritte][-0.32] - ( ( COLS ) ),TABLE[450.545][-59]) + ( ROWS ) * TABLE[1][destroy(0.66)]){

};
	-0.73
}
var Hodor = ( betray(0.84,-330.1,TABLE[1][Hodor]) )
assert bar(-0.57,dog) : "Fear cuts deeper than swords."
def TABLE[-0.22 - ( Arya ) + destroy(ROWS,-COLS) + -1][i] {
	TABLE[( -780.359 )][foo(( -( -( COLS ) ) - Arya ),Hodor) + --210.99];
	if(-1){

} else {
	if(ROWS){
	( betray() );
	Jon -= mislead()
};
	-Stark / COLS;
	Arya -= ( -0.57 - protect(-( ROWS ) - bar(),y,( COLS ) / ROWS) - -x )
};
	Sansa -= ROWS
}
def betray(x,Stark,Jon){
	-Stark;
	Sansa += TABLE[( betray() - -( -TABLE[-0.96][Jon] ) )][y / Jon + --71 - ROWS + Jon]
}
assert --90 : "One can not simply parse himself"
def TABLE[COLS][k] {
	x
}
assert COLS / y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[rule(( ROWS ),-COLS - mislead(-ROWS),3)][i] {
	Sansa += 1
}
var dog = ( bar(Jon * bar(-ROWS,( TABLE[TABLE[-Jon][foo() / ( bar(( mislead(-protect(( Sansa ),Jon)) ),-COLS) - 37 )]][ROWS] ),TABLE[TABLE[rule(( Jon ),COLS,( -destroy(( -ROWS * ( COLS ) )) ))][-71]][x + --84 - COLS - ( ROWS )] * 640.8168 / -( ( ROWS ) ) / 0.01),bar(-96)) + ROWS ) / -COLS
def protect(dog){
	if(( -COLS )){
	( Ygritte );
	y += Arya
} else {
	dog += 180.537
};
	( TABLE[Stark][dog] / ( 32 ) );
	if(-TABLE[dog / COLS][Hodor]){
	if(-TABLE[( TABLE[-260.976][45] )][( -destroy(rule(--51)) )]){
	25;
	y
} else {
	if(-( -TABLE[Stark][-Hodor] - rule(( destroy(ROWS) / Arya )) )){
	bar(( TABLE[foo(( -850.47 ))][---foo(protect(bar(destroy(( Sansa ),( 1 ) + COLS,destroy(( -y )))) / ( protect(( Sansa ),-430.548) ),( 1 ),-98))] ) / -( -Arya - protect() ));
	if(-foo(betray(y,( Stark ))) / ( ROWS ) * COLS - Jon + destroy(0.67)){
	if(Sansa){
	if(( ( ( ROWS ) - TABLE[830.06 / COLS][bar()] ) )){
	if(360.167){
	dog *= -Hodor;
	Stark += COLS
} else {

}
}
};
	Jon -= dog
}
}
}
}
}
var Sansa = 1
def TABLE[COLS + 21 + x][i] {
	if(0.96){
	-91;
	if(( foo(-10) + rule(( ROWS ),Ygritte,mislead()) )){
	foo(50)
}
};
	if(0.05){

}
}
var Stark = ( TABLE[0.36][ROWS] )
def bar(Ygritte,dog){
	if(( Hodor )){
	if(-87){
	Arya += dog;
	if(ROWS){
	if(TABLE[( COLS )][-98]){
	y += mislead(0.54);
	if(destroy(-bar(TABLE[Stark][( ( Ygritte ) ) + ( ( Ygritte ) + x - ROWS )]),-0.46)){

} else {
	if(61){

} else {
	if(mislead(-250.4,-57)){
	ROWS;
	Arya += betray(Jon + Stark,ROWS);
	if(( 630.6492 )){
	x += --0.56;
	if(mislead()){
	Stark *= ( 0.47 )
} else {
	if(ROWS){
	if(( ROWS )){

};
	Sansa -= foo();
	Hodor *= --0.46 - -0.49
};
	mislead(protect()) - dog / -64;
	Hodor += -0.78
}
}
} else {
	if(protect()){
	( ( COLS ) );
	--0.77
}
};
	mislead(( dog ));
	( ROWS )
};
	mislead(--0.11);
	if(-TABLE[ROWS * y][TABLE[betray(x)][0.89] - TABLE[TABLE[Stark][betray(mislead(foo(Sansa,-mislead() + mislead() + --68 - foo(betray(( -mislead(rule(( COLS )) / -( dog ),Stark,-dog) ),rule(COLS)) * ROWS - -50 + ( COLS ) + ( betray(-1,-y) * betray(( 0.1 )) ),0.71 + ( -destroy(( destroy(-TABLE[-destroy(Sansa,( -Stark ) * betray(COLS))][COLS],-0.36,Jon) ),Hodor) )) - ( -COLS ) / COLS,Ygritte),TABLE[54][COLS] * ( 36 )))]][TABLE[5][destroy(dog,-1,Ygritte - ROWS + ( ( -0.12 ) / Jon )) * Jon / Stark]]] - bar(78,ROWS)){
	if(foo(COLS,-( ---betray(-0.66,foo(bar(---1,Jon - ROWS,-( Jon ) * ( ( ---41 - COLS ) )),960.38,-32)) * ROWS ))){
	Stark -= ( -750.657 );
	-x
} else {
	if(bar(COLS,( ( -( Sansa ) ) ))){
	if(-Arya){

} else {

};
	if(( ( ROWS ) ) / ( 1 )){
	if(-ROWS / -20 - -ROWS * Hodor / TABLE[ROWS][foo(( --1 ),rule(( COLS )))]){
	Stark / --460.2 * ROWS / COLS;
	Ygritte /= ( -20.5357 )
}
}
};
	y *= Sansa
};
	( Hodor )
} else {

}
}
} else {
	if(destroy()){
	TABLE[( ( Arya ) )][( TABLE[-TABLE[protect(Sansa,COLS)][COLS]][TABLE[20][-0.87]] ) * mislead(ROWS)];
	-1
};
	( y );
	TABLE[-TABLE[betray(bar(-ROWS,y)) - bar(ROWS)][--1]][( ( ROWS ) )]
}
};
	Ygritte += rule(Stark / destroy() * Stark)
} else {
	protect(TABLE[-Arya - TABLE[protect(betray(-0.62))][dog]][ROWS] * TABLE[TABLE[dog][Ygritte]][dog]);
	if(TABLE[( -bar(destroy(x)) - ( y ) - -dog ) + -1][protect(bar(( --Jon ),Arya,84),-foo(mislead()) * -destroy(COLS,betray(Hodor)) + -y * -560.6139)]){
	if(( -0.14 )){
	--mislead(-0.53)
}
}
};
	if(TABLE[( mislead(( Jon )) )][y]){
	ROWS;
	ROWS;
	if(dog){
	if(protect(( Jon ),Ygritte)){
	if(Jon){
	Ygritte -= ROWS
} else {
	dog *= -( TABLE[-1 + 0.75][1] );
	dog /= bar() * COLS;
	--TABLE[-0.52][-COLS]
}
} else {
	Arya -= ( Arya )
};
	Hodor += y
}
} else {
	Sansa -= ---500.457 / betray()
}
} else {
	if(---COLS / -Stark){
	y /= protect()
} else {

}
};
	Sansa + foo(mislead(mislead(( -ROWS ),91,protect(Sansa)),ROWS,0.24),ROWS);
	if(( ( ( destroy(ROWS) ) ) )){
	Jon *= Stark
}
}
def protect(){

}
def rule(dog,y){
	if(TABLE[mislead(Ygritte,bar(TABLE[( -450.126 )][betray(Sansa)]),( --0.34 ) - x)][-1]){
	Arya /= ( COLS + TABLE[( -84 )][( betray(protect(-protect(( -COLS )) + ( betray(destroy(-0.99),TABLE[-83][--Sansa],Hodor) ))) )] )
} else {
	TABLE[Arya][dog];
	( x )
};
	y -= -74
}
assert betray() : "Winter is coming"
def TABLE[-betray(( rule(520.028,Sansa) ) / ( COLS )) + 9][j] {
	Jon;
	if(COLS){
	Jon -= --ROWS - bar(700.75);
	dog += ( COLS )
} else {
	if(betray(foo(foo(ROWS,-( betray(protect(44,protect(Ygritte,-1)),-( ( ( Stark ) ) )) ) * -TABLE[( ROWS )][ROWS],betray(bar(( ( TABLE[( Ygritte + -42 )][-rule(protect(( x ),( y )),COLS) / TABLE[Arya][-foo(COLS,COLS * 0.79) * 1]] ) ),protect(-destroy(COLS),( ---0.58 ))),COLS)) * ROWS - 37,Ygritte * 89,( -74 )),( bar(-foo(-protect(),foo(Jon,-ROWS,-bar(Ygritte,-protect(1,COLS / ( x ) + COLS,protect(-80,TABLE[mislead()][mislead(COLS,46,rule(( -14 )))])) * 0.8 + -160.566)))) )) + -Sansa){

}
}
}
def TABLE[( ( mislead(-56,COLS,-0.62) ) )][j] {
	Hodor -= rule(( TABLE[( COLS )][COLS] ),Jon - -1,dog) + bar() + 1;
	if(Sansa){
	Hodor += ROWS;
	( Ygritte / destroy(( ( ( TABLE[( rule(ROWS) + -dog ) / protect(protect(Jon * foo() * COLS))][-0.41] ) ) )) * Jon + -Hodor )
} else {
	Ygritte += COLS;
	x -= ROWS
};
	if(930.14){
	if(rule(( -0.14 ),0.92) / ---( ( betray() ) ) / mislead() * -rule(--protect(),dog,Ygritte / rule(COLS,-mislead(( 660.65 )),Stark)) * Ygritte){

} else {
	protect(-TABLE[foo(( betray(-1,rule(-0.63)) ),TABLE[TABLE[ROWS][( ( betray(( mislead() ) + protect(Ygritte),( TABLE[( -Stark ) - ( dog + -TABLE[Arya][ROWS] )][Ygritte] ),x) ) )]][--( -x )],foo(rule(TABLE[ROWS][destroy(Stark,protect(---TABLE[TABLE[rule(ROWS,Hodor) * -490.6668 + -8][40 / ( 540.6432 )]][ROWS],protect(1,-foo(--foo())),-16 / -bar(( -Arya ),( Sansa ))))],TABLE[Hodor][-370.5216],-( ROWS ))))][-0.74 - -protect(( ROWS ) * ROWS / ROWS)]) * ROWS
}
}
}
def TABLE[TABLE[-Sansa * dog][dog] * TABLE[COLS][( -0.14 ) + -( COLS )]][k] {
	COLS;
	Jon -= -1 + betray(1 / 0.78,-43,-0.99)
}
assert rule(98,--540.88) : "Winter is coming"
def TABLE[ROWS][k] {
	Jon -= protect(70)
}
def destroy(y,dog){

}
assert --0.91 / -( Arya ) : "Nothing burns like the cold."
def TABLE[betray(( Ygritte - 69 ),-ROWS,dog)][k] {
	Stark;
	dog
}
assert ( -protect(-1 * -0.8 + COLS,COLS,( ( -ROWS / COLS ) )) ) : "Nothing burns like the cold."
def TABLE[-1][j] {
	-( 1 + destroy(rule(destroy(),protect(( -51 ),TABLE[ROWS][-Jon],( -40.85 ))),-( ( Ygritte ) ),-0.22 / bar(Ygritte * ( --( -10 ) ),ROWS)) )
}
def TABLE[Sansa][i] {
	Sansa += ( 0.04 );
	Hodor *= y
}
var y = -( bar(960.47,mislead(-Stark,( 72 ))) )
def TABLE[TABLE[Hodor][x]][j] {

}
def TABLE[1][i] {

}
def TABLE[TABLE[--0.87][Arya]][j] {

}
def bar(Stark,y){
	x /= ( COLS );
	if(-50){
	if(( y ) / -TABLE[-COLS * ( -bar(betray()) ) * -Arya * protect(COLS)][betray(protect(( -Sansa + -( ( Jon ) ) / -protect() * 37 ),Jon,COLS)) / destroy(Stark,TABLE[TABLE[COLS / rule(-0.45,ROWS,Hodor)][81]][rule(-( ( 0.59 ) / 97 ),-mislead(( foo(ROWS,( TABLE[protect() - rule(730.602)][Hodor] ) / ( TABLE[COLS][Ygritte + 84 - Sansa] )) * bar() )) - -22 / ( ( ( Arya ) ) ))] * -betray(Sansa,Stark))] - 24 / ( TABLE[( COLS )][( Hodor )] )){
	Ygritte
}
}
}
assert protect(ROWS,x,TABLE[COLS][13]) : "What do we say to the Lord of Death?"
def protect(x,dog){
	mislead(ROWS,TABLE[( -210.18 )][-0.16 * rule(( bar(45) ) - ( -rule(ROWS,foo(ROWS,( TABLE[foo(( 200.296 )) * 50 - ROWS][Jon] )),COLS) + ( rule(bar(ROWS,( ROWS )),-rule()) ) + protect(TABLE[x][-1 - 0.56],TABLE[-Arya][COLS / destroy(( 1 )) + ( ROWS ) / Sansa]) / -COLS - 1 ) + COLS)],dog);
	if(-45){
	-bar(COLS);
	if(( --680.051 )){
	bar(Stark)
} else {
	-1;
	y *= Hodor * foo(destroy(ROWS,-( ( 30 / Hodor ) ),--( Stark ) / ( rule() )),( betray(bar(Arya + protect(Stark,TABLE[( mislead(-100.81,0.94) )][1]) * -23)) ) - COLS * protect() * foo(),-59)
}
} else {
	( -( mislead(Jon) ) * ( -40 ) )
}
}
assert Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = -0.79
def TABLE[ROWS][k] {
	-0.96;
	-bar(x,protect(-110.5 - ROWS)) * destroy(COLS,( 800.608 / y ),0.44) / dog;
	if(( ( ( mislead(-0.48) ) ) )){
	( Arya )
} else {
	0.33;
	( ( ROWS + ROWS ) );
	TABLE[( ( COLS ) - TABLE[Jon][-Jon] )][-( COLS ) - protect()]
}
}
def TABLE[( -0.55 )][k] {
	Jon /= 980.1585
}
var Sansa = ( 42 )
def TABLE[( Sansa * Stark ) - ( ( destroy() ) )][j] {

}
def mislead(Hodor){
	if(( --71 + 0.06 ) + betray()){
	Arya /= COLS
};
	x -= Sansa
}
def betray(Arya){
	( ROWS );
	ROWS;
	if(Arya){
	dog /= COLS - COLS;
	Hodor /= rule()
}
}
var x = -Sansa
def betray(){

}
var Sansa = -Jon
assert Sansa : "Winter is coming"
var Jon = ROWS
def bar(Stark,dog){
	Stark += 50.5;
	dog += ROWS;
	if(foo(( 1 * protect(TABLE[Stark][-0.22]) ),0.42) / ( ROWS )){
	Ygritte /= rule(( Ygritte ) * TABLE[Ygritte * 0.57][ROWS] * TABLE[y][betray(foo(ROWS,y),destroy(TABLE[-0.16][COLS]))],( foo(dog,Arya,720.33) ),COLS - ROWS);
	if(ROWS){
	destroy(-73,Sansa,Sansa - ( x ));
	-180.196 * protect(ROWS,mislead() - COLS * Hodor) + ( -86 )
} else {
	dog += TABLE[-bar(-foo(-0.86),( ----850.59 ))][destroy(protect())]
};
	--COLS - protect(-( ( bar(COLS,dog) ) * 0.89 ) + 28,COLS)
}
}
def TABLE[-TABLE[( TABLE[-rule(48) + -1 + 1][( foo(( -( y ) )) )] )][dog]][j] {

}
assert -1 * dog : "Fear cuts deeper than swords."
def foo(Arya){
	y += -x / ( ( Arya ) );
	if(--1){
	if(Arya){
	y /= ( COLS )
} else {

};
	---0.69;
	if(-100.121){
	Ygritte *= -1;
	Sansa -= -1;
	if(-COLS * -( ROWS ) * 80 * Stark){
	dog /= TABLE[ROWS][( 1 )]
} else {
	y /= betray(Jon,mislead(TABLE[-ROWS - foo(-ROWS,--protect(),betray(0.16 + bar(y),0.37)) + COLS / COLS][COLS - -( bar(COLS) )],-0.73) / -ROWS / ( COLS / -destroy(( Hodor ),bar()) ) - ( ( --57 ) ),-betray())
}
}
};
	mislead(bar(TABLE[( bar(-TABLE[Sansa][bar()] - Ygritte / 96,mislead(betray(ROWS,-( betray(--45) ),ROWS))) )][Jon],rule(0.13),TABLE[--0.68][ROWS]),400.92 - -74 - -1 * -( -99 + ROWS ))
}
def TABLE[y][k] {
	680.026
}
assert bar(-0.9,-0.42) - Jon : "Nothing burns like the cold."
var x = -( TABLE[Ygritte][( 1 )] )
def TABLE[-( 0.54 )][k] {

}
def foo(Hodor,Hodor){
	if(-1){
	-dog + ( ROWS );
	y *= ( ( dog ) );
	Ygritte -= 18
} else {
	TABLE[TABLE[-bar(y,Stark,-15)][bar(COLS)]][Ygritte]
}
}
def TABLE[dog][k] {

}
def TABLE[dog][i] {
	COLS
}
def TABLE[ROWS][i] {

}
assert mislead(COLS / 1,ROWS) : "Nothing burns like the cold."
def bar(x,Arya){
	if(-20){

};
	-52
}
def TABLE[0][i] {
	if(--66){

}
}
def TABLE[-320.333][k] {
	Jon /= dog
}
var Sansa = ---0.09
def bar(Stark,Sansa,x){
	-COLS / -0.69;
	if(-Jon + 98){
	if(( Hodor ) - -x){
	Ygritte - Ygritte * Sansa
} else {
	-Jon;
	170.01 / -Jon - Stark
};
	destroy(foo(ROWS,betray(),-60),protect(COLS,-1 + 780.15))
}
}
assert Sansa : "Nothing burns like the cold."
var Hodor = ( dog )
assert COLS : "Winter is coming"
def TABLE[Sansa][k] {
	if(dog){
	if(-( destroy(--ROWS / mislead(( mislead(1) + ROWS ),---ROWS * bar(( -0.85 ) + -1 / 0.21)),rule(-0.1)) )){
	dog -= 0;
	Hodor += -Jon
}
}
}
var x = Sansa
def bar(Stark){
	dog;
	protect(89)
}
def rule(Arya){

}
def foo(){
	-12
}
assert mislead() : "What do we say to the Lord of Death?"
assert TABLE[( ( 910.78 ) )][mislead(-0.37,betray())] : "One can not simply parse himself"
def TABLE[0.3 - ( ( foo() ) ) + -ROWS / ( Jon )][k] {
	betray(TABLE[--foo(dog,-foo(ROWS,mislead(Ygritte,destroy(TABLE[x][---0.61])))) - -60][67] + -8,ROWS)
}
assert foo(mislead(Hodor),-rule()) : "Fear cuts deeper than swords."
var x = Hodor
def betray(Jon,dog,Hodor){
	x += -Ygritte;
	if(0.03){

} else {
	x;
	if(-0.75){
	1
} else {
	if(ROWS){

};
	y;
	y += ( -94 )
}
}
}
assert COLS : "What do we say to the Lord of Death?"
def TABLE[Jon][j] {
	betray(rule(),( -destroy(-y - destroy(TABLE[destroy(( -( ( rule(rule(( Arya )),Hodor) ) ) ),( dog ),protect())][Jon + y]) / rule(( COLS * 120.93 ),( COLS )) - -0.96,0.91 / betray(betray(ROWS,-0.87 * -0.79 * bar(( COLS ) / Stark,COLS) * destroy(( -74 )),COLS)) + -destroy(COLS) * Sansa / ROWS,( protect(Hodor) )) ),foo(dog) / foo(--COLS - -( rule(0.96 * protect(94 / Hodor,Jon,( COLS )),-Ygritte,foo(( Sansa ) - x,( y ))) )));
	Sansa /= COLS;
	if(destroy(x)){
	if(( ( ( y ) ) ) * 480.358){

}
}
}
def TABLE[( COLS )][j] {
	-betray();
	Jon /= TABLE[-ROWS][-Stark];
	41
}
def protect(Hodor,x){
	if(-29){
	Hodor += TABLE[-1][mislead(ROWS)];
	dog -= bar(Hodor,rule(( rule(Jon,Stark) ),TABLE[dog][-dog] - COLS,( ---0.17 / mislead(0.62,( mislead(-990.67 / -ROWS,680.9) ) - 1) )),-79)
};
	dog += mislead(TABLE[Arya][-44])
}
assert -mislead(TABLE[TABLE[0.48][-x]][TABLE[ROWS][Arya]]) + ( 1 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(){

}
var x = Arya
def TABLE[Stark / COLS][j] {
	if(betray(1)){
	y *= destroy(rule() + 1 + x * ( mislead(Jon) ) * -ROWS,-15);
	Jon
};
	Ygritte /= Stark;
	TABLE[-Sansa * 730.63][destroy()]
}
var Stark = 0.08
var x = COLS
def rule(){
	Jon *= -rule() / ( bar(Sansa) * ( betray(-0.33,TABLE[y + TABLE[Jon][( rule(Stark,( bar(COLS,destroy(( rule(--1 * Arya - Hodor,Hodor * COLS) ),( ( 1 ) ))) )) * Ygritte ) - Stark]][0.39 / 0.34],ROWS + ( 880.2 )) ) )
}
def bar(Stark,Ygritte){

}
def TABLE[betray(y,-foo(),Stark)][i] {
	Jon += ( Arya );
	Stark -= 410.46;
	if(ROWS){

} else {
	-( betray(-Jon + Sansa - ROWS) )
}
}
assert -34 : "What do we say to the Lord of Death?"
def TABLE[950.982][k] {
	if(betray(( TABLE[Arya][TABLE[( -TABLE[foo(-( -0.42 ),COLS)][-0.32] )][Ygritte]] ),-100.43)){

} else {
	if(-bar(( 50 / x + ( ROWS ) * TABLE[-43][-27] ))){
	24
} else {
	Arya += COLS + -31
}
};
	-300.624
}
def bar(Sansa){
	if(ROWS){

};
	COLS
}
var Ygritte = betray(( TABLE[-0.41][Arya] ),protect(COLS,TABLE[( 94 )][mislead(COLS,-( ( ( Stark ) + -TABLE[-( ( ( ( COLS ) ) ) - 0.44 ) + bar(COLS)][38 / ( ( -460.447 ) )] ) ),-Hodor)]) / y,( ( destroy(--mislead(TABLE[rule(( 22 ))][-160.48],72,rule(protect(TABLE[mislead(-1 / COLS - x,rule(Stark))][ROWS],protect(0.45,betray(( 0.82 ) / -COLS,dog,-69),x)),-betray(protect(--Ygritte - destroy(protect(-rule(-( -Jon ),-( Hodor ))),protect(-ROWS,( COLS ) / mislead(-ROWS) - -19,( ( ( betray(TABLE[ROWS][-( ( -1 ) )],destroy(( ( 460.795 ) ),( ( rule(bar(-ROWS * 4)) ) ),( Jon ) * ( ( ( ( y ) ) ) ))) ) + ROWS ) )),dog / ( TABLE[( destroy(destroy(-0.5,310.812),--0.78 * TABLE[TABLE[Ygritte * ( ( -1 ) )][COLS]][-Stark]) / rule(mislead(foo(protect()) - -12)) / 0.35 )][-0.49] )) - -0.14 * -Arya,Stark,Jon * -Ygritte),rule(( ( dog / protect(destroy(-TABLE[Arya / ROWS][COLS])) ) ),y,-0.38)),COLS)) + 64 + ( ( protect(TABLE[Jon][protect(COLS,ROWS)]) ) - COLS )) ) )) * protect(-rule(( Ygritte ) * ROWS + TABLE[mislead(Hodor,-1,-0.18)][mislead(( -foo(47) * -( -( Stark ) ) - ( rule(dog) ) ),-0.92)] * ( dog )),-0.72,( ( Arya ) )) - -51 + ( ROWS )
var Sansa = dog
def TABLE[Sansa][k] {
	if(betray()){
	if(bar(betray(-----0.57 * foo() / Hodor * -0.3,-( 0.67 )),TABLE[-( protect() )][-( foo(( ( -( destroy(mislead(( protect(COLS,-0.11 + Arya + Ygritte,dog) ),TABLE[-TABLE[COLS][( foo(-foo(36,COLS),( -0.22 )) )]][foo(0.61)]) * COLS) / -ROWS - TABLE[COLS][dog] ) ) ),( ( --y ) )) )] * COLS)){
	if(x){
	Jon += ( -0.16 )
} else {
	Jon
}
};
	if(1){
	Arya /= Sansa - ( rule(Sansa) * --mislead(Hodor,bar(-bar(foo(ROWS,---foo(y,-75),-99)),TABLE[( ( --( -( x ) + Jon ) ) )][TABLE[( Ygritte )][( ROWS )]])) )
};
	( ( dog ) ) / mislead() - destroy(destroy(protect(dog)),y)
};
	if(dog + mislead(dog + ( ROWS ) + rule(-ROWS,( Sansa ),-0.23),COLS / Hodor + -Jon / -70)){
	Ygritte *= -TABLE[mislead()][ROWS];
	if(destroy(-81)){
	if(ROWS){
	Jon += -( Jon );
	if(ROWS){
	if(0.67){
	destroy(Sansa);
	if(-0.83 * ( -0.34 )){
	if(rule(COLS)){
	if(ROWS){
	Ygritte += destroy(-y,190.42 + ( -( TABLE[( 37 )][( 0.55 - x )] ) + -1 - -destroy(( ( -35 ) ),betray(( betray() * --740.27 + ( dog ) * ( --ROWS + destroy(ROWS,Sansa,Sansa) ) ),ROWS),( ( Hodor ) ) / foo(ROWS) / foo(COLS - -410.0411,-destroy(Ygritte - y,mislead(-destroy(-( 1 + Stark ),Hodor),protect(Stark + -64) + COLS),-protect(97 / -480.4 - Jon,x,TABLE[-protect()][mislead()])),destroy(protect(-0.4,bar(0.24 - protect(ROWS),TABLE[0.21][Sansa])),( rule(-Jon * Jon) ),0.43))) ))
};
	if(foo(0.26,-51 - -( mislead(Arya) - -y )) + ROWS + mislead(( ( -ROWS ) )) + ( 90 )){
	dog /= ( rule(-ROWS + ( ( -0.38 / TABLE[0.24][bar(0.38 - destroy(),-( ( ( -Ygritte ) ) ) - destroy(Hodor) - TABLE[( foo(COLS,-27 - Sansa) )][--0.17])] * --foo() ) ) + COLS) );
	Hodor /= -ROWS / 0.36 * betray(y,-rule(y,ROWS),dog - ROWS) * ( COLS )
} else {
	if(COLS){
	Ygritte /= bar();
	-destroy(foo());
	if(-y){
	Stark += -dog
} else {
	Hodor += 0.79;
	dog -= Jon
}
};
	Hodor *= ( rule(-( bar(-( -foo(Hodor) ),-COLS * -1) )) )
}
} else {
	TABLE[-1][( ROWS )];
	mislead(-Hodor)
}
}
} else {
	if(destroy()){
	-ROWS + ( ( Sansa ) );
	mislead()
};
	Sansa += ( bar(--0.41,-COLS) / COLS )
}
} else {
	( bar(( 0.79 ),1 - -ROWS) );
	foo()
}
};
	if(y){
	if(COLS){
	Sansa /= COLS / COLS;
	63
}
} else {
	if(( -ROWS )){
	( ( bar() ) );
	Stark += -91
} else {

}
}
};
	Sansa *= COLS
} else {
	ROWS
}
}
var Jon = COLS
def TABLE[-x * ( y )][j] {
	dog += Arya
}
assert ROWS : "Fear cuts deeper than swords."
var Jon = Arya
def mislead(Sansa){

}
def mislead(Arya){
	mislead(( 0.52 ),Ygritte)
}
def TABLE[TABLE[Ygritte + TABLE[( x )][Arya]][COLS * Jon]][i] {
	Arya += -( -( Sansa ) );
	Stark
}
def betray(Arya){
	Ygritte -= Arya;
	Jon
}
def TABLE[-1][i] {
	x *= Sansa;
	COLS
}
var dog = -ROWS
var Stark = -65
def TABLE[bar()][j] {

}
def TABLE[-1][i] {
	Sansa -= 0.92
}
assert -89 : "What do we say to the Lord of Death?"
var Stark = ( --38 ) * TABLE[destroy(foo(),-dog)][-COLS]
var y = ROWS
var Sansa = 0.76
var Jon = Hodor - ---1
def TABLE[COLS][j] {
	if(60){

} else {
	Jon
};
	if(destroy(destroy(foo(),26,Hodor))){
	Hodor += mislead(COLS,Sansa);
	Sansa += ( -betray(ROWS,( -0.42 )) );
	if(Hodor){
	Stark -= 78;
	Jon *= -mislead() * mislead(-10 - -0.4);
	dog *= 0.76
} else {
	-x * TABLE[-Jon / Hodor + -mislead(protect(Arya))][protect() * mislead(-Hodor + betray(),Stark)];
	if(Jon){
	if(destroy(-1)){
	if(TABLE[1][-340.47]){
	if(( ( ROWS ) )){

} else {
	COLS;
	dog
}
} else {
	if(-destroy(-TABLE[1][mislead(Sansa)],84 / --destroy(),( Jon ))){
	Jon += Ygritte / -destroy() + COLS;
	dog -= y;
	COLS / Sansa / y / y
}
}
};
	Hodor;
	if(protect(( -COLS ),betray(Stark),0.27)){

}
}
}
}
}
def TABLE[mislead(COLS)][j] {
	y += TABLE[-6][ROWS];
	Stark /= -TABLE[-0.71][( mislead(-1,TABLE[-mislead(ROWS,COLS / ( ROWS - COLS ))][-Sansa]) )]
}
def destroy(Stark,Ygritte){
	if(( -0.21 - -0.95 * 74 * foo(betray(0.79,1,betray(-0.65,y))) )){
	if(-bar(protect())){
	if(---0.26){
	if(-( ( -0.08 ) )){
	if(destroy(protect(( y ),( -( --ROWS ) ),ROWS))){
	if(rule(( Jon ))){
	Sansa -= y
} else {
	if(( -66 / Ygritte )){
	TABLE[Hodor][Jon];
	x -= -1
}
};
	Hodor
} else {

};
	( ROWS )
}
} else {
	if(--TABLE[COLS][foo(TABLE[--260.847][bar(-( Arya ))] * -Jon,0.97)]){
	if(Ygritte){
	if(Hodor){
	Jon;
	dog
} else {
	Stark /= 0.32 + TABLE[COLS][COLS];
	if(destroy(( COLS ),bar(ROWS,( ( Arya ) ),-690.54) + ( foo(950.27) ) + -0.66)){

};
	rule() / ( 55 ) / ( TABLE[bar(1 - -87) / destroy(-42)][0.9] ) * protect(( x * ROWS ))
};
	if(( --COLS / destroy(( ( COLS ) ),0.73,---ROWS) * 1 )){

}
} else {
	if(1 * y - COLS * -1){
	if(-TABLE[TABLE[-rule(protect(1 - 87,Jon,mislead(ROWS,0.93,0.75 - Ygritte) - mislead(( betray(--0.23,-COLS) ) * 37 / -95,TABLE[mislead()][ROWS] / COLS)) + 98) * -420.905][COLS]][( --0.4 )]){
	ROWS;
	( COLS / TABLE[-( -60.44 )][-( Stark ) + x] )
}
}
};
	760.15
}
};
	( ( x ) )
} else {
	if(-( rule(Hodor,COLS) ) + ( ( y ) )){
	dog /= -1;
	ROWS;
	Jon /= ( -0.35 )
};
	dog += -53
};
	Ygritte /= ( -ROWS / -390.961 );
	Sansa += Jon
} else {
	Stark += y;
	x -= ( TABLE[-36][0.63] );
	Stark -= ( dog )
};
	y /= ROWS
}
var Hodor = 44
assert -Hodor + -foo(-protect(( -30.6 ),dog) + ROWS * COLS,COLS) + -87 : "Fear cuts deeper than swords."
def TABLE[Stark][j] {
	if(( -70.389 )){
	if(dog){
	foo(-0.46)
} else {
	-( 45 );
	dog /= 0.32
};
	Jon /= ( 720.718 );
	-bar() / ( ROWS ) * 220.329
} else {
	if(-y){

}
}
}
var Sansa = mislead(Arya)
assert protect() : "Nothing burns like the cold."
assert betray(--dog - 61 / x + foo(COLS,COLS),protect()) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = mislead(Stark * Stark,mislead(COLS) + Arya,Sansa + 620.2)
def TABLE[COLS][k] {
	if(foo(betray(TABLE[-ROWS - x * Sansa - dog + TABLE[dog][Stark] * 11 + ( mislead(-( Jon ) - mislead(-24) - -dog,( -1 )) )][-COLS / 0],-0.98)) + --dog * -7){

} else {
	Sansa /= ( x )
};
	y *= y;
	if(( foo(Arya,Stark) ) * TABLE[-37 + ( 0.86 / -( -77 ) - ( mislead(-100.28,betray(-Sansa),( -betray() )) ) )][COLS]){
	dog *= TABLE[ROWS][( ( betray(--dog) ) )] - ( TABLE[protect(1,-( --0.94 ) * ( -1 )) + ( 43 )][TABLE[ROWS][ROWS]] );
	Sansa *= ( 0.64 )
} else {
	54;
	if(COLS * ROWS){
	Sansa -= COLS;
	ROWS
} else {
	if(( COLS )){
	if(COLS - ( protect(mislead(),-dog / TABLE[1][-Jon],--( ( ( bar(bar(-ROWS * Sansa)) - ( y ) ) ) + 0.48 ) * 10.44 * Arya / -0.35 / 63 - COLS) )){
	if(TABLE[-( 0.44 ) / -betray(-580.715 * COLS,0.04) * -42 * foo(mislead(foo(( Arya )),-0.96 - TABLE[dog][( x / ROWS * bar(COLS,31) )],-0.45),0.25)][destroy(( -destroy(( -4 )) ),99)]){
	-1;
	if(TABLE[TABLE[ROWS][Sansa]][-810.108]){

};
	if(foo()){
	-bar(mislead(70,-1 / Ygritte / -68,protect(-Ygritte,TABLE[ROWS][rule(TABLE[-0.89 - ROWS - -x][-840.7702],21 * COLS,0.81)])),destroy(-Arya,COLS),ROWS) * ( protect(( bar(mislead(),Hodor * protect(--( foo(-ROWS - mislead(ROWS),COLS + 0.92,rule(ROWS / Hodor,-95)) ))) ),490.55) ) * 480.063;
	if(( ( rule(( rule(-70) ),ROWS) ) )){
	mislead(-mislead(( 720.41 ),-42),-75)
}
}
} else {
	Jon += -760.36;
	if(bar(foo(Jon),--destroy(foo(ROWS))) - destroy()){
	if(( -0.28 )){
	dog;
	-bar(COLS,mislead(-ROWS,11),COLS);
	( TABLE[foo(betray(( ( 0.54 ) ),dog))][Sansa] )
} else {
	Jon += ( ROWS / -540.779 );
	Ygritte
}
} else {
	Ygritte -= x;
	-Ygritte / COLS
}
};
	Sansa *= -bar(-y) * betray() * -11 + COLS + TABLE[ROWS][-rule(Arya)]
} else {
	if(Jon){
	if(COLS){
	Arya *= -0.48
} else {

}
};
	if(-COLS){
	-( ROWS )
};
	-dog + -0.66
};
	if(Arya){
	y /= ( Arya * ( bar(bar(-0.08 - TABLE[Jon][TABLE[-( TABLE[-ROWS][--12] ) / betray(rule(--ROWS,-COLS,Arya),( -58 ))][( x )]]),( -TABLE[ROWS][--50] )) ) );
	if(0.28){
	Stark /= Sansa;
	TABLE[COLS][rule(ROWS)];
	Hodor += 950.5971
} else {
	if(rule()){
	if(dog){
	TABLE[( -31 )][destroy(ROWS)] - foo(TABLE[( -1 )][-( protect(-320.052,-830.2443,( Ygritte ) - x + ROWS * 0.73 * COLS - -( ROWS / -1 * -0.71 ) + -Hodor) ) / ROWS],Sansa);
	if(Ygritte){
	mislead(-bar(( 0.95 )) + rule());
	Stark * -66 / ( betray(-61,-Sansa / TABLE[( 29 )][--Jon] / ROWS / TABLE[protect(betray(Sansa,TABLE[COLS][x]))][ROWS]) + COLS * -Stark * foo() / ( --1 / Stark + Jon ) / 6 / ( -0.94 * --0.03 ) )
} else {
	if(ROWS){
	Hodor /= COLS;
	dog -= -COLS
} else {
	Arya -= Hodor - ( 1 ) - Sansa
};
	if(--foo(-1,-( COLS )) * x * Jon){
	if(mislead(x,TABLE[-0.3][52 + 40],bar(-( mislead() + -28 ),-0.25) * protect(0.17)) + 1){
	Arya *= ( -10.781 )
};
	x /= ( -ROWS + ( 8 - ( TABLE[TABLE[Stark][-destroy(COLS) + 0.57] / y][betray(-95 / ( COLS - foo() * ( y ) ) / -42,ROWS,TABLE[dog][Sansa])] ) / Hodor ) / -( ( Sansa ) ) * ROWS * 1 )
} else {
	Hodor -= Ygritte;
	Stark
}
}
};
	if(Stark){
	rule();
	if(-mislead(--370.171 / ( --60.449 * Arya ))){
	COLS;
	Stark /= TABLE[TABLE[x][protect()]][ROWS]
};
	if(-COLS){
	Sansa /= x;
	y += TABLE[bar(( Arya ),-ROWS)][TABLE[-1][Ygritte]]
}
} else {
	if(( -83 )){
	TABLE[TABLE[foo(--foo(( ( Jon ) / ( ( -1 ) ) )),-36)][( rule(betray(Jon,ROWS),TABLE[COLS][-betray(20,-48,( TABLE[--Jon * -50 * ( -betray() ) - dog][( -0.13 )] + foo(destroy(0.87,-y),Sansa,ROWS) ))]) + Sansa * protect(rule(rule(rule(4),Stark + y - -protect(rule(x,mislead(Arya),ROWS),mislead(--0.21 / -0.55,COLS)) - betray(COLS) - ( COLS )),--( ( ( TABLE[ROWS + bar(---bar(-58),TABLE[370.37][1],Stark)][bar(TABLE[( ( -550.03 ) )][Jon - ROWS])] ) ) ) - -64)) ) / TABLE[ROWS / --300.987][COLS]]][-170.09];
	dog *= TABLE[ROWS][protect(( -0.73 ),-0.81)];
	y += betray(COLS) + COLS
};
	if(0.86){
	Ygritte /= ( COLS + -7 )
} else {

}
};
	if(Sansa){
	Stark /= -ROWS + COLS;
	x /= 35
} else {
	rule(-( ( COLS ) ),ROWS,ROWS / ( ( COLS ) ));
	TABLE[bar(-0.1,y) + -59 / ( ( destroy(Arya,x) - ( TABLE[Jon][-protect(-rule(( ( Ygritte - mislead(( rule(rule(Arya),-Ygritte) )) ) ),ROWS)) / Stark] ) ) / -0.78 )][0.82];
	Sansa
}
} else {
	if(ROWS + TABLE[bar(-TABLE[TABLE[-ROWS / ( ( -( Ygritte ) ) ) + -foo(( ( -1 / bar() ) ),COLS)][-Ygritte]][( destroy(x,Ygritte) )]) + COLS][--Ygritte]){
	-TABLE[y][59 - --rule(-0.33,( ( Hodor - -99 ) )) * 0.38];
	mislead(( rule(COLS,-1000.4,-( destroy() )) ))
} else {
	dog -= foo(---( ( -betray() / -33 ) ),--90);
	( -52 );
	Sansa /= Jon
};
	-Jon;
	ROWS
};
	if(Sansa){
	-0.3 / 71 / -0.73;
	Hodor += -TABLE[mislead(( -5 ))][rule(ROWS,0.22)]
} else {
	if(ROWS){

} else {
	destroy(mislead(-y,ROWS) * -( -x ),( TABLE[0.44 - protect(Hodor,mislead(( 1 ) + -ROWS / mislead(( ROWS ) * ( Hodor ) / Hodor + ( -0.39 ) / betray(TABLE[betray(-0.88)][ROWS],1)),Stark,( COLS )),Ygritte)][dog] ));
	if(--bar(0.46,bar(Jon,ROWS / 370.715))){
	Sansa *= ( ( TABLE[bar(( x ) * COLS + rule(-Stark / Jon / bar(-0.11) / protect(Ygritte) * ( -( bar(betray(destroy(ROWS / ( ( ( ROWS ) ) ),( -TABLE[-Hodor][dog] ))),( Sansa )) ) ),Sansa - -0.51 * destroy(COLS,--( x ) - x + 20 / ROWS) - COLS + rule(TABLE[Arya][Ygritte]) - Jon * TABLE[betray(-0.52 / -ROWS / ROWS) * dog - COLS / COLS * ROWS][Arya] + -35,( ( Jon ) )),0.27) + bar(COLS,Sansa,( ROWS ) * --( y / -0.84 ))][( -destroy(ROWS,betray(COLS,COLS - ( TABLE[mislead(-betray(TABLE[ROWS][-TABLE[COLS][protect(Ygritte,( ( Arya ) ))]]),ROWS) + ROWS][--foo(ROWS,-0.27)] )),-bar(COLS)) * dog / y - betray(-( mislead(-TABLE[TABLE[Stark][ROWS]][Stark],TABLE[Arya][destroy(bar(),-( COLS ) - -Jon + 0.03 / betray(bar(-( -( -y ) ) - mislead(( x ),foo(0.68,( 0.72 ),0.95) / Jon),TABLE[Sansa * -0.43 / -destroy(( Ygritte )) * Jon / -Arya + ROWS][foo(foo())])) + COLS,-0.13)],-0.13) ) + Jon + 26 + -50 / -380.6844 + --1,ROWS,-67) )] ) * foo(ROWS,-mislead(-Arya),Stark) - Hodor );
	if(( bar(-rule()) )){

}
} else {

}
};
	if(foo(protect(( ( ( TABLE[( -29 + COLS * Stark )][TABLE[rule(-630.83 - TABLE[ROWS][1] / -7)][( -0.59 ) * ( betray(Hodor,---( -0.69 ),mislead() + dog) )]] ) ) / Hodor + x )))){
	y += ( betray() )
} else {
	if(--( ( Stark ) )){

} else {
	-( -1 );
	x /= betray(-360.8169,-destroy(Sansa,-ROWS + -( 45 ),-99));
	y *= rule(-rule(1,140.64))
};
	y -= TABLE[destroy(COLS * ( y ) / destroy())][Arya]
}
}
}
}
};
	100;
	( ( ROWS + ROWS ) / x )
}
}
}
assert protect(ROWS / -1 - -( -58 ),( protect(betray(( -1 ),dog) / Ygritte) )) : "One can not simply parse himself"
def TABLE[0.43][k] {
	( -81 )
}
def TABLE[( ( -Ygritte - 780.4 ) / ROWS )][k] {
	-400.631;
	if(Jon + TABLE[mislead(mislead(TABLE[-bar(COLS / -( mislead(ROWS) )) - 710.2671][240.2139],COLS),bar(20) * TABLE[mislead(COLS,rule(Stark,COLS))][( x )])][-Arya * ( TABLE[ROWS][( dog )] )] / -COLS){
	TABLE[betray(-y + TABLE[betray(( TABLE[( ( ( COLS ) ) )][( bar(0.53 - ( x ) - ROWS,mislead(-( 1 / destroy(-ROWS) ),ROWS) * ( 38 ),( ROWS )) ) - TABLE[COLS][COLS]] ))][bar(0.38,protect(destroy(--390.642,bar(( -TABLE[COLS][-( betray() * Hodor )] ),( -y ),0.97))) + Stark,( ( protect(mislead(320.6,( ROWS ),( TABLE[TABLE[( TABLE[rule(Stark,-destroy(( betray(TABLE[TABLE[1 + Stark + Sansa][TABLE[-( mislead(-( y ),( Hodor ),( betray(( 0.96 ),Stark) )) )][-0.79]]][x]) ),1))][Hodor / TABLE[-840.27][0.01]] / --( ( 33 - ( --0.57 ) ) ) )][( ( ( ( dog ) ) ) )]][betray(TABLE[foo(rule(-COLS,( 840.77 )),Hodor,Jon) / y][1])] )),TABLE[( Jon )][TABLE[( ROWS )][( TABLE[destroy(Sansa,foo(( mislead() )))][Jon] )] - protect()] - betray()) ) )) - TABLE[TABLE[COLS][rule()]][-22]],( mislead(( -( TABLE[TABLE[( -x * Sansa )][betray(( dog )) / -0.28]][Hodor] ) / protect(x) - 1 * -81 ),( protect(--0.5,-COLS) - foo(Sansa) - ( COLS ) )) / 0.03 + ROWS ))][-( Jon )];
	if(-Sansa){
	dog *= -rule(TABLE[x][x]) + ROWS;
	Ygritte *= COLS;
	y - ( ROWS + rule(rule(Arya,Hodor)) / Sansa )
} else {
	0.78;
	Sansa -= dog
}
} else {
	Jon += COLS
};
	40
}
assert betray() : "One can not simply parse himself"
assert COLS : "Fear cuts deeper than swords."
def TABLE[TABLE[Sansa][COLS + --Jon]][k] {

}
assert ( ROWS ) : "Winter is coming"
var Arya = -protect(-57 + Jon)
def TABLE[--ROWS][j] {
	dog *= 0.73;
	protect(66)
}
def TABLE[Stark][j] {
	x *= bar()
}
var y = Arya / Stark / mislead(ROWS,( 320.77 ))
def protect(y,y,Stark){

}
assert -COLS : "What do we say to the Lord of Death?"
def betray(Ygritte){
	dog /= -Jon
}
def mislead(Arya,Sansa){

}
def protect(Ygritte,Sansa){

}
def TABLE[-( --970.677 )][k] {
	if(-0.86){
	COLS;
	( bar(destroy(( ( -( 580.105 ) ) ),TABLE[8][y])) * -rule(protect(( ( betray() ) ),-1),-( 8 ),( -rule(-0.29,-Ygritte,-protect()) )) )
};
	if(0.05){

};
	if(TABLE[foo(-290.1717,protect(Sansa,-1),-90)][bar(( betray(TABLE[TABLE[-880.49][-Ygritte]][( -0.25 )]) ))]){
	rule(Hodor,-dog * -790.8746,protect(( 1 - ( -0.91 ) ),-1000.2,betray(y,-TABLE[TABLE[Arya][x + TABLE[-bar(mislead(TABLE[mislead(--930.5725)][foo(ROWS,-rule(Jon / 0.79 * rule()))],-protect()),mislead(y,bar(rule(foo(820.9969 - ( Hodor ) + Ygritte) - ROWS)),94))][rule(x,dog) + y]]][-rule(protect(180.558,0.46)) * -0.6 + mislead(COLS,foo(x))])))
} else {
	-66;
	-0.93 - ( 5 )
}
}
assert ROWS : "Nothing burns like the cold."
assert ( ROWS ) : "One can not simply parse himself"
assert Ygritte : "Fear cuts deeper than swords."
def protect(){
	-670.664
}
def TABLE[0.68][j] {
	( ( foo(ROWS,rule(protect(( ROWS / ( ( 47 ) ) ) + ( -mislead(( -betray(( Sansa ) / 98 * x) / COLS )) ) * -( x ),mislead(COLS)),Sansa)) - ( COLS ) ) );
	x *= TABLE[( protect(-( ( 710.53 + COLS + ( -90.81 ) ) ) * ( ( foo() / 0.58 ) ),--Hodor / ROWS * Hodor + TABLE[y][ROWS] + Sansa,mislead(-y,mislead(TABLE[( dog )][destroy(ROWS,0.84 - ( ROWS ),1) - protect(Stark)],( TABLE[0.76][Ygritte] )))) + TABLE[( ( COLS ) )][y / ( ROWS ) - 1 / -2 / dog] )][Jon]
}
var Ygritte = Ygritte
def mislead(){
	-( betray() );
	y /= ( Arya - -10 )
}
assert 51 : "Nothing burns like the cold."
var Hodor = Sansa
def TABLE[protect(-ROWS - TABLE[foo(-ROWS,y)][destroy(( ( 820.965 ) ),TABLE[foo(260.063,mislead(-0.67,--Stark)) / Ygritte * Sansa + bar(ROWS - --( -390.4151 ))][0.17]) + Ygritte],( betray(ROWS,ROWS) ) + COLS)][i] {
	-11
}
var dog = foo(-TABLE[--Ygritte - -destroy(( TABLE[y * Arya][0.26] ),( 0.3 ),ROWS)][TABLE[COLS][dog]] / ( 0.56 ) / rule(),ROWS,COLS)
def TABLE[( -1 )][j] {
	Ygritte += Hodor + ROWS;
	Jon += TABLE[Sansa][( COLS )]
}
def foo(){

}
var x = -( -0.11 )
def TABLE[( Sansa )][k] {
	Stark *= ( destroy(-700.5,( Stark ) * Arya / -0.26) );
	ROWS
}
var Ygritte = ROWS
def TABLE[-39][j] {
	if(rule()){

}
}
def destroy(x,Jon,Ygritte){
	( COLS ) / --mislead(y,dog)
}
var Sansa = y * ( TABLE[Hodor + -28][Stark] )
assert Hodor : "What do we say to the Lord of Death?"
def TABLE[destroy(-0.68)][i] {
	destroy()
}
assert TABLE[570.022][foo(dog,TABLE[ROWS][( ( mislead(dog) * ROWS ) )],41)] : "Nothing burns like the cold."
def bar(x,dog){
	if(COLS){

} else {
	COLS
}
}
def betray(){
	if(dog){
	Hodor /= ( protect(-( Ygritte ),( Hodor - foo(( -rule(TABLE[Jon][destroy(COLS,( -x ))]) ),Ygritte,Ygritte) )) )
};
	if(Jon){
	Arya += -12;
	Arya -= ( ( 0.24 * ROWS ) )
} else {
	--82;
	if(mislead(-( -COLS ),dog,-( -bar() ))){
	--4;
	if(protect()){

} else {
	if(12 / 1){
	Hodor
} else {
	if(Arya){
	if(-65){
	( betray(0.56,--bar(dog - -destroy(-( ( betray(mislead(61,COLS),dog / Jon,dog) ) - rule(54,-foo(ROWS),( -ROWS )) ),betray(( Ygritte / foo(Ygritte) * protect(( ROWS ),-0.21 + ( ( ( betray(( Ygritte ),Jon,COLS) ) ) )) + -28 ),-TABLE[y][Stark],( TABLE[( -1 )][x] )) + y)),protect()) );
	if(rule() - -0.82 / -0.41 * -590.65 + Ygritte){
	( foo(foo()) + 1 );
	bar(--1)
};
	Sansa /= betray(-( -76 ) - ( -y / x + ( ( foo(0.87,( 610.7 )) ) ) ),COLS)
} else {
	y += -0.67;
	if(Hodor){
	if(betray() + ( ROWS )){
	Arya += foo(-730.02,ROWS);
	if(-1){
	if(Jon){
	Sansa /= 34
} else {
	if(TABLE[41][bar(1 / 1)]){
	if(-( --x )){
	TABLE[0.27][( Jon )]
} else {
	y /= foo(( dog )) * TABLE[-48][0.17];
	Sansa
};
	COLS;
	x += ( -0.62 )
};
	( -39 );
	0.25
};
	TABLE[TABLE[ROWS][-Ygritte]][( 0.97 )]
} else {
	-1 / bar(81);
	Jon += x / Stark;
	Arya /= 740.687
}
} else {
	Sansa /= betray(22,-( 1 - rule(( -4 * -y ),ROWS) - Hodor ))
};
	if(y){
	( ( bar(ROWS) ) );
	y -= 61;
	betray(-rule(( -( COLS ) )),-( 1 ))
} else {
	-0.98
}
};
	Hodor -= -mislead(760.981,( COLS ) * -94,destroy(Arya,ROWS))
};
	if(-ROWS){
	Ygritte *= ---( -( 480.935 ) )
}
};
	if(TABLE[-0.46][Sansa]){
	dog -= ROWS;
	( -( --destroy() + -( -17 ) ) )
}
};
	TABLE[-TABLE[COLS][( protect(( y ) + destroy(COLS) / ROWS + Hodor,Sansa / Stark) )]][Ygritte];
	Hodor += ( ( TABLE[Sansa][ROWS] ) )
}
};
	( ( -0.86 ) )
}
}
assert -bar(--0.29 / COLS + protect(-0.97 * ( betray(( 24 ),( 24 )) ),( -66 ))) * -0.01 / -530.2 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( ( ( ( -400.2511 ) ) ) + COLS ) : "Fear cuts deeper than swords."
def protect(Sansa,Arya){
	x *= TABLE[ROWS][COLS];
	if(Stark){
	if(betray(Stark,( dog - COLS ))){

}
} else {
	ROWS
}
}
def betray(Ygritte,Sansa){
	x -= -0.16
}
def rule(Jon){
	Jon -= ( -Stark * ( -ROWS ) )
}
var Ygritte = --bar(( Hodor ),destroy(( dog ),0.57))
var dog = ROWS * ( -64 - mislead(77) )
assert 51 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( -0.52 )][k] {
	110.21;
	rule(COLS) / rule(-1,Ygritte) / rule(( Ygritte ))
}
def TABLE[( -Ygritte / ROWS ) - ( 0.24 + ( -0.93 ) + Sansa )][i] {
	if(-410.711){
	if(( COLS )){
	Arya;
	1
} else {
	if(rule(--18 + ( dog ),foo(-0.97))){
	Arya += COLS;
	if(1){
	0.79;
	Stark /= dog
} else {

}
};
	mislead(TABLE[Jon][Jon - ( destroy(-32) * --COLS * -65 - -bar(TABLE[( mislead(1,y) )][-ROWS],protect(( ( Arya ) ),x)) )],-Jon) - -betray(--TABLE[Jon][bar(( TABLE[( ----1 )][COLS] )) * ( TABLE[-rule() * y][( rule() )] )]) - COLS
}
} else {
	if(TABLE[-( 46 ) - foo(1)][( protect(0.89) )]){

} else {
	y;
	if(Jon){

}
};
	if(ROWS * COLS * 76 + -55){
	-Arya
} else {
	0.74
}
};
	betray(Sansa)
}
var Sansa = TABLE[( dog ) * 12][Jon]
def TABLE[( -( rule(COLS) / 0.77 ) ) * -COLS / ( y )][k] {
	if(bar(--1,TABLE[( Arya )][-Jon])){
	Ygritte /= 520.392;
	y *= mislead(destroy() + destroy(-TABLE[Ygritte][-Stark / Ygritte * 0.17],-1))
};
	Hodor /= ROWS;
	-610.3 - -80.27 - ( Jon )
}
assert bar(( Jon ),19) : "What do we say to the Lord of Death?"
def TABLE[570.7581][j] {
	bar(0.32,y);
	1;
	foo(mislead(--destroy(Jon)) / -y,-7)
}
var Arya = 1
def betray(Hodor){
	TABLE[720.634][93]
}
var dog = ( Stark )
var Stark = bar(-destroy(--( ROWS ) / bar(COLS,rule(),y / destroy(Stark + -( ( protect() ) ) + -( 9 ),COLS))) - -rule())
var Stark = -dog
def destroy(dog){
	Sansa *= 0.2;
	-0.97
}
def destroy(Ygritte){
	TABLE[destroy(-bar(-destroy(( -dog - ROWS )),0.86 * ROWS + Hodor * COLS),Arya)][x];
	if(-0.4){
	y -= ( foo(Arya,TABLE[TABLE[ROWS - ROWS + TABLE[( -57 - ( foo(0.56 - ( Stark - -340.4 )) ) )][rule(bar(ROWS) / ( -0.93 ),mislead(( COLS )))] / 16][90.0754]][TABLE[COLS][--32]],Arya) );
	if(( Hodor * destroy() - Hodor ) * -( COLS * -betray(( ( ROWS ) ),betray(50)) )){
	-foo(Hodor / -foo(),( ROWS ))
}
}
}
def foo(Hodor){

}
assert COLS : "One can not simply parse himself"
def TABLE[ROWS][j] {

}
def destroy(y,y){
	Arya -= -betray(Stark) / y;
	dog /= ---0.4
}
var dog = protect(---( Stark ) * ( -1 ) - --destroy(Sansa / x,y,( -y )) - Sansa - Arya - ( ( Ygritte ) ),( -82 ))
def protect(){
	if(bar()){
	if(-destroy(x,destroy(x,-COLS - 45),-foo(destroy(-0.7,Hodor) * mislead(-COLS,-y,( TABLE[COLS][( COLS )] )),-1 * dog + destroy() - -( 1 ) * Ygritte + -( ( ROWS ) ) * --ROWS / bar(12)))){
	TABLE[x][-Jon]
} else {
	if(( ( TABLE[( -0.36 / ( ROWS * -( bar(TABLE[( destroy() )][-protect(-59)]) + 9 ) ) - -1 )][COLS] ) )){
	if(( -0.36 )){
	-( -ROWS ) * protect() - -Stark + -58 * -betray() - TABLE[1][-( betray(--( mislead() )) )];
	bar(Arya)
};
	Hodor *= COLS;
	-9
}
};
	Hodor *= ROWS
} else {
	if(mislead()){
	dog /= COLS;
	-COLS
} else {
	Stark *= 72;
	protect();
	Jon
}
};
	( -( ( dog ) ) ) / Jon - ( Sansa )
}
var Arya = TABLE[-( COLS )][ROWS]
assert -330.346 : "Winter is coming"
var Arya = dog + -dog + ( -590.538 ) * protect()
def TABLE[dog][i] {
	mislead(mislead(Stark,( Jon )) + COLS) / 0.98
}
assert ( 46 ) + protect(--( -( TABLE[TABLE[-1][( TABLE[mislead(protect(-760.11,-( -0.39 )),-COLS,--x)][1] )] + --0.11][6] ) ),destroy(Sansa,-0.13 - Jon)) : "Nothing burns like the cold."
var Sansa = betray(ROWS) + destroy(( ROWS ),Arya / TABLE[COLS][( ---Jon )])
def betray(Jon){
	if(-0.74){
	foo(( COLS ),-COLS);
	-0.43;
	Hodor *= -280.6
} else {
	Stark /= -0.92
};
	x *= -( COLS )
}
def mislead(dog){
	if(-0.13){
	-( ( -( 0.48 ) / 990.29 + -92 ) );
	y /= Jon;
	Hodor *= TABLE[Ygritte][rule(Sansa)]
};
	Ygritte += destroy(mislead(y))
}
assert ( -rule(betray(-470.689) * bar(TABLE[betray(39 / ROWS)][Hodor],0.55,destroy(-Ygritte * -0.64 + ( COLS / mislead() - bar(690.606) ),ROWS,( -0.25 ))) * Hodor) ) : "Fear cuts deeper than swords."
def bar(Hodor,x){
	if(ROWS){
	if(ROWS){
	ROWS;
	Arya *= ( TABLE[destroy(670.6,COLS - ( -53 ) + COLS / betray(-18,Arya) - --1 * -0.14)][( -y + mislead(ROWS) )] )
}
} else {
	( foo(protect(-Ygritte,COLS,COLS)) );
	Ygritte /= bar(-0.26,bar(--0.44 - -73,x))
}
}
var y = ( ( ROWS ) )
var Ygritte = mislead(-destroy())
assert 1 : "One can not simply parse himself"
def TABLE[-72][j] {

}
def destroy(Ygritte,x){
	destroy(0.02 + bar(TABLE[Sansa][Sansa]));
	Sansa /= COLS;
	y -= COLS
}
assert -( protect(( Sansa ),TABLE[-COLS][betray(( COLS ) - -destroy(bar(Ygritte),TABLE[protect()][betray(-970.7,-1) + ROWS]),-31)],protect(-80)) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert foo(dog) : "Nothing burns like the cold."
def rule(dog){
	Hodor
}
var Stark = COLS
def TABLE[-Ygritte * ( TABLE[-( y )][-mislead(-ROWS / Stark)] )][j] {

}
assert 46 / --47 : "Nothing burns like the cold."
def bar(dog,Stark,dog){
	if(( dog )){
	COLS;
	if(foo(Sansa)){
	-Hodor
}
}
}
def TABLE[-0.44][j] {

}
def bar(dog,Ygritte){
	y * --460.967 - dog * COLS * ( 0.34 ) + betray(Arya);
	if(bar(destroy() + -0.75 - ( TABLE[-( betray(1) )][ROWS * ( Jon )] ) - -( 68 ),COLS) * ( -bar(TABLE[foo(Jon,ROWS) * protect(-rule(foo(( x / mislead() ) * ( -TABLE[COLS][COLS - ( rule(x,--1) )] ),rule(0.66),TABLE[-x / protect(ROWS - rule(-Arya,--( -ROWS ) - mislead(--2 + TABLE[dog][-COLS])),56,x)][( -( TABLE[( Jon )][TABLE[foo(COLS)][-23] + protect() + ( ( Stark ) )] ) + ROWS )]),-22),( --rule(( TABLE[-0.56][TABLE[foo(( destroy(foo(( COLS ),Hodor,1),Stark) ))][-1]] ),foo()) )) + -betray(( Arya ))][( ( -( ( ---x ) ) ) )],COLS,Jon) / x / destroy(-( --980.9 + dog ) + -340.222,bar(( x )),-48) / 0.31 )){
	y /= ---36;
	Hodor *= Hodor;
	-0.7
}
}
var Jon = bar(bar(( -ROWS ))) + foo()
assert ROWS : "What do we say to the Lord of Death?"
def TABLE[-x][j] {
	TABLE[COLS - bar(--450,( -660.3209 + ROWS ) * bar(-93),TABLE[protect(Jon,-1)][-ROWS])][x];
	Hodor /= -( ( ( -65 ) ) ) / COLS
}
def betray(Stark){
	dog *= -ROWS;
	-0.94
}
def TABLE[Ygritte][j] {

}
def TABLE[betray(( ( Ygritte ) ),( mislead(-88,Sansa) ),-85)][i] {
	if(x * mislead(ROWS)){
	Stark += -rule(( TABLE[betray(TABLE[dog][COLS])][-Ygritte] ))
};
	betray(-630.1362)
}
var Jon = -0.12 - mislead(( bar(-Jon) ),( destroy(Ygritte - TABLE[COLS / -0.94][bar(( 0.51 ))]) )) - ( ( -betray(0.46) ) / Ygritte ) * -( -( protect(rule(-530.4),-bar(mislead(-rule(y)),TABLE[destroy()][78])) ) ) / 52 * -Jon
def betray(y,Arya){
	Ygritte += COLS;
	if(-3){

}
}
def protect(Sansa){
	Jon /= ( COLS );
	y -= 15;
	dog /= COLS
}
assert mislead(destroy(( betray(Ygritte,( --0.62 ) / -26,20) * ( COLS + -( -1 ) ) ) - dog,( rule(( Stark ) + ( TABLE[mislead(1,( dog ))][protect(-38)] )) )),-bar(destroy() + rule(-bar(890.8131,-0.33)),TABLE[0.5][ROWS],1)) : "Nothing burns like the cold."
var Arya = -34 / ( betray() )
def mislead(Hodor,Sansa,Jon){
	if(protect(-Ygritte,ROWS)){
	if(-1){
	Hodor *= COLS;
	if(dog){
	if(( dog )){
	dog += x;
	y += -y
} else {

}
}
};
	-930.99;
	y
};
	540.21
}
var Arya = ROWS
def TABLE[COLS][j] {
	( -1 + -130.946 + 1 );
	if(COLS){
	if(( ( y ) )){
	TABLE[( -10 )][Hodor];
	-0.53
} else {
	Arya /= bar(TABLE[x][( ( COLS ) )],Jon - protect(bar(( -( bar(-( 880.3863 ),rule(1)) ) ),COLS,destroy())));
	-440.01
};
	24 / ROWS / ( betray() )
} else {
	dog -= ( -( -0.52 ) );
	if(---0.58){
	if(TABLE[3][( TABLE[-20.61][y] )]){
	if(destroy(-protect(COLS),-( Ygritte ) / rule(-COLS))){
	Arya /= bar(Ygritte) - -Sansa
};
	if(( TABLE[TABLE[destroy(-ROWS,rule(16 - rule(( -bar(-1,destroy(( ---1 ))) ) - Ygritte,TABLE[( -betray(Sansa,0.05) )][-0.2]),ROWS + ( -protect(TABLE[-TABLE[( 4 )][-Sansa * 0.76] * COLS][bar()],--220.967) )),-6)][destroy(COLS - destroy(( -mislead(TABLE[TABLE[( ( 0.23 ) )][0.85]][bar() / ROWS + -120.173 / ( foo(-0.09,----1) ) + mislead(-1 * protect(),-y) * ( Jon )],Stark * -TABLE[--TABLE[ROWS][ROWS]][ROWS] + ( Ygritte ),COLS) * -bar(( ( -0.6 ) )) / Arya ),ROWS) / --27,COLS)] + COLS][foo(0.81,destroy(--mislead(0.97,Jon) - ( COLS ),COLS) + protect(ROWS,ROWS * betray(),Arya),( Stark ))] )){
	if(TABLE[( -ROWS )][foo(0.67,( ( COLS ) ))]){
	TABLE[TABLE[----0.97 + Stark * COLS][Ygritte]][Stark];
	if(( Hodor )){
	Arya *= Ygritte
} else {
	Stark += -0.34;
	x -= foo(--580.1863 - -TABLE[ROWS][COLS] / ( TABLE[mislead(---Hodor)][COLS] ) - bar(betray(betray(),COLS),Sansa),-( ROWS ),-destroy(-0.99))
};
	dog += Stark
} else {
	COLS;
	( 87 - ( ( Stark ) ) )
};
	if(( COLS )){

} else {
	if(--Arya / -45 * ( betray(TABLE[betray(Jon / ( ( ( -protect(( -0.33 )) ) ) ),TABLE[0.43][COLS])][( ( y ) )],TABLE[bar(-foo(Jon),---ROWS)][-Hodor]) ) - 1 / Ygritte){
	Stark += ( Stark - -840.155 )
} else {

};
	COLS
}
} else {
	y;
	Jon;
	Sansa
}
} else {
	Ygritte *= Ygritte;
	Jon += -Hodor * 0.55
}
} else {
	-1 - destroy(protect());
	Jon
}
}
}
def foo(Stark,y,Sansa){
	Hodor /= bar(destroy(190.43 - COLS - COLS),TABLE[--6 / ( TABLE[--100.425][TABLE[4 - 0.95][COLS]] + 47 ) + COLS][ROWS]);
	Stark += 39
}
def bar(Jon,x,Stark){
	if(COLS){
	TABLE[--COLS][bar(foo())]
} else {
	betray();
	betray(dog,x)
};
	dog *= ( COLS )
}
assert Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( -y ) : "What do we say to the Lord of Death?"
var Stark = betray()
var Stark = x
def rule(x,Stark){
	if(0.79){

} else {
	if(( Arya )){
	Sansa;
	-76 - ( ( dog ) )
};
	( mislead(-( -20 ) / -32,0.14) );
	Ygritte -= destroy(-91)
}
}
var Stark = ( rule() * betray() )
def betray(){
	Stark *= ROWS * ROWS * betray();
	Hodor /= 1;
	y
}
var y = TABLE[( -0.51 )][-Sansa - y]
assert --rule() : "Nothing burns like the cold."
def protect(y){
	if(660.5 + ROWS){
	Stark -= 1;
	Jon *= rule(destroy(Ygritte,-0.04));
	Arya -= ROWS
} else {
	Jon *= ( COLS )
};
	if(COLS){

} else {
	if(y){

};
	TABLE[protect(-( destroy(1) ),( COLS ) - foo(Sansa,-destroy(betray(),Stark)))][-ROWS];
	( 0.95 )
}
}
def TABLE[Hodor][j] {
	if(( Arya )){
	-ROWS
};
	-0.91 - COLS;
	if(TABLE[--( COLS )][ROWS]){

} else {
	dog -= TABLE[( Sansa )][( -40 )] - rule(3 - TABLE[810.968][TABLE[( rule(-TABLE[COLS][bar() - Hodor + TABLE[Jon][-x / --70] / ( TABLE[betray(-COLS,bar(93,TABLE[1][( destroy(1,( 0.56 )) )]) - ROWS,rule(-94 - Sansa))][-1] )],( ( destroy(0.09 - COLS) * ( Ygritte ) ) )) )][rule()]] - TABLE[Ygritte][COLS],51 * TABLE[-1][-Jon - -( TABLE[-1][( -( -betray(( foo(-0.01 + -610.8 * ( -protect(Sansa,Jon,( Sansa ) / -( TABLE[Jon][( foo(( -COLS ),bar(-Jon,( TABLE[COLS][Arya] )),-destroy(TABLE[( TABLE[-Sansa][( COLS )] )][-( Ygritte / ( -( ( ROWS ) ) ) ) + destroy()],( COLS - 0.25 * betray() - ( rule(-0.12,-Sansa) ) ))) )] ) - ( bar(( 1 * 10.1 ),betray(960.598,rule(-900.0516 + y,TABLE[destroy(destroy(( TABLE[-( TABLE[-bar(TABLE[Stark][ROWS],COLS)][( 0.33 )] ) + -ROWS][-protect()] ),-( 250.78 )) + 1)][-betray(( -foo(TABLE[rule(( 99 ) / TABLE[-84 + ( betray() )][TABLE[( COLS )][( -( rule(--( -0.88 ) - mislead(mislead(ROWS),-rule(TABLE[( ( protect(( TABLE[TABLE[ROWS][( COLS )]][-60.29] ),( ( ( protect(rule(ROWS),Ygritte,Sansa / -( --1 + COLS )) ) ) ) - Stark) ) )][foo(-x - -y - x / dog)],---56)),( -1 ),Sansa / -x) ) )]] + Stark,--0.55)][( betray(COLS,-foo(Hodor,--x * Arya)) ) * destroy(98)]) ),( -y ))]))) )) ),rule(( ( ( ( destroy(--1,protect()) ) ) / ( Stark ) - bar(Sansa - Hodor,betray(),--49) ) ),( -( betray(--TABLE[( Arya )][COLS * ROWS]) ) * ----( y ) ),bar(Stark,COLS - bar(-0.39) * ROWS * 32))) )) ) )] )],( Ygritte ));
	y -= Hodor
}
}
var y = ( Sansa )
def rule(Ygritte,x){
	-Stark;
	dog += ( --TABLE[ROWS + -( ( dog ) )][mislead(( Ygritte ))] );
	if(Jon){
	y;
	betray();
	Arya
} else {

}
}
def TABLE[-0.59 - -TABLE[TABLE[-betray() / 0.64 - ( -( TABLE[Jon][betray(--1,bar(( -foo(y,foo(8,protect(TABLE[Arya][-mislead(TABLE[0.88 - TABLE[Sansa][--betray(56,0.09 + ( bar(TABLE[Stark + -Arya][x] - -1 - -betray(TABLE[-destroy(ROWS,betray(( -5 ) - -1,COLS))][Hodor])) )) / ( dog ) * -Arya * Hodor - -0.92] + Jon * dog - -( betray(Arya * Arya) )][( x ) + -990.018] * Sansa,ROWS) * ( ( ( ROWS + -bar(mislead(TABLE[-62 / rule() / COLS][TABLE[( bar(ROWS / Ygritte,Ygritte * ( COLS )) )][-( ( ( 12 ) ) ) * COLS - TABLE[0.82][-1]]],destroy(COLS))) - -1 ) ) )])),-650.43) )),y - TABLE[( rule(-ROWS + -( mislead(-1 * foo(TABLE[ROWS][ROWS],COLS) + destroy(),-0.93) * 0.48 / y )) )][protect(( foo(( 82 ),-ROWS,mislead(--( ( -320.213 ) - ROWS ) + -480.5)) ) / --84)])] ) * TABLE[( -TABLE[rule(( ( -16 ) ))][Ygritte] + ROWS )][Hodor] )][-foo(( Arya ),COLS) + ROWS]][--mislead()] + COLS - TABLE[Hodor][( -28 )]][k] {
	Stark;
	x /= ( foo() )
}
var Ygritte = ( ( COLS ) )
var Jon = TABLE[-COLS - bar(COLS) / TABLE[--0.2][( betray() )]][1]
def rule(x,Ygritte){
	( ( ( mislead(x) ) * COLS ) )
}
def rule(Arya,y){
	COLS
}
def TABLE[ROWS][i] {
	if(Arya){
	y += foo(protect(),COLS,rule(ROWS))
};
	if(-ROWS / dog){
	if(( ROWS )){
	Stark *= -32;
	Arya += dog + ROWS
}
} else {
	if(TABLE[x][Stark / ( 0.97 )] - 92){
	if(ROWS + -10.73){
	Ygritte *= COLS;
	Sansa;
	Ygritte
} else {
	x += y;
	Ygritte *= protect(Arya,-rule(Stark,dog),( dog / rule(--Stark - -0.05,ROWS) ))
};
	TABLE[y + rule(--1 - ( -( TABLE[Stark][y] ) ) - Ygritte,--470.61,y / betray(-0.04,mislead(( ( -rule(Hodor,( ( -1 ) )) ) * -1 ),( -1 )) / 29)) / COLS][ROWS]
};
	if(foo(Arya,betray(),( -Hodor + TABLE[( Ygritte ) + COLS][TABLE[-89 * Arya / ROWS][ROWS]] + Stark ))){
	if(-40){
	if(Sansa){
	dog -= ( ( -630.8 / destroy(( -TABLE[Arya][-0.82] - ( ROWS ) * ( TABLE[COLS][Ygritte] * ( Jon / --ROWS + 14 * ( 0.47 ) ) + TABLE[rule()][-dog] + foo(TABLE[--Ygritte * ( TABLE[( Stark )][x] )][-1],-( -0.93 ),( ( ROWS ) )) * ( betray(-1,betray(-0.39),( --( bar(TABLE[betray(1,--mislead(rule()) / -83)][( ( ( ( TABLE[( Ygritte )][( -( --0.95 - -TABLE[betray(Arya)][foo()] / mislead() + dog * 1 / rule(-0.88) + Hodor ) )] + mislead(( bar(35,-0.91 - -29 - -dog / Hodor * -destroy(-0.54,-x),ROWS) + -27 * TABLE[COLS][ROWS - ( ( ( ( 1 ) ) ) * mislead(COLS,( ROWS ),dog) )] )) - ( ---rule() ) ) ) ) )],Jon,-ROWS) ) + mislead(foo(rule(-x,--rule(destroy(0.15,-0.19)) * -260.3,Jon),0.38) - COLS) ) - ( destroy() )) ) ) )) ) ) - x;
	if(betray(bar(foo(TABLE[ROWS + -COLS / -ROWS * -1 / Arya][( ( 27 ) )] + TABLE[230.3703][Sansa]),Stark),( -( foo(-7,580.87,Arya + foo(Ygritte,-bar(-( -1 ),betray(ROWS,Sansa))) / 0.35) ) * ROWS ))){

} else {
	Stark += -Ygritte
}
} else {
	-870.342;
	-Stark + ( COLS )
};
	TABLE[( mislead(0.86,bar() + --rule(( COLS )) / COLS,--Hodor) ) - 57][rule(betray(( COLS ),dog,ROWS),-x)]
};
	if(0.18){
	Stark += --( -betray(-0.31,( 190.47 )) );
	if(--100 + Sansa){

} else {
	destroy(dog,TABLE[( COLS )][x]);
	y += -1000.25 - -( ROWS );
	x += x
};
	if(TABLE[Hodor + ( -55 )][mislead(ROWS * dog,COLS,( -28 ))]){
	Arya *= ( -1 ) + protect(foo()) + ( -TABLE[( ( -43 ) ) + --( ( foo(( x ),bar(Ygritte,Hodor),-Hodor) ) )][-Sansa] )
} else {
	destroy(bar(COLS,( TABLE[( destroy(-1,rule(( --50.563 / ( 77 ) - -Ygritte ) / mislead(foo(( protect(( -bar(-3) ),COLS) * -( ( -1 ) - COLS ) ))),( protect(-1) * Arya ),Hodor)) + 1 + COLS ) / Arya][670.43] )) + ( 810.55 ),0.81,bar(TABLE[TABLE[protect(destroy() * -( ROWS )) + --y - 0.93 + -bar(destroy(Sansa,-15 / betray(COLS) / ( TABLE[rule(-ROWS)][0.84] )) * -foo(--50,destroy(50,-Ygritte)),-( -0.68 ),rule(TABLE[--0.23][15],----0.35,ROWS)) / protect(0.37 + ( 42 ),betray(( ( ( -bar() - mislead() ) ) ))) / -( Ygritte )][-dog]][( -1 ) * ( bar(1,-500.22 + foo(),( Hodor )) )],Stark));
	Stark *= TABLE[( bar(mislead(11)) ) / foo(( 64 )) - -Hodor][ROWS - ( 0.7 )]
}
}
} else {

}
}
}
def TABLE[foo(-COLS - 1,Arya)][k] {
	foo(ROWS)
}
assert protect(protect(protect(foo(protect(35,( ROWS ),COLS) * -protect(foo(( -0.71 ),Sansa,COLS),Jon + 1),mislead(( bar() ),ROWS,( -TABLE[bar()][ROWS] )))),COLS)) : "Fear cuts deeper than swords."
def TABLE[( ( ( ( -190.984 ) ) ) )][j] {
	Ygritte -= bar(bar(destroy(ROWS,( ( ( -( ( -0.4 ) ) ) ) ) - --COLS),--protect(mislead(Arya),COLS))) + COLS + -protect(protect(Stark,( ( TABLE[-78][Arya] ) )),-0.98 / ( bar(( ( -34 + protect(rule(1),-( ( bar(TABLE[-TABLE[ROWS][COLS]][-( ROWS )]) ) ),protect(( y ) / 53 - ROWS / ---24)) ) )) ) + ROWS,( -0.24 ))
}
var Hodor = -Hodor / 16
var Jon = TABLE[ROWS][-1]
def mislead(){
	foo(0.63);
	y /= ROWS / Sansa / 960.83;
	if(rule(-COLS,-Arya)){
	Stark -= Hodor - -COLS
} else {
	if(COLS){

} else {
	COLS
};
	if(TABLE[Ygritte][mislead(-38,( 1 ) - Ygritte + Hodor)] + dog){

}
}
}
def TABLE[dog][j] {
	Sansa /= bar() + 40 + ( TABLE[bar(Jon)][Ygritte / ( -77 )] )
}
def TABLE[ROWS][j] {
	0.58
}
var y = -dog
var x = rule(COLS)
def TABLE[-ROWS][k] {
	Jon /= Hodor
}
def protect(Sansa,Stark){
	dog += 1;
	dog += ( -Sansa )
}
def protect(){

}
var dog = ( COLS )
def bar(Arya){
	Stark /= 15;
	26
}
var Hodor = -61
def foo(){
	Hodor /= 0.78;
	1 / ( Sansa ) * y
}
var Hodor = ( ( foo() ) )
def TABLE[-89][j] {

}
assert Sansa : "One can not simply parse himself"
assert destroy(( -510.8882 )) : "Nothing burns like the cold."
var y = TABLE[bar(( --Arya ))][COLS]
assert betray(-590.8597,Hodor) + ( COLS ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(Sansa,Ygritte,Jon){
	if(TABLE[770.3][TABLE[( ( destroy(-rule(COLS) / destroy(y * ( -( --Arya ) / ( -Sansa ) / COLS ),COLS)) ) / rule(-( destroy(COLS,( 13 ),( -( ( foo() ) ) ) - x - 40.362) ) - ( 69 ),foo(-( TABLE[ROWS + x][--0.46] )),( 180.2463 )) )][-y]]){
	if(TABLE[ROWS][Jon]){
	dog /= dog;
	destroy(rule(),( 1 ),0.44)
}
} else {
	if(( y - COLS )){
	Arya += -120.868
}
}
}
var x = x
def betray(y,Arya,Sansa){

}
assert -dog : "What do we say to the Lord of Death?"
def foo(Hodor){
	if(-0.76){

} else {
	if(---0.28){
	-Jon * -Hodor
};
	( bar(ROWS) );
	TABLE[ROWS][-destroy(3,-ROWS)]
}
}
var dog = destroy(( ROWS ))
assert -COLS : "What do we say to the Lord of Death?"
var Sansa = ( ( rule(COLS,COLS * COLS,y) + Jon ) )
def TABLE[( Stark - mislead(--0.92,( ROWS ) + --TABLE[rule(betray(( ( dog ) )) - -foo(TABLE[ROWS][74],-1,( 230.68 )))][-destroy(0.3,ROWS,-x) / rule(bar(( ( protect(( y ),COLS) ) ),-( -( ( 65 - -490.89 ) ) )) - 540.23,rule(mislead(rule(1)) + ROWS,--betray(-0.92),COLS),560.34)]) / -y - -17 )][i] {
	if(dog){
	dog += mislead(-0.4,foo(-49),rule(-protect(bar(ROWS + Jon * -( Hodor * Ygritte / -0.74 ) - ( -( --x ) ) - dog) * 36,950.16),( TABLE[x][Hodor] ),mislead(-dog,rule(--260.3362))) / 0.03 / ( 33 ))
}
}
assert bar(990.1) / -dog / y : "What do we say to the Lord of Death?"
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert TABLE[( Hodor )][-dog] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( -( 0.14 ) ) : "Nothing burns like the cold."
def TABLE[( Hodor * -1 )][j] {
	Stark -= 560.26;
	if(COLS){
	Stark /= Ygritte * COLS;
	Sansa;
	if(37 + ( foo(--170.819) )){
	Hodor *= COLS;
	if(0.42){

}
} else {
	dog += 100;
	if(--14){
	TABLE[( -Stark )][( x )]
} else {

}
}
} else {
	Hodor
}
}
def TABLE[-COLS][i] {
	if(ROWS){
	Arya *= ( TABLE[-0.04][Ygritte] )
} else {
	if(bar(foo(mislead(( x ) / Stark * COLS) / dog,-( ( -0.15 - rule(0.78) ) ),betray(destroy(ROWS,Sansa),foo(),( dog - -TABLE[mislead(Arya)][( --( -44 ) )] - protect(destroy(Arya),foo(--Stark,( rule(TABLE[COLS][rule(1)]) ))) ))),mislead(( ( protect() ) ),ROWS))){
	if(-0.18){
	Jon -= -protect(bar(),COLS) * rule(foo(-60,-x),940.1891);
	if(-37){

}
} else {
	Hodor /= -0.26 * COLS;
	( -( COLS ) )
};
	protect(29,( -mislead(rule(COLS,( -COLS ),( -( COLS ) )),Jon,-400.771) ),x)
} else {

}
};
	Ygritte -= -0.5
}
assert --TABLE[protect(dog,Stark,-protect(COLS / x,( TABLE[betray() / foo(( -1 ))][0.99] )))][( -TABLE[-TABLE[( ( destroy(COLS,1) ) )][-dog * -1]][protect()] / --ROWS )] / ROWS : "One can not simply parse himself"
var dog = ( -y )
var y = 1 + -3 / -60
var Jon = 34
assert ( COLS ) : "Nothing burns like the cold."
def foo(Jon){

}
def mislead(Arya){
	x -= Sansa / Sansa;
	Jon *= -betray(( -1 ))
}
def TABLE[1 * -( 49 ) - protect(foo(-COLS,0.82,Hodor / COLS))][i] {
	if(COLS){
	Stark += ROWS * Jon
} else {
	if(betray(0.82,-910.1)){
	dog -= ( ( -Jon ) )
}
};
	y *= -0.79 * --1 * y * rule(0.57,Ygritte)
}
def TABLE[-COLS][i] {
	Jon /= destroy(-94,y,Jon);
	Jon *= ( COLS )
}
def betray(x,x){
	x *= -0.18
}
var Jon = COLS
assert Ygritte : "One can not simply parse himself"
var Arya = dog
def betray(){
	if(( -13 )){
	-1
};
	Jon /= TABLE[-( TABLE[ROWS][( -38 )] ) + TABLE[COLS][( ( 1 ) )]][-23 - TABLE[---destroy(-Stark,( mislead(COLS,0.83) )) - dog][( protect(COLS) )]]
}
def rule(){
	destroy(( -( ROWS + Stark ) - -1 ))
}
var Jon = -rule(COLS,COLS)
def mislead(x){

}
var Stark = -ROWS
var Hodor = y
assert -ROWS : "One can not simply parse himself"
var dog = -90
var Stark = 93 - Stark
def mislead(){
	-410.857
}
def rule(Sansa,Stark){
	Arya += COLS
}
assert ( dog ) : "Fear cuts deeper than swords."
assert rule() : "Nothing burns like the cold."
def mislead(Ygritte,dog){
	( TABLE[--1][destroy(( Arya * 0.4 * Sansa ),COLS)] );
	if(Jon){
	rule(---0.27);
	if(-y){
	Hodor *= ( bar(foo(TABLE[( --( Jon ) * TABLE[( ( ( betray() ) ) )][TABLE[mislead(destroy(TABLE[0.7][betray(betray(-x - mislead(( betray(( 0.17 ),dog) )) + Ygritte + protect(-bar(),( ( ---0.97 ) ),Hodor) - Sansa - y),ROWS)] / TABLE[ROWS][-10]),-610.743,-0.76)][y]] )][mislead(( COLS ),-( TABLE[0.52 - ( COLS )][ROWS - foo(-COLS)] ) / ROWS + -Sansa)],Hodor),bar(),mislead(0.99)) );
	dog;
	if(destroy(--850.31,Sansa * ROWS / Stark - dog * Ygritte,COLS)){
	( ( foo(TABLE[--0.87][COLS]) ) )
}
}
}
}
var Jon = -Hodor * 0.08
def TABLE[TABLE[33][TABLE[-bar(1,x,-COLS)][-1]]][j] {
	( x );
	y -= Ygritte
}
def protect(dog){

}
def TABLE[( -COLS )][i] {
	Jon += ( Sansa );
	if(( Arya ) * 0.22){
	Stark
} else {
	x /= COLS;
	Stark *= rule() / ( -510.6 );
	if(( betray() ) * bar(Jon + dog + Arya)){
	( dog - COLS )
} else {
	bar(-( ( dog ) - ( Ygritte ) ) - Hodor,-dog + -COLS);
	COLS * Arya
}
}
}
assert ( ROWS ) : "What do we say to the Lord of Death?"
assert ( -x ) : "Winter is coming"
assert ( ROWS ) + -ROWS : "Winter is coming"
var Ygritte = -( ( COLS ) )
var dog = bar(-1)
def TABLE[--66 + destroy() / ( destroy(( rule(protect(( Ygritte ) * bar(0.54) / ( 6 ),Hodor,( COLS ) + ( Hodor )),Ygritte) )) )][k] {
	if(y){
	if(( ( ( --destroy(( x * -83 ),Hodor,-0.24) * TABLE[Arya - TABLE[bar(-53,0.43 * TABLE[ROWS][-65])][( COLS ) + Arya]][betray()] ) ) )){
	--10.4416
};
	if(Hodor){
	if(0.23){

};
	dog -= dog
}
} else {
	COLS;
	Arya;
	Jon *= 86
};
	TABLE[-( Jon )][( TABLE[( ( rule(bar(( ( -COLS / --1 * rule(Stark,TABLE[x][( -Sansa / TABLE[-Stark][betray(rule(-( bar(x - protect(29),( TABLE[-0.15][rule(-870.96)] ) + mislead(( betray(mislead(),COLS,730.9) ) * ROWS)) ),( ROWS )))] )],-( dog )) - 160.25 ) ),( destroy() ) / x,( 1 )),mislead(( ( -790.4 * -bar(destroy(990.36,TABLE[Jon][-destroy(70,( -bar(30,-300.7598 - -0.42,ROWS) ),y)]) * -TABLE[destroy(foo(29,86),mislead(-mislead(--y - 68)))][ROWS] + protect(rule(Jon),Arya,( --62 ) * TABLE[( mislead(Sansa) )][COLS])) ) ))) ) )][protect(0.27 - 0.49 - -Arya,Jon)] )]
}
def TABLE[foo(-750.776 - -0.45 * ( destroy(( COLS ) / Stark / ( 1 ) + COLS - ROWS - dog * TABLE[( --ROWS )][protect(-44 / TABLE[-930.42][( -rule(TABLE[( Hodor * ( ( COLS ) + ( ( destroy(-x,Arya,--TABLE[1000.7][( TABLE[-0.1][-x] )] - x - destroy(y,0.89,Ygritte) - protect(x,TABLE[y][-0.19],COLS)) ) ) ) - Stark )][COLS],( bar(( ( -30 ) ),x) + ( dog ) )) )],Hodor * -TABLE[--mislead(x - protect(-77,rule(( foo(COLS) )) - Sansa * ( ( -betray(( bar(--TABLE[rule(ROWS,TABLE[( betray(( 0.8 * destroy(-protect(( -41 ),dog)) * Arya + Ygritte )) )][( -y - TABLE[rule(-0.69)][--45] )])][COLS],-96) ),-Arya) ) ),1),COLS)][Jon * bar(-0.51 - --( -( protect(0.59) ) ),betray(--Sansa))] / Sansa,destroy(TABLE[COLS][67],-Arya,-480.9) * ROWS)] + destroy(( Stark * destroy(Hodor,-TABLE[ROWS][Stark]) ),-y,mislead(destroy(1,Sansa,TABLE[foo(( betray(( -foo(TABLE[-destroy(0.75) + -( 0.09 )][Hodor],--0.66) )) ),ROWS,-( x ))][Arya]),-( protect(( mislead(bar(y - -( 510.608 ) + rule(destroy(rule(( Hodor * ( -COLS ) ),Sansa)),bar(-85),-0.99) * Sansa - -betray(Ygritte - Stark + -TABLE[0.35][640.89] / TABLE[rule(Sansa,-( -( 1 ) ),x)][TABLE[TABLE[--1][protect(-90,( y ) / -( ROWS / -COLS + COLS ))]][Sansa]] + -( 50 ),( COLS )) + COLS * COLS / ( y ),66,ROWS)) ),-42 + 0,Stark) / -( -0.82 ) ))),TABLE[( Ygritte - -57 )][-foo(-1,rule(( protect(protect() * 1,bar(x,-rule(),Ygritte),foo(( -0.48 ),( 340.15 )) / foo(--87) + TABLE[( ( TABLE[-( destroy(( ( COLS ) ),-840.24 * 62) )][COLS] * ( Jon + betray(-87,-rule(1,-( Sansa ),bar(protect(( ( ( TABLE[Arya][ROWS - destroy() - 0.81] ) ) ) / -0.71,--82 + mislead(ROWS,( ( TABLE[--43][-Hodor] / COLS ) ),-bar(( -TABLE[( COLS )][Hodor] )) - ( bar(1,( ( ( Jon ) ) )) )))))) ) ) )][Ygritte] / TABLE[( ( ( -0.2 ) ) )][--( Sansa )] - Stark / 92) )) - -0.25)] / ROWS + ( --19 * Stark )) ),x,x)][j] {
	y /= 24;
	Sansa *= TABLE[Stark][dog / protect()]
}
def protect(){
	COLS;
	Ygritte += -54
}
var y = COLS
var Ygritte = -97 - TABLE[Ygritte][-0.33]
def destroy(){
	-ROWS
}
var Jon = --( Arya )
def TABLE[0.57][j] {

}
var Ygritte = -dog
def rule(y,Stark){
	Arya *= --destroy(--y) * dog;
	TABLE[Ygritte][Hodor]
}
def betray(Sansa,Hodor,x){

}
assert -190.9876 : "Nothing burns like the cold."
assert ----51 : "Nothing burns like the cold."
def foo(Sansa){
	y *= -10;
	if(TABLE[--ROWS][-----1]){
	260.42
};
	Stark /= Hodor
}
var x = COLS
def TABLE[mislead(( ( Stark + y ) ),Jon)][j] {
	if(-540.1){
	Sansa *= Sansa;
	Stark /= ( ( -COLS - -ROWS * COLS - Hodor + -ROWS - TABLE[Sansa][17] / ( x ) ) );
	x += --45
};
	( -TABLE[x][-destroy(45,Jon)] )
}
assert -0.61 : "One can not simply parse himself"
def TABLE[Sansa - -630.329][i] {
	if(foo(( COLS ) + ( -290.79 ))){

} else {
	if(y){
	dog += COLS * TABLE[-dog][----foo()] * -1
};
	x /= Stark
};
	x /= 65
}
var Stark = ROWS
def TABLE[-88 - -0.54][j] {
	if(bar(-rule())){

};
	if(-75 + 1 / ( Arya )){
	if(( rule(COLS / ( ( destroy() ) ) - -( -y ),foo(foo(( -bar() - bar(x) )),dog + TABLE[-1][-80] * betray(-990.86,destroy(foo(bar(-1 * dog),ROWS + foo(betray(mislead(-570.892 / x),( 94 )),y),( 40 - ( ROWS ) )),betray()),TABLE[-Arya][-20])) + Sansa) )){
	dog *= 0.6;
	if(( 0.04 )){
	if(( Sansa )){

} else {
	if(COLS){
	Ygritte -= protect(( -0.56 ) / ( foo() ),protect(( -1 / -betray(-COLS,COLS,( -( --0.97 ) )) ) / foo(dog,-( rule() ))),TABLE[-46][-COLS])
}
};
	Jon *= -COLS + ( ( -Jon ) )
}
} else {

}
} else {

}
}
def TABLE[y][k] {
	-COLS;
	Ygritte -= -0.03
}
def TABLE[( 970 + --TABLE[90 / ( -26 * -0.61 )][--COLS * COLS] ) + ( x ) - --Sansa][k] {
	if(TABLE[( ( mislead(ROWS) ) ) - Sansa + ( ( -Hodor ) / ( 1 ) ) - --( ( 0.28 ) ) - -( 0.29 ) - Ygritte][-( -93 * -1 )]){
	Ygritte
} else {
	Stark;
	96
};
	if(TABLE[( -TABLE[-0.24][mislead(mislead(COLS,mislead(TABLE[-0.18][-ROWS],-foo(bar(-( --86 ),COLS,-210.2)),-( -94 )),( ROWS - ROWS ) - destroy(destroy(y,( 0.05 )),TABLE[( bar(-69,-0.15) ) * -1][-0.35],ROWS)))] ) - ROWS][ROWS]){

} else {
	y;
	if(mislead()){
	24
} else {
	x -= Hodor
};
	-63
};
	if(-0.87){
	Stark -= TABLE[-betray(ROWS / ( x )) / -Hodor / rule(mislead(),-mislead(-mislead(mislead(protect(( ( -betray(TABLE[-0.72][ROWS],-Ygritte) * rule(( -0.85 * TABLE[ROWS][rule(---Stark + foo(-900.32,TABLE[Stark][TABLE[99][-0.74] + Jon]),-1)] )) ) ),rule(bar() + foo(( bar(( Stark )) )) * -32 * ( 820.7 )),( foo(96) - TABLE[mislead(Jon * -COLS,94,( 37 ) * x / mislead(y))][destroy()] / -Jon ) + ( ROWS ) + mislead(( 1 )))) + ( COLS ),ROWS)) + -46 / protect(-COLS,( 11 ),-50 - foo(rule(-bar(-92,COLS,protect(-Jon,-92 * mislead(-Arya,destroy(Jon - foo(--34 - TABLE[( -mislead() )][( -Ygritte )]) * Sansa,protect(-destroy(( -1 * -( COLS ) * 71 * -53 + dog + -ROWS * -y * -mislead(-0.28,ROWS * mislead(( ( -0.04 ) ) / ( 75 ),( ( betray(( --rule(( 14 ),-15) ) / -( -TABLE[--foo(-0.16,( y ))][( dog )] * x )) ) )) * -2 * Stark / destroy(COLS)) * ( Jon ) ),TABLE[rule(( protect(0.57,( ( ( destroy(-Arya,-1) ) ) )) - mislead(( Sansa ),( destroy(( foo(destroy(( ( ( ROWS ) ) ) * Hodor,( -foo(( Jon ),Sansa,( Hodor ) * Arya) - --560.39 )),protect(( Ygritte ),Sansa + 2),bar(-Arya,-84 + ( dog ))) ) / ( ---ROWS + Hodor ),Ygritte) ),70) ))][bar(( -500.67 ),protect(( TABLE[( -0.31 )][-0.59] ) - COLS))] * -48 / x / protect(protect()) / Arya)))),58)),mislead(Stark + ROWS)),rule(Ygritte))))][ROWS]
} else {

}
}
def TABLE[-protect(ROWS,ROWS)][k] {
	TABLE[foo(( foo() ),mislead(( -Sansa * --( betray() ) * foo(Arya,-mislead(( TABLE[( rule(betray(),betray(rule(( mislead(TABLE[Hodor][-ROWS + ROWS]) ),destroy(( TABLE[Stark][-TABLE[betray(rule(rule()),--x)][1]] )) - betray(COLS,ROWS - 54 + mislead(( -550.352 ))) - ( -1 )) / x,( COLS ))) )][dog / 480.745] ),TABLE[-( -y * mislead(( -1 ),( TABLE[-( x )][0.18] )) )][-Hodor / ROWS]) * -Ygritte * mislead() + -protect(-Hodor,( COLS )),( 0.49 ) - Hodor - ( TABLE[Sansa][betray(-0.69 - -( TABLE[rule(( betray(TABLE[-Stark][-89 * -810.325],( foo(mislead(),ROWS) ) / TABLE[-Jon][mislead()] - ( betray(Ygritte) )) ),ROWS)][( -Sansa * COLS )] + ( -COLS / protect(( ( 770.9 ) ) / -Ygritte) ) ))] )) * TABLE[-1][--Sansa] * -0.84 + COLS )))][( -970.715 ) / protect()]
}
def bar(Stark){
	mislead(COLS) / 0.17
}
def TABLE[( -COLS )][i] {
	Hodor *= Jon
}
def TABLE[mislead() - -1][i] {
	if(0.43){
	if(-620.4){
	--( TABLE[TABLE[Ygritte][Jon]][( -( ( Stark ) ) + Jon )] );
	if(( 24 )){
	( -0.51 )
};
	rule(14)
};
	TABLE[TABLE[-0.25 - bar(0.31,TABLE[0.77][y],-y + COLS)][mislead(( betray(COLS,betray(betray(),y,( -( ROWS ) / ( -bar(COLS / y,( ROWS )) ) )) * -Stark) ) * -0.51 + ( -TABLE[-65][-betray(y + betray(bar(),( bar(( ROWS ),-destroy(protect(-TABLE[Hodor][bar(destroy(( -1 )),COLS)] / ROWS + dog,-foo(-rule(bar()))),bar(rule(Hodor,protect()) - -1,-COLS + ( Stark ))) * destroy(protect(Stark,TABLE[TABLE[x + -betray()][( ROWS )]][( ROWS )]),-100.149)) ),-protect(mislead(-COLS),destroy(COLS,1,( 0.86 )))) / -dog,( --COLS )) / TABLE[y][Sansa] + -86] ),COLS,0.86)]][( -110.336 - dog )] - mislead(TABLE[TABLE[( -rule(-foo(-ROWS + --Jon / -Hodor,( Arya )),protect(( ( ( -( protect(TABLE[ROWS][ROWS],92) ) ) ) / ( TABLE[y][1] ) ),TABLE[-destroy(Hodor,( dog - x / ( rule(-( Stark )) - rule(--1 / ROWS * COLS) + dog ) )) + Stark][rule(betray(-rule(-TABLE[ROWS][bar(1)],( ( Stark ) + 59 )))) / TABLE[( ( Stark ) )][destroy(79,770.8165)]]),-protect()) )][ROWS]][( y )],Sansa) / y
};
	protect(foo(--1 * TABLE[destroy(-99)][( -protect(-TABLE[( 1 )][Hodor],1,-foo(1,-Ygritte,x + Arya / Arya - COLS) - foo()) )]),Hodor,Stark)
}
var x = -1
def rule(x,x,y){
	if(Jon){
	Sansa -= COLS
} else {
	-Stark;
	if(dog){
	if(foo()){

};
	Ygritte /= ( foo(ROWS + -0.7 / ----COLS + -61 + -( 0.34 ) - mislead() - ROWS * mislead(y) * x * ( ( -19 - ROWS ) ) / destroy() * COLS,-Stark) );
	if(-( Ygritte )){
	if(x){

} else {
	betray(Stark,TABLE[Sansa - dog][( ( ( TABLE[( x ) / 46][-1] ) ) )]);
	if(-0.6){
	Arya - ( Hodor )
} else {
	if(-( -Ygritte )){
	( Arya )
};
	ROWS;
	Arya -= Ygritte
};
	if(-protect(--ROWS)){

}
};
	if(-0.86){
	Stark;
	0.03;
	-1
} else {
	-( -ROWS );
	Ygritte *= betray()
}
}
} else {
	Arya += COLS;
	-1;
	( ROWS )
};
	if(ROWS){
	dog += 140.809
}
};
	if(-1){
	Sansa *= -( ROWS );
	Jon += COLS
} else {
	if(foo(0.49)){
	if(mislead(( 38 ),-( protect(dog) ))){

};
	if(-54){
	Ygritte /= Sansa
}
} else {
	-9;
	protect()
}
}
}
assert x : "What do we say to the Lord of Death?"
def protect(Ygritte){

}
def TABLE[-0.01][k] {
	Stark *= ( -32 );
	( ( mislead(( -0.14 / ( protect(protect(),( foo(Stark,( y )) )) ) ),mislead(-0.42,ROWS)) ) - x + COLS );
	COLS
}
def TABLE[ROWS][i] {

}
var Jon = Sansa
def TABLE[-0.22][k] {
	if(TABLE[( ( mislead(0.97,-mislead(-y,-( TABLE[-39 / foo(ROWS,ROWS) - TABLE[340.9][10]][( rule() )] ),protect(COLS,-Arya / -rule(ROWS,0,( 1 )) * COLS * ROWS))) ) )][( --890.14 )]){
	y;
	-1
};
	dog += -80.7;
	x /= ( 180.6 / --rule(-0.96,-73) * Hodor )
}
def TABLE[( -ROWS )][i] {
	if(-TABLE[( COLS + -0.07 )][Stark]){
	if(( --Ygritte ) + betray(-31,( ( dog ) ),bar() + TABLE[Hodor * Hodor - betray(betray(ROWS),TABLE[( --TABLE[rule(-( Stark ),TABLE[( ( -Hodor ) / ---TABLE[--( -300.38 * ( Arya / COLS ) - 0.26 )][Jon] ) - ( ( Ygritte ) )][260.3],Stark)][Arya] )][( 6 )] - ( COLS ))][betray(y,betray())])){
	Sansa *= TABLE[Hodor][TABLE[COLS][--0.53 / Stark]]
} else {
	y /= TABLE[dog][-91] * ROWS / TABLE[( bar(TABLE[-0.05][dog],Stark / COLS / -1 * y,mislead()) )][Stark + ( -ROWS ) * -0.96];
	Ygritte;
	if(y){
	if(( TABLE[destroy() * ( -Sansa )][Ygritte] )){
	Arya -= -Jon * foo(70.969,Jon,-y) + y;
	Stark /= -COLS
}
}
};
	0.6 * 34
} else {

}
}
def TABLE[( TABLE[protect(Jon,foo(Hodor,-0.38),1)][( ( ROWS ) + protect(Stark) / -930.98 )] )][i] {
	TABLE[TABLE[TABLE[( -0.07 )][-15] * mislead()][-0.96]][Ygritte];
	destroy(Ygritte,--foo()) + 0.59
}
def bar(Ygritte,x,Sansa){
	Stark;
	--89
}
def TABLE[bar(0)][k] {
	-COLS
}
var x = 190.6
def protect(x,Arya,x){

}
var Arya = -mislead(Jon,-1)
def rule(y){
	betray(-0.25) - betray(-1,930.4788,-y) + -21
}
def rule(dog,x){
	Stark /= betray(Hodor,rule(),mislead(( Jon ) + mislead(-870.55,TABLE[y][dog],---rule(( Stark )) / ( -Stark )),COLS));
	Jon *= ( TABLE[COLS + mislead(( Arya ))][mislead(TABLE[( ( ( Jon ) ) )][protect(Arya)])] ) - 36
}
def TABLE[( bar(--( ( ( mislead(89) ) ) )) )][j] {
	if(dog - COLS){
	Stark;
	x += mislead(protect(destroy(-0.58),TABLE[-54][-630.731],mislead()) - ( -1 ),-( -Stark ))
};
	y += -0.17
}
var Ygritte = Sansa
def protect(y,Sansa,x){
	if(protect(--Stark - TABLE[( 0.14 )][-betray()] + ( 0.65 ))){
	if(( Hodor )){

} else {
	Arya -= protect(betray(x),--( -130.94 * x ) + Ygritte);
	Sansa += ------1;
	Arya += ( protect(destroy(-13,Stark)) )
}
} else {

}
}
def TABLE[1][k] {
	dog += -93;
	Sansa -= COLS
}
def TABLE[-960.6][k] {
	-betray(( -Jon + ( y + TABLE[TABLE[( -68 )][1] - COLS][TABLE[dog][rule(y,Hodor)] / -78] ) ));
	x += ( Arya )
}
def TABLE[x + ( ( -protect() ) - bar(ROWS,COLS) )][k] {
	Stark *= --TABLE[betray(COLS,ROWS)][TABLE[Hodor][ROWS]]
}
assert Sansa / ( mislead(y,( -Stark ),( COLS )) ) : "Fear cuts deeper than swords."
var Arya = Hodor
assert ( ROWS ) : "Fear cuts deeper than swords."
def foo(Sansa,x){

}
def destroy(Sansa,Stark){
	if(1){
	Jon -= 99
}
}
def TABLE[( y )][i] {
	protect();
	Hodor *= x
}
var Stark = -( TABLE[-dog][-1] ) * -80
var y = protect() + Hodor * destroy()
var x = betray(Stark)
assert betray(--Arya + -0.87 - ( -0.4 ) * -Ygritte + Sansa * ( bar(TABLE[-5][rule(-COLS,betray())],protect(y),( ( ( -1 ) ) )) ),-0.1,protect(-( -Ygritte ))) : "Nothing burns like the cold."
assert ( COLS ) - ( ( -52 ) ) : "One can not simply parse himself"
def rule(Hodor,y,x){

}
def TABLE[protect(( -0.02 ) - TABLE[COLS][-300.6049] + -( ( Arya ) ) + ( Ygritte ) / -COLS - -TABLE[0.6][foo(( -x ),Sansa,Ygritte / -ROWS * betray(( -55 )) / -86)] + 63 * --0.92,( rule(( rule(Stark / -COLS,ROWS,betray(destroy(rule(x,Stark),-93))) - TABLE[Sansa][-COLS] ) * 90,( ( -Stark - COLS / Jon ) / --460.56 / 280.328 - Arya )) ))][i] {

}
var Sansa = 0.025 - -destroy(destroy(-Sansa,protect(mislead(Sansa) + rule(),Jon,-720.4)))
var y = Stark
def TABLE[Hodor][j] {
	if(23){
	( ( rule(TABLE[-----40.3][( -Sansa )]) ) );
	if(( protect(-( x ) * TABLE[x * ( destroy(foo(x + ( ( -( ( ( -x ) ) ) ) * ---800.46 + x / Hodor ),( ( ( 1 ) ) ))) ) / mislead()][Arya / betray(-( -Jon - rule(( betray(--1,Sansa + -TABLE[rule(-26)][COLS] / -bar(x)) ),COLS) - protect() ),-betray())],-COLS) )){
	if(protect(Hodor + -0.34)){
	mislead(( 1 ))
};
	Arya -= ROWS
} else {
	if(mislead(TABLE[-600.14][ROWS * -35],75)){

};
	if(COLS){
	if(-protect(x,( rule(( -23 )) ))){

};
	if(mislead(1,0.67,( dog ))){
	80
}
} else {
	y /= TABLE[x][-Jon]
};
	-betray()
}
} else {
	TABLE[-y][Sansa]
};
	protect();
	x /= protect(dog) + ( ( COLS ) )
}
def TABLE[-900.0663 - -( 75 )][k] {
	Arya *= protect();
	if(-61){
	x *= Ygritte
} else {
	if(-( y )){

}
}
}
def TABLE[betray(ROWS) * COLS][k] {

}
var x = ( -73 )
def TABLE[bar(0.88)][i] {
	Ygritte /= -21;
	COLS;
	Ygritte += -28
}
assert dog : "Fear cuts deeper than swords."
var dog = 43
var y = Sansa
assert Jon : "Winter is coming"
var Sansa = dog
var y = dog
def betray(Hodor){
	if(bar(( ( ROWS + Jon ) - 56 ),ROWS,( -( Jon ) ))){
	Stark += Ygritte;
	dog *= ( 73 );
	Hodor *= Sansa
};
	Arya *= dog
}
assert Sansa : "One can not simply parse himself"
assert -Stark / -protect(( 1 )) : "Nothing burns like the cold."
var x = dog
var Jon = TABLE[destroy(-COLS,foo(( -1 / ( 0.42 ) / destroy() + ( --0.63 ) + -TABLE[---foo() * Ygritte][( 25 - bar() )] )),COLS)][-0.33] * 80.4
var dog = foo(66,-77,betray()) + --83 + -65
var Sansa = Hodor
var Hodor = ( ( --15 ) )
var Ygritte = -betray(betray(62,-0.2,--bar(0.98,x)),( 58 * -0.46 + bar(-1) ))
def TABLE[destroy()][k] {
	Jon /= bar();
	57
}
var Sansa = ROWS
assert COLS : "What do we say to the Lord of Death?"
def TABLE[-( x * 92 )][k] {
	if(0){
	( foo(-dog) - Sansa ) + dog;
	-protect(Jon) + ( ( -65 ) ) * rule(Jon);
	-0.99
};
	dog + ( mislead(COLS,ROWS) )
}
var Arya = TABLE[TABLE[-betray(--0.11 * ( bar(y,Arya,bar(ROWS * -280.9136) - COLS + ( ROWS * Hodor )) * ( -0.85 * Ygritte - rule(Ygritte,Jon) ) * Ygritte ),betray(mislead(-0.67,COLS - -1 / ( ( ( bar() ) ) )),( betray(Arya) ) + -13))][-38]][( 0.92 )]
var Stark = --0.67
assert -Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(x,Ygritte){

}
var y = -Arya
assert -x : "Fear cuts deeper than swords."
def destroy(Arya){
	Arya *= destroy(--1 / 0.63 / Ygritte / mislead(( TABLE[destroy(( ( TABLE[ROWS][--destroy(Sansa,bar(ROWS / ( -0.15 ) / x - ( TABLE[( ROWS )][0.54] ) / 1,Sansa + 83,4),260.102)] ) ))][( ( ( ( 1 ) * mislead(x / bar(bar(bar(-89,mislead(protect(-( ( ( Sansa ) ) )),-45 - -0.35) + bar(destroy(y,protect(),COLS + -650.7) * 48 + Jon,--0.08)),x),betray(-940.16)) - TABLE[ROWS][betray(ROWS)],( ( y ) )) ) ) )] )));
	COLS;
	Sansa += COLS
}
def TABLE[-protect(rule())][k] {

}
def TABLE[1][i] {

}
assert ( TABLE[-45][bar(x)] ) : "Fear cuts deeper than swords."
assert -0.34 - -COLS + -foo() : "One can not simply parse himself"
def TABLE[( Ygritte )][i] {

}
def TABLE[( ( ROWS ) )][k] {
	if(Stark * COLS){
	Sansa += ( TABLE[340.202][( protect(rule(Stark,0.11),bar(betray(mislead(betray(foo(Ygritte),y,Arya))) / 490.63) + -COLS) )] );
	if(Arya){
	if(dog){
	if(-49){
	if(ROWS){
	Stark /= 35
} else {
	Sansa /= ( ( Stark ) ) / ( ROWS );
	( Arya )
};
	dog *= COLS
}
} else {
	dog /= 0.83 + ROWS;
	-( ( TABLE[73][-0.7] ) ) + ( dog )
}
};
	Sansa /= -( ( foo() + -mislead(-( Jon ),1 - ( TABLE[Jon + COLS][( x )] )) ) ) * TABLE[-Stark + ( -( ROWS ) ) * TABLE[protect(Jon,-40)][TABLE[COLS][y]]][x]
}
}
var Stark = -Sansa
def TABLE[0.19][j] {
	if(-ROWS){
	if(TABLE[bar(( destroy(destroy(( TABLE[mislead(Hodor,--1) + 0.56][foo(-0.84,x) - 0.32] )) / bar(betray(betray(mislead(y),destroy() + bar(--Hodor,Hodor)),mislead(dog)),1),--1 - destroy(1) - --1,ROWS) - -COLS ))][-( ROWS / -75 - y )]){
	--0.36
} else {

}
} else {
	97
}
}
var Ygritte = y
def mislead(Arya,Hodor){

}
def bar(x,y,Stark){

}
def TABLE[COLS][i] {
	x -= ( Hodor ) / destroy(( -bar(bar(COLS),Ygritte) )) + Ygritte;
	if(dog){

} else {

}
}
def TABLE[--0.24][j] {
	COLS
}
def bar(Sansa,x,Stark){
	COLS
}
assert ( bar(( 520.02 ),dog) ) / COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ROWS / -28 : "Nothing burns like the cold."
var Jon = COLS
var y = dog
assert y : "Winter is coming"
var Hodor = ( rule(dog) )
def TABLE[-( ( destroy(x,ROWS) ) )][j] {
	if(-41){
	if(COLS){
	Jon /= -77;
	dog += destroy(( ( Sansa ) ),---560.71 * 0.44) / ( ( ( -1 ) ) + --( TABLE[Hodor][Ygritte] ) ) - destroy(( -48 ),( Sansa ))
}
} else {
	foo()
};
	x /= ROWS
}
var x = -0.28
def TABLE[y][j] {
	y += -protect(320.2 + -( -( ( COLS * betray(0.55) - Stark * ( mislead(-destroy(9,destroy(foo(),ROWS) + ( betray(Sansa,mislead(x,-0.31,TABLE[destroy(ROWS,-86)][betray(( ( ---( ( ( ( rule(-TABLE[-( Stark )][Arya] + 0.87 / 17) + ( --7 ) ) ) ) ) - Ygritte ) ),--150.0876 - -960.9,-rule(-150.122,Jon))] * -33)) ) / TABLE[( rule(Jon) ) * foo(bar(-0.17 * x,( ( -dog * destroy(Hodor,destroy(0.62),x) + TABLE[( -COLS )][Arya] + -69 ) / ( ( Hodor ) ) + Sansa ))) / Ygritte][ROWS]),betray()) - bar() ) ) ) )) / bar(( TABLE[-1][ROWS] ),( ( TABLE[-rule(( betray(ROWS) ),( x ),( -1 ))][-0.52] ) ) - destroy(COLS,-0.09));
	Arya /= Arya
}
assert -( bar(Hodor,COLS) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert 650.786 : "One can not simply parse himself"
def foo(Arya,Sansa){
	if(rule(rule(--dog,-ROWS + 69 / 0 - -( ROWS - -( -( Jon + ( y ) ) + ( ( TABLE[1][-1] ) ) / bar(-62,-36) / mislead() * 8 / Ygritte ) ) + ---rule(-33,-( --50.991 )) / -rule(-( ROWS + ( ( ROWS / betray(1,( ( mislead(-0.29) ) )) / -0.74 ) ) / Stark - -ROWS - rule() / -780.1 )) + COLS)) / Ygritte){
	if(Hodor){
	ROWS;
	if(-0.3){
	dog *= ( COLS ) * ( Hodor );
	97;
	dog /= -800.309
} else {
	Jon += -mislead(32,1,betray(rule()));
	mislead(protect(),( foo(COLS,TABLE[( ROWS ) / dog][( y )]) ));
	Arya += -26
}
}
} else {
	x *= Jon
};
	if(1){
	if(destroy(betray(bar(ROWS)))){
	85;
	if(Ygritte * ( ROWS )){
	if(-1){
	if(Sansa){
	if(x / 1){

}
} else {

}
} else {
	Arya *= 36;
	x -= betray(Arya,-1 * 50)
};
	-58
} else {
	rule(dog - Stark,protect(-420.67,( Hodor )))
}
} else {
	if(-COLS * -mislead(COLS)){

} else {
	if(Sansa){
	Jon + Ygritte / -( COLS * ( foo(41) ) );
	x *= 25
} else {
	y;
	( ( ( -betray(( -rule(protect(1)) ),( ( TABLE[-49][Ygritte] ) ),protect()) ) ) ) - COLS
};
	-24;
	Arya += --0.96
};
	if(x){
	if(mislead()){
	if(( ( -bar(COLS) ) ) + ROWS){
	Arya /= TABLE[TABLE[Arya - TABLE[( ( protect(-Hodor - Hodor,x,Ygritte) ) )][rule(Arya * -96,--mislead(( -Ygritte ),rule(-( --0.6 ),COLS)))]][Sansa]][( -0.6 )];
	y *= --ROWS;
	destroy()
};
	dog += ( foo() );
	if(( ( foo(-45,Arya) + 38 / ( ( -0.06 ) ) ) * ( ( mislead(rule(foo(foo(ROWS),TABLE[x][rule(bar(Ygritte,--1),( Jon ))],Arya + 0.25 - -1),-( y ),-0.87)) ) - ( Sansa ) ) )){

}
} else {
	y *= -700.912;
	Hodor += TABLE[-1][Arya];
	Sansa += 0.67
}
}
};
	if(Jon){
	Hodor *= bar(COLS,COLS,protect(mislead(-Sansa + ( --1 * --1 )),COLS));
	Sansa *= ---1 + Arya;
	x += foo(betray(-22,COLS * betray(TABLE[COLS][-( ROWS ) * -Stark - ROWS * mislead()] * Sansa * 0.03,bar(Hodor)),Jon))
}
} else {
	Arya
};
	TABLE[--( 1 ) - x][--0.88]
}
assert Hodor : "Nothing burns like the cold."
assert y : "Winter is coming"
var Sansa = -0.48
assert --0.3 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = -0.85
def bar(Arya,Stark){
	-7;
	if(( ROWS )){
	x -= ( -dog ) * mislead(betray(-Sansa),x);
	if(( TABLE[ROWS][ROWS] + COLS )){
	( -( ( -1 ) ) / Arya ) + ROWS / ( TABLE[( 36 )][( ( dog ) )] );
	Arya /= -( COLS );
	Stark -= ( ( -1 ) )
} else {
	( rule(protect(( mislead(TABLE[COLS][ROWS]) )) - dog,1) ) * ( 0.4 )
}
} else {
	---COLS
}
}
assert x * foo(dog,( ROWS )) : "Nothing burns like the cold."
var Hodor = ( COLS )
assert x : "Winter is coming"
def protect(Arya){
	Stark *= foo(-Ygritte,( betray(( -1 ) - 74) ),ROWS);
	Hodor /= ( Arya ) / ( COLS );
	mislead(bar(TABLE[--1 * -( COLS )][Sansa]),x) / ( dog )
}
def TABLE[1][j] {
	Jon *= ROWS
}
def TABLE[COLS][j] {

}
var Sansa = COLS
def mislead(Hodor){
	if(ROWS){
	if(y){
	if(COLS){
	x -= Hodor;
	-6;
	if(-TABLE[protect(TABLE[betray(TABLE[COLS][( ( ( ( rule() ) ) ) )],y) * Ygritte][9] - COLS,--COLS,-89) + -0.24][ROWS / y / -Arya]){
	Sansa /= COLS;
	Ygritte *= bar(( ( y ) ) + ( destroy(( -foo(ROWS,destroy() + Ygritte) ) + 0.49 - ( protect() )) ),--160.35);
	y += Jon
}
} else {
	Sansa -= -rule(0.86)
};
	--1
} else {
	if(y){
	y += protect(protect());
	Jon -= -betray(1,( ROWS ),TABLE[mislead(y) * -destroy(( ( x ) ),-COLS / mislead(0.85))][--Jon])
}
};
	Ygritte -= Arya;
	if(COLS){
	if(betray(-( 61 ))){
	( betray(--destroy(-ROWS,-Arya,( betray(( Jon )) )),( ( --betray(( foo(COLS,( rule(mislead(betray(0.78,protect(foo(protect(-protect(Stark,( ( ( ( COLS ) ) - betray(-30,-bar(0.54,bar()) + ( -foo(TABLE[( ( ( -protect(( ROWS ),TABLE[( mislead(betray(rule(COLS,( --1 )),( Jon )) + ( protect(Jon,-( betray(0,-( Stark ) * y - --( -74 ) + COLS / -Stark) ),( 0.76 )) ),( betray(ROWS,-1) )) )][ROWS]) + COLS / TABLE[( ( -60.7 ) ) / -ROWS][foo()] ) ) )][-Hodor],( 91 + TABLE[Stark][-1] )) ) + ( ROWS ),destroy(COLS + Ygritte) * Stark - COLS + mislead(1 + ( -bar(betray(COLS,COLS)) ),rule(ROWS)) / 78 + Hodor) - -y + betray(rule(rule(),( rule(TABLE[foo(ROWS / 76 / ( ( ( ROWS ) ) ),( ( -( ( ---1 * COLS ) ) ) ))][y] + Hodor + ROWS - Arya - COLS,( -rule(dog) / -0.81 ) * Sansa * Stark,( Sansa * Ygritte )) - 29 ),-betray(94,--0.41,-980.86)) - foo(TABLE[Jon][-1]),rule()) - ROWS ) ),-rule(-bar(ROWS),0.02,-Jon))) + protect(Arya),dog),bar(-dog))),-ROWS,( 1 ))) )) ) / foo(( ( ( 1 * -79 * destroy(-12 - -betray(destroy(COLS),bar(COLS,-0.17,-COLS),foo(--Sansa / Hodor + ( ( ( x ) ) ),630.7)) / -( 0.05 ),dog) ) ) ) + 1),-0.06) / ( TABLE[ROWS][COLS] ) ) )) );
	Stark *= COLS;
	ROWS
};
	foo(Ygritte,-780.111)
}
}
}
assert ROWS : "One can not simply parse himself"
def TABLE[dog][k] {
	x
}
assert -( mislead(--Ygritte,protect(-( -foo(ROWS) ),TABLE[1][betray(-0.3)]),( -COLS )) ) : "What do we say to the Lord of Death?"
var Hodor = ( Ygritte )
def TABLE[TABLE[COLS][1]][j] {
	if(--700.68){
	if(COLS){
	y *= ( -( x ) ) + ( Ygritte );
	Sansa -= -32
};
	-43
};
	Ygritte += ROWS - -x;
	betray(-( bar() ),( --650.2413 ))
}
def rule(x){
	120.5 - Sansa
}
var Sansa = ( COLS )
assert COLS : "One can not simply parse himself"
def foo(x,dog){
	TABLE[( betray(( Ygritte )) )][-ROWS]
}
var Ygritte = ( 0.49 - Hodor )
assert -( ( -1 ) ) : "One can not simply parse himself"
assert ROWS : "Fear cuts deeper than swords."
assert 100.637 - -Arya * --970.67 - -( x ) + 28 + 580.422 : "Winter is coming"
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -10 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -1 : "What do we say to the Lord of Death?"
assert -830.463 : "One can not simply parse himself"
var Hodor = Jon * bar(betray(-ROWS,1),ROWS,COLS) + ( protect(betray()) )
assert Ygritte : "What do we say to the Lord of Death?"
def TABLE[TABLE[COLS][COLS / --rule(Hodor,TABLE[TABLE[( betray(foo(-38,-0.21)) )][-ROWS] + ( 77 )][( Jon )],protect(Ygritte,( ( --( 0.89 ) ) - -rule(foo(-foo(Hodor),1,Sansa),-67,-rule(-720.6,-130.9262 - -95,TABLE[( ( ROWS ) )][COLS]) / ROWS) )) * -1)]][k] {
	if(COLS){
	if(-rule(destroy(destroy(Stark,-0.85,mislead(-dog,bar(( -7 ),Ygritte),Ygritte)),( --0.52 + ROWS )),( ---Jon ) + Hodor)){

}
} else {
	-95 + -COLS
}
}
def bar(dog,dog,Arya){
	if(-0.1){
	COLS
} else {
	y -= 13;
	Ygritte -= -( ( ROWS / COLS ) )
}
}
def TABLE[( TABLE[-0.26][TABLE[-30.776][Sansa]] )][i] {
	Hodor -= -Sansa * ROWS;
	COLS
}
assert TABLE[( -( TABLE[betray(protect(Hodor))][-12] ) )][COLS] : "Winter is coming"
def rule(Arya,Sansa){
	if(foo(( mislead() ),betray(betray(-78 * ( -( -mislead(TABLE[--0.09][( ROWS )],( dog ),mislead(x,( bar() )) * Arya) ) )),-ROWS + -TABLE[TABLE[-8][0.3]][-1]),COLS)){

} else {
	Sansa += TABLE[rule()][( rule(ROWS,( ( 29 ) )) )];
	Ygritte += -9
};
	if(( COLS ) - ROWS){
	if(TABLE[( ---0.85 )][0.57 * ( -1 )] + mislead(-25,betray(Ygritte + COLS,-dog / 540.72 + destroy(42) - protect(-2,foo() / ROWS,-y) / -ROWS - Jon + -47 / Sansa / TABLE[ROWS][Jon])) - -0.21){

}
}
}
def mislead(Hodor){

}
var x = Arya / -1
def TABLE[38][i] {
	Jon -= Sansa
}
def destroy(Ygritte){
	Hodor /= -Stark
}
def destroy(Hodor,Sansa){
	Jon += mislead(( -0.16 ) + 77)
}
def rule(dog,x){
	Arya /= ROWS / ( --( 0.98 ) + Stark )
}
def TABLE[-( -( 0.57 ) )][i] {
	-53;
	if(33){

}
}
var Hodor = --42
assert ROWS : "Winter is coming"
assert ROWS : "Nothing burns like the cold."
def destroy(Ygritte){
	--1
}
var dog = ROWS
assert ( --Arya - 48 ) : "Nothing burns like the cold."
def rule(dog){
	if(-50){
	if(dog * TABLE[-( Jon ) - ( --6 ) - 120.41][( ( x ) )] / TABLE[x * -( --betray(--87,TABLE[--61][1],0.81) )][---( ROWS )] - x + -TABLE[-27][-64] + Sansa - ( Ygritte ) - ( TABLE[COLS][destroy(-0.62 * -bar(rule(--0.9),COLS))] ) - -( betray(Jon,13) ) - Jon + rule(y,( -protect(0.63 * ROWS * TABLE[Jon][ROWS]) ))){
	10;
	x *= foo(mislead() - COLS) / protect(betray(-ROWS,Stark),TABLE[mislead()][--0.85])
} else {
	if(-49){
	Stark += Arya
} else {
	if(38){
	if(-0.62){

};
	Hodor *= betray()
} else {

};
	if(bar()){
	x /= ( COLS )
} else {
	if(--0.61){
	Arya / ROWS;
	Sansa -= TABLE[-71][Arya]
};
	y
};
	if(foo(y)){
	if(( TABLE[-120.13][ROWS] )){
	Arya *= Hodor
}
}
}
};
	if(bar(( Sansa ))){
	if(-( TABLE[Stark][rule(-0.55,-7 + -( ( 1 ) ) - -500.63,Ygritte)] )){
	Sansa *= ( -1 );
	Hodor += ( TABLE[ROWS][80.112] )
} else {
	( bar(-0.78,( -TABLE[mislead(bar(-48 - COLS,protect(---1,-1,dog) / -ROWS))][betray(protect(dog,Stark))] ) - ( 0.41 )) )
};
	( Stark );
	Jon *= ( -1 )
}
};
	betray(0.46,-1,TABLE[-700.567 - mislead(bar(( ( destroy(COLS) ) ),ROWS * ( 0.25 )))][80.2741])
}
def mislead(Hodor){

}
var Arya = ( -dog )
def destroy(Jon){

}
def TABLE[-( -53 )][k] {
	x *= x
}
var dog = Stark
def TABLE[( COLS - foo() )][j] {
	Jon += -29;
	if(Stark){
	destroy(-Ygritte,-TABLE[--COLS][-COLS]);
	Ygritte /= -520.58
} else {
	270.51
}
}
assert -0.37 : "Winter is coming"
var x = Stark - ( Arya ) / Arya
def mislead(x){

}
def TABLE[TABLE[-( foo() * Ygritte - COLS * rule(ROWS) )][foo(( rule(-( TABLE[betray(betray(),TABLE[-0.7][protect(TABLE[( ( COLS / foo(bar(protect(---( -0.6 * COLS ),0.6),TABLE[rule(( -47 + -54 * dog + Stark * ROWS ) + Sansa)][TABLE[bar(-TABLE[( ( foo(13) ) ) + ( destroy(dog,( -rule(Stark,Sansa,( mislead(TABLE[protect(--710.7 / --12,ROWS,( ( ROWS ) ))][-0.55],y) )) )) ) * mislead(bar(-0.98,dog),-( 0.43 ),ROWS)][-COLS])][bar(( -0.14 ),protect(COLS),betray(dog) / ---14) - ( Sansa )]]),ROWS) ) )][-0.93])])][COLS] ) / -dog + Jon / 2,TABLE[y][ROWS]) ),-0.02)]][k] {

}
var x = -Sansa
var Stark = Stark
assert --dog : "One can not simply parse himself"
def TABLE[Sansa + ROWS][j] {
	Sansa += mislead(ROWS,TABLE[0.71][( Arya )] + COLS)
}
def TABLE[ROWS][j] {
	Arya *= y;
	if(( ROWS )){
	0.25
} else {

};
	if(-y - --( --66 ) - foo(protect(Arya,( ( -530.6 ) ),y) - x,foo(-0.09,-86,( 180.5 )),ROWS)){
	-70.89
}
}
def TABLE[( betray(protect(ROWS)) )][k] {

}
def TABLE[0.27][j] {
	Stark *= -0.31
}
def TABLE[( y )][k] {
	( ( betray(--1) ) / ROWS ) / foo(ROWS)
}
def mislead(dog,Hodor){
	-29;
	if(dog){
	if(( TABLE[Jon][COLS] )){
	if(( COLS )){

} else {
	if(Sansa){

};
	-TABLE[mislead(rule(-( destroy(x,--60,x) ),-rule(( COLS ),dog,( x ))),TABLE[-ROWS][ROWS])][Jon] / ( 0.65 ) / ( TABLE[( ROWS )][-TABLE[TABLE[TABLE[-91 + -( 96 + -31 )][TABLE[Sansa][ROWS / dog] - rule(TABLE[COLS][Ygritte] - Sansa,ROWS)]][-170.87 * bar(Hodor / 63 - -1)]][Sansa]] );
	dog -= 1
}
};
	Arya *= Hodor;
	1
} else {
	Stark /= -41;
	if(( rule(ROWS) )){
	if(( ( -0.95 ) )){
	if(ROWS){
	protect(-TABLE[-betray(-100,0.03)][-ROWS * mislead(foo(x),Sansa,1) * -Jon],-( -80 ),( ( COLS ) ));
	x += ROWS + ( -destroy(-Ygritte,33,Hodor) )
};
	Jon += bar(( ( 0 ) - ROWS ),-rule(-0.42,-30) - -79)
};
	( x - ROWS / -( 0.03 * 0.67 ) )
} else {
	TABLE[x][TABLE[Jon][x]]
}
};
	x += rule(bar(TABLE[COLS][( ( COLS ) )],-0.31),ROWS,-14)
}
def TABLE[Jon][j] {

}
var y = COLS - 68
def TABLE[-mislead() / dog][j] {
	( Arya );
	-0.93 / ( ( TABLE[1 / Hodor / ( --540.69 ) * ( ( 1 ) )][-57] * -Sansa ) / x * --0.12 ) + Hodor * -440.229;
	0.25 - -( Jon )
}
def TABLE[( ROWS )][i] {
	TABLE[-0.4][( -( Stark ) - TABLE[-TABLE[dog][( -COLS )]][rule()] )]
}
assert ( ( ---( 0.64 ) ) ) : "One can not simply parse himself"
def TABLE[Sansa][j] {
	-betray(destroy(-0.32,Sansa,protect(rule(( ( -( -270.8 ) ) ),0.81,ROWS)))) / ( Stark )
}
def TABLE[COLS][j] {
	Ygritte /= rule(-( -0.1 ) + ( --1 + -58 ),-ROWS,13 + ROWS);
	dog += ( Sansa );
	Stark /= ( Jon )
}
assert -0.95 + COLS - dog : "Fear cuts deeper than swords."
def betray(Stark,Arya){
	Arya -= -33
}
def TABLE[120.59][k] {
	x += COLS / --60.696;
	Hodor /= 36
}
def destroy(){
	if(bar(1 + dog)){
	Jon
};
	if(78 - betray(--foo(dog,( -4 * protect(rule(0.74,( foo(-0.25,protect(-( foo() )),y) ) / ( 260.57 )),( -bar() )) * ( betray() ) ) / ( Arya )))){
	if(( -0.82 - destroy(1,-35 * y * -( ( mislead() ) ) * Sansa) )){
	if(COLS){
	Hodor;
	if(( ( ( -1 ) ) ) - Jon){
	foo(( dog )) - ROWS;
	if(destroy(Ygritte,-1,-0.63 / foo())){
	--rule(Arya,-ROWS,( COLS ))
} else {
	if(( protect(( --700.7391 ),1 + destroy(( -COLS * TABLE[ROWS][-COLS] ),protect(1),-( foo(-Ygritte + -( TABLE[COLS + -( ROWS ) / destroy(-0.86 / ( TABLE[COLS][-TABLE[0.79][( ROWS ) / ( ROWS )] + ROWS] ),mislead(mislead(TABLE[( bar() )][-10 - ( 55 )]),-foo() - 4 + TABLE[betray(( ROWS ),-65,( Hodor ))][-protect(Stark + --1,rule(TABLE[-480.7825][dog],-TABLE[Jon][betray(Arya)]))],betray()))][-protect(protect(-Arya * ( TABLE[COLS][mislead(-dog,-0.85,ROWS)] )))] ) - 30,ROWS) ))) )){

}
};
	Stark *= foo(COLS)
}
};
	if(-59){
	if(TABLE[COLS][foo(Stark,( -0.05 ) * bar(-1 * ( -1 ),( Hodor )))]){
	Stark *= -500.6;
	-59
}
} else {
	Ygritte / -( destroy(destroy(-destroy(y,foo(COLS),-TABLE[-46 * x][ROWS - -1 * --1 * -( -300.34 )] * -x))) / ( --0.23 ) + ( 460.794 ) / ( ( -170.1 ) ) + --1 );
	if(22 / ROWS){
	Arya /= ( 0.6 );
	if(destroy(foo(ROWS) * -destroy(Sansa,71,-COLS))){
	( Stark );
	destroy(( Arya / --COLS ),COLS)
}
} else {
	Hodor *= 800.595
};
	x /= ROWS
};
	bar() / Hodor - dog * Ygritte
};
	if(bar(destroy(y + TABLE[( ( y ) )][-75]))){
	if(COLS){
	Arya -= ( -20 + ---TABLE[COLS][ROWS] );
	if(x){
	Hodor += -rule(TABLE[-protect(ROWS)][--0.56],-COLS + 0.16) - Sansa
}
} else {
	( -( COLS ) );
	if(mislead(mislead())){
	y
}
}
} else {
	TABLE[--45][-( ( Sansa ) )] / COLS;
	Hodor *= dog
}
}
}
assert ( COLS ) - ( -dog ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(){
	if(foo()){
	Jon += ( ( bar(--48 + ( Arya * -rule(destroy(( -520.308 * Arya ) * ( Stark ))) / x ),Hodor) ) )
};
	0.73
}
assert ( TABLE[Arya + destroy(-dog)][( -40 )] ) : "Winter is coming"
def foo(){
	Stark /= ( 1 )
}
assert ( Hodor ) : "What do we say to the Lord of Death?"
var Hodor = ( ( ROWS ) )
assert -1 : "Fear cuts deeper than swords."
assert TABLE[COLS][Stark] : "One can not simply parse himself"
assert betray(( COLS ) - -( ( y ) )) : "One can not simply parse himself"
def destroy(Hodor,Sansa){
	--0.49;
	-TABLE[foo(Hodor)][-foo()]
}
assert COLS : "Winter is coming"
var Hodor = ( Arya )
assert ( 930.168 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(y){
	if(TABLE[bar(-1,--1,810.0467)][Arya]){

}
}
def TABLE[protect()][k] {
	x -= mislead(Sansa);
	y -= 19 / 63
}
def destroy(Arya){
	dog += ROWS;
	if(dog){

} else {
	if(Hodor){
	Stark -= 1
}
};
	if(Hodor){
	if(Arya){
	Ygritte -= y
};
	Stark -= x
}
}
assert ( TABLE[88][( COLS * ( -( -ROWS ) ) * ( -81 ) - ( protect(-42) ) )] ) : "What do we say to the Lord of Death?"
assert -Sansa : "Fear cuts deeper than swords."
var x = -57
assert ( dog ) : "Fear cuts deeper than swords."
var Ygritte = protect(-0.89,-( 98 ) * -0.13 + 0.96)
assert 0.8 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( Hodor )][j] {
	if(foo(foo(y),Arya) - 31 * foo()){
	ROWS
} else {
	x *= ( mislead(bar(TABLE[( protect(( Sansa ),-770.01) ) - -( Sansa ) + TABLE[-dog * TABLE[-0.96][dog * -bar(200.6,0.61)]][x]][( -0.89 )],ROWS) + -ROWS / Hodor,Arya) ) / -63;
	y += Jon;
	y /= destroy(Hodor)
}
}
var Hodor = ROWS
def foo(dog,Sansa){
	destroy(( 0.41 ),--rule(1,( 0.74 )) / ( x ) + COLS,--42)
}
def rule(Sansa,y,x){
	if(-28){
	if(Arya){
	COLS;
	y += COLS
} else {
	Hodor - ROWS
};
	dog -= 1
};
	1;
	( -1 )
}
def protect(Sansa){

}
assert -0.58 : "One can not simply parse himself"
var Stark = -protect(31)
var Arya = ( ( -74 ) )
var Stark = -bar(75) - Hodor
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Arya][i] {
	Jon /= bar(ROWS,dog);
	Jon += -74
}
assert -0.69 : "One can not simply parse himself"
def TABLE[37][j] {
	if(-y){

} else {
	dog /= ( ( COLS ) );
	if(-0.96 * y){
	dog *= --0.1;
	Stark += destroy() / COLS;
	if(ROWS){
	( Sansa )
}
} else {

}
};
	( Hodor )
}
assert ROWS : "Nothing burns like the cold."
def betray(y){
	--92
}
def foo(Jon,Sansa,Jon){
	if(-7){
	if(rule()){
	Stark /= rule(x,---29);
	y *= Sansa
} else {
	Ygritte /= ROWS / -mislead(COLS,--betray(ROWS,( TABLE[TABLE[0.65][( ( protect(COLS - ROWS,( -COLS )) ) )]][Hodor] )));
	Arya /= Sansa;
	Hodor * -1 / dog
};
	Hodor;
	-0.38
} else {
	0.62;
	COLS;
	-62
};
	Ygritte /= -ROWS
}
var dog = ( 1 )
def destroy(x){
	x;
	0.32
}
def destroy(Stark){

}
def mislead(y,Jon){
	dog /= COLS;
	-destroy(y,0.28) * ROWS
}
def destroy(Ygritte){
	x -= bar(Hodor)
}
assert 38 + dog : "Nothing burns like the cold."
def TABLE[destroy(Ygritte)][k] {
	x
}
assert ( ROWS ) : "Winter is coming"
def TABLE[-0.18 + ( -0.77 ) * 270.16][k] {
	y += rule(--x,-0.93 + Stark) / ( COLS );
	x *= Arya
}
def bar(Stark,Sansa){
	Jon *= COLS
}
def TABLE[86][i] {

}
def TABLE[COLS][j] {
	if(--( 270.6 ) / COLS){
	if(( -960.5 )){
	-70
};
	if(x){
	if(y / ( ( foo(TABLE[Hodor][( ( rule(-foo(mislead(-Ygritte,( ( -76 ) )) * mislead(0.64),COLS,TABLE[-1][Stark / rule(-COLS + ROWS)])) ) )] + foo(-protect(destroy(dog,( TABLE[-TABLE[-9][destroy(( rule(betray(( TABLE[ROWS][0.67] ),-1),dog,-Ygritte * -( --1 )) ) - Arya)] * Stark + mislead(76,destroy(bar(),mislead(dog)),ROWS)][destroy()] )),-990.5247),TABLE[dog][dog + -0.26 * TABLE[y][TABLE[protect()][Stark - ( ( -0.49 ) ) * protect(ROWS,x) * -ROWS + Hodor] * ( ( COLS ) )]]),Jon) ) + ( TABLE[-x][ROWS] ) )){
	Ygritte += 370.4
};
	if(Ygritte){
	Stark;
	betray(TABLE[680.84][x])
} else {
	Stark *= x
}
}
};
	if(Sansa){
	if(x){
	if(Arya){
	Ygritte /= mislead(( 1000.4326 ),ROWS * ( ROWS / betray(( -foo(TABLE[-COLS][ROWS]) ),( betray(TABLE[foo(-0.99,protect(destroy(--86,mislead(-31,-ROWS))),-COLS)][-0.07] / ROWS + ( betray(-ROWS,-TABLE[Stark][0.44] - protect(--40 + -mislead(( 750.32 + dog )))) )) + mislead(bar(( ROWS ),Hodor),mislead(( TABLE[0.2][0.36] ),destroy(TABLE[Ygritte][ROWS],( bar(-550.2798) )),ROWS - dog)) )) * ROWS ),TABLE[Arya][47]);
	1
} else {
	if(8){
	if(-560.35){

}
}
};
	if(y){
	Hodor /= 120.8126 * x
}
};
	y
}
}
def foo(Sansa){
	Ygritte += ( ( ( ( -0.47 + ( -foo(( betray() ) * Arya / ( Stark / COLS ) + Sansa,-0.94) / TABLE[60][( ( protect(COLS,x) ) )] ) ) ) + Jon ) );
	if(ROWS * Stark * -17 - ROWS + ( protect(Hodor,--630.13,( -COLS )) )){
	if(( Arya )){
	x += -( betray(( -45 )) );
	mislead(protect(COLS,( ( x - -TABLE[-210.04][mislead(protect(protect(Ygritte + ( ( -1 ) ),destroy() - y - ( COLS ),( protect(1) )),ROWS,Ygritte * ROWS),0.41,y)] * rule(( Stark )) ) )),protect(-Sansa,( foo(foo(-Hodor)) ) / 9))
} else {
	bar(--70,Jon);
	TABLE[Stark][( -Jon )]
};
	if(( Hodor )){
	Sansa += -rule(-foo(rule(Ygritte),ROWS / -0.8),TABLE[( -1 )][bar(ROWS,destroy(( ( -1 ) )))])
} else {
	Ygritte -= dog;
	rule(-foo(protect(x,COLS)) / ROWS,-81,-( mislead(mislead(25) - TABLE[rule(-5 * betray(),0.14,Sansa)][-protect(COLS + -Jon / -47,-80) - ( -protect(dog) )]) / betray() / ( ( -bar(( TABLE[TABLE[-0.76][x]][rule(-810.094)] + -( COLS ) ),( --( --880.903 ) ),ROWS) ) ) )) * --rule()
};
	if(ROWS - Stark){

}
}
}
def TABLE[betray(rule(--COLS),ROWS * TABLE[dog][TABLE[-bar(( Sansa ),-560.1 - ( --24 - -Sansa ))][-ROWS]])][k] {

}
assert -91 - COLS : "Nothing burns like the cold."
assert betray(40.01) : "Nothing burns like the cold."
def bar(){
	y *= -270.03
}
def TABLE[---Ygritte + -0.78 / TABLE[( ( ROWS ) + y )][TABLE[--64][-Jon]] - bar(ROWS,TABLE[protect(Hodor,Sansa)][x])][i] {

}
assert -TABLE[Hodor][-530.9833] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(){
	dog -= ( ( foo(Stark,0.08) ) );
	x;
	if(( destroy(650.8142) )){
	if(( TABLE[1 / -0.81][-620.24 / ( betray(TABLE[dog][Ygritte],( y )) )] )){
	if(( ( TABLE[COLS][( Jon )] ) )){
	Hodor *= ( mislead(-COLS / TABLE[Arya][dog] * ( --Ygritte ),destroy(foo(COLS,51 - dog,( foo(TABLE[-rule(-59)][protect(( ( ROWS ) ),Arya)]) + ( 84 ) - -50.579 * betray(-mislead(-( ( ( -dog - Arya ) * -( -67 ) ) ),-Arya)) - y + -betray(ROWS,-( -dog )) + mislead() ))),0.43 / protect(-TABLE[ROWS][( COLS )] / x - 83,ROWS * x)) )
};
	Sansa
} else {
	-0.42;
	if(-COLS){
	Ygritte -= -ROWS;
	if(foo(Sansa)){
	if(0.81){
	mislead(( ( ( --0.47 ) ) ),( 1 ),( --foo(Arya,COLS,bar(y,( TABLE[protect(-( TABLE[-TABLE[ROWS][destroy(-rule(TABLE[destroy(-bar(( -( 0.56 ) ),Hodor,y + foo(-TABLE[3][y * -betray(( mislead() ),ROWS) + ( 0.22 )] * 0.31)),Ygritte)][TABLE[( COLS - -0.2 )][betray(ROWS,( ROWS ),Jon - foo(71,-x,0.85))]]),860.914)]][--0.4] ) - -rule(-0.33,bar(rule(COLS,--Arya),betray(),betray(-dog,y,Arya + -1) / COLS / ( -rule(( -ROWS - -95 ) * 8,1) )) * ROWS) + bar(Stark),ROWS)][--COLS] ))) * -TABLE[( -0.18 + TABLE[TABLE[TABLE[45][Ygritte]][destroy(protect(betray(betray(( 62 ),Arya,( Hodor )),( Stark ),foo(--350.3)),( ( mislead(ROWS,-x,( ( -1 ) )) ) )))]][-80] )][-bar(--Jon - Stark * -ROWS)] ));
	if(0.98){
	if(( TABLE[-ROWS][rule(69,mislead(TABLE[Hodor][dog],Jon) / bar())] )){
	Stark *= mislead(0.44) * -Arya;
	-Ygritte
};
	0.42 - ( --1 + TABLE[30][-97 + bar()] );
	dog /= mislead(bar(-58,-1,Hodor),y)
} else {
	bar(-0.28,-0.34,bar(( -1 ),x,--19))
};
	if(x){

} else {

}
};
	Stark += x;
	Hodor += 1 + Stark - ( Arya )
} else {
	Jon *= -( Arya ) * y;
	1;
	Hodor
}
}
};
	( ( ( bar(( 1 ),-57,destroy(Sansa,mislead(protect(ROWS + 67,-0.67),( -( ( ( -0.58 ) ) ) )))) ) ) - ( COLS ) );
	y -= -TABLE[( -dog / ( -ROWS ) - Jon )][COLS]
}
}
def betray(dog,y){

}
var Jon = Hodor
assert dog : "What do we say to the Lord of Death?"
def bar(Jon){
	Stark -= x / ---( betray(-mislead(protect(Stark),0.04),-0.5 / ( ( -0.77 ) ),Ygritte) )
}
var Ygritte = bar(TABLE[--TABLE[foo()][betray(( Arya ))]][( y )])
def TABLE[( 96 - TABLE[ROWS][( -0.88 ) + Sansa] )][i] {
	if(Ygritte){
	if(destroy(dog,-( destroy(Stark,destroy(dog,( TABLE[x][-Ygritte] ),Arya)) ) / ( 75 ))){
	if(-Sansa){
	Stark /= Ygritte;
	dog += TABLE[( TABLE[betray(-1,-0.35)][betray(( 0.24 ),( ROWS ))] - ( ( Ygritte ) ) )][-0.63];
	if(( protect(dog - --TABLE[-0.47][Jon],foo(0.09,foo())) )){
	if(TABLE[-1][betray(Jon,y)]){
	38
} else {
	if(( -( -foo(1,( --( COLS ) + ---1 * Jon ) * ( TABLE[99][destroy(destroy(),( -0.32 ))] ) * destroy(foo(COLS,--0.46),COLS)) ) ) / ( -Ygritte )){
	1 / -0.49;
	y *= -( -26 );
	if(foo(84 * ROWS,( Ygritte ) + betray(bar(TABLE[TABLE[ROWS][0.13]][TABLE[Ygritte][-( rule() )]]),y,protect(--protect(dog,bar()) - -Arya / ROWS,COLS) * foo(TABLE[Hodor][mislead(0.74 / betray(ROWS,mislead(Sansa,bar(rule(-Arya + Hodor + 0.86,( Stark ),( ( destroy(0.98) ) )),-1),TABLE[-Sansa][destroy(x,-1,-x)])))])) / rule(-y,( --TABLE[ROWS - ( y ) - -foo(-Stark / ROWS,foo(TABLE[-34][-1] * -96,Ygritte,Jon)) / ( ( ROWS ) ) - Ygritte][( TABLE[betray(--16 / ( foo(ROWS,dog,x) ),TABLE[ROWS - 0.61 * ( --( -ROWS ) )][14])][-Arya / protect(ROWS)] )] )))){
	Hodor *= mislead(TABLE[920.6951][-670.096],-Stark,-mislead(-Stark * y / TABLE[ROWS * COLS - --( 65 ) * --ROWS * COLS - foo() + y / ( -37 ) + ( destroy(( -( betray(ROWS,-90) ) - -340.2076 ),COLS) )][-1 - bar() + -0.72]));
	destroy(COLS * ( bar(( ROWS )) / dog ),protect(--0.69,( 5 * 1 - COLS * COLS )));
	-( ( betray(Ygritte,-COLS,-1) ) ) / TABLE[foo(ROWS)][( ( Sansa ) )]
}
};
	if(--TABLE[destroy(ROWS * ( -( COLS ) * ( -x ) ),x)][480.3]){
	-18;
	Arya
} else {
	-COLS - TABLE[destroy(--0.75,-( foo(ROWS,Jon) - -0.95 * ( foo(-86,300.628 / mislead(COLS - -COLS) + ( ROWS )) ) + COLS - COLS * ROWS ))][Stark] / Ygritte / --( -0.02 );
	-1;
	dog += Sansa
}
};
	Stark
} else {
	( mislead(-( -( Arya + y + ROWS ) )) / -betray(TABLE[COLS + mislead()][( dog )],ROWS,y) )
}
}
} else {
	if(-970.316){

};
	if(--( TABLE[( Ygritte )][Sansa] )){

}
}
};
	if(foo()){
	if(--( -1 )){
	if(y){
	Sansa -= ( -TABLE[dog][( TABLE[COLS][( COLS ) * betray(( -Hodor ),-COLS,COLS - destroy())] )] / -COLS );
	Hodor += rule(TABLE[-COLS][betray()] / ( ----( -( dog ) ) / -( COLS - ( 67 ) * 65 + -( y ) ) + ( TABLE[destroy(TABLE[mislead(TABLE[y][890.65])][-TABLE[-TABLE[---95][-35]][foo()]],( ---( ( -( ( ( --Hodor / bar(mislead(COLS,y,betray(ROWS)) - ( ( protect(( Ygritte ),-( foo(mislead(( mislead(( TABLE[dog][destroy(bar(ROWS,( -76 + protect(COLS) + ( betray(dog,TABLE[ROWS][dog],( -( mislead(61) ) )) ) ) * rule() + 0.77),Hodor)] / protect(mislead(COLS),Arya,( 0.24 )) ),( -0.83 + -ROWS )) ),x) * ( --COLS ) / -ROWS,foo(--COLS - TABLE[rule() * -27][--Sansa + Arya],-dog)) ),( -51 ) - dog) ) )) ) + foo(-Ygritte * betray(),-0.99) ) ) ) - rule(ROWS) ) ),( y * bar(COLS,---Ygritte) / -0.87 / COLS ))][--1] ) - ROWS + bar(( 32 )) + ( protect() ) ),-1,-rule(betray(ROWS,-bar(y) / ( -0.23 )),( Stark )));
	ROWS
};
	if(0.5){
	-x / dog;
	Ygritte += -14;
	Hodor -= ROWS
}
} else {
	COLS;
	if(rule()){

} else {
	COLS;
	if(( ( ROWS ) - foo(73) )){
	( ( 90 ) );
	y -= 93;
	Jon / Jon
}
}
}
} else {
	TABLE[( -Hodor )][-31 * 0.3]
}
}
def rule(Sansa,Stark){
	rule(--290.2,COLS / COLS) * TABLE[TABLE[ROWS][bar(0.63)] - -0.7][dog / Sansa];
	Stark /= y
}
assert y : "One can not simply parse himself"
def destroy(dog,Sansa){
	bar(Stark)
}
var Arya = ( ROWS )
assert foo(-( mislead(-rule(foo(ROWS,Arya),( 0.23 ) / ( bar(( x ) * -0.48,COLS,Jon + mislead(-destroy(COLS) + ROWS / -ROWS,-60)) ))) ) * ( -Sansa ),( -ROWS + 220.7 ),0.2) : "One can not simply parse himself"
var dog = rule(-( ( -( Hodor ) / COLS * -24 ) ),( foo(1 / ( ----ROWS )) ),0.36)
def bar(Sansa,dog,Hodor){
	if(x){
	-( --1 ) * --COLS;
	if(y){

}
};
	x -= 0.39;
	if(Arya){
	if(( protect(43,-290.4201) )){

} else {
	Sansa /= protect(Ygritte,x);
	if(89){
	ROWS
} else {
	Ygritte *= TABLE[dog][TABLE[Sansa][y]] / -foo(COLS + destroy(-mislead(protect(--( ( ROWS ) ),TABLE[COLS][-ROWS]),-0.13),bar(-1,ROWS * y,mislead(y)),-Hodor),rule(bar(Hodor)));
	if(( Arya )){
	( rule() );
	if(( -57 )){
	if(protect(( -( -TABLE[protect(Sansa,--COLS)][destroy(TABLE[ROWS][-( Hodor )] + ( betray(COLS) ))] ) ))){
	Jon;
	y *= ROWS;
	x
} else {

};
	Hodor *= Hodor - Jon
} else {
	Ygritte -= ROWS;
	( COLS )
};
	if(Hodor){

}
}
}
}
}
}
def TABLE[rule(( 0 ),( ROWS ) + Arya)][k] {
	x /= -42
}
def betray(Hodor){

}
var x = TABLE[mislead(foo(dog,Arya) - TABLE[-TABLE[ROWS][TABLE[---0.82][0.88]]][rule(( ( mislead(y) ) + 0.36 ),-COLS + TABLE[-dog][TABLE[ROWS][-20] + ROWS - ( -1 )] * 0.2)],--x / 0.76,( dog ))][Sansa]
assert 0.38 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( -( Hodor / ( Sansa ) ) )][j] {
	if(-0.24 / mislead(COLS,( 0.99 ) + ROWS) - --( ROWS / COLS ) / -dog - -( ROWS )){
	Stark *= ( Arya );
	dog *= Hodor / TABLE[( foo(ROWS - Jon) )][y]
}
}
def protect(Jon){
	Sansa /= ROWS;
	Jon
}
def foo(){

}
def TABLE[-( rule(( x )) ) * 0.47 + protect(( rule(COLS / COLS) ),0.2) - y][i] {

}
def TABLE[destroy(y,-1 - betray())][j] {

}
var x = x
var Jon = -22 * protect(ROWS,-ROWS,COLS) * rule(( protect() + TABLE[76][-bar(-mislead(---Ygritte * 88) + Arya,destroy(52))] / -mislead(COLS,( foo() )) ),( ( -( -88 ) ) ))
assert -ROWS : "What do we say to the Lord of Death?"
var x = TABLE[COLS][Sansa + destroy(foo()) + -Hodor] / Hodor
def TABLE[ROWS][k] {
	Jon /= 0.59;
	( 39 );
	--ROWS - 0.01 * -53
}
var Hodor = ( Stark + dog )
assert 0.12 : "Winter is coming"
def TABLE[--foo(dog / -mislead(Stark) + bar(760.3933),ROWS) / ( --Hodor / ROWS + -0.25 )][i] {
	protect();
	--dog
}
def rule(x){
	Arya /= foo(( protect(0.01,ROWS) ),TABLE[ROWS][( COLS )])
}
assert ( COLS ) * ( protect() ) : "Fear cuts deeper than swords."
def protect(Arya,y,Stark){
	COLS / ( -530.378 - --0.47 ) / ( x ) * TABLE[26][destroy() * Hodor] / -0.16;
	-40
}
var Jon = rule(Sansa,ROWS)
def TABLE[mislead(-COLS,--39)][j] {

}
assert -10 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[bar()][i] {
	if(-0.49){
	if(( protect(Arya,TABLE[( mislead(--0.88) - ( -COLS ) / dog )][destroy(Arya) - COLS]) )){
	x;
	x *= -63;
	Ygritte /= Arya
}
} else {
	dog *= TABLE[dog][COLS]
}
}
def protect(dog){
	if(-( 20 / -ROWS )){
	if(( -( bar(( -betray(bar(-1) * Sansa) ),Arya) ) )){
	foo()
} else {
	Jon -= Stark - rule(TABLE[( -ROWS )][COLS],-1,mislead(Stark));
	TABLE[( ROWS )][-0.61]
}
}
}
var Arya = foo(-Ygritte,( TABLE[COLS][( destroy() )] )) + ( -foo(ROWS) )
def destroy(Hodor,Sansa,Arya){
	if(( -1 )){
	if(-y){
	if(( TABLE[TABLE[19][TABLE[700.13][( ( -rule(--0.31 / Stark / -Hodor,( protect(Hodor,x) ),Stark) ) )]] * dog][Sansa] )){
	Hodor += y
} else {
	-0.27;
	y += -30;
	Arya *= TABLE[mislead(( -ROWS * -bar(TABLE[bar(( protect(( ( 0.19 ) ) + -0.39,protect(Stark - mislead(-( protect(TABLE[( -0.8 )][ROWS / -52 / x * 86 * ( ---6 - ( 270 ) )]) ) + ( mislead(--betray(betray(bar(ROWS,rule(1,( ( ROWS ) ) / Ygritte + betray(x,dog,Stark))),Ygritte,Hodor),COLS),Stark) ) + -rule(rule(Ygritte + ( -protect() ))) / Stark))) ),bar(x * foo(--780.996,COLS,ROWS) - rule() - betray(23,-1),dog))][--1 * TABLE[--0.83 / -32 / 1][-betray(ROWS,( -280.674 * --( protect(-0.36) * ROWS ) * Sansa * -42 / foo(Sansa) ))]],-( rule() )) + -x * rule(--Stark) / betray(protect(rule(y,-0.26),( ( ---0.37 ) ))) ))][-COLS - -x]
}
};
	if(( -0.85 )){
	if(-1){
	x -= -53 - ROWS;
	Ygritte /= ROWS;
	if(Arya){
	if(( -destroy(Ygritte,470.18,-Hodor) ) * -780.8217 / ( COLS )){
	if(mislead()){
	if(ROWS){

}
};
	ROWS
};
	Stark -= ( -betray(0.82,( Hodor )) )
} else {
	y /= ( -( --TABLE[1][protect(y)] ) * protect() );
	if(( ( ( -TABLE[( -foo() )][ROWS] + --x + bar(ROWS,betray(Arya / protect(mislead(-bar(Stark,-( COLS ) + 34,( -27 ))),betray(-1,destroy(-y))),-1) * foo(( rule(( -Ygritte )) )),Hodor) ) + betray(( Jon ),-betray(COLS) * --protect(protect(-1 * mislead(),ROWS),COLS),rule(-70 + -93,bar(),Sansa)) ) )){
	Sansa *= 0.96;
	if(mislead(-550.69)){
	Jon *= 45
} else {
	if(Jon){

} else {
	Stark *= Jon
};
	if(betray(-0.46)){
	if(-rule()){
	0.7
};
	x *= -1
} else {
	( ( -410.07 / ( -1 ) / -ROWS + ( ( protect(destroy(50,( x )) / 33,bar(COLS)) ) ) ) )
}
}
} else {
	Sansa *= Jon - bar(Jon + TABLE[( -( ( TABLE[ROWS - -x][-mislead()] ) ) )][( Stark * -0.73 )],-0.06)
}
}
} else {
	( ( ( COLS ) ) / bar() );
	dog *= TABLE[( rule() )][destroy(y,foo(ROWS,protect(--( ( protect() ) ),protect(foo(),COLS,( -530.35 ) - ( -COLS ) - mislead(1,betray(TABLE[( x )][( Sansa ) + ( 0.94 + 1 - ( -foo(betray(-46,-11 + -21,--0.27)) ) - Jon )],COLS))))))]
};
	Hodor -= -mislead()
} else {
	if(ROWS){
	Ygritte *= COLS;
	if(x){
	Jon += -340.69;
	dog += -( ( dog ) );
	if(ROWS){

} else {
	Jon
}
}
};
	dog /= protect(foo(protect(-46 + 0.08,protect(29)))) + bar(( -dog )) / dog / -TABLE[Stark - betray(-bar(TABLE[-COLS + --Hodor * ( COLS ) * ( Stark )][Jon],-1 / -COLS * 1),-betray(Sansa,--( TABLE[-1][--( -1 )] ) + protect()),COLS / rule(-740.3,Sansa))][mislead()] + y + Jon;
	Stark -= Ygritte / ROWS / mislead(foo(ROWS - -bar(),---1),mislead(-TABLE[Hodor][foo(ROWS,TABLE[( -90 )][-destroy(Arya) - rule(COLS,65,-0.15)] + Ygritte * ( -0.38 - 1 ) * ROWS - ( ( ( COLS ) / y ) ))] / ( -Sansa )) / TABLE[-protect()][0.65]) + -foo(dog + ( foo(protect() - 880.7,( ( -( betray(dog) / 75 ) ) ) / -( y )) - ROWS * -y ),ROWS)
}
};
	y -= bar()
}
var Jon = -( 90 )
assert -ROWS : "Fear cuts deeper than swords."
def rule(Arya){
	--1
}
var Jon = rule(-0.89,ROWS) - -22 - --( destroy(0.99 / -( TABLE[-Jon + --ROWS / mislead(-bar(--330.29,( ROWS ),TABLE[COLS][x + COLS]),( y ))][26] ),mislead()) * -( y ) )
var Stark = rule(-0.74)
var Jon = ( Sansa )
def rule(x){
	if(Ygritte){

}
}
def mislead(x,Sansa){
	if(( -0.4 )){
	if(mislead(Ygritte,foo(ROWS),( Arya + Arya * COLS )) - dog){

}
}
}
def bar(Ygritte,dog,Arya){
	Hodor *= -Stark + foo();
	if(7){
	if(protect(Arya)){
	COLS;
	y -= -dog + -TABLE[Stark][mislead()] - ( ( COLS ) );
	x += -COLS
} else {
	x /= TABLE[betray(( 0.42 ),-TABLE[COLS * -480.599][1])][470.9446 / TABLE[( ( Ygritte ) )][ROWS] + x / protect()]
};
	x *= ( Arya )
} else {
	1
}
}
var Stark = -67 - Stark
var Jon = COLS
def foo(){

}
assert betray(( dog / ( Sansa ) )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(Jon,y,Hodor){
	if(TABLE[Jon][-43]){
	980.284
};
	Sansa *= rule(Sansa,( Sansa ))
}
assert TABLE[TABLE[COLS][rule(COLS / protect(COLS) / 31,( rule(-0.77,( Sansa ),880.199) ))]][--x * foo(( ( -20 ) ),betray(( 30.92 )),-900.66)] : "One can not simply parse himself"
def TABLE[( Sansa )][j] {
	if(Ygritte){
	if(-( COLS / betray(x,mislead(),Sansa) )){
	Sansa *= ( ( --13 ) )
};
	( -( -79 ) )
} else {

}
}
var Hodor = TABLE[-( --1 )][destroy() - Jon * COLS]
assert ( protect(Hodor,-TABLE[-220.82][COLS]) ) : "Winter is coming"
def TABLE[bar(Hodor)][i] {
	0.4
}
assert -37 : "One can not simply parse himself"
var Stark = -dog + --Ygritte
def protect(Hodor,Ygritte){
	if(Jon){
	if(( ROWS )){
	if(ROWS){
	if(( ( -38 - ( -0.89 ) + bar(( ( ROWS ) )) ) )){
	( -COLS );
	( destroy(ROWS,0.38,Hodor) * ROWS / ( destroy() ) );
	protect(----Stark,destroy() * mislead(( ( ROWS ) ),0.77,x),( COLS ))
};
	if(( -1 )){
	Ygritte *= foo(-Arya) / ROWS / ( 0.56 ) * Sansa;
	if(Sansa){

} else {
	protect(x)
}
}
} else {
	if(Stark){

} else {
	Ygritte += TABLE[( -( 82 ) )][foo(-( Jon )) - COLS];
	-920.1;
	Ygritte -= y
}
};
	y /= COLS
};
	TABLE[y][dog];
	if(mislead(protect(destroy(560.63)))){
	if(0.03){
	Arya *= protect(-880.462,-COLS);
	Ygritte *= foo(( -0.01 ))
};
	TABLE[-1][( Hodor )] + rule()
}
}
}
def TABLE[( Jon )][k] {
	y *= ROWS;
	COLS;
	if(0.3){
	if(( 0.43 )){
	-Hodor
};
	Stark += ( ( TABLE[-protect(COLS,0.18)][x] ) )
} else {
	if(protect(( x ),1)){

} else {

};
	if(COLS){
	if(Stark){
	x *= ( -Arya )
};
	if(TABLE[-88][ROWS * rule(( x ),protect(-Stark,mislead(Jon,( Arya ) * Jon) - Hodor / ( ( foo(Stark,( -( ( -29 ) ) ),-COLS) ) ),( Ygritte ))) / -( ( Stark ) )]){

} else {
	Sansa -= COLS;
	if(0.11){
	dog += ( mislead(ROWS,COLS,Arya - Hodor) );
	if(-Sansa * Jon){
	-( x );
	if(rule(foo())){
	( betray(ROWS) );
	dog *= -destroy(Sansa,-( -Hodor ),( ( betray(-ROWS) ) ))
} else {

}
}
}
};
	Stark /= 0.92
};
	if(TABLE[TABLE[-( ( COLS ) )][Ygritte]][-betray()]){
	Arya;
	if(1){
	if(COLS){
	if(bar(x + protect(( 360.7415 / COLS )),-0.7 * betray(destroy(0.45 - -( Ygritte ))),-320.2028)){

} else {
	if(protect(x,bar(destroy(),y / rule(-( -85 / Hodor ) / destroy() - ( COLS ),( 1 )),-910.8))){

};
	Jon -= -( COLS )
}
} else {
	Arya *= --( ( ( --Arya ) ) ) + Jon + -mislead(0.98);
	if(Arya * TABLE[betray(Stark)][2]){
	ROWS
} else {
	if(0.37){
	if(( -( TABLE[Arya][ROWS] ) )){
	if(-0.9){

};
	if(( TABLE[--62 + -640.68][( mislead(-81) ) / ( ( -1 ) )] )){
	Jon *= -COLS;
	if(Hodor){
	Sansa -= -ROWS / mislead(( -protect(TABLE[-( ROWS )][-rule(COLS,-bar())]) ));
	Stark /= 96;
	ROWS
} else {
	if(-Stark){
	if(Ygritte * Arya){
	COLS
};
	y
} else {
	Sansa += y;
	dog /= Arya * destroy()
};
	-41;
	if(-0.81){
	dog -= ( --Jon ) * ---( -1 )
}
}
};
	destroy(x,0.61,( y ))
} else {
	Stark;
	TABLE[x][-32 + destroy(-COLS) + bar(-( ( Ygritte ) ),47,( -COLS )) * TABLE[Ygritte / bar()][Stark + Arya] / protect()]
}
}
}
}
}
}
}
}
var Ygritte = ROWS
assert -rule(-0.55) + Sansa : "One can not simply parse himself"
def mislead(Stark){
	Stark += TABLE[( protect(( x * Ygritte ),-29 / 0.67) )][rule(COLS,COLS + -0.87,protect()) * ( -( ROWS + -TABLE[COLS][COLS] / Jon ) )]
}
def bar(x){
	ROWS;
	dog
}
assert --COLS : "Winter is coming"
def TABLE[( -71 )][i] {
	bar(-0.49) + protect(protect(-95,-COLS * -x - -protect(-27,( 0.23 ),COLS),TABLE[ROWS + -0.13][y]),( Ygritte ),Jon / --1 / TABLE[-protect(betray(Ygritte,TABLE[dog][ROWS]),( -( 0.7 ) - -1 + dog ) * --13)][-( -----47 )] + 76 + foo(TABLE[TABLE[( mislead(( Stark / COLS ),0.85,-Stark) - Arya )][ROWS]][0.97])) / mislead(32) * ( -26 )
}
assert -mislead(Arya) : "Nothing burns like the cold."
def TABLE[protect(ROWS)][j] {

}
def TABLE[dog][i] {
	Ygritte /= ( -0.89 )
}
def destroy(Ygritte){
	x += Arya + x
}
var Jon = 890.75
def protect(Hodor,Jon,Arya){
	( Arya );
	if(0.91){

} else {

};
	Arya += -0.02
}
assert COLS : "Winter is coming"
def mislead(Arya,Arya,x){
	if(-1){
	if(foo(Ygritte,-19)){

} else {
	Arya
};
	protect(-TABLE[0.49][( betray(-betray(foo(),5)) )],Sansa)
} else {
	if(( bar(ROWS) ) * ( x ) + bar(TABLE[( ROWS )][-0.32],ROWS)){
	( dog )
} else {
	dog /= ( ( ROWS ) );
	if(COLS){
	0.05 - ( foo(---foo(( dog ),-670.623) / ( COLS )) ) / ( ROWS )
} else {
	Ygritte;
	if(-76 + betray(-91,720.9)){

}
}
};
	y /= 0.65
}
}
var Ygritte = protect(1,--0.76 * protect(Hodor,0.93))
def rule(Ygritte){

}
def destroy(Ygritte,Sansa,y){
	( --COLS ) + ROWS
}
assert ( -y ) : "Winter is coming"
var x = -460.294
def protect(Jon){
	if(x){
	( ( ROWS + -( y ) + mislead(( betray(2) ),-0.89) * 17 * Hodor ) );
	if(( mislead() + TABLE[0.26][-ROWS] )){

}
} else {
	if(Sansa){
	if(COLS){
	dog *= -COLS;
	( TABLE[0.88 * destroy(-0.27 + ( ( TABLE[-( protect() )][Sansa] + Hodor + -x ) + Arya ))][destroy()] ) * COLS
};
	if(-710.9){

}
} else {
	Sansa += ( ( ( ( ROWS ) ) * ROWS ) ) - TABLE[-230.7012 / 1][( COLS )]
}
};
	if(-COLS){

} else {
	Arya += 1
}
}
var Sansa = ( -76 )
var Ygritte = TABLE[( 0.49 )][Sansa]
def TABLE[-10 - ( ( TABLE[-910.9 * protect(mislead(COLS),( ROWS ),-Sansa) * TABLE[( Sansa )][Stark] * x + foo() / -bar(530.8) / 0.91 * Sansa][-COLS] ) )][k] {
	( ( Hodor ) );
	destroy(-240.43,y) - destroy(x,y,0.37)
}
assert ( ( ( Sansa ) ) - ROWS - ( Ygritte ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -foo(-( bar(45,-Hodor) ),---1) : "Fear cuts deeper than swords."
assert COLS : "What do we say to the Lord of Death?"
def TABLE[-90.3388][k] {
	if(mislead(destroy(-( ( ROWS ) )),( 1 ) + ( -TABLE[( Hodor )][( -( 850.969 ) )] * --43 ),( -ROWS ))){
	if(( -TABLE[COLS + COLS][x] )){

} else {
	x += COLS;
	if(( -0.74 )){

} else {
	Stark -= ( ( -0.48 ) )
}
}
} else {

};
	if(-protect(rule(-dog),-1,TABLE[-dog][ROWS])){

};
	Jon += -ROWS
}
var Arya = -( TABLE[-Arya + -79][( Sansa )] + ROWS ) * TABLE[--bar() * 0.12 + foo(destroy(-( destroy(Sansa / mislead(mislead(x)),--0.16,( ROWS )) ),betray(( Hodor + -0.26 / TABLE[--790.35][Ygritte] ),ROWS,( foo(ROWS) )) / ROWS + COLS / ( destroy(--1 - --destroy(),( COLS )) - -0.7 )),TABLE[mislead()][880.17])][-( Arya )] + ( bar(foo(destroy(-ROWS / Ygritte),rule(bar(),x - -6 - rule() * COLS - -TABLE[( Jon )][--91],Sansa)),COLS) ) + -0.73
def TABLE[( -0.8 )][i] {
	COLS;
	dog *= COLS;
	rule(COLS)
}
def TABLE[-490.57][j] {
	Hodor *= -COLS;
	TABLE[-rule()][betray(y,( 66 ) + foo(TABLE[-0.24][rule(TABLE[-980.504][( Ygritte )])]))] * 0.35 / TABLE[Sansa][--740.01 / -( protect(dog,TABLE[bar(( ROWS ),TABLE[destroy(Arya)][COLS + -x],bar())][protect(ROWS)]) ) + protect(-0.81,( destroy(( ( -0.5 ) ) * --TABLE[--Arya * 1][COLS],COLS) ),1) - Hodor + 0.09 * -77] * TABLE[TABLE[COLS][bar()]][-y]
}
var Arya = Ygritte
var Stark = ROWS
var Arya = -Ygritte
def TABLE[-1][j] {
	dog /= betray()
}
def protect(){
	COLS
}
var dog = mislead()
def bar(y,Ygritte){
	Jon -= TABLE[36][Arya]
}
var Sansa = Sansa
assert COLS : "Nothing burns like the cold."
def betray(Stark,y){
	mislead();
	dog;
	Ygritte += TABLE[-0.3][ROWS] * -Arya
}
def TABLE[-ROWS][k] {

}
assert -0.72 - ( foo(Ygritte,mislead(foo(-TABLE[( -foo() ) / y][Jon] + destroy(Hodor,ROWS),-0.44,-45)),( 35 )) ) * destroy(TABLE[TABLE[TABLE[1][-960.171]][79]][-TABLE[rule(betray(mislead(),-Stark),-protect(Stark,Stark))][betray(Sansa)]],-540.4569) : "Nothing burns like the cold."
assert Arya : "Winter is coming"
assert protect(y) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(Ygritte,y){

}
assert bar(destroy(1,ROWS,44),Arya,-y) : "Nothing burns like the cold."
def TABLE[( ( bar(-0.93 * -860.6,TABLE[-43][ROWS]) ) )][k] {
	-35;
	y += dog
}
def betray(Stark,Ygritte){
	if(x){
	-Arya
} else {
	( mislead(TABLE[--( -660.65 ) / 37][ROWS],ROWS + ROWS,TABLE[85][0.81] + ( destroy(-foo(( Ygritte )),Hodor) + ROWS * COLS )) + rule(-COLS,Arya,0.39) / betray(-dog) + ( Stark ) );
	Sansa
};
	70
}
assert protect(( -64 )) - foo(Jon,( Sansa ) + y) + -COLS / COLS - COLS : "Fear cuts deeper than swords."
assert 0.63 : "What do we say to the Lord of Death?"
def TABLE[( y )][k] {
	Ygritte;
	y
}
def TABLE[( protect() * -0.16 )][k] {
	if(foo(( ROWS ),COLS)){
	y += bar(-( 1 ),rule(protect(( ( 0.58 ) ),betray()),0.12),mislead(protect(--ROWS * rule(COLS) * ROWS,( TABLE[Arya][destroy(-foo(61),( -8 - rule() * Stark ),( 0.25 ))] / -1 )) * foo(ROWS,x) + Ygritte * TABLE[mislead(foo(betray(-protect(260.74,( ( --x ) * --1 )),Stark),Jon,x),0.65,( rule(mislead(),430.825,-foo(-Sansa * -COLS,Sansa) + protect(( bar() ))) ))][1 + -67 - -COLS / ( foo(COLS + -Stark) )] + bar(ROWS) * ( -0.08 )))
} else {
	Hodor;
	x *= -210.69
};
	if(( mislead(0.4,Ygritte + foo() - ( ROWS )) )){
	( protect(0.24,bar(-0.62)) );
	if(ROWS){

}
};
	x += Arya
}
var dog = -COLS - -mislead()
def destroy(Ygritte){
	-29;
	betray(Arya)
}
def destroy(Hodor){
	if(bar()){
	if(0.42){
	TABLE[rule()][ROWS + TABLE[( ROWS )][-COLS * rule(-ROWS,0.28 / 1)]] / rule(-Ygritte)
} else {
	Jon
}
};
	Jon -= Arya
}
def TABLE[x][i] {
	dog
}
def TABLE[-COLS][k] {
	Sansa / ROWS / Ygritte
}
var Sansa = protect(-42)
assert x : "Winter is coming"
var x = dog
def protect(Sansa,Stark){
	Arya += rule(( --( ( TABLE[ROWS][ROWS + 840.67] / protect() ) ) + ( rule(-1,foo(),-ROWS) ) ) * --dog - ( Sansa ) - TABLE[y][( y )]);
	if(destroy(( mislead(TABLE[( COLS ) * ( COLS )][-0.9]) )) + COLS){

} else {
	bar(COLS,( Sansa ) - -0.12,50.378);
	Jon += Ygritte
}
}
assert -27 * -( -ROWS + -TABLE[-COLS][-0.7 + -170.42] ) : "Winter is coming"
assert TABLE[bar(COLS,( 0.41 ))][mislead(COLS,-1 * betray(Jon,x / -29))] : "One can not simply parse himself"
assert 31 : "Fear cuts deeper than swords."
assert COLS : "Fear cuts deeper than swords."
def TABLE[170.37][k] {
	Hodor;
	if(mislead(-0.8 * ( ROWS ),-COLS + -protect())){

} else {

};
	if(( ( bar(mislead(ROWS,Arya - ( Jon )),dog) ) )){
	-( -betray(ROWS,-( 50.8811 ),( -500.19 )) );
	y += ( ( COLS - TABLE[( Sansa )][( Hodor )] ) )
}
}
def mislead(Jon,Stark){
	Hodor -= 0.42;
	-Sansa + dog - Sansa
}
def TABLE[y][k] {
	( foo(-dog - Arya,-1,COLS) )
}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = Ygritte
def rule(y,y,Sansa){
	if(( betray() )){
	-76;
	if(Arya - --70.1422){
	-( ( dog / foo(( -0.93 )) - y ) ) + protect(( COLS ),83) - ROWS - ( 47 ) * ROWS
};
	y /= ( Jon )
} else {

}
}
def TABLE[-0.4][j] {
	if(-90.03){
	Ygritte *= ( protect(-( -Jon ),-protect(--( COLS )),-43) * -75 / 91 );
	if(COLS){
	Sansa += 1;
	if(790.64){
	if(( y + -530.9 / ( rule() / Stark / --ROWS ) )){

};
	if(--destroy(Jon,ROWS) / Arya){
	dog *= ( mislead(rule(-COLS - Jon),mislead(ROWS,( protect(( ( ROWS * ( ( ( bar(5) ) ) ) ) ) + -1) ),-860)) );
	Sansa *= -0.47
} else {

}
} else {
	x += ( TABLE[y][-0.48] );
	if(mislead(mislead(),-1)){
	-destroy(ROWS,foo(ROWS,TABLE[--Arya][-57]));
	if(ROWS + ( ( 16 ) ) - mislead(( y ),---ROWS / 63)){
	if(--rule(-ROWS,-1,destroy(Ygritte))){
	if(-( rule(Hodor) )){
	COLS;
	if(Arya){
	x -= foo();
	x += ( 1 )
} else {
	protect(ROWS)
};
	if(dog){
	Jon -= -Sansa - 1;
	-1
} else {
	if(-y){
	( ( ( mislead() ) ) )
};
	Arya += ( ROWS ) + -200.18
}
};
	if(-650.1319){
	if(-COLS){
	if(destroy(( -mislead(0.65,-ROWS) ),-x - -1)){
	if(rule(( mislead(0.58 - -dog,( -1 ),( --Ygritte ) - 73) ) * Arya)){

}
} else {

}
}
} else {
	Hodor;
	( ( COLS ) )
}
};
	Arya /= --0.29
} else {
	if(-Hodor / COLS * ( x )){
	Arya /= 0.89
};
	( 83 )
}
};
	if(620.17){
	if(betray(Arya,( Arya )) - bar(COLS) * 0.14){
	dog /= -betray(bar(-480.38))
}
}
}
}
} else {
	if(( -93 )){

} else {
	Jon /= Arya;
	if(( bar(-mislead(bar(bar(-( ( betray() ) ) - --TABLE[-850.4368][( -5 )],-0.38)),0.85,560.301)) )){

} else {

};
	if(( -ROWS ) - -1){
	betray(Arya);
	ROWS
} else {
	Stark -= foo(Sansa,foo(( COLS ),( ( TABLE[TABLE[( TABLE[x][rule(( ( Jon ) * ( y ) ),200.12)] )][( 46 )]][ROWS * TABLE[COLS][TABLE[-( rule(-62,rule(-COLS) - ROWS,( Hodor * 510.93 )) )][-6]]] ) ) * ( --0.13 / Stark )))
}
};
	0.71
};
	if(COLS){
	ROWS;
	Arya -= -76 + ( --0.3 ) + -73
}
}
def TABLE[-0.05][k] {
	( 0.13 );
	y += 88
}
def mislead(Sansa){

}
def TABLE[dog][i] {
	Stark *= betray()
}
def destroy(){
	Ygritte -= 0.82
}
assert -Stark : "One can not simply parse himself"
def destroy(){

}
assert Sansa : "Fear cuts deeper than swords."
def TABLE[COLS][j] {
	if(x){
	if(COLS + -1 / destroy()){
	Sansa /= mislead(-ROWS,-0.9)
} else {
	if(( COLS )){
	-87;
	( -TABLE[protect(COLS) + -58 / 670.6][-Arya] + ROWS );
	Sansa += mislead(---Sansa * mislead(x,1) - COLS + -TABLE[Jon][-Stark] / 69,--( ( foo(-89 - -foo(-40),mislead(dog)) ) ),Stark)
};
	Sansa += x
}
} else {
	x *= dog
};
	x;
	if(x){

} else {
	if(bar(( Stark ),-dog / Stark)){
	destroy(( -Stark ),1) * ( Jon ) + 26 - ROWS
}
}
}
assert Stark / Ygritte + Hodor : "One can not simply parse himself"
assert ( mislead(TABLE[( TABLE[-580.49][Hodor] )][-0.69]) ) : "What do we say to the Lord of Death?"
assert --( TABLE[( ( COLS ) )][( ROWS )] ) : "Winter is coming"
var Ygritte = COLS
def TABLE[Ygritte][j] {
	if(foo(Ygritte,bar(protect(COLS),-Hodor / bar(( -0.63 ) - -COLS,ROWS) * --16 - COLS),-bar(Hodor / bar(betray(( 1 ),COLS) + protect() * -58,Arya / destroy(Ygritte,-88),0.27)) + 0.31)){
	-30.617
} else {
	Arya += ( -TABLE[-TABLE[( ROWS + ( Ygritte ) )][COLS - protect(( protect(bar(910.855,protect())) ))]][ROWS] + -Jon + TABLE[y][Arya] )
};
	-11
}
var Stark = y
def foo(Ygritte){
	-dog
}
def TABLE[( mislead(ROWS) )][j] {
	foo(COLS) - --COLS
}
def TABLE[660.32][j] {
	TABLE[mislead()][Jon]
}
def TABLE[x][k] {
	if(y){

} else {
	( destroy(-( COLS )) );
	( TABLE[rule() - ( TABLE[TABLE[-( -78 )][52]][79] )][-Sansa] / Arya )
};
	if(foo(( -17 ))){
	( y )
};
	Jon /= COLS
}
assert rule(( ( ROWS ) ),( --( foo(mislead(( Jon )) - ( -0.07 ),( COLS )) ) )) : "Fear cuts deeper than swords."
def mislead(Sansa,Jon){
	Hodor /= y;
	-50
}
def TABLE[( ( ( ( Jon ) - Sansa ) - dog ) )][k] {

}
def mislead(Hodor){

}
def TABLE[Arya / -protect(Sansa + COLS)][i] {
	Ygritte += --bar();
	x /= 530.655
}
def TABLE[TABLE[-betray() - Hodor][bar(Stark,ROWS)]][j] {
	Arya;
	Stark *= ( --( dog ) );
	Sansa *= y - Hodor
}
assert --( Stark ) / -26 : "Fear cuts deeper than swords."
assert COLS : "Nothing burns like the cold."
assert Hodor : "Winter is coming"
def bar(Arya,Hodor){
	---TABLE[-Sansa + TABLE[COLS][-0.72]][-Stark]
}
def TABLE[Ygritte + Stark][k] {
	Arya += ( -35 );
	0.55
}
def TABLE[-mislead(( mislead(Hodor,-ROWS,-( -90 / COLS )) ))][i] {
	--790.098;
	if(bar(dog)){
	if(( -200.9 )){
	ROWS
};
	if(( --destroy(betray(Sansa,-98,-betray()),--520.89) ) - COLS){
	foo(betray(ROWS),-protect());
	Hodor /= bar(-destroy(bar(),-protect(( bar(x) ),( COLS ))))
} else {
	87;
	12;
	if(( dog )){
	if(-Stark){
	if(0.54){
	if(( rule(Stark / foo(),Sansa * x) )){

};
	if(-protect(-67,bar(( mislead(ROWS) ) + protect(Hodor,13) / TABLE[1][---320.5] * mislead(Sansa,( -0.18 )) + -1 + COLS + betray(Jon,rule(-Jon)) / dog / ( -( -1 ) ) - -Jon,1 * betray(x),( Sansa )))){
	if(ROWS){
	if(( -17 )){
	Hodor /= COLS;
	if(ROWS){

} else {
	Sansa *= COLS;
	if(610.078 - Stark){
	if(Sansa){
	if(60.917){
	Arya /= -0.06
} else {
	Ygritte;
	COLS / 39 / 0.71
};
	Ygritte *= Arya
} else {
	if(y){
	TABLE[TABLE[protect(COLS,COLS)][foo(-0.6)]][87] * 1
}
};
	Hodor -= -1 / y
} else {
	Sansa *= COLS - -( ( -56 ) ) + 0.68
};
	Hodor
};
	if(( -mislead() )){

}
}
} else {
	if(-( -x ) - destroy(Sansa,dog)){
	if(-( -60 )){

} else {
	Hodor += ---( Sansa ) - ( ROWS )
};
	if(Stark){
	x -= 910.3;
	( ROWS )
}
};
	Sansa *= Hodor
}
}
}
};
	if(Stark){
	Arya *= ( betray() ) * -TABLE[y][-1];
	Sansa *= ( 0.07 );
	dog /= -1
};
	Jon += COLS
} else {
	-mislead(TABLE[rule(-TABLE[( ( -( foo(-0.34) ) ) * -0.99 )][y],TABLE[( ROWS )][rule(ROWS,-4)])][x],protect(( ( protect(foo(( betray(( -0.88 )) ),-( protect(destroy() - protect(rule(0.63,TABLE[-10][-( -( Hodor ) ) * -ROWS]),Jon),( COLS )) ),-1 - ( COLS / Jon )),( dog )) ) )))
}
}
} else {
	COLS;
	if(( ROWS / Hodor )){
	x -= foo(ROWS,--( -dog ),6 + Jon - mislead(-2,x,--1));
	if(-( -76 ) - bar(Sansa)){
	( TABLE[-( ( --1 ) )][ROWS] )
} else {

};
	if(betray()){
	-ROWS;
	-ROWS - COLS
}
};
	if(Arya){
	Hodor += --89;
	if(-dog){
	Sansa -= -( ( ( x ) ) );
	Sansa *= ( ROWS );
	if(-77){
	-Jon - mislead(( --ROWS ),( Jon ),( -21 ));
	x += Jon;
	41
}
}
}
}
}
assert 0.02 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( ( 85 ) )][k] {
	0.55;
	Sansa
}
def foo(Arya){
	Ygritte /= destroy(protect(-950.109 - Ygritte),betray(ROWS)) - y;
	if(70 * -Sansa + TABLE[destroy()][-450.8 + 0 - 6] / ROWS){

} else {
	48 - -destroy()
}
}
var Hodor = rule(-0.1,1,TABLE[-betray(0.22)][( COLS - ( x * -47 / Ygritte ) )]) / 17
assert 1 : "Nothing burns like the cold."
assert -dog : "Fear cuts deeper than swords."
var Hodor = --0.54
def TABLE[( -1 ) + ( ( ROWS ) )][i] {
	x
}
def destroy(Ygritte,Stark){

}
assert --protect() * TABLE[0.8][( bar() )] : "Winter is coming"
def TABLE[Ygritte][j] {
	dog += Ygritte;
	if(TABLE[protect(foo(protect(0.15,--94),( -300.407 ),-( ( bar(Arya) * -1 ) )),( Jon ))][( 0.04 ) / -0.76]){

} else {
	Sansa *= COLS
};
	( COLS )
}
def TABLE[destroy(-0.87,( destroy(( y + mislead(Hodor) / ( -COLS ) ),COLS) ))][i] {

}
def TABLE[-Hodor][j] {

}
def TABLE[-960.95][i] {
	if(7 / -Ygritte){
	Arya *= -0.17 / y;
	COLS
};
	ROWS
}
def TABLE[--0.29][j] {
	Sansa *= ( Hodor );
	Arya - -mislead(-y) + 0
}
def foo(Stark,Jon){
	Jon -= ( ( ROWS ) )
}
var Sansa = -63
assert dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Jon][i] {
	-57
}
var x = ROWS
assert betray(-0.62,COLS,-rule(( COLS ))) : "What do we say to the Lord of Death?"
def protect(y,Ygritte,x){
	Arya += --bar(COLS) / rule(( -( ( -( ROWS ) ) ) ),-1) * Stark
}
def bar(Jon,Ygritte,dog){
	if(1 - -1 / ( betray() ) / -( ( betray() * rule(1) ) * TABLE[Jon][mislead(betray(protect(dog,COLS - -protect(ROWS,--protect(y,-Ygritte)) + -0.75),-0.09 * protect(-foo(rule(67,TABLE[mislead()][0.9 + Jon],Arya),destroy(( ROWS ) - ( ( -betray(TABLE[bar(rule() + -( 800.6735 ),Sansa) / Sansa][-0.25 / 90],-x + betray(foo(-COLS * ( ( destroy(betray(340.6659,( x ),destroy()),-1 * ROWS * --( y * --0.85 * ( COLS ) ) - 1 * x) ) )))) / COLS ) ),TABLE[ROWS][dog]),dog),Sansa,22),88 / --TABLE[-420.79][( -40 )] * --( 85 ) / destroy() / ( -y )),Jon,( ( rule(-Sansa,-Hodor) ) ))] )){
	if(-ROWS * ( Ygritte ) + ( ( ( ( -COLS ) ) ) + ( betray(( rule(-0.37,rule(bar()),Arya) )) / -94 ) ) / Sansa){
	if(49){
	if(COLS){
	Sansa *= 730.698
};
	Ygritte *= foo(y,y);
	-( TABLE[( ( -0.4 ) )][--ROWS] )
} else {
	if(destroy(-protect(ROWS,( -37 )) / -14 + Sansa)){
	99;
	Arya * 50
};
	if(-mislead(rule(TABLE[( 400.57 )][( COLS )],-69),COLS,( Jon ))){
	Arya *= ( -1 + ROWS );
	if(( Hodor )){
	foo(COLS);
	Arya -= TABLE[-( 0.97 )][rule()]
} else {
	( ( TABLE[( -bar() )][( -230.903 ) + dog] ) )
}
}
};
	foo(bar(dog,ROWS),( ( ( COLS ) ) ),( ( ROWS ) ) + TABLE[1][Sansa] * ( bar(-Hodor,-92 * Stark) ))
} else {
	if(( ( TABLE[20][Hodor] ) + y * -x )){

} else {
	-COLS
};
	COLS
}
}
}
def TABLE[110.457][i] {
	if(Jon){
	if(rule(protect(( --( dog ) - x - mislead() * 25 - ( TABLE[mislead(protect(--x)) / ROWS][COLS] ) )),destroy(-0.26,Stark))){
	x + Stark;
	( ROWS )
} else {
	-protect(-( Hodor )) * -foo(( COLS ))
};
	Jon *= ROWS - mislead(( ROWS ),betray(1),foo(-COLS,-73))
} else {

}
}
def TABLE[protect(-1) + destroy()][i] {
	x *= -rule(protect(-0.88,( COLS / ( -y - y / ( Jon ) ) / protect(protect(COLS,( destroy() / bar() ),-80.333)) )),rule(rule(ROWS),bar(-Ygritte,Hodor)))
}
assert -1 : "Winter is coming"
var Ygritte = ( ---( dog ) )
assert -85 : "Nothing burns like the cold."
var y = Hodor
assert x : "Fear cuts deeper than swords."
def TABLE[-( -y / TABLE[( mislead(-0.82) / TABLE[( TABLE[dog - 0.22 - rule(destroy(Sansa,COLS,COLS + TABLE[( dog * Jon )][560.84]),0.06)][0.27 / destroy(( ( TABLE[destroy(foo(-40,TABLE[( ( ( ( -25 ) ) ) )][( COLS )]),rule(-0.76,( destroy(-0.21,COLS + -( -270.321 )) / --COLS ),betray(Hodor,rule(47),( ( COLS ) ) - 17)),( dog ) * ROWS)][( ( ( ( bar(protect(ROWS)) ) ) ) )] ) ),--( ( TABLE[-Ygritte][Arya] ) )) + -1 / -Arya * ( -protect(( Hodor ) / ---0.13 - y / -Stark) )] / protect(-Sansa,TABLE[( protect(rule()) )][rule(Ygritte)]) ) / dog * -0.35 + Stark][-79] * 1 )][0.12] / bar(-bar(83,---0.45) / ( Ygritte ),-0.52) + -( y ) - 76 ) + --x + ( foo(Stark) )][k] {

}
var Hodor = Ygritte
def TABLE[Arya][j] {
	if(( -( 650.2 ) * Arya * ( ( COLS ) ) )){
	foo(-destroy(Stark) + -0.42 * foo(COLS,1));
	if(0.21){
	TABLE[( -790.8 )][----0.59];
	Ygritte += -44
} else {
	Hodor += -Sansa * Stark;
	if(mislead()){
	if(x){

};
	Jon;
	if(bar(TABLE[-1][( --0.35 ) + Jon],( COLS ))){
	if(Sansa){

};
	if(Jon){
	Stark -= ( -92 )
}
} else {
	( protect() ) + COLS * foo(COLS);
	if(Stark){
	x *= ROWS;
	if(mislead(( Jon * y ),x,( -( -0.73 ) ))){
	if(( ( -( -COLS + ROWS ) + ( Sansa ) ) ) * -( Jon ) / Sansa - destroy(Hodor) / ( TABLE[ROWS][TABLE[( Hodor / -29 / -ROWS )][rule(-foo(( -59 )),( -780.372 - -( -COLS ) / 0.8 ))]] ) * -61){

};
	if(( ( COLS - ROWS ) )){
	x /= -ROWS;
	if(destroy(x,-0.6,( -1 ))){
	if(betray(x,COLS)){
	COLS;
	protect(--foo(x,dog,( ( 48 ) )) + bar(( Sansa - COLS ) * TABLE[Hodor][mislead(mislead())],( 700.79 ),TABLE[rule(-Stark - -( dog )) + 1 + ( foo() )][foo(TABLE[-COLS][Ygritte],y) * foo(COLS / -14,640.41,-0.17)]) * ROWS + destroy(y,rule(( ---( dog * rule(foo(foo(Arya),( COLS ),COLS)) ) + -0.7 ),foo(dog,--rule(-0.23)),---ROWS)),( ROWS ))
};
	if(( ( --25 ) )){
	-370.1616 / Sansa;
	Stark
} else {
	Hodor -= -Hodor;
	if(Stark){
	if(-ROWS - 89){
	COLS;
	if(-1){
	( -( ROWS ) );
	dog /= COLS;
	TABLE[ROWS][ROWS]
} else {
	-Arya;
	Arya /= protect(( -0.78 ))
}
};
	27 - Ygritte
}
}
}
}
} else {
	if(99){
	betray(rule(-0.53));
	if(( 0.54 )){
	if(910.84){
	( -0.23 + COLS );
	Stark;
	1
} else {
	if(( ( --protect(TABLE[0.43][mislead(8)] - foo(mislead(),bar(dog)),foo(---700.6 - ( ( ( ( 62 ) ) ) ),-rule(90))) ) )){
	4;
	Stark /= ROWS;
	rule(( x ))
};
	( Stark ) / Ygritte;
	Sansa /= TABLE[0.84 / -250.3115 + TABLE[Hodor][betray(( Jon ))]][Hodor]
}
}
} else {
	dog *= Stark
}
};
	if(( Jon ) / Sansa + TABLE[TABLE[protect(Sansa,Stark * -1,destroy(1,( ( 1 ) )))][dog]][Hodor]){
	-ROWS;
	Ygritte;
	if(64 * -( ( Jon ) ) + TABLE[destroy()][--dog]){
	38
} else {
	if(mislead(protect())){
	Jon *= ROWS
}
}
}
} else {
	Ygritte
}
}
}
}
}
}
var Stark = betray(COLS + -Ygritte,120.62)
def TABLE[COLS][j] {
	if(foo(-18 / Jon * -( ( -foo(( 41 + ( -0.49 + Hodor ) )) / -TABLE[( ( -Sansa ) )][Arya] * betray(---Ygritte,Jon) ) ),Stark,dog)){
	if(( ( -Jon - -1 ) ) / y){
	if(COLS){

} else {
	-mislead(0.56) / Ygritte
};
	Sansa *= Stark;
	y -= rule(( ( -( ( ROWS ) ) ) ),Arya - rule(-1) / destroy(( bar(---1,Stark) ),dog,( -53 )))
}
}
}
assert -1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(Hodor,Jon){
	if(( -98 )){
	Jon += -0.66
};
	( betray(Jon) - COLS )
}
def bar(dog,Arya){
	y += -( mislead(mislead(( TABLE[40][-Stark] ),rule(),rule(Ygritte,1))) * ( 0.67 ) );
	Ygritte + COLS;
	if(bar(TABLE[28][Jon]) - TABLE[COLS + -( ( -TABLE[-y][mislead(0.27,-0.46)] ) )][-( Jon )] / destroy(( ROWS ))){
	if(--( --foo(COLS,-640.67 * TABLE[-x][ROWS] * -0.41 - -0.63) ) / Stark){
	if(ROWS){
	-82
};
	if(36){
	if(--25 / ( ( destroy(y * Ygritte,ROWS) ) )){

};
	-betray()
} else {
	-foo(Ygritte,Sansa)
}
} else {
	if(( Hodor )){
	if(Sansa){
	if(-( Arya ) - -( protect(betray(---COLS)) )){
	Jon += protect(TABLE[( -( -1 ) + protect(-0.98,-60,COLS) - TABLE[-9][( TABLE[( COLS )][TABLE[-( TABLE[Sansa][Hodor] )][-0.69 + ( mislead(TABLE[COLS][protect(ROWS,TABLE[( 85 )][( Jon )]) + y * betray(-630.804,ROWS + betray(-( dog ),x))]) )]] )] )][Hodor],destroy(1),dog)
} else {
	-32;
	Stark -= x;
	Hodor -= betray()
};
	Stark += protect(ROWS,( TABLE[protect()][( x )] ));
	Hodor += 1
};
	if(Arya){
	Arya /= mislead(y,230.44)
}
};
	if(betray(---TABLE[-1][( ( foo(Jon) ) )],34)){
	Sansa -= ( Sansa );
	if(foo(( protect(-COLS,( ( Jon ) )) ))){
	if(( TABLE[ROWS][Hodor] )){
	dog *= destroy(ROWS);
	rule(mislead(rule()),Jon,Arya);
	Jon += -0.81
} else {
	COLS;
	( ( -protect() ) - COLS );
	dog -= ROWS
};
	--Sansa
} else {

}
} else {
	COLS
}
};
	if(mislead(Sansa)){

}
}
}
def bar(Jon,Hodor){

}
def protect(y){
	Arya *= -destroy(-0.93) / COLS;
	if(-foo()){
	Sansa -= Arya;
	Sansa /= bar(COLS,( -TABLE[4][-990.8693] ))
}
}
def rule(Arya){
	if(-TABLE[COLS][TABLE[( Hodor )][( ( x ) - COLS ) - COLS / -Jon]]){
	Ygritte;
	ROWS;
	Stark *= -( TABLE[--1][Ygritte] - ( Jon ) + betray(foo(( y ),-Jon)) ) / ( ( destroy(protect(ROWS,--destroy(( -0.72 ) - -( TABLE[Stark][---COLS] ),99)),betray(ROWS)) ) )
} else {
	( -bar() )
}
}
assert -betray(destroy(ROWS) + mislead(-( ROWS ))) : "What do we say to the Lord of Death?"
assert Jon : "Fear cuts deeper than swords."
var Ygritte = ( ---TABLE[Sansa - -0.17][-56] )
assert -y : "Nothing burns like the cold."
def mislead(Ygritte,y){
	-rule(mislead(0.99,-( 0.91 )));
	Sansa *= dog
}
var y = ( 1 )
def betray(Ygritte,Sansa){
	Hodor
}
assert betray(--0.37) : "One can not simply parse himself"
def TABLE[( ROWS / Hodor ) / ( -1 )][i] {
	Hodor /= --0.1;
	Jon * TABLE[5][--( Ygritte ) - -betray(-13,-TABLE[destroy(ROWS,-0.2,TABLE[ROWS][-( -( -780.768 ) + -Hodor + Sansa )]) * COLS / Hodor][protect(mislead(-TABLE[-destroy(ROWS,y)][( foo(-Stark) ) + ( COLS )],( 1 ),( destroy(foo(destroy(betray(-50.55,-COLS,1),mislead(destroy(-( ( -COLS ) ) - TABLE[0.39][( -protect(foo(64),--ROWS * TABLE[betray(-dog + ROWS,ROWS,ROWS) - TABLE[y * -66][TABLE[( ROWS )][-97]]][-0.35] - TABLE[COLS][-120.09 - ROWS],x) )],0.95,betray()),ROWS)),( -13 ),Ygritte)) )),COLS,-1)],ROWS) / betray(( -foo(ROWS,y,--0.02) / Stark ) - COLS,-( Sansa )) / ROWS / ( --65 ) + 0.11]
}
assert Sansa : "What do we say to the Lord of Death?"
assert ( -( x ) ) : "One can not simply parse himself"
def mislead(){
	dog
}
def bar(){
	-16
}
def destroy(x){
	( bar(( ( ROWS ) ),-COLS) );
	Jon /= ( ( -61 ) );
	if(( ( -( mislead(-ROWS) ) ) )){
	-54
}
}
var Sansa = COLS
def foo(Arya){

}
assert --( 530.36 ) / ( -( betray() ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = 61
def TABLE[( ( -destroy() ) ) * ( Jon ) - protect(ROWS)][k] {
	Arya /= Jon;
	if(Hodor){
	y /= Stark
} else {

};
	Jon /= 560.57
}
var Sansa = Jon
def TABLE[---800.3328][j] {
	( ROWS * TABLE[-( Hodor )][bar(( 53 ) - foo(rule(Ygritte),-Stark) * Jon,( Arya ),COLS) * protect(( ( Ygritte ) ),destroy(),COLS)] ) * foo(--0.08 * -53) - mislead(Sansa,-ROWS)
}
def TABLE[TABLE[Ygritte][-Sansa]][i] {
	protect(( COLS / y + COLS ));
	if(ROWS){
	-0.06
} else {
	TABLE[betray(-0.51,x / ( -Jon ))][COLS] - destroy()
}
}
def TABLE[betray(( Ygritte ) + ( -210.6 ),0.66,920.4098)][k] {
	-TABLE[ROWS - ( ( ( 0.71 / dog ) - 1 ) )][( Hodor )]
}
var Sansa = protect(bar(Arya),-Sansa)
var Jon = ( TABLE[mislead(dog + -ROWS,-( -rule() ) * TABLE[( betray(foo(--89 + bar(( betray(mislead(ROWS,TABLE[dog][-Stark],--Sansa) - 93) ),--protect(-( ---x * y / -mislead(-bar(bar(TABLE[ROWS][( rule(Sansa) ) * y]),( protect(-0.33) ),betray(0.9 * TABLE[TABLE[y][TABLE[dog][0.73]]][-betray(TABLE[0.37][-( betray(betray(dog,rule(destroy())),rule(( COLS ))) ) - --62])])),-990.5) ),--COLS) - ( -TABLE[( ROWS - rule(910.9234,--COLS) ) + bar(Sansa,TABLE[foo()][y])][bar(Arya,-TABLE[-TABLE[-dog / ( TABLE[-TABLE[betray(-0.46,TABLE[-TABLE[--( -x )][Sansa] - -ROWS][bar(bar(betray(( rule(Arya,( mislead(betray(--( ( ( y ) ) + COLS + Sansa ),Sansa),20.27) ),ROWS) )),Hodor),Hodor)])][rule()]][( dog )] )][ROWS]][( ROWS ) - Jon])] )) - ( COLS + rule(mislead(-ROWS,COLS,( -( ( --1 ) / foo(-1,protect()) - 16 ) * ( x ) ))) ) + destroy()),COLS) )][--Arya] + 0.01)][( ( destroy(-80,( ( Hodor ) / x )) ) )] ) - -0.15
def TABLE[Hodor][k] {
	mislead(-( Sansa - -0.59 ))
}
def rule(y){

}
assert ( --170.59 ) : "Fear cuts deeper than swords."
assert y : "What do we say to the Lord of Death?"
def TABLE[( bar(( --COLS ),Stark) )][i] {
	Sansa /= -460.4057;
	---91;
	-0.56
}
assert betray(TABLE[rule(-bar(Sansa),TABLE[x][-( ( ---TABLE[79][TABLE[( 0.07 - -betray(mislead(( mislead() ),destroy(( Stark ))) / Stark - COLS,TABLE[ROWS][dog] + ( -ROWS ) - ( protect(mislead(rule(ROWS,----( Jon ) * COLS,-9),x - -( ( COLS ) ) - 26,y)) )) * 0 )][Jon]] - -42 ) )])][( 0.22 )],TABLE[bar(-( TABLE[TABLE[( ( -mislead(( betray(foo(TABLE[-destroy(ROWS / -43 - betray(( ROWS ),0.17),COLS,dog)][rule(28)],ROWS,rule(-( -0.55 ),-x)),( -10.148 )) )) ) - -87 )][TABLE[-foo(TABLE[mislead(( --TABLE[destroy(dog)][dog + ( foo(-COLS,dog) )] ),Jon * -y + 94 - -90 - -37 + ( Sansa ),-0.28)][1],Hodor + -( COLS )) / ( 0.76 + ( Sansa * 1 ) ) + bar(( 91 ),0.84)][dog] * ( -1 )]][-bar()] ),x) - bar(-32)][COLS]) : "Fear cuts deeper than swords."
def TABLE[( Sansa ) - Ygritte][k] {
	Hodor -= --( Stark ) + destroy(-0.31 * -( --0.8 ),-80.6,38);
	Arya /= ( ROWS )
}
var Jon = protect(x,-protect(),Sansa)
def TABLE[( ROWS - ROWS + Arya + -68 )][k] {
	Hodor += Ygritte;
	ROWS
}
def TABLE[protect(-0.86 / -( 6 ),COLS,-( Ygritte ))][j] {
	if(rule(Sansa)){
	if(-( 66 )){
	if(ROWS + ROWS * -21 / x){
	0.65;
	if(-1){
	if(-dog){
	-1;
	Jon /= foo(TABLE[-foo(Ygritte)][ROWS])
} else {
	if(COLS){

} else {
	-300.91;
	( COLS )
}
}
} else {
	Arya -= protect(-( 71 ))
};
	490.01
};
	if(ROWS){
	dog += betray(( -protect(-Sansa) ));
	if(bar(( Stark ),protect())){
	Ygritte += -Arya;
	Ygritte;
	if(--dog - protect(-0.02,rule())){

}
} else {

}
}
};
	x /= Hodor * Ygritte
};
	( dog ) - --destroy(protect(( TABLE[( ( 1 ) )][-1] * y )),x) / ( Stark )
}
def TABLE[protect(bar(0.19,-protect(ROWS,dog)),Sansa) * COLS / 24 + ROWS][j] {
	if(Sansa){
	COLS
}
}
def mislead(){

}
var dog = Ygritte
assert Stark + TABLE[( ( --Jon / COLS + betray(-11,betray(Ygritte,y) * -55 / Stark,Hodor / 49) ) )][( ( ( bar(-( ( ( Sansa ) - 0.38 ) ),betray(0.13,Sansa),( -( -( TABLE[-1][destroy(COLS,Stark)] ) ) ) * dog) ) ) )] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = -69
def TABLE[( --0.8 ) / 790.545][j] {
	COLS
}
def TABLE[( ( bar(( -rule(Jon) ),48) ) )][i] {

}
var dog = ( ( -6 ) )
def betray(Jon,Hodor){
	-0.38;
	Jon
}
def destroy(){

}
def bar(y,Jon,y){

}
assert 510.809 : "Nothing burns like the cold."
def TABLE[mislead(--foo(0.87 - ( rule(76,-Jon) ),ROWS))][i] {

}
assert 540.629 : "Nothing burns like the cold."
def foo(Jon){
	Stark *= -TABLE[-( 1 ) * destroy(( ( COLS * COLS ) )) - bar(TABLE[-0.77][mislead(COLS)],( Ygritte ) + 0.76)][( 950.47 )]
}
var Stark = -Hodor
def betray(Sansa){
	Stark *= rule(TABLE[Jon][TABLE[-0.65][COLS]],ROWS - -111)
}
var Ygritte = --( COLS )
var Arya = ( protect(foo(56,ROWS,-74)) / Stark )
def destroy(y,Arya){
	Jon /= bar(Jon,-Jon);
	( y )
}
def TABLE[TABLE[--rule(-0.03) + COLS][COLS]][j] {
	dog /= 62
}
def betray(Stark,Arya){
	y += Arya;
	if(64){

} else {
	if(TABLE[--830.7499][COLS]){
	if(Ygritte){
	Sansa
} else {
	ROWS
}
}
}
}
assert bar(TABLE[x * -y / -( -1 / COLS )][( ROWS )],( Jon )) : "One can not simply parse himself"
assert ( foo(ROWS + ( 40 * dog ),---Jon) ) : "Nothing burns like the cold."
def destroy(y,x){
	Hodor += ROWS;
	if(ROWS){
	Hodor += -90.6
} else {
	foo(-( TABLE[COLS + 32][mislead(bar(( -24 ),--1,75),( -0.12 ))] * TABLE[rule(Arya)][27] ),-0.24) + -750.1
};
	( mislead() )
}
def TABLE[y][k] {
	-13 + Hodor * protect(ROWS,COLS);
	if(ROWS / -rule(ROWS)){

}
}
var Ygritte = ( betray(betray(),TABLE[70][destroy(( 92 + x ),TABLE[COLS][-84]) + -1 - foo(-COLS * ---protect(TABLE[dog][( 46 / -COLS + betray(-rule(( ( 0.59 ) ) / COLS,-rule(( -0.94 ))),ROWS) * 0.48 )],ROWS),Ygritte)]) )
var y = COLS
assert Jon : "Nothing burns like the cold."
assert ( Arya ) : "Fear cuts deeper than swords."
def protect(Ygritte){
	if(Sansa){
	if(-0.77){
	COLS;
	( ---1 / y )
} else {
	if(Arya){
	if(--ROWS){
	dog /= foo(Ygritte)
} else {
	if(rule(TABLE[1][y],ROWS)){
	-0.61;
	Jon -= -Stark
} else {
	-ROWS;
	ROWS;
	Stark / COLS
};
	TABLE[Hodor - ( ROWS )][-Arya]
};
	Ygritte *= ROWS;
	if(COLS){
	Jon += destroy(destroy(-28,betray()));
	Stark += ( ( -( 1 ) - -0.37 - ( betray(0.67 + 960.7) ) ) )
}
};
	( 0.38 );
	Ygritte -= ( ROWS )
}
};
	x += -760.285
}
assert betray(-38) : "Winter is coming"
var Stark = 250.7249 / -0.5 / 90.402
def destroy(y,y,Stark){
	if(Jon){
	dog += ( Stark );
	Sansa += TABLE[-340.44][betray(---1,dog)];
	y /= Jon
} else {
	ROWS
};
	if(COLS){

}
}
def foo(dog,Ygritte){
	x += rule(foo(( bar(Ygritte,( 12 ),ROWS) - mislead() ),COLS,TABLE[--mislead(-1)][( ROWS ) - y]),bar(dog,foo(-76,betray(69,Ygritte) / mislead() / -Hodor))) / TABLE[( Ygritte )][1 - -37];
	if(Arya){
	if(-rule(-x,Stark)){
	if(TABLE[-x][--( ( -TABLE[protect(TABLE[TABLE[--x - ROWS][destroy()]][mislead(-71,ROWS) / ROWS])][foo(Jon,78,-1)] ) / 0.18 / COLS )]){

} else {
	( ( Sansa ) );
	if(Arya){
	Ygritte /= --COLS;
	Ygritte -= -96
} else {
	Stark -= -1;
	if(( ( Sansa ) )){
	x *= betray(TABLE[Ygritte][-Hodor - TABLE[( ( ( -Hodor ) ) )][TABLE[-bar()][-foo(( --Stark / -ROWS - Jon - x / 0.01 ) + 26,490.056,Ygritte * ( COLS ))]] - 54 * --17 - foo()]);
	Stark -= ( ( 15 ) )
} else {
	ROWS;
	if(Ygritte){
	x -= ( ROWS );
	Arya / TABLE[-1][( ( ( 86 + bar(y,( -68 ),-0.74 + betray(( -1 * y * -rule(betray(( ROWS ),-y),TABLE[Arya + foo(--TABLE[0.98][destroy(--COLS * ( 1 ) / ( 0 ),0.44)],( bar(-72) ),--0.54)][-foo(destroy(( y * ROWS - COLS )) * 710.126,0.85) + rule(-TABLE[-x][Sansa + ( dog )] + Arya,-Stark)]) ),rule(-0.59,destroy(Sansa,-13,( TABLE[bar(Stark,-Jon,COLS)][--Arya - -y] ))))) ) ) )]
}
};
	y += COLS
}
}
} else {
	if(TABLE[( TABLE[COLS * protect()][TABLE[-260.0041][-( rule() )]] )][-70]){
	destroy(540.8 + TABLE[( -( destroy() ) )][rule(-COLS)],( dog * -( Ygritte ) / protect(x,--( ROWS )) - 1 - ( -720.29 ) ),Hodor) / betray(-( -980.3 ),-0.99 / ROWS)
}
}
};
	if(Ygritte - Stark){
	x /= x;
	if(530.475){
	-Ygritte
} else {
	foo(ROWS,( dog ));
	mislead(( Hodor ),Ygritte,Hodor);
	foo(( ( ROWS ) ) - -810.982,-bar(Sansa,-ROWS) / Stark / ----ROWS + 480.816 - destroy(-TABLE[( -y )][foo(-740.07,Arya,-( TABLE[ROWS][( 13 )] ))] * ( ( ( -0.32 + ( protect(0.49) ) ) * ( --1 ) / ( -30 ) + y - -( ( ( bar(( ( y ) )) + -43 ) ) - x ) - ( destroy(( foo(Ygritte,TABLE[ROWS][( Ygritte )],ROWS) )) ) ) ),Arya,( --COLS )),bar(ROWS,ROWS / dog)) * ROWS
};
	( TABLE[300.96 - ( -ROWS ) * TABLE[( destroy(-( Hodor ) / -betray() + 0.54,TABLE[-82][1]) )][TABLE[410.6115 + Ygritte][TABLE[Stark / -481 / -28][-260.0415 + -Sansa]]]][-bar(( COLS * -ROWS ))] )
}
}
var Arya = ( Arya ) / -Sansa - -0.01
assert ( ( Sansa ) ) : "Winter is coming"
def foo(Hodor){
	x /= ( -0.87 )
}
assert ( x ) : "Nothing burns like the cold."
var dog = -Ygritte
def TABLE[y][j] {
	if(foo(ROWS)){
	mislead(0.21 + ( -ROWS ) / -60,COLS)
} else {
	if(4){
	y += -ROWS;
	COLS
}
};
	if(Jon){
	if(-88){
	if(----14){
	protect(--80 + betray(TABLE[( ( Stark ) + Stark )][protect(mislead(( -TABLE[( protect() )][y] ),betray(TABLE[-( ( dog ) ) + x / ( -40 / --1 * 1 * COLS )][TABLE[rule(0.82)][-( -60 )] / TABLE[--COLS][1]]),-( ROWS )),x,( destroy(-Sansa,-TABLE[Ygritte][ROWS * Stark] * mislead(ROWS)) * ( ( TABLE[-TABLE[0.73][-dog * ROWS]][--51 + -destroy(ROWS)] ) ) ))] * ( COLS ),y),( foo(destroy(x,protect()) - --38) ),( ROWS )) * y;
	if(mislead()){
	Stark;
	Arya
} else {
	if(destroy(-0.69,bar(( ( ROWS ) ),-( ROWS ) + Arya,-protect(--1) / bar() / -22 + y),17) / Arya){
	rule(ROWS);
	Arya += TABLE[---Stark][-mislead(-19,mislead())]
} else {
	Stark -= ( Hodor )
}
};
	if(-34){

}
};
	x *= mislead(rule(--( TABLE[( destroy(41) )][Hodor + -COLS + rule(TABLE[rule(( Hodor ),Ygritte,Hodor)][24],mislead(COLS)) - x + 1 * 0.03] ) - -TABLE[x][Arya * ( -mislead(( destroy(( COLS )) ),TABLE[mislead(( ( foo(-Hodor) ) ),COLS)][--1]) )] + -( ( --0.95 * 1 ) ) * bar(( TABLE[-Arya][0.67] )) - 750.3271,TABLE[( ( ( -destroy(COLS,COLS) ) - COLS ) ) - foo(COLS * Stark)][Jon - TABLE[-TABLE[-760.58][( dog )]][-0.57]],foo(x,-( x ))));
	if(( 600.71 )){
	if(x + x){
	if(ROWS){

};
	dog -= -51
}
} else {

}
};
	destroy(( -dog ) * ROWS * ---0.17,Sansa)
} else {
	if(Stark){
	-0.31
}
}
}
assert ROWS : "Nothing burns like the cold."
var Ygritte = 84
assert -0.09 / destroy() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-1][k] {
	dog *= 1 / mislead(y + COLS / betray(mislead(Stark,Ygritte / rule()),-( Stark / COLS )) * ---( ( COLS ) ) - Jon - ( mislead() ),-0.39);
	530.213 + Sansa;
	COLS
}
def bar(dog){
	if(x){
	if(90.015){
	Hodor -= COLS;
	Hodor -= ----rule() + Arya / ( dog ) * ( destroy(( -Arya + -COLS / dog * 1 )) ) + Arya;
	x *= Sansa
} else {
	if(( x * -TABLE[COLS][Sansa] )){
	ROWS;
	-Stark;
	-42
}
};
	if(foo(foo(ROWS))){
	-Sansa;
	1
}
};
	Sansa;
	Arya += destroy(-Sansa - protect(bar(destroy(( ( betray(----betray(Jon),dog - ( bar(x) )) ) ),--betray(( x / ( rule(y,bar(( ( Jon ) ),-Sansa)) ) )) + -protect(( Ygritte ))),-Sansa,TABLE[COLS][destroy(( ----x / Hodor ),destroy(-0.11))]),-bar(490.24)),310.8)
}
assert 5 : "Fear cuts deeper than swords."
def betray(y){
	if(-betray(0.97 + x)){
	Stark *= ( -( ( 0.65 ) ) )
}
}
def TABLE[-1][k] {
	if(1 - ( -TABLE[TABLE[-0.83][x]][mislead()] )){
	dog /= -0.38 / ( 210.692 ) * -( ( ( destroy(( protect() ),ROWS,-ROWS - 47) * -0.46 ) ) );
	if(COLS){

}
}
}
var Ygritte = rule(destroy(( ( -5 ) ),1),--COLS / ( -16 ) / COLS * 56 - protect(x,y,rule(--TABLE[630.717][COLS] / rule(bar(-0.09),-rule(foo(),Ygritte - ( ROWS ) * Sansa)) / TABLE[1][( 0.04 )],TABLE[60.69 - Hodor][( ROWS )])),--19 / ( ROWS ))
var Stark = rule(( -1 )) / -840.05
assert -Stark : "Winter is coming"
def TABLE[Sansa][k] {
	x *= Ygritte;
	if(ROWS){
	Sansa -= -90
}
}
def betray(){
	if(40){
	ROWS;
	Jon
} else {
	Stark *= Stark
}
}
assert ROWS : "What do we say to the Lord of Death?"
def mislead(Jon,y,dog){
	Stark -= rule(ROWS) - protect(( protect(--1,Ygritte,Jon) + -0.86 ) - ( dog ));
	if(TABLE[--protect(bar(protect(-0.76)) * -19,destroy(ROWS,( ( protect(( destroy(protect(-COLS),-66,19) ),rule(( -TABLE[COLS][Jon] ),destroy())) ) ),ROWS / 1) - -Ygritte * COLS / TABLE[-38][-rule()]) - Sansa][( -41 * COLS )]){
	if(TABLE[foo(protect(Arya,COLS,rule(-720.63,TABLE[( TABLE[ROWS][destroy(-dog) * 390.696 - foo(( -destroy() - COLS ),destroy()) + bar(--0.95,---Stark,COLS) * -0.25] - 760.267 + dog - TABLE[-ROWS][Sansa] )][TABLE[foo(y - TABLE[0.54 / bar(( 0.89 * Arya ) + ( foo(betray(Hodor),--74) ) + 87,rule(bar(TABLE[TABLE[ROWS][---600.2 - Jon * -Sansa]][COLS])))][TABLE[x][( destroy(0.42 * ( TABLE[TABLE[Arya][ROWS * 76]][-0.78] ),COLS) )]] + ROWS,dog,-0.12)][Jon]])) - -170.87,Stark) - COLS][Hodor]){
	dog;
	mislead(Arya,( ( COLS ) ))
} else {
	Stark *= ---ROWS - Jon;
	if(protect(Hodor)){
	if(betray(dog,COLS)){
	dog -= --( -( ( -0.54 ) ) ) * destroy(-( Ygritte ),--( ( -0.39 ) ) - ( ( 49 ) ));
	if(---320.9){
	-0.87;
	0.1
};
	( dog )
} else {
	if(protect(-1)){
	( -ROWS );
	y /= COLS / -( -850.504 ) - ( ( Arya ) ) - ( y ) - ( y ) * Arya;
	if(( TABLE[( foo(1,ROWS * ---1) )][protect(580.816)] ) / ROWS){
	Arya
}
} else {
	if(mislead(( ( ( TABLE[mislead()][Arya] + 0.47 ) ) ))){
	if(-0.35){
	Jon;
	Hodor *= ( -35 )
} else {
	y /= -920.667;
	COLS
}
} else {
	( 440.1 * ( --51 ) );
	Ygritte -= ( TABLE[-70.491 - 50][( ( ROWS ) )] );
	Arya /= 200.06
};
	if(-COLS - 65){
	if(TABLE[ROWS][( -94 )]){

} else {

};
	mislead(TABLE[rule(protect(-x * ( -ROWS ) - -destroy(Ygritte,Arya,COLS))) + destroy()][mislead(( ( -y ) )) * -0.37 - -53 - foo(ROWS)])
} else {
	Ygritte;
	Stark -= ROWS
}
}
}
}
}
} else {
	if(( 34 )){
	Jon *= ( ( destroy() / ( dog + x ) ) - ( --0.93 ) )
};
	-0.76
};
	if(COLS){
	TABLE[y][Jon]
} else {
	if(-COLS){

} else {
	if(( -1 ) / TABLE[-60.8327][COLS]){
	Jon += -ROWS / ( TABLE[foo(-( Sansa ))][Sansa] ) * bar(ROWS) * -Sansa;
	if(foo()){
	Ygritte -= ROWS
} else {
	-800.0692;
	Ygritte /= -9
};
	-0.82 + Hodor
}
};
	if(COLS){

};
	if(-1){
	Arya -= bar(TABLE[y + rule(ROWS)][-0.97] * Hodor,( mislead() ));
	destroy(betray(destroy()),mislead(),ROWS);
	if(-rule()){
	Arya;
	if(ROWS / -85){
	if(Jon){
	Jon += -( ROWS ) * -COLS;
	Stark += Arya
}
} else {
	if(( -protect() ) + TABLE[( ROWS )][Sansa]){
	( ( dog ) );
	x *= mislead(foo(),( betray(-TABLE[( ( foo(ROWS,y,TABLE[foo()][Hodor]) ) ) + TABLE[-Jon][-790.54]][mislead(-Hodor * foo(-( -( ( Stark ) ) ) - bar(-ROWS,COLS))) * ROWS]) ),ROWS + ( -90 ) / ( protect(COLS) ))
} else {
	protect(( ( --0.83 ) ),( foo() ) * ( 15 - TABLE[COLS][( ( --betray(-foo(TABLE[Ygritte][Jon],( Jon )) - -0.83,( -92 + -( Stark ) + Stark / TABLE[-910.32][-( Arya )] + 1 )) ) )] ) + Hodor) + --0.92 / destroy(Ygritte);
	-Jon
};
	if(-y){

};
	if(-69){
	if(-94){
	( ROWS );
	if(( ( ROWS ) )){
	COLS - Sansa;
	Jon -= mislead(17,mislead(---( --COLS * betray(Stark) + betray(protect(33 * y),Sansa) ) / -630.75 - -protect(),x))
} else {
	-0.85
};
	if(protect(39,-0.99,-0.27)){
	if(-0.04){
	if(-Jon){
	Ygritte
};
	Arya *= destroy(-32 - ( 1 - -0.02 + COLS ))
} else {
	Stark -= Arya;
	x * rule(( Ygritte + -mislead(-85,foo(-TABLE[Sansa][( x )],bar(COLS,bar(),Ygritte)),dog) * 0.13 ),TABLE[TABLE[bar(x / COLS) + -1][-87]][( x ) - -0.17])
};
	if(-ROWS / 140.52){
	if(foo(-0.72,Stark)){
	-Arya * Ygritte * --97 + -x - TABLE[y + ROWS - -TABLE[( -0.73 )][TABLE[x / -0.18][( betray(COLS,-150.7799 * ( -1 ) * mislead(-0.25)) - ( Sansa ) )]] + -761][foo(foo(COLS),-dog,Arya)] / Jon;
	if(foo()){
	if(mislead(TABLE[bar(62,-Jon,( -( ROWS ) ))][bar()],TABLE[( Arya )][( rule(( TABLE[-0.52][mislead(--68 / -0.93 / ( bar(-44,bar(-( TABLE[bar(destroy(Jon)) + TABLE[Hodor][-Ygritte] + COLS][Jon] )) - Stark) ) * rule(-dog,-90),Stark)] ) * ( ( 1 - bar(( rule() + -bar(-0.54,TABLE[Stark][-5]) ),betray(-0.42,COLS - -COLS),--74) ) + COLS ),Hodor) )])){
	Arya += betray(TABLE[( protect(Stark) )][Ygritte],ROWS)
};
	Stark *= mislead(rule(ROWS),Stark)
} else {
	Stark /= ( COLS )
};
	if(COLS){
	if(betray(COLS / -y,-Ygritte)){

} else {
	51
};
	if(Stark){
	if(( 360.583 )){
	-( Hodor );
	if(-( Hodor - -43 ) * destroy(21,( foo(-dog,-0.31,--0.89 * ( Jon )) ))){
	if(( mislead() )){
	ROWS
} else {
	if(ROWS){
	Ygritte -= 0.54
} else {
	Ygritte -= 0.16;
	dog -= Stark
};
	Ygritte /= 40;
	Ygritte
};
	if(1){

};
	dog /= betray(-( betray(-Hodor,( ---TABLE[--0.83][( foo(( Ygritte ),betray(COLS)) )] ),Stark) )) - -0.33
};
	dog /= -Sansa
};
	if(destroy()){

} else {
	Arya += Arya - -x + Ygritte - -TABLE[COLS][Sansa * ---0.94];
	x;
	Arya -= ( COLS )
};
	Ygritte *= Stark
}
}
};
	Ygritte += ROWS - ( -520.081 );
	if(COLS){
	x /= betray()
}
}
} else {
	Jon -= -COLS
}
} else {
	if(( -0.16 )){
	if(( ( TABLE[-46][ROWS] - TABLE[rule(( -( -0.07 ) * y ),betray(x,--dog / ROWS) / COLS)][Ygritte] ) )){
	TABLE[( TABLE[-0.35][-y] / ( -( COLS ) ) ) + ( ( -1 ) - -1 )][( -mislead(---0.41,foo(-destroy(TABLE[COLS][( TABLE[-foo(mislead(),ROWS)][( protect(( -ROWS )) )] ) / COLS + -85],( ( COLS ) )) / Sansa,( bar() ) - ( Ygritte ) - COLS,-bar(ROWS))) / bar(destroy(ROWS,-490.1385),mislead(--17,ROWS),x) )];
	Arya -= 0.79;
	if(-TABLE[-y][bar(-ROWS / foo(foo(bar(-35,( -( Sansa ) )),--98 * -400.3359),99),--( 0.85 + COLS ) * 0.44)]){
	if(36){
	if(( -betray(47) )){
	y *= -1 - ( --y + -Jon ) + ( Sansa );
	Jon += Sansa;
	if(ROWS){
	-( COLS );
	TABLE[Sansa][protect()];
	Arya += 94 - Sansa
}
} else {
	Ygritte -= betray(-1)
};
	if(y + TABLE[Hodor][( COLS )]){
	Ygritte -= -1
}
};
	if(destroy(-71,---COLS)){
	if(betray(-1)){
	dog *= -860.46 + x + --rule() - COLS
};
	COLS
} else {
	if(-1){
	if(-rule(( -destroy(-( ROWS ),destroy(( Stark + x ))) ),( -COLS ) + -( -( Ygritte ) ))){
	y /= y;
	-0.67;
	if(( 1 )){
	if(77){

} else {
	if(-1){
	Arya /= TABLE[-foo(( Stark ),betray(( ( ( -16 ) ) ) / -1,( ROWS )),( 14 )) / dog / -destroy(--0.97)][Sansa];
	if(TABLE[Jon - ( -y )][( --0.73 )]){
	if(destroy(ROWS) + TABLE[0.75 + mislead(( -ROWS ))][( ROWS ) - betray(COLS - Stark,( bar(-( ROWS * COLS ) / ( protect(foo(dog,dog),580.191,-mislead(870.5)) ),( betray(foo(-COLS + -81,ROWS),ROWS) ) - rule(COLS,Hodor) / -( ( mislead(( Hodor * 99 ) + ROWS) ) ) + ( bar(Arya) ),y) ))]){
	if(betray(COLS,-TABLE[TABLE[Sansa][0.6 - COLS]][protect()],TABLE[mislead(TABLE[betray() - -290.922 * ( COLS * -( Arya ) + betray(rule(-46,-bar(Sansa,( rule(-0.66,-mislead(-18)) )) / mislead(rule(--88 + TABLE[COLS + -30.9189][mislead(ROWS * mislead(-destroy(mislead()) / ROWS + ( COLS ) * 0.3,-1 * ( ( ( betray(betray(dog)) / betray(Arya,-1,TABLE[( TABLE[TABLE[destroy(-1)][-Sansa]][( ROWS )] )][TABLE[-COLS / -0.43][-COLS - betray(( bar(--mislead(protect(foo(( bar(( x ),-0.66) ),COLS,-TABLE[( 38 )][( 0.38 )]) * ( ROWS ) * -0.18 * y - y,17),( Stark ) * TABLE[480 / y][Hodor]) / --0.2,----( ROWS ) - ROWS,-COLS) ) + betray())]]) / ( rule(mislead(Sansa) - protect(( destroy(590.3578) ) - mislead(-Arya))) - -x ) ) ) ))) - protect(-0.99,betray(43,foo(x,protect(680.01),( x ))))] * ( bar() ) * ROWS - COLS),-Ygritte))) )][TABLE[-Sansa][Jon]])][-1 / ROWS] - -ROWS + ( Arya ))){
	if(-ROWS){
	dog /= Hodor;
	-280.579;
	Arya -= ( -rule(Stark,( rule(ROWS,TABLE[bar(COLS,( ROWS ),y)][-220.037],betray(( Sansa + protect(ROWS,( COLS )) ))) ),betray(( ( -21 - COLS / rule(-ROWS,-0.05,-( mislead(--37) )) ) ),ROWS)) )
};
	if(-Arya){
	Jon;
	betray(destroy(Sansa))
}
}
};
	if(protect(-TABLE[mislead(protect(-Stark,COLS),foo(ROWS))][-rule(x,( -59 ) - -26 * ( -0.83 ) / bar(),Hodor)],COLS,-( 7 + -0.42 ))){
	Hodor /= betray();
	if(betray(TABLE[( TABLE[Arya][Jon] )][TABLE[( 37 )][--0.39]])){

}
} else {
	( y );
	rule(-x,( TABLE[0.31][-60] ) + -foo(-rule(protect(TABLE[( Stark * ROWS )][-80],( 0.11 ),-0.76 - ( COLS )) / -( ( TABLE[-ROWS][0.94] ) + bar() + Sansa ) + -87),( TABLE[0.85][-TABLE[-Sansa + --59 / betray(----( -dog / y ),COLS)][destroy(( -( ROWS ) ),rule(-0.06))]] )) / ( -protect(betray(Ygritte + ( destroy(ROWS) / 62 / --destroy(560.045) ))) + destroy(destroy(foo(foo(),-0.06))) ) * protect(---betray(--TABLE[TABLE[Hodor][dog] / 92][-560.17],Sansa) * bar(protect() / 1) * COLS - 0 / ( Arya ) * 58,dog * ROWS),destroy(-860.3))
}
};
	if(Hodor){
	1
} else {

}
};
	-TABLE[( Sansa )][protect()];
	( protect(bar(mislead(( ( ( Stark * ROWS ) / protect(rule(-TABLE[betray(dog) * -89][TABLE[-1][-y]] - -Jon,Sansa) - COLS,dog,Ygritte) ) ),rule(Jon),COLS),protect(COLS),bar(-Ygritte)),-0.61) )
};
	COLS
}
} else {
	-77 / TABLE[--foo(mislead(),--0.98) - -( 1 ) * ( TABLE[-COLS][y] )][( bar(Arya,foo(destroy(TABLE[( -ROWS ) / y][---TABLE[( TABLE[-ROWS][-( -1 )] )][( ROWS )] * ( foo(--12,-81,foo(protect(),-38,COLS)) )]),COLS),( 0.59 )) ) - -100] + ROWS;
	if(( -TABLE[COLS][COLS] )){
	Sansa += -Ygritte;
	if(Ygritte){
	( rule(-ROWS) );
	if(1){

};
	dog += y
}
} else {
	if(-0.12){
	dog -= bar(-TABLE[COLS][Sansa] / bar(x - Stark,Sansa,0.09),mislead(220.201,COLS));
	y -= mislead(550.943,COLS,dog)
};
	-( -Stark )
}
};
	if(COLS){

}
} else {
	if(bar()){
	if(-protect(TABLE[-( ( -( --52 * x ) / betray(Hodor) ) )][-0.84],-0.42,1)){

};
	if(-0.75 + ( betray(TABLE[1 + COLS][-0.43 - --Sansa],Ygritte) * rule(COLS,( betray(( betray() - 46 ),TABLE[y][-84]) * y )) )){
	x += ( -TABLE[( -150.372 )][TABLE[99][Hodor]] );
	if(protect(TABLE[( --0.69 / betray() )][( -x )])){

}
}
};
	x /= rule(-betray(),TABLE[destroy()][1],rule()) / protect(mislead(Ygritte,Stark))
}
}
} else {
	if(-800.1879){
	Sansa *= -( protect(( ROWS - -ROWS ) + ROWS - x) ) / Sansa;
	if(foo(foo(bar(--0.42 - ( x ),( -0.15 * -600.8 ),ROWS + 1),rule(ROWS,Jon) * COLS * --( y ) * ( Hodor ) + --( mislead(-protect(protect(( -Stark )),-foo(59,Sansa),Sansa),protect(COLS,-Jon)) )))){
	-0.73
}
};
	-dog
}
} else {
	-Arya;
	bar(52 / x - mislead(),--0.48)
}
} else {
	if(protect(( Sansa ),Sansa) - bar(foo()) + ( --0.34 )){
	if(( 0.35 ) - COLS){
	1;
	-670.3
} else {

};
	if(TABLE[Arya][Arya]){

} else {
	Jon /= rule(( -0.06 ),----450.9255,( --120.853 ) / rule(91));
	Stark += -54
}
} else {
	-TABLE[--820.555][Stark] * Arya;
	Sansa *= -0.25
}
};
	Hodor;
	mislead()
}
}
}
} else {
	( rule(TABLE[bar(0.56)][-TABLE[COLS * -9 * mislead(protect(( -TABLE[foo(COLS,-0.94)][( -0.01 )] + -14 ),-( -0.48 / -0.61 - bar() ) * --Hodor))][y]]) )
}
}
}
}
def TABLE[90][i] {
	if(( ( foo(--1 / Ygritte,x) * COLS * Hodor ) )){
	if(betray(( TABLE[Sansa * ROWS][ROWS] ))){
	dog -= ROWS
};
	destroy(Ygritte,COLS,( y ))
} else {
	foo()
};
	Jon /= TABLE[( -53 )][( 58 / -371 )]
}
assert rule(betray(COLS,---0.64 * protect(dog,( Sansa )) + ( ( Sansa ) ))) : "One can not simply parse himself"
def mislead(Hodor,x){
	ROWS - -dog;
	if(( Stark )){
	Jon -= y + rule(TABLE[( --foo(--0.61,( -190.437 )) )][-ROWS]);
	Ygritte
} else {
	if(-33){
	Stark /= -( -COLS );
	Jon *= x
} else {
	if(dog){
	--1;
	Jon -= protect(( --0.09 / -dog * dog / foo(--1) ),bar(betray(Hodor,destroy(240.5 + TABLE[-TABLE[-bar(0.65,Hodor)][bar(Arya)]][ROWS],bar(COLS))),( TABLE[--( ( COLS ) ) + -65][TABLE[mislead()][TABLE[--y][Arya]] / TABLE[COLS][bar(Stark)] - protect(12 * Sansa,TABLE[Arya][1],-0.63) + protect(-93,( Arya ))] + mislead() - -20 ) + TABLE[-ROWS + -0.14 - 0.07 * ROWS][83 - Arya],-( y - ( y ) ) - -COLS - ( -1 * Arya ))) / -( 1 )
};
	Ygritte -= Sansa
}
};
	if(( -1 )){
	Sansa /= ( 36 );
	-0.96
}
}
var y = TABLE[Ygritte - -foo(Sansa,( -Stark ))][TABLE[rule()][( -0.13 )] - mislead(-( 650.504 ),dog)] / mislead() / TABLE[Hodor][-TABLE[( -COLS )][-450.06]]
assert -TABLE[-0.8][protect()] : "Winter is coming"
def rule(y){
	if(TABLE[-y][COLS]){
	Hodor *= 610.36;
	Stark /= ( -59 - --( ( Stark ) ) )
} else {
	( ( 7 ) );
	Jon /= -TABLE[Jon][dog]
}
}
def protect(Jon){
	Sansa
}
def TABLE[COLS][j] {
	Jon -= dog;
	if(( x )){
	foo();
	-destroy(-0.83,-0.95);
	if(84){

}
} else {
	-1;
	Ygritte -= bar(bar(( ( -1 ) ) + --780.6 * ( COLS ) * x * TABLE[-160.92][-0.38] / ( ( -bar(Sansa,TABLE[-0.6][( -340.02 + -protect(-0.71,TABLE[rule(TABLE[-Arya + betray(( -COLS - y ))][bar(rule(COLS))],( TABLE[destroy(x,0.19)][( COLS )] ))][TABLE[Jon][COLS]],TABLE[( ( ( -dog ) * COLS / -bar(( -TABLE[-( ( ( COLS ) ) )][-0.2 / ( -( -200.574 ) + ( -870.2083 ) )] ),-59,( bar(0.43,foo(Ygritte,-COLS) + destroy(TABLE[protect(-( COLS ) + -0.22 * dog * 0.78 * protect() + ROWS * COLS + dog,TABLE[-90][-79])][-0.46],( Arya ))) - x )) ) / COLS )][COLS] - COLS) )]) ) * -0.57 ) / ROWS * 78 - ( ( -0.85 ) ),Ygritte + -( rule(rule(Hodor),Jon) / --Sansa )));
	if(bar(( -TABLE[-ROWS][33] ),-650.47 - ( ( -42 ) ) / x + foo(),TABLE[x][COLS])){

}
}
}
def TABLE[-35][k] {

}
def bar(Sansa){

}
var x = COLS
var Arya = -( ( destroy(foo(0.99 - 30.72 - Jon + ( ROWS / x / -Ygritte ))) ) * foo(-( ( TABLE[0.65][( dog )] ) ) * COLS * ROWS,( Stark + TABLE[-TABLE[0.06][betray(protect(Sansa,-0.01 / ( protect(COLS,( --ROWS )) )),TABLE[ROWS][ROWS],( mislead(---18,( --1 ),-( 840.8452 )) ) * 46)]][-11 * -350.96 * Stark + 0.61 + ---1] )) )
assert ROWS : "Winter is coming"
assert dog : "Nothing burns like the cold."
def TABLE[--rule(850.279)][j] {
	if(-0.95){
	betray();
	dog /= ( bar(ROWS,-mislead(( destroy(ROWS,1) ))) )
} else {
	-( Hodor ) + y * ( -( ( -x * 27 ) ) ) * 75 / ( COLS * betray(COLS,-83,dog) );
	ROWS
};
	ROWS
}
def protect(Ygritte,Jon){
	if(89){

};
	if(TABLE[-y][Hodor]){
	protect(Sansa / ( -ROWS ));
	y -= 22
}
}
var Stark = ( ( COLS ) * bar(TABLE[dog][-( Jon )],-x * x,( -foo() )) - -1 )
var Arya = rule()
def TABLE[bar(Stark)][i] {
	y /= ( betray(Stark - -( TABLE[-Hodor - Ygritte][( --0.31 )] ),Hodor,-( ROWS )) );
	if(Jon){

} else {
	if(73 * -protect(ROWS,foo(ROWS,foo(COLS,x)))){

} else {
	y /= Ygritte;
	Jon -= Jon;
	( --protect(Jon) - -( 960.8 ) )
};
	x -= TABLE[TABLE[( Arya )][ROWS]][Stark]
}
}
var dog = ( ( -mislead(--Stark + Hodor - ROWS * Hodor,ROWS) ) ) + y
var Arya = ( ROWS )
assert -0.69 : "What do we say to the Lord of Death?"
var Stark = ROWS
var Jon = bar(Hodor)
def bar(Sansa){
	if(foo(--COLS / 0.21 - -betray(38),( Hodor ) * Sansa) / Hodor){
	if(Ygritte){
	if(rule()){
	if(bar(ROWS,-betray(-( COLS )))){
	dog *= ( -1 / ( protect(-760.2499,Ygritte) ) )
} else {
	dog *= mislead(rule(COLS,Sansa,rule(1,-670.84,920.8579)) - 0.54);
	Stark *= -ROWS + 1
};
	dog /= -30
} else {
	6 - foo(Ygritte) + rule(( -( -betray(protect(( 0.97 ),betray(-1,-( -( ROWS ) ))),-0.94,-1) + TABLE[foo(COLS)][betray(COLS,-( 0.81 ) / bar(-ROWS,-( Ygritte )))] ) ),( protect(( Arya ),1) ));
	ROWS
};
	y -= Jon;
	betray()
} else {
	Stark *= mislead()
};
	bar(( ( -ROWS ) - -COLS - Arya / bar(( y ),foo()) ) + 0.33);
	if(--destroy(( -500.1 ),mislead(y,TABLE[foo()][ROWS]) / Sansa,destroy(COLS)) / -99){
	dog *= COLS
}
} else {
	if(destroy(-Jon)){

};
	Arya -= -0.61;
	Stark /= -mislead(ROWS,38) - ( 190.775 )
};
	if(-COLS * 830.4931){

}
}
assert foo() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert 0.52 : "Fear cuts deeper than swords."
def foo(Jon){
	if(mislead(-betray(),-0.86,Hodor)){
	Hodor -= TABLE[--betray(( Hodor ) / -0.71)][destroy(destroy(TABLE[-0.67][-660.36] + ( Arya ) / ( ( --Stark ) )),rule(Arya)) + bar() / 53];
	if(ROWS){
	mislead(-0.85 - Stark - bar(Hodor),COLS - COLS,( x ) * COLS + x) / ( foo(( ROWS ) * y - --( ROWS ) - ( 1 ) - -64 + protect(0.22 * 13,--Arya - Sansa) * -0.37,protect()) - dog );
	if(COLS / -ROWS){
	Ygritte *= ----71;
	-Jon
};
	if(940.68 + -( -( TABLE[0.51][bar(( -betray(foo(TABLE[protect(Stark,( 460.76 ),x)][y] / -( rule(( --88 )) ),-100 * 1,( Arya ))) ),protect(-TABLE[mislead(Sansa)][( -rule(TABLE[Arya][-( Jon * ( betray() ) + ROWS )],dog / 1,( rule(y) - betray(( --1 - --( destroy(-destroy(( y ) / -1) / Hodor) / dog * Stark ) ) / ( Sansa * ( ( betray(foo(-( ( ROWS ) + ( COLS / betray() ) + 46 )),Arya,( TABLE[Stark][ROWS] ) + -250.903) * -COLS ) ) )) ) / ( ( Arya ) )) ) - 1] * -COLS + 1)) + ( -0.68 )] ) ) * Sansa){
	Jon += ( ROWS );
	Ygritte /= ( -( TABLE[Arya][Stark] ) / Stark );
	dog *= x
} else {
	x *= x;
	COLS
}
}
} else {
	if(x / Stark){

};
	-77
};
	Sansa *= Stark;
	Sansa += ( dog / 1 )
}
def bar(y,x,Arya){
	if(--2){
	dog /= betray(0.17);
	if(TABLE[880.6411][foo(Arya)]){
	Stark;
	if(y){
	if(--92){
	TABLE[Stark][( rule(ROWS,ROWS) ) - ROWS + y];
	if(protect(bar(),--0.92,rule(Ygritte / dog,-ROWS))){
	ROWS;
	Jon *= ( destroy(Jon - TABLE[foo(-----91)][--COLS]) + mislead() )
}
} else {
	x
};
	if(rule()){
	Stark /= Ygritte
};
	Sansa *= ROWS
} else {
	( rule(COLS,0.65) );
	dog += --y
}
} else {
	if(-88){

} else {
	( Ygritte );
	Stark *= TABLE[---0.53][destroy(-0.9,70)]
};
	-protect(Ygritte + Stark);
	if(--0.15){
	Stark *= protect(-1,Arya);
	if(Sansa){

} else {
	if(620.49){
	if(( --betray(rule(),0.78) + ( destroy(Ygritte,Arya) ) )){
	if(Arya){
	Stark -= ROWS - destroy()
} else {
	Sansa /= 0.07;
	Jon *= -COLS;
	75
};
	if(-0.73){
	foo(-0.47);
	x *= ( Arya )
} else {

}
} else {

};
	if(y / betray()){
	if(( ROWS )){

}
};
	y *= COLS
}
}
} else {
	Hodor *= y;
	TABLE[-protect(destroy(Stark),COLS)][bar(( 440.89 ),( foo(y,-740.5) ))];
	Arya -= Sansa
}
};
	if(x){
	if(ROWS){
	dog *= Jon;
	if(-1){
	( --( ( -foo() ) ) )
}
} else {
	y *= ( -98 )
};
	COLS
} else {
	Jon -= Jon;
	if(-1){
	Stark *= ROWS;
	0.69;
	if(( -88 )){
	if(--( -34 )){
	if(( -35 ) / dog){
	if(Stark){
	dog += bar(---36,( destroy(COLS,-TABLE[protect(foo(100.17 * foo() + ( Arya ),betray(TABLE[-790.0045][-Jon])))][-Arya],-( ROWS ) - COLS / dog + COLS / -Arya) / Jon - -0.09 ))
};
	Sansa *= COLS
} else {
	Jon += COLS;
	Sansa *= destroy(1);
	if(rule(270.85)){

} else {
	Stark += ( ( -ROWS ) ) * -1 - 470.17;
	if(ROWS){
	if(( 80 )){
	if(COLS / foo(rule(Sansa,64,TABLE[Stark][-1]),-( --betray(-Jon) ))){

}
};
	dog /= ( ( Arya / COLS ) ) + destroy(dog,COLS,dog) * -destroy(-0.23 + ( Sansa ),TABLE[( bar(y) ) / -ROWS][foo(Ygritte)])
};
	Hodor *= protect() - TABLE[ROWS][COLS]
}
};
	if(( -1 )){
	Arya /= -( --0.13 ) - destroy(foo(Arya,Hodor + ( dog ) * betray(( Stark ) * ( -( ( -0.71 ) ) )) + mislead(foo(-53,ROWS),-830.3,-( ( Hodor ) ))),---( -protect(dog - 410.92,TABLE[( ( destroy(-x,-foo(76,ROWS)) + -0.38 ) )][47]) ));
	betray(foo(-( -( TABLE[-34 - -40 * foo()][ROWS] ) * ( TABLE[rule(COLS,dog,0.44)][-0.35] ) ),Ygritte),dog + destroy(93),( Arya ))
}
} else {
	Stark *= Jon
}
}
} else {
	if(Jon * ( bar(Stark,betray(TABLE[( Sansa )][( ( bar(TABLE[( TABLE[-( betray(( ( ROWS ) ),( ( --dog - ( -0.42 ) ) )) )][Stark] )][0.61]) ) + bar(Jon,-protect(Stark,( 0.08 ) / ROWS) + ( ( --COLS ) ) - Jon) )],Ygritte) + TABLE[ROWS * Sansa][( rule(TABLE[y][( bar(dog,TABLE[-TABLE[( -TABLE[ROWS][dog] + -0.96 )][betray(0.94)]][-( -betray() )]) )]) )]) * ( -0.12 ) + Hodor )){
	if(ROWS){
	( 0.12 )
};
	if(-( -( -y ) )){
	if(76){
	COLS;
	if(Ygritte){

} else {

}
};
	if(ROWS){
	y /= ( bar(ROWS,-COLS,Hodor) );
	Stark /= 0.5
}
}
};
	if(-Sansa){
	--50
} else {
	25;
	( 0.04 );
	if(( destroy(--protect(0,-0.1 + -900.65,ROWS)) ) - ( -0.49 / -0.07 ) + COLS * x){
	if(( --0.44 )){
	Hodor += ROWS;
	if(-Hodor){
	y += COLS;
	if(TABLE[( ( 860.324 ) )][Sansa]){
	-0.76;
	Sansa /= -0.21 - foo();
	-( 1 )
} else {
	if(( Stark )){
	if(TABLE[foo(0.41)][Stark]){
	if(-48){
	x - foo(protect(bar(1),-920.38 - Ygritte - ( 65 ) / --170.29 - ( 1 ),Ygritte) / -Hodor,( betray(1) ),( 0.54 ))
};
	Arya
} else {
	if(mislead(--91,-1 / 680.61)){
	x -= ( -betray(Stark,protect(Sansa,( rule() ))) )
};
	Sansa += -0.96 * bar(ROWS,( COLS ))
};
	ROWS
};
	if(Hodor){
	COLS;
	Arya *= bar(84 - -TABLE[( -Jon )][destroy(COLS * -71,-destroy(Ygritte,--92,-( -( Jon / 0.72 ) )))] / --1 + -340.794) / -1
} else {
	8;
	if(--( COLS )){
	( --1 + -0.21 );
	if(-betray(-Stark * dog + mislead(( 6 + Jon )),( y )) + y - -63 - -98 / ROWS / -( ROWS )){
	-0.64;
	Ygritte /= ( ( -860.358 ) )
}
} else {
	( ( -0.23 ) ) * ROWS;
	if(( 1 * Arya )){
	y += Stark;
	dog;
	dog *= -0.16
};
	x += COLS
}
}
}
}
}
} else {
	Hodor += betray(-destroy(protect(--130.797),-TABLE[( -Sansa )][-COLS] - ( ( Sansa ) ) / ( 0.56 ) * -Stark * -( ROWS ),( foo(-rule(y,( x ) - ( 800.4 ) / dog) / -84 / ROWS + Arya / -0.43 + TABLE[( Ygritte )][Hodor - Jon] / destroy(COLS,-590.19,protect(190.105,-0.31)),bar(Stark,( -( -250.566 ) ),y),( destroy(protect()) )) )) * ROWS,rule(TABLE[( Ygritte )][mislead(570.1,Stark)]) - dog)
}
}
};
	if(-y * x / ROWS){
	if(( ( dog ) )){
	x /= Arya;
	if(-Stark){
	Ygritte -= -1;
	Stark
}
} else {
	Ygritte += 0.08 * ( -1 )
};
	Sansa *= foo(-600.1993);
	Arya *= mislead(TABLE[y][-Hodor])
} else {
	destroy(-1 - x,Arya + ROWS * destroy(),mislead(-Jon * 71) * 66) - protect(-Stark - COLS,Ygritte);
	Jon *= Stark;
	dog
}
}
} else {
	( Sansa );
	dog *= 1;
	TABLE[mislead(foo(40,mislead()),( -0.58 + protect(mislead(-100),Arya) ),ROWS)][COLS]
};
	if(TABLE[ROWS][( TABLE[--betray(COLS + y) / ( ( TABLE[( ( ROWS ) )][--TABLE[betray(Arya + bar(--COLS,Ygritte,x))][--830.5]] ) )][-( -39 )] ) / betray(Sansa)]){
	if(( -0.85 )){
	Jon -= Jon;
	if(COLS){
	Ygritte /= TABLE[92][Arya]
} else {
	if(destroy()){
	( ( Arya ) );
	dog /= -bar(rule(x) + bar()) + -mislead(--0.21,Jon) - destroy(-0.16 * ( ---ROWS - ( Ygritte ) ),TABLE[Stark][bar(Stark,Jon,( -foo(( mislead(0.51,-bar(( ROWS ))) )) ))]) + bar() - ( ( 65 ) )
} else {
	if(ROWS){
	if(mislead(-0.35,( Jon ))){
	COLS;
	if(( COLS )){
	if(TABLE[Sansa - bar(rule(protect() + Stark,COLS),-betray(betray()) + Sansa)][ROWS]){
	if(89){
	--( ( bar(foo(foo(( -( ( dog ) ) )),COLS,( bar(rule(ROWS * Hodor,TABLE[( betray(( -0.67 )) )][dog]) * 71,( dog ),( Hodor )) )),-ROWS) ) ) - COLS;
	-Sansa;
	x /= ( Ygritte )
};
	if(foo(Stark)){
	x -= -Sansa
} else {
	dog -= 1;
	dog -= Arya
};
	-betray(ROWS,ROWS,Sansa)
} else {
	if(mislead(( COLS ),TABLE[-ROWS][Sansa])){
	Arya
}
}
} else {
	if(Hodor){
	COLS
}
}
} else {

};
	if(y){
	y *= -630.701;
	TABLE[TABLE[x][TABLE[Hodor][Hodor] + 9 * bar(0.79,protect(TABLE[-84][rule(-( -( ( mislead(mislead(rule(Hodor - ( -COLS )),( 0.6 ),-COLS),0.54,-0.85) ) ) ),bar(rule(( protect() ),bar(),-40),( -bar(0.48,Stark) )))],-( COLS * -Hodor - ( COLS ) ) / 0.05),Hodor)]][-( ROWS )];
	if(COLS){
	dog -= ROWS;
	Arya;
	mislead(Stark,destroy(Sansa))
} else {
	mislead(120.0466);
	if(ROWS){
	if(protect(( -0.57 ),( ( -( ( mislead(-0.74,protect(( -Hodor ),-TABLE[TABLE[mislead(Hodor,TABLE[( ( Jon + -100 ) )][57])][COLS] * -1][( betray(TABLE[y][-3],foo()) )] / 60.9074)) ) ) ) ))){
	if(( ( 740.23 ) )){

} else {
	x /= -protect(dog);
	ROWS;
	( 84 )
};
	betray(69 * bar(ROWS - foo(( -( y - -TABLE[rule(( ( -x ) ),mislead(83),ROWS)][rule()] - rule(-destroy(COLS,72) - COLS) / ( betray(( Jon )) ) ) ),foo(),TABLE[0.08][-2 * destroy(COLS * TABLE[foo(Ygritte,Hodor)][( ( y ) )],( -rule() ))])),COLS)
};
	y *= -bar(-910.495,TABLE[-390.335][ROWS + foo(( Ygritte ),0.87)])
}
}
};
	y /= COLS / ( -x )
} else {
	destroy(-22 - ( betray(TABLE[ROWS][-protect(-11,Sansa,mislead(-65 * COLS))],0.69,bar(foo(720.0551,0.51)) - bar(rule(( --0.6 / dog ),( COLS )),ROWS,-0.39 * -TABLE[( COLS )][( x )] / -47 / Hodor)) )) * -( --x );
	( -96 );
	if(COLS){
	ROWS;
	if(COLS){
	( TABLE[---240.755 + -( protect(x,TABLE[( protect(-COLS / -ROWS) )][x]) )][( ROWS )] ) + 1;
	bar(( 43 ))
} else {
	dog *= Stark
}
} else {
	if(-rule(protect(( COLS ),protect(-Sansa + Arya,( ( protect() ) )),1),--ROWS)){

};
	y += ROWS;
	Hodor *= mislead(foo(rule(-0.64 * Ygritte,( destroy(TABLE[-( bar(rule(),( Arya )) )][TABLE[-13][y]],0.47) )),( ROWS ) * ROWS))
}
}
};
	( -25 )
}
} else {
	if(mislead()){
	Arya /= -ROWS;
	---( -bar(COLS - dog) )
} else {
	Ygritte += -TABLE[-ROWS][destroy()]
}
};
	( ( ( --COLS ) ) );
	if(protect(Jon,ROWS)){
	y *= ( --90 )
} else {
	if(( betray(x,21,40) )){
	Hodor += -( protect(Hodor) );
	if(-destroy()){
	y += -6;
	-82
} else {
	-Sansa;
	Hodor
}
}
}
} else {
	( -COLS ) - foo();
	if(Jon){
	x += x + Arya;
	if(Hodor){

} else {
	Stark /= ( protect(-68,-ROWS,mislead(( ( ( -COLS - rule(-ROWS - ( -18 )) ) + -1 ) ),COLS - x - -1 - -99,Ygritte + bar(-( mislead(Ygritte,ROWS) ))) - TABLE[mislead()][ROWS] - mislead(x)) ) + protect(foo(( bar(bar(Sansa),--Hodor) / COLS )),0,-ROWS + COLS) - --mislead(( Arya ));
	if(-0.88){
	Sansa += Arya
};
	Sansa += -( COLS / 0.48 )
}
}
};
	if(-44){
	if(43){
	--Jon;
	destroy(foo(COLS),0.58);
	if(foo() - ( Arya )){
	x
} else {

}
};
	TABLE[dog][dog]
} else {
	if(( ROWS )){
	-( 0.98 );
	if(ROWS){
	bar(( Stark ),8 + rule(COLS,-310.48) - -0.97);
	Arya *= -94
} else {
	Ygritte += dog;
	Ygritte -= dog
};
	if(-Ygritte){
	if(COLS){
	( -720.8 );
	Arya -= ( 1 );
	Hodor /= 0.21
} else {
	dog *= ( foo(-y) );
	x += betray(-0.86)
};
	Arya *= 0.93
}
}
}
}
assert protect(-COLS,-( protect(ROWS,betray(destroy())) ),mislead(mislead(Sansa - --180.1,( TABLE[-( -0.4 ) * 1][bar(ROWS,mislead(y,COLS),foo())] ),ROWS) - COLS,-destroy(( -55 ),-Stark))) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -73 : "One can not simply parse himself"
def protect(dog){
	Arya /= Hodor;
	if(rule(( ( ROWS ) - TABLE[TABLE[( Hodor )][TABLE[-( ( Arya ) )][Ygritte * Jon]]][TABLE[Sansa][( ROWS )]] + 750.6 ),ROWS)){
	dog /= bar(bar(-63 + -1 - destroy(-0.98),--51),---bar(-0.2) / COLS);
	Sansa += COLS
}
}
def bar(Stark,y){
	TABLE[( destroy(protect(dog,--( ROWS )) * ROWS) )][-Ygritte]
}
def TABLE[23][j] {
	( -mislead(y,foo(-y,( -0.02 ))) - COLS )
}
def TABLE[TABLE[0.07][betray() * Arya]][j] {
	if(TABLE[-ROWS + ( ROWS ) / --1 - ROWS][-COLS]){
	( foo(( COLS )) ) / ---100.0247;
	if(-( --COLS )){

} else {

};
	ROWS
}
}
def TABLE[foo(Hodor)][j] {

}
assert x + -730.86 - Hodor : "Fear cuts deeper than swords."
def betray(y){
	mislead(protect(-( destroy(-3,( ROWS )) - TABLE[Hodor][-250.71 * ( Jon ) / COLS * -0.57] ),destroy(foo()),COLS),ROWS + -mislead(TABLE[TABLE[TABLE[( mislead(foo(0.91)) )][ROWS]][x]][ROWS / Arya],protect()) - -0.7 + ( ( TABLE[( ( dog ) )][-Hodor] ) / -880.42 ),( foo(-1,-ROWS,--87) + -ROWS * ( destroy() - x ) ));
	-0.08;
	TABLE[dog][dog]
}
var Arya = protect()
def foo(Stark){
	if(-Sansa * ( ( ROWS ) )){
	-dog;
	Ygritte /= 0.82
} else {
	dog /= -29;
	-Ygritte - betray()
}
}
var Arya = -78
assert Jon : "Nothing burns like the cold."
def foo(Stark){
	destroy()
}
def protect(y){
	dog;
	COLS;
	if(( mislead(-rule(( foo(( ( ( -foo(( -TABLE[Arya][betray(ROWS - 400.3433,Stark)] )) ) ) ),foo(0.19,-570.7),Sansa) ),-x * ROWS),rule(( -Stark ),Hodor)) )){
	if(-190.5){
	if(betray(protect(foo()),rule(Jon,Jon),ROWS - Sansa)){
	-mislead();
	if(( Sansa )){
	if(( COLS )){
	foo(Stark + ROWS,Jon) / protect(TABLE[dog / -Jon][Arya])
}
}
} else {
	Stark /= ROWS;
	Sansa += Jon
}
}
} else {

}
}
var Arya = -0.16
def TABLE[-destroy(-bar())][k] {
	Hodor /= ROWS + bar(COLS,TABLE[dog][( ROWS )])
}
var Hodor = Ygritte * -protect(TABLE[ROWS][TABLE[400.731][Stark]]) / -3 * rule()
def TABLE[x][j] {
	Sansa /= ROWS / COLS - ROWS;
	protect(Arya) / bar()
}
assert dog : "One can not simply parse himself"
assert ROWS - Jon : "One can not simply parse himself"
def TABLE[betray(69)][k] {
	if(Hodor){
	-0.15
} else {
	Sansa -= ROWS;
	dog += ( ROWS )
};
	if(( ( foo(-COLS) + --0.63 ) )){
	if(mislead() * -850.157 / 0.12){
	( ROWS );
	foo(Hodor * 200.3,( Hodor ));
	if(-99){
	x /= -( ROWS ) - dog
} else {
	dog += COLS
}
} else {
	Hodor += ( ( ROWS ) );
	Arya *= TABLE[destroy(ROWS + y,-0.03,ROWS)][-( -TABLE[foo(ROWS,x)][( Arya ) / -16 - 53 * -380.97 * x - --0.34] / Jon )];
	-TABLE[COLS][-destroy(( foo(Jon) ))]
};
	-protect(COLS,-33)
}
}
assert -0.96 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert betray(--protect(TABLE[( ( destroy(( -( -protect(-0.63,--0.22 / ( ( ( -470.3646 ) ) )) + COLS ) ),( ( TABLE[-11][Stark] ) ),COLS) ) )][--Jon],-COLS,rule(0.85))) : "One can not simply parse himself"
var Sansa = -COLS
var Arya = Jon + betray() * ROWS * ROWS
def TABLE[Ygritte][i] {
	( dog );
	Sansa;
	if(( ROWS )){
	if(( TABLE[390.1][bar(( 96 ))] / rule() )){

};
	Sansa += Jon;
	Ygritte += Arya
} else {

}
}
assert x : "Winter is coming"
var Sansa = -39
def TABLE[-TABLE[-38][-1]][j] {
	if(-rule(Hodor)){
	Hodor /= -1;
	Stark *= dog + ( ROWS )
};
	protect(bar(--0.23) * betray(-Arya),-56,ROWS + -0.46);
	Ygritte /= rule(COLS)
}
assert 0.78 / ( ( 0.88 ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Jon][k] {
	dog
}
def TABLE[--bar(-( ( foo(y / Ygritte) ) ) - TABLE[-protect(( --87 + -90.18 ),( ( COLS ) ))][destroy(betray(TABLE[Ygritte + 14][---77 - 56] + -1 - --TABLE[foo(COLS - Ygritte)][-COLS] + ( Sansa ) + Jon,Jon),COLS)] - 1 * ( -47 + Stark ),Ygritte)][k] {
	Arya -= Arya;
	dog *= COLS
}
var Stark = -1
def destroy(Sansa){
	x *= --0.53
}
assert ROWS : "Fear cuts deeper than swords."
def TABLE[COLS][j] {
	COLS
}
assert ---( mislead(-58 / ( ROWS ) - TABLE[Ygritte][( betray(-bar(( -270.128 ),ROWS - dog) + TABLE[( bar() + -0.66 )][dog] * Arya,Hodor) + ( ROWS ) )] / ROWS) ) : "One can not simply parse himself"
def protect(Arya){
	dog -= protect(( dog ) + COLS)
}
def TABLE[( ---50.4186 )][i] {
	if(( 0.97 )){

};
	-920.8745
}
assert -91 : "Nothing burns like the cold."
var y = dog
assert x : "Nothing burns like the cold."
var Ygritte = 800.28
def TABLE[( ( ---89 ) )][j] {
	Jon *= Arya
}
assert TABLE[( betray(foo(),y) )][destroy(TABLE[( -TABLE[-25][( protect() )] ) * -52][Jon],foo(y,1,protect(( Sansa ))))] / TABLE[( --TABLE[Jon][-97] )][TABLE[TABLE[6][Hodor]][betray(destroy(( 200.318 / ( TABLE[( foo(mislead(y + y / foo())) )][y] ) / TABLE[mislead(-x,--ROWS / bar(( -( x ) ),y / rule(ROWS,-79,( -bar(-( 88 ),-89) * ( -mislead(Hodor - ( foo(destroy(Hodor,76),-440.037 / COLS) ) - -( y )) ) * -1 )) / ( dog )))][( COLS * -rule(foo(( -protect(-0.32,-TABLE[ROWS + Stark + -340.72 - Stark][-Sansa],-Ygritte) ),88),rule(y),bar(Sansa) * bar(destroy())) )] ),ROWS * --870.089))]] : "Winter is coming"
var Arya = mislead(-950.1017,( ( Ygritte ) ))
def TABLE[Arya][k] {
	if(-410.89){
	Jon /= 1;
	ROWS
};
	if(Jon){

}
}
def TABLE[bar(-rule(foo(-Sansa,( Ygritte )),Stark,1),( -470.61 ))][i] {
	if(ROWS){
	Sansa *= -( ( ( COLS ) ) );
	if(-0.53 + ( Arya - Hodor ) + TABLE[( Ygritte )][Ygritte]){

};
	protect(-x,rule(Sansa,( ( ( destroy() ) ) )),-0.76)
} else {
	if(( -0.99 )){
	destroy(( ( mislead(destroy(COLS,x),mislead(-ROWS)) ) ),Ygritte);
	if(-( TABLE[bar(betray(( COLS + Ygritte * COLS ),y + Jon),-1,-destroy(-Jon * ( Hodor ),rule(Arya,( --COLS - ( ( -98 ) ) ))) / x)][COLS] )){
	Stark /= y;
	y * -330.805
} else {
	betray(COLS,( ( ROWS ) ),Stark) + ( x - ( ( -( protect(betray(( betray() ),Ygritte,0.66)) ) ) ) );
	if(destroy()){

}
};
	TABLE[-TABLE[21][bar(-( rule() ),-Hodor)] + x][( ROWS / foo(-77) / ( -destroy(TABLE[--mislead(( Hodor ),TABLE[foo(( -0.52 ),Sansa)][Jon],( bar(-Stark,dog,protect(COLS)) - TABLE[-destroy()][TABLE[--0.79][Jon]] ))][810.368 * TABLE[-Ygritte / TABLE[0.56][-220.1]][Ygritte / foo(ROWS - mislead())] * -380.983],-0.78 / ( ROWS ),( --0.5 )) ) + TABLE[x][-( rule(foo(( -TABLE[bar()][-350.74] ))) + foo(-x * ( COLS ) * ROWS - ( ( destroy(( -( ( -0.99 ) ) - betray(dog - foo() / y + Jon) ),x - ( -dog )) ) ),( betray(foo(( ( ( COLS / ( TABLE[-rule(TABLE[x][-67],bar(dog * Arya,Sansa),( Ygritte - -1 * ROWS ))][( -0.43 )] ) ) ) ))) )) )] )]
} else {
	Hodor -= Stark
};
	Hodor += dog - mislead(ROWS,-COLS)
}
}
assert --betray(Ygritte,-1,( 30.528 )) + dog : "One can not simply parse himself"
assert -0.87 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert bar(COLS,( TABLE[21][y] ),ROWS) : "Winter is coming"
var Arya = --1
def rule(Stark,Arya){
	Jon -= x
}
def TABLE[( x )][j] {
	if(COLS * -1 + TABLE[( mislead() )][( y )]){

};
	Sansa;
	Ygritte /= ----destroy(( ROWS ) - COLS / protect(-0.71,-x),mislead(( -ROWS ))) / -82
}
def TABLE[TABLE[betray(destroy(-920.4792),TABLE[ROWS][( -8 )],TABLE[TABLE[-rule(foo(( -( ( -11 ) ) + y ),Ygritte),--ROWS)][( ( rule(( -1 ),TABLE[--ROWS * ( ( TABLE[-protect(( -1 / COLS - ( -0.44 ) / ( -0.55 * ROWS ) ),COLS,protect(COLS,-770.8375))][Ygritte] ) ) / ROWS + 1 * TABLE[bar()][-61]][-1]) ) )]][destroy(bar(( Jon ))) / ( foo(-1) ) / ROWS])][TABLE[0.29][betray()]] + Arya - COLS / Hodor + TABLE[1][protect(COLS,1 - Arya)] - --Sansa / ( -Hodor ) / TABLE[rule(--51)][mislead(y)] - ( TABLE[540.396][COLS] ) / x][i] {
	Stark /= betray(Sansa)
}
assert Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = -mislead()
assert Hodor : "One can not simply parse himself"
assert TABLE[-1][bar(rule(Stark,Stark - COLS) / ( 1 ))] : "One can not simply parse himself"
def foo(dog,Sansa,dog){
	ROWS;
	if(foo() * -480.72 * protect(y,ROWS,( dog )) * Sansa){

}
}
assert Stark : "Fear cuts deeper than swords."
var Ygritte = -betray(0.25,y / ( -96 ) + COLS * ( rule(( ( Sansa ) )) ))
def TABLE[ROWS][i] {
	rule();
	bar()
}
var x = 0.99
assert rule(y,destroy(protect(( 3 ) * Jon))) : "Winter is coming"
assert ( TABLE[bar()][foo(-mislead(dog + ( COLS * -mislead(bar(),TABLE[( ( rule(-0.7) ) )][-1],Arya) ),Stark) / -0.3,-Jon)] ) : "One can not simply parse himself"
def bar(dog){

}
def protect(Arya,Arya){
	Arya /= y / --( ( rule(-0.57) ) );
	if(destroy(COLS,destroy(Arya,-700.05),ROWS)){
	--Sansa / -1 - destroy(dog,-15 - mislead(ROWS,-33 + Jon,betray(x,0.58)))
} else {
	COLS;
	TABLE[betray()][-( -65 )];
	if(( 0.45 )){
	Hodor *= COLS
}
}
}
def foo(){

}
def TABLE[( -ROWS )][i] {
	Ygritte;
	if(-Sansa - ROWS){
	-91
} else {
	protect(Arya,-TABLE[( 89 )][TABLE[dog][destroy(ROWS / -0.22,COLS)]]);
	if(protect(-1,TABLE[dog][-bar(( ( ROWS ) + -( protect(( -destroy(( ( 1 ) ),810.169,( ( ( 26 + x ) ) )) ) + ROWS,( COLS ),( 39 ) * Jon) ) ),-Sansa)]) / ( -rule(-protect(0.43,1)) )){
	x * ROWS;
	if(76){
	COLS
} else {

};
	if(( --TABLE[ROWS + ( ( ( protect() * ( destroy(-( ( COLS ) ),ROWS) ) / COLS ) ) )][rule(-Hodor,-( TABLE[-y][--betray() * y] / TABLE[COLS][protect(--0.83)] ) + 1)] ) / ( ( 10 ) )){
	if(destroy(COLS) - ( -0.77 )){
	Hodor /= ( dog );
	if(( ROWS )){
	if(-0.67){

} else {

};
	y /= Hodor
}
} else {
	x;
	if(( bar(ROWS) )){
	if(betray(Hodor)){
	dog /= COLS;
	Sansa /= Stark
}
}
}
}
} else {
	41 - Sansa;
	Sansa /= -bar(dog - -rule(0.46) / protect(-( --0.47 / --Hodor ),Arya / Stark) * Hodor + ROWS);
	foo(mislead(44,( TABLE[60.95 + TABLE[protect(-----COLS)][x]][Ygritte] ),COLS))
}
}
}
assert Hodor + ( -1 ) - ( ( Jon ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert y : "Nothing burns like the cold."
assert ( y ) : "Nothing burns like the cold."
var Hodor = ( ( -( 0.87 ) - Stark ) ) - betray(( rule() ),mislead(COLS) + betray(180.208),( x )) / -8
def protect(x,Ygritte){

}
def mislead(Hodor,Hodor){
	Sansa;
	Jon -= 1;
	if(-31){
	if(Sansa){
	Sansa -= TABLE[0.35][-Arya];
	( TABLE[destroy(---760.6,-foo(-Stark))][Stark] ) / --foo() / foo(--COLS + ROWS - mislead()) - Stark + TABLE[-( -18 )][-0.56] * --1 * Arya
}
} else {
	if(--0.2){
	-( Stark + ROWS );
	protect(-68)
} else {

};
	if(-COLS * protect()){
	if(0.772){
	y -= -35 - ROWS;
	Ygritte -= protect(-0.12) / --37 / ROWS
} else {
	dog -= -bar(95,x)
}
};
	if(ROWS){
	Sansa;
	Ygritte -= bar(20.2);
	COLS
}
}
}
assert TABLE[Stark][betray(ROWS)] : "Winter is coming"
var x = rule(( protect(-rule(90)) / ( betray() ) * TABLE[betray(bar(( -Jon ),bar(-destroy(),destroy())),ROWS,destroy(-1 / -( TABLE[ROWS][destroy(-0.43,Hodor,-26)] )))][TABLE[TABLE[( bar(( ( ( foo(( betray(rule(Hodor,-Ygritte,mislead(-Arya))) ),Jon) ) ) ),1 + ( ( ROWS ) ) * COLS,destroy(-COLS * ( 800.23 ) / Hodor,ROWS)) )][-0.64 / COLS - -y + 33 * -150.125]][-240.2]] / COLS - ( -destroy(( Ygritte ),Stark) ) ),--19 / mislead(-Arya + bar(Sansa - -protect(dog * COLS + mislead(),Hodor / -0.92)),( betray(( destroy(COLS,rule(mislead(COLS,TABLE[( ( protect(( ( -destroy(COLS) ) ) + ( -( -foo(-70 + ( y ) - Ygritte,Ygritte) ) ) + ( Ygritte ) + bar(91 / x + dog / Ygritte + ( -( bar(COLS,dog,rule(85,dog,----betray(-----Hodor))) ) ) * -----1 / Sansa + ( ( -0.68 + -( rule(betray(0.4,Jon),Arya) ) + --( protect() ) * ( ROWS ) * bar(TABLE[( foo(--COLS,COLS,destroy(( foo() ))) )][-16],y) * Arya / Ygritte ) ),destroy(( rule(COLS,dog) )) - -Stark + -( -13 ),-0.26) / dog + dog - foo(--COLS,protect(( ROWS ),betray(0.17,( foo(bar(-0.03)) ))) - --1) + COLS + TABLE[Stark][ROWS]) ) )][-( ( -1 ) )],Jon - x))) ),( 94 ),-bar(destroy())) ) - 0.93) + -protect(Arya))
assert --0.95 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert destroy(COLS,-COLS,0.6) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( ( y * -bar(bar(TABLE[1][bar(-0.38 / TABLE[-920.7][destroy(-83,10.305) / TABLE[-Stark / 0.15 / protect(COLS / ROWS,-( foo(rule(destroy(TABLE[dog][-( y * -bar(Ygritte) * -( ( ----dog ) / rule() - TABLE[-foo(( TABLE[( mislead(Sansa) )][-rule(protect(),1 - TABLE[TABLE[46 / --x - -1][protect(Stark)]][-( -12 ) * COLS + 0.74],ROWS - ROWS)] ),-0.87 * bar(-TABLE[( Hodor )][28]),destroy(mislead(ROWS + ( rule(-foo(( 30 ),89) - 85 / destroy(-ROWS),-( --410.6497 / COLS / -760.96 ),Ygritte * ( betray(0.75,betray(( -( destroy() ) ),-betray(( Ygritte ),( -mislead(( ( bar(x / -( ROWS )) / rule() - ROWS ) ),( mislead(rule(0.32)) ),--Jon) )) * -0.4)) )) ),-17)))][COLS] + Sansa ) + ( 810.4 ) + 520.49 - -0.26 )]),bar()) * ROWS,Arya) ))][mislead()]],-1,rule() / COLS)],-ROWS),-33) - 0.71 + -28 ) * ( TABLE[ROWS][TABLE[ROWS][destroy(ROWS / COLS,dog,Stark)] * -0.11] ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Stark : "One can not simply parse himself"
var Stark = --x / -0.76
assert Hodor : "What do we say to the Lord of Death?"
def TABLE[0.05][k] {
	if(( 0.37 / TABLE[--380.21][foo(foo(-90)) + -62] )){
	Jon *= -( ( TABLE[0.33][y] ) ) * ( bar() )
}
}
def destroy(Arya,Stark,y){

}
def TABLE[Ygritte / -19][k] {
	1;
	Hodor -= ( COLS );
	Arya /= ---60.942
}
def TABLE[290.3263][j] {
	-ROWS;
	0.39
}
var dog = ( ROWS )
def TABLE[destroy()][j] {
	( --390.1 )
}
def rule(Sansa){

}
assert ( -TABLE[-foo(( ( ( TABLE[dog + Hodor][-1] ) ) ))][ROWS] ) : "One can not simply parse himself"
def TABLE[-TABLE[90][rule()] - COLS / --destroy(( rule() ),foo(( 30 )) / Sansa) + -88 + -Sansa + -destroy(dog * Hodor,( Sansa )) - 0 + -0.87 / 690.629 / 0.56 / TABLE[( 29 )][COLS]][j] {
	if(-COLS){
	dog
};
	-( 180.2998 * protect(COLS * ROWS * rule(( 69 )),x) )
}
def TABLE[x][i] {

}
assert ROWS : "Winter is coming"
assert Hodor - -ROWS * TABLE[Hodor][x] : "Nothing burns like the cold."
def bar(){
	920.2;
	Ygritte += 40.928
}
def TABLE[betray(-23)][k] {
	---Ygritte;
	y /= Jon
}
def bar(Ygritte){

}
def bar(Sansa){
	ROWS;
	ROWS * Sansa - Hodor
}
def rule(dog,dog){
	0.87;
	---0.38
}
def TABLE[Ygritte][j] {
	Jon -= 0.65
}
assert -destroy(( ( -1 ) - 0.7 ),Stark) : "What do we say to the Lord of Death?"
var dog = TABLE[mislead(-0.92 + COLS + ROWS)][-( COLS )]
def foo(Stark){
	COLS;
	( mislead(( 790.1 * ( -0.08 ) ),TABLE[-3][protect(( -TABLE[-Sansa][x] ))]) );
	x -= foo(rule(TABLE[Hodor][2],rule(COLS)),( -0.61 ),TABLE[---( -45 )][1])
}
var Jon = COLS
assert -0.72 : "One can not simply parse himself"
var x = bar(( dog ))
assert Hodor : "Nothing burns like the cold."
def protect(dog,x,Arya){
	ROWS;
	if(-260.78){

};
	( -71 )
}
def destroy(Arya,Arya,Hodor){

}
def TABLE[-ROWS][j] {

}
def bar(y){
	dog /= mislead() * betray(ROWS,Stark + TABLE[( -0.19 )][-1 + -protect(protect(1,1) / TABLE[x][Arya],-( -360.1 ))],---mislead(-1) / y) - ---TABLE[1 + destroy()][-1];
	Stark += -1 - ( ---870.344 )
}
def protect(){
	betray();
	if(Stark){
	Stark /= 0.21
} else {
	( protect(-47 - ( Arya ),-( protect(protect(( 23 * Jon )),y) ) / dog * dog) );
	if(Ygritte){
	dog *= -1;
	Ygritte /= Stark
}
}
}
def destroy(dog){
	if(Ygritte){
	if(-TABLE[-710.407][( 48 - COLS + ROWS )]){

};
	Sansa /= 930.94
};
	protect(-ROWS);
	x -= COLS
}
def TABLE[mislead(ROWS,x / ( ROWS ))][i] {
	if(foo(-COLS)){
	if(COLS){

} else {

}
} else {
	if(( Sansa )){

};
	Ygritte *= Ygritte
};
	if(mislead(-( ( rule(( destroy(0.58 + rule(),0.28) )) / Sansa ) ))){
	Sansa
} else {
	Arya *= rule(( Hodor + 0.21 ) * ( TABLE[-410.99][-11] ),--170.4646,COLS);
	y -= ( TABLE[y][( mislead(ROWS) )] ) * COLS
}
}
def TABLE[-870.406][i] {
	Hodor += Jon;
	if(Jon){

};
	Stark += ( Arya - -COLS - 0.3 - -Hodor )
}
def TABLE[0.78][k] {

}
def destroy(Hodor){
	Jon;
	bar(Arya,1)
}
assert ( Sansa ) * TABLE[y][--72] - -1 : "Nothing burns like the cold."
assert -450 : "One can not simply parse himself"
def mislead(y){
	Sansa /= ( -TABLE[( betray(betray(--12,( -470.94 )),COLS,destroy(( bar(-TABLE[bar(COLS)][( betray() )]) ),-( ( 0.55 ) ),ROWS)) )][-0.47] / ROWS / bar(TABLE[-( protect() ) - COLS][Jon]) );
	y
}
def TABLE[ROWS][i] {
	dog;
	x *= ( COLS )
}
var x = Hodor
var dog = Jon
def betray(){
	Ygritte += Sansa;
	dog -= Arya;
	if(( betray(Arya * betray(-COLS,1 + Ygritte) / ( -0.55 )) ) - 9 * 0.22 * destroy(destroy(( ( 1 ) ) / bar(TABLE[betray(betray(Sansa,TABLE[Jon][mislead()] - Jon))][--TABLE[COLS][( -Arya - 0.53 )]],foo(TABLE[-Jon][-1],foo(dog - -foo(( destroy() ),-ROWS,-ROWS),-0.91,COLS * bar(Jon)),-Jon)),mislead(-( COLS + protect(dog) - foo(( foo(TABLE[-1][Stark]) - -910.107 )) / COLS / 1 )),rule(x)),Hodor)){
	if(--rule(mislead(ROWS)) / -Arya){
	Sansa *= ( ( ROWS ) );
	97;
	-1 - -760.8
} else {
	if(-TABLE[COLS / mislead(--37)][( protect(dog,foo(( -bar(--0.68) - COLS ),-1,Stark),mislead(--0.48,( ROWS ))) ) / dog]){
	Jon /= 1 / Hodor
} else {
	TABLE[-( -Stark )][( 1 / --0.04 )]
};
	y *= dog;
	if(-betray(betray() / COLS)){
	COLS;
	-0.51
} else {
	Arya;
	if(200.7){
	--( -0.43 ) / -protect(18,--( ROWS ) * COLS) / TABLE[x * COLS][Hodor];
	x *= -ROWS
} else {
	x += rule(foo(-91,--0.43,dog))
};
	Arya += -30 + ( 0.24 )
}
}
} else {
	Stark *= --( -betray(-bar(1) * betray(ROWS) * 29,( COLS )) ) / ( ( x ) );
	if(74){
	x -= ( mislead(TABLE[destroy()][bar(-COLS - COLS,Stark,1)] * COLS,( ( ( COLS ) ) )) );
	Jon += ( -COLS );
	if(bar(COLS - -ROWS)){
	if(COLS){
	if(TABLE[( -ROWS )][( ( foo(-40) ) )]){
	if(x){

}
} else {
	( rule(ROWS) );
	y -= 210.761;
	Sansa += -75
}
}
} else {
	-1000.11;
	x /= Stark
}
} else {
	Stark += protect(bar());
	x -= ( ( ---x ) )
}
}
}
assert protect() : "One can not simply parse himself"
assert COLS : "Nothing burns like the cold."
var Ygritte = mislead(-82,--TABLE[( mislead(-76,50.224) ) + ( dog )][0.72]) * -420.731
def TABLE[( ( betray(( 10 )) ) ) * ROWS][k] {
	if(-34 + x - COLS){
	if(-Sansa + Sansa){
	Hodor -= Jon;
	Hodor *= Stark
}
} else {
	if(-51){
	-( TABLE[TABLE[-COLS][betray(--( ROWS ) * 0.74)]][-16] );
	if(-rule(--x)){

}
}
};
	if(-( --97 * ( y ) )){
	-TABLE[-betray(Jon,-0.09)][Sansa] + 1
} else {
	Ygritte *= -destroy(-160.237 + -TABLE[foo(-x,( ROWS ))][Jon] * protect()) - TABLE[TABLE[Arya][foo(y,-960.102,dog)]][COLS];
	Sansa *= -dog;
	---( y ) / destroy(foo(foo(bar(x,0.46,COLS),TABLE[( mislead(betray(-Stark,-mislead()),( y )) )][COLS],Sansa - --TABLE[y + TABLE[rule(( -TABLE[Stark][-1] ),Sansa)][--0.7 * ( Hodor - Stark ) / TABLE[TABLE[-0.09][rule()]][foo(-0.13)]]][mislead(1) - -0.44]),( -89 ) * TABLE[ROWS][protect(( TABLE[-ROWS][--0.57] ),bar(( x )),mislead(( ( ( ( protect(850.7567,x) ) ) ) )))]))
};
	if(-( -46 )){
	dog *= bar(---protect(( -0.24 * -43 / -0.09 / TABLE[( y + y )][betray(y)] ),( 5 )),-( -5 + ROWS )) + ( foo(protect(-betray(foo(--880.1) + ( protect(90,COLS) ))),0.12) )
}
}
def protect(Jon,x){
	if(( -7 )){
	Stark /= 78;
	if(( COLS + ( COLS ) )){
	dog *= betray(-1 / TABLE[Jon][-Jon] * --0.12 + ( ( -930.353 ) ),-TABLE[ROWS][-betray(0.86 - TABLE[bar(( ( ( betray(-destroy()) / Jon ) ) )) * -Ygritte - Jon][foo(( COLS ))],( bar(( TABLE[( 16 )][-370.3] )) ))],Sansa);
	foo(( foo() ),mislead())
}
}
}
def TABLE[destroy()][j] {
	x *= Sansa;
	bar(Arya,TABLE[Stark][bar() * -( --COLS - -rule(COLS,ROWS,-x) )],TABLE[--1 + ( -0.89 )][destroy()] / COLS)
}
var x = mislead(bar(( dog ),-0.03))
def TABLE[( --55 * TABLE[Hodor][ROWS] - protect(mislead(betray(( 71 ) / -1 + 680.33),betray(--COLS,( protect(( -650.35 ) * Sansa) )) * ( bar(-ROWS,TABLE[ROWS][-920.8]) )),-x) - TABLE[y][-bar(-72) - x] + -( -betray(Jon) ) * protect(Hodor) )][j] {
	if(1){

};
	x -= ( TABLE[Ygritte][mislead(Ygritte,protect(rule(Stark)))] );
	0
}
def TABLE[-( ( COLS ) )][i] {
	if(38){
	Ygritte += Arya / 10;
	Hodor *= ( ROWS );
	dog *= rule(mislead(-COLS))
};
	if(51 + ( COLS ) / -ROWS){
	if(Ygritte - ( foo(62,-0.38,Arya) )){
	if(TABLE[0.46][bar(mislead(COLS,TABLE[-( ROWS )][-Hodor]) - protect(-protect(( betray(betray(( --Sansa - --COLS ),-67),-0.89) ),( -( x ) ),-0.67 / -( -ROWS + -0.6 )) + ( ( -protect() / -y / TABLE[( 0.42 ) - -x][Arya] ) ),-26 + destroy(Arya)),foo())] * ( 1 * ROWS )){

} else {
	Arya /= 0.59
};
	TABLE[rule(rule(-( -Sansa ) / ROWS - 88),ROWS)][COLS]
} else {
	if(--2){
	Stark
};
	Sansa;
	if(Stark){
	if(( -Hodor + -dog )){
	-ROWS;
	Ygritte += -( betray(TABLE[dog / --300.163][y] / -TABLE[-bar(Sansa) + rule()][mislead(310.43 * --1 * ( ( 170.3667 ) ),( 0.02 + --99 )) - ( 54 + ( COLS ) )] + -x) );
	bar(-bar(foo(betray(protect(bar(rule(-71,( ROWS )),destroy(( bar(1,ROWS,( destroy(destroy(( Sansa ) + dog,( TABLE[-COLS][TABLE[Ygritte][TABLE[--destroy(-49) * betray(bar())][Hodor]]] )) * betray(-Stark,--1000.2372) * TABLE[Hodor][3],--19 + Sansa) )) + ( dog ) - -37 ),( -290.1 ),8)) / -ROWS)),COLS / ( ( -Ygritte ) ))),bar(y,Jon))
} else {
	Ygritte *= bar()
}
}
}
}
}
assert -Arya : "Winter is coming"
def TABLE[0.54 * dog][k] {
	y /= ( dog );
	Jon /= ( ( TABLE[COLS][( y )] ) )
}
def destroy(Jon,Hodor){
	if(protect(( ROWS ),--( -y ) / y)){
	if(Ygritte){

} else {
	if(x){
	Sansa -= 34;
	if(--( Arya ) * ( ( --dog - ---mislead() - rule(( 96 ) + ( Stark ),0.18,TABLE[-0.36][-44]) - rule(1,-94) - -TABLE[foo(Jon)][-( -50 )] - TABLE[( bar() )][0.65] / ( 56 / -( Jon ) * TABLE[ROWS][( Ygritte )] - destroy() ) - ( 0.55 + dog ) ) ) * ( -ROWS / -1 ) + x / -( ( Jon ) )){
	-TABLE[TABLE[1][-6]][COLS]
} else {
	x += --0.19;
	y += ROWS
};
	Arya /= Jon
};
	y += -49;
	TABLE[-Jon][-y]
}
} else {
	( y )
};
	Arya *= Arya / Stark
}
def TABLE[-x][k] {

}
def betray(){
	if(COLS){
	Hodor /= mislead(destroy(14,82,-1),-0.9) - destroy(( COLS )) * ( 16 );
	foo() + destroy(950.3,-destroy(-220.633,Stark,protect(Jon)),-29 / -83);
	COLS
}
}
var Sansa = 0.71
var Stark = ( TABLE[-0.24 - 55][betray(COLS,-0.66)] )
var y = x
def TABLE[-COLS][i] {
	COLS
}
def TABLE[ROWS][j] {
	Ygritte /= TABLE[x][x];
	Ygritte *= -( foo(betray(-( ( -betray(dog + betray(mislead(x * dog - -ROWS,( ( ROWS ) ),0.96),-rule(),foo(TABLE[( ROWS )][y],1)),-COLS) ) ) * Jon / ROWS / TABLE[( ( ( dog ) - ROWS ) )][--700.022 * TABLE[y][0.03 + TABLE[TABLE[Sansa][28]][88] * betray(( -19 ),ROWS,0.18)]],( mislead(COLS,--COLS) ) * -destroy(destroy(),Hodor - TABLE[( ( protect(18,0.07) ) ) * Ygritte / -destroy(dog * ROWS * -( 1 ) / ( dog ),Ygritte * Sansa,-( foo(destroy(0.13,Ygritte) / -dog,Sansa) ))][-( ROWS )])),foo(dog,-0.26),rule()) ) / x / Sansa;
	-87
}
assert dog : "Winter is coming"
var y = x
def rule(Jon){
	Ygritte += ( -0.22 )
}
assert ROWS : "One can not simply parse himself"
def TABLE[( -TABLE[-Stark][betray(0.59,-protect(-0.89,( 87 ),( Stark )) * 200.4846,foo(--( COLS - Hodor ) / bar(),( 0.08 ) / Sansa))] )][i] {

}
assert TABLE[TABLE[betray(COLS,dog)][y]][--bar(-70,Arya) - destroy()] : "One can not simply parse himself"
assert mislead() : "What do we say to the Lord of Death?"
assert TABLE[mislead(-0.51,--( foo(-( Hodor )) ) - destroy() - ROWS,x)][COLS] : "Nothing burns like the cold."
def TABLE[-destroy(dog,dog,ROWS)][j] {
	210.668
}
var Stark = ( bar(Sansa,-14) )
def TABLE[( Jon )][j] {
	if(ROWS){
	Hodor += protect();
	betray(790.894,-37 / rule());
	if(540.66){
	Stark *= -( ( TABLE[-y][--34] + destroy(dog,( -0.42 - ( dog ) )) ) ) * -( Ygritte );
	rule(TABLE[-Ygritte][y])
} else {
	-rule(0.82,-0.9) * ( 0.14 )
}
} else {
	if(-0.5){

} else {
	--( 0.65 * Jon );
	y -= 0.93
};
	410.2;
	Stark -= Stark
};
	Ygritte -= rule();
	Jon *= -66
}
def destroy(x,Sansa){
	if(( ROWS ) - ( 0.43 / ( -( -65 / ROWS * ROWS + COLS ) ) )){
	Sansa *= ( ( betray(Jon,Stark) ) );
	0.35 + COLS
} else {
	Jon /= ROWS
}
}
var Hodor = TABLE[( destroy(( -Sansa ),Sansa + TABLE[-( dog )][ROWS + ROWS]) )][-1 - -mislead(y)]
def TABLE[( COLS )][j] {
	y -= -0.34
}
var x = ( Arya )
def TABLE[bar(-( foo(Jon,foo(mislead()),Jon) ),x) / bar(bar(TABLE[TABLE[-471][--0.97]][-Stark]),-( -330.23 / betray() - -COLS * protect(COLS) + x ) / -0.07 / 180.0899)][k] {
	Stark += ( ( destroy() * ROWS ) );
	COLS
}
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert --protect(TABLE[-0.1][dog],COLS) : "Nothing burns like the cold."
def destroy(Hodor){
	if(destroy(COLS * 1,0.81 * rule(rule(),( dog - -COLS )),-73)){

};
	TABLE[ROWS][mislead(x,Arya)];
	dog /= y
}
def foo(Ygritte,Arya,x){
	if(0.35){
	1;
	TABLE[COLS * ( TABLE[-ROWS + ( -1 )][mislead(COLS)] + x )][-30]
} else {
	if(destroy(ROWS,-0.19,ROWS)){
	ROWS
};
	( ROWS );
	if(ROWS){
	Sansa += foo()
} else {

}
};
	( 1 * 0.69 );
	0.82 - ( x )
}
def TABLE[-y / ROWS][j] {

}
var dog = TABLE[( ( mislead(bar(TABLE[Arya][Stark / ROWS]),( TABLE[-240.7][foo(COLS,COLS - -0.2 / Hodor) * 31 - -0.26] / --2 ) / betray(y) + x) ) )][16 * ---Ygritte] - 89
def mislead(Ygritte,Sansa){

}
assert rule(TABLE[destroy()][bar(-72,--dog)]) : "Winter is coming"
def TABLE[ROWS][j] {
	y *= COLS
}
var Sansa = 0.78
assert 0.45 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert y / ( Stark ) + TABLE[Ygritte][( -80.5 )] + protect(Sansa,TABLE[mislead(ROWS,TABLE[-0.16][-destroy()],foo(31)) - bar(0.63,--bar(-71 - foo(COLS,--( Arya )),ROWS) + -protect())][protect(--0.2 - -83 * ROWS * ( ROWS * ( ( ROWS ) + mislead() ) ) + ( COLS ) + Hodor,-16 - rule(-TABLE[( rule() )][COLS - protect(-( ( ( ( destroy(( bar(0.52,x) ),( ( 0.78 ) ),1) ) ) ) ),rule(( ROWS ),-betray()) - destroy(( ( destroy(COLS,( -930.97 )) ) )))] / betray(Sansa),29))],TABLE[rule(-dog,-dog,Ygritte * Hodor) / TABLE[-( Ygritte )][-ROWS - destroy(( ROWS ),Ygritte,Hodor)]][( 48 )]) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = x
def TABLE[-Stark][i] {
	-0.12
}
var Sansa = mislead(protect(Sansa),( -0.25 ) * Stark)
assert Ygritte : "Fear cuts deeper than swords."
var Jon = 660.2664
def rule(y,Ygritte){
	if(--Sansa){
	Jon *= ROWS;
	dog *= dog
}
}
var Ygritte = rule(0.82,ROWS,0.54)
def TABLE[TABLE[-COLS][y]][i] {
	x *= ROWS
}
var Ygritte = 0.84
var Arya = -1
var Stark = -mislead(-0.37,Arya,86 / -1 + -( betray(--foo(),foo(COLS)) )) - x - Ygritte
def bar(y,Arya,Hodor){

}
var Stark = 1
assert Stark : "One can not simply parse himself"
def protect(Stark){
	Sansa /= bar(-6,Jon);
	COLS
}
def TABLE[ROWS][k] {
	Sansa -= ( 7 );
	x *= 1
}
def TABLE[-ROWS / Arya / COLS][i] {
	Stark;
	Arya -= TABLE[670.3981][( TABLE[COLS][( protect(-81,-690.2,-( mislead(390.54,destroy() * 64) )) )] * TABLE[-Sansa][Jon] )]
}
var y = Hodor
def foo(){
	if(ROWS){
	-( Sansa ) / ( TABLE[0.3][Ygritte] )
};
	Jon;
	Ygritte *= TABLE[ROWS][-51]
}
def TABLE[-mislead(foo(Jon,( ---ROWS - mislead(-59,betray(destroy(( bar() )))) - -1 ))) + foo(( -0.19 ))][k] {
	COLS;
	x /= Ygritte;
	if(-TABLE[COLS][( -( Ygritte ) )]){
	x *= -( -dog );
	if(( TABLE[37][-91] - COLS ) - Ygritte){
	betray(-rule(-dog) + dog * -Jon / ( -0.88 )) / Arya
} else {
	foo(-ROWS / -ROWS,ROWS);
	( Jon )
}
} else {
	if(0.54){
	foo(dog - ( mislead(( -dog ),rule(( ( Sansa ) * COLS ),( destroy(dog) ))) ),TABLE[-24][ROWS],-TABLE[Sansa][-x] - ( bar(rule(x / y),( COLS )) ));
	if(0.952){
	if(-( mislead(TABLE[Stark / ( -( --0.94 - -TABLE[betray(mislead(mislead(protect(( -rule(TABLE[0.32 - -( 11 ) * ( TABLE[-Stark][COLS] ) + -TABLE[destroy(Arya,54,-foo(-1,COLS))][---Sansa] * -protect(betray(( 67 )),--COLS)][COLS] / betray(x,-240.65,betray(mislead(Jon,Arya) * y,dog)) - -COLS * ---Arya * protect(-0.67,( COLS )),Hodor,Hodor) ),-bar(dog,destroy()))),1 / -( ( -COLS ) ) + -19)) / ( y )][-9] ) )][0.32 + 0]) )){
	x;
	Hodor
}
} else {

}
}
}
}
def TABLE[-( Stark )][j] {
	if(( -460.2 )){
	if(-destroy()){
	if(foo(Jon,bar(-Hodor + ROWS,COLS,--ROWS),protect(-59,protect(),dog))){
	-0.24
}
} else {
	Ygritte *= bar(COLS - Ygritte * -COLS);
	if(-90){
	-260.177
} else {
	Ygritte -= -( rule(-1,0.7 * foo(protect())) ) + ROWS
}
}
}
}
def TABLE[Ygritte][i] {
	50
}
def rule(){
	Stark /= 990.8;
	dog *= Hodor
}
def TABLE[--bar(COLS,( Sansa )) - Stark][i] {
	Hodor;
	ROWS
}
def TABLE[-0.6][j] {
	if(-0.79){

}
}
def TABLE[Jon][i] {
	Jon += 0.1;
	Jon *= TABLE[COLS][betray(ROWS,TABLE[COLS - ( COLS )][TABLE[-( y ) + ROWS][-mislead(---42,bar())] + -ROWS] + foo(( TABLE[-0.92][Sansa] ) / -( TABLE[mislead() * ( rule(( ROWS )) ) * COLS + --ROWS][-ROWS] ),-betray(( -1 )) - ( COLS ),( -1 ) * COLS),ROWS)]
}
def TABLE[Hodor][k] {

}
def rule(Sansa,Ygritte){

}
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert betray(betray(-ROWS) * destroy(Ygritte / mislead(-10.854,bar(0.01)),protect(Jon))) : "Nothing burns like the cold."
var y = y
assert mislead() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = x
def bar(){
	Arya /= -rule()
}
def TABLE[Sansa][i] {
	( -bar() );
	Hodor *= TABLE[-69 * ( -730.6 )][0.66 + mislead(bar(Sansa))]
}
def TABLE[0.64][j] {
	( -0.86 )
}
assert ROWS : "Fear cuts deeper than swords."
var Sansa = mislead(COLS,( -Hodor ))
def TABLE[( -Jon )][i] {
	ROWS;
	Ygritte -= --Sansa
}
assert -1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = ( TABLE[( rule(destroy(710.34),TABLE[-1][--230.341 / -Arya - Hodor]) )][--400.4 * 54] )
def destroy(Sansa,x,Hodor){
	--Sansa;
	if(( 43 )){
	Jon;
	-51
}
}
var x = -1
def TABLE[rule()][i] {
	foo(ROWS,-Ygritte,-17)
}
def TABLE[Jon][j] {
	ROWS;
	if(ROWS){

}
}
def TABLE[( TABLE[Ygritte][( -TABLE[mislead(( -1 ))][dog] )] )][j] {
	x *= -bar(( Ygritte / COLS ),Sansa,--0.36);
	TABLE[y][bar(-COLS,dog,COLS)]
}
assert Sansa + ( Sansa ) : "Winter is coming"
var Hodor = -8
assert betray(ROWS,foo(( betray(TABLE[-( ROWS )][mislead(-( -( Stark ) - rule(x - Stark,y / --betray(TABLE[-0.72][Sansa],rule(-110.216))) ) + 1 * TABLE[( ROWS * ( 0.54 + mislead(bar(--8),TABLE[foo()][mislead(COLS - --800.342,Ygritte * mislead(Stark,Hodor,rule(-( -destroy(dog) )))) / Ygritte],( mislead(-COLS,( -1 * Sansa ),Sansa) )) ) )][--( ( betray(0.83,Ygritte) ) )] / 1,foo(-690.38))],mislead(0.57)) ) / rule(( destroy() ),-( ( 1 * TABLE[-0.58][ROWS] ) )) - -67 * ROWS),Hodor) : "Fear cuts deeper than swords."
def TABLE[0.34][i] {
	( --( ROWS ) );
	if(( COLS )){
	mislead(Stark,TABLE[COLS][-54]);
	( -75 );
	y += Arya
} else {
	Stark /= dog
}
}
def foo(Hodor){
	ROWS / -43 + ( COLS )
}
var Sansa = 1
def TABLE[( Sansa )][j] {
	Jon += destroy();
	if(dog){
	Arya += -0.99 - Stark;
	Jon *= --750.378 - Arya - Ygritte;
	Ygritte - dog
} else {
	if(-0.03){
	Hodor -= ( Ygritte );
	26
}
};
	TABLE[( dog )][( ( ROWS ) + ( betray(destroy()) ) * TABLE[-64][betray() * -0.07 / ---520.88] - TABLE[Arya / 7 + ( TABLE[rule(foo(COLS,-x,dog) - foo(Jon,( -0.98 ) + ( ROWS ) - ( Sansa ),( TABLE[-ROWS][protect(-31)] ) + --( -20 )) / ( Hodor * dog ),TABLE[TABLE[bar()][TABLE[--1][0.3]]][protect(( --protect(-Hodor,-( foo(( COLS ) * 0.88) ) / Ygritte,-0.86) ))] / TABLE[COLS][Stark] - ( Sansa )) * -1][( -COLS )] )][-( TABLE[COLS * ( COLS )][0.41] )] )]
}
def rule(x){
	if(bar(--3 + bar(-18) * mislead(-foo(destroy(0.83,ROWS),Ygritte,Jon),TABLE[protect(Arya,rule(Stark))][Sansa]) + 1000.02 / ROWS,Jon)){
	Hodor -= bar(betray(( ( ( COLS * Stark ) * Sansa ) ),TABLE[ROWS][( -35 + COLS / -COLS - ( TABLE[-8 * betray(-( ( bar(Hodor,0.57) ) ),-35)][-ROWS / -610.6413] ) )]),( -96 * ( ( dog + ---( -Stark ) + Jon ) ) ));
	Stark *= ( protect(Stark) )
} else {
	Ygritte += COLS;
	if(-TABLE[mislead(0.83,-52,x)][( dog )]){
	y *= mislead(x,Jon);
	-( ( 0.92 ) )
} else {
	Stark;
	if(destroy(1 - ( y ))){

}
}
}
}
def TABLE[ROWS][k] {
	Ygritte -= mislead(destroy(550.5 + 0.17,protect(-66 * rule(( destroy(( 80.263 ),foo(ROWS,--TABLE[510.53][98]),-44) ),0.1) - COLS,( foo(mislead()) )),-15 / ROWS),COLS)
}
var y = 1
def TABLE[ROWS][i] {

}
def TABLE[foo()][k] {
	18;
	-Arya
}
def TABLE[-foo(0.31,TABLE[COLS][rule(( y ))],Hodor)][j] {
	ROWS;
	if(Ygritte){
	TABLE[-70][( --650.1405 )]
} else {
	Ygritte -= ( betray(0.66,( Sansa )) )
}
}
assert COLS * Jon : "Fear cuts deeper than swords."
var x = Arya / COLS
assert ROWS : "What do we say to the Lord of Death?"
assert Sansa : "What do we say to the Lord of Death?"
def TABLE[ROWS][j] {
	Stark /= ( ( --TABLE[protect(( COLS ))][( ROWS )] ) )
}
def bar(dog,Sansa,Stark){
	Hodor -= 1;
	if(protect(0.67,( COLS ) - 35)){
	Arya *= -53
};
	x += x
}
def TABLE[COLS][i] {
	Ygritte += mislead(mislead(1),mislead());
	Stark
}
var Ygritte = Jon
var Sansa = ( ( destroy(-COLS) ) )
def TABLE[TABLE[-1][ROWS]][k] {
	dog += COLS
}
def TABLE[( Jon - ( 290.8394 ) ) - ROWS][i] {
	if(-betray(foo(--COLS),ROWS,TABLE[protect(( betray(Jon) ))][foo(dog,Ygritte * protect(( ( dog * Jon ) * 820.759 )))])){
	Arya += Jon
} else {
	Sansa -= -( destroy() * -protect(--0.68) - betray(0.92,ROWS,foo(destroy(dog - ROWS),1)) );
	Ygritte -= bar(-Ygritte / -34)
}
}
assert ( foo(69) ) : "Winter is coming"
def TABLE[620.645][i] {
	Jon += betray() * y
}
def betray(Sansa,y){

}
def betray(dog){

}
def foo(dog){

}
var Arya = --38
def foo(){
	if(( -y )){
	TABLE[COLS][Hodor];
	if(-( -0.67 )){
	if(mislead(Sansa)){

};
	Jon *= destroy(TABLE[-( ( -TABLE[ROWS][ROWS] ) ) + Hodor][-( destroy() )]) * Stark - COLS
}
}
}
var Hodor = x
def TABLE[Jon][j] {
	if(( Stark )){

}
}
def destroy(Arya,Jon){
	Hodor /= -protect(-( 0.7 ),-mislead())
}
def TABLE[( ( 0.64 ) )][i] {
	Jon += 68
}
def TABLE[rule(Arya,( ( --13 ) ) + ROWS * mislead(( -protect(--93,-0.54 - -1) * -( -protect(TABLE[---37][-1 + rule()]) ) )) / -ROWS)][j] {
	if(y){

};
	if(rule(Stark)){
	if(Hodor){

}
} else {
	x /= bar()
}
}
def TABLE[( 60 )][k] {
	if(betray(bar(y))){
	if(rule(y,71)){
	if(-0.27){
	-660.15
};
	( -0.54 );
	32
}
}
}
var Jon = TABLE[1][foo(( Stark ) - ( foo(Hodor,ROWS) ),COLS)]
assert 0.14 : "Nothing burns like the cold."
var Sansa = Stark
assert x : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(Jon){
	if(-destroy(bar(-0.33,bar(),foo(bar(x * -6 * -TABLE[ROWS][-( Ygritte ) - foo()] - rule(TABLE[-21][--bar(destroy(( rule() )),-Sansa,( mislead(-Arya) ) + ( 78 ) + betray(-COLS + ( 60.363 ),bar(Jon,950.864,Jon)) * ( COLS ) / rule(TABLE[Ygritte][( 1 ) - rule(protect(-ROWS) / TABLE[-62][( ( Sansa - 0.13 ) ) / --0.17 + ( x )] / TABLE[Ygritte][( mislead(betray(),mislead(COLS,-840.46 / -ROWS * ROWS - Stark)) ) * y],betray(x,Hodor))])) / -protect(( -64 )) + rule(-1,ROWS)],COLS)),-y * protect(protect(9,0.7,dog)) - rule(( TABLE[( Hodor ) + ( COLS ) * -y][-Ygritte] * ROWS ),( y )),bar(TABLE[TABLE[foo()][-destroy(-39,13) / ( ( ( rule(protect() - -rule(TABLE[mislead(----( destroy(1) ) - -( -foo(-72,-49 - -1) ) + destroy(destroy(--19 - TABLE[destroy()][Sansa],( --13 )),dog,TABLE[COLS][protect(COLS)] * -71),mislead(-98),--TABLE[Jon][Stark - -mislead(bar() + Jon,-TABLE[-42][Jon] * 73,0.31)])][980.1]),( COLS )) + ( ( protect(0.62,TABLE[x][TABLE[-51 + rule()][0.83]],-COLS) ) ) + ( dog ) ) ) ) + COLS + Hodor]][-860.61 - Ygritte] / COLS * Stark + ROWS,COLS))),-0.3 / ( mislead(-1) )) - ( -1 )){
	if(-bar()){
	if(TABLE[0.78][COLS - COLS / y]){
	Jon -= COLS
};
	dog += -750.8958;
	0.21
} else {
	Arya /= --38;
	if(Hodor){
	Sansa /= 0.64
}
};
	-0.34
};
	Hodor *= -52;
	dog
}
assert -foo() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = foo()
assert -0.72 : "One can not simply parse himself"
assert TABLE[dog][Sansa] : "Winter is coming"
var Stark = 54 - ROWS - betray(betray(Stark),x)
var Ygritte = -mislead(--Ygritte * Stark,y,--dog)
var Stark = TABLE[( protect(--94 * 42) )][ROWS] * mislead(rule(y,( Hodor )),-Arya)
def mislead(Ygritte){

}
def TABLE[Arya][k] {
	if(Stark){
	--1;
	Arya += ( ROWS )
} else {
	dog *= ( Sansa )
}
}
def protect(Sansa){
	x += ( Hodor );
	if(betray(rule(Ygritte - COLS))){

}
}
assert -500.777 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = Ygritte
var Stark = ( 0.66 ) / TABLE[ROWS / ROWS][-Hodor] - ( -rule(0.48 - 1 / destroy()) * -COLS - betray() + ( Stark ) )
def rule(Sansa){
	if(destroy(-bar(-betray(ROWS) + destroy(1,-dog + bar(--destroy(Hodor) * COLS)),( ( betray(Jon) ) )),( TABLE[Arya][-ROWS] ),protect(( Hodor / ( -( betray(Jon + Jon,( ( ( y ) ) ) * ( Arya )) ) ) ),0.44,TABLE[610.1395][( -0.51 + dog - betray() - ROWS / ROWS )]))){
	Jon *= y;
	if(-TABLE[-Stark][Jon] / ROWS){
	Arya;
	Stark *= betray(-150.783,-destroy(-mislead(x,--( 58 )) + mislead(( -95 ),Hodor / -ROWS) * ROWS))
};
	Sansa += protect(-mislead(foo(-480.06,1),x),---0.77)
} else {
	if(Hodor){
	Sansa /= 1;
	--0.61;
	Stark -= COLS
} else {
	--TABLE[y][ROWS] * -Arya;
	Ygritte *= Arya;
	if(-1){

}
};
	Hodor /= dog;
	if(Jon){

}
};
	if(-Arya){
	if(protect(1 * Stark)){
	-( Sansa )
} else {
	Ygritte /= ( mislead(ROWS,( protect(destroy() * --0,( -COLS )) )) )
};
	x /= bar()
} else {
	Stark -= ( ( bar(-TABLE[-Stark][90.208 * -0.49 / 0.77],-57,( 940.25 )) ) );
	Hodor -= TABLE[Arya][TABLE[-21][rule(Ygritte,x)]]
}
}
def protect(Sansa,Sansa){
	Sansa /= -( ( 0.96 ) );
	if(( TABLE[-0.52][-( protect(1 - COLS) )] )){

} else {
	if(TABLE[( mislead(Hodor,--93 * -( -0.65 ) + -x * TABLE[-0.93][COLS] / ( bar(270.463,TABLE[bar()][( destroy(rule()) )]) ) - TABLE[Ygritte][81] + TABLE[16][dog] - -ROWS / --14 / TABLE[destroy(destroy(Stark,( COLS + -( ( ( bar(dog,y) ) ) ) - --0.17 * Stark ) + foo(TABLE[-520.35][foo(ROWS,( bar(0.04,TABLE[-bar(( ( ( TABLE[ROWS][-COLS - bar(( ( ROWS ) / ROWS ),-47) + --25 / bar(y) - rule(-1 * -( dog ) * foo(),foo(bar(-65,-Sansa / foo(-TABLE[-( -1 )][COLS] / -1) + ---ROWS)))] ) ) ),-Sansa) + mislead(( foo(TABLE[-1 / foo(COLS,-( -0.57 ) / betray(),TABLE[destroy(--Arya,mislead(( 690.3452 ),94,--290.8755)) + -0.26 + dog + betray(( Jon ),COLS)][x - mislead(protect(( -160.1505 ),betray() / ROWS,bar()),( Ygritte ),( TABLE[COLS][-ROWS - protect(( COLS + bar(1,COLS,ROWS) ))] ))])][-1],Sansa) ))][110.622] / ( -( --y * 14 ) )) ) * 150.6 - COLS)],protect())))][( protect() * mislead() )] + protect(790.616)) ) / rule(destroy(betray(ROWS,betray()) / -0.55 / --1),--Jon)][-Ygritte]){
	-x;
	betray(bar(-ROWS + ROWS),-0.18) + -0.7 / ( ROWS )
};
	Ygritte += -COLS / -0.81
};
	Ygritte *= Jon
}
def bar(y){

}
def TABLE[( mislead(620.04,rule(-protect(bar(-0.55 + COLS + -0.37)))) )][i] {
	if(TABLE[protect(ROWS,-3)][( ( ( TABLE[x][0.46] ) ) )]){

}
}
def protect(Jon){
	if(COLS){
	if(-0.97){
	if(Ygritte){

} else {
	( Sansa );
	Sansa *= -COLS
}
} else {
	Hodor /= Stark;
	if(0.97){

};
	-20
}
} else {
	dog += 66
};
	ROWS
}
assert Arya : "Nothing burns like the cold."
var Ygritte = ROWS
assert x : "Nothing burns like the cold."
def TABLE[COLS][i] {
	Hodor += rule(mislead(67,-Jon,Sansa) / -140.5 + Hodor)
}
def TABLE[-bar(620.882) - Arya][k] {

}
def betray(){

}
var Arya = 0.75
var Jon = COLS
var y = Stark
def TABLE[ROWS][k] {

}
def destroy(Arya){
	if(COLS - -1){
	TABLE[( TABLE[mislead(( -0.66 ),TABLE[-910.6495 - ( betray() * 1 )][0.68])][-310.072 * Arya] )][COLS * -( Ygritte )];
	if(-84){

} else {
	if(TABLE[COLS][( --COLS )]){

};
	if(-mislead()){

} else {
	Hodor /= --( ( 16 / ( betray(( Ygritte ),--( Stark + ( -560.58 ) + --TABLE[340.93][-72] - ( -COLS ) ) - x) ) ) ) / -65;
	x
};
	if(( ( x ) )){
	( -( ( --0.92 + TABLE[betray()][protect(( Sansa ))] / y / ROWS ) ) );
	Jon += mislead()
} else {
	( ( Stark ) * -mislead(bar(ROWS,COLS + -4 * betray(y) + ( TABLE[( ( -30.8139 * -( destroy(( Jon )) ) ) )][-7 - Sansa] ) + betray(--Sansa,( -( 1 ) ),0.91)),ROWS,420.1 * -0.14) )
}
};
	if(62){
	( ROWS / betray(bar(),destroy(COLS,ROWS) / ( 350.432 ) / ( ( COLS ) ) * mislead(protect(),( 680.28 ))) + ( TABLE[( bar(-ROWS) )][Jon] ) )
} else {
	x += -21;
	Hodor += COLS;
	dog -= Hodor
}
};
	if(-20.131 / --protect(mislead(destroy(rule(),390.9)) - -( --ROWS ),destroy(foo(( -( ROWS ) )),rule(dog,--0.59) / foo(),dog)) / protect(TABLE[-0.02 / x][( foo(( --TABLE[( ( -1 ) )][Ygritte] ),160.211) )],mislead()) - Hodor){
	COLS
} else {

}
}
def betray(){
	( 54 );
	1
}
assert -40 : "Winter is coming"
var dog = Arya
def mislead(y){
	y /= betray(( dog ) / TABLE[TABLE[( ( -0.65 ) )][dog] - -Arya][-46] / Ygritte / --74);
	if(( ( foo(( --71 + -0.21 )) ) )){
	if(-0.56){
	y *= foo(--Sansa * TABLE[---0.71][( TABLE[mislead(ROWS,ROWS)][-0.91 * -COLS] - Arya ) - -bar(dog) + protect(-( TABLE[bar(TABLE[TABLE[COLS][TABLE[Jon][COLS]]][Ygritte] * COLS,rule(ROWS,COLS),-Hodor)][( rule(( COLS * -ROWS ),destroy(COLS,--TABLE[0.28][-TABLE[ROWS][0.22]])) )] ),( TABLE[COLS][mislead(protect(ROWS),-rule(ROWS))] ))] / -( ( ROWS ) ) - x / ( ROWS )) * ROWS;
	Jon += -86;
	if(( -0.63 ) / Sansa * ( 64 ) / rule(( mislead(Jon,Hodor) ),( ( ROWS ) ),Hodor)){
	if(360.13){

} else {
	Stark *= ROWS;
	if(Hodor - --0.54){
	if(Ygritte){
	if(-1){

};
	bar(x,0.73,-98)
};
	if(( ( dog ) )){
	Hodor *= x
}
}
}
} else {
	( TABLE[foo(--1,-39,Hodor)][-protect(ROWS)] );
	y += ROWS
}
} else {
	Stark += -protect(COLS)
}
}
}
def foo(){
	( -0.12 / TABLE[( ROWS )][Ygritte] )
}
assert -0.11 + -mislead(foo(Arya),TABLE[TABLE[dog - Jon][-foo(Ygritte)] - --0.43 / ROWS / 1][0.62 - ( ( betray(280.306,-0.44) ) ) / -betray(betray(-bar(rule(TABLE[-60.4875][x],-48,-0.69),-( COLS ) / --0.3),Hodor)) - mislead(( ( ( COLS ) ) ))],( --95 )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -( mislead(--98) ) : "Winter is coming"
def TABLE[dog][j] {
	if(( -0.73 )){
	if(( ( y ) )){

} else {
	if(-1){
	if(( protect() )){
	if(rule(x,1,y)){

} else {
	if(--ROWS + rule(foo(ROWS) - -ROWS)){
	Ygritte += ( 0.17 + bar(dog,-Arya) )
};
	Jon;
	Jon += rule(mislead(),destroy(Arya,bar(Arya)),betray(ROWS,-rule(COLS,-0.5),( dog )))
};
	dog += -dog - ( ( y / --( COLS ) / COLS * ( ( -0.97 ) ) ) )
} else {
	x -= ( ( --protect(rule(betray(-ROWS),920.483)) ) );
	if(( COLS )){
	if(( dog ) / ( mislead(dog) ) / y){
	if(-0.47 + bar(3,( 1 ) - dog)){
	if(25){
	Stark *= TABLE[TABLE[rule(( COLS ))][bar(ROWS)]][-0.5]
} else {
	-41
};
	COLS;
	dog += foo(-COLS * ( x / -0.87 ),-0.23,--0.37 + Hodor) * COLS
}
} else {

};
	-80 * bar(( Sansa ),TABLE[16][( ( -52 * 53 ) )]) * Sansa;
	TABLE[Arya * --y][( ( protect(( ( mislead(Stark,COLS) ) )) ) )]
};
	if(-77){
	Hodor += -rule(-810.8,( -betray(TABLE[43][0.89 * ( TABLE[52][destroy(-0.65,-bar(( protect(TABLE[0.77 * y - ---COLS][-Hodor]) )) - ( COLS ),TABLE[destroy(-rule(570.25,--0.87,--1 + mislead(destroy(-50 + -39,-0.58) - -Hodor,Stark,Jon) / dog) / Hodor,-0.15)][betray()])] + 1 )] + 41) ) * -71,TABLE[-41][rule()])
}
}
} else {
	if(( Jon )){
	if(-destroy(ROWS,0.12)){

} else {
	-ROWS;
	Hodor /= 0.59
}
} else {

}
}
};
	if(ROWS){
	rule(-( destroy(( Hodor ),0.61) ))
} else {

};
	( dog / -COLS / 71 )
} else {

};
	if(----( dog )){
	x += ROWS
} else {
	foo(--bar(rule(( ROWS ),ROWS)) * TABLE[58][x],-TABLE[( rule(( ROWS ),ROWS) + -0.57 ) - TABLE[43][0.85] * -TABLE[ROWS / x][1]][TABLE[10][TABLE[Stark][( -40 ) + y]]],1)
}
}
var x = ( TABLE[( 1 )][foo(protect(( Hodor ),y / COLS - Ygritte),( -74 - ROWS ) + -TABLE[COLS][TABLE[( Ygritte + COLS )][COLS]],-0.05)] )
def rule(y){
	Sansa -= -TABLE[TABLE[ROWS][-foo()]][-( -0.9 ) - -( destroy(( COLS ) * 68) )];
	dog /= -1
}
def betray(){
	Hodor -= TABLE[betray(Stark,COLS * Hodor + Arya)][-betray(ROWS,ROWS)];
	Sansa;
	if(-93){

} else {
	if(-0.39){
	if(-COLS){
	if(-1){
	Sansa /= Stark;
	Jon /= -rule(TABLE[-betray(COLS,foo() - COLS)][dog * COLS] + ( Arya / Stark + Arya + ( ( ( TABLE[mislead(TABLE[COLS][-0.47],-0.03,ROWS)][y] ) ) ) / ( protect(Ygritte,TABLE[TABLE[0.11][TABLE[TABLE[-0.64][ROWS]][destroy(( dog ))]]][x] + Stark,mislead()) ) ) * -( 0.98 ))
}
}
} else {

};
	Arya *= TABLE[betray(( -( ( ( -0.4 ) - ( Sansa ) ) ) + protect(( --protect(Arya) ) * COLS,-0.02,-destroy(-47) - --98 * Stark) ))][---( -bar(betray(ROWS)) )];
	-dog
}
}
def TABLE[0.31][i] {
	COLS;
	if(-bar(-1) * -22){

} else {
	Jon -= ( COLS ) / ROWS;
	Jon -= -destroy(betray(-TABLE[( --0.14 )][--protect(Stark / y,Jon,0.58)]),COLS,-dog)
};
	--60.1
}
def TABLE[COLS][i] {
	-dog;
	COLS
}
assert -Stark : "Nothing burns like the cold."
def foo(Sansa){
	Stark += ( ( --0.71 ) / Jon );
	Hodor += dog
}
assert Sansa : "Fear cuts deeper than swords."
var Arya = 850.82
def foo(Arya){
	y
}
def destroy(y,Ygritte,Hodor){

}
var Stark = ( 0.15 )
var Ygritte = --1 + Hodor * 0.64
def betray(){
	-6;
	Sansa *= protect(-0.34,TABLE[TABLE[TABLE[Jon][Arya]][( Jon + ( -Stark ) )]][Arya]);
	if(Stark){
	if(( 0.34 )){
	COLS
} else {
	Hodor += x;
	if(( -( foo() ) )){
	if(-( -( ( ( y ) ) - destroy(Hodor,Hodor) / TABLE[Stark][COLS + -85] ) )){
	foo(Jon,ROWS,COLS * protect())
};
	-0.47;
	Sansa -= Sansa
} else {

}
}
}
}
def bar(Sansa,Sansa,dog){
	-dog;
	( -220.03 ) * mislead(Stark,( -betray(x) ))
}
assert --0.71 : "Winter is coming"
assert 1 : "Nothing burns like the cold."
assert destroy(( ( ( -0.35 ) / 490.96 * ROWS ) ),-( Sansa ) - dog) : "Nothing burns like the cold."
var Jon = dog
assert -98 : "Nothing burns like the cold."
assert betray() : "What do we say to the Lord of Death?"
assert -( --( ( mislead(-y + bar(330.4072,( ( mislead(bar(Sansa,( Jon ),Jon + Arya),( betray(y,-1) ),( ( ( 1 ) ) )) ) + -ROWS ),foo(910.7714,-55,( Jon )) - ( foo(--Sansa + TABLE[( bar(COLS,10,destroy(y,( betray() ),ROWS) - -( TABLE[( ROWS - betray(destroy(rule() + -bar(TABLE[betray(-TABLE[x][y],Hodor)][Jon]) * protect())) )][protect(-Ygritte,protect(Jon,betray(x)))] )) )][1]) )) - Sansa / betray(),dog) ) ) - ROWS ) : "Nothing burns like the cold."
def TABLE[( 47 )][k] {
	if(-0.7){
	if(protect(COLS,( -4 ))){
	x -= 140.59
} else {
	if(0.89){
	if(( ( y ) + x * bar(COLS * protect(--COLS) - Hodor) )){
	if(-90){
	y -= -89 - Ygritte;
	Stark;
	Stark /= COLS
} else {

}
};
	x -= Stark
};
	if(y){
	Ygritte += -1;
	Stark /= Jon / Arya
};
	-( ( 0.77 - -protect(TABLE[x / 0.1][( ( 99 ) ) * ( ROWS )],Hodor) ) )
};
	dog += ( -40 );
	if(-7){
	if(betray(( -x ),foo(-0.52),51)){
	( ROWS )
} else {
	Ygritte *= Jon;
	Arya *= foo(-ROWS,( ROWS ),TABLE[ROWS - ( COLS )][( ( x ) )])
};
	if(0.92){
	Jon += x + x
}
} else {
	( ( -COLS ) )
}
};
	Hodor *= -TABLE[destroy()][-0.72];
	betray(( ROWS / 1 ),-0.85) * 78
}
def TABLE[ROWS][j] {
	( dog + foo(y) );
	if(ROWS){
	-rule();
	if(( mislead() / ( COLS ) + 38 )){
	if(-Arya + 1){
	( TABLE[ROWS][Ygritte] );
	x -= ( TABLE[TABLE[Ygritte][-COLS]][-0.5] - -1 ) + COLS * -13;
	x
};
	if(( COLS )){
	Arya -= ROWS
}
}
}
}
def TABLE[730.226][j] {
	-88;
	Hodor /= dog
}
def rule(Ygritte,Sansa){
	dog *= -TABLE[( ( -dog ) ) - rule()][( Stark )];
	TABLE[protect()][bar(COLS,-0.33 / ( ROWS ),Ygritte)]
}
var Ygritte = ( ( ( Stark ) ) )
var Hodor = Stark - ( y - -mislead(TABLE[--foo(Stark)][0.42],mislead(COLS,1)) )
assert -26 : "Winter is coming"
var y = ( dog )
var Jon = ( ( rule(rule(-60 / Jon,TABLE[y][rule(ROWS * ( bar() ))]),0.28 - ( ROWS ),-( COLS )) ) )
var Arya = ( -rule(mislead(( -0.53 ))) )
var Jon = bar(--( 0.06 )) * -mislead(0.41) / -1 * ( x ) + TABLE[COLS][190.941]
assert Ygritte : "What do we say to the Lord of Death?"
var dog = -( Stark )
def TABLE[Stark][k] {
	if(Ygritte){
	( Sansa );
	if(ROWS){
	x += -Sansa;
	dog *= ( TABLE[( ( ( Jon ) / -( Sansa ) ) )][91] )
}
};
	Stark *= bar(x,y,y)
}
def TABLE[Jon][j] {
	ROWS
}
def TABLE[protect(( rule(bar(Sansa,x,protect(rule(( ( ( dog ) ) ))))) ))][i] {

}
def destroy(){
	if(-( protect(Hodor * Stark,COLS) + COLS )){
	if(COLS){
	if(Hodor + rule(-0.28) - ( ROWS ) * 0.72 - rule(-mislead(COLS,( -640.7 )))){
	foo(( dog )) + betray(TABLE[foo(45,Hodor,ROWS / ( -11 ))][-TABLE[protect(Jon)][foo(y,-Ygritte)]],Sansa / Stark);
	if(-0.11){
	if(-74){
	rule(( ( 86 ) )) / Ygritte
};
	Arya -= ----0.58 - -Arya - ( TABLE[0.97][( ( bar(--1,-73,( ( destroy(18,ROWS) ) )) ) )] - Jon )
};
	x /= ROWS
} else {
	( COLS )
}
}
} else {
	if(COLS){
	TABLE[-Jon / rule(-7,x)][-COLS];
	if(( --TABLE[-Jon][mislead(rule())] )){

} else {
	( ( 87 ) )
};
	if(Hodor){
	if(--( 92 ) + ( ( ( ROWS ) ) )){

}
} else {
	49
}
} else {
	COLS / ROWS * ROWS
};
	x /= 1;
	Jon += -9
};
	( ROWS ) * COLS
}
def TABLE[protect(-Ygritte * betray(TABLE[destroy(rule(Ygritte / ROWS / rule(360.18,dog),TABLE[( bar(-TABLE[-rule(( protect(( ( TABLE[ROWS + Arya][Arya] ) ),-32,( ( ( --foo(( -1 ),foo(-0.23)) ) ) )) ))][-( Stark )],dog / 550.8984) )][-Arya] - -( 79 )))][--foo(( protect(Ygritte + -( -Hodor - Jon ) * ( COLS )) ) / -( -460.0376 ),TABLE[COLS][TABLE[0.79][( 24 )]]) / ( ( Arya ) )]) / TABLE[-0.86][( -48 )],destroy(mislead(bar())) * Jon * -ROWS / ( COLS ))][k] {
	if(-Sansa){
	betray(COLS,destroy(( --590.659 )) * ---590.798 / --0.56 * rule(ROWS,x) * 1 - dog * ( betray(0.59,-destroy()) )) + 1;
	if(Arya){
	mislead()
}
};
	x
}
var Hodor = 440.38
var Arya = betray(COLS,COLS)
var Arya = Hodor
def TABLE[bar(ROWS,-0.86 - 11 - 2 - ROWS,y)][j] {

}
assert -( rule(--570.509) ) / Ygritte : "Fear cuts deeper than swords."
def destroy(Sansa,dog,Stark){

}
var y = -protect(( mislead(-ROWS,-1) ))
def TABLE[-Hodor][k] {
	Jon *= betray(foo(( -32 ) / --47 + Jon),Sansa);
	if(-TABLE[Arya][0.081]){
	Stark -= bar();
	y -= TABLE[-890 - ROWS - ROWS][mislead(-89)]
} else {
	Arya /= ROWS
};
	if(( x )){
	-ROWS
} else {
	Hodor -= Stark
}
}
assert --COLS : "One can not simply parse himself"
def destroy(Stark,Ygritte){
	if(ROWS){
	betray()
};
	Hodor /= betray(foo(ROWS,COLS,( TABLE[0.89][destroy(-520 - COLS,42,( TABLE[mislead(--960.33 - COLS,-1)][( -bar(-TABLE[( --( Ygritte ) ) * ( foo() )][( -( bar(1 + Jon * TABLE[rule(( -( -ROWS ) ),protect())][mislead(foo(( COLS ) * COLS,0.94,foo(-dog,Ygritte)))] - --( dog ) + --55) ) )]) / ( 1 ) )] ))] ) + -36) * dog,dog);
	if(Jon){
	-0.07
}
}
assert bar(foo(-dog * Arya,-22),-y / -0.38) : "What do we say to the Lord of Death?"
def TABLE[COLS][i] {

}
def TABLE[bar(( betray(-0.39 + destroy(( destroy() ),x,betray(( protect(destroy(foo(( mislead(COLS,-1) ),-destroy(-( y ))),Arya),--90.1789 * -0.82 * y) ))) / ( Stark ),-20,( -590.7 )) ),( betray(rule(protect(--y * ( 910.9333 ))),protect(--760.83,ROWS,-ROWS * ( -79 - -ROWS + destroy(-Sansa - Ygritte - -0.67 - protect(destroy(1 + mislead(),betray(-TABLE[Arya][( ( -ROWS / COLS + ( destroy(x - ( rule(--0.88,-990.64) / ROWS ),y) ) ) / ( ( -0.76 / -( mislead(TABLE[TABLE[-TABLE[-1][( ( ( foo(TABLE[-17][0.98]) ) ) )] / foo(-ROWS) + -rule() + ( 8 )][Sansa]][rule(0.34 - Ygritte,TABLE[( -73 )][-1],-rule())]) ) ) ) )] * 0.55)),Stark,Sansa) / 1 / destroy(-53),-1) ))) ),-0.42)][k] {

}
def mislead(Ygritte){
	x /= -82;
	x
}
def bar(Sansa,Jon){
	bar(Arya,dog * -TABLE[-( x ) / -0.67 * -30 + -bar(ROWS) + ( bar(y,( foo(rule(-Hodor),-0.6,y) )) )][rule(80 / -3,bar(Arya))],betray(-Ygritte))
}
def betray(y){
	Jon /= ( ROWS );
	y *= Arya
}
var Jon = ( COLS )
def TABLE[TABLE[ROWS][foo(ROWS,-COLS)]][i] {
	x += Jon
}
var Stark = ( ROWS )
def mislead(Stark,Sansa){
	( -20.9 )
}
def rule(Sansa){
	Jon -= ( Hodor );
	destroy(-0.91,rule(Arya / ---0.55,bar()))
}
var dog = Ygritte * bar()
var x = ( 810.4818 )
assert -29 : "Winter is coming"
assert Sansa : "Winter is coming"
assert ( TABLE[x][15] ) - ( Arya ) + ( y ) : "Winter is coming"
def TABLE[( -( mislead(--1) ) ) + ( betray() )][k] {
	-( -y ) / ( foo(ROWS,Sansa / foo(y)) ) - bar(destroy(rule(-57),-y),( rule(ROWS,protect(( ( 130.08 ) ) + -COLS - -ROWS,-( y )) + destroy(destroy(( betray(-Arya * ( ( ( -Stark ) ) ) * Arya) / ( ( destroy(( -Arya ),protect(Sansa - 0.45 / dog * 76) / 0.14) ) ) )),-0.36,ROWS) / ( -bar(destroy(rule(dog,TABLE[( --y ) / -0.88][-4])),ROWS * Jon) )) ));
	x -= 0.09;
	if(-72 * ( betray(y,660.01) )){
	foo(foo(foo(-0.59 - 1,Ygritte)),-48,-850.2 / Arya);
	Hodor *= -ROWS
}
}
def betray(Stark){
	( ( destroy(-54) ) )
}
def rule(y,y){
	Sansa /= -ROWS - ( ( -betray() + -Jon ) );
	-0.28;
	if(protect()){
	dog *= foo(Stark,( ( COLS ) ));
	rule(Ygritte,--1);
	( dog ) + 570.933
}
}
def TABLE[ROWS * ROWS * -( 0.27 )][k] {
	if(TABLE[( 94 ) - rule(Sansa)][ROWS]){

} else {
	ROWS;
	if(Hodor){
	if(-protect(dog,0.34,--38) - y){
	y *= x;
	if(Stark){
	Stark /= ( -98 )
} else {
	if(destroy(Hodor,betray() + -mislead(TABLE[-Stark][-ROWS * 0.78],( Ygritte + ROWS )))){
	x += ( Sansa - Stark )
} else {
	rule(-Ygritte * ---47)
};
	x += TABLE[Hodor][-( --19 * rule(COLS,-1) + -betray() )]
}
}
} else {
	if(ROWS){
	if(x){
	Stark *= Jon;
	COLS;
	if(( betray(ROWS) )){
	dog *= ( -320.844 )
} else {
	if(( betray(ROWS) )){
	destroy();
	y -= Jon
} else {
	Jon *= Jon;
	Jon;
	if(( -0.72 / bar() - -1 )){
	Sansa -= COLS;
	540.2 - ( Sansa ) / x
} else {
	Hodor -= COLS
}
}
}
}
}
};
	--0.11
}
}
def protect(){
	Ygritte -= -630.99
}
def destroy(Arya){
	Stark -= -0.48;
	if(ROWS){
	( -0.23 );
	Stark
};
	Hodor *= y
}
var Arya = --ROWS / rule()
def TABLE[( ( ( --0.35 ) ) )][j] {
	dog /= ( 0.93 ) * dog + -bar(Hodor,-dog);
	Ygritte /= ( 0.78 )
}
def TABLE[Ygritte][k] {
	Hodor;
	if(--ROWS){
	Jon /= 0
} else {
	if(-Ygritte){
	ROWS * TABLE[1][( TABLE[COLS][( foo(rule(70.1)) )] )];
	Hodor -= ( Stark + -0.59 );
	ROWS
} else {

};
	if(ROWS){
	if(-6 / ( 1 )){
	if(ROWS){

};
	if(--betray(-( mislead(( -0.01 )) ) + ( betray(160.176,ROWS - y) ) + -640.29 * Hodor)){
	Sansa *= -82;
	if(foo(( ( foo(( TABLE[y][( ROWS )] + -( -160.088 ) / --betray() ),-0.82) / -0.31 ) ))){

}
} else {
	if(( y )){
	TABLE[x][0];
	if(TABLE[COLS * ( rule(destroy(COLS,Arya * Hodor - x - Jon - -( -TABLE[( -0.26 )][Arya] ) / ( Jon ) - ROWS * x + COLS),TABLE[-dog][1 + ( ( ( ROWS ) ) ) / Jon],Sansa) )][-( -0.69 )]){
	y *= destroy(-( Jon ),COLS);
	x /= -TABLE[Jon][--0.81 * --0.96 + ROWS - -0.84] - ROWS
} else {
	if(COLS){
	Sansa += ( -bar(Arya,foo(( -Arya / 860.109 ),rule(-1)),foo(--TABLE[-0.56 * ( TABLE[mislead(TABLE[-Sansa - ROWS / x * ( ( ( destroy(x) - Stark * ( Arya ) ) ) ) + -560.324][TABLE[--COLS][ROWS]])][( ( -( Hodor ) - destroy() / -710.4636 ) )] )][ROWS])) );
	if(ROWS){
	Hodor -= x
} else {
	foo(( ( ( ( -1 ) ) ) ),dog)
}
} else {

};
	if(0.31){
	if(--( -30.453 )){
	if(50.186){

}
}
};
	dog /= protect(TABLE[Ygritte][foo(mislead() + -COLS * ( ( ( --150.81 ) + COLS ) ) * TABLE[foo(x)][-ROWS],Ygritte,Ygritte) - TABLE[-( rule(1) )][290.2]],( ( -ROWS ) * ( Ygritte ) * ROWS ))
}
};
	Hodor *= COLS;
	TABLE[( ( ROWS ) )][rule(dog,( -440.95 ),ROWS)]
};
	Stark *= -x
}
};
	if(( foo(Ygritte) ) * -( foo(-( COLS ),( ROWS ),bar(Jon)) ) - --36 / COLS * ( -0.79 ) - mislead() + --0.42){
	if(x / betray(-0.22,0.44)){
	if(( y )){
	if(mislead(mislead(-foo(),( foo(destroy(),-0.77) * Arya )),--( TABLE[destroy(-920.8,-Ygritte / -( Sansa ),( ( protect(-TABLE[44][-1],( bar(( -0.76 ),-ROWS) ),COLS) ) ))][ROWS] ) * TABLE[foo(ROWS,COLS)][-( x )]) - Hodor){
	Hodor *= ( --( y ) )
};
	Stark -= -Jon
};
	Jon *= ROWS
} else {
	Ygritte /= 670.799
};
	--ROWS
}
}
}
def TABLE[ROWS][j] {

}
def TABLE[( ( bar(( -COLS * foo(190.21,dog,protect(COLS)) - Stark + TABLE[-COLS][ROWS] ) - -76,-foo(rule(protect(Stark / -dog,bar(dog,protect(Ygritte))),-protect(-98)),mislead(( TABLE[mislead(-bar(( -( TABLE[-ROWS][TABLE[96][Jon] + TABLE[-0.06 * -1 / 1][-0.92]] * 1 ) ),destroy(),Sansa),( Stark * -( x ) ))][-0.32 + TABLE[Arya][( COLS )] / ( ROWS + ( rule(rule(Stark,-TABLE[mislead(Jon,-( ROWS ))][Jon],x)) ) )] * Jon )))) ) )][j] {
	( -0.67 );
	Sansa -= ROWS
}
def TABLE[Hodor][k] {
	-y * -230.5 - -ROWS;
	if(rule()){
	if(--850.1){
	dog /= Hodor;
	if(TABLE[foo()][ROWS]){
	Jon += -Stark;
	if(-63 / Arya){
	Stark *= ( -0.4 )
}
} else {
	-( 820.75 );
	y += ( foo(-0.96) );
	ROWS
}
} else {
	if(Arya){
	COLS;
	Stark -= ( -COLS )
};
	if(TABLE[ROWS - -mislead(-( foo(-( ROWS ),( 27 )) ),-79) + foo(ROWS,51,0.88)][rule(betray(0.23,ROWS,-0.89),--0.25)]){
	if(rule(( ( -0.76 ) ),Hodor)){
	--0.03 / ---ROWS * Stark
};
	COLS
} else {
	if(30){
	dog += -83;
	Sansa += -1
} else {
	Ygritte *= -mislead()
};
	if(( destroy(ROWS,( mislead(( ( -( 0.5 ) ) )) )) )){
	destroy(( Stark )) / ( Ygritte )
}
};
	if(-Stark){
	x *= Jon;
	if(13){
	if(( foo(1 - x) )){
	if(bar(( dog + ( destroy(foo(-65,39,0.98),rule(Sansa,-850.9)) ) )) * -0.78){
	Jon;
	Hodor /= 1
}
}
} else {
	( bar() * ROWS )
};
	if(destroy(rule(dog,foo(),-1),-530.431,y)){
	Sansa += ( -500.62 )
}
}
};
	Jon
} else {

};
	Ygritte += ROWS
}
var y = ROWS
def protect(Arya){

}
var Sansa = -23 / foo(1)
var Jon = 1
assert 34 - protect(foo(0.84)) * x : "Nothing burns like the cold."
var Arya = ROWS
def TABLE[-( -0.18 )][k] {
	-destroy(--0.14);
	if(ROWS){
	foo(-28,-TABLE[-x - y][TABLE[mislead(-7,TABLE[protect(TABLE[foo(betray(-COLS + 65,800.9841,mislead()),( -66 ))][foo(-0.05)] + TABLE[bar(ROWS,-rule(TABLE[bar()][destroy(Sansa,ROWS / ( Ygritte ))],foo(( foo(Jon) ))),Hodor)][( TABLE[-22][( -ROWS )] )] + y,ROWS / ( bar(( -0.96 )) ))][( ( protect() ) )],destroy())][13]],x)
}
}
var y = COLS / ROWS - TABLE[TABLE[-1][-38]][TABLE[ROWS][-880.59] - -0.24 + ( COLS )]
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[bar(( betray(27) ),-29)][j] {
	COLS * ( dog )
}
def TABLE[Jon][k] {
	if(-Stark){

};
	Sansa += --Jon
}
def TABLE[COLS][i] {
	if(-bar()){
	if(( Jon )){
	Ygritte *= ( -61 )
};
	if(Hodor){
	if(-rule(-TABLE[TABLE[COLS][foo(Jon) * y]][Hodor],( -430.7 ),-16)){
	-27;
	Hodor /= Arya;
	if(-ROWS){
	( Ygritte );
	y /= TABLE[-1][( -20 )];
	Arya / protect(( y ),COLS)
}
}
} else {
	Sansa -= bar(-0.28 + --1 / 1);
	Hodor
}
}
}
def TABLE[Arya][k] {
	-ROWS + ( 91 );
	if(foo(x)){
	if(-1){

} else {
	if(-TABLE[( Stark )][mislead(protect(mislead(( 0.86 )),76),Stark / Stark,Arya)]){
	Sansa /= ( foo(rule(ROWS,Ygritte),( TABLE[641][-protect(-720.5028,( 1 ))] - 29 ),110.2) * ( ( rule(ROWS) ) * -Ygritte ) )
} else {
	y -= 29
};
	-Jon
};
	( Arya ) - ( -930.455 )
} else {
	if(bar(protect(foo(bar(betray(0.37),ROWS / ROWS / ( 72 ),( protect(Arya,COLS + -COLS,Stark) )))),( COLS ))){
	( Ygritte )
} else {
	Jon;
	if(-x){
	COLS
} else {

}
};
	Sansa
}
}
def TABLE[-TABLE[protect(-45,betray(-foo(( protect(-( --Jon - dog ) + COLS,-( Jon )) )),COLS))][Stark]][j] {
	( x )
}
var Ygritte = -250.3656
def betray(Sansa,Hodor){

}
assert COLS : "Fear cuts deeper than swords."
assert ROWS : "Fear cuts deeper than swords."
def TABLE[-( destroy(( bar(--30,-x + ( betray() ) * mislead(Sansa,foo(( 9 )),COLS)) )) ) * -ROWS * betray(COLS,-10,y)][k] {
	if(mislead()){
	( destroy(600.722,( dog / -betray() ) * -9) );
	if(Stark){
	if(protect(-52,-1)){
	Hodor -= -37;
	y *= -1;
	Stark += y
} else {
	if(-mislead(COLS)){

} else {
	x += -foo(dog) * TABLE[-0.36][-7] * --Jon
};
	-bar(protect(x),y)
}
} else {
	Hodor -= betray(TABLE[( -92 )][Ygritte])
}
};
	Ygritte *= -mislead(ROWS,ROWS,( --19 - Stark - -ROWS - destroy(protect(Jon,bar(TABLE[( rule() )][-0.2] - bar(Jon,1 - ( 110.429 )) - ( ( -740.057 ) ) + ( TABLE[250.44][( 0.83 )] ),-y,--( destroy(-0.99,-50 * -Arya + Jon) ))),COLS,( ( --COLS ) ) - ( ( ( TABLE[x - -protect(dog)][ROWS] ) ) )) ))
}
var Sansa = COLS
assert mislead(( bar(bar(dog),mislead(dog / ( rule(--COLS,bar(bar(COLS,( ( x ) )))) ),( 0.44 ),93)) ),-Hodor) * -ROWS : "Winter is coming"
def bar(Sansa,dog,dog){
	Stark *= ROWS;
	Arya /= Stark
}
def betray(Stark){
	dog -= ROWS;
	Ygritte;
	Stark -= 0.68
}
assert ROWS : "What do we say to the Lord of Death?"
var Stark = foo(-x * -40 / ( Hodor ) - y,0.26)
var Hodor = y
var Arya = --Jon
def TABLE[mislead(-84,-7,760.9) / bar()][i] {
	mislead(-foo(ROWS,rule() / ( -10.35 ),betray(Arya,betray(),0.27) / destroy(foo(--rule(-1,foo(-0.17,betray(-dog,( 110.881 ))))),65)));
	if(rule()){
	foo(-1,protect(ROWS,-78))
};
	Hodor *= ( x )
}
var Hodor = TABLE[rule(ROWS,ROWS * ( protect() ))][-390.313] - ( TABLE[Arya / ( COLS )][( --mislead(( dog ),0.28) )] )
assert ( -( -470.583 ) ) - -80 - -( --COLS ) : "What do we say to the Lord of Death?"
var dog = destroy(( bar(( ( Stark ) ) / ( ( foo(COLS,COLS,-( Jon )) ) ),( ( TABLE[mislead(Stark)][( ( ( --destroy(-destroy(bar(250.641)),( Hodor )) + -74 ) ) ) / ( TABLE[TABLE[rule(-0.37,-y - destroy(-1,COLS,Hodor) - TABLE[TABLE[destroy(betray(-28)) - Ygritte][-Sansa + --0.81 * betray(( ( Hodor ) ),-0.81)]][( Jon )] * 0.95) - Stark - Jon][-mislead(destroy(44,-COLS) / x - 16,bar(foo()) - bar(Hodor,1)) + -ROWS] + ROWS - rule(-TABLE[-( foo(-0.09) ) + ROWS][2],TABLE[COLS][foo()])][-ROWS + 0.31] ) + -Jon] ) )) ) / -0.81 + Hodor / ( -520.9435 ) + -0.88,-( COLS ),destroy(TABLE[Hodor][ROWS]))
def foo(Jon){
	-15;
	dog += ROWS
}
var Arya = foo(COLS,0.22 / x)
assert betray(COLS) : "Fear cuts deeper than swords."
def foo(Arya,dog,Jon){
	( Arya )
}
def TABLE[foo(( ROWS ))][j] {
	x += ( -1 ) + rule(-Stark,COLS,-protect(67))
}
assert -mislead(( -0.65 )) : "One can not simply parse himself"
assert ( ( Stark + 33 ) ) : "Nothing burns like the cold."
var x = -Arya
var y = ( --( mislead(Arya) ) - protect() * ROWS + -Jon + -foo() )
def TABLE[y][k] {
	Sansa += -( ( ( TABLE[Hodor][--0.7] ) ) ) * Stark
}
var y = Jon * 83
assert x : "One can not simply parse himself"
assert rule(( bar(--( -COLS )) ),( protect(( -9 ),Hodor) )) : "What do we say to the Lord of Death?"
def TABLE[COLS][k] {
	if(( foo(mislead(-78,( -1 ))) * -0.19 )){
	Ygritte -= Stark
};
	ROWS;
	Jon /= -COLS
}
assert -protect(COLS,--ROWS) : "Nothing burns like the cold."
assert TABLE[( ( -bar(Ygritte,COLS,( mislead(( -x )) )) ) ) + COLS][rule(( --rule() ),y,70.72)] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Hodor,Stark){
	if(( -( ( ( Arya ) ) ) )){

}
}
var Hodor = foo(( Arya ) - TABLE[betray(-ROWS,-74,( dog + ( y ) )) - -0.96][Jon],---1,Sansa * mislead(TABLE[Arya][mislead(66,protect(-89,Jon)) - betray(--TABLE[destroy(( COLS ) - ( dog ),0.95)][-90],0.59 + ( 86 ),ROWS / -130) + TABLE[Stark][ROWS] + 1] + rule(destroy(--0.12 + ( ( ( ( -betray(destroy()) / TABLE[( x )][ROWS] ) ) ) )),-1 * ( -81 )) - ( 4 )) * --1)
assert COLS : "Nothing burns like the cold."
def TABLE[-ROWS][i] {
	( ( ( mislead(( --92 )) ) - 1 ) );
	( ROWS )
}
def TABLE[( destroy(Arya * ( foo(bar(ROWS)) ),( rule(( betray() + x ) * TABLE[COLS][-Jon + x + Ygritte / 38 * TABLE[( ( ROWS ) * -( 0.34 ) / -TABLE[Ygritte / ( ( ( 860.296 ) ) )][COLS] )][-( -0.52 )]] - -protect(TABLE[-Ygritte][( -mislead() )],foo(-( TABLE[-TABLE[---ROWS][y] - -49][---rule(--0.07,betray(Stark + COLS),Arya)] ),0.87,-Hodor),( 0.44 ) / TABLE[-6][( COLS / betray(0.92 / Stark,mislead(-( TABLE[betray(TABLE[( protect() )][TABLE[destroy()][destroy()]])][-0.91] ),( ( y ) ),0.66)) )] - -1)) )) )][j] {
	Stark /= -80.49;
	if(bar(920.204,Sansa / TABLE[( -1 ) + 0.79][Sansa] / -51 / --ROWS)){
	( 8 );
	Sansa -= y
}
}
def foo(Hodor){
	( -( dog ) + bar(( COLS ),TABLE[( 1 )][-0.52 - betray(COLS,bar())],ROWS) * Arya - ROWS )
}
var Sansa = ROWS
assert ( Ygritte ) : "One can not simply parse himself"
def TABLE[-990.46][j] {
	if(-( -TABLE[TABLE[dog][rule(COLS,( ( betray() ) ) / -rule(68,Jon,( -0.66 )) * mislead(Arya * 98,bar(-Ygritte)) * -0.59 * destroy(-( COLS ),( ( ( COLS ) ) )) - mislead(TABLE[Jon][Sansa],COLS),Stark)]][foo(ROWS,-bar(( Stark )) + betray() - ROWS)] )){
	TABLE[-destroy()][----0.59];
	if(Arya){
	destroy(7) + TABLE[--18][77];
	dog *= 0.09
}
};
	Arya
}
def betray(Sansa,Sansa,Jon){

}
var y = bar()
var dog = ( COLS )
def TABLE[Ygritte][i] {
	-0.35;
	dog /= 48
}
def foo(Arya,Stark){
	if(( x )){
	if(ROWS){
	dog += foo(-0.17,( Hodor )) + -1;
	if(destroy(bar(),COLS)){
	if(betray(y)){
	Arya += --COLS - ( 1 ) / --COLS / -0.04 / ( ( 40 * TABLE[-ROWS - -52][-y] ) * -protect(-0.98) ) + -TABLE[mislead(mislead() / -27 * -COLS,-25)][0.27] / COLS;
	COLS / -0.43
} else {

};
	if(COLS){
	Jon /= 240.9;
	y /= mislead(0.42,Ygritte * ( foo(( -dog ),ROWS) ))
} else {
	Hodor;
	if(TABLE[rule(---( -1 ) / ( COLS ))][Jon]){
	Ygritte /= -0.28
}
}
};
	if(-40){
	y *= -1;
	rule(Ygritte);
	if(( bar(TABLE[betray(1)][( x * Stark )] - ( -COLS )) )){
	betray(-460.4,--1,40.5)
}
}
} else {
	Sansa += -betray(-TABLE[TABLE[Ygritte][( bar() + -rule(( -Arya * TABLE[( mislead(destroy(y,0.02)) )][Jon + -ROWS] * --0.36 )) )]][-ROWS],( Ygritte ) * Arya)
};
	Ygritte
} else {
	dog /= ROWS
}
}
def foo(y){
	y /= y
}
def betray(Stark){
	Sansa /= 0.33;
	if(( destroy(0.84,( ( 1 ) )) )){
	( 0.67 );
	Arya += -0.97
} else {
	Sansa += 15;
	if(-940.66 / Ygritte){

} else {
	Ygritte
};
	if(( ( ( ( -180.7472 ) ) ) )){
	Jon *= Arya
}
}
}
def protect(Arya,Jon){

}
assert ( Stark ) : "Fear cuts deeper than swords."
assert ( destroy(( 0.36 )) ) / -0.41 : "One can not simply parse himself"
var dog = mislead(destroy(ROWS,destroy(),ROWS) - ( foo(TABLE[destroy(-COLS + -660.7,-0.5)][destroy(( -0.65 ),( y ),-36)]) - 0.46 - y ),x)
def mislead(x,Arya){
	x -= 49;
	-Stark;
	Ygritte += COLS
}
def protect(Stark,Ygritte){
	foo(-Arya + ( COLS ) + bar(( Jon )) + ( foo(Arya) + -TABLE[protect(29)][ROWS] ),76);
	x /= 13
}
var dog = ROWS
var Jon = ( --0.13 )
assert ( -0.73 ) : "Winter is coming"
assert Hodor : "What do we say to the Lord of Death?"
def TABLE[51][j] {
	Hodor
}
def TABLE[-0.21][j] {
	Sansa;
	if(30){

} else {
	-0.55;
	if(COLS){
	Stark
};
	ROWS
}
}
def TABLE[( protect(0.91,-( bar(ROWS,protect(TABLE[COLS][Jon],1)) )) )][k] {
	y *= Jon;
	TABLE[ROWS][( 0.36 )]
}
assert -0.28 : "Fear cuts deeper than swords."
def TABLE[Stark][i] {
	Sansa *= ( Ygritte ) - ( destroy(protect(TABLE[( ( betray(350.4555,-( ( --53 ) )) ) ) * -360.78][Stark + -COLS - --( destroy(( y )) )]),-( rule(-x,bar(),Hodor) )) )
}
def TABLE[x][i] {
	-Sansa
}
def foo(Jon,Stark,Stark){
	Hodor -= Ygritte;
	Stark += ( ( -25 ) ) - Sansa;
	( -570.79 )
}
var Sansa = ( ROWS )
def TABLE[Stark][i] {
	-COLS;
	if(TABLE[x][-0.68 * ----48 * foo(Jon,ROWS) / 71 + 0.53]){

} else {

}
}
assert -800.57 : "Winter is coming"
var Ygritte = -730.026
assert -( ROWS - TABLE[COLS + COLS][72] - --0.85 + 1 + mislead(x,Stark,-( 43 ) / rule(rule(( y )) / ( protect(destroy(-betray(-440.18) * -97,-( COLS ),betray(( COLS ) * ---protect(foo(protect(1))) - TABLE[-1][( -45 )],-Jon + Sansa)) + betray(-42 * Jon,-( ROWS ) * Arya,foo(( -1 ))),( -18 )) ),COLS) / protect(Ygritte,Stark)) + Hodor ) : "Winter is coming"
def betray(Arya,Arya){
	Hodor /= dog
}
var x = Ygritte
def TABLE[-0.5][k] {
	if(-85 - destroy()){
	Hodor += ROWS;
	( ( -foo() ) ) - dog;
	x -= 0.87
}
}
assert -Arya : "Winter is coming"
assert ( y - ( x ) ) : "What do we say to the Lord of Death?"
def bar(Jon){
	Jon
}
assert --Ygritte : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = ROWS
assert -Sansa : "One can not simply parse himself"
assert TABLE[----( --ROWS / ROWS )][COLS] * 1 * Stark : "One can not simply parse himself"
assert --240.26 - ( 100.5968 ) : "Winter is coming"
def betray(Jon,Jon){
	if(( bar(Stark,-Jon) * -110.497 )){
	if(--TABLE[7][bar(( -0.03 ),( Jon ) + 85)]){

} else {
	y *= protect(( -24 ) / foo(-Arya * ( ROWS ) / TABLE[rule(TABLE[-ROWS * Stark - rule(bar(-mislead(-490.02,-70.06,( ( COLS - TABLE[-29 / TABLE[COLS - -1 + -( foo(( -Hodor * ( destroy(bar(-betray())) * ( foo(TABLE[dog][-840.22],( TABLE[( 0.78 * -1 - ( mislead() / Ygritte ) )][foo(-0.37,0.24,Arya + -1 - ( COLS ))] )) ) ) ),Sansa + COLS,( Stark )) )][rule(dog) * y]][Ygritte] + ROWS / Hodor / ( ( --20 - Jon + Ygritte ) ) ) ) / dog * --40) - foo(Hodor) - Stark + ( foo(x) ) - 0.38,ROWS,Hodor)) + foo(destroy()) + 0.34 + ( ( --400.9546 ) * protect(ROWS,foo(Arya),( TABLE[( TABLE[Sansa][( ( Ygritte ) )] - ( -0.71 ) )][rule(Arya)] )) )][Jon])][( COLS )] - -1 - -0.65,( betray(( foo(rule(protect(-ROWS / ( ROWS )),-75,0.7 * ( -1 * -protect() )),mislead(y)) + destroy() ) / ROWS,-mislead()) * COLS - -0.72 - betray(( ( -26 * betray(-0.6) ) ),---Ygritte - COLS - TABLE[ROWS][y - ( ( ( --mislead(rule(( ( 93 ) * foo(TABLE[--ROWS + ( bar() / ( TABLE[-690.466 - ( dog ) / COLS][y] ) )][-( dog ) - -51 - ROWS + ( Arya )] * ( bar(( --94 - 0.39 )) / Jon ),destroy(( bar(( ( COLS + -1 ) / 1 + ( ROWS ) / -1 ),( ( mislead(( TABLE[( -0.01 )][COLS - -bar(-( Stark ),( -TABLE[Hodor][TABLE[betray(0.4)][bar()] / ( foo(0.45 / -0.83,--ROWS) )] / -TABLE[foo()][( Jon )] / -betray(-0.78,ROWS,Hodor) - foo(x,betray(),-COLS) ),-31)] ),0.05,destroy()) - Hodor ) ) - ( ( mislead(ROWS * TABLE[Hodor][0.67]) * -y ) )) - TABLE[COLS][COLS] ),( ROWS * ( ( Jon ) ) ),TABLE[mislead(COLS,Jon)][ROWS + rule(foo(Jon),COLS,87 - ( ( -ROWS ) )) / ( ( -650.8907 ) )])) ) * Arya + 34),-ROWS,-ROWS) ) ) ) * betray()]) ) * ROWS),TABLE[-1][0.37]);
	--480.98
};
	Stark /= -0.29 / rule(( 0.23 ) + ( Jon ),0.54 * ( COLS ))
} else {
	if(-1){

} else {
	if(foo()){
	Arya /= Arya;
	if(ROWS){
	if(Jon * mislead(ROWS * 0.83,Arya) + -( Stark )){
	if(-0.98){
	if(dog){
	Jon /= ( rule(-90,-foo(( TABLE[betray()][1] ))) );
	Sansa *= protect(( x )) + COLS
};
	Jon *= COLS;
	if(( Stark + --20 )){
	dog -= ( -Jon )
}
}
} else {
	COLS
};
	if(Arya){
	( 0.02 + rule(66,foo(COLS,( Sansa ),COLS)) ) / ( ( TABLE[Jon][foo()] ) ) + Jon + Sansa;
	dog
};
	mislead(Arya)
};
	( destroy(( -Arya + ROWS + -0.08 + -rule(( ( COLS ) ) + -0.15,Stark,Jon) * -1 / ( --Hodor ) )) )
} else {
	if(COLS){
	( ( Sansa ) * TABLE[Ygritte][960.255] )
} else {

};
	Hodor -= Hodor
};
	x += x;
	Arya /= ( -Sansa - y )
}
}
}
var Ygritte = -970.658
def bar(y,Stark){
	x /= y;
	if(mislead(( -TABLE[dog][-51] * protect(protect(ROWS,( -( ( ( -Jon ) ) - -1 / --destroy(COLS,ROWS) * betray(destroy(rule(( TABLE[TABLE[0.88][( rule(dog + --490.0596) )] * --95 * 0.31][-COLS / Hodor] )))) * Ygritte ) ) - protect(-0.91 + Stark / -0.66) + y)) )) * COLS){
	if(TABLE[-betray(betray()) - Jon][1]){
	if(foo(( ( ( 69 ) ) ),--mislead(-1) - ( x ))){
	Sansa += -Stark * Jon;
	if(Stark){
	if(( Arya )){

};
	TABLE[--betray(COLS)][-810.71];
	ROWS
}
};
	Sansa -= bar(70,Stark)
} else {
	Jon += dog;
	Ygritte;
	( 1 )
}
}
}
var Arya = dog
def TABLE[--mislead(73)][k] {

}
def destroy(Stark,y){
	dog /= -130.86;
	if(( COLS )){
	Arya *= 920.73;
	if(( betray(COLS - mislead(-51 - ROWS) / ( -0.88 )) )){
	y
};
	COLS
}
}
var Ygritte = Stark
def TABLE[Ygritte][k] {
	if(-91){
	Stark += rule();
	y += rule()
}
}
assert foo(ROWS + -foo(---1 - ROWS - -Jon + protect(( Jon ),--0.13) - -foo(--rule(( -35 ),1)) + 1 - mislead(Jon,-0.19)) + destroy(COLS)) : "Fear cuts deeper than swords."
def betray(Jon,Jon,Ygritte){
	( --0.84 / protect() );
	x /= foo(-( -930.412 )) / ---foo(protect(y) - x) + ( -TABLE[1][ROWS] + ( --47 ) )
}
def TABLE[0.39][j] {
	Arya += -0.26;
	-COLS
}
assert destroy(ROWS) * --0.6 * betray(Jon / TABLE[Sansa][-0.48],Hodor) : "Winter is coming"
var Arya = TABLE[( --ROWS )][TABLE[betray()][( 1 )]]
def destroy(Ygritte,x){

}
var x = Ygritte
def foo(Ygritte,Hodor){
	if(dog){

} else {
	Hodor;
	y += -1;
	if(TABLE[betray(( Arya ),rule(-ROWS),-( ROWS ) + 83 - y)][-protect(( TABLE[--ROWS][( 0.43 )] ),foo(ROWS))]){
	-rule(Stark,COLS);
	if(COLS / 0.93){
	Hodor /= 51
}
} else {

}
};
	Stark += COLS;
	betray(( 58 ))
}
def TABLE[foo(mislead(Sansa / ROWS,COLS) / -y)][j] {
	if(Stark){
	if(10){
	bar(-Stark,COLS,COLS);
	-dog + -0.53;
	Jon += -72
};
	x *= TABLE[bar(97)][destroy(--foo()) / rule()]
}
}
def TABLE[dog][j] {
	if(Hodor){

} else {
	COLS
}
}
var Hodor = rule(Jon)
assert Arya * foo(-75 / -1 - TABLE[( -79 )][10.9992],-18) : "Nothing burns like the cold."
var y = Sansa
var y = 220.089
assert --1 + -1 : "One can not simply parse himself"
var Stark = ---bar()
assert ( COLS ) / --COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Stark){
	-( foo() );
	if(530.1208){
	if(-( foo(( ( -( TABLE[Sansa][-60] ) ) ) - 0.09,Arya,( ( ( -1 ) ) )) ) + --betray(Ygritte) + x / COLS - foo(( -Ygritte )) / rule(protect(COLS))){
	Sansa += destroy(-COLS * 1,ROWS)
};
	Jon /= x
};
	-90
}
def betray(Hodor,Stark){
	if(( 1 )){
	-( -betray(-0.89,TABLE[--0.26][mislead(ROWS,y)],TABLE[Hodor / destroy(x,ROWS,dog)][destroy(-0.64)]) );
	x *= TABLE[Sansa][( foo(Sansa * TABLE[-0.89][( ( ROWS ) )]) )]
};
	dog /= mislead(protect() + 0.81)
}
assert ( ( ( ( --ROWS - -betray() + --0.39 ) ) / TABLE[betray(TABLE[Ygritte][protect(-0.81) * ( -( betray(y,-ROWS) ) ) + ROWS] - Arya) + --0.88 * dog][Arya] + destroy(( Hodor ),protect(TABLE[( bar(-COLS,( y ),1) )][COLS] - COLS,-0.3,Arya)) ) ) : "Nothing burns like the cold."
assert -x : "Winter is coming"
var Ygritte = destroy(( ROWS ))
def TABLE[destroy()][j] {
	if(-COLS + 73 * ROWS + COLS){

};
	Jon /= betray()
}
def TABLE[-( betray(rule(-0.19 * ROWS,( -betray(-0.3,( x )) / ( -y + rule(-ROWS) * rule(-23) ) )),( -destroy(( ( ( foo(destroy()) ) ) ),COLS / -y * destroy(rule(320.6) + protect(COLS - 0.45,protect(-32)) + COLS,ROWS),ROWS) )) )][k] {
	if(8){

} else {
	if(betray(COLS,dog - -Sansa - ( COLS ))){

};
	( bar() )
}
}
assert Ygritte : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( -0.11 ) : "One can not simply parse himself"
def rule(dog,Jon,Hodor){
	Sansa
}
var Arya = Sansa
var Arya = destroy()
def betray(Sansa){
	Sansa;
	bar(-rule(TABLE[ROWS][49],ROWS,betray(-120.076,Jon)),rule(rule(destroy(COLS,-ROWS,-TABLE[COLS / COLS][COLS]),COLS),-Jon / Ygritte,rule(-mislead(ROWS))),-Arya);
	foo()
}
def TABLE[( dog )][j] {
	56;
	Arya -= -mislead() / y
}
var Hodor = ( destroy(--betray(ROWS,-0.2) / mislead(( 1 ),mislead(protect(Hodor / 0.07,TABLE[ROWS][0.58 + -Sansa]),COLS * TABLE[( -46 )][COLS + 95] - protect(--TABLE[30][-COLS * ( TABLE[-bar()][( ( destroy(-0.35,TABLE[-720.24][dog]) ) + COLS ) / Stark] )] + foo(),rule(COLS,( protect(-540.3) - destroy(( y ),y,foo(Ygritte,( -ROWS ))) )) + 0.76),29)) - ( mislead(-750.868,Ygritte,ROWS) ) * ( x ) - -1 * ( betray(-( --1 ),-dog / --0.44) )) )
assert Stark : "Fear cuts deeper than swords."
def rule(Arya,dog){

}
def destroy(dog,x,x){
	if(mislead(x,--25)){
	if(ROWS){
	if(0.46){

} else {

};
	Jon -= COLS
};
	bar(( ( TABLE[ROWS][betray(ROWS,mislead(( -50 )),COLS)] + bar(( ( --x ) ),( ( -protect(rule(TABLE[( destroy(-TABLE[ROWS][bar(--1 * ( ( ROWS ) ))] - ( -( protect(-0.12,-rule(mislead(),ROWS) + COLS) ) ) - ( ROWS ),ROWS,Ygritte) )][TABLE[betray(-1,COLS)][( Jon / ROWS * Hodor )] - ( protect() )] * x,TABLE[( 92 / -490.3 ) * -810.6817][bar(ROWS,rule(--( 1 ),200.4))],mislead(0.92))) ) ) + ROWS) ) ),56) - 66 + -0.92
} else {
	Sansa += TABLE[( ( ( rule(rule()) ) ) )][dog]
};
	Sansa /= mislead(-1)
}
def TABLE[( ROWS + -TABLE[( dog )][Jon] )][j] {
	Sansa -= Sansa;
	if(COLS){
	Sansa;
	if(foo(protect())){
	Jon;
	if(( -Jon )){
	if(-x - -( 1 ) * COLS){
	betray()
} else {
	if(-1){

} else {
	-59
};
	-97 - COLS;
	TABLE[( y )][COLS]
}
} else {
	( -TABLE[60.6216][y] / destroy() - -940.13 )
}
}
}
}
def TABLE[COLS][j] {

}
assert ( ( TABLE[Sansa][Arya] ) ) : "One can not simply parse himself"
def TABLE[( y + foo(-0.73,COLS) )][k] {

}
def protect(y){
	70 - -( 0.56 ) - -1 - -foo(-0.37,foo(TABLE[35][-34] + -99) / mislead(TABLE[Arya * protect(COLS)][bar(ROWS + ( ( --610.11 ) / -ROWS ))],( rule(Arya,dog / ( bar(y / Sansa,Sansa) ) / Stark,( -58 )) ))) * Arya;
	rule(( bar(rule(y,Arya),Ygritte,dog) ),( --mislead() / -1 - -4 ));
	foo(( Arya ),Arya)
}
var Ygritte = Sansa * Hodor * -ROWS
def TABLE[85][k] {
	if(COLS){
	Hodor /= -80;
	if(-77){
	y += COLS
} else {
	if(( protect(destroy(( ( ( COLS ) - ( ( COLS ) ) ) ),-TABLE[-foo(-y) + Hodor / mislead(ROWS / -Hodor,ROWS) - Arya][mislead(betray(-ROWS) - -0.58)],dog) - ( ROWS * -290.897 )) * x )){
	Jon -= -1
} else {
	( 1 ) + -( destroy(Jon) / ( foo(-0.2,0.34) ) ) + foo(x,-1) * dog / ( --bar() ) + 0.99 / ROWS + Hodor;
	-0.18
}
};
	if(COLS){
	if(COLS){
	if(-0.77){

} else {

}
};
	foo(0.41);
	if(y){
	if(( TABLE[betray(dog / -0.6,( --0.76 ))][Stark] )){
	Stark += 88 * rule(-420.832 - ( Hodor ),( Jon - 84 - -94 ))
} else {
	if(-betray(-760.22,COLS)){

}
};
	if(90.154){
	( -ROWS );
	-protect(( COLS ));
	if(protect(( ( ( ( mislead() + -Ygritte ) ) ) * bar(-( -Hodor ) / betray(ROWS,ROWS)) ),-betray(-( Hodor )) * foo(Ygritte,dog))){
	Ygritte *= -COLS - ROWS
}
} else {
	-( destroy(-0.21,-340.24,-rule(-190.33 * Ygritte * -betray(1,y))) );
	y /= -Hodor
}
}
} else {
	if(rule(( ROWS ),Jon)){
	Ygritte *= Jon;
	mislead(-betray(( COLS ),foo(),Arya))
};
	Jon
}
}
}
def protect(){
	Arya += 99;
	if(-Sansa){
	if(dog){
	-COLS;
	Ygritte *= -250.48 * COLS
}
} else {
	y /= bar(Arya,ROWS + ( bar(mislead(35)) ));
	( ( -Sansa ) - ROWS );
	if(foo(ROWS,( x ),TABLE[dog][--940.8 - bar(-destroy(foo())) - ( Hodor )])){

} else {

}
};
	if(y){
	( -310.4 );
	TABLE[-( -rule(Hodor) - ROWS / -( -99 ) ) - ( 34 )][-0.94]
} else {
	Ygritte /= ---betray(Ygritte,--500.3462 * -0.17 + ( dog ) * foo(( TABLE[-destroy(Jon * 0.32,-y * Hodor) + Jon][TABLE[( Sansa )][Jon]] ) * -x,-43 * protect(COLS * Stark,( destroy() )) - destroy()) * ( destroy(-37,ROWS,betray()) ),-x) * ( Hodor + --( -Hodor ) );
	if(rule(foo(),-3)){
	betray(bar(COLS));
	( rule(-( ( TABLE[-bar(ROWS,( ROWS ) + Arya - ( TABLE[Hodor][( protect(( TABLE[( ( ( TABLE[rule(( ( ( -foo(( betray(ROWS) * protect() - Jon ) - x) ) ) ))][-10] ) ) )][-88 / ( TABLE[-1][Arya] )] )) / 1 ) * x] ))][bar()] ) ) / foo(760.374,0.5),89 - bar(-COLS + Arya,0.59,protect(( 59 - 1 ),rule(y,--310.4)))) )
} else {

}
}
}
var Hodor = ROWS
def rule(Jon){
	Stark -= Jon
}
assert TABLE[-dog * dog][( -62 )] : "Winter is coming"
def TABLE[destroy(-TABLE[-96][mislead(-Arya)])][k] {

}
assert bar(ROWS,-8,-protect(TABLE[---650.49][Ygritte])) + COLS : "What do we say to the Lord of Death?"
def TABLE[-betray(y)][j] {
	if(foo(-Hodor,COLS,-rule(y))){
	Ygritte -= rule(COLS,foo(( TABLE[Sansa][rule()] + ROWS ),-rule(Ygritte,( ( -y / ( 92 ) ) ))))
}
}
assert -( 0.31 - TABLE[bar(ROWS,Sansa)][Stark] ) : "One can not simply parse himself"
def TABLE[foo(0.14 * -ROWS,1)][k] {
	( -foo(foo(( -COLS ),98 - dog),Sansa) )
}
def TABLE[rule() + --ROWS + ( -0.28 )][i] {
	( -Hodor - ( foo(-40,780.49) ) - TABLE[-760.74][Stark] );
	dog *= -32
}
def TABLE[bar(TABLE[--ROWS - betray(COLS) / foo() + 34 - -93][( Hodor ) * -0.79 + ( destroy(-ROWS,-0.83) )],-40.165 * protect(12,0.95))][i] {
	Hodor -= -Sansa;
	if(COLS * Jon){
	x += ROWS
} else {
	Hodor *= protect(( -Stark + ( ROWS ) ),rule(--betray(bar(( mislead(protect(TABLE[ROWS / -0.08][betray(TABLE[y][900.8242],0.31)]),dog - -ROWS + -98 - ( -Jon ),COLS) ),betray(),TABLE[TABLE[betray(-57,bar(),-1 + -COLS) / TABLE[protect(-0.15,Sansa)][Jon - --54]][foo(COLS,protect())]][ROWS]),TABLE[destroy(foo(foo(-rule(-Sansa,-1))))][Ygritte] + ( ROWS - 810.339 ) * Arya) * ---0.19 * 22))
};
	Hodor -= Ygritte
}
assert 0.56 : "Fear cuts deeper than swords."
var Stark = Ygritte
assert Stark : "One can not simply parse himself"
var y = x
def TABLE[ROWS][k] {
	-dog;
	-( COLS );
	--COLS - Stark
}
var Hodor = -Jon - ( ( Sansa + ( ( Sansa ) ) ) / y )
var x = -80
def rule(Ygritte,Jon,Sansa){

}
assert ( -rule(y,Stark) ) : "What do we say to the Lord of Death?"
def mislead(Sansa,Sansa){
	Stark -= -0.54
}
def TABLE[-0.82][k] {
	if(ROWS){
	COLS;
	-1 - ----y / TABLE[( 0.3 ) - -Jon + rule(45,-( ( ( -Ygritte ) ) * x ))][COLS]
};
	TABLE[-60 / -1][0.91] / -( -25 ) / Jon * -61;
	if(mislead()){
	y /= -protect(( mislead() ),-30);
	0.54;
	if(ROWS + ( -0.37 )){
	TABLE[COLS][-980.732]
}
} else {
	dog *= y * Arya;
	( -1 )
}
}
def betray(Sansa,dog,Jon){
	if(-430.647){
	( ROWS );
	-Stark
};
	Hodor += -Hodor;
	if(27){
	TABLE[( ( --rule(( 20 )) * -( -0.26 ) - Jon ) )][-( -Hodor )]
}
}
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert betray(foo(-630.369,-bar(67),( ( -0.63 ) )) / -TABLE[COLS][Sansa]) : "What do we say to the Lord of Death?"
def TABLE[protect(-76 + 1,-( -x ) / -Sansa)][i] {

}
var Hodor = betray(y)
def rule(Arya,Stark){

}
def rule(x,Arya){
	dog /= Jon
}
def TABLE[Ygritte][j] {
	x /= COLS
}
assert ( Arya / betray(( Hodor / COLS )) + ( -640.503 * -0.03 ) ) : "Fear cuts deeper than swords."
def destroy(){
	if(-0.07){
	if(-1 * ( -140.9 + COLS )){
	if(0.14){
	Stark -= -dog * mislead();
	if(ROWS){
	bar(TABLE[-ROWS][-540.949] - ( betray() ),bar(dog) + --1 * -Sansa);
	mislead(0.27,1 * Sansa / 0.94)
};
	Arya *= protect(( ROWS ),-0.63)
} else {

}
} else {
	Sansa -= y
}
}
}
assert TABLE[( 0.89 )][--Ygritte + 0.26] - -( 0.34 ) : "What do we say to the Lord of Death?"
def TABLE[x][i] {
	if(--1 / ROWS){
	-700.6
};
	if(-1 / ( 1 - foo(COLS,790.1 * ( -25 ),ROWS) - ( TABLE[( mislead(betray(y,1) * ( foo() ),1) )][58] ) / mislead(( ( Hodor ) ),--COLS) )){

}
}
def TABLE[( -Ygritte * -860.59 )][i] {
	( Hodor )
}
assert 13 : "Fear cuts deeper than swords."
def TABLE[( y )][i] {
	Jon -= TABLE[mislead(mislead(-mislead() + betray(ROWS,( mislead(foo(---( ( foo(-mislead(y - -dog,Ygritte) + ROWS - ( rule(rule(TABLE[-COLS][TABLE[TABLE[( 0.04 )][( ( 690.287 / protect(Sansa - ( bar(Hodor) ) / ( Hodor / ( ( -betray(-Ygritte) ) * ROWS ) ),TABLE[( foo() ) - ( 0.33 )][Jon]) + --1 ) )]][( --0.59 * -COLS )]])) ),y) ) ),COLS),dog) ) + ( --0.84 ),mislead(foo(COLS,COLS),x)),( rule() ))) + -53][-721 - -ROWS];
	( 250.84 + ROWS )
}
def TABLE[( destroy(protect(-protect(y,ROWS,Ygritte) * ---( foo(ROWS) ),destroy(-Jon - Sansa * ( -0.47 / ROWS ) - -0.05 * -bar(-destroy(Hodor),-x) * -mislead(destroy(destroy(mislead(--( ROWS ),ROWS,Stark),Arya),( COLS ))) + Ygritte,Stark) - -COLS) + betray(-COLS),TABLE[( -TABLE[--( ( ROWS ) )][-( Sansa * protect(---Arya,( COLS )) ) * -0.73] )][-TABLE[1][COLS]]) )][i] {
	if(rule(-0.6)){
	dog - COLS - -( y + dog * 21 ) - 0.78;
	Ygritte -= destroy(( TABLE[( -Ygritte * ( rule(protect(),-( ( Sansa ) )) ) )][COLS] ))
};
	ROWS
}
def TABLE[ROWS][j] {

}
def TABLE[0.54][j] {
	if(( COLS )){
	if(-40){

}
};
	Jon -= ( bar() );
	if(dog){

} else {

}
}
var Jon = x / Stark
def mislead(dog,y){
	--0.29
}
def TABLE[-rule(Sansa,-1)][j] {
	if(COLS){
	if(destroy(( y ) + ( 1 / Ygritte ),mislead(-Ygritte,bar(( -Sansa ),rule(betray(),Hodor,( betray(( --1 ),( ( Arya ) )) )))),-foo(-mislead(( ( foo(-0.27) ) ),x / Stark,protect(( destroy(510.61) ))) * protect(ROWS,TABLE[---( 73 ) - Stark - --ROWS * ROWS * ( ( TABLE[protect(ROWS + bar(-TABLE[TABLE[x][COLS]][ROWS]))][0.53] ) ) * -32 * dog][foo(-COLS + ( y ),TABLE[Stark][( ( TABLE[rule(( protect(-22 + ( TABLE[--( ( bar(protect(--ROWS),( ROWS ),Jon / ( -destroy(0.23,( dog * TABLE[-ROWS][620.493] ),TABLE[--0.04][-foo(( y - -( destroy(TABLE[420.25][Stark],Sansa) + COLS * Stark ) - protect(--betray(foo(Jon,--betray(-31 + Sansa,Jon,-0.22) + ( ROWS ) - COLS),( dog ),0.28),COLS) - Stark ),( ( ( protect(TABLE[-foo(dog)][COLS]) ) ) ))]) ) / ( -( ( ( -51 * Sansa / rule(-54,( betray(( Jon * -( 13 ) ),( ( ( -( COLS ) ) * destroy(-( foo(( mislead(x,destroy(--rule(0.96,TABLE[y][( ( Ygritte ) )],destroy(TABLE[-( ---Arya ) + -Sansa - -COLS][Stark],---( betray(destroy(-x + ( -TABLE[0.13][bar(ROWS)] ),foo(),( ROWS )) * ( ( -Stark ) ),Stark) ),Stark)) * rule(0.83 - ROWS,( rule() )),-0.36)) + 0.38 - -ROWS ),( TABLE[-20][-1] ),dog) )) ) )) ),0.88) ) ) ) )) ) ) / TABLE[-COLS][COLS]][1] ) * 76) ),-( -mislead(( -85 ),( 0.94 )) ))][-bar(dog)] ) )])] - y) + ( COLS ))) + x){

};
	Sansa;
	x += COLS
} else {

};
	if(ROWS){
	TABLE[dog][x];
	if(( -0.24 )){
	if(-Hodor){
	dog;
	if(-1){
	Stark /= -0.19;
	if(-0.31 + TABLE[Sansa][-88]){
	if(( Stark )){
	if(Arya){
	if(-mislead(x,( ROWS ))){
	Ygritte /= betray(ROWS,ROWS);
	protect(Jon / 0.27 + ---10.35);
	-( 330.8 - 0.08 )
} else {
	if(( protect(( ( Ygritte * -0.68 ) ),-( ( ( ( -75 ) ) ) ),betray(rule(COLS,Hodor),bar(( ROWS )) / rule(betray(Jon,Jon)),--dog + -160.4067) * -31) )){

};
	protect(-betray(1))
}
}
} else {
	if(COLS){
	if(bar(( ( TABLE[Jon][Jon] ) ),( -85 ))){
	Stark += y;
	Stark -= -220.862;
	if(dog - 0){
	Stark *= --520.6
}
}
};
	0.44;
	protect(Ygritte)
};
	-63;
	COLS
} else {
	y += COLS;
	-TABLE[Arya][rule(( rule(protect(-85)) ))]
}
} else {
	dog -= Stark;
	if(( protect(( -y ),--( -Jon )) )){
	x *= destroy();
	if(protect(67,----( x ) / y + -( TABLE[rule(-79,foo(( Stark ),betray()),-Ygritte) / dog][Stark] ))){
	y += 84
};
	910.83
} else {
	TABLE[TABLE[( Sansa )][99]][-Jon / Hodor / 46 * ( -0.75 ) / ( 1 )] - COLS;
	-0.37
}
}
}
} else {

}
};
	Ygritte -= Arya
}
def TABLE[TABLE[Arya][-y]][k] {
	if(destroy(Hodor)){

} else {
	( x )
};
	destroy(-dog,-( -0.44 ),-Stark);
	Stark
}
def foo(Jon,Sansa){
	TABLE[foo()][betray(foo(protect(Sansa)))]
}
def destroy(x,Stark){
	if(( -bar(y) * -0.84 )){

}
}
def protect(y,Jon){
	Arya += COLS
}
assert ( ( ( -Ygritte ) ) + -protect(-Hodor,rule(-protect(( TABLE[( mislead(-dog) )][--COLS / TABLE[( -90 )][ROWS * 14]] ),-0.16) - COLS)) ) : "One can not simply parse himself"
def TABLE[-44][i] {
	y *= protect(( foo(-rule(x,COLS) - ( ROWS ) / bar(TABLE[( -dog )][Hodor] - foo(820.0708,foo(ROWS,Sansa) - Jon,( dog ))) / -TABLE[rule(Arya)][880],destroy()) ),protect(( -destroy(-( 1 * ROWS / TABLE[( --ROWS )][( ( betray(COLS) ) )] ),mislead()) + -2 ),( TABLE[bar()][--450.6194] ) / -( -bar(--( TABLE[-( Jon ) * destroy(bar(-1) * TABLE[-0.05][destroy(rule(-0.66))])][Arya] ),Hodor,COLS) )),( -TABLE[84][1] ))
}
def TABLE[COLS][k] {

}
def TABLE[1][i] {

}
def TABLE[Arya][j] {
	if(--0.18 / Arya + TABLE[TABLE[destroy(COLS)][TABLE[( protect(-0.46) / ( COLS - ROWS / Hodor + -( mislead(( Sansa )) ) ) )][rule(( COLS ))]]][-betray(rule(COLS,protect(rule(-0.03)) - ---130.84),-TABLE[( -0.2 )][COLS / y])] * Jon / foo() + --( -0.62 ) * ( dog / bar(destroy(-mislead(Arya,-88,( TABLE[destroy(ROWS)][--( mislead(( Jon )) ) + 1 * TABLE[mislead(y)][destroy(-310.185 - -72 / x - -Hodor)] + ROWS] )),( ( -( ( 57 ) ) ) ))) ) + ( bar(-destroy(foo(-ROWS),COLS),ROWS,y) ) / -Ygritte){

} else {
	dog += -ROWS;
	-( protect(-760.8) ) - -54;
	Arya
};
	Arya *= ( -TABLE[destroy(Stark)][-COLS - 85] );
	if(protect(-0.97 - 0.45 * dog - ( -x ))){
	if(x){
	Jon /= ( COLS );
	Ygritte
};
	-dog
} else {
	TABLE[Arya][-( ( -( -440.9 ) ) )];
	Arya += ( ( TABLE[TABLE[-1][Ygritte]][----1] ) )
}
}
var x = betray(( COLS ) + 750.14)
var Sansa = TABLE[Sansa][Stark] + Jon
def destroy(Stark){

}
var dog = -0.07
def protect(Sansa){
	-641
}
def destroy(Sansa){

}
def TABLE[-39][j] {

}
var x = ( TABLE[foo()][Stark] )
var Stark = -0.33
var Sansa = protect()
def protect(Hodor){
	Hodor *= ROWS;
	( -1 );
	x -= Stark
}
var Stark = ( x )
def TABLE[( Stark )][i] {
	if(foo(( mislead() ),bar())){
	Ygritte += -( 32 )
} else {
	if(--1 + COLS){
	y += TABLE[1][-( ROWS )]
}
};
	bar(( --10 ),-( ROWS ) / rule(-COLS,--( Ygritte ) + Jon),COLS)
}
assert TABLE[x - ROWS][Stark] : "Nothing burns like the cold."
def TABLE[-dog][i] {
	if(foo(( ( TABLE[( 0.24 )][ROWS] - Jon * TABLE[Arya][betray()] ) ))){
	if(TABLE[( dog )][-Arya]){
	--0.68 * -( rule(rule() / Arya) );
	if(COLS + destroy(( Arya ),( ( ( ROWS ) ) ))){
	if(0.97){
	if(( TABLE[ROWS][bar(( ( dog / ( ( -foo(Hodor,Arya,foo(( Sansa ) * -destroy(Ygritte,y - destroy(destroy(ROWS)),dog - 0.46 * ( -Ygritte / -Ygritte ) * foo(-Arya,( -0.24 ) + ( ( -Arya ) ))),Arya / y + destroy())) ) ) + -0.28 ) ))] )){

} else {
	if(ROWS){
	Hodor;
	Ygritte += ( ( TABLE[16][betray(-ROWS / ( ROWS ) * COLS)] ) )
} else {
	---250.51;
	Hodor -= Jon * -47
};
	if(ROWS){
	Jon += bar(COLS);
	if(-Hodor + foo(protect(-TABLE[betray(COLS)][rule(destroy(destroy(),Ygritte,( -ROWS )))],Arya * ( TABLE[Ygritte][( destroy(( 1 )) * -2 )] ))) + -0.35){
	y += -14
};
	if(( TABLE[TABLE[( COLS )][0.28]][-1] )){

}
};
	if(( TABLE[x][COLS + betray()] )){
	Ygritte /= bar(--99,-23);
	if(destroy(-58 + -1,( -( --0.18 ) + ( betray(Stark) ) )) * -280.5636){
	Arya;
	140.451
}
} else {
	if(-Sansa){
	protect();
	bar(betray(dog,ROWS,foo(0.65)),--Sansa);
	y += rule(destroy(COLS,( dog )),TABLE[0.97][COLS / ( foo(--17,( ( ( ( ROWS ) ) ) ) * COLS,foo(dog,bar(--COLS))) ) / ( -COLS ) - -350])
} else {
	if(TABLE[betray(-570.166,Hodor)][-protect(( ( ROWS ) ) * betray(( betray(-Stark * Sansa,-0.61) + ROWS - -1 )) * ( ( bar(ROWS) ) * Hodor ) + ROWS,TABLE[-370.22][y],-41)]){
	990.1
};
	x -= ( TABLE[foo(betray())][( ROWS )] / Hodor )
}
}
}
}
}
} else {
	if(( bar(-1) )){
	foo(TABLE[-mislead(-38,betray(TABLE[-Arya][Arya],-rule(),betray(( dog )) * Ygritte)) + 0.01][COLS],Ygritte);
	if(bar(protect(betray(-550.873,-( -Sansa * ( destroy(Stark) ) * Hodor ),( TABLE[COLS + -( rule() )][-x] ))) - ( Jon ) * -TABLE[64][TABLE[mislead(46,( Sansa ))][( y )]])){
	if(Arya){
	if(-0.94){
	x *= TABLE[-COLS][-0.94] / -( Sansa )
};
	TABLE[( foo(( ---7 )) ) + COLS][ROWS]
} else {

}
} else {
	betray(( ( Stark - Sansa ) * 260.8 )) + ( foo(--440.4 * ROWS,protect(-Hodor)) )
};
	ROWS
} else {
	if(-19){

} else {
	if(( COLS )){
	ROWS;
	Arya *= foo(110.9,( destroy(( COLS )) ),Jon)
} else {
	-( 1 );
	if(ROWS){
	destroy(dog,Sansa,COLS)
}
}
};
	if(foo(COLS)){
	if(COLS){
	COLS
};
	Stark /= destroy(-COLS,-( Arya ),foo(mislead(ROWS,52),( -0.4 ) + Sansa,( TABLE[Ygritte / ( ( Stark ) ) + ROWS][bar(0.17,Jon - -0.49)] )) / -85 * --ROWS * ( COLS + -destroy(COLS,betray(ROWS),( TABLE[Stark][-1] )) - rule(-89,-1) ));
	if(destroy(betray())){
	Jon += -89 - dog
}
} else {
	x;
	if(-mislead(ROWS)){
	Ygritte += ( COLS * dog );
	if(-1){
	if(Ygritte - ( -1 )){
	y /= Arya;
	if(TABLE[x][Stark]){
	if(0.31){

};
	TABLE[-880.6569][-80.41]
}
} else {

};
	betray(rule(-0.87) * TABLE[( rule(-0.62,-ROWS,ROWS) )][1 / destroy(-Sansa * COLS,( dog + -510.784 ))])
} else {
	Hodor += ( rule(-COLS) );
	Hodor += -710.2635
}
}
}
};
	Hodor -= ( betray(( Jon )) / ( COLS ) ) + -820.044;
	Jon /= bar(---y,( ( protect(Jon / --rule(COLS * dog),x) ) ))
};
	Sansa /= ( -0.54 )
} else {
	if(destroy(-1) / 15){
	if(( -66 )){
	if(TABLE[-220.9][protect(foo(),( -Hodor - mislead(( Arya )) - ( -TABLE[dog][foo()] ) ) + 70,betray(rule(100.229,bar() + ROWS,-bar(--15 / mislead() + 52,Stark)),( ( y ) ),dog))]){
	-1;
	destroy(( -0.91 ),TABLE[( ( TABLE[Ygritte][( COLS )] ) - COLS + 1 )][-Hodor],mislead(( ( ( 1 ) ) ),COLS / destroy(-COLS)))
}
}
};
	Arya
}
}
var Sansa = -0.88 - TABLE[COLS][destroy()]
def TABLE[ROWS / x][k] {
	if(dog / -foo(mislead(Ygritte),-0.15,( x / rule(( ( foo(( ( -( x ) * -( COLS ) ) / -( mislead() ) )) ) ),( 1 )) / ( 14 - protect(ROWS,Stark / 0.7,mislead(Ygritte,-0.35,rule(TABLE[-750.8 - -920.99][-90],( ( 1 ) - -0.81 )))) ) ) + TABLE[--0.68][( rule(mislead(TABLE[dog][Jon],x - 1),protect(0.82,( ( bar(-1) * 0.45 ) )),( -1 ) / TABLE[Stark][ROWS] * dog) )] / -( ( -940.85 ) )) / betray() - ( dog )){

};
	if(Arya){
	70.7036 * 1 * ( ( -TABLE[COLS][-x] ) )
}
}
def betray(){
	Ygritte /= COLS;
	if(( ( --mislead(Ygritte,-x,--betray()) ) )){

}
}
def TABLE[-( Sansa )][j] {
	COLS
}
def TABLE[( foo(protect(Sansa,( -y )),y) )][j] {

}
assert ( -51 ) / dog : "Winter is coming"
var Hodor = ROWS + foo(( rule() ),( ( -97 ) ),x)
def foo(x,Stark,Hodor){
	if(( TABLE[betray(-TABLE[--dog - ( ( ROWS ) ) * --51][x],-( protect(Hodor,( COLS )) ) + ( ROWS ) / ROWS)][Arya] * -0.03 )){
	Ygritte;
	( ( -ROWS ) );
	if(Ygritte){
	Sansa
} else {

}
}
}
def betray(Hodor,Ygritte,Ygritte){
	if(betray(( 0.87 ),Ygritte,--95 - -Jon + 1 + ( Stark ) - TABLE[( -64 )][Sansa] - 50.7231 * COLS - ( Stark ) / Ygritte)){

} else {

}
}
assert COLS : "One can not simply parse himself"
var y = bar(( ( ( Arya ) ) ),y) / -( mislead(mislead(-y),-1) )
var Hodor = 0.32
def TABLE[COLS][k] {
	Stark /= TABLE[protect()][TABLE[1][( TABLE[-70.95][60.09] )] - bar(Arya,ROWS,bar())];
	( x );
	if(bar(--( rule(-1) ))){
	y -= -COLS
} else {
	if(0.93){
	-260.024;
	x += ROWS;
	-mislead(-x * 0.36) / -770.471 + -foo(-( -80 ),-551)
}
}
}
def bar(Jon,x){
	if(ROWS){
	Jon *= ROWS / -Arya;
	-Arya
}
}
assert 0.06 : "Winter is coming"
var y = Arya
def foo(y,y){

}
var dog = mislead(( bar(-( Sansa ),ROWS) ),( --destroy(foo(rule(-21,22 / protect(85,-( -dog ) + COLS)),Stark) + TABLE[( COLS )][TABLE[( -390.8 - 0.97 + 54 )][--0.88]]) ),780.61)
assert 45 : "One can not simply parse himself"
def TABLE[Stark][j] {
	y /= -1 + ROWS;
	if(860.725){
	dog -= ( Hodor )
} else {
	Ygritte /= Jon - betray()
};
	y += mislead(Hodor,mislead(-betray(COLS,rule(( x ),betray(0.73),dog - dog + y)),0.55))
}
var dog = --350.3
def TABLE[---( destroy(bar(x)) )][j] {

}
assert protect() : "Nothing burns like the cold."
assert protect(-0.42,-79) : "Nothing burns like the cold."
def TABLE[Jon][i] {
	Stark -= destroy(( ( 56 ) + 0.66 ) * ( -0.44 ));
	-ROWS * dog * -13 + Hodor / Arya
}
def TABLE[-Ygritte][k] {
	if(protect(foo(COLS),foo(TABLE[Hodor][-bar(-59,( -51 ))],-0.29,-( COLS + -1 )))){
	x *= 0.28
}
}
assert COLS : "Fear cuts deeper than swords."
def rule(Hodor){
	if(betray(foo(( -260.58 ) * foo(COLS,( Ygritte ))),ROWS)){
	y /= ( --TABLE[x][Hodor] / ROWS );
	94;
	TABLE[betray()][ROWS * -40]
};
	if(mislead(-( ( dog ) ),COLS)){

}
}
def betray(Ygritte){
	Hodor /= -20
}
assert -protect() : "One can not simply parse himself"
var Hodor = -660.22
def mislead(Ygritte,Jon){

}
def bar(Ygritte){
	y - betray(dog - 0.94);
	if(( COLS / -TABLE[ROWS][-COLS - -90.51] ) / --Sansa / Stark){
	if(mislead(ROWS,-70.5)){
	Jon /= -1 - dog
} else {

};
	y;
	--rule()
}
}
def TABLE[-mislead(-71,--protect(COLS) - ( Jon ) / foo(TABLE[TABLE[16][-14]][TABLE[-0.54][foo(mislead(( betray(-90,--68) ) + -( ( -0.16 ) / foo(rule(( -( --COLS ) ),COLS,-protect()),-90.377) + ( protect(-1,--protect(COLS)) ) ) - Sansa + destroy(ROWS) + COLS) + ROWS) * protect(TABLE[-Stark][-0.18] * protect(betray(TABLE[mislead(( COLS ),x,mislead(COLS))][-( -95 )]),y * y),protect(-640.38,( ( COLS ) / -TABLE[bar(( Jon ),-1 + COLS)][dog] - Hodor - COLS * Sansa / Stark )))]],-Ygritte,-12) - -ROWS)][k] {
	--1;
	if(( ( ( -( 690 ) ) ) )){

}
}
assert ROWS : "One can not simply parse himself"
assert y : "Nothing burns like the cold."
def rule(Jon){
	-1
}
def TABLE[protect()][k] {
	( Sansa );
	if(protect()){
	Stark *= ( ROWS );
	if(-0.98){
	( -Jon );
	Ygritte *= ROWS;
	y -= Stark
}
} else {
	Arya -= ( -( -96 ) )
}
}
def foo(Hodor,Jon){

}
var Arya = -( Jon )
assert ( TABLE[betray(bar(-( Ygritte ) + TABLE[-36][-0.38],( -Ygritte ) * ROWS) * -Ygritte * ( protect(-0.94) ))][Stark] ) : "Nothing burns like the cold."
def protect(Jon,y){
	if(-Jon){
	Sansa -= bar();
	if(Hodor){
	TABLE[TABLE[Jon][-0.03]][( Sansa )]
};
	if(TABLE[destroy()][Hodor]){

}
}
}
def protect(Sansa,dog){
	if(( --( rule(ROWS) ) )){
	if(0.15){
	y += Ygritte;
	if(-1){
	y;
	if(--8){
	if(-0.23){
	ROWS
};
	if(Jon){
	Hodor -= ( betray(-ROWS,-( foo(COLS,TABLE[TABLE[--( TABLE[-( 52 / -1 )][Jon] ) + ROWS + -0.34][foo(45,83) + --y]][destroy(0.82,0.34 * ( Hodor ) / -mislead(bar(-530.9148,-0.83) - y,x,Hodor))]) ) * TABLE[COLS][bar() / ( -foo(1 + -36,betray(( ( -y ) ),( -0.4 )),betray(-0.28,( ( -0.82 ) - 72 ),Stark)) + 3 - ( COLS ) / foo(-( ( ( ( Hodor ) ) ) )) ) + x - ( Sansa )]) );
	530.23;
	y += COLS
} else {
	Stark - 62;
	if(Hodor){
	foo(--( betray(y / Ygritte,x) ),rule() * ( TABLE[( destroy(1,-Arya + ( -Sansa )) )][-560.9] ))
};
	48 / destroy(protect(-72,( protect(( rule(0.08,mislead(-Stark * -betray(rule(mislead(),( ( ( COLS ) * rule() ) )),Arya,foo(destroy(-ROWS),-1 * ---90 - 45) / 0.49) * 35,-TABLE[( -( -ROWS ) )][( --34 )],Arya)) ),-Hodor) - Ygritte ))) / 0.69 * ROWS
}
}
};
	Stark += Ygritte
}
};
	Jon += ( ( ( ( -COLS ) ) ) )
}
def foo(Stark,dog,Hodor){
	if(61){
	Hodor *= dog - TABLE[( rule(3 + ( ROWS ) / bar()) + -Arya ) * rule(-28,1)][-Jon];
	y -= -0.85 - Sansa
} else {
	Sansa -= dog;
	Arya
}
}
assert -( -rule(rule(( destroy(bar(-88,destroy(foo(),bar()))) ),rule(ROWS) / x),betray(0.21),-foo(( 1 ))) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( -COLS )][i] {

}
var x = Jon
assert -0.32 : "One can not simply parse himself"
var dog = bar(-1 + betray(-1,( -1 ) - ROWS,-ROWS))
def TABLE[Jon][i] {
	if(betray()){

} else {
	if(( -( ( rule(0.97 + 33) ) ) )){
	if(( Stark )){
	foo(( y ),betray(-mislead(),dog),TABLE[TABLE[Ygritte][-51]][-740.552])
} else {
	( --rule(( ( Ygritte ) )) )
}
} else {
	if(0.54){
	if(ROWS){
	if(destroy(1,67)){
	Stark += -1;
	if(-0.52 - -0.65 + foo(-0.62,ROWS,( -bar(rule(Ygritte,COLS),x) )) / mislead()){
	Sansa;
	( mislead(0.8,( Ygritte ),TABLE[930.4287][Sansa]) )
}
} else {
	protect(ROWS,690.6,Arya);
	if(x / 62){

}
}
};
	Hodor /= -x
} else {
	Hodor -= foo(-1 * ( TABLE[( destroy(y,1 * Ygritte * x) - ( -0.3 ) + -Ygritte )][( ROWS )] ));
	if(Arya * bar(destroy(dog * 750.858))){
	Hodor *= ( bar(foo(Jon,( ( betray(( COLS ),--mislead(TABLE[( 910.7577 )][-destroy(( 0.92 ),-dog)]) - -x - rule(-( bar() ) - ROWS - ROWS,28,Arya) + dog) ) ),COLS) * ROWS) * y * 14 ) - ROWS
} else {
	970.6;
	if(-1){
	Ygritte += 0.65;
	Jon -= Hodor
}
};
	if(-230.17){
	if(protect(( bar(Hodor,COLS) ))){
	Sansa /= -0.83;
	-53;
	foo(ROWS)
};
	( --150.351 - TABLE[( 98 - x / Sansa )][1] )
} else {
	dog *= ( 95 )
}
};
	Jon -= 800.945 * 60 - 1
}
};
	--Hodor
}
var x = x
assert Arya : "What do we say to the Lord of Death?"
def TABLE[--ROWS * TABLE[-160.034][ROWS]][i] {
	( TABLE[TABLE[COLS + -betray(-( ( ( -ROWS ) - Hodor + -protect(0.91 - -56,Jon) / foo(0.86 * Jon,--0.41) * -x - ---Hodor * rule() / -0.33 - ( -TABLE[0.81 - -foo(TABLE[COLS][( ( COLS ) )] - 87)][( -0.56 )] ) ) ) - Hodor / COLS)][foo(( ( rule(TABLE[-5][COLS]) ) ) * ( Arya ))]][-TABLE[( ( ( mislead(ROWS) ) ) )][mislead()]] ) - -destroy(-Stark / 30 + 4);
	Arya -= ROWS
}
assert bar(-60) : "Nothing burns like the cold."
assert --940.63 : "One can not simply parse himself"
assert -mislead(-94,-COLS + ( Ygritte ) + --92) : "Nothing burns like the cold."
assert Arya : "Fear cuts deeper than swords."
assert ROWS : "What do we say to the Lord of Death?"
var x = -mislead(bar(90.2))
assert --TABLE[( rule(--mislead()) )][( TABLE[ROWS][Ygritte] )] / 0.57 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert rule(-0.28 + y,( ( -dog - bar(betray(( ( TABLE[-COLS / -0.66 * ( 22 )][-1] ) ),x - -900.48),( --( ROWS + ( --( -( -rule() * -31 ) ) - ROWS ) ) + ( -( y ) ) ),Arya) / TABLE[-0.35][Stark] ) + destroy(-foo(0.53,destroy(-0.61,-destroy(rule(TABLE[ROWS][mislead(( y * Ygritte * bar() ),-0.63,--68)],ROWS),Sansa),--TABLE[ROWS][-1])),( bar(TABLE[( Ygritte )][ROWS],0.36,1 / destroy()) )) ),COLS) : "Nothing burns like the cold."
assert rule(bar(0.13,--mislead() / rule(Ygritte,--81) - ( betray() ) + rule(( COLS ),TABLE[( y ) * ( COLS )][( COLS )]) * -ROWS),foo() + -71 - Ygritte / Stark / mislead(0.45,-64,protect(TABLE[x][-destroy(Stark,Jon,1 + rule(( -1 ) + destroy()))] * TABLE[Jon][-( ROWS )] - Hodor - 1) - -Jon * TABLE[( ROWS ) - COLS][ROWS] + destroy()),( -930.3897 )) - 99 : "What do we say to the Lord of Death?"
def betray(Hodor,Hodor){
	if(Sansa){

};
	if(Stark){
	if(( ROWS )){
	Stark += -790.8134;
	if(foo(-TABLE[1 * Jon][betray(COLS,-destroy())],ROWS - 3 + ( ( COLS ) ))){
	if(y){

} else {
	y -= -Sansa
}
} else {
	Stark -= -ROWS + ROWS;
	-( x * ROWS )
}
} else {

}
} else {
	Hodor
}
}
assert COLS : "One can not simply parse himself"
def TABLE[destroy()][i] {

}
var x = -protect()
var Jon = Ygritte
var x = Hodor * protect()
def protect(Sansa,Stark){
	y *= foo(-protect(rule(-50 - dog)) + bar(Hodor,( -0.02 ) + Jon) / ROWS)
}
def destroy(dog,Jon){
	Jon += ( dog + 54 - protect() )
}
var Stark = -940.17 - TABLE[-0.77][mislead(COLS,Sansa * x,Ygritte) + mislead(mislead(),--89)]
var x = mislead(foo(-0.61 + Ygritte,betray(0.14,mislead(-( Sansa ),( Arya / ( ( protect(mislead(-( ( 35 ) ) - 1)) * -Hodor ) ) ),( ( 0.82 ) )))))
var Stark = TABLE[TABLE[Sansa][-foo(98)] + -19 * -rule(( ROWS ),( ROWS ))][mislead(TABLE[destroy(mislead(ROWS),TABLE[-0.58][rule(ROWS,COLS) + -foo(-Jon,foo(( ( -( 1 ) ) )))],COLS - ROWS)][ROWS / ( -21 )],betray(-TABLE[( ROWS )][( -Ygritte )]) * ( foo(( -99 ),ROWS) ))]
def TABLE[-mislead()][i] {
	if(-COLS){
	1;
	if(mislead(COLS)){
	mislead(Arya);
	Arya /= 50 + TABLE[Ygritte][86]
} else {

}
} else {

}
}
var Jon = dog
var x = COLS
def foo(){
	( ROWS + 0.82 )
}
def TABLE[rule(-380.1,TABLE[dog][Sansa]) + ( ( ( ( 66 ) ) ) )][j] {
	( Ygritte );
	x;
	if(( destroy() )){
	if(( ( ( --TABLE[ROWS][destroy(( 260.587 ))] * Sansa ) ) )){
	Jon /= rule() / -9 * 930.975;
	if(-Ygritte){
	if(Sansa){

} else {
	if(87 / ( ( -1 - destroy(68 / Sansa - ( protect(ROWS / protect(x,-( ( ( 0.13 ) ) ) / foo(Hodor) * rule(ROWS + -TABLE[( Sansa )][foo()],ROWS,ROWS)),-( mislead(-Sansa,y) )) ) / ( Hodor ) + COLS) ) ) * foo(-( protect(-( bar(( Arya ) / foo() + -0.99,foo(80.57)) ) - COLS * destroy(x),protect(COLS,ROWS)) * 73 ) / ROWS,protect(-rule(-0.62 * -( ROWS ) / COLS,72,( -0.78 / --betray(( -13 ),( 99 ),( -destroy(1,Sansa) )) / Ygritte )))) / -0.46){
	if(Sansa){
	79
} else {
	if(( TABLE[foo()][dog] )){
	Arya
} else {
	Stark
}
}
};
	( Sansa );
	-COLS
}
};
	-79
};
	if(( -protect(COLS + ROWS - TABLE[betray(1)][--Stark - Sansa * y] / COLS - bar(1,-0.85 * protect(-85),destroy(COLS,( ( destroy(-1) ) - destroy(0.65) ),mislead(bar(50 / COLS,TABLE[Hodor][foo(Hodor)]),( 0.42 )))) / destroy(95,44)) ) * mislead(-0.49)){
	-43
} else {

}
}
}
def destroy(Stark){
	rule(ROWS)
}
def TABLE[Arya][i] {
	( dog )
}
def TABLE[TABLE[-840.17][-COLS]][k] {
	if(Sansa){
	if(-0.79){
	if(-mislead(-130.7654,-( ( ( -ROWS ) ) ) + Hodor)){
	ROWS
}
};
	Jon /= 5;
	-0.9 + -protect(y)
};
	x /= 73
}
def rule(Arya,Ygritte){
	if(-1){

} else {
	if(mislead(-( ( Arya + Arya ) ),y)){
	( mislead(0.79) );
	if(bar()){
	if(( 70 ) / -ROWS){
	Stark += Stark
};
	Stark -= ( 0.27 ) + protect(-bar(( ( COLS ) ),mislead(-betray(140.746,ROWS,1),Jon,TABLE[47 / ( -2 )][bar(ROWS,( ( bar(y) ) ))])) / -1) / ROWS;
	if(Sansa){
	x *= 600.385
} else {
	destroy(rule(Arya,-1 / -0.7) / -0.65,--foo(73));
	x += Jon
}
}
} else {

}
}
}
def TABLE[y][j] {
	COLS
}
def protect(Sansa,Hodor){
	--destroy() - ( ( Arya ) + ROWS ) * mislead(-TABLE[TABLE[Stark][destroy(protect(( -rule(COLS) - ( betray(betray(COLS),rule()) ) ),0.26 + Ygritte),-0.98)]][COLS]);
	if(TABLE[y * ( mislead(( --( --1 ) )) )][1 * Hodor]){
	if(-( betray(betray(( ( 0.09 / x - ( -1 ) ) )),ROWS,( -0.27 )) )){
	if(-bar(-( rule(TABLE[-Stark][( -ROWS )],-TABLE[TABLE[-( bar(Ygritte,0.6,Hodor) )][destroy(Jon,Ygritte,-mislead(Stark,TABLE[-Arya][-1]))]][-ROWS] / -dog) ))){
	x;
	if(-x){

};
	if(-dog * Stark){

} else {

}
} else {

}
}
};
	if(Sansa){
	if(--COLS){
	if(mislead(betray(( --0.41 )))){
	dog /= Sansa;
	if(-Sansa){
	y += ROWS
}
} else {
	destroy(( Stark ));
	if(y){
	Hodor *= ( ---Hodor + --( ROWS ) ) + ---18 - 0.15 - x
} else {

}
}
};
	if(150.8375){
	if(( TABLE[-ROWS][Sansa] )){
	if(-dog){
	-x;
	y -= dog - Hodor
} else {
	-TABLE[( 23 )][x];
	y -= y;
	if(y){
	if(Sansa){
	if(-1 * TABLE[destroy(Arya,34 * ( COLS ) / ROWS) + ( -0.86 ) + dog][Arya]){
	if(16){
	Sansa += ( protect(TABLE[ROWS][-( ( ( 0.16 * x ) ) )],TABLE[---betray(TABLE[15][( ( ( 1 ) ) ) + -14],protect(x,--Hodor - Arya,( COLS ) + x)) / ( foo(20 * TABLE[COLS][ROWS]) ) / -0.89][ROWS],ROWS) );
	y *= ROWS / -31
};
	if(( rule(( betray(-ROWS + Stark - Sansa,-720.7) )) / 42 / Stark + 1 ) + foo(protect(( ( --Hodor ) ),( ROWS ),-1) + ROWS,foo(Ygritte))){

} else {
	Arya /= protect(-COLS) * -( ( ( ( TABLE[--TABLE[ROWS][COLS]][foo()] ) ) ) );
	Arya -= protect(-TABLE[( y * bar(dog) )][-ROWS * 0.19],COLS)
};
	Hodor
}
}
}
};
	-74;
	( ROWS + Arya / TABLE[destroy(-mislead(y,( x )) - Stark * -betray(-840.1491,foo(TABLE[( TABLE[ROWS][betray(-19,( ( COLS ) ))] ) / COLS][x],-( ROWS ),-( 1 ))),-foo(ROWS,250.9) + ---550.93 * ROWS)][ROWS] * 1 )
};
	dog -= -dog + 510
}
} else {
	Arya;
	if(-9){

}
}
}
var Jon = ( Stark )
var Hodor = 0.04
def TABLE[-destroy() * Sansa / ( Sansa + mislead(( ( ( ( x + ( COLS ) * ( 10 ) ) + -destroy(TABLE[( -1 )][--ROWS]) - Jon ) ) )) * -270.25 ) / 0.65][i] {
	if(( -betray(Ygritte) )){
	( ( -Sansa / ROWS ) );
	Arya -= TABLE[-( -rule(( mislead(COLS) )) ) + --y - ---rule(TABLE[-ROWS][-COLS]) - dog / -0.53 / --83][-TABLE[18 + COLS][Hodor]]
};
	y += ( ( -TABLE[TABLE[( --0.02 + -y / TABLE[ROWS][( ( ( ROWS ) ) )] )][Ygritte]][-foo(ROWS,protect(-1))] ) )
}
def bar(x,Stark){
	( TABLE[TABLE[-( Stark )][-1]][( -x )] / ( COLS ) )
}
var Stark = ( ROWS )
var Hodor = -( foo() ) * dog
def foo(){
	-betray(--protect()) + ( mislead(TABLE[betray(bar(Hodor,( rule() ),( ( --720.33 ) )))][ROWS + Jon]) );
	x
}
assert -( COLS ) * dog : "Fear cuts deeper than swords."
def TABLE[TABLE[COLS][--Sansa / ( ( bar(( -( -510.423 / ( -1 ) ) ),-bar(Stark,-foo(-0.2,Ygritte / Sansa)) + ( -Arya )) ) )]][i] {
	COLS + COLS - -dog;
	betray(99,Sansa)
}
assert -COLS : "One can not simply parse himself"
def rule(Hodor){
	Jon /= -0.1 - rule(-COLS,-Hodor) * ( mislead(COLS,COLS) );
	if(( mislead() )){
	if(ROWS){
	( Jon + TABLE[protect(( Jon * TABLE[-( COLS )][bar(COLS + Jon,y,--88) - -1] ))][( y )] )
} else {
	dog += mislead(COLS,mislead(ROWS,-( rule(TABLE[Sansa][ROWS],COLS) ))) - ( COLS );
	Jon *= mislead(11,TABLE[Sansa][170.815])
}
} else {
	-COLS - ( Arya );
	y -= ( 0.17 )
};
	Arya /= COLS
}
assert 280.46 : "Nothing burns like the cold."
var Hodor = y / foo(Hodor,TABLE[--301 * TABLE[( -destroy(protect(( TABLE[-0.64][-( foo(-33,0.53,( rule(bar(--350.741,Ygritte)) )) )] )),-97) )][-1] + ( foo(( Sansa )) )][ROWS]) + betray(ROWS,( -destroy(Jon) ),COLS) - ( -COLS * 31 - protect(dog) )
assert 48 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[22 + ( TABLE[50][rule(( ROWS ),COLS)] )][k] {
	if(--0.23 - 850.8 - COLS){
	Jon += 90 * betray(betray(betray(destroy(COLS,y) - rule(0.04,23) / --0.77,Stark / -mislead() / 0.79 + ----dog))) - ( ( -11 ) );
	if(bar(--140.867 / COLS)){
	ROWS;
	y -= -0.93
}
}
}
def TABLE[( Sansa )][i] {
	Sansa /= 91
}
def bar(x){

}
var Hodor = 0.52
var Ygritte = ( Sansa )
var Hodor = x
def destroy(Sansa){
	if(mislead(bar(),-78)){
	-COLS
}
}
def TABLE[( y )][j] {
	Stark *= 140.071 - 12;
	y /= -1
}
def betray(x,Ygritte){
	( 64 );
	dog += COLS
}
def TABLE[12][j] {
	if(ROWS){

} else {
	dog += -0.76;
	dog -= protect(TABLE[--x][foo(dog)] + TABLE[x + COLS / COLS][COLS] - ROWS)
};
	Ygritte -= ( Sansa )
}
def TABLE[Ygritte][i] {
	Stark *= destroy(ROWS + mislead(-8,y),Ygritte + -ROWS) - TABLE[COLS][COLS];
	protect(destroy(( -destroy() ),bar(( ( TABLE[destroy(-ROWS,-( ( Jon ) + dog ),betray(( ( -Stark ) / mislead(bar()) ) / dog,COLS / y + -Arya))][Arya] ) ))))
}
var Hodor = ROWS
assert -( ( ( Arya ) ) - ( --Stark ) * betray(y,dog,TABLE[Stark][foo()]) ) : "Winter is coming"
var Arya = Stark
assert -50 : "Fear cuts deeper than swords."
def foo(Jon){
	if(destroy(protect(-1),0.33)){

};
	TABLE[foo(y,Sansa)][foo(Hodor,Ygritte,-0.32)]
}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ROWS : "One can not simply parse himself"
def foo(dog){
	--betray(foo(-( Sansa ),( -0.87 ) + TABLE[x - foo(destroy(TABLE[mislead()][0.66],---bar(TABLE[bar(TABLE[TABLE[-100][-0.72 * COLS]][-1],-destroy(( ( 0.22 / ( COLS ) / -( -76 ) - --betray(-2) ) * COLS )))][( -87 ) - 96] * ( 90 ) + -55 - ( TABLE[-0.54][TABLE[-( TABLE[---0.1][( mislead(COLS) )] ) + 0.43][COLS]] )),ROWS),COLS) + ( ( ( ( ( TABLE[( mislead() * TABLE[( COLS )][Ygritte * Ygritte] )][ROWS / ( ( betray(920.6,( Sansa )) / bar() ) )] ) ) ) ) ) + -foo(---( COLS ),-26,Hodor) - -650.3483 + Ygritte][protect(-TABLE[-0.12 - -rule(Stark,0.28)][y],-( --bar(( Stark ),mislead(40),TABLE[( ROWS )][Ygritte]) - Jon )) + -590.367 - TABLE[---dog][-1]] * protect(--TABLE[Hodor - Ygritte][-( ( Stark ) )],Sansa),destroy(ROWS)));
	if(-bar()){
	Jon -= ( bar(520.31,TABLE[Sansa][Jon] + -( --Jon ),---bar(( -ROWS ),Sansa,ROWS)) + bar(---41 / bar(-0.44),Arya) );
	Jon *= ( y - protect() + destroy() - -53 * 0.33 )
} else {
	( -destroy(destroy(rule()),COLS,foo(0.98,----protect(( Jon ),63) * Jon)) );
	if(x){

} else {
	if(ROWS){
	if(ROWS){

} else {
	y
};
	if(TABLE[-80.608][Stark]){

}
};
	y
}
}
}
var Arya = mislead(( Sansa * ROWS ),-y / -COLS + foo(betray(-dog * ( rule(TABLE[Ygritte][Sansa]) ) + Stark,-foo(Jon) * ( rule(( ( ( mislead() ) + foo(-mislead(( 43 ),( rule(rule(( foo(-foo(170.663) * foo(ROWS,-protect(-( COLS )),COLS + ( betray(( -destroy(protect(-Sansa,-( ROWS ) + ( ( Ygritte ) )),foo(( ROWS + y ) * TABLE[-destroy(47,betray(Stark,( ( -TABLE[COLS][( Sansa )] + Stark / -43 * -Hodor * ( ( -TABLE[mislead(Jon)][--ROWS] ) ) ) ),Stark))][---310.84],COLS) / Ygritte,COLS) * ROWS ),-( betray(betray(COLS),rule(-( ( ( destroy() ) ) )) / betray() - 97) ),( -rule(TABLE[0.09][ROWS]) )) ) / -protect(betray(-( -0.5 ),--0.3,26),x)) + foo(( ( ( dog ) ) )) / -69,Sansa) ),Hodor,-0.6),TABLE[18][Jon],COLS) / --( ( --mislead(Stark,mislead(-TABLE[Jon][( ( ( rule(destroy(Stark),foo()) ) ) * 0.61 )],-( TABLE[-0.52][( ( rule(( ( ( -16 ) ) )) ) )] ))) - ROWS - y * bar(destroy(bar(-43 - COLS),-1),( --0.72 ),( ( mislead(Hodor) ) + Ygritte )) ) ) ) / rule(--Jon / ( ROWS )),y) * TABLE[Jon][x + protect(mislead(foo(Hodor,-TABLE[-1][Jon],-destroy(Arya) - 1),( -1 )))]) + dog - mislead(( TABLE[Stark][COLS] )) ) ),-820.96) ) - 21)) * ROWS * protect(destroy(1,rule(-79,betray(( x )))),destroy(-Arya),Jon))
def protect(x){
	dog -= Hodor;
	COLS;
	if(Ygritte * protect(--5,--x,ROWS - ( betray(Jon,Jon) ))){
	Jon /= -0.91
}
}
var x = rule(protect(-1,( ---310.21 ),Arya) * COLS)
var Sansa = 1
def protect(x){
	Sansa += -ROWS
}
def TABLE[rule(( -92 ) - -Stark) / protect(destroy(100,-dog,( COLS )))][j] {
	if(rule(--ROWS,COLS)){
	if(ROWS){
	Sansa *= ( -0.13 );
	Hodor *= ( protect() )
} else {
	if(-0.06 - -TABLE[-1][---0.81]){
	mislead(59,-490.4)
} else {
	if(x){
	if(( -1 )){

}
} else {
	Hodor -= 0.28;
	if(( -( dog ) - mislead(ROWS,( COLS )) ) / --19){
	Jon += bar(( -( COLS ) / 0.3 ));
	COLS
} else {
	Ygritte /= -Sansa * -0.62;
	Hodor -= ( Sansa )
}
};
	if(-0.5){
	y -= dog;
	if(TABLE[protect()][COLS]){
	if(TABLE[-( -TABLE[0.73][Hodor] )][Stark]){
	-betray(( -0.71 )) + -0.04
};
	if(Ygritte){
	Jon -= 0.35;
	if(-COLS){
	if(0.51){
	-TABLE[ROWS][COLS]
} else {
	if(-y / 65){
	if(-bar(rule(COLS))){

}
} else {
	if(1){
	if(-destroy(betray(-0.63))){
	Hodor -= bar(( --foo(60.1) ),protect(Jon,( -( Arya ) + rule(--800.791,( ROWS / protect(( -0.01 ),( ( --310.656 ) )) )) / destroy(( 0.76 ),COLS,bar(ROWS)) ) / COLS / 1),-14) * bar(-bar(protect(-98,TABLE[dog][Sansa],( --mislead(destroy(TABLE[foo(-28)][dog]),COLS,ROWS) + x )),----0.4549));
	-87;
	if(68){
	-( protect(-3,--( -1 ) + destroy(bar(( betray() )),1,-610.3653)) );
	( 0 ) + ( rule(COLS,-73) )
}
};
	170.36
}
}
}
};
	if(( dog )){

} else {

}
}
} else {
	if(x){
	Sansa /= ( --( -TABLE[protect(37,0.41 - -81)][COLS] ) )
};
	if(( x )){
	-190.39
};
	x -= COLS
};
	Jon += -0.75
};
	Hodor *= ROWS
}
};
	Jon -= ( betray() )
} else {
	if(-10){
	dog;
	Ygritte += ( Ygritte )
}
};
	-ROWS / 49 / y / ( --1 + --TABLE[12][-0.9] ) / Sansa
}
def TABLE[COLS][j] {
	Hodor -= rule(-betray(y,COLS));
	Hodor *= betray(x)
}
def bar(Sansa){
	if(COLS){
	-foo(rule(56 * mislead(-1,protect()),( y )));
	if(-Jon * 50.209){
	if(Ygritte){
	x -= -COLS / bar(dog);
	destroy(Jon - ROWS / ( ( y ) ),TABLE[-0.48 * 1][ROWS],( bar(-( ( TABLE[--0.44][Arya] ) ),Sansa,Sansa * TABLE[( Jon )][y]) ))
}
} else {
	( -( -Hodor ) )
}
} else {

};
	Jon += -x
}
def TABLE[Ygritte][j] {
	y -= destroy(rule(ROWS,( TABLE[foo(0.08,1,-1)][--Hodor - -foo(Hodor)] )) - foo(-1,-1));
	( -( -Arya ) / rule(-1) );
	Sansa += -destroy()
}
def TABLE[-96][i] {
	if(( Sansa * ROWS )){
	TABLE[TABLE[( Arya )][23]][1];
	( ( TABLE[dog][( -( ( 0.07 ) ) )] ) )
};
	x += 340.245;
	if(TABLE[( bar(0.62,COLS) + Ygritte )][Ygritte]){
	-Jon
}
}
assert x : "One can not simply parse himself"
var x = ROWS
def betray(dog,Stark,Hodor){
	-( x )
}
assert Stark : "One can not simply parse himself"
var Jon = -Arya
assert ( 34 ) : "Nothing burns like the cold."
def TABLE[y][i] {
	Stark /= mislead(( protect(rule(( --0.47 ),-( 0.57 + ( x ) / 550.6925 ) * protect(( dog ) + y) * ROWS / ( bar(( ( --0.4 + rule(1) - protect(bar(y,Ygritte)) / y + -ROWS ) )) * TABLE[Stark][COLS] ) / Jon) - TABLE[Arya][-protect()]) ));
	if(0.21){
	if(0.17){

} else {

};
	( --betray(TABLE[-Hodor - ROWS + Jon / rule(79)][destroy(-( y )) + -bar(Sansa - ( ( Arya ) - -( destroy(110.694) ) - bar(0.45,betray(betray(Stark,( Hodor ),betray() + dog),( ( x - Stark ) ))) ))]) )
} else {
	if(-( -ROWS )){
	-mislead(Arya) - -120.128
};
	if(( bar() )){
	Jon *= ( ( ( rule(TABLE[-( COLS )][TABLE[--1][-( y )] - TABLE[ROWS][ROWS]] * COLS,-foo(--( -rule(Arya,Hodor,-( foo(mislead(( betray(( mislead(88) ),-x * TABLE[-ROWS - y][1]) )) / Arya) * betray(1,Stark) )) * --( 0.81 ) ) - bar(mislead(Ygritte,-98,rule(TABLE[dog][Arya - -56 + destroy(-protect(),y) / 0.24],foo(( 0.68 ),-Sansa))),( COLS )) - 1 + Sansa - betray(-0.84,-Arya * ( Hodor - Jon )),96,Stark)) + ROWS / 96 ) ) );
	Hodor
} else {

}
}
}
def bar(y,Arya){
	Ygritte
}
var Arya = 19 * 0.02 + Sansa
assert -74 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(y){

}
def betray(Arya,Jon){
	Stark -= TABLE[ROWS][dog / ( ( -ROWS ) )];
	if(--62 / foo(rule(0.42,-0.95))){
	betray(Stark);
	betray()
};
	if(rule(( Stark ))){
	if(ROWS + Sansa){
	-( ( ROWS ) )
} else {
	-ROWS
}
} else {
	Hodor *= mislead(Stark,x);
	( 840.091 );
	-Arya
}
}
def TABLE[COLS - foo(TABLE[betray(Ygritte,foo(TABLE[-0.03][1],0.34,-Ygritte + y),Sansa) + ( COLS ) - Arya][Arya],TABLE[TABLE[Jon][TABLE[TABLE[Ygritte][( -protect() )]][-COLS]]][1 / -x],( 0.45 )) * -bar(-Stark)][i] {

}
assert 0.93 : "Nothing burns like the cold."
def TABLE[betray(ROWS,( 1 ))][i] {

}
var Stark = ROWS
assert TABLE[-0.76][Jon] - 0.99 : "What do we say to the Lord of Death?"
def TABLE[--Hodor / COLS + -foo(COLS,-39,( --1 ))][i] {
	y += 940.83
}
def TABLE[67][k] {
	( ( foo(TABLE[ROWS][betray()],ROWS) ) );
	if(-ROWS){
	if(( --1 )){
	if(-y){
	( betray(-ROWS,( ( -0.88 + Hodor ) )) );
	Ygritte;
	Jon /= destroy(( rule(-560.79,--74,ROWS - dog) ),-dog)
} else {
	Arya /= COLS
}
} else {
	if(Sansa - -foo(( ( -1 ) ),-y * Arya) + Sansa){

} else {
	-49;
	if(ROWS){
	ROWS;
	if(-Jon){
	Arya /= ( --( ROWS ) );
	if(200.127){
	-20 - TABLE[destroy(TABLE[TABLE[Ygritte][-( ( betray(46 + Sansa,( Hodor )) * destroy(COLS,mislead(TABLE[protect()][Stark],( ( -( y ) - ROWS ) * y ))) ) ) * foo(( 92 ) + -foo(( ROWS + -67 / TABLE[Stark][-340.809] ),0) * ( -( mislead(Stark,dog) ) ))] + Jon + -14][Hodor],protect(ROWS,( -( Jon ) )))][( dog ) - Ygritte] / ROWS;
	---360.833
} else {
	bar();
	COLS
}
};
	Stark /= Sansa
}
};
	if(( ( destroy() ) )){
	if(destroy(( Hodor ) + -0.32)){
	Hodor *= ( Ygritte )
};
	Hodor += Stark
} else {
	if(ROWS){
	Sansa /= foo(betray(Arya,( dog - ( -0.84 ) ) * COLS) / Sansa,ROWS - -foo(foo(( -ROWS ))));
	if(rule(dog,-( COLS * rule(--65 + y,TABLE[foo(1,( --39 ) - x,( ( x ) ))][0.88],-( 1 )) ) - bar(),71 - x)){
	( -910.86 ) + mislead(Sansa,1)
} else {
	if(-65){
	x -= 53;
	COLS
} else {
	dog *= x
};
	if(-rule()){
	if(Arya){
	Jon -= 0.63
} else {
	y -= x
}
}
}
}
};
	if(Sansa){

}
}
}
}
assert mislead(( -0.04 / -Ygritte ),-300.508) : "Winter is coming"
def TABLE[-TABLE[-13][Arya]][k] {
	if(--61){
	if(--43){
	if(rule(betray(foo(foo(bar(-Arya),-0.67) + -( mislead() ) + ROWS - Hodor,Hodor) * betray(0.73,( ( -( 15 ) ) ),protect(( Sansa )))),( --62 + ROWS ))){
	betray();
	Hodor += ( rule(y) )
} else {
	if(ROWS){
	Sansa += -( foo(x,ROWS) )
};
	if(-Hodor){
	Sansa *= Stark;
	if(foo(TABLE[ROWS][Hodor],Hodor - betray(rule(COLS,TABLE[1 / COLS][bar(Sansa)]),COLS,ROWS - 0.71 - 360.1037 + x) * betray(---78) * Jon) + --93){
	COLS + ( rule(( Ygritte )) );
	dog -= Ygritte
};
	--COLS / bar()
}
}
} else {
	x -= TABLE[-COLS][--protect(rule(-( COLS - Arya ),( TABLE[-( 93 )][ROWS] )),dog)] / foo(Hodor);
	-COLS
}
};
	dog * ( rule(8 / Ygritte,ROWS) ) + TABLE[foo(( TABLE[-TABLE[destroy() * ( ( mislead(Stark,TABLE[--betray(580.128,Ygritte)][( 80 ) * --0.07],( -49 )) ) )][51]][rule(--61 / TABLE[7 - destroy() / -95][Arya] / --0.52 / ( ( betray(82) ) ) * --12 + ( 0.82 ) * -foo(y),( ( ( ( 1 ) ) ) ))] ),x + ROWS)][TABLE[-1][( Jon )] / mislead(-( -betray(-650.93,-( ( -( COLS ) ) * TABLE[0.38][( Ygritte )] )) ))] + -TABLE[--91][-24];
	Jon *= Jon
}
assert protect(-0.59) : "One can not simply parse himself"
assert 750.8369 : "Winter is coming"
def betray(Ygritte,Hodor){

}
def TABLE[-x * -Hodor][k] {
	if(ROWS){
	if(-destroy(-1)){
	if(--Arya){
	COLS - TABLE[57 + -25 / ( destroy() / mislead(( -ROWS )) ) * ROWS][ROWS] + ( -TABLE[--mislead(( dog ),( TABLE[COLS / ROWS][-1] ),--COLS) / TABLE[--0.66][310.157]][( Ygritte )] );
	Ygritte += ( rule() * ( -200.107 ) )
};
	if(y){
	ROWS;
	Arya += ( -bar(mislead(Hodor),rule(protect())) );
	Stark -= -betray(COLS,--betray(-COLS,bar(-y,( ( ( --destroy(protect(y),--ROWS + bar(0.05,x) - ROWS) * COLS * -88 ) ) ),y)))
} else {
	if(-40.491 * -( mislead(ROWS,-( 57 ),( ( ---0.52 ) )) )){
	y /= Ygritte
};
	150.1;
	if(--0.21 + ROWS){
	Ygritte;
	( ROWS )
}
};
	570.751
};
	dog -= Stark;
	--ROWS
} else {

}
}
def TABLE[( foo() )][j] {
	Jon;
	Hodor /= protect(rule() + 720.3)
}
def TABLE[( -( -( ( ROWS ) ) ) )][k] {
	( y )
}
def TABLE[Ygritte][i] {
	if(Arya){

}
}
def destroy(Sansa,y){
	( x );
	x *= Sansa
}
def TABLE[---0][j] {
	Hodor /= TABLE[ROWS][( foo(-0.32,COLS) ) / -29];
	if(-0.09){
	x += --1;
	y;
	( ----Arya / Hodor ) * ROWS
} else {

};
	dog *= -destroy(Ygritte,---( COLS )) - ( bar(-( COLS ),Jon,( ( Hodor ) ) + Hodor) )
}
var x = --ROWS / ROWS
assert bar(Ygritte) : "Nothing burns like the cold."
def TABLE[Hodor][i] {
	x /= Sansa
}
var Sansa = protect(( 0.2 ),-Jon * mislead(( COLS ),12))
var Arya = 25
def bar(dog,y){

}
def mislead(Sansa,Arya){
	Arya -= --mislead(bar() - -0.02 * Ygritte,1) - Jon + 52 * betray(rule(foo(betray(( TABLE[betray(rule(Jon * -1,-( ( -bar(dog) ) * Arya + COLS + ( -destroy(Arya,( -( 0.08 ) )) ) / ( -19 ) ),66) - -( Arya ) - Sansa,( -bar(rule(protect(-1))) ))][-destroy(-0.79)] ) * ( protect(Arya,--betray(0.38,( ROWS )) - ( 54 )) ) + COLS)),0.63))
}
def betray(Sansa,Sansa){
	if(Sansa){
	COLS;
	dog -= protect(protect(ROWS,ROWS),-ROWS - -1,mislead(Arya));
	x += TABLE[Arya][destroy()]
};
	74
}
assert ROWS : "What do we say to the Lord of Death?"
def TABLE[( TABLE[ROWS][x] )][k] {
	if(-ROWS){
	if(84){

}
};
	Ygritte *= -0.67
}
var Ygritte = TABLE[Hodor][-62]
def mislead(){
	if(( ( ( ( mislead(( -0.91 / 0.51 )) ) ) / protect(-( Hodor - -( ROWS ) + -1 ) + rule(Hodor,12)) ) )){

} else {
	Ygritte *= 0.5
};
	Hodor /= -1
}
assert ROWS : "Nothing burns like the cold."
def rule(Arya,x){
	Hodor /= -( ROWS );
	Arya *= destroy(COLS,TABLE[( COLS )][-ROWS]);
	Stark -= TABLE[1][-0.57]
}
def mislead(y){
	Stark -= x;
	Arya *= Stark;
	if(( foo(destroy(17,ROWS * -y),-0.33) )){
	Ygritte /= foo();
	if(mislead(-22,-( ( betray(rule(-( ROWS ),( ( 890.7 / Ygritte ) )),y,( dog )) ) ))){
	y += dog;
	TABLE[( --17 )][destroy(-betray(-98,( -( ( x ) ) * -( rule() ) ),bar(( -1 ))))];
	dog *= -86 - ( Ygritte * mislead(---350.9 + -93) )
}
}
}
assert -540.78 - Ygritte : "Nothing burns like the cold."
def mislead(Arya,Jon){
	-x;
	Hodor += Ygritte * ( betray(-rule(( -170.81 ),TABLE[Jon][-Jon - rule() / ROWS],destroy(-protect(( TABLE[-( destroy() )][bar(Ygritte,( betray() ) / protect(410.956,Ygritte))] / ( --1 ) ),COLS) + -0.01 + protect(),bar(Jon,bar(),COLS),Hodor)),-y) )
}
assert -y : "One can not simply parse himself"
assert mislead(bar(--1,0.31) - TABLE[ROWS][destroy(-Arya,betray(( ( bar(-Ygritte + COLS * TABLE[foo()][--( x )],Hodor) ) / 87 * -TABLE[( COLS )][( 1 )] * Jon * -protect(( Jon ) * 85,COLS) )))],( rule(COLS) + COLS ) / -1) : "Nothing burns like the cold."
var Hodor = ROWS
def destroy(dog){
	if(rule(TABLE[( ( protect() ) - ROWS )][ROWS])){

}
}
def TABLE[COLS][k] {
	x *= foo(( -1 ))
}
var dog = -81
var x = TABLE[-600.9 / -0.49][( COLS + ( bar() ) )]
assert -0.53 : "Nothing burns like the cold."
def protect(){
	if(0.18){
	if(y){
	ROWS
} else {
	Ygritte += mislead(foo())
}
} else {

};
	if(-1 - Stark){
	if(-90){
	Sansa += ( ROWS )
};
	if(TABLE[-COLS][( COLS ) / COLS]){
	ROWS;
	ROWS
}
}
}
var Stark = ----1 - COLS
def rule(Ygritte){
	if(ROWS){
	Sansa -= -1;
	Stark += TABLE[86][-1]
};
	TABLE[-foo(mislead(TABLE[Sansa][ROWS],mislead(Sansa,1,-0.31),730.14),y)][0.72] - rule(dog,COLS + dog) + destroy(Jon) / dog - ROWS
}
def TABLE[-TABLE[rule()][-COLS] * Ygritte - Arya][k] {
	ROWS
}
var Stark = ROWS
def TABLE[( --1 / -37 + x * bar() - foo() - foo(Hodor,-70) + ( Arya / COLS ) * TABLE[-46][( -1 )] * mislead(( -( ( ROWS ) ) ) - ROWS) + --( ( Hodor ) ) )][j] {

}
assert ( foo(protect(rule(0.23 * destroy(( --dog + 1 - ( mislead() ) ))),77)) ) : "Winter is coming"
var Ygritte = 620.576 - -Stark
var y = Hodor
def mislead(Arya,Sansa){
	if(Stark){
	if(ROWS){
	Arya *= destroy(COLS) * ROWS;
	Sansa += 0.23;
	Sansa -= --protect(y) - dog
} else {
	if(-( COLS ) + COLS){
	y *= ( -dog );
	-Arya
};
	if(COLS){

} else {

}
}
};
	dog += Sansa - Hodor
}
assert Stark : "One can not simply parse himself"
def TABLE[Jon * ROWS * foo(TABLE[ROWS][protect(mislead(( -0.24 )))],---30 - -mislead(mislead(protect(bar(1 - Sansa / 0.39,-x) + destroy(Arya,--( ROWS ) - COLS - 41) + TABLE[1][dog] * y / ( 76 ))),-88) * 1 / 55 - ROWS * ROWS,-( y ))][k] {
	Hodor /= betray(( TABLE[---destroy(( -( ( --1 / -0.86 ) ) ),bar()) - bar(y)][rule(betray(9 + rule(mislead(protect()) - -bar(57 + Stark,ROWS,TABLE[destroy(( -( -( -81 ) - bar(-1,TABLE[rule(y,61 - 1)][-( rule() + ( 9 ) )]) ) + y ))][-ROWS * -Jon + 0.18]),( destroy(( mislead() / -610.6 )) ),( -6 )) * 99 - Sansa / -y))] - 35 ),-78);
	if(Arya){
	-1;
	Ygritte *= rule(Sansa,ROWS)
} else {

};
	-( 45 )
}
def TABLE[--ROWS][i] {

}
var Sansa = -( --( -3 ) )
def TABLE[--1][k] {
	Sansa += ROWS
}
def bar(Ygritte,x){

}
def destroy(Stark,Hodor,Hodor){
	Ygritte
}
var Hodor = -0.21
assert ( -( COLS ) ) : "What do we say to the Lord of Death?"
var Sansa = Arya
def TABLE[-ROWS][j] {
	TABLE[Arya][( Hodor ) * Sansa / Sansa];
	-betray(-680.32 - --53,COLS) * ( x ) * TABLE[Hodor][COLS]
}
var dog = ( ROWS )
def TABLE[betray(--Hodor,( -10 ))][i] {
	if(0.34){
	if(TABLE[( ROWS )][-dog]){
	if(( Sansa )){
	if(destroy(destroy(protect()),Ygritte,-94 * destroy()) * protect(( ---1 ),x)){
	if(-( ( betray(2 * -79 + ROWS - COLS) ) )){
	if(-77){
	if(( ROWS )){
	TABLE[foo(destroy(),mislead(( 74 )))][--ROWS + y + -Ygritte];
	y *= -betray(--Sansa / foo(--Sansa) + bar(TABLE[Stark][-1]),-19)
}
} else {
	Stark -= x
};
	Ygritte;
	if(( ( foo() + -0.24 + ( foo(ROWS,-82) ) + ( -0.77 ) + ----0.84 * y ) ) - ( -1 ) - 82 + -1){
	0.63;
	Ygritte *= Ygritte;
	Sansa
}
} else {
	if(-betray(-( Hodor ),mislead(),COLS)){

} else {

}
}
} else {
	if(TABLE[COLS][-x]){
	ROWS
} else {
	if(0.06 / Jon){
	if(COLS * Stark){
	if(( foo() )){
	( COLS );
	mislead(COLS * ( ( COLS ) ),-0.07) * --79 - rule(860.413,---0.19 * Ygritte)
};
	foo(rule(),-( y ),( Hodor - dog ))
};
	if(bar()){
	mislead();
	if(protect() / x){
	Jon -= ( Jon );
	if(-1){
	if(mislead(--Ygritte + ( COLS ))){
	if(Stark){
	if(( -y )){
	Sansa -= Stark - bar() - protect(-( Stark ),( bar() ),-betray(y,protect(-Hodor,foo(-380.1,0.42))));
	if(bar()){
	Hodor -= -11
}
};
	Jon -= Sansa;
	if(-0.87){
	if(-83){
	Hodor -= mislead(( COLS ),( TABLE[ROWS * -860.45][--75] ) - COLS);
	foo(destroy(--COLS * protect(ROWS,TABLE[( ( ( -Arya ) ) )][TABLE[-( 1 )][( 0.92 )]],( -( 0.52 ) - y - -0.88 + 410.18 )) - bar() + -0.91 + ( --TABLE[bar(Hodor)][110.89] * Stark ) / Hodor + foo() * TABLE[mislead(TABLE[-30.811][mislead(900.98,COLS - ROWS - Arya)],-1)][( x )] * Hodor,ROWS,betray(-y,COLS) * betray(( COLS ))) * -0.12 - x,TABLE[-Jon][rule()] / dog)
} else {
	Arya
};
	TABLE[-90][-( ( ( -( -71 ) ) ) + -mislead(( -96 )) ) - COLS]
} else {
	TABLE[( -26 )][230.6415];
	Ygritte -= ROWS
}
} else {
	Hodor -= -45 * betray(COLS) - mislead()
};
	if(betray(( -33 ))){

}
} else {
	if(rule(protect(mislead(bar(),-1),Arya,rule()),( 1 ))){
	( destroy(-mislead(0.64,protect(---0.56 * ( 0.51 ),--Stark + ( 48 )),TABLE[TABLE[Ygritte][-1]][protect(61,-destroy(foo(Hodor,-83 / ---( ROWS ),destroy())))]) - 1) );
	Hodor / ROWS;
	if(( mislead(ROWS) )){
	Ygritte -= bar(-74);
	if(( Jon )){
	Jon *= Jon;
	if(mislead(TABLE[COLS - x][protect(Ygritte,-0.42)],Hodor,TABLE[0.06][x + TABLE[COLS][COLS]]) + bar()){
	Sansa
};
	Arya += TABLE[COLS / y][x]
}
}
};
	Sansa *= ( COLS )
};
	Stark
};
	Hodor += Jon + Arya
}
};
	x
};
	( TABLE[( TABLE[-mislead(-( dog ) - -89) - -Jon][ROWS] )][Arya] )
}
};
	if(bar(x,( -Jon ))){
	-( -Arya * destroy(COLS) ) - -( -TABLE[COLS][( ( ( -0.19 + 40 ) ) )] + ( bar(24,Jon) ) );
	0.77
}
}
};
	if(COLS){

}
} else {

};
	if(ROWS){
	if(( -( -38 - destroy() + ( 0.43 - -protect(bar(),( ( COLS ) ) + Jon) ) ) )){
	if(TABLE[TABLE[Hodor][TABLE[0.71][-dog] / ( -( 590.9 ) )]][mislead(-TABLE[foo()][-( --1 ) + -0.33])]){
	Stark *= x
} else {

};
	-dog;
	Sansa += Stark
};
	COLS
}
}
def destroy(Ygritte){
	y -= ( --mislead(-bar()) )
}
def TABLE[rule(Sansa,rule(ROWS))][j] {
	if(TABLE[bar()][4]){

}
}
assert TABLE[bar(--1)][Stark] : "One can not simply parse himself"
var Stark = --0.3
assert ( bar(bar()) + --mislead(COLS) + --57 ) : "Nothing burns like the cold."
def mislead(dog){
	if(TABLE[-( y )][( ( -1 ) )]){
	x *= -Jon
} else {
	if(betray(foo(---0.63),mislead())){

} else {
	Sansa += Ygritte
};
	Ygritte /= ( y + ( -TABLE[1][( destroy(protect(),ROWS) )] * -rule() * 44 + 0.04 ) )
}
}
def TABLE[rule(-1)][j] {
	Arya -= --( -( Ygritte ) );
	protect(-21,-53)
}
def mislead(){
	if(90.86){

};
	( Hodor - Ygritte );
	Stark += Arya
}
def TABLE[( Ygritte )][j] {
	Ygritte += -320.137 / 0.9;
	if(-0.94){
	if(ROWS){
	COLS
};
	Jon *= ( ( bar(Hodor,foo(),--92) ) * Jon * ( COLS ) * ( protect(dog * 57,ROWS) ) )
} else {
	if(TABLE[-betray()][-COLS]){
	Stark += Stark - ROWS;
	if(-Sansa){
	Jon /= --Jon;
	Hodor /= ( -37 * Hodor ) / 27
} else {
	Jon -= Stark
}
};
	78
};
	if(bar(Jon,-60.41) + destroy(bar(Hodor,( Sansa ),betray()),-1 / -8 - -0.97,120.21 - TABLE[foo(Sansa,-rule(( Jon ) + ( TABLE[1][COLS] ),COLS) / Arya,-( 0.01 ))][-0.27 * --( Ygritte )])){
	Stark /= Hodor
} else {
	-810.51 / -0.15 - -ROWS
}
}
def TABLE[0.06][k] {
	-1
}
assert bar(1) : "What do we say to the Lord of Death?"
var Sansa = -TABLE[betray(Hodor,-mislead(),x + -destroy())][TABLE[rule(-y,( ( -( TABLE[y][-dog + ( -COLS )] ) ) ))][COLS]] - ( ( -COLS * rule(-Jon) ) / protect(ROWS) - TABLE[bar(-ROWS + ROWS) - 0.03][0.48] )
def TABLE[( dog )][j] {
	ROWS
}
def rule(Arya,Arya,Arya){

}
var Hodor = Ygritte
var Stark = -TABLE[( 56 )][dog] * TABLE[-mislead(Jon)][Sansa]
var x = Jon
assert -( Hodor ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = y
def TABLE[destroy()][k] {
	x *= COLS
}
var Sansa = ( -dog ) + Arya
def rule(Arya,Sansa,Hodor){

}
var x = --ROWS
def TABLE[ROWS][j] {
	Stark -= -TABLE[protect(ROWS,( ( ( -COLS ) - --TABLE[( -Stark + protect(ROWS,TABLE[-destroy(rule()) + -TABLE[Hodor][-2]][-COLS],destroy(( x + 52 ) * 0.14 + -( COLS ) - 79,ROWS / Stark)) + ( ( 30.2 ) ) - destroy(-0.33) )][( TABLE[( y / Jon - 10.95 )][TABLE[24][( dog ) - TABLE[Ygritte][-COLS] - --ROWS]] )] ) ))][-( betray() ) / TABLE[mislead(-mislead(-Hodor),( ( 781 ) )) * -1][-COLS] + foo(bar(710.0188 / Sansa,y,-foo(-Hodor)),TABLE[Arya][( ( ROWS ) )])];
	Arya += -59;
	dog *= bar(-50,Stark)
}
def destroy(Sansa,Stark,Sansa){
	if(-COLS){
	if(( -26 )){
	Arya /= TABLE[-( COLS )][( Sansa )];
	( -COLS )
} else {
	-0.96
}
} else {
	if(foo(-foo(17),mislead(1,y))){
	0.46;
	if(-protect(-0.3)){
	TABLE[0.61][-COLS];
	if(Sansa){
	if(dog){

};
	Stark -= mislead(betray(-63,Arya * 1 * destroy()),-mislead(mislead(37,( Stark )),Jon,-1))
}
};
	if(( -ROWS ) - -Jon - x - dog){
	if(COLS){
	0.07
} else {

}
}
};
	TABLE[Arya][Stark]
};
	y -= -1;
	if(-44){
	Arya
}
}
def TABLE[44][k] {
	if(COLS){
	if(COLS){
	COLS
} else {
	dog -= x;
	Arya;
	if(betray(-10.63,Jon)){
	Sansa /= protect(( ROWS ),( Sansa + TABLE[TABLE[COLS][Jon]][( -1 )] )) * TABLE[-71][COLS]
}
}
}
}
var Jon = ( bar(1,-betray(-90.27) / 0.77) - -420.1 ) - ( -77 ) - -9
def betray(){
	if(57){
	y -= Jon;
	bar(Sansa,-destroy(--Ygritte,( ROWS - ( x ) / Stark )))
}
}
assert rule(rule()) : "One can not simply parse himself"
def foo(Stark,Arya,Jon){
	Arya;
	Stark /= ( foo() ) + TABLE[Hodor][-78 + x];
	Sansa *= Arya
}
assert 160.704 : "What do we say to the Lord of Death?"
var Jon = -1 * dog
def foo(x,Sansa){
	Stark;
	( ( -1 ) )
}
assert ( TABLE[--bar(Sansa / ROWS + --1 * COLS / 88 + ( -ROWS ) / ROWS) + --18 / rule(Stark - -0.28 * Jon,COLS)][COLS] + -ROWS ) : "Fear cuts deeper than swords."
var Arya = COLS
assert Jon : "What do we say to the Lord of Death?"
def TABLE[( Stark )][k] {
	if(0.06){

} else {
	if(dog){
	if(protect(COLS,-60)){
	Jon -= dog
} else {
	if(Stark){
	Hodor *= ( Stark );
	if(( ROWS )){
	Hodor -= TABLE[y][-Arya] * Hodor;
	Hodor += -Ygritte
} else {
	---820.3902;
	if(ROWS){
	Jon /= Jon;
	if(( betray(( dog ),destroy(( -Sansa - Hodor ),TABLE[COLS][1]) + dog) )){
	Stark *= destroy(rule(56,-0.21 / Arya,rule(Jon,--ROWS)),rule(-56 + -ROWS,0.84) + ( --protect(TABLE[Jon][betray(rule(mislead(( -TABLE[dog][Hodor + -1] ),( -31 ))),rule(---0.91),-1)]) ),ROWS) / dog;
	if(( -( betray(TABLE[Ygritte][( -( -( Arya ) * ROWS + TABLE[-( --ROWS )][ROWS * ( ( COLS ) )] ) - TABLE[-( foo(protect(Stark,-Sansa)) )][foo(TABLE[rule(bar(-17,Sansa) - TABLE[Arya][dog - -120.3632] * Sansa + ( -0.75 + ( foo() ) ) + 0.51,-630.015)][dog + COLS],bar(betray(-( 1 ),dog),mislead(protect(),Jon)))] )]) ) ) / TABLE[-94][Arya]){
	if(1){
	Ygritte;
	Stark -= -COLS - bar() * TABLE[TABLE[Hodor / betray(-( --86 ),( -170.627 ))][TABLE[COLS][x * ( -ROWS )]]][( --0.22 )]
}
};
	if(mislead(-0.69,-0.4,betray(mislead(14,-y,-( Ygritte )),TABLE[( foo(TABLE[protect(Arya)][COLS],( -3 )) )][foo(-Ygritte,( -21 ) * TABLE[TABLE[protect()][( -TABLE[--mislead(--protect(-99,( Ygritte ) * ( -31 ) / dog) + protect(TABLE[TABLE[foo(( TABLE[-Ygritte][0.64] ))][foo()]][( Sansa )],x) / Hodor)][ROWS] * COLS )]][-Ygritte])],-Jon) - TABLE[COLS][COLS] * TABLE[Jon][Jon])){
	Hodor -= ( -200.07 );
	TABLE[-betray(COLS,foo() / ---720.788) + dog][x]
} else {
	if(0.48){
	if(( --0.61 ) / COLS){
	-( ROWS ) - COLS
} else {
	dog /= COLS;
	-0.58
}
}
}
} else {
	betray(ROWS);
	if(Ygritte){

} else {
	Jon *= dog;
	if(( ( 0.57 * COLS + ROWS ) )){
	Ygritte /= COLS;
	if(0.51){
	Arya += Ygritte
} else {
	ROWS
}
} else {

}
}
}
} else {
	dog -= -ROWS + ( -( COLS ) + TABLE[protect(-1 / COLS,-0.99,-1)][ROWS] )
};
	Jon -= ( ( -0.47 ) )
}
} else {
	x -= 950.49 / -Sansa;
	-( rule(Arya,--ROWS,ROWS) );
	Jon *= -betray(340.068)
}
}
} else {
	Arya
};
	Stark /= -Jon
}
}
def rule(Ygritte,y){
	Hodor;
	dog;
	Ygritte += TABLE[( ( bar(x) ) )][--970.21] - 0.5
}
def betray(Jon,Jon,Sansa){
	y -= -Hodor
}
var Ygritte = ( -1 )
assert foo(30,( COLS ) / -( bar(Arya) - ROWS )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = --foo(-Arya)
var y = -61
var dog = Jon
var Jon = dog
assert destroy(ROWS,47,TABLE[1][Jon * ( TABLE[Hodor][protect(--( ( ( Arya ) ) ))] )]) : "What do we say to the Lord of Death?"
assert 840.153 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = -ROWS / -( -( TABLE[ROWS][3] ) - Sansa - --0.44 / COLS + -39 ) - rule(( dog ),-0.3) + y + bar(ROWS)
var Stark = -Jon
def TABLE[TABLE[440.12][( ( protect(rule(( ( Sansa ) ),( ( -0.7 ) )) * ( 0.34 ),destroy(betray(TABLE[TABLE[( ( mislead(dog,Jon) ) / foo() )][foo(Sansa / -960.551 + protect(-y) * Stark - -99 - x * ROWS,-1)]][bar()],( ( TABLE[ROWS][Jon / -( foo(x,ROWS) * rule(( ROWS ),Sansa) ) / 45] ) )) + COLS),rule(dog)) ) )]][k] {

}
assert COLS * ( ( Jon ) * -Arya * ROWS + --Hodor + y * x * ( --1 ) ) * TABLE[-89][bar(0.75,-420.2,Ygritte)] * ---82 / ( TABLE[-0.25 * Jon][( ( -90 ) )] ) : "Winter is coming"
def TABLE[destroy()][i] {
	-COLS
}
var Sansa = 65
assert foo(-( --destroy() - ROWS ) * mislead()) : "Nothing burns like the cold."
def destroy(dog,Ygritte,Sansa){
	if(protect(( TABLE[17 - destroy(-20.28,( COLS ) / -Ygritte * -( -34 - 1 ),( -( COLS ) ))][-destroy(-0.25,protect(( ( protect(-( ( TABLE[( Stark )][---0.34 * rule()] ) )) ) ),-0.98),( ROWS ))] ),y,foo())){
	Ygritte;
	Stark
} else {
	-Stark;
	ROWS * betray(-Sansa,-( 23 )) - -COLS;
	Arya += foo(( COLS ))
};
	if(( protect(TABLE[Stark][1],( ( ( rule(Arya,Stark) ) ) ),Arya) ) / y){
	Stark
}
}
assert ( 0.4 + protect() ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( ( -0.2 ) ) : "Nothing burns like the cold."
var dog = -Arya
var Hodor = protect(-( -x ) + TABLE[COLS][x / ( 280.65 ) - ( ( ( dog ) ) )] + -destroy())
def bar(Jon,Stark,x){
	Arya * --15;
	TABLE[--Ygritte][TABLE[-44 * dog][-( TABLE[12][TABLE[0.36][( -TABLE[Stark][-ROWS] )]] ) / TABLE[foo(ROWS) * mislead() - -( destroy(protect(Sansa,0.74),protect(-0.91 / 70,Ygritte) - Arya,43) ) / 46 / ROWS * 1 / Ygritte - -30 / 1 + -Arya][-bar(0.27 * protect(-( ---COLS / ( Arya ) * COLS * protect() )),-1,--( Sansa ))]]]
}
def rule(Jon){
	Sansa /= ( COLS );
	if(( -25 )){

} else {
	Jon
}
}
var Jon = ( foo(-rule(( Ygritte ) - 1 / -1 / bar(Ygritte - COLS,( TABLE[-Stark / TABLE[0.92][mislead(-( Jon ))]][y] * ( bar(53 / -1) ) ))) / bar(),( betray(-betray(6) / ( Arya ) + -38) )) )
var Stark = rule(foo(mislead(),protect(),( --COLS ) * TABLE[mislead(destroy(-( bar(betray(COLS,( ( 0.04 ) ),-0.03),dog) * ( ( foo() - 0.81 ) ) ) + -x,( dog )),( y ) * bar(Jon,( TABLE[COLS][88 + ( ROWS + ROWS )] ) / -27,-940.0324 - ROWS),COLS)][-1 - ( TABLE[COLS][1] - -0.15 )] + -rule(foo(TABLE[( -0.98 )][-destroy(y)],protect(-17,--24)),( ( Stark ) ))),rule(--0.56),-59)
def protect(Ygritte,Stark){
	ROWS / ( -Hodor );
	-( x )
}
var x = ROWS
def betray(Sansa){
	Arya /= x
}
assert rule(COLS,-1,-2) : "What do we say to the Lord of Death?"
var x = Jon
var Ygritte = ( destroy(-0.42,( ( --mislead(--betray() / TABLE[ROWS + ( ROWS )][( ( ( 46 - ( TABLE[COLS / -0.28][mislead(ROWS,y,( -dog ))] ) ) ) )],Jon,TABLE[-( ( -TABLE[COLS][betray()] ) )][Ygritte]) ) ) - -COLS - foo(( y ),dog,-58)) )
def mislead(y,Sansa){
	if(-70){
	Stark *= ROWS
}
}
def TABLE[rule(destroy(COLS,Arya),Jon)][i] {
	if(TABLE[Stark][0.53]){
	if(( betray() ) / -0.1){
	Arya /= x;
	if(--0.07){
	Arya -= Stark;
	ROWS;
	Jon += -70
}
}
} else {
	if(( COLS )){
	Jon /= 0.89;
	ROWS
}
};
	if(foo(Stark)){
	Hodor
}
}
assert COLS : "Nothing burns like the cold."
def bar(){
	Jon *= -Hodor * -1 / 48;
	Ygritte /= -( betray(rule(),-Arya) ) - ( -bar(TABLE[Ygritte][-COLS]) )
}
def TABLE[-86][k] {

}
var Stark = TABLE[( protect() )][( COLS )]
def TABLE[ROWS][i] {
	if(TABLE[-980.531][COLS]){
	Ygritte /= TABLE[TABLE[( ( ( protect(COLS) ) ) + y )][Jon]][foo(( foo(( --betray(Arya,dog) + foo(-y,y,-( TABLE[bar()][-11] )) * -bar() * rule(-( ROWS ) + destroy(( -0.53 * -0.82 ) + Hodor,( mislead(Sansa) ),rule(ROWS,bar())),( -0.54 ),mislead(--rule(Sansa),-bar(500.27,x / Hodor / COLS))) - 0.59 + ( rule() ) ),( 180.5014 - bar() * 0.71 ),910.144) ))];
	if(protect(dog,bar(-60,-0.8))){
	( foo(TABLE[-COLS][-98]) )
};
	( 1 ) * -TABLE[x][--TABLE[-bar(( -betray(0.04,mislead(--0.57,bar(( Stark )),Sansa)) * Sansa ))][-1]]
};
	if(foo(bar(ROWS,( Sansa ),--y) / -1 - dog / 0.85 * -0.74)){
	if(TABLE[y][destroy(COLS) / TABLE[-47][23]]){

}
} else {
	x += ( -ROWS );
	if(COLS){
	if(Ygritte){
	if(( -( Stark ) ) + Sansa / 0.68){
	Arya += COLS;
	( Jon )
} else {
	if(ROWS){
	if(( 65 )){
	-0.8056;
	-ROWS / protect(( -0.77 ))
} else {
	-Jon
}
}
}
} else {
	Sansa /= TABLE[COLS / COLS + TABLE[destroy(betray())][betray(0.33) + ( -( Arya ) )]][--0.3];
	if(( ( dog + ( --0.21 ) ) )){
	if(betray(-COLS,-0.6)){
	if(Hodor){
	protect(bar(TABLE[-63][-0.28],Arya,Jon))
}
} else {
	510.005
};
	if(( COLS )){
	if(TABLE[-protect(TABLE[TABLE[foo(-0.26,destroy())][-2]][---550.9018],-TABLE[( ( --0.38 ) )][ROWS]) * dog][-betray(-1,-( rule(rule(foo(ROWS)) + 1) / -0.07 ),-Stark + betray(Ygritte,-Arya) / Arya + COLS) / -800.1058]){
	ROWS;
	if(TABLE[foo(( dog ))][TABLE[Jon][( foo(-foo(( -COLS / COLS ),-0.97),( x )) )]]){
	dog / ( ( destroy(Ygritte) ) )
} else {

}
} else {
	x += 40
}
}
} else {
	if(destroy(-0.61 + bar(Hodor))){
	betray(Jon);
	if(( Sansa )){
	COLS;
	if(destroy(0.08)){
	( 8 ) + mislead(COLS * ( Arya ) / 0.78 / Sansa,( -0.06 )) + protect();
	x *= ---1;
	ROWS
} else {
	Arya -= foo();
	( Arya )
}
};
	dog
}
}
};
	Hodor *= Stark
} else {
	Sansa -= 0.98;
	if(Hodor * foo(-TABLE[-1][-bar(protect(),rule(Sansa,Hodor)) / -TABLE[--foo(x,( x )) * TABLE[dog][-540.589]][ROWS] * TABLE[protect(15,-foo(destroy(( --( -0.6 ) )),protect(-0.6 - -( COLS )),-destroy(mislead()) * rule(TABLE[( -Hodor )][COLS],( destroy() ))),dog)][Stark]])){
	y += dog;
	Ygritte
} else {
	y -= COLS;
	x;
	y -= ( ROWS )
}
};
	if(ROWS / ( -destroy(y) )){

}
};
	Jon -= x
}
var Ygritte = -bar(Arya)
var Stark = Arya
var Arya = x
def TABLE[COLS][i] {
	Ygritte;
	if(Arya){
	if(-1){
	Arya *= --bar(-bar() + -1 + -32) - Hodor;
	Jon -= -36 - COLS
} else {
	if(-Stark){
	0.17;
	if(-33){
	TABLE[( ( 0.28 ) )][0.89];
	x -= 71 + foo(Ygritte,( ROWS ))
} else {
	if(( ( rule(TABLE[( Ygritte )][-Sansa / ---Sansa - 14 + rule(bar(),( -TABLE[mislead() * 0.58 * -bar(0.78,foo(( Sansa )),-bar(ROWS))][-1] ),( COLS ) / 0.11)],-( 73 ),x) ) )){

};
	if(TABLE[y][-COLS + ( mislead(-0.2,-( ( destroy(83 + ROWS,---foo(-Stark,Ygritte)) ) )) )]){
	rule();
	if(Sansa){

} else {
	if(dog){
	-( -0.23 ) + --53;
	if(-7){
	( ( ( -180.15 / ROWS ) ) )
}
} else {
	-770.3
};
	Hodor /= bar();
	if(mislead(COLS)){
	Ygritte -= -43;
	rule(Hodor,-( COLS ),COLS);
	if(Stark / ( -( TABLE[( 970.35 )][Ygritte] ) )){
	Jon -= -( 0.11 ) - COLS
}
}
}
} else {
	dog -= rule()
};
	ROWS
}
} else {
	70;
	if(-( -y )){
	betray(( -33 ),0.28,-94)
} else {
	Arya *= -y
}
}
};
	dog -= ( Ygritte )
}
}
var x = -0.43
var Sansa = -COLS
var Sansa = -ROWS
def betray(Ygritte){
	if(ROWS){
	mislead()
} else {
	if(Jon){
	if(ROWS){
	x *= Stark
} else {
	if(( protect(COLS) )){
	Ygritte /= rule();
	( destroy(foo(),( COLS )) )
};
	if(-( -( --41 * protect(( -x / -foo() / ( Jon ) / ( COLS * TABLE[52][Hodor] ) + ROWS ),( ROWS )) ) - ( bar(770.928,-1) ) + -y )){
	if(0.83){
	if(dog){
	x -= Arya;
	-dog + Sansa
}
} else {
	if(-1){
	if(( ( destroy() ) )){
	Jon *= ( -66 );
	if(Sansa + -( mislead(Jon) )){

} else {
	if(COLS){

};
	Arya + ROWS
}
} else {
	Arya
}
} else {
	Arya -= --1 * ( 1 - -betray(-betray(--83,x,( mislead(-0.92,( betray(Hodor,Hodor + -81) ),0.77) )) / ( ( rule(TABLE[( TABLE[dog][( destroy() )] ) + Ygritte * -protect(-COLS)][Hodor]) + 77 - COLS ) ) / dog,0.78) + mislead(mislead(rule(-520.3),1) + ROWS) );
	Hodor *= protect(( ( ( TABLE[-42][19] ) / ( bar() ) ) ),TABLE[1 - ( TABLE[0.27][Stark - ROWS] )][87],140.786);
	if(Sansa * -87){
	Arya += -200.866;
	if(protect(-Hodor,-0.45)){

} else {
	if(( betray(bar(780.174)) )){
	if(( TABLE[TABLE[( foo(470.619) ) - betray()][-foo(19,( ( -COLS ) ))] - mislead(destroy(350.522 / ( 84 ),-Jon * bar(( 82 / ROWS )) / 1 * TABLE[-( -71 )][ROWS] - protect(370.89,( rule(20,bar(Ygritte)) ),TABLE[ROWS - ( -1 )][ROWS] - ( COLS ))),rule(-1) - -foo(x,-Jon + Hodor))][ROWS] )){
	-0.77;
	if(( ROWS )){
	Hodor *= ROWS;
	Hodor
}
};
	Jon += ( ( destroy() ) + TABLE[mislead(Jon,TABLE[foo(-rule() * ROWS)][Ygritte],--ROWS)][-26] )
} else {

}
}
}
}
};
	if(protect(destroy(),( y ),dog)){

} else {

}
} else {
	if(( -1 )){
	if(COLS){
	Arya *= protect(( -43 ),( Arya ),-Hodor * bar(ROWS / destroy(TABLE[( -0.85 / ( ( --Hodor ) ) )][TABLE[x][-betray(Ygritte)]],( -27 * -COLS + x )),0.8,-Sansa))
}
};
	-betray(-( Stark / ( --TABLE[0.65][-Hodor + Sansa / TABLE[mislead(betray(protect(Arya,mislead(760.84,x))))][x]] ) * -bar(-foo(-0.14)) * Arya * foo(ROWS / COLS + -630 * betray()) / -60.1911 ),0.97) + Ygritte - ROWS + Sansa
};
	Arya *= COLS
}
};
	if(TABLE[-Jon][Ygritte]){

} else {
	960.6539
};
	Sansa
}
}
assert ( ROWS ) : "Fear cuts deeper than swords."
var dog = dog
def TABLE[1 + TABLE[0.89][0.39]][k] {

}
def rule(Ygritte,dog){
	ROWS;
	Arya /= -640.08
}
var Hodor = ( -190.053 )
def protect(){

}
var Ygritte = COLS
var Hodor = -COLS
assert ( -Jon * Arya + -1 + -( protect(betray(TABLE[-destroy(x,-betray(-COLS / ( ( Stark ) ),Stark,Stark))][( mislead(ROWS,ROWS) )],( ROWS ) + -0.16 + TABLE[( ROWS * rule(-destroy(Arya),0.13 * 19) ) - 0.27 + ( foo() ) / Sansa - TABLE[ROWS][TABLE[Hodor][( ( -1 ) ) - -ROWS]] / ROWS + rule(( ROWS ) + protect(( TABLE[bar(--( -y - Stark ),ROWS,-0.89)][( Ygritte ) / -0] ),foo(),betray()),dog * ( 40 ) + TABLE[-95][TABLE[TABLE[y][1]][( COLS )]] - -x)][-1],mislead(-38 - protect(Sansa)) - ( ( Jon ) )),2,protect(( ( ROWS - bar(dog - Arya) ) ))) ) ) : "What do we say to the Lord of Death?"
assert x : "Nothing burns like the cold."
assert ( protect(1,TABLE[x][Arya]) ) : "Fear cuts deeper than swords."
def destroy(y,Jon,Arya){
	Jon /= COLS
}
var y = x
def mislead(Arya){

}
assert Hodor + betray(-dog,( COLS )) + ( --70 ) / -( -0.06 ) / mislead() * rule(( TABLE[TABLE[( -Jon )][-33]][rule(y,210.8)] )) / COLS : "One can not simply parse himself"
def TABLE[betray(COLS,rule(-0.23 / -ROWS + ( ( ( ( -Jon / ( COLS ) / TABLE[( y )][TABLE[COLS][-rule(foo(Sansa,-protect(( ( mislead(( -23 )) ) * -COLS ),rule()) + dog,foo(( ( COLS ) )) / -Arya - -TABLE[( Sansa )][76] + bar() - -destroy(COLS,-TABLE[bar(mislead(ROWS,0.37 + ROWS,( ( y ) ) - protect(ROWS + 0.8,Ygritte)))][protect(ROWS,Ygritte + mislead(rule(-1)) / ( ROWS ))]) + ( 8 ) * -( COLS ) + Hodor - x),( COLS ) / -Arya / ROWS)]] ) ) ) ) / -( ( Sansa ) ) - 110.6))][i] {
	if(-0.81){

} else {
	Jon *= destroy(destroy(52));
	if(( -810.172 )){
	if(betray(rule(--0.69 + Hodor,foo(-0.04,( y ))))){

};
	dog /= Sansa
} else {
	if(protect(( 0.79 ),-84)){

}
}
};
	x += destroy(bar(),rule(TABLE[Ygritte][( TABLE[rule(( --Jon ),-Ygritte)][bar(0,COLS) / --Ygritte - ( ( -( -bar(ROWS,-1) / ROWS ) ) )] )],Ygritte) / y)
}
def bar(Stark,dog,Sansa){
	Arya /= -1
}
var Arya = COLS - COLS + destroy(-641,destroy(-betray(-14,1),( ( --1 ) )))
def mislead(dog,Arya){
	Sansa - ( bar(--( --0.21 ) * Hodor,COLS) * ROWS );
	if(Stark){
	foo(y) * foo() * -84 + 53 / -protect(-COLS);
	if(COLS){
	-17;
	dog *= -8
} else {
	if(y){
	protect(Jon)
} else {
	bar(-0.05)
};
	if(-TABLE[-betray(Ygritte,dog - dog)][mislead(TABLE[1][dog])] / mislead()){
	if(betray(-61,-43)){
	x -= ( --TABLE[540.344 - ( Arya )][TABLE[( ROWS )][1] * ( ROWS ) + ( ( -730.5 / protect(-Arya,y,-0.48) ) )] );
	-0.17;
	Stark *= ( Ygritte + ( Arya ) )
};
	--360.66
} else {
	( ROWS ) * ROWS;
	COLS
}
}
} else {
	if(dog - -COLS){
	dog *= Stark;
	if(y / -44 * protect(-20.333,TABLE[( mislead(destroy(dog,( destroy() ))) )][-( dog )] + --TABLE[-protect(( destroy(-TABLE[( Jon )][( Hodor )],-protect() - dog) ))][destroy(Hodor / -( rule(-protect(-370.62 * TABLE[( ROWS )][COLS - TABLE[rule()][50]],( Jon )) * -rule() * destroy(( COLS - -destroy(( ( -88 ) ),protect(rule(TABLE[foo(rule(),COLS)][betray(ROWS,ROWS) + -Jon]),ROWS)) + ROWS )) - ( ( ( -6 / mislead(Hodor,ROWS) ) ) ),-52,80 * ( ( rule(x * -( --1 ) * TABLE[-Sansa][( Jon )] - Arya - ROWS + -0.05,-Sansa) ) ) / Jon) ))])){
	if(Sansa){
	x += -x;
	Arya += ROWS
};
	Ygritte += ROWS
} else {
	0.54;
	if(-0.67){

} else {
	y -= ( rule(Ygritte) * ( 560.61 / ( ( ( ( 0.71 ) ) ) ) ) )
}
}
} else {
	y /= TABLE[rule(-Hodor)][0.05];
	Ygritte += COLS
};
	dog -= -ROWS * Arya / mislead(( ( Arya ) ) - ( ROWS ))
}
}
def TABLE[y][j] {
	310.072;
	( -0.25 )
}
def mislead(dog,dog,dog){
	Stark /= -Hodor
}
assert -240.4551 : "Fear cuts deeper than swords."
var Arya = COLS / -0.66
def protect(Stark,x){

}
var Sansa = -( -betray(y) )
def protect(Ygritte){
	( -TABLE[( -0.93 )][-( Arya )] - bar(mislead(destroy(Sansa),Hodor),-betray(x,y,Sansa),( TABLE[--0.13][protect(-56 * ROWS * TABLE[( 0.74 ) / -( --18 )][( -( ( ( protect(mislead(( ( ( Sansa ) ) * -Sansa - ( Hodor ) )),TABLE[Stark][Ygritte],destroy(-0.98 + TABLE[( bar(( -0.78 )) )][Stark],( ( ( ROWS / destroy(ROWS,TABLE[COLS][TABLE[Sansa][0.32]]) ) ) ))) - -52 / -44 + Stark ) ) ) )] - ( 45 ) + x * TABLE[( -820.41 )][protect()],-0.73) - foo(-protect(bar(),41) - ( foo() ))] )) ) / Ygritte
}
def TABLE[ROWS][i] {
	Ygritte *= ( 0.92 );
	if(protect()){
	y /= ( x * Sansa )
} else {
	if(destroy()){

} else {
	-mislead(-2);
	Stark - Stark * ROWS;
	ROWS / ( 0.65 )
}
}
}
def TABLE[--( Jon ) + ROWS][k] {
	destroy(COLS);
	if(-410.61 + -1){
	if(COLS){

} else {
	dog /= dog;
	Jon += ROWS
}
} else {
	COLS - 40.95;
	y
}
}
def TABLE[COLS][k] {
	if(( -x )){

};
	Jon /= ( Arya )
}
var Jon = -( ( x ) )
def destroy(dog){
	dog /= -92
}
def TABLE[( ( ROWS - ( -39 ) ) * Hodor )][i] {
	0.54;
	( TABLE[TABLE[-COLS][COLS * -Jon] * 0.75 / -( betray(betray(COLS,protect(-destroy(TABLE[( x )][-destroy()],0.23,COLS))),Hodor) )][-COLS * ROWS / -TABLE[COLS / -0.76][-0.64]] );
	Arya /= -20 * dog / 3 - bar(74,TABLE[ROWS][foo(( 0.88 ),betray(( protect(rule(destroy(mislead(COLS,ROWS),-Arya)),17,( bar(x / ROWS * destroy(( --970.43 ),-( -bar(ROWS,bar(880.366,protect(ROWS,destroy(( mislead(TABLE[--0.31][rule() - y],y) ),-betray(( COLS ),( foo(( Stark ),COLS) ),betray(ROWS + ( 0.64 ),-mislead(( 3 ),COLS,( rule() )) - -COLS,( -60 ))))))) ) - COLS - mislead(Ygritte,-( -( Arya ) )) + --ROWS,-COLS)) * ( bar(( Sansa )) ) / dog * ( Sansa ) )) + -foo() ),--( ROWS )))])
}
def TABLE[bar(x,( ( foo() ) ))][k] {
	if(COLS){
	if(Hodor){
	0.41;
	x -= ROWS
} else {
	Arya /= 53;
	dog += -Ygritte
};
	x + ( ( --( ROWS ) + mislead() * ( ( -COLS * ROWS * dog ) - ROWS ) * Ygritte ) )
} else {
	if(( Stark )){
	if(TABLE[( destroy(( 70 ) + bar(TABLE[x][-47 * -0.04])) )][Hodor * rule() + 1 * protect(1 / -58)]){
	Ygritte -= ( ( Hodor ) ) / 0.67;
	if(-Stark + ( 1 )){

} else {
	if(-( -( ---31 ) )){
	( --TABLE[TABLE[Hodor][-COLS]][betray(betray(ROWS))] / destroy() - x )
} else {
	x /= 880.3;
	Arya /= -0.1
}
}
} else {
	Hodor += ( --0.54 );
	if(( -COLS ) - ( -betray(0.57,--( -1 ) / -Ygritte - protect()) )){
	Hodor += -( ( rule(Ygritte,bar(0.29,ROWS)) ) )
} else {
	protect(-Arya);
	if(( bar(TABLE[x][TABLE[x * -destroy(rule(protect(-Ygritte,( rule(( Jon )) )),-14,y),dog * ROWS) - ROWS][ROWS]],bar(TABLE[ROWS][destroy(---0.94)] / destroy(TABLE[TABLE[mislead(Sansa,COLS)][--( ROWS )]][ROWS] - ROWS * ( dog ),( protect(rule()) )),0.61)) )){
	y *= mislead(( -destroy(ROWS * --0.85,ROWS) ),0.03)
}
};
	-97
}
} else {
	ROWS
};
	if(( ( TABLE[TABLE[-destroy(foo(protect()) + TABLE[( -0.69 )][-41] - ROWS,dog) - Ygritte * TABLE[-COLS + ROWS][COLS] * dog][bar(COLS,0.23)]][-0.39] / bar(( mislead(COLS,( ( 1 ) ) * --TABLE[( -COLS )][betray(( ( rule() ) / -betray(ROWS) ))] + -Hodor) )) + Stark ) )){

}
};
	if(( -COLS )){
	( -0.32 ) * Stark / ( ROWS );
	( --49 );
	Hodor += ( ( protect() ) )
}
}
var Arya = bar()
var y = bar(ROWS,rule(-70,TABLE[1][1]) * ( mislead(Sansa,Hodor) ) + -( protect() ) * ( ROWS + rule(( 1 - ( COLS ) * foo(--35) ) - protect(-1,Sansa + TABLE[-94 / y][( -1 )],( 25 )),( -1 ),( 1 )) - -Arya ) + betray(ROWS))
def TABLE[ROWS][i] {
	if(-( mislead(mislead()) ) + Jon - -4){
	if(--98){
	Hodor -= betray(Arya);
	if(Jon){
	if(bar(( Hodor ),TABLE[-ROWS][1])){
	( COLS )
}
};
	--( bar(0.12) / betray() ) / -betray(Hodor)
} else {

}
}
}
def TABLE[betray(mislead(( TABLE[TABLE[destroy(Arya)][( dog )]][Ygritte] ),( --82 ),COLS),-0.3)][j] {
	if(-( TABLE[COLS + TABLE[ROWS][0.96]][-92] )){
	if(690.03){
	if(-destroy()){
	--0.85;
	y /= COLS
};
	if(-74){
	if(-( ---( COLS ) )){
	if(COLS){
	-( -COLS );
	y *= -1
};
	Hodor /= -dog
} else {
	Ygritte / y / Arya / ROWS;
	TABLE[( ROWS )][-0.52]
};
	if(COLS){
	-Stark + -ROWS;
	-0.45
} else {

}
} else {
	Arya
}
} else {
	( dog ) * y * Sansa
};
	y
} else {
	dog -= bar();
	if(foo(ROWS)){

} else {
	if(-Sansa / -0.77){

};
	x += -( ( -0.03 + TABLE[bar() + 0.53][TABLE[COLS - -foo(rule(ROWS,( ( 0.8 / -ROWS ) ),( rule(-COLS) )),-Ygritte + protect(Arya,Stark * -0.69,-( COLS ) - -destroy(( betray() )) - foo(( -x ) - ( protect(ROWS) ))))][Sansa]] / Jon ) ) + -30 + y + Jon;
	if(COLS){
	if(0.82 + destroy(foo(( foo(-COLS,-34) ),mislead()))){
	if(( -0.07 )){
	y += -5 / COLS;
	if(TABLE[rule(-( ROWS ))][-ROWS / ( Ygritte )]){
	Jon /= ( betray(-bar(protect(),Jon) * -920.52 * ROWS) ) + dog
};
	if(Jon){
	if(Hodor){
	Ygritte /= foo(( y ))
} else {
	if(TABLE[-( --0.16 / Jon * Jon - Jon )][-0.04]){
	Sansa *= ( Arya );
	if(destroy(ROWS,Jon) / ( destroy(destroy()) )){
	Sansa += bar();
	if(-ROWS - 400.35 * betray(mislead(50,( ( -0.54 ) * 1 )),Arya + ( TABLE[mislead()][-0.7] ) - dog,-42 - betray(-Ygritte,-betray(-TABLE[dog][( -( 450.92 * -0.33 - -680.799 / y / COLS / protect() ) )],0.64) + 11) + protect(dog,Hodor,Hodor) + -72 * mislead(COLS - ROWS,( -( -TABLE[TABLE[ROWS][TABLE[---TABLE[-0.17][foo(rule(-Hodor),Ygritte)] + -Arya + -COLS][( COLS / COLS * ( -1 ) - -0.08 )]]][1] + TABLE[COLS][( -destroy(ROWS,TABLE[mislead(-protect(dog),Hodor + Arya,-x) * Arya - foo() - TABLE[( --TABLE[y][ROWS] )][--foo(( destroy(--ROWS / -Ygritte - betray(-( x ) / Stark) - foo(( TABLE[mislead(( ROWS ),betray(41,dog) - Stark - betray(-( 490.03 ) - ( -COLS )),( betray(-1,35,0.81) ))][ROWS / TABLE[( ( -TABLE[COLS][destroy(COLS)] / -11 ) )][0.42]] ),-TABLE[rule(TABLE[ROWS][-betray(--( TABLE[-mislead(( ( -Sansa ) ) + Hodor,1,( 0.5 )) - ( Arya / -1 - 0.46 * TABLE[Arya][ROWS] * -Stark )][Jon] ),rule(foo(( betray(COLS,( mislead() )) ),-1)),( -destroy(ROWS,-( 0.7 ) / x * Arya) ) * --rule() - betray(foo(destroy(dog,-0.32) + bar(0.41) * ROWS,-0.54))) + -0.4 + ROWS],destroy(-190.43))][0.82])) )) - --ROWS]][mislead() / -TABLE[-1][-( ( ( ( -x ) ) ) ) + ( TABLE[TABLE[( Ygritte )][x]][( -0.87 )] )] * ( TABLE[Sansa][x] * ( ROWS ) ) - -( destroy(650.2733,( rule() ),destroy()) )]) ) + 29 + ( dog )] ) - -COLS )))){

}
} else {
	if(35){
	if(ROWS){
	if(-Hodor){

};
	x /= COLS
};
	Ygritte
} else {
	if(-COLS * Jon * ( 0.86 ) - Hodor * betray(TABLE[bar(Ygritte,-66,protect(1,Arya,x) * -510.111) * ( 0.63 * ( ROWS ) )][-ROWS],Ygritte * ( ( TABLE[ROWS * -( protect(COLS) )][rule(Hodor,destroy(( rule(destroy(Jon,TABLE[-0.2][Stark])) )),79)] ) + ( betray(-43,-protect(Ygritte,-1 - Arya,y),-bar(( COLS ),x)) + ROWS ) * TABLE[x][ROWS] ) * Hodor) - COLS * TABLE[-( 20 / y - -Jon - ( TABLE[-ROWS][protect(Sansa,61)] ) * TABLE[-0.04][1] - Ygritte * -x )][-Stark * -betray()]){
	if(-x - ROWS){
	if(mislead(rule(-foo(foo(),TABLE[betray()][-y],( Ygritte )),bar(TABLE[Sansa][-1])),bar(0.91))){
	Jon;
	-foo(destroy(870.555,Hodor),-12 + COLS)
};
	Stark /= Ygritte;
	if(betray(betray(1,( COLS - rule(protect(bar(Sansa,0.57))) * -Stark - 1 )))){
	if(mislead(ROWS,Stark,-protect(( 330.074 )))){
	Stark += protect(destroy(ROWS,( ( destroy() ) )),ROWS,TABLE[Sansa][-( --1 )])
};
	60.3
}
};
	if(-ROWS){

}
}
}
}
};
	if(-8 * TABLE[rule(-270.434)][TABLE[( Jon )][-( 0.52 ) * y]] * ( 20 * ( TABLE[protect(-63 / TABLE[protect(-protect(0.05) - TABLE[75][Stark * ( ( ( ( -0.48 ) ) + Hodor ) )])][( mislead(bar(1)) - TABLE[mislead(TABLE[-TABLE[0.7][TABLE[-( ( ( 420.33 ) / 12 ) )][( ( 0.26 ) )]]][rule(destroy(ROWS / TABLE[protect(-0.84)][COLS] / rule(),Ygritte),Hodor,rule())],29,0.41)][( foo(-0.57,ROWS) )] )] * ROWS - ( --( ( Stark / COLS ) ) * -Jon / Jon + ( ROWS ) ))][( ( TABLE[-0.47][COLS] ) )] ) )){
	if(( foo(( TABLE[Arya][TABLE[foo(Hodor,foo(COLS,-Hodor / ROWS))][rule(-1,rule(mislead(-180.699))) / COLS]] )) )){
	dog /= -0.3
}
} else {
	TABLE[mislead(---( -1 ) - foo(destroy(Stark)),COLS / -foo(56,( foo(ROWS + -0.04,-Stark,-0.63 + COLS / --Sansa) )),25)][betray(protect() * y) + foo(-310.0074,( ( -490.6 / -TABLE[protect(0.35)][COLS] / -foo(Stark) ) ),mislead(Jon)) / -1 * Sansa]
}
}
}
};
	x += ( TABLE[( y )][( TABLE[ROWS][-mislead(-y * -( ROWS ) * TABLE[-70][rule(Sansa,ROWS,Stark)] - -130.0245 - --Hodor,destroy())] - 71 - ( ( -73 ) ) )] ) * 53 - ( --Ygritte ) + COLS
} else {
	Sansa /= ( foo(740.491) );
	x /= TABLE[Sansa / COLS][x]
};
	if(Stark - Arya){
	if(Arya){

}
}
}
}
}
}
assert -80.742 : "One can not simply parse himself"
def bar(Stark){
	bar(-1);
	if(Stark){
	( mislead(ROWS - 0.96,protect(betray(COLS,-69,Sansa),0.72),TABLE[Ygritte - ( TABLE[( Hodor )][COLS] )][1]) )
} else {
	if(TABLE[89][rule(-1)]){
	COLS;
	( -Jon * ( 1 ) );
	if(( TABLE[foo(( destroy(mislead(rule(),( ROWS ) + -73,-0.01)) ),mislead(ROWS,ROWS,( --71 - Sansa )),COLS)][( -mislead(42,( ROWS ),Hodor) )] )){
	if(destroy(COLS,dog,( Stark ))){
	38;
	TABLE[--1 * -( TABLE[-x * ( ( betray(-270.8697,0.3,y + Stark) ) )][-84] ) + -64][TABLE[Sansa][y] + ---dog];
	if(destroy(-60.506)){
	y *= 920.3;
	if(Jon){

}
} else {

}
} else {
	betray(bar(rule(( ( -TABLE[x][TABLE[ROWS][-TABLE[ROWS][ROWS]]] ) ),TABLE[( Jon * -rule(0.89 - ( Ygritte ),( TABLE[( rule(-32,-( Sansa ),TABLE[( -0.8 )][( ( -900.3 ) )]) )][Sansa] )) + y + foo(betray(-1),x,ROWS) - Hodor ) + protect(( 0.69 )) + betray(ROWS) / foo(betray(0.94),-TABLE[dog][37]) - x][( ROWS )],foo(-Ygritte * COLS)),TABLE[-22][Stark],ROWS))
}
}
} else {
	ROWS / protect(TABLE[x][TABLE[ROWS][COLS]],protect(),-900.5)
};
	Arya - TABLE[-ROWS][( ( ROWS ) * mislead(( mislead(0,-0.53,-( ( TABLE[y][---0.59] * -67 ) )) ),x) )] / foo(-50.572,destroy(-ROWS,-( COLS )) * 0.99);
	--x
}
}
var dog = 53 - Ygritte * ROWS
def TABLE[rule(0.44,( dog ) * dog)][i] {

}
def TABLE[-ROWS][k] {
	if(-( y )){
	if(rule(mislead(TABLE[bar(( -TABLE[destroy(Jon)][ROWS] ))][-( Hodor ) - -( ROWS )]),-ROWS)){
	TABLE[COLS][COLS]
} else {
	60
}
};
	( betray(0,betray()) )
}
def TABLE[protect(( ROWS ),--25,rule())][i] {
	mislead(1,COLS)
}
def mislead(y){
	Arya - Stark
}
def TABLE[bar(( 1 ),Arya)][i] {

}
def foo(Jon,x,x){
	Stark *= Stark;
	if(( betray() )){
	70.075;
	Stark *= ( protect(Jon) );
	Stark
};
	-TABLE[dog][( --96 )] + ( COLS )
}
assert ( ROWS / x ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert COLS : "What do we say to the Lord of Death?"
var Hodor = COLS
var Jon = Sansa
def foo(Ygritte){
	-( ( Arya ) );
	Jon /= betray(bar(( destroy(betray(Stark,-( 54 ) + -1),protect(Stark)) )),1,protect(( -0.82 ),protect(Hodor / COLS) * ( 63 ))) * COLS
}
def TABLE[( destroy(mislead(foo(TABLE[TABLE[Stark][Hodor]][ROWS])),-0.01) / ( Sansa ) ) - mislead(-( COLS ))][k] {
	if(rule(Jon,( -( protect(ROWS * -( betray(dog - rule(( protect(( Sansa ) - -Ygritte + -COLS,COLS) ),-ROWS / --930.3811),-Jon,-( -980.609 ) - Arya) ) * ( -75 ) / ROWS + Arya - ( COLS ) - mislead(y / COLS) * ( bar(-mislead(( destroy(-protect(ROWS,rule(-destroy())),-x) ))) ) * destroy(-ROWS) + 0.23,destroy(-0.91)) ) ) * -( -ROWS ))){
	y += ( -110.352 );
	x -= mislead()
}
}
var x = foo(COLS,( COLS ) - protect(ROWS,-ROWS - -COLS))
var Jon = -1
var Hodor = -0.4 * ( ( Arya ) ) + Stark
assert -x : "Fear cuts deeper than swords."
def TABLE[TABLE[-78 - ( Sansa )][( --47 )]][k] {
	Jon /= Stark;
	y /= -( TABLE[210.3][protect(-420.0909 - ( TABLE[-COLS][( dog )] ),Sansa + --( ( Jon ) ))] ) * -TABLE[y][-270.189] + 0.37 - -0.74 * x / x
}
assert 20 : "Fear cuts deeper than swords."
var x = -390.62
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(){
	if(-Jon){
	x;
	if(( ( 400.58 + Hodor ) )){
	betray(protect(-Sansa + ( COLS )) * destroy(y,-0.2,0.72) + ( COLS * 0.29 / destroy() - ( -betray(-1) * -( Sansa ) + TABLE[-0.23][betray(-27)] - -COLS ) ),-betray())
}
} else {
	if(-0.99){
	if(rule(-bar(Jon,Jon))){
	if(bar(( ( 52 ) ))){
	if(--ROWS - dog){
	ROWS
} else {
	Jon *= foo(ROWS,--1);
	if(( -Ygritte )){
	( ROWS )
} else {
	if(-TABLE[( COLS )][mislead(( Arya ),COLS,-0.42) - foo(20,bar(Stark,( Sansa ),Jon))]){
	x += ROWS;
	if(--49){
	ROWS
}
};
	COLS
}
};
	1
};
	if(rule(-50)){
	Jon *= --0.62
} else {
	COLS
}
};
	if(( -mislead(-foo(bar(TABLE[destroy(-dog,Ygritte)][TABLE[protect(rule(x))][( -( -( COLS ) / ( -0.31 ) ) )] / Ygritte])) - -dog,TABLE[protect(y,foo())][-TABLE[bar(COLS)][-0.61 + 310.136]],( Jon )) )){

} else {
	Ygritte += y;
	--43 + Ygritte - 0.46
}
} else {
	if(Jon + Ygritte * rule(destroy(0.3,Stark),-23) - ( mislead(Ygritte) ) / Ygritte + -betray(-0.44,Arya) + -0.37){

};
	( ( -protect(( Jon ),-5,mislead(-98,240.96,-92)) ) )
};
	--Jon
}
}
def TABLE[COLS][j] {
	dog /= COLS;
	27
}
def rule(x){
	if(-COLS){
	if(ROWS * -85){
	rule(-destroy(-mislead(COLS,( -( destroy(Sansa,( Sansa ),COLS) ) ))))
} else {
	bar(( -( COLS ) ),-( Ygritte + protect(-1) ) / Stark)
}
}
}
var Jon = Sansa
def TABLE[ROWS / protect()][j] {

}
assert COLS : "Nothing burns like the cold."
def TABLE[ROWS][i] {
	if(1){

}
}
def TABLE[-y][j] {

}
var Stark = -TABLE[-1][COLS]
def betray(y,Sansa){
	Jon *= COLS
}
assert 0.81 / mislead(( COLS )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert COLS : "Fear cuts deeper than swords."
assert Sansa : "What do we say to the Lord of Death?"
def TABLE[protect(-75) + TABLE[0.64][0.64]][i] {
	dog /= ( -800.264 + COLS * Stark )
}
assert -( ( -( -48 ) ) ) : "Fear cuts deeper than swords."
var x = -Jon
def TABLE[betray(COLS,-Arya,-0.1)][j] {
	dog -= Stark * foo()
}
def mislead(y,Sansa){
	-( 5 );
	x *= x;
	-23 / COLS
}
def protect(Ygritte){

}
assert COLS : "One can not simply parse himself"
def TABLE[-1][i] {
	( y );
	Arya /= -destroy(-580.292)
}
var y = -0.51 / protect(ROWS,0.88) / mislead(-0.29,TABLE[ROWS][betray() / ( bar(--1 - -TABLE[-COLS][destroy(-33 - -mislead(COLS) * COLS,( ( ( ( 0.67 ) ) ) ))]) ) + TABLE[destroy(--betray(( Stark )) / -55,ROWS - bar(--0.35,-Arya))][Stark]],betray(11,x - ROWS - 0.56))
assert -1 - foo(y,ROWS) : "What do we say to the Lord of Death?"
var x = ROWS
var dog = mislead(---ROWS,0.39)
var y = ( -ROWS )
def mislead(Sansa){

}
var y = ( foo() )
assert -40.02 : "One can not simply parse himself"
assert ( bar(-rule(ROWS,destroy(-COLS))) ) : "One can not simply parse himself"
var Sansa = ( destroy() + Sansa )
assert COLS : "Fear cuts deeper than swords."
assert betray() : "Winter is coming"
def destroy(){
	COLS
}
var Stark = -( x )
assert COLS : "Winter is coming"
var Hodor = --1
assert ( 0.42 ) : "Winter is coming"
def TABLE[-ROWS][j] {
	Sansa /= --49
}
var Ygritte = x - --bar() - Jon
var y = protect(ROWS * TABLE[Hodor][protect(--foo(-rule(( Ygritte )),-( Sansa ),x) - -0.76 + ROWS + Jon - COLS,-betray(foo(),dog / --740.5 + Hodor) - COLS + destroy(( Jon - -0.43 / destroy(betray(dog) / -Arya,destroy(ROWS)) ),ROWS) - -0.39)])
var Ygritte = 47
def foo(Hodor){
	Jon += COLS - -rule(13,-( protect(TABLE[-0.48 - mislead(0.76) * y][Sansa],COLS + ( Ygritte - -1 )) ) / -0.03);
	Jon /= ( ROWS )
}
def TABLE[880.5][j] {
	dog *= -97;
	Ygritte -= -1
}
assert 51 * TABLE[destroy(ROWS)][-( --80 ) * ( 0.5 * TABLE[betray(Stark)][Jon / TABLE[bar(0.16)][protect()]] )] + protect() : "Winter is coming"
def TABLE[-destroy(Ygritte,TABLE[mislead(( ( 1 ) ))][COLS],Jon + betray() * COLS)][k] {
	Ygritte += -mislead(COLS,-0.33,protect(( -50.296 ),( ---Ygritte / Stark - -COLS * ROWS / ( ROWS ) / ( destroy(( Sansa )) ) ),foo(ROWS)))
}
def foo(Stark){

}
def TABLE[-ROWS][j] {

}
def destroy(Ygritte,Ygritte){
	Arya *= -ROWS
}
assert foo(TABLE[-0.24][Jon]) : "Winter is coming"
def TABLE[rule() - Jon - -0.2][i] {
	x;
	x += x
}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(y){
	x;
	if(ROWS){
	TABLE[( y )][-1]
};
	Jon += -bar(( COLS - ( -70 ) ))
}
def rule(Arya,Ygritte){
	-( 43 / 0.99 )
}
def TABLE[bar(-77,-( -71 ))][k] {
	if(0.44){
	y *= -( ( ROWS ) ) - -( --Stark * --COLS + ( ROWS ) * -dog );
	( destroy(-( Jon ),y,-dog + bar()) );
	if(TABLE[( -49 )][1]){
	if(( Jon )){
	Jon -= bar();
	Arya += bar(ROWS,( Arya ));
	--foo()
};
	86
}
}
}
def rule(Hodor,Arya,x){

}
var Ygritte = 0.88
assert mislead(COLS,TABLE[destroy(0.47)][-0.6] + -( Jon ),( -7 )) : "Nothing burns like the cold."
var Sansa = Ygritte - 0.32 / ( destroy(( ( ( bar(destroy(destroy(Ygritte),-dog)) ) ) ) + ROWS) ) / -COLS
var Stark = Arya
assert -( -46 ) : "Fear cuts deeper than swords."
var Jon = Sansa
var dog = 0.96 / ( ROWS )
def TABLE[dog][j] {

}
assert Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(Ygritte,x){

}
def TABLE[COLS][k] {

}
var Sansa = Stark
def betray(Jon,Ygritte){
	dog += 56
}
assert 42 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( -0.88 ) : "Fear cuts deeper than swords."
def bar(x){
	if(( -destroy(( betray() ),foo(),betray()) )){

} else {

}
}
def TABLE[TABLE[TABLE[0.18][-ROWS]][COLS * -( dog ) / TABLE[-0.89][( Hodor )] + ( -1 * bar(betray(),ROWS) )]][j] {
	x += -1 / rule();
	y -= ( -mislead(mislead(destroy(-0.25,--1 - rule()))) )
}
def bar(Jon,dog,Stark){
	if(rule(Arya,-75)){
	-TABLE[-0.29][46]
} else {
	if(0.91){
	Hodor -= ( betray(TABLE[COLS][destroy(( -Hodor ))]) );
	Jon += 0.05
} else {
	Ygritte += Hodor;
	TABLE[-6][Hodor]
};
	if(-TABLE[COLS][( ( ( Hodor ) ) )] * COLS){
	-rule(( rule(-rule(( COLS ),COLS) - --0.49 - -1,---( ( Hodor ) )) ))
};
	Ygritte *= TABLE[-Ygritte / -940.531][-ROWS]
};
	y += dog
}
assert 930.2566 : "What do we say to the Lord of Death?"
def TABLE[1 * 1][k] {
	if(rule()){
	Sansa += --( 0.38 )
} else {

}
}
def TABLE[Sansa][j] {
	Sansa *= TABLE[Ygritte][( TABLE[--Arya * y][Stark] / Ygritte * -0.1 )];
	Sansa * -betray(COLS);
	dog *= ( -betray(-( Jon ),( -531 )) )
}
def destroy(Hodor,Stark){
	-y
}
assert ( ( 78 ) ) : "What do we say to the Lord of Death?"
def TABLE[protect(TABLE[Ygritte][Arya],680.29)][k] {
	if(--0.94){
	Ygritte /= 0.64
};
	if(-60 * 730.611){
	Arya -= foo(0.07 + -0.06,TABLE[destroy(protect(Hodor,mislead(ROWS,y + TABLE[rule(protect(( x )),-0.56 - COLS)][--rule(-foo(dog,Jon,0.58) + ROWS)]) * ROWS))][COLS]);
	Stark += -0.76 * betray(COLS,TABLE[COLS][TABLE[mislead(( y ),COLS)][0.59 * COLS]])
};
	Sansa /= Ygritte
}
def foo(Arya){
	ROWS;
	if(0.62){
	( -790.4 ) * Hodor
};
	if(Stark){

}
}
def mislead(x){
	0.89;
	dog -= ROWS;
	Arya -= protect(dog)
}
var x = x
def TABLE[-destroy(ROWS,-( ( 820.1 ) + -TABLE[foo(( y ),-TABLE[( TABLE[ROWS][Hodor] - -ROWS )][60.7 - betray(( -( ( -0.66 ) ) ),-1 / -( -Sansa ) * 9 / protect(( ( dog ) ),--1,--69) / Hodor / TABLE[ROWS][COLS] * 97)])][0.18] + ( ROWS ) ))][j] {

}
var Ygritte = destroy(0.64,( TABLE[( -55 )][foo(Jon)] ),Ygritte)
def TABLE[( Ygritte )][i] {
	if(-x){
	x += TABLE[-( ( --bar(mislead(-0.97,COLS)) / TABLE[( ( -Ygritte ) )][-52] ) )][protect(( ROWS ))];
	Hodor += ( mislead(0.41,( ( -1 ) - -mislead(-protect(--Jon,destroy(ROWS,Ygritte),foo(( -1 ) - ( 79 ) / TABLE[TABLE[foo(Sansa,mislead(),foo(TABLE[Arya][TABLE[x * 1][destroy(-0.57)]]))][-57]][betray()]))) * -370.8 )) )
};
	if(ROWS){
	ROWS / Stark
}
}
var dog = bar(Arya,( mislead() + ( ( Sansa ) ) ) * Jon + TABLE[COLS][ROWS])
assert ( ( --x ) ) : "What do we say to the Lord of Death?"
assert COLS : "What do we say to the Lord of Death?"
def TABLE[TABLE[TABLE[ROWS][ROWS] * Sansa][TABLE[-( ROWS ) - ( Jon )][0.18]]][i] {

}
def destroy(dog,Stark){
	Ygritte -= -53
}
var dog = Stark
def TABLE[mislead(Jon)][i] {

}
assert destroy(-mislead(protect()) - ( Stark ),COLS) : "One can not simply parse himself"
assert ( ( TABLE[-0.84][-0.47] ) ) + COLS : "What do we say to the Lord of Death?"
def TABLE[-( bar(( COLS ),-TABLE[TABLE[-43 + ( --0.44 )][ROWS]][betray(protect(x * 77 / -1,-( ( 13 ) ),( ( ( ( protect() ) ) + Jon / ROWS ) )) / TABLE[-( x )][-39]) * ( ( bar(480.24) ) )] / -1,--270.6) )][j] {

}
def TABLE[--ROWS][j] {
	620.7321
}
assert ( TABLE[Ygritte][TABLE[TABLE[-x][mislead(COLS,-foo(-foo() * -foo(77,640.868,TABLE[dog][COLS])) + bar() + ROWS / bar(TABLE[bar(foo(( --x ) / COLS),-0.02,rule(-( -( mislead() ) ),-TABLE[destroy(-foo(-mislead(-0.27) + ( -betray(0.67) ),-x)) * ( y - COLS ) + -1 * TABLE[destroy(COLS,bar(-TABLE[ROWS][1]),2)][--0.07 * 1]][( -( dog ) )])) + ROWS][( Ygritte / ROWS * -0.71 )],betray() * Stark * COLS) / bar(),ROWS)]][betray()]] ) : "One can not simply parse himself"
var Sansa = -70.7608
def TABLE[TABLE[( ( ( COLS ) ) ) - TABLE[ROWS][-1]][foo(0.97)]][i] {
	bar(COLS,Sansa);
	ROWS
}
var y = ( 0.19 )
assert COLS : "What do we say to the Lord of Death?"
var Ygritte = -COLS
def rule(Jon){
	Jon + -TABLE[COLS][-rule(rule(( COLS ),-Sansa,COLS) - mislead(TABLE[destroy(dog,--Hodor - foo(--bar()) - destroy(mislead() * Sansa,390.62) * 1 - ( ( x ) ))][COLS])) - ( 28 )] - ( bar(-( TABLE[-( foo(foo(TABLE[50][-( -1 )]) - ( -770.301 ),---bar()) )][COLS] ) / --( Stark / mislead(( 61 ),( ( dog ) )) ),Ygritte) ) * 56;
	Jon
}
var Arya = Hodor
def TABLE[( -Arya )][j] {

}
def TABLE[-rule()][i] {
	Stark *= ( -0.88 ) * --foo(dog,-2);
	Ygritte
}
def foo(dog){
	if(-130.73 * Sansa){

}
}
var Jon = bar(--destroy(-Hodor,41,ROWS) * y + Sansa + -rule(-Sansa,TABLE[-( 98 ) * bar(ROWS,COLS) * ROWS][TABLE[480.433][--0.46]],ROWS) + TABLE[destroy(Stark)][y])
def rule(Arya,x){
	( 32 / -0.66 ) - 770.006
}
def TABLE[Sansa][j] {
	if(-protect(Arya) + ( TABLE[bar(TABLE[bar()][74],1)][-( 0.22 ) / 61] ) - -0.46){
	if(510.88){
	if(COLS){
	Jon += ( ( Sansa ) );
	ROWS;
	Sansa /= ( ----71 )
};
	Ygritte /= -betray(-Stark);
	-6 / Arya
};
	Hodor += 0.44;
	Ygritte -= TABLE[0 - dog][Sansa]
};
	if(ROWS){
	Ygritte += mislead(-820.2621)
};
	-Ygritte
}
def destroy(Jon,Sansa,Hodor){
	-0.69
}
def TABLE[TABLE[bar(-destroy(10)) + Jon][TABLE[98][370.51]] - ROWS][i] {
	y *= Sansa
}
var Hodor = ( ( COLS ) - rule(93,COLS) )
def protect(){
	dog *= -( mislead(x,-Ygritte) ) * -Stark;
	if(bar(destroy(-protect(-COLS - y,-0.21)),destroy(--0.32),betray(rule(( --640.3 + 0.38 / ( 0.98 ) * 0.65 + y - Arya + dog )),ROWS,foo(( --360.55 ),-protect(Hodor,foo(( --1 )) + -( -( TABLE[COLS][COLS * 18] ) )) * -( protect(rule(x,Ygritte + 0.15)) ) * ( mislead(--Jon) ) / -0.76)))){
	x *= COLS
} else {
	Ygritte -= rule(( TABLE[-( protect(rule(COLS,foo(-0.59,-70,-ROWS) / ( ( 95 / --COLS - Sansa ) * Hodor + ROWS ),-ROWS)) )][-1] ) * destroy(),COLS)
};
	Arya /= betray(--TABLE[-ROWS / COLS][dog]) / ( Ygritte * ( bar(rule(),Jon - ( bar(x - ROWS,TABLE[-ROWS * -13][rule(rule(Jon),( COLS ))],-0.77) ) + bar(),TABLE[-35][-7]) ) )
}
var Jon = Ygritte
assert ROWS : "Winter is coming"
assert foo(-ROWS - 1) : "Nothing burns like the cold."
def TABLE[( ( Sansa ) )][j] {
	Arya *= 0.43
}
def destroy(Arya){
	Arya -= destroy(y);
	COLS + -TABLE[protect(( bar(ROWS,--5,87) ) / ( Jon ),TABLE[--0.97 / destroy(-TABLE[( Sansa )][( destroy(-COLS,Arya) )],bar(betray(-y) / ( -Stark ) * COLS,-bar(),TABLE[betray()][protect(rule(( dog ) - ROWS,-( ( Stark ) )),-1,protect(dog,--ROWS - rule(bar(-0.58),TABLE[destroy(50,( --TABLE[y][--220.6] ),0.4)][-destroy(mislead(x) / 1,Ygritte,( ( ( ROWS - -TABLE[-0.28][Stark] - rule(TABLE[Stark + -protect(Ygritte) / Hodor][Arya],ROWS * --( COLS )) - Ygritte ) ) ))],--32),ROWS))]),ROWS) / ROWS * Sansa][ROWS] / -260.41)][( TABLE[410.707][--43] + foo(-59,foo(protect(ROWS,-( bar(-dog * -mislead(-40.146 / ( COLS / -89 ),( ( COLS ) )) / ( x ) / -COLS + dog + Stark) ),--420.7),rule(( mislead(dog,TABLE[--1000.094][TABLE[-betray(--( mislead(-530.25,-1) ),Arya,ROWS * foo(-1))][foo(betray(( Ygritte / COLS ) + ROWS))]],Stark) ),COLS,Hodor),Jon)) / ( Stark ) - TABLE[ROWS][-0.75] )];
	if(( 0.79 )){
	betray(-690.88 - Jon);
	if(( COLS )){
	if(Jon){
	if(bar(1)){
	( dog );
	Ygritte /= ROWS;
	--COLS
} else {
	Ygritte *= 910.809;
	Jon += Arya;
	if(y){
	if(protect(0.75) + ( -ROWS - mislead(( protect(( Jon ),mislead()) ),mislead(Arya,0.28,foo())) )){
	if(( ( ( Stark ) ) )){
	TABLE[betray(-1)][-97] + destroy(-mislead(Ygritte,-0.02,-300.4))
};
	if(( foo(dog,betray(y)) )){

}
} else {
	ROWS;
	if(y){
	Sansa -= ROWS;
	protect(-0.69)
};
	Jon
};
	if(-( ( -Arya / ( TABLE[-TABLE[( ROWS ) / ( -56 - ( ( ROWS ) / 0.71 ) )][TABLE[-770.35][Ygritte]]][protect(Hodor)] * Hodor ) ) ) / ( mislead(-900.7 * ROWS,betray(-COLS + ( Arya )) * ( 1 )) - --620.299 ) + ROWS){
	destroy(-( ( rule(COLS,--180.4) ) ),-protect(COLS,---510.2 * -y,TABLE[( ( ROWS ) )][Arya])) / -TABLE[-71][-25 * -x]
}
} else {

}
}
};
	y += Stark - destroy(destroy(TABLE[TABLE[( Jon )][--170.1 * Sansa - TABLE[Sansa][-ROWS] * --Sansa]][57],-rule(rule(rule(betray() / COLS,( COLS )),-0.11,y),Stark)))
} else {
	-0.19 + --dog + -0.41 + -TABLE[Jon][-890.3] + Sansa + --76 + ( 1 ) - -betray(x) / destroy() - 1 - -32 * Hodor
}
} else {

}
}
assert -foo(Jon,COLS) : "Fear cuts deeper than swords."
var Ygritte = -0.04
var Stark = bar(betray(Sansa,-TABLE[990.9][0.77]))
def TABLE[-dog][k] {
	if(( ( ROWS ) )){

} else {
	-0.33;
	dog /= mislead(( ( ROWS ) ),Sansa,-COLS - x)
};
	Stark -= --bar(-1,COLS) + ( betray(protect(Stark)) )
}
assert ( COLS ) : "One can not simply parse himself"
def betray(Sansa){
	if(( -990.79 ) / betray()){
	ROWS
} else {
	( -27 );
	( Arya ) + ( -820.887 )
};
	y *= rule(ROWS,( 70 ),COLS);
	Hodor *= -( Ygritte )
}
assert ROWS : "Nothing burns like the cold."
assert -150.89 : "Nothing burns like the cold."
assert -TABLE[ROWS / -0.56][-0.03] : "Fear cuts deeper than swords."
def mislead(Jon,x){
	y -= -( COLS );
	if(protect()){
	( COLS - betray(TABLE[-0.94][bar(-ROWS,Hodor)],dog) - TABLE[TABLE[( Ygritte )][COLS]][( y )] );
	if(Hodor){
	( --7 );
	if(-foo(( Hodor )) - 80){
	if(( Arya ) - 200.793){
	Hodor
};
	Hodor *= protect(0.21,COLS,( protect(-( ROWS )) ))
}
} else {
	Jon
};
	if(-COLS - betray(-1)){
	0.46;
	Arya;
	dog += --betray(( ( x ) ))
}
} else {
	y += --ROWS;
	Jon *= Jon;
	( mislead(destroy(Stark,Ygritte,COLS),--0.3,ROWS) )
}
}
var Ygritte = TABLE[( bar(-rule(ROWS,-34,--9)) * rule(rule(foo(--x),-Stark,protect(ROWS - mislead(ROWS,Sansa)))) )][( ( -65 ) )]
assert -TABLE[( -ROWS - Stark )][mislead(( ROWS ),( TABLE[( rule() )][Ygritte] ))] : "Winter is coming"
assert Hodor : "Nothing burns like the cold."
assert -ROWS / mislead(--Ygritte) : "What do we say to the Lord of Death?"
def rule(Hodor,Stark){
	y *= betray()
}
assert mislead(ROWS,rule(( TABLE[mislead(-1,( -50.116 ),betray(Sansa,-ROWS))][dog] ))) : "Fear cuts deeper than swords."
var dog = COLS
assert foo(---380 / ROWS,( betray(TABLE[COLS][Stark]) )) : "Winter is coming"
def destroy(x,Arya){
	y += mislead(rule(-1) / ( Jon ),COLS * ROWS / -98);
	TABLE[68][-240.3]
}
var Stark = COLS
var y = -95 / ROWS / ( ( x + -TABLE[-90.54][-54] ) )
assert y : "Fear cuts deeper than swords."
assert ( ( --( -1 ) ) ) : "One can not simply parse himself"
def TABLE[TABLE[-foo(foo() / -1,-0.47,1) - -1][COLS]][j] {
	TABLE[COLS * ( ( y ) ) / -0.33][-bar(( -660.72 ))]
}
var Ygritte = 1
assert ( Arya ) : "What do we say to the Lord of Death?"
assert ( x ) : "What do we say to the Lord of Death?"
assert destroy(-1,0.06) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[ROWS][k] {

}
assert 890.6365 : "Winter is coming"
def bar(Stark,Arya){

}
def betray(){
	-3;
	--( Ygritte + -bar(Sansa) * 42 );
	if(destroy(bar(betray(mislead(rule(( -1 - -630.94 ))),Arya) / ( ROWS )))){
	( Ygritte );
	Jon += ( -Stark )
}
}
def TABLE[dog][i] {
	Ygritte *= ( ROWS ) - COLS / ( Arya ) * mislead(0.19)
}
var dog = --1
assert ( Ygritte ) : "Winter is coming"
var y = Hodor
def mislead(){
	if(rule(-( betray() ),-73 + Jon)){
	( destroy(ROWS) )
} else {
	y += 69
}
}
def betray(){
	rule(0.28) + TABLE[Jon][Arya];
	-32 + protect(Hodor + -( ( protect(Arya) ) ),( -200.419 ),20.511);
	if(-1){
	Arya * 0.65;
	Sansa;
	1
}
}
var dog = betray(-( Arya ))
def TABLE[( 0.68 )][i] {
	if(( COLS )){
	Jon += ( -mislead(Jon,-bar(),rule()) );
	if(destroy(TABLE[Jon][ROWS] * 40)){
	x;
	Hodor
} else {
	if(-y){
	-1;
	COLS
};
	Sansa -= rule();
	dog *= foo(mislead(( 62 * destroy(ROWS,( TABLE[rule(ROWS) + --55][-0.49] )) - -94 / 0.67 )))
}
}
}
var Jon = 66
def foo(Sansa,y,dog){
	if(-1){
	-( -( -( x ) * TABLE[( -430.39 )][-( ( -400.29 ) )] + ROWS ) );
	Sansa *= rule();
	( ( ( -destroy() ) ) ) / destroy(Ygritte,79)
}
}
var Sansa = --200.5327
var Sansa = bar(-( --36 ) * ( -( ( TABLE[betray()][( 0.36 )] + mislead(TABLE[x][( -1 ) + 1 / 250.98]) ) ) ))
def protect(Ygritte,dog){

}
var Sansa = 80
var Jon = ( -foo(-Jon,Stark,ROWS - -55 - -( -0.09 )) )
assert Arya + ( -0.39 / protect(( -COLS ) * Jon,TABLE[protect(--Hodor,-0.61)][( ROWS )],TABLE[0.23][TABLE[-Ygritte][ROWS]] - 63) + -1 / -Jon ) + 46 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = foo()
assert -49 - -1 - ( Sansa ) : "One can not simply parse himself"
assert ( TABLE[Arya][-1] ) : "One can not simply parse himself"
def foo(dog,Arya,dog){
	-Stark - -Stark
}
def bar(){

}
def mislead(x,Stark,Sansa){
	( ROWS )
}
var Hodor = Arya
def foo(Hodor,x){
	ROWS;
	( -betray() ) / foo(ROWS + foo(( Hodor ),ROWS,( mislead() ))) * ROWS / 190.36;
	Hodor
}
def destroy(){
	if(betray(( ( ( 11 ) ) ))){
	Arya;
	x /= -mislead()
} else {
	COLS;
	--620.162 + ( -( -rule(--Stark,( ( 28 ) )) ) )
}
}
def TABLE[Ygritte][k] {
	( ( x ) / ( --0.02 ) );
	TABLE[-0.96][-TABLE[( mislead() )][ROWS]] - protect()
}
def betray(){
	Arya /= COLS;
	if(-0.85){

} else {
	if(COLS){
	( ( -0.4 ) );
	Ygritte /= 0.69;
	( Hodor - x * ( 88 ) )
} else {
	Arya /= rule(-ROWS + COLS) / Sansa
};
	if(TABLE[rule(betray(-39),( -820.05 ))][Arya]){
	x += TABLE[-y / ( -400.483 ) / --foo(27,-y)][ROWS]
}
}
}
def TABLE[ROWS][i] {
	-Jon
}
def mislead(Sansa){
	y *= -31;
	y += ( ( destroy(Ygritte) ) )
}
var Arya = -COLS
assert 0.65 : "Fear cuts deeper than swords."
def TABLE[--bar(0.43,Hodor * -y - COLS,dog)][j] {
	TABLE[-25][y]
}
def foo(Stark){
	mislead(( COLS ) / Ygritte);
	Ygritte /= -bar();
	( destroy(-Stark,mislead(bar(-0.95,COLS / ( -COLS - -0.29 - 0 ),Ygritte),ROWS)) )
}
assert rule(dog,mislead(-0.91)) : "Nothing burns like the cold."
def TABLE[ROWS][i] {
	y -= --80;
	dog -= ( -7 )
}
assert ( ( ( -0.69 ) ) + -COLS * Ygritte ) / Stark : "Winter is coming"
var Sansa = -0.56
var Hodor = Jon
def TABLE[0.71][k] {
	y += dog
}
def foo(dog,y,Hodor){
	if(COLS){
	y += --destroy(( -Jon )) * mislead(ROWS,( -1 ),-TABLE[-0.07][( -540.789 )]) / foo(680.4533,TABLE[destroy(ROWS)][( Hodor / COLS )]) + ( mislead(TABLE[-0.05][Hodor]) + -75 ) / -0.18 + destroy();
	bar(( -0.06 / --ROWS ))
} else {
	if(TABLE[( ( ( COLS / ( Sansa ) + 97 ) ) )][-0.04]){

} else {

};
	Stark
};
	dog += ( COLS )
}
def TABLE[Ygritte][j] {
	( Stark );
	-220.53;
	Ygritte /= -( bar(-( ROWS )) )
}
def TABLE[Hodor][j] {
	if(Ygritte){
	if(y){
	COLS
} else {
	bar(--2 / ( -( 40 ) ));
	if(( betray(TABLE[-( TABLE[Hodor][bar(-1,rule(),ROWS)] ) + ( bar(rule()) - -0.72 )][bar(Stark,( dog ) / foo() + 750.8124,1 - betray(Ygritte + -10.07 + ( Jon ),TABLE[( ( -40 ) ) + ( -190.476 ) - TABLE[protect(-540.866 - -40.81)][-( ( ( ( -( -Arya ) ) ) * Arya * ( Hodor ) ) * -TABLE[TABLE[TABLE[x][( -( TABLE[Ygritte][dog] ) )] - Stark][( foo(-290.04 / -( -( 76 ) ) * --150.755,-910.897,dog) + ( rule(COLS) ) + ( ( TABLE[y][ROWS] ) ) )]][TABLE[protect(( 0.21 ))][COLS]] * 460.79 - --( Stark ) )]][-( -( -3 ) ) / betray(Ygritte) / -( Ygritte ) + ROWS]) - 0.03)],-bar(-910.631)) )){
	Hodor *= dog * -TABLE[( -50 )][-0.04];
	if(Stark){
	Sansa /= 980.8575
}
};
	-Sansa
}
}
}
var Sansa = ROWS
def protect(Sansa,x,Stark){

}
var Jon = ( COLS )
def bar(Ygritte,Hodor,Stark){
	Hodor *= -0.64
}
def protect(Sansa){
	Hodor *= dog;
	x -= ( foo() + -ROWS );
	Stark += COLS
}
def TABLE[-2][j] {
	if(y){
	Hodor += Arya;
	if(COLS){
	y;
	if(-Hodor){
	if(-0.52 + 0.96 * y / ( betray(( -protect() )) )){
	Stark += ( COLS );
	if(TABLE[dog][COLS]){
	if(( TABLE[betray(0.72)][( -ROWS ) * ( Hodor ) + y] ) / 990.02){
	if(COLS){

} else {
	Ygritte /= mislead(mislead(-0.01,( bar() ),-COLS / ( COLS ) / 79) + TABLE[bar(( -bar(-mislead(--( TABLE[-mislead(TABLE[y][ROWS])][66] ) - --0.5,86)) - -270.732 ) / 1 - TABLE[-0.74][( -280.588 )] + ( ( COLS ) ),73)][ROWS] - ( mislead() ));
	if(-Sansa){

}
};
	if(protect(( -( mislead(TABLE[--mislead(dog)][---0.26 + -betray(Arya,ROWS)],rule(ROWS,-0.45,bar())) ) )) + rule(Jon,Ygritte)){
	-20 * ( ( TABLE[( ( -Arya * destroy(Arya) ) )][mislead(( ( -( ( 0.5 + foo(( -Hodor )) / Ygritte * --destroy(TABLE[-0.02][mislead(TABLE[betray(COLS)][--1 - -0.58],Ygritte)] - mislead()) / Jon ) ) ) ))] ) ) / TABLE[Hodor][( ( Arya ) )];
	rule() + Sansa
} else {
	mislead(betray(-foo(( dog ),mislead(rule(-0.01,ROWS,( ( betray(21) ) ) / -0.37 * ( -dog / Hodor / --betray(( -39 ),TABLE[bar(ROWS / foo(Arya * COLS) / ROWS)][( bar(protect(TABLE[Hodor][COLS],TABLE[96][-0.43])) ) - dog / bar(-63)] + ( ( COLS ) )) )),--TABLE[foo(ROWS)][x] - bar(destroy(( ( -Stark + -0.26 / Stark ) )),COLS) - destroy(TABLE[betray(-0.4,ROWS,-550.7)][foo(70)]) / --0.12,mislead(TABLE[Arya][TABLE[0.76][( ROWS + -870.236 )]],( ( 34 + rule(foo(mislead(( mislead(ROWS,Sansa,-dog) ))) / mislead() - --Stark - -betray(Hodor) / ( Ygritte ),-( -rule(-14,Arya) )) ) )))),foo(-Ygritte,-850.85,-1)) + mislead(x,( -78 )),--TABLE[COLS][-48] + ( rule(TABLE[COLS][-TABLE[--foo(90.49,-0.14)][( -0.29 ) + destroy()]],y) ) * -1 * 0.13);
	COLS
};
	if(x){

}
};
	betray() * ( Sansa );
	if(Ygritte / --0.49 * Hodor){
	-93;
	if(-38){
	betray(-x,Stark)
}
} else {
	if(foo()){
	if(( --Jon )){
	if(ROWS - betray(TABLE[( ( Stark ) )][Jon],ROWS,Stark) - -( COLS )){

}
} else {
	if(-1){
	( ( -770.034 ) )
};
	if(Ygritte){

}
}
};
	bar()
}
} else {

}
}
}
} else {
	if(betray()){

};
	x *= Jon
}
};
	Stark *= ROWS;
	Stark /= 1
}
var Ygritte = ( COLS )
assert ( mislead(-( Sansa )) ) - Stark : "Winter is coming"
var Arya = bar(-1,-280.647)
def TABLE[protect(TABLE[35][rule(Jon)])][k] {
	Hodor /= TABLE[( foo(( -71 ),-5 * Ygritte) )][Stark]
}
def TABLE[( ROWS ) * ( ROWS )][k] {
	x -= ---COLS + ( foo(y,rule(ROWS,( Stark ),( rule(foo(-( TABLE[rule()][bar()] ))) ) / -1)) ) / destroy(( mislead(y) )) * foo(bar(( COLS ),foo(COLS,foo(-1,destroy(-0.28,26))))) / ( -900.629 ) / ( Arya ) - 0.43
}
assert ( -58 ) : "Winter is coming"
assert protect() : "What do we say to the Lord of Death?"
var y = 61
var dog = 13
assert destroy(y) : "One can not simply parse himself"
def TABLE[-0.17][k] {
	dog -= ( ( -0.97 ) );
	COLS - Hodor;
	Arya += 45
}
assert ROWS : "One can not simply parse himself"
def mislead(Sansa,Arya,y){
	if(( -( Hodor ) )){

} else {

};
	-( protect(-100,TABLE[( x )][foo(---29 * x / Ygritte)]) * y );
	-TABLE[-0.71][( -( --0.54 ) )]
}
assert x + Sansa * COLS : "One can not simply parse himself"
assert 0.8 : "Fear cuts deeper than swords."
var Sansa = mislead()
def TABLE[TABLE[TABLE[betray(ROWS)][Hodor]][-0.56]][j] {
	if(ROWS){
	Arya += -0.96
} else {
	if(-72){
	Hodor *= protect(--67,-destroy(-destroy(( 0.4 ),-TABLE[( TABLE[Ygritte][-ROWS + mislead(ROWS)] )][( ROWS )],-950.6) + TABLE[foo(Stark,( -780.6582 )) / COLS][-1])) - -Hodor;
	x += ( Sansa )
} else {
	TABLE[betray(-0.26,COLS) - -0.91][mislead(Sansa)] * COLS;
	if(-75){
	0.57;
	Sansa /= TABLE[Jon][destroy(bar(( -( --600.939 ) ),mislead(dog * ( -36 ))))];
	y += -( TABLE[-protect(0.69)][Hodor] )
} else {
	if(78){
	if(64){
	if(-0.8){
	y -= TABLE[Stark][betray(( 2 ))]
} else {
	COLS;
	destroy(COLS,Sansa);
	if(bar(betray(COLS,betray()),( -0.02 ))){
	dog += y;
	if(ROWS * 0.74 - ( 75 ) * betray(destroy(Hodor,destroy(( bar(-1,bar(protect(-0.49,-TABLE[Ygritte][-0.43]),bar(Ygritte))) ),( ( TABLE[ROWS][COLS] ) ),ROWS) - ROWS * ( --1 ) - ( COLS / -Hodor ) * -foo(ROWS,Stark) * ( -ROWS ),-Sansa),Arya,-50)){
	if(bar() - destroy(ROWS,-0.55,TABLE[betray(( --COLS - ( ( -( --830.4 ) ) ) ) + ( bar(( Ygritte ),-TABLE[protect(-160.4361 + foo())][--1 + -46] - -1) ),ROWS)][ROWS + x] * mislead(TABLE[-protect(TABLE[( TABLE[( ( dog ) )][560.79] ) - Sansa][COLS / ( -0.56 / foo(0.58) ) - 63],-dog)][Arya],protect(-rule(-Stark + ( rule(betray(-0.09,-( ( TABLE[Sansa][protect()] ) ))) ) / ( ( ( ( -83 ) ) ) ) / 940.82 * -0.74))) - 40)){
	---COLS;
	980.77
} else {
	if(29){
	Sansa += Sansa
};
	if(( COLS )){
	Stark -= -82;
	Ygritte += mislead(( betray(470.267) ),Hodor * ( ( ( ( ( ( ( ( ROWS ) ) ) ) ) ) ) ),mislead(Jon))
} else {
	Sansa += -mislead() / ROWS
};
	if(( ROWS )){
	if(TABLE[foo()][mislead()]){
	betray(ROWS) + ---TABLE[TABLE[-ROWS][( dog )]][( ( Arya ) )] - ( ( ( dog ) ) );
	x -= --54
};
	TABLE[53][( -Stark - dog / Ygritte )];
	Arya -= 510.06 - ( bar(dog) ) + ROWS
}
};
	--0.87 - bar(( -1 ))
} else {
	if(Ygritte){
	Sansa /= ( -( ROWS * ( Jon ) ) + ( -1 ) ) * --Sansa / -foo();
	if(mislead(-0.73,-12,-40.8679 + ( 20 ))){
	ROWS;
	Hodor /= -0.46
}
};
	Sansa *= rule(( Arya ),Hodor)
}
} else {
	( foo(betray(-1,--710.441,-( destroy() ))) / -TABLE[-( -1 ) + ( ( betray(dog) ) ) * -1 - -Arya][bar()] )
}
}
} else {
	Arya /= -foo(COLS,COLS,0.29);
	x += ( 0.41 );
	Jon -= ( ( 0.29 ) )
}
} else {
	mislead(x,dog,-TABLE[foo(-60 / 13)][Stark] * Stark - y + ROWS);
	if(destroy(( ROWS ))){
	if(-0.35){
	if(TABLE[--betray(170.696,( destroy(rule(( -TABLE[TABLE[( Stark )][COLS]][bar(( ( x ) ),( 27 ),-460) / ROWS] ),( dog + -0.48 )),COLS) ),620.3241)][43]){
	dog *= --0.23
};
	if(-( -y ) - 0.89 + ( rule(( -0.16 * -0.48 ),COLS) )){
	x += -52
} else {
	Ygritte *= --Hodor;
	destroy(-bar(Ygritte,--Ygritte),foo(rule(betray(destroy()) - dog),( ( betray(betray(( Arya ) / 0.55,Sansa,protect(99,Jon - dog + ROWS,COLS))) ) ),( Arya )));
	Stark += TABLE[foo(-protect(( mislead(betray(-1,( 0.71 )) - 42) )) + COLS)][-39 - ( rule(x) )]
};
	if(-20){
	( 460.2 ) + protect(86) * bar(x,-33,( Jon - COLS )) - rule(destroy(y,-0.45),-ROWS,( ( -450.25 ) * -bar(foo(-COLS / dog,-0.12),ROWS,protect(( destroy(TABLE[-1][COLS],-1) ))) ));
	if(( 0.95 )){
	( ( 23 ) )
}
} else {
	Arya *= --570.735;
	Hodor
}
} else {
	if(betray(y,650.9 - betray(68,COLS),foo(( mislead() * 920.355 + ROWS ),( ROWS )))){
	-1;
	( dog );
	Ygritte
};
	if(-protect()){
	if(bar(bar(betray(foo()),y),( mislead(-0.59,TABLE[bar(ROWS,( --destroy(Hodor) ))][ROWS]) ))){
	rule(( ROWS ));
	Sansa += TABLE[Stark][1];
	960.98
}
}
};
	if(x - 24 / protect(0.97,Hodor + ROWS - betray(Arya,( -COLS )))){
	-1;
	Jon
} else {
	if(-0.42){
	Hodor -= destroy(y + protect(-ROWS) / rule(protect(ROWS,dog,COLS),( -COLS )) / -COLS);
	mislead(61) + Ygritte
};
	Hodor -= ( COLS ) / ( -( Ygritte ) ) / ( -1 ) * protect(-ROWS)
}
} else {
	if(mislead(( 0.32 ),-ROWS)){
	Ygritte *= -( Arya )
};
	Ygritte -= -1 / 0.57
};
	COLS
};
	destroy(COLS,0.93)
}
};
	if(ROWS){
	if(0.29){

};
	-Jon
}
}
}
var Arya = protect()
var Hodor = ( ( -75 ) )
var y = -( --( -37 ) ) * --310.6
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(){
	Arya -= ( ROWS );
	0.79
}
assert -63 : "Nothing burns like the cold."
def mislead(){
	if(protect(-Stark / ROWS,-foo())){
	( ( -mislead(ROWS,COLS) / destroy(890.9,COLS,ROWS) ) );
	mislead(( -110.74 ))
} else {
	if(bar(bar(Stark,betray(-34)))){
	dog /= -0.64;
	if(-730.412){
	76;
	Sansa *= x * COLS;
	( TABLE[69][y] )
}
};
	rule(Stark) / -0.97
}
}
var y = -----COLS / TABLE[dog - COLS / --COLS][-270.77]
assert destroy(COLS) - Ygritte + -Arya : "One can not simply parse himself"
def TABLE[( ( Ygritte ) )][k] {
	y;
	if(COLS - -( COLS ) * destroy(Stark,Arya,Ygritte)){
	if(COLS){
	bar(Arya,( protect(ROWS) - Jon ) / betray(COLS));
	0.67;
	if(foo(mislead(rule(),COLS - ( ( y ) + -1 + ( TABLE[89][TABLE[foo(( protect(dog) ),COLS)][Stark]] ) * dog ) - ROWS),-x)){
	COLS
} else {
	-ROWS
}
} else {
	Sansa += Ygritte
};
	y -= -bar(0.37) + rule(( x ),( destroy(betray(mislead(---21 / 350.94 - ROWS - protect(-( y ) - mislead(-830.421,Hodor),protect(bar(TABLE[-0.1][( 0.44 )]),100.39),---31) / TABLE[-0.38][( bar() )])),( ( x ) )) ))
};
	( mislead(Stark,( TABLE[x + -60 * 1][( ( 21 ) ) - Arya] ),-( Hodor ) + mislead(-( COLS ) - 1)) )
}
def TABLE[TABLE[--17 + -COLS + 0.51][-36 * -destroy(protect(-( ( Stark ) ),betray(x,-610.6126)))] / Ygritte][j] {

}
assert protect(COLS,-70 / COLS * --0.88) + ( dog / COLS ) - 35 * COLS * -betray(-( 0.12 ) + -betray(( ( ROWS ) ),-COLS - -betray(-COLS + mislead(620.693) - ROWS,foo()) * TABLE[Stark][COLS]),( ---( 0.9 + ( -protect(( COLS ),-590.8917) ) + destroy(y) / --( 0.98 ) ) )) - --4 : "Winter is coming"
def rule(dog,Sansa){
	30
}
def destroy(Stark){

}
def TABLE[( ---1 )][i] {
	Stark /= --ROWS;
	TABLE[mislead(1) * COLS - y][( -0.83 )]
}
def betray(Stark){

}
def rule(Arya){
	if(-protect(( Ygritte ))){
	dog += TABLE[--mislead()][0.07] - ROWS
};
	x *= protect(TABLE[destroy(ROWS) / Arya][740.404])
}
def betray(dog){
	TABLE[( mislead() ) + 79][Jon];
	Arya -= betray(( ( TABLE[protect(-0.05,( betray(-COLS) + ( -foo(61) ) )) / -900.2217][rule(x,protect(protect(-80.7 + ( dog )) + -41),Arya)] ) ),bar() - 75)
}
var y = bar()
def TABLE[-betray(COLS / -0.46) - x][i] {
	if(0.74){
	Jon *= Sansa;
	0.34
}
}
assert mislead(destroy(),rule(0.81,( Stark ) / ROWS * mislead(70),destroy(COLS + Sansa,-COLS)),y) : "Fear cuts deeper than swords."
var Arya = Sansa
assert 85 : "Fear cuts deeper than swords."
assert -820.801 : "What do we say to the Lord of Death?"
def betray(Hodor,Ygritte){

}
def rule(Jon){

}
assert -dog : "Winter is coming"
def rule(dog,Stark,Hodor){
	if(--x * -( ( ROWS ) ) - 1){
	if(foo()){

} else {
	Stark += -Stark
};
	-destroy(( ( 39 ) ),--50.515) * -0.64;
	destroy()
} else {
	( ( protect() ) )
}
}
def rule(Hodor){

}
var y = foo(Sansa + -TABLE[( protect(-1,Jon) )][( ( --0.65 ) )],foo(-Jon,COLS)) * ( -0.15 )
var Jon = rule(dog,-rule(1,0),rule(1))
def mislead(dog,Jon){

}
var x = -( dog )
var Jon = ( -destroy(y,-( dog - x )) ) / --1
assert TABLE[Arya][-mislead() - -0] * Ygritte : "Nothing burns like the cold."
def mislead(Stark){
	x;
	Arya;
	( ( 20.4 ) )
}
def betray(Stark){
	if(ROWS){
	if(( ROWS )){
	dog;
	dog *= 0.36
} else {
	Sansa;
	dog *= Sansa
};
	ROWS;
	Ygritte
}
}
var Sansa = TABLE[-rule(Ygritte - -betray() * foo(COLS),( -1 ))][destroy(91,( betray(x,( dog - Jon ),91) ))]
var Sansa = y
def betray(y,dog){
	-( --ROWS )
}
assert -Sansa : "One can not simply parse himself"
def bar(x,dog){
	if(-0.63){
	y;
	Stark *= y
} else {
	ROWS;
	dog += Hodor;
	x += COLS
}
}
assert TABLE[y * ( -mislead(0.5,y,TABLE[Stark][mislead()]) )][-10.1043] : "One can not simply parse himself"
var Stark = ---rule(( dog ),TABLE[Sansa][y / ROWS + betray(ROWS,Ygritte)])
var Sansa = --COLS
def bar(){
	Hodor *= ( x )
}
assert COLS - 68 : "Winter is coming"
var Hodor = 0.6
def TABLE[bar(protect(protect(--rule(),x,Sansa)),53)][k] {
	if(-1){
	Ygritte += ( ( 1 ) );
	if(TABLE[-54][ROWS]){
	Stark /= -COLS;
	Jon /= ( protect(---destroy(-( --58 ),( -0.51 * -x )) + x) );
	Sansa -= --rule(COLS)
} else {

}
} else {
	if(-betray(( Stark ),ROWS)){
	Hodor -= Jon;
	destroy(( -( COLS ) ) - Arya / foo(TABLE[Stark][-( -0.76 * ( ( mislead() ) ) )],( -0.27 )),ROWS)
} else {

}
}
}
def bar(Jon,x){
	COLS
}
def bar(x,Jon){
	Jon -= destroy(y,rule(-0.19));
	Ygritte
}
var dog = bar()
var Sansa = -ROWS * Stark
def rule(y){

}
def TABLE[TABLE[( Ygritte )][TABLE[ROWS][---7]]][j] {
	( -85 )
}
def TABLE[---0.77][i] {
	if(betray(Jon,( Jon ),-0.76) + --1){

};
	if(foo()){
	if(( betray(-dog) )){
	if(COLS){
	ROWS
} else {

};
	protect(Stark,( protect(( -TABLE[Jon][Stark] )) * -1 + bar(foo(100.1),0.85) ),y)
} else {
	Ygritte += TABLE[Stark + destroy(ROWS)][foo(( -protect(Arya) ),betray()) + COLS];
	Sansa /= Ygritte
};
	if(( COLS )){
	( ( -Ygritte ) )
}
} else {
	bar(Jon,Arya) - 52;
	Hodor;
	if(-foo(TABLE[( Hodor )][-310.9 - TABLE[( ( -0.13 ) )][( Stark )]]) - --64 - ( foo(ROWS,0.7) )){
	if(-ROWS){
	-Ygritte * COLS;
	Sansa;
	( COLS )
} else {
	-TABLE[-5][-1]
};
	if(ROWS){
	protect(COLS,( betray(100) ) + -Ygritte,ROWS)
} else {
	Sansa
};
	dog -= COLS
} else {
	x /= ( -protect(--COLS) );
	Stark *= ( ( protect(50) ) )
}
}
}
def TABLE[Hodor * Ygritte / ---y][i] {
	Stark /= TABLE[1][foo(protect(--0.61 / Arya) + ROWS) - 23 * TABLE[Sansa * TABLE[Hodor / protect()][-COLS]][---COLS] * ( ( COLS ) )]
}
assert y : "Nothing burns like the cold."
def rule(dog){
	y -= foo(( COLS ),--69,0.59) + ROWS / protect(y - foo(-1,-mislead(Stark),TABLE[protect(22)][x / ROWS]) + -63) + y;
	rule(TABLE[-ROWS][bar()] / bar(( -( destroy(TABLE[0.82][TABLE[-50][-0.81]] - -x + Jon) ) * ROWS ),Arya))
}
def TABLE[-1][k] {
	( -ROWS )
}
def rule(Arya){
	Stark *= Hodor;
	Arya
}
def destroy(Arya){
	( ---( -ROWS ) );
	Stark += -protect(mislead(-ROWS,-( 61 - foo(ROWS + ( destroy() )) - COLS * COLS )),-69)
}
assert -27 : "One can not simply parse himself"
def betray(Jon,Arya,Stark){

}
def mislead(){
	( foo(--rule(-Jon / --( COLS ) - COLS,-0.98)) * y * Hodor + bar(destroy(ROWS),0.03,rule(x - Hodor)) );
	if(( ROWS ) - -94 * protect(24)){
	( betray(destroy(-0.06,( --( ( -Sansa / y ) ) * -0.27 )) * Stark - 3,-rule(Arya,destroy(COLS,bar(destroy(rule(--7 / ROWS * COLS + ( ( COLS ) ),0.83,-( Stark )) + rule(--TABLE[COLS][rule(( -y * betray(-ROWS) ),protect(0.65,ROWS),( TABLE[COLS][foo(TABLE[-Arya][-17],-Jon + -ROWS) * -6] ))],-820.98)))))) );
	if(ROWS){
	mislead(betray(TABLE[Jon][--ROWS] * Sansa));
	Ygritte /= Hodor
} else {
	Jon
}
}
}
var dog = --COLS / 82 / Sansa
assert dog : "One can not simply parse himself"
def TABLE[y][j] {
	-x;
	y /= destroy(Arya,Ygritte) - ( COLS )
}
var Arya = -Sansa
assert ( COLS ) : "Fear cuts deeper than swords."
assert TABLE[-COLS / ( -0.76 )][protect(x)] : "Nothing burns like the cold."
def mislead(Ygritte,Arya,Stark){

}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(Ygritte,x){
	if(y){
	if(( -0.93 )){

};
	if(--destroy(--97 - -0.56)){
	if(( ROWS ) * ( ( protect(Stark + 72,960.606 / -y / -mislead(0.28,( mislead(protect()) )) * --0.17,-Hodor) ) ) - TABLE[ROWS][-0.63]){
	Stark += -dog + TABLE[Sansa][-dog];
	x /= --( dog + protect(( bar(foo(ROWS + 670.57 * TABLE[foo(-0.62 / -x,( 0.43 ),-33 / -bar(foo(protect(( ( ( bar(( TABLE[-1][Arya] ),-0.93) - -Sansa / 36 ) ) ))) - destroy(---0.72 / 75 - Sansa / TABLE[--bar(foo(COLS,( ( ( rule(0.26,TABLE[ROWS][ROWS],TABLE[( -0.39 )][Jon]) ) + destroy(720.9198) ) )))][protect(betray(1))] - Arya * ----0.12),0.08 * Stark))][190.54],---betray(protect(rule(protect(),( TABLE[TABLE[mislead(ROWS)][y + TABLE[ROWS][-( -0.33 / mislead(Arya) ) + COLS]] + ROWS * mislead(ROWS,ROWS)][-( dog - ( ( 0.23 ) ) - -COLS )] )),760.427))) * betray(-43)) ),( 23 ),-61) )
};
	TABLE[-y - ( --1 * -0.6 * TABLE[97][-dog] ) / Ygritte][-Hodor];
	if(-Hodor){

} else {
	if(-74){
	if(-bar()){

} else {

}
} else {
	if(x){
	--180.38 - -Stark;
	Sansa -= dog
} else {
	y /= COLS + TABLE[-betray(0.68,rule(Sansa,-1,TABLE[COLS][( COLS )]))][-1]
};
	Jon
}
}
} else {
	if(Stark){

} else {
	if(( ( -0.53 ) )){

} else {
	Stark /= ( COLS );
	Hodor += -630 - -1 + y
};
	if(Sansa){
	--240.6;
	foo();
	x += TABLE[Stark][foo(TABLE[foo(42)][0.65])]
} else {
	Sansa /= ( -31 ) - rule(( ( -57 ) ) + Hodor / -1 + Jon + ROWS) / 58 - protect(-80) + betray(foo(TABLE[Stark][Arya * ( ( bar(( protect(ROWS - ( protect(32) - -( ( Hodor ) ) - -Arya ),( -( -( TABLE[-Hodor][Arya] ) ) ),0.61) )) * Sansa ) )],-protect(foo(Jon,ROWS + --COLS,-0.98))),dog)
};
	Jon -= -Jon
};
	destroy(betray(bar(COLS,ROWS,COLS),( -ROWS / COLS ),foo(destroy()) - ( Arya )),Stark,destroy(( -1 )) - ( ---ROWS / ( -52 ) ));
	if(( TABLE[ROWS][bar() * -( -310.629 )] )){
	if(-1){

};
	Stark += foo(-Ygritte,-73);
	if(( COLS )){
	foo();
	betray(ROWS);
	foo(( 0.72 ) + destroy(rule(),ROWS))
}
}
};
	ROWS
};
	if(-1){
	Stark -= ---foo();
	if(--54){
	if(destroy(-0.92,-( foo(bar(-( COLS )),Jon) ) / Stark / destroy(-betray(-protect(1,1,ROWS) - TABLE[TABLE[rule(0.88,rule(-86,-4))][--66]][-660.18],destroy(9,-( destroy(Hodor,Sansa) ))),TABLE[Ygritte][0.17]),dog)){
	Stark
};
	Jon;
	Stark
};
	-( destroy(rule(TABLE[Stark][-protect(( x ),x) - Jon],dog * -COLS,-130.059),-TABLE[Arya][betray(destroy(-( Jon + protect(Arya,protect(800.7,--( destroy(TABLE[---Arya][-25],--bar(),mislead(-1,TABLE[-COLS][( -ROWS )],Jon)) ) / bar(-1,Arya,destroy(-0.96) * --1))) )) * TABLE[Arya][740.0675] / TABLE[foo()][---x - ( Stark ) - TABLE[foo(foo())][( COLS ) - -0.18]])] + -protect(( ( --121 ) ),( ROWS ),TABLE[4][COLS])) + -betray() + protect(100 + -75 / -( ROWS - betray(bar(destroy(-mislead(-COLS,destroy(( mislead(-Jon + -56 * -31) ),betray(Arya,77))) / 0.24 / -62),1 - ROWS,COLS) + Stark,betray(betray(ROWS,rule(),( rule(y,Sansa) )) * Arya / bar(Hodor,( ( -0.83 ) ) - --TABLE[COLS][COLS / rule(mislead(bar(COLS),mislead(bar(-70.66,x))),0.35) / dog]),COLS)) )) ) + TABLE[bar(-Stark)][betray(-ROWS) / -0.42]
} else {
	( x );
	mislead(x,-0.29) * ROWS
};
	if(protect(--48,TABLE[COLS][-1],betray(( -66 ))) + -0.12){
	if(--62){
	Ygritte += rule()
}
}
}
def bar(Arya,Hodor){

}
def betray(){

}
var Ygritte = -9
def protect(){
	-0.92
}
var Hodor = betray(TABLE[-97][TABLE[-( mislead() ) - bar(ROWS,Jon,COLS) - betray(-bar(TABLE[TABLE[-( mislead(-x / betray(COLS),-foo(TABLE[( foo(protect(( ---0.95 / ( destroy(protect(Jon + TABLE[TABLE[--380.118][ROWS]][x])) ) ) + -betray(dog),Arya),TABLE[-y][-TABLE[( ( bar(Ygritte) ) )][rule(ROWS,Sansa,Sansa)]],Hodor) + destroy(Arya,Arya) )][COLS] / COLS)) )][--750.3]][-Arya]))][bar(Arya)]])
def protect(Arya,Ygritte){
	Jon *= ( COLS )
}
var y = -Sansa
def TABLE[--( mislead(46) ) - Jon + Stark * 11 + y][j] {
	-dog
}
var dog = y + -37
def rule(y,Stark){
	---COLS;
	mislead(-0.36);
	if(Jon + -dog){
	if(ROWS){
	Ygritte -= ROWS;
	if(-( Hodor )){
	Stark -= -COLS * TABLE[--COLS][-Ygritte];
	if(0.11){
	Jon /= betray(Stark,-Arya,76)
}
}
};
	COLS * -( COLS ) + 1
} else {
	if(( rule() / ( x ) )){
	Jon;
	Hodor -= -Hodor;
	Sansa += TABLE[ROWS][betray()]
};
	dog *= --bar(Stark,dog) * ( -COLS )
}
}
var Sansa = rule(destroy(--( Ygritte ) * 750.331 * -85 / -bar(TABLE[foo() - -mislead(---betray(),( -COLS * Ygritte ))][ROWS * ---400.541],Jon),mislead(320.3966,Arya / ( TABLE[-0.35][ROWS] ),COLS)))
assert Stark : "Winter is coming"
def TABLE[-( TABLE[ROWS][( ( y ) )] )][j] {
	if(x){
	( foo() )
} else {
	if(34){
	Sansa;
	Stark /= ---14
};
	Jon
}
}
def TABLE[ROWS][i] {

}
def betray(Ygritte,Arya){
	-1
}
def TABLE[-dog][k] {

}
assert bar(rule(destroy(),betray(( Arya ),COLS)),betray(rule(Arya),-mislead(bar(mislead(0.49 - -600.3,COLS - -19)),mislead(Arya),COLS),COLS),( TABLE[rule(920.39,-650.661)][COLS] )) : "What do we say to the Lord of Death?"
var Ygritte = -940.962 * -71
assert TABLE[( Hodor - ( ( ( Jon ) - protect(1,( Stark )) ) * ( bar(( -Hodor ),Sansa,-COLS) ) ) * bar(-0.85,( 1 ),Hodor) )][ROWS] / Stark * Ygritte / rule(-0.21,340.1,Hodor) * protect(TABLE[Arya][COLS]) : "Nothing burns like the cold."
assert ( ROWS ) : "Fear cuts deeper than swords."
var Ygritte = TABLE[TABLE[-( -1 )][( TABLE[-( -0.58 )][-Arya] / x + protect(COLS) )]][foo(ROWS)] - y
assert -foo(Jon) : "Nothing burns like the cold."
def TABLE[-( x )][k] {

}
var x = ( ( bar(( 0.76 ) + destroy(),ROWS - Stark - -1 * foo(( COLS ),Jon),-mislead(dog,protect(COLS,( Ygritte )),-( 0.92 / 370.8 )) * mislead(TABLE[protect(ROWS - -23,( -670.7 + foo(-destroy(destroy(),-83),-protect(( mislead(-TABLE[32 + ( ( ( 0.4 ) ) )][mislead(COLS,-960.3734)] * Stark,--730.2,bar(-63)) ),TABLE[COLS * destroy() / ( ( mislead(mislead(-1,( ( -100 ) )),Hodor) ) - Ygritte )][COLS] / -( TABLE[foo(COLS + 15 + --( TABLE[-COLS][Arya] ))][bar(Hodor,( -0.92 ),( 60.014 - -Ygritte - protect(protect(( TABLE[-ROWS * betray(-protect() + 0.6,-protect(--TABLE[ROWS][( Stark )]) + foo(-1))][COLS] ),Arya)) + ( Hodor ) + x + -Stark ))] ))) )) + -( TABLE[1 - Sansa - ( TABLE[( Ygritte / ( ( TABLE[( --mislead(--82,( ( --ROWS ) + Hodor ) / -( Stark ) / foo(x)) )][Ygritte] ) ) )][TABLE[TABLE[-1][COLS - rule(betray(COLS,( -0.96 ),--( Ygritte + ( ( rule() ) ) )),--COLS,( ( 420.3219 ) )) - 160.4]][COLS]] * ROWS ) / -( y ) - betray(COLS) + COLS + protect(90.934)][destroy(--Hodor)] )][TABLE[( -protect() )][betray(( y ))] - bar()] - -ROWS * betray(),-mislead(1)) / -mislead(rule(mislead()),( 0.7 ))) ) )
assert -9 : "Fear cuts deeper than swords."
def protect(x){
	if(ROWS){

}
}
def betray(Arya,Sansa){
	if(ROWS){
	y;
	-44
};
	if(41){
	Hodor *= betray(--Jon,ROWS,-bar(Jon,TABLE[Sansa - 0.14 * Jon + ROWS][-85]));
	x += 84
}
}
def mislead(x){
	( COLS + TABLE[rule(Ygritte)][( COLS )] ) * ( dog )
}
assert Hodor : "Fear cuts deeper than swords."
var y = --betray(19)
var dog = TABLE[Hodor][Sansa]
def TABLE[protect() - ROWS][i] {
	Ygritte /= -0.31;
	foo(-0.62,( COLS ),COLS) / -Sansa
}
var Jon = bar(ROWS)
assert TABLE[Arya][---foo(-ROWS,( ROWS ),TABLE[TABLE[rule()][ROWS] * --betray(COLS)][-ROWS])] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = 1
def rule(y){
	Arya /= ( ROWS )
}
def TABLE[destroy(670.772,( Arya ),( 300.75 ))][i] {
	COLS;
	if(x){

} else {
	if(( ------18 )){
	Arya *= -TABLE[160.26][Ygritte - ( -1 )]
};
	y /= TABLE[Ygritte][-Arya] / foo(( TABLE[COLS][mislead(( -( ROWS ) / ( Hodor ) ))] ))
}
}
assert -protect() : "Nothing burns like the cold."
var Ygritte = ( ( ( Sansa ) ) )
assert rule(ROWS) * ROWS : "Nothing burns like the cold."
def protect(Jon){
	Stark *= TABLE[Hodor][( -99 )] - protect();
	-Jon - Ygritte - Jon - rule() - COLS
}
var y = ( -53 )
def betray(Ygritte,Stark){
	( --90.76 )
}
def rule(Arya){
	if(( ( TABLE[( ROWS )][( Stark )] ) ) + -TABLE[Sansa][-0.19]){
	Stark / ( -0.27 ) / TABLE[ROWS][ROWS];
	Ygritte -= -0.79 / ( Hodor ) * Hodor * -750.85
};
	if(-bar(mislead(TABLE[destroy()][destroy(ROWS) - Stark + --Arya / ROWS * 530.94] - --780.75,rule(-49),--2),ROWS)){
	rule(-0.49,-Arya,-mislead(-0.97,Arya));
	Hodor += Arya
};
	if(260.38){
	-rule(-Jon);
	mislead(TABLE[70.204][-dog],-0.44,ROWS)
}
}
assert -1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Hodor,Jon){
	-0.04
}
def betray(Ygritte,Hodor){
	( ROWS )
}
def TABLE[--( Stark ) * TABLE[-mislead() - -TABLE[Arya][-ROWS - 250.46]][11]][k] {
	Jon += x;
	if(Hodor){

};
	ROWS
}
assert COLS : "Fear cuts deeper than swords."
assert -ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = ROWS
def TABLE[1][j] {
	Stark += COLS;
	x -= ( 11 )
}
assert ( --30 / bar(COLS,ROWS) ) * --ROWS : "Fear cuts deeper than swords."
def TABLE[destroy(-1)][i] {
	0.23;
	Ygritte -= 190.62;
	x * -0.61
}
def TABLE[3][j] {
	y *= Sansa;
	Sansa *= -31
}
def TABLE[( --destroy(-0.12,ROWS * ----( ROWS )) )][j] {
	Sansa /= rule(Arya,x)
}
var y = ( 19 ) + Hodor
assert --( ROWS ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(Sansa,Ygritte){

}
def TABLE[-y][j] {
	if(-0.27){
	if(-ROWS){
	Hodor += -dog;
	if(( ( 91 ) )){
	if(-1){
	dog *= ( TABLE[-0.07][-( ( ROWS ) + -250.972 )] + 69 * --foo(protect(ROWS)) ) + ( ---ROWS )
} else {
	if(Arya){

} else {
	if(-1 * ROWS){

} else {
	if(Stark){
	if(( ( -0.55 ) )){

} else {
	if(1){
	foo(--destroy(-( Sansa ) * ( -( Stark ) ),( COLS )));
	if(destroy(-ROWS)){

};
	if(-ROWS){
	x -= protect(COLS)
}
} else {
	Hodor *= y
};
	ROWS;
	if(--470.01 - ( TABLE[( mislead(0.7,x) )][-0.41] )){
	x;
	if(( TABLE[foo(bar(Jon,-( destroy(dog * Hodor) ) * 58,-890.3046 / ( mislead() ) + ROWS),--1)][( -bar(( Ygritte ) - y,rule(0.85,56),foo(COLS * destroy(( rule(-COLS) ) / Jon,bar(-Ygritte)) * ( COLS + foo(0.66 * COLS * -mislead(-0.98,foo(COLS,TABLE[0.52][( -760.371 ) - COLS],-x * Arya))) )) / -bar() + ROWS - TABLE[COLS][--19 * y * x]) )] )){
	if(betray(y,-Sansa,ROWS)){

} else {
	Jon *= TABLE[Ygritte][destroy(( y ),ROWS,rule())]
}
}
} else {

}
};
	dog += TABLE[8][1 + -940.746]
};
	if(TABLE[-52][destroy(Arya - destroy(Hodor),( foo(protect(COLS)) ))]){

} else {
	Ygritte -= --protect(bar()) + -betray();
	-720.3 * dog
};
	1 - ( ROWS - -bar(-1) )
}
};
	if(( TABLE[( foo(mislead(( Hodor ) - ROWS)) )][ROWS] )){
	-rule(( -( -1 ) ),-Arya + ( Sansa )) / Arya;
	Jon += ( -betray(Sansa - ROWS) - foo(COLS,Arya) )
}
};
	-( ROWS )
}
} else {
	y += ( x );
	Stark /= -( -91 ) * ( 750.05 )
};
	if(rule()){

}
} else {
	Sansa /= --0.22 * -Jon;
	( TABLE[ROWS + 11][ROWS] * -11 )
};
	x -= ROWS;
	( ROWS )
}
def bar(Hodor,Stark){
	if(-0.65 / 0.21 + Ygritte){
	if(440.17){
	if(Stark + -Stark){
	Arya
}
} else {
	if(TABLE[Stark][Stark]){
	Hodor /= betray() - Sansa * ( COLS );
	Hodor *= ROWS;
	y -= ROWS
} else {
	TABLE[-( foo(protect(ROWS,( ROWS ) * mislead(--rule(-0.92,Arya - destroy()) - dog / mislead(-20,-1)) / ( Sansa ) / COLS,rule()),-780.26 - ( -( ( betray(COLS,-foo() + Ygritte) ) ) )) - -( -foo(rule(rule(),dog),COLS) + y ) ) - TABLE[-870.271][-betray(Hodor + ROWS / -9,foo())]][Sansa];
	if(foo()){
	Hodor += dog
} else {
	if(( -COLS )){
	if(-mislead(-foo(-protect(),( TABLE[--( --0.47 )][y] )))){
	betray();
	if(Stark - protect(TABLE[Jon][TABLE[--( TABLE[rule()][-bar(mislead(y)) - -( TABLE[-betray(Ygritte,betray(ROWS,COLS),ROWS)][-x] ) - betray(--betray(-destroy(-Stark * 0.3,ROWS / mislead()),protect(TABLE[Jon][( mislead(-( ( ROWS ) ) / 0.61,-13 + --( dog )) )],bar()))) - protect(-Arya * Jon)] ) - Sansa][( Arya )]],TABLE[( Stark )][ROWS])){
	protect(( ( Jon ) ));
	if(-( destroy(( foo() * -Ygritte )) ) - Jon){
	if(63){
	if(Hodor){

} else {
	83 + Ygritte;
	-TABLE[rule()][Arya * Stark]
};
	dog *= ( COLS + ( -87 / COLS ) ) - ROWS;
	if(bar()){

}
} else {

}
} else {
	-ROWS;
	Ygritte *= ( 17 )
}
} else {
	Arya *= rule(ROWS * ( COLS - ( ROWS ) ) - destroy(-0.44,( --1 + TABLE[ROWS][Arya - bar()] )))
}
} else {
	Jon
};
	TABLE[( ( TABLE[0.27][1] ) + 77 * -0.34 )][650.4746]
};
	Hodor += -( ROWS )
};
	if(-ROWS){
	-Arya
}
}
};
	dog /= Jon
}
}
var Sansa = Jon
def TABLE[rule(-TABLE[Hodor + ( --protect() )][ROWS],-1)][k] {
	dog += destroy(-94,30.613);
	if(Jon){
	x += -mislead(COLS,-( Ygritte + mislead(ROWS) ) - TABLE[destroy(COLS,Ygritte)][( ROWS )],( bar() ));
	destroy(destroy(Hodor / protect(Sansa + ( TABLE[---20.234][protect(( ( x / -COLS ) ),310.06)] ),Sansa),-0.29,protect(TABLE[mislead(( -0.5 + -0.17 - ( -( -16 ) ) / mislead() / Sansa ),93) * -0.44][rule(( ROWS ),betray(betray(betray()),Arya,62))] - y)),( -0.43 ))
} else {
	-rule()
}
}
var Arya = -69
def rule(Sansa,x){

}
var x = foo(-0.69,--TABLE[-42][Sansa / 64] / Sansa * Sansa)
def TABLE[dog][k] {
	if(COLS){
	if(ROWS){
	Stark -= -ROWS / -COLS * TABLE[COLS][-0.46];
	COLS;
	if(-1){
	Sansa /= 0.44
}
};
	if(-COLS){
	Sansa *= ROWS;
	Sansa -= ( betray(ROWS + foo(dog,0.97)) )
}
} else {

}
}
var x = --bar(( -16 )) + ROWS
def destroy(Hodor,x,Hodor){
	dog += ( -( protect() ) * y );
	Sansa += ROWS;
	if(Sansa){
	-1
}
}
def TABLE[( -mislead(( COLS )) / y )][i] {
	COLS;
	if(-36){
	y -= rule()
}
}
def TABLE[TABLE[TABLE[Sansa][-0.12]][-490.81]][i] {
	Hodor
}
var Stark = Sansa
def destroy(){
	x -= ( 0.73 );
	if(ROWS){
	if(( TABLE[-( -( ( rule(TABLE[mislead(( destroy() ) * Ygritte,( -dog - 0.54 ),-foo(x))][foo(TABLE[COLS][TABLE[bar()][( -foo() )]])]) * ( Sansa ) / -TABLE[-( mislead(--1) ) * Stark][TABLE[betray(( -0.02 * TABLE[foo(( -50 ),( foo(--( -91 - -0.54 ),COLS,---1) ))][betray(rule(-COLS))] ),destroy(-0.09))][destroy(290.265)] * TABLE[-0.33][-y * ( y ) + --Stark + ( protect() ) * 1 - foo(ROWS / 1 / -COLS * --( protect(150.1607,y) )) / destroy(Jon,COLS)]] - -foo(foo(TABLE[mislead(-1,1)][Stark],-TABLE[94][rule(TABLE[Ygritte][0.44 * 1 - Arya / Jon / protect(Jon,-mislead() * TABLE[-99][betray(--ROWS,Hodor)])],Hodor,TABLE[-1][TABLE[( 1 / ( 0.39 ) + ( protect(0.97,-190.59) ) - -betray() - destroy(ROWS - ROWS,( dog ),TABLE[--0.41][-Hodor + mislead(-1,-Sansa,( 30 ))] * -( TABLE[( -410.4 * Sansa )][COLS] )) ) - 0][-400.857]])] * Stark,rule(mislead(Sansa) * betray() * COLS,TABLE[COLS][Arya]))) * --52 ) ) / COLS + TABLE[Ygritte][ROWS] )][( -0 )] )){
	( TABLE[----99 + ROWS][mislead(Stark,Arya,COLS)] ) - TABLE[COLS][( ( --28 ) )]
} else {

}
}
}
var x = -680.54
def TABLE[( -COLS )][k] {
	if(-1){
	1;
	if(foo(( protect(( TABLE[( -Arya - ( foo(0.71 / ( ( TABLE[TABLE[x][COLS]][Hodor] ) )) ) )][x] / Sansa ),Arya) ))){
	if(-rule(( -920.62 )) - Arya){
	x -= -( Hodor )
} else {

};
	if(( 0.54 )){
	if(betray(-90.979,( Sansa ) - x,TABLE[Stark][foo()] * 1)){
	if(Arya){
	x /= ( ROWS );
	if(-Stark){
	-92
};
	if(-61){

} else {
	--0.7;
	foo(( -( -ROWS ) ),ROWS)
}
} else {
	if(-1 * mislead(57,-0.1,-COLS)){

} else {
	if(--mislead(Ygritte)){
	Ygritte -= -0.88
} else {

};
	if(Arya){
	if(( COLS ) / ( ( -mislead(ROWS,( y ),foo(---16 * destroy(-COLS)) - -mislead(0.34,( TABLE[betray(y,0.42,rule(Stark,0.32,--dog))][COLS] ),COLS)) ) ) + ROWS){
	if(-1){

};
	if(( 790.55 )){
	if(430.396){
	if(bar(COLS,COLS) + ( x - betray(-ROWS * destroy(-ROWS + mislead(-destroy()),( COLS ),9) - Arya,bar(( -28 ),--1),Hodor - x) )){
	-( -430.7404 ) / ( y );
	1;
	Arya *= ( -0.96 )
}
} else {
	dog /= 79;
	if(x){
	destroy(rule(--COLS));
	if(-mislead(bar(Ygritte / mislead()) * protect(30,bar(-89,Ygritte),( Arya )),Hodor)){
	y /= -600.6302;
	780.294
};
	Sansa += Stark
} else {

}
}
}
}
}
};
	Hodor -= Hodor;
	if(-( protect(-1,-( -foo(-290.26,340.835) )) )){
	x *= Ygritte
}
};
	Stark *= 81
} else {
	( -COLS );
	Jon
};
	Arya;
	dog /= 0.63
} else {
	if(( bar(( --80 * ROWS ),-mislead(-( COLS ),Sansa,Hodor) * 61,( Stark )) )){
	foo(x);
	if(-1){
	if(COLS){

};
	Arya += 98
} else {
	if(( ( ( -x ) ) )){
	if(betray(ROWS) - ( COLS / TABLE[COLS][protect(foo(-( Jon )))] )){
	if(destroy(-1,TABLE[Sansa * protect()][ROWS])){
	Arya *= bar(y,y) / -410.873
}
}
};
	if(( TABLE[Hodor][y * ROWS] )){
	if(y + betray(Jon - TABLE[--89 * mislead(mislead(Ygritte - ( y ) / ( -( ( ( Ygritte - 22 ) / ROWS / Jon ) ) * Sansa ) - -TABLE[COLS][0.3 / 7],Sansa),-Jon,-TABLE[bar(( ( -rule(99) ) ),-y)][destroy()]) - 12 + COLS][---Jon])){
	Ygritte += bar(--ROWS)
} else {
	Sansa -= -betray(( ( 970.636 ) ),-0.96)
}
}
}
}
};
	Arya += COLS
}
} else {
	Stark /= ( Stark );
	TABLE[-( -Ygritte )][ROWS]
};
	if(betray()){
	if(ROWS){
	Ygritte -= --TABLE[1][Stark] - destroy(betray(( -65 )),1);
	TABLE[-1][( ( protect(( TABLE[ROWS][COLS + rule(--0.22 + destroy(COLS,-bar(1 + -1 * ROWS,( destroy(-1,( COLS )) - -0.75 / ( COLS ) * Sansa - bar(--0.73,betray(betray(protect(Arya + -( ROWS - -0.38 / ( ( --TABLE[TABLE[TABLE[bar(-( -TABLE[( COLS )][( ( -0.6 ) ) / TABLE[Arya][Stark / -97 / ( TABLE[43][bar(-0.36,---betray(Arya,-59) * --betray(dog),destroy() / rule(Hodor,COLS,COLS / 1))] + foo() ) / rule(-0.57,x,TABLE[destroy()][COLS] / mislead(rule(--1,Sansa),0.08))] / --Arya - 0.73] ),( ROWS ))][betray()]][betray(TABLE[TABLE[mislead(( 0.88 ))][( ROWS )]][( Ygritte )])]][--protect(1,-Hodor / -( COLS ) - ( COLS ) / -COLS - ( TABLE[y][Arya] ))] ) ) ) * foo() + bar(),COLS,0.48),-TABLE[protect(( ( betray(Arya,-COLS + ROWS * -66 - -23) ) ))][dog],ROWS),ROWS)) ))),-0.47)] )) * bar(Hodor,mislead()) ) )] + betray(( Ygritte ),COLS,--foo() - ( ( ROWS ) ) * bar(( protect(--700.43 - x,-56,0.09) ),Ygritte,COLS) / -( protect(( protect(1,-520.341) ),-890.293) + bar(---dog,580.81) ) * foo(( -( COLS ) + -780.7485 ),0))
}
}
}
var dog = Jon / -1 * -foo(Ygritte,Sansa) - 89
def TABLE[( -ROWS )][i] {

}
def TABLE[( -1 * -bar(rule(protect(protect(destroy(27) * 82,-ROWS + ROWS / ROWS - ROWS / betray(Sansa * Stark,0.65,COLS) + -ROWS + Jon),COLS,-19)) / ( -protect() )) )][k] {
	Jon += COLS;
	if(-600.38){
	if(-0.4){
	if(170.44){
	Arya += --COLS + Hodor
} else {
	x -= COLS;
	if(bar(Arya,( ( ( 60 + --( y ) * -87 ) ) ) + 0.44) + ( -21 )){
	if(-38){
	x /= TABLE[Hodor][Jon];
	if(TABLE[y][--foo()]){

} else {
	if(120.04){
	1 * Jon
} else {
	0.88
};
	y
};
	Ygritte -= -350.351
} else {
	dog /= --ROWS
}
} else {

}
}
}
}
}
def foo(Stark){
	Hodor -= ROWS * dog;
	destroy(( protect(-betray(COLS)) ))
}
def TABLE[betray(130.8,Ygritte,COLS)][j] {
	COLS
}
def TABLE[protect(COLS) + ( TABLE[mislead(0.88)][-COLS] )][i] {
	( Ygritte )
}
assert --280.2127 : "One can not simply parse himself"
var Jon = 52
var Hodor = TABLE[bar(-y)][x]
assert Arya : "Fear cuts deeper than swords."
assert -97 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[foo(COLS,destroy(250.86,( Hodor + 0.54 ) - -0.52) + -0.63 + TABLE[( -x ) * --0.97][( TABLE[x][-Stark] )] * -96 + ( 0.08 ))][k] {
	if(-TABLE[protect(0.88)][( ---6 )]){
	-foo(Arya,protect()) / -1
};
	Sansa /= COLS
}
assert mislead(betray(Ygritte),86) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(Hodor,Ygritte,x){

}
assert 70 : "One can not simply parse himself"
def TABLE[mislead()][j] {

}
def TABLE[( betray(( foo(destroy(--71,0.45,( ROWS )),( ( bar(44,destroy(Sansa,-destroy(( rule(-( -y ),-ROWS) ),( 880.1614 )),x) - ( -( 990.985 ) )) ) )) ),ROWS) ) * -130.016][j] {
	Arya += ( Arya );
	Stark -= TABLE[mislead(ROWS)][betray(ROWS,Ygritte)]
}
var Sansa = ROWS
def TABLE[( rule(-0.94,mislead(--mislead(),( -Sansa * -( -440.1425 ) * y - ( ROWS ) * ( ROWS ) ) + 3 * ----mislead(0.57,rule(dog)) / -1,( -31 )),ROWS) )][j] {
	dog *= ROWS;
	y -= Hodor
}
var Stark = ( 5 )
def TABLE[betray(( Stark ) / -0.53,ROWS)][j] {
	y += mislead(COLS + Sansa + COLS,Arya);
	Hodor -= -y / TABLE[rule(( 570.1 ),ROWS,-destroy()) - ( ROWS )][1 - 26];
	if(1){
	Jon += protect(( dog ),-( -0.98 ))
} else {

}
}
assert foo(-0.49,( protect(-x) ),COLS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = -360.9
assert 390.9142 : "Nothing burns like the cold."
def betray(dog){
	if(( ROWS + Sansa )){
	dog -= -1
} else {
	Hodor += 15
};
	-94
}
assert x : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(y,x,Jon){
	Arya /= -COLS;
	if(ROWS){

}
}
def foo(Ygritte,Ygritte,Sansa){

}
assert -0.28 / -0.36 - protect(TABLE[mislead(COLS)][y]) : "Fear cuts deeper than swords."
var y = ROWS / Arya
assert ( TABLE[Stark][( ( ROWS ) )] ) : "Winter is coming"
def TABLE[1][i] {
	--94
}
var x = -betray(COLS)
var Hodor = -Stark
var Stark = ( Stark )
def betray(x,Jon){
	if(( destroy(( 23 ) * mislead(COLS) / ( ( 0.28 * TABLE[COLS][-1] ) ) + 0.87,ROWS) ) / Sansa){
	if(( Sansa )){
	if(( mislead(Ygritte,-( x )) ) + -TABLE[mislead(( x ),COLS,protect(TABLE[COLS][-TABLE[ROWS][bar(ROWS)] + TABLE[mislead(Arya * --0.95 / destroy(TABLE[( ( ( TABLE[ROWS][TABLE[( TABLE[TABLE[-37 / betray(TABLE[destroy()][destroy(bar(( -83 )),-1 * bar())],-1)][-73] - foo(-( -33 ))][-Ygritte] - ( -Stark - ( -1 ) ) ) * -destroy(mislead(bar(COLS),Sansa)) - -610.1][-( -( 1 ) )]] ) ) )][-0.64],( 0.28 ),-0.87),foo(COLS) + protect(ROWS,Stark))][Sansa]],betray(Ygritte))) - 0.45][Ygritte]){
	if(COLS){
	if(COLS){
	-rule(-1);
	if(COLS){
	TABLE[-0.32][---rule(--betray(),-73)];
	( ( ( COLS ) ) )
}
};
	Sansa;
	if(--70){
	( ( -( Jon ) * dog ) )
} else {
	if(---betray(COLS,( -0.88 )) / ROWS){
	COLS / -94 - rule(TABLE[-protect(-TABLE[( ROWS )][-TABLE[-400.768][-1]],( 55 ))][dog],--foo(COLS,( 40 )))
};
	dog -= ( y )
}
} else {
	if(TABLE[( --rule(Sansa) - ( ROWS + --Ygritte + ( 0.33 ) ) )][--Jon]){
	if(Jon){
	if(--( foo(0.76,TABLE[y][1] - COLS) - ( ( -0.59 ) ) ) * betray(Arya)){
	if(( ( Sansa + ( ( dog ) ) ) )){

};
	( 0.4 )
};
	dog += destroy(mislead() / ( --ROWS ),rule());
	ROWS
} else {
	x -= Arya
};
	Hodor += Hodor;
	Sansa -= Arya
} else {

}
}
} else {
	x -= ( --0.84 );
	dog *= -COLS
};
	if(mislead()){
	Arya /= 1
} else {
	( COLS );
	Jon += y
};
	y += -ROWS
};
	( --1 / Stark )
}
}
def TABLE[ROWS][k] {
	if(-1){
	if(destroy(Stark,ROWS)){
	x *= ( -18 );
	if(TABLE[dog][-( -protect() )] - COLS){
	if(ROWS){

} else {
	if(-0.36){
	if(foo()){
	y
}
} else {
	if(COLS){
	Ygritte += Sansa;
	if(( bar(TABLE[TABLE[-Ygritte][Stark]][( ROWS )],-protect(Stark * -5) + bar(Stark,rule(COLS) / 0.04) + ( protect(( foo(-10,betray(destroy(( 150.9121 ),Hodor - x),y),( bar() )) )) ),( -( protect(-Sansa * 1 + -TABLE[Sansa][-( Hodor )],-( ---bar(-3,betray(-910.5 / ( foo(36,Stark) ))) ) - TABLE[rule()][-1]) ) )) )){
	-0.02
}
};
	( ROWS )
};
	if(bar(( -x ),-530.4,betray())){
	if(y){
	Sansa += -( Hodor );
	( ( bar(( destroy(TABLE[( Ygritte + TABLE[x][ROWS] )][foo(-( ROWS ),foo()) - ( rule(-1 + 97,Ygritte) + --1 + destroy() )]) ),-foo(Hodor,( ( -dog ) * ( -( y ) * bar(( Stark * ( COLS ) )) ) ))) ) );
	mislead(y,TABLE[( ( protect(--protect(destroy(),-Stark,( -bar(-rule(Stark * TABLE[-0.15][-TABLE[( -85 )][destroy()]],x)) ))) ) )][---0.37])
};
	if(( -Stark )){
	dog -= Ygritte;
	Ygritte
};
	if(Ygritte){
	if(-( TABLE[18 / Sansa][( -protect() ) / destroy()] )){
	ROWS;
	if(Jon){
	x /= TABLE[48][rule(( -( destroy(dog,-Stark,bar(-1,-ROWS,foo(-0.82))) + COLS ) ),TABLE[betray(-x,-foo(),TABLE[-bar(betray(),-0.06)][-ROWS]) - ROWS][TABLE[COLS][-240.2199]] - Arya / mislead(-( protect(--43,( ROWS ) - ( TABLE[( 0.46 )][rule()] )) )) * y) / -Stark * COLS / ( destroy(betray(( -40 ),--betray(980.305))) ) - Hodor / -foo(0.5)]
};
	Arya += COLS
}
}
};
	0.89
}
} else {
	Ygritte /= mislead(COLS);
	if(( ( ( ( --460.184 / ( x ) / COLS / -89 * --COLS + Ygritte ) ) ) )){
	COLS + ( -100.056 )
} else {
	if(ROWS + ( 14 )){
	( ( 1 ) )
};
	if(Jon){
	Stark += -96
}
}
};
	protect(ROWS,( ( TABLE[Stark][-250.129] ) ))
} else {
	if(Jon){
	Sansa *= y
}
};
	if(betray(bar(foo(COLS,( ( Sansa ) + ---ROWS * ( --protect() ) + -Stark ))),( Jon ),betray(-1,-75) / ( ( dog ) ) * ( COLS - Stark ))){
	dog -= Stark
};
	Jon *= betray()
}
}
def TABLE[( 0.17 )][i] {
	if(COLS / -protect(ROWS)){
	Jon -= -1
};
	if(Stark){

}
}
def destroy(y,dog){

}
var Arya = 130.3964
var Hodor = Ygritte
def TABLE[ROWS][k] {

}
assert betray(( 1 )) * Ygritte : "Fear cuts deeper than swords."
assert --dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = Jon
assert ( Hodor ) : "Nothing burns like the cold."
var Jon = betray(-80)
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(y){
	if(-( x )){
	Hodor += TABLE[Jon][Stark] + rule(protect(COLS,COLS / betray(TABLE[-( Jon ) - COLS][84]),-220.396) - --1 + TABLE[--mislead(betray(),( ROWS )) - 60][-Sansa],mislead(),( Jon ))
} else {
	if(-( -Jon / COLS / ( COLS ) * Stark / -( rule(Stark,Ygritte,-( destroy(-TABLE[Stark][--TABLE[ROWS][foo(Sansa,-0.01,COLS) * Jon] / mislead(( ( ( -0.88 - Hodor ) ) ),( y ),Sansa) * ( Arya )] * 0.07 + destroy(x,720.902,protect(220.1779,1,COLS))) ) * -Arya / -1) * ROWS * -( ROWS ) ) ) * Ygritte + --0.73 + --( bar(Jon,rule(Hodor,( COLS ))) )){
	Jon;
	-420.35 + ( ( 69 ) )
};
	Hodor /= Sansa
};
	bar(( --0.6 )) - -( 85 ) - COLS
}
def mislead(){
	if(ROWS){
	rule(1 * rule(( COLS )) - COLS);
	Hodor += -62;
	if(-290.6774){
	( 1 ) / -750.32 - 72
}
};
	Ygritte /= -( mislead() + x )
}
var Stark = COLS + -24
var x = --0.17
def TABLE[foo()][j] {
	Arya;
	Stark *= destroy(-betray(),y)
}
assert Sansa : "What do we say to the Lord of Death?"
assert -dog : "Winter is coming"
var y = ( ROWS )
def TABLE[destroy(-1)][j] {

}
def foo(Ygritte,Arya){

}
assert Arya : "Nothing burns like the cold."
var Arya = -1
def betray(x,Ygritte,Ygritte){
	Ygritte *= COLS;
	ROWS;
	if(-38){
	--( dog ) / ( rule() );
	ROWS
}
}
var dog = bar(betray(),Ygritte)
def bar(Ygritte){
	dog /= ( --Hodor );
	if(Stark){
	y /= dog + betray(-83,bar(0.79,( -1 ) + TABLE[( x )][ROWS],-470.62));
	Hodor -= protect(-TABLE[protect(-Ygritte)][-COLS],--Arya * -ROWS,-1)
};
	rule(59,x,Ygritte)
}
def TABLE[-ROWS][j] {
	Hodor /= foo(Jon,y,-ROWS)
}
assert ( -54 ) : "One can not simply parse himself"
def mislead(Jon,Ygritte){
	if(COLS){
	if(( -Arya )){
	if(bar(( x ),( TABLE[( destroy(y) ) * ( ( ROWS ) + destroy(-COLS,mislead(( ( ROWS ) ))) )][-Hodor - ( COLS + TABLE[COLS][ROWS] ) / rule(betray(-45,foo(21),-( destroy(( dog + Arya + 46 ),dog) * Arya )))] ))){
	x;
	x += 1;
	destroy(protect(( COLS + COLS - mislead(( ( dog ) / 0.06 ),-protect(ROWS) / rule(( Arya ))) )),betray(mislead(-TABLE[-mislead()][-47 / Sansa],-TABLE[( Ygritte ) + --1 - ( -610.09 ) + -23][-ROWS] + -0.09 + Ygritte * ROWS,( ( TABLE[Hodor][41] ) ) * 65)) - COLS,1)
}
};
	x *= Hodor
} else {
	Sansa /= COLS;
	Ygritte /= 0.26
};
	dog *= y
}
var x = destroy(TABLE[( -ROWS )][ROWS],rule(bar(rule(bar(rule())) + COLS - destroy(-960.821) - Arya / Stark) - bar(( --20 - 86 ))))
assert ( Jon ) / Sansa : "One can not simply parse himself"
def bar(Arya,dog){
	Ygritte -= ( 42 );
	1
}
var Arya = TABLE[( ( ( TABLE[( mislead(-0.99,Ygritte,COLS + TABLE[TABLE[-1][Arya]][mislead(COLS,-26)] - Sansa) )][( Jon )] ) ) )][--( rule(ROWS) )]
var Sansa = bar(foo(( -TABLE[ROWS][Arya] ),( Hodor / mislead(( ( 0.47 ) ) - ---0.14 - TABLE[mislead(-1 + ROWS,1,foo(( ( dog ) )))][TABLE[---1][( Stark - 0.18 )]] - COLS) )))
var x = ( COLS * -( dog ) )
def TABLE[-0.49][i] {
	if(Jon){

} else {
	-82
};
	x
}
def mislead(x,Stark){

}
def TABLE[ROWS * TABLE[TABLE[-x][-1]][Sansa]][j] {

}
def TABLE[-95][k] {
	Jon += 1;
	if(81){

} else {

};
	TABLE[mislead(0.38)][-0.97]
}
def betray(Arya){
	Jon *= ROWS
}
assert TABLE[TABLE[ROWS][TABLE[( ( -0.75 ) - Stark * -y ) / dog * -91][-0.55]]][1] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert x : "Nothing burns like the cold."
def betray(Arya,Sansa,Ygritte){
	Arya += TABLE[TABLE[COLS][Hodor]][TABLE[-rule(ROWS)][Stark]]
}
var Jon = ( ( mislead(--81,-75 / -0.88) ) )
var dog = foo(( -COLS * dog + -Stark * -720.6698 * ( -foo() ) - bar(protect(y,Sansa) * ( -bar(1,-COLS) / TABLE[0.42][1] * --foo(Hodor,( -150.66 ) + Stark + Arya - ---TABLE[-86][0.8]) ),destroy(y - rule(foo(( -foo(1) )),ROWS,-140.417),( -COLS - -( TABLE[ROWS][-( COLS )] ) ),foo(( -Sansa )))) ),8 - dog)
def TABLE[( -protect(y) + Hodor )][j] {
	if(ROWS){

} else {
	y += 0.73
}
}
var Hodor = dog
var Hodor = ( betray(Ygritte) )
def TABLE[ROWS][j] {
	if(-1){
	if(x){

} else {
	1;
	if(( Arya )){
	( ( Stark ) );
	if(protect(mislead(-0.78),betray(TABLE[Ygritte][( COLS )],--mislead(ROWS)))){
	Stark
} else {
	Ygritte -= Ygritte
}
} else {

};
	if(( COLS )){

} else {
	Ygritte += -Sansa;
	( 18 - 800.05 ) * -ROWS
}
};
	if(( -( Arya ) + -Arya + -0.74 )){
	destroy(ROWS,ROWS,74 + --1)
} else {
	if(-17){
	Hodor /= ( -ROWS );
	if(Sansa){
	if(-( COLS - -0.56 )){
	-bar(rule(-70,ROWS,y));
	-52
};
	Sansa *= -( ( 19 + x ) );
	Stark -= --16
};
	if(( ---dog * ( COLS ) + ROWS )){
	if(mislead(Ygritte * dog,ROWS)){
	-0.83;
	TABLE[Stark][560.8852];
	Sansa
};
	0.26
}
};
	if(ROWS){
	Jon
};
	if(foo(-0.53,-( ---0.19 * dog ) - TABLE[COLS][TABLE[89 * destroy()][( -0.69 )] / Hodor])){
	Sansa *= ROWS;
	( ( COLS ) );
	Stark *= ( -TABLE[Hodor - Jon][230] / protect(-rule(),( betray(0.47,TABLE[bar(ROWS * ROWS)][COLS]) ) * -betray(rule(59,ROWS) - --22,ROWS)) * -Ygritte / --780.5 * ( ROWS ) / dog ) - dog * foo(--TABLE[-( COLS ) + ( 19 ) * Stark * COLS][( TABLE[Jon][Arya] )],protect())
} else {
	Hodor += rule(-1) - ROWS - rule(44 - COLS,destroy(),destroy(Ygritte));
	Sansa
}
}
} else {
	y *= 0.55;
	if(protect() / TABLE[( Hodor )][ROWS] * -ROWS / mislead() + --x - x){
	97;
	Sansa += -rule(TABLE[betray(1,-0.3)][( ROWS )],( Ygritte )) + ( COLS + COLS )
} else {
	if(-0.23){

} else {
	if(TABLE[( -0.25 )][ROWS]){
	Stark
} else {

}
};
	510.4
}
};
	if(-TABLE[foo(Jon,-93,( 70 ))][-destroy(protect(0.91,-Jon - --( 120.878 ),betray(-bar(mislead(destroy(-39)),Arya + TABLE[ROWS][rule(-rule(-bar(foo(),-0.04),-24),protect(( -0.54 ),y + Hodor * 77,TABLE[ROWS][( ROWS )]))],Jon))),ROWS) * bar()]){
	Jon -= Stark
}
}
assert mislead(ROWS,mislead(-Sansa - destroy(-TABLE[y - ( y )][Arya - -63 * TABLE[TABLE[Arya][-( -( Ygritte ) )]][Arya]],0.88) / bar(-dog))) : "Nothing burns like the cold."
def TABLE[-60.76][j] {
	x += ( Hodor );
	Stark += -foo(-COLS + -42,Stark) * COLS
}
def TABLE[94][k] {

}
var Sansa = Stark / y * -0.08
var Ygritte = ---( Hodor ) - -dog - -0.26
var Stark = ( 38 )
var y = ( ( Sansa ) )
assert -1 + -0.18 : "Fear cuts deeper than swords."
var Ygritte = 0.96 + 0.02
def TABLE[-COLS][i] {
	Ygritte += betray(-62)
}
assert 1 : "Winter is coming"
var Hodor = 0.63
var y = -780.44 * ( betray(protect(--betray(),betray(( ROWS ),--Hodor / TABLE[( 59 )][ROWS]))) )
var Ygritte = 0.58 * TABLE[destroy(-ROWS,44,COLS)][Stark]
def TABLE[Sansa][j] {
	mislead(-90)
}
def TABLE[foo(Arya)][i] {
	if(x){
	Ygritte -= -destroy(-( -dog ),( -62 ))
};
	if(( ( 0.87 ) - Arya * foo(TABLE[-0.96][rule(ROWS,COLS * -0.94 + ( ---( rule(( -ROWS ) / ---0.77 - -Jon / bar(-( -30 ),( TABLE[dog][( destroy(-54) )] ),-0.69),COLS) ) ),destroy())],ROWS) )){
	TABLE[COLS][( Hodor )] * --1;
	if(-0.41 - TABLE[COLS][x]){
	dog *= 1
};
	Jon += TABLE[-( ( 0.82 ) )][0.81]
}
}
assert -x : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(dog,dog,Stark){
	if(( ( TABLE[mislead(-460.972)][-85] ) )){

};
	Ygritte -= ( ( -protect() ) )
}
assert COLS : "What do we say to the Lord of Death?"
def mislead(){
	if(( TABLE[0][rule(y,mislead(Stark,-rule(0.2,Sansa),TABLE[ROWS][Stark]))] )){

} else {
	-rule(-Arya + destroy(( foo(Hodor,1,-0.86) )),-( COLS ) + protect(betray(Jon),Ygritte) - 58 * COLS,ROWS) - 0.48 / COLS;
	y /= Arya
}
}
var x = -COLS
assert -foo(-0.87 / ( ROWS * TABLE[( Ygritte )][22] ),-COLS) : "Fear cuts deeper than swords."
var Stark = Hodor
assert ( betray(( Sansa ),( -( TABLE[-86][ROWS] ) ),Ygritte) ) : "One can not simply parse himself"
assert Hodor : "One can not simply parse himself"
def protect(Arya){

}
assert Ygritte : "Nothing burns like the cold."
def TABLE[mislead(( --TABLE[ROWS][y] + -COLS ),( -270.38 - Hodor ))][i] {

}
def TABLE[Ygritte][j] {

}
var Ygritte = -( dog )
assert -Hodor : "Nothing burns like the cold."
assert -0.92 : "Nothing burns like the cold."
def TABLE[protect(COLS)][i] {
	dog *= bar(protect(x),( -x ));
	dog -= COLS
}
var Sansa = Ygritte
def TABLE[( ROWS )][k] {
	if(( ( ( COLS ) ) )){
	if(-1){
	x -= 1 + protect();
	destroy(-COLS)
}
} else {
	-COLS * ( dog )
};
	-0.11;
	protect()
}
assert -0.86 : "What do we say to the Lord of Death?"
assert ( Arya ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Sansa][i] {
	dog -= mislead(-0.71);
	Jon /= Ygritte
}
assert -0.37 : "Nothing burns like the cold."
def TABLE[Hodor][k] {
	if(Hodor){

} else {
	COLS
};
	if(( Ygritte + TABLE[-ROWS * -ROWS][ROWS] * -0.7 )){
	if(ROWS){

} else {
	if(690.4552){
	rule(ROWS * 98,-protect(Arya,250.207));
	y += -0.87;
	if(--1 + x){

}
} else {
	destroy();
	betray(( -ROWS / 970.6708 - ( TABLE[protect(-0.48,( -( TABLE[Jon / 0.81][protect(bar(67 - ( 70.407 - -0.09 )))] - COLS * ( ( rule(( destroy(( -0.28 )) / -69 ) / -99,-1) ) ) ) * COLS + ( --1 ) ))][ROWS] ) - -( ROWS ) * bar(-96,Arya) ),TABLE[rule() / TABLE[destroy(Arya,protect(destroy(),--Sansa * ( -0.14 ) + 1 / TABLE[Arya * -destroy(ROWS,bar(bar(COLS,-Hodor + --( ( -COLS ) - ( TABLE[1][ROWS] - 1 ) )) * Stark,destroy(),Arya)) / Ygritte][-ROWS] * -protect(Arya,-foo() + Arya)),Ygritte)][-99]][ROWS] - ( foo(Hodor,-780.08) ),( bar(destroy(),0.36) / 3 ))
}
};
	Jon += dog
} else {
	bar(Stark - Sansa,( ( ( TABLE[-Arya][Stark] ) ) ));
	Hodor /= ( -protect() );
	dog /= ( Arya )
};
	if(y){
	dog *= ( --0.89 );
	( -( COLS ) ) - ROWS;
	Sansa += -59
} else {
	Jon += ROWS
}
}
def TABLE[0.2][k] {

}
assert -0.5 : "One can not simply parse himself"
def mislead(){
	dog -= bar(protect(0.4),x,TABLE[-1][-740.92]);
	if(1){
	Stark += -COLS;
	-0.24;
	if(( destroy(destroy(-93)) ) * -1){
	if(COLS){

}
}
};
	if(0.42){
	y += ( dog )
}
}
assert bar(( Stark ),rule(protect(-x)),rule(bar(Jon),92)) : "What do we say to the Lord of Death?"
def destroy(Sansa,Stark){
	if(-260.733){
	-0.6;
	-Arya
};
	if(betray(bar(ROWS,mislead(( TABLE[dog][( -COLS ) - --TABLE[rule(foo(-( ROWS ),Jon),-160.2,TABLE[( y ) - TABLE[COLS][betray(Sansa)]][COLS])][-33]] ),Arya + ( TABLE[COLS / ROWS][( -40.23 ) - ROWS] ),-( x ))) - ( -80.079 ),Ygritte)){
	y -= -940.47;
	if(foo(destroy() / -destroy(Jon - Jon))){
	Ygritte += -x
} else {
	( --1 ) + Sansa;
	bar(Stark);
	-1
};
	dog -= Hodor / foo(( -TABLE[( -( 46 ) ) + -betray(betray(foo(bar(TABLE[( TABLE[( -46 )][COLS] )][( Hodor )],destroy(protect(-52,bar(( Arya )))) - COLS) / Stark,1)) * foo(destroy(mislead(foo(Jon - -( rule(bar(betray(destroy(( TABLE[rule(ROWS,Jon)][COLS] ),x)) + -Jon,foo(-Sansa)),COLS,--Ygritte) ),TABLE[--betray(protect(0.94 - rule(ROWS)) + -protect(),-58)][destroy(Arya,protect())])) * -14,destroy(protect()) + ( rule(x,protect(rule(( foo() )),protect(---1 * 160.8,Arya,--TABLE[-0.01][( -( -1 ) )]),--Stark * ( ROWS ))) ),protect(-Hodor,rule(),-( Stark ))),y),( --Hodor / ROWS )) + ( rule(0.92,betray(( TABLE[TABLE[( protect(62,( ( -530.24 ) )) )][86]][Sansa] ))) )][-COLS] ),TABLE[--0.84][( -Hodor )],COLS) + -0.68
} else {
	dog += -TABLE[TABLE[0.98][0.25] * ( bar(--TABLE[bar(-COLS - COLS)][ROWS] * -( ( 85 ) ) * ( ( 0.21 ) ) + -bar(destroy(),-22) - -protect(Stark)) )][( mislead(ROWS,-140.5) )]
}
}
def TABLE[( -270.1 ) * --0.3 - ROWS][i] {
	dog -= x / mislead(-0.56);
	1;
	( -x )
}
def TABLE[COLS - -TABLE[y][--y]][i] {
	-Sansa
}
var y = -rule(COLS,Sansa,2)
def TABLE[15 + TABLE[( COLS )][-880.541 / 74]][k] {

}
assert TABLE[ROWS][-320.46 / 0.99] : "Fear cuts deeper than swords."
def destroy(Ygritte){
	x *= ( bar(dog * mislead(TABLE[-0.23][mislead(-COLS)] - Hodor),-( Arya )) )
}
var Stark = -( Jon )
assert ( ( ( dog ) ) * protect(Sansa,dog,foo(( y * protect(( 0.71 )) * Ygritte * destroy(COLS,ROWS,-1) ),( -( foo(( -( ( Jon ) + betray(betray()) / Ygritte / ROWS / TABLE[0.59][( bar() - Jon )] ) / protect(1) )) ) ))) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -710.408 : "Fear cuts deeper than swords."
var Sansa = ( mislead() )
assert ( Arya ) : "Nothing burns like the cold."
var Jon = COLS
assert --bar(TABLE[bar(--protect(ROWS,Sansa,-( Jon )) / -150.476,COLS + ( Arya ))][-Sansa],-COLS) + rule(COLS) : "What do we say to the Lord of Death?"
def bar(Sansa,y){
	if(x){
	if(( protect(----0.22,0.43,Stark) + COLS - y )){
	-COLS * Arya;
	dog -= foo(( ( -( -( dog / dog - -0.49 ) ) ) ),--protect(1,ROWS) / ROWS,TABLE[-COLS][ROWS])
} else {
	( ROWS );
	( COLS )
}
} else {
	dog /= Jon
};
	if(protect(Hodor * TABLE[-bar(rule(COLS),ROWS)][( COLS )],ROWS)){
	COLS;
	x -= mislead(x,ROWS) * ( TABLE[-130.13][ROWS] )
}
}
assert Jon - betray(y,( dog )) - protect() / ROWS : "Fear cuts deeper than swords."
def TABLE[( TABLE[-TABLE[TABLE[foo(COLS)][-y / -ROWS]][Stark] - betray(52,( TABLE[-ROWS][ROWS] ))][Jon] )][j] {
	TABLE[betray()][ROWS]
}
def protect(Hodor,Arya){
	ROWS
}
def rule(Sansa,y){
	dog -= 83;
	x -= ( mislead(-70.0224,-1,COLS) ) / bar(-foo(mislead(0.8,Arya),foo(-440.7),( -0.88 ) - foo(120.94 / Arya / x)),( 71 ))
}
def TABLE[mislead(0.78,protect(-80))][j] {
	Sansa /= 1;
	if(-( 82 )){
	if(protect(-89,-0.02)){
	Sansa /= TABLE[betray(-0.54,foo(-0.01 / Sansa / --56),( dog )) - protect(TABLE[Jon][x],0.71) * ( TABLE[( -( Stark * mislead(( ( ( --390.8684 ) ) ) + ROWS,TABLE[Hodor][dog]) ) )][Arya] )][-0.61];
	if(COLS - -0.72 - ( mislead(-protect(-0.34)) )){
	y -= foo(TABLE[( --Hodor * TABLE[72][rule(1,rule(Stark,-Stark) - ( Hodor ))] + 81 / betray(( -0.01 )) )][92 * mislead(-TABLE[( mislead(59,-1) )][ROWS])],foo(41));
	--0.58
} else {
	Stark -= -1;
	( ( -bar(-Ygritte,rule(Sansa) - ( protect(COLS,--0.58) )) ) );
	-94
}
} else {
	0.38 + y
};
	if(foo(( -COLS * ( 0.87 ) / Jon ),mislead(COLS))){

} else {
	1;
	-0.26
}
} else {
	-63;
	Sansa *= mislead(destroy(foo(( Sansa - -27 )) + --0.18),-ROWS,-Jon)
};
	Sansa += TABLE[-0.37][( x ) + -( --y )]
}
def bar(y,Sansa,Stark){
	if(ROWS){
	Arya /= ( Stark );
	if(mislead(93,COLS)){
	--86 / 0.15;
	if(( --0.12 )){
	if(betray(y)){
	Jon += ROWS;
	Ygritte -= protect(-( -( Ygritte ) ),bar(( Arya + -Sansa ),Stark,COLS / destroy(( dog ),( 0.06 ))));
	if(-760.8){
	if(COLS){
	if(ROWS){
	Sansa /= ROWS;
	Stark / --( ( ( ( 0.34 ) ) ) ) + 200.4 - destroy();
	Jon
};
	Sansa /= --rule(( COLS ))
} else {

}
} else {
	if(-40){

};
	if(0.28){
	if(ROWS){
	if(mislead(( -( -40 ) ))){
	x *= -Arya
} else {
	if(Sansa){
	dog
};
	y
};
	Sansa
}
}
}
} else {

}
}
}
} else {
	( x );
	if(TABLE[Arya][mislead()]){
	if(1){
	Stark -= foo(bar(COLS,0.1),1);
	if(-( rule(( mislead(y,-destroy(ROWS) - ( rule(( ( ( ROWS ) ) ) + Ygritte / --rule(),72) )) ),Sansa) )){
	Jon /= ( ( foo(-x) ) );
	dog -= bar(bar(dog),bar(rule(ROWS)),Jon)
}
};
	y *= --( -( ( destroy() ) ) ) + ( rule(bar(( 24 ),( Ygritte / bar(--bar()) ))) )
}
};
	COLS;
	TABLE[COLS][-bar(( Stark ),COLS)]
}
def protect(){
	( betray() )
}
def protect(dog){
	ROWS
}
def TABLE[ROWS][j] {
	if(--( COLS )){

} else {
	if(Ygritte){

} else {
	Hodor /= COLS * bar(destroy(ROWS,foo(),( bar(-rule(y,mislead(bar(),dog,mislead(Sansa))),( protect(mislead(x),--98,Stark) )) ) * rule(destroy(880.46,COLS),( -ROWS ),270.837) + ( protect(--( TABLE[COLS][-Sansa] * TABLE[bar(( --COLS ))][-dog - destroy(-14,TABLE[betray(-0.49 + betray(betray(x),( ROWS + bar(COLS,Sansa) )),( Stark * ( ( -( ( -0.54 ) ) ) ) ))][--14] + x,( TABLE[TABLE[-480.59][( ( betray(TABLE[bar(-( 1 )) / foo(TABLE[Hodor][mislead(--TABLE[Hodor][0.29],-0.13,-Hodor)]) * y][rule(--Arya,-42)],( ( Arya ) * TABLE[-1][1 / ( ( -( ROWS ) * -( foo(( ( Stark ) ),x) ) / COLS / ( ( -foo(TABLE[-COLS * -Ygritte][1],destroy(foo(),-0.24,-95)) ) ) ) ) - TABLE[destroy(0.92,970.806 / ( rule(( mislead(( -60 ) - ROWS) + destroy(TABLE[-270.78][( 460.191 )] / -protect(),ROWS) * 880.068 / ---1 / COLS ),TABLE[( betray(TABLE[Ygritte][---( COLS )],-ROWS,-( --1 + protect(TABLE[COLS][( betray(-35,--TABLE[Hodor][Stark]) ) / -( ( protect(---( --destroy() ) / protect(foo(y,-foo(--1,bar(Ygritte,( --foo(-COLS,--0.29,TABLE[bar(-ROWS,protect(--y,-1,300.62))][COLS + Arya]) / -Ygritte - ( -ROWS ) )))) - -0.56,-( -0.41 )),Ygritte,betray(Hodor)) ) )]) )) )][80.981],--x + y) ) + ( x ) + ROWS)][( -96 )] / Stark] )) ) + Hodor ) * ( ( --0.62 ) )] - foo(0.98,( ( Jon ) ),COLS)][COLS] )) + ROWS] ) * foo(---55) / mislead(0.31,---760.21,-destroy()),-( foo(ROWS + COLS,y) ),Arya) / ( -5 ) / foo(Hodor) - mislead(COLS,ROWS,-93) ) - dog));
	if(x){

} else {
	if(ROWS / COLS){
	y += ( ( mislead(Hodor,rule(rule(Hodor,protect(TABLE[Stark + -39][-bar()])))) ) )
};
	if(COLS * ( Hodor )){

} else {
	if(betray(protect(( -dog * y - COLS - 30 ) * 0.86,( TABLE[-90.82][( TABLE[mislead(COLS,foo(COLS,-1,( Arya )),ROWS)][Sansa * destroy(( x ),( -Arya ))] )] ) / protect(Stark)),--TABLE[ROWS][( ( TABLE[( TABLE[--0.28 * --1 + Ygritte][y] + -Ygritte + -1 / TABLE[mislead(dog,COLS)][9] )][58] ) )] / -destroy(-( 840.711 )),Jon)){
	( -( x ) )
};
	bar(-mislead(( ( mislead(( -1 ) / mislead(-TABLE[protect(( ( 0.83 ) - ( ( -mislead(Sansa,--1) ) + destroy(bar(--COLS),Hodor) ) ),1,mislead())][--( -bar() ) + x],( -34 ) + ( 180.352 - -1 )),TABLE[Sansa][bar(protect(--56),y)] + -0.43 - Jon + rule(COLS + TABLE[---0.06][ROWS / Sansa * ( ( ( -mislead() + 45 ) ) )],( --protect(86) * -TABLE[x][-650.6274] ) / dog,-50) + ( ( TABLE[( ( TABLE[( y )][1] ) )][Stark] ) )) ) ),-1,0.03 + ( --TABLE[TABLE[880.7][TABLE[--TABLE[-y][0.39]][Ygritte]]][COLS] )),ROWS)
}
};
	Arya += betray(rule(destroy(-Arya,TABLE[TABLE[ROWS][( bar(0.56,-620.2) )]][Hodor] - 1,( --Sansa ))),bar(( 56 + Stark ),-( ---betray(---200.391,-ROWS,x) ),-85),( y ) / -mislead(mislead(( betray(( dog ),0.13,( x )) ),90)))
};
	dog /= y
}
}
def protect(Ygritte){
	if(( 120.33 ) + -0.07 * ( rule(TABLE[Sansa][protect(COLS)]) ) - 19){

}
}
def TABLE[TABLE[( 31 )][protect(Arya,Ygritte) + -( -0.93 ) / -Ygritte / x]][i] {
	if(COLS){
	Hodor *= ( protect(( ( ( Hodor ) ) ),-( ( -66 ) ) / y - dog) * rule(Hodor) );
	COLS
};
	if(Arya){
	if(-Ygritte){
	y *= protect(( -Arya ),mislead(-Ygritte));
	Stark *= bar(-1)
};
	if(COLS){
	Hodor -= ( ( -13 ) + rule(bar(( 81 ),Jon,( ( -89 ) )),-0.98) ) + COLS - -0.43 + ROWS;
	Jon /= Hodor
} else {
	Jon += ( -0.87 ) / --betray(ROWS,betray(rule(ROWS,ROWS / TABLE[-37][betray() / Arya],---x / -( betray() ) / TABLE[38][ROWS] + protect(-y + dog,-( ( mislead() ) ))) - ( --93 ) + Arya - mislead(-mislead(-Hodor,bar(18) + TABLE[( -ROWS )][( ( destroy(-( 0.45 / -0.62 ) * ( -14 ),1) ) )]) * TABLE[TABLE[0.2][x]][Sansa],Ygritte) - -Jon,y,Ygritte),( TABLE[destroy(( destroy(rule(( mislead(Sansa * 46) )),ROWS) ),( -TABLE[TABLE[-460.63 / -3][-0.71] / dog][-foo(17 - TABLE[( Stark )][-12],COLS,( --ROWS ))] / ROWS ),betray(protect(91,Hodor / 84)))][( ROWS )] ));
	Ygritte *= destroy(--66,-( 67 ))
}
} else {
	mislead() * -mislead(-Hodor,destroy(TABLE[Jon][dog]));
	Hodor;
	betray(0.1,--1 - ROWS,COLS)
}
}
def TABLE[( foo(( 0.3 )) )][j] {
	Jon += Hodor;
	Hodor *= TABLE[( --TABLE[protect(protect(40.7))][-bar()] )][( -0.74 ) + ROWS];
	Stark -= ( mislead(24,96) )
}
assert -( -betray(-0.98 / ( TABLE[rule(70)][--y] ),protect(-0.66 + Stark)) ) : "What do we say to the Lord of Death?"
def TABLE[COLS][k] {

}
def mislead(){
	Sansa -= TABLE[TABLE[x][-0.19]][destroy(dog)] * ( mislead(-25,( 0.63 )) ) + rule(( Jon ),COLS)
}
def bar(){
	Ygritte /= ROWS * mislead(ROWS,y,-TABLE[Arya][( betray(----0.34,( -110.448 ),50.8644) )])
}
var Stark = -COLS
var Stark = foo(( ( Arya ) ),Hodor)
def mislead(x,Sansa){
	91;
	y / -Arya
}
assert --60 : "What do we say to the Lord of Death?"
def protect(Stark){
	if(Jon){
	if(0.86){
	TABLE[( -66 )][ROWS]
} else {
	Jon
}
};
	if(100 / -48){
	Arya;
	Arya *= Ygritte
} else {

}
}
assert ( Jon ) : "What do we say to the Lord of Death?"
def bar(Sansa,Stark){
	Ygritte -= -23 + ( TABLE[( Sansa )][TABLE[betray(y,TABLE[( Jon )][Ygritte]) * -0.69][1] - ( -1 )] ) / foo(-foo(0.72),( betray(Arya) ) + Ygritte) * foo(betray(-530.3))
}
def TABLE[ROWS][k] {
	Stark -= --0.69;
	foo(( Jon ))
}
def protect(Hodor){
	bar(--1 + -mislead(( mislead() ),51))
}
def foo(Ygritte){
	-780.372;
	ROWS;
	dog -= ROWS
}
def mislead(x){
	-betray(0.59 / ( ( -COLS ) )) / COLS;
	if(--0.76){
	if(Stark){
	y += foo(( -30 ));
	if(COLS){
	COLS
} else {
	if(-( foo(dog) ) * -61 + --0.26 - mislead(-rule(-betray(-y,-( Ygritte )),x * 1),TABLE[( Hodor ) / ( -90 )][1],-92 * -COLS) - -56){

};
	if(foo(-x,Ygritte)){
	( mislead(( COLS ),dog) - Arya );
	if(ROWS){
	-foo(dog) - TABLE[bar(--1)][COLS] + -( Jon )
} else {
	if(( ( ROWS ) )){
	if(-y + foo()){
	( Sansa * 740.7 );
	if(Stark){
	Stark -= rule();
	COLS
}
} else {
	Jon *= ( -36 )
};
	if(ROWS){
	x += protect(( protect(0.64) + Hodor - foo(bar(COLS - --dog)) ),-betray(y,( foo() )),Sansa)
} else {
	mislead(-protect(COLS,Jon) - ( Ygritte ) * x) - ROWS * foo(-( dog ));
	ROWS;
	destroy(( ( ---Sansa ) ),betray(( COLS ) * ( COLS + COLS ) / Arya),x)
};
	x
} else {
	if(foo(-Jon,COLS + destroy(Sansa,betray(-Sansa) / protect()))){
	x *= ( TABLE[( betray(-Jon,foo(Arya,-ROWS,bar(foo(97))) + ( -TABLE[protect(COLS)][( TABLE[ROWS][mislead(ROWS,( -410.32 ),( -0.37 )) * -64 * dog] )] )) + ( Arya ) )][( -8 )] ) - ( dog ) + Stark;
	Stark -= ROWS;
	Hodor -= destroy(--betray(-Jon,foo(-Jon,betray(( ( -( -0.61 ) ) / foo(mislead(( mislead(mislead(Sansa,-x / betray(betray(foo(-250.05),( foo(( -530.28 ),dog) ))) - --1,--( 0.94 )),-( ( TABLE[ROWS][-150.5] ) ) - betray(90,( -( ( dog ) ) ) + destroy(( ( y ) ),-betray(( -bar(-dog / COLS,-COLS,destroy(-y,Ygritte) * -0.83) ),38)),TABLE[( --Ygritte )][( bar(protect(( 0.09 )),betray(TABLE[( TABLE[-mislead(foo(Arya - -72),-920.956) * Arya][-Ygritte + TABLE[-87 - -Arya][rule(-0.07,-y)]] )][bar(-460.885,protect())]) - -53) )]),590.493) )) + Arya) ),mislead(y,ROWS,Arya) / TABLE[rule(( -46 ))][-0.21],TABLE[47][ROWS]))),( -1 ))
};
	Ygritte * COLS
};
	if(0.96 * -COLS){
	Sansa -= ( ---foo(TABLE[( Stark )][-0.41 + -Jon * TABLE[-ROWS][TABLE[-TABLE[( Sansa )][( -1 )] * -35 + 230.1][Hodor]] * -destroy(Sansa,-bar(COLS,Stark),( rule() ))]) / -y - -170.052 ) - ( COLS );
	Sansa -= -Ygritte
} else {
	( ( rule(destroy(TABLE[rule(( -330.6 ) + Arya - ----( ( bar(--x,( -700.644 )) ) ) * 160.72 / -89)][TABLE[-0.11][destroy(protect(ROWS,rule(Arya)),-ROWS,destroy(ROWS))]],TABLE[-( ( --COLS ) - -1 + Arya - TABLE[( ( -0.79 ) ) * 98][rule(Ygritte,( Hodor ) / -Hodor)] )][-0.57],-0.48),-26) ) );
	betray(( COLS ))
}
};
	if(COLS){
	if(( ROWS )){
	betray(Sansa - TABLE[y][Ygritte])
};
	if(-540.5 * 94){
	Ygritte;
	Hodor /= --COLS * ( ( ROWS ) - ( TABLE[( bar(17,foo(-73),protect()) ) / ROWS][foo(Stark,Ygritte,Ygritte)] ) ) - -mislead(( -91 ))
} else {
	x /= -Ygritte;
	if(( 0.58 )){
	if(mislead()){
	dog /= Arya;
	Hodor -= 340.581 + betray(betray(),( ( --( protect(ROWS) ) ) ),Arya) * ( bar(---70) ) - ( ---17 * 0.95 + bar(( -910.568 )) + ( Jon + -1 ) )
} else {
	Arya += ROWS
}
};
	Sansa /= 0.44
};
	foo(( ( ( --( ROWS ) ) ) + ( -570.6 ) ))
}
};
	Hodor -= -0.98
}
};
	( ( COLS ) / ( protect(-( protect(( TABLE[ROWS * COLS][ROWS] )) ) * Sansa,ROWS) - ( Stark ) ) * mislead(foo(-ROWS,protect(),bar(( -mislead(25) ),Sansa)) * 0.03,( ROWS + 310.42 * ROWS - -( -bar(y * x) ) )) )
} else {
	Stark *= -foo();
	ROWS
}
}
assert TABLE[TABLE[--rule(ROWS,-dog - -TABLE[Sansa][1]) + -0.14 + --0.24][ROWS]][TABLE[320.86][--x]] : "One can not simply parse himself"
var y = Sansa
def betray(y){
	if(y){
	( protect(--protect(),-0.13,protect(( ROWS ))) );
	if(y){
	dog /= Sansa;
	TABLE[TABLE[TABLE[0.84][y + ---Hodor]][( foo() ) * y + 1] + foo(( ROWS ))][COLS];
	x -= ( 1 )
}
} else {
	Ygritte += x
}
}
assert ( -y ) : "Winter is coming"
def betray(Ygritte,y){

}
var Arya = -Stark
def TABLE[bar(COLS)][j] {
	Ygritte -= -protect(Ygritte,( mislead(y,TABLE[y][-400.08],( ( ROWS ) )) ) - COLS / ( ROWS ) / -31)
}
var x = protect(Jon - protect(-mislead(--( x - -betray(ROWS) * mislead(( COLS ),Hodor,-mislead(-0.1,--TABLE[0.15][-1]) * TABLE[( -TABLE[--COLS][( ( Ygritte ) )] )][-destroy(ROWS * 100,( -1 ),-Jon)]) ) - ---Jon / ( 0.6 ) - ( ROWS ) - -Sansa,-670.996) + TABLE[( -430.12 ) * -ROWS / -1][rule(---Ygritte,-rule(),-Arya)] - ROWS / 51 / rule(betray(1)),-57))
assert ( 1 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(Sansa){
	dog;
	Ygritte -= protect() - -0.39 + mislead(( ( 79 ) ) / rule(-78) / ( COLS ),-0.9);
	if(y){
	--COLS;
	Hodor *= TABLE[-67][-1]
} else {
	x
}
}
assert Hodor : "Winter is coming"
assert -Jon / -( TABLE[dog][-protect(COLS)] * ---( ROWS ) * 84 - TABLE[ROWS][TABLE[( --Sansa )][( betray(rule(protect(( protect(destroy(-mislead(( ( 0.41 ) ),( ( -0.3 ) )),( betray(--Hodor + TABLE[( -0.62 )][( ( mislead(0.56) - Jon ) )]) )),( ( COLS ) )) ),COLS),ROWS),( Hodor - ( bar(41) * --0.63 ) / ( mislead(-2 - Hodor,( x )) ) )) )]] ) : "Fear cuts deeper than swords."
var y = Arya
def mislead(){
	0.86
}
var dog = ( -1 )
var Jon = protect(0.18,mislead(protect(--y) + rule(TABLE[Jon][-protect()],-92),foo() * -0.3))
assert TABLE[foo(--0.54,x,--destroy(foo(Stark,-870.6706) + -0.29)) * -foo(-Ygritte * ( -( -0.15 ) )) - ( -0.49 ) * bar(ROWS) - ( -Sansa / TABLE[-( -y )][-0.69] )][foo(-0.97,Jon)] : "Fear cuts deeper than swords."
def TABLE[ROWS][j] {
	if(-0.81){
	x /= -ROWS + ( -TABLE[-ROWS][230.7039] * mislead(Stark) ) + -( ( -COLS ) );
	if(-Stark){
	Sansa -= 90.8
} else {
	if(0.35){
	dog += COLS;
	( Hodor )
} else {
	-COLS
}
}
};
	Hodor *= -69
}
def TABLE[mislead(-TABLE[570.72][-x] * ( -820.793 ),( Ygritte ))][j] {
	Sansa -= TABLE[TABLE[y][TABLE[ROWS][--0.46]]][Arya];
	( Hodor )
}
assert x : "One can not simply parse himself"
assert 650.274 : "One can not simply parse himself"
def mislead(Stark,Ygritte){
	if(protect()){

} else {
	Arya += -COLS;
	Hodor += ROWS;
	---51
};
	Sansa *= protect(Stark - betray(rule(),mislead(( TABLE[-ROWS][( ---x - TABLE[foo(protect(--( ( 1 ) ) / Arya / -43 + COLS)) / x][Sansa] )] ),COLS)),( -960.944 ))
}
assert x : "One can not simply parse himself"
var Jon = Ygritte
var dog = 1
var Sansa = Sansa
def TABLE[( foo() )][i] {
	if(bar()){
	if(Sansa){

} else {
	Jon -= ( Arya );
	if(destroy(y)){
	COLS;
	if(Ygritte){
	Jon += mislead();
	TABLE[0.64][( rule(Stark,TABLE[--TABLE[-85][1]][45 * 1 + -0.72]) / ROWS ) - COLS + foo(920.972 - Sansa / dog,TABLE[protect(foo(( mislead(-TABLE[TABLE[-98][0.05]][1] * protect(Jon,-COLS,-Jon - ( -TABLE[-0.84][y] ) * COLS - -Sansa),ROWS / -ROWS * rule(( -0.61 ),bar(),COLS)) ),rule(),-84),TABLE[-( COLS )][( ( mislead(Hodor - Stark + --19,-90,protect(-( --92 ),( betray(mislead(-48,betray(Arya,Ygritte),mislead(ROWS))) ))) ) )])][--1])];
	Jon += -0.9
} else {
	Hodor -= 1
};
	if(-Stark * ( mislead(-protect(-21)) + bar(dog + protect(protect(-0.04,-( Ygritte ),TABLE[( foo(mislead(-mislead(mislead(COLS) - TABLE[COLS][( -60 * betray(x,( Sansa ),ROWS) )] - destroy() / --ROWS,---ROWS),foo(rule(-65,Ygritte),ROWS,-( Stark ))) + protect(COLS) + -TABLE[Hodor][0.63],TABLE[Sansa][-Stark]) )][( TABLE[rule(--1)][ROWS] )] / -COLS - -0.28),--ROWS),Hodor) ) * 10){

} else {
	ROWS
}
} else {
	x /= -( ROWS )
}
}
} else {
	if(foo(bar()) + -1){
	Jon;
	if(130.4){
	if(-( y )){
	bar(( -1 ) / ROWS + --( y ) + 1,-( COLS ))
};
	Sansa += rule(TABLE[-730.7429 + Sansa][0.26]);
	140.53
} else {

}
}
};
	y *= COLS;
	ROWS
}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(){
	if(ROWS + ( -0.09 )){
	x += 0.05;
	if(TABLE[COLS][Hodor + COLS]){
	Jon *= betray(destroy(ROWS * -Jon),-41);
	if(( ( rule(1 - bar(-( ( mislead(-betray(0.43,-95)) * ( -( -( betray() * bar(TABLE[-Hodor][--0.04]) ) + TABLE[COLS][1] ) - TABLE[COLS][57] * -mislead() ) ) ),-dog / -( -0.5 - -37 * 0.8 )) * 0.79) ) )){
	if(( ROWS )){
	-0.16;
	( -y - x );
	TABLE[( protect(-1,TABLE[--860.759][-( Arya )]) ) + y][Hodor]
};
	-( 59 / -1 )
} else {
	Arya *= ( COLS );
	if(x){
	Stark += rule()
} else {
	dog /= -1 + --( foo(( --970.015 ),( Stark * 0.52 )) ) + -480.9;
	Arya *= mislead(( Ygritte * -( COLS ) + --COLS / ( x ) ) / TABLE[ROWS][( COLS )]) - 15
}
};
	if(TABLE[COLS][( ( ( -56 ) ) + ( destroy() ) )]){
	dog /= -foo();
	Arya
}
};
	betray(890.44,betray(),-11)
};
	ROWS + bar(410.543,--y)
}
assert 1 * ( Sansa ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-Hodor][j] {

}
def TABLE[-12][j] {

}
var Sansa = Stark
def protect(){

}
assert Stark : "Nothing burns like the cold."
def betray(){
	-COLS;
	Arya + TABLE[y][--( -0.18 - protect(Arya,-Arya * -mislead(Stark,( x ) * -x) - mislead(( -200.372 ))) / -protect(y,TABLE[-( protect(ROWS,94,--( y )) )][-0.92 + -16 - Stark - --Jon],foo(destroy(-mislead(Jon,Jon),( -ROWS ),foo(ROWS,Arya)) / mislead(-COLS))) * -y / ROWS )];
	-Ygritte - -mislead(-70,( TABLE[COLS][-Sansa] - ( -y ) * Jon - protect() ),-0.53)
}
def rule(Stark,Ygritte,y){
	if(ROWS){
	rule(( 0 ) / betray(COLS,-1 * 1 - betray(x),Hodor) - Jon,--1 + ( COLS )) - -Ygritte;
	if(protect(-( -TABLE[Arya + Sansa][betray(-800.277,ROWS) + -0.57] ),-protect())){
	Stark
}
} else {
	-0.8;
	Jon
}
}
def TABLE[Jon][k] {
	if(-( -30 )){
	if(( -Arya + destroy() * -0.63 ) * ( ( Sansa ) )){
	TABLE[-550.82][-( ROWS ) + -mislead(COLS) / -foo(0.08,-0.6) / -protect(-x) / -96 * y / ROWS - destroy(( ( 0.26 + protect(TABLE[-( mislead(destroy(Arya,0.27 - ----67,60)) ) + -TABLE[mislead(ROWS)][830.559]][-0.51]) ) - ( --260.21 ) ))];
	Arya /= -210.262
} else {
	TABLE[dog][( --protect(( --( ROWS * TABLE[67 - COLS][TABLE[-dog][-Arya]] ) / -bar(COLS,( --COLS ),bar()) * -0.29 ) + rule(-foo()) / --41,y,Hodor) )]
};
	-1 + -foo(1) - ROWS
} else {
	if(ROWS){

}
};
	( Ygritte );
	if(COLS){
	--ROWS / -destroy(-bar(COLS,bar(x,y)),60,( 0.24 ));
	Ygritte -= -280.083 - -ROWS
}
}
def TABLE[-Ygritte][i] {

}
var Hodor = rule(-Jon,rule(mislead(COLS,Jon,ROWS),betray(Jon) - bar(( --0.11 ),TABLE[COLS][( -rule(( COLS ) * ( mislead(mislead(TABLE[--360.6][ROWS]),-dog) ),( -Jon )) * -betray(-1 * betray(-86) + ( -430.13 ),x,betray(foo(-COLS / -TABLE[-68][0.35] - -610.48 - -0.63 / COLS / ( foo(-0.83,( 380.412 )) + Jon ) * rule())) / ROWS * -0.69 + -( -TABLE[560.0158][y] + 970.3 )) )],foo(-1) / 0.47) + --( COLS )))
assert TABLE[Stark][-destroy(-TABLE[Sansa][protect(ROWS,1)],mislead(( -rule(Stark,97) ),-940.71))] : "What do we say to the Lord of Death?"
assert Hodor / COLS : "What do we say to the Lord of Death?"
assert rule(Arya,( 0.96 ),Ygritte * Hodor) : "Fear cuts deeper than swords."
def betray(Arya,Ygritte){
	( foo(betray(Jon,-Arya),-TABLE[0.32][COLS * -1] * --0.57 - COLS) )
}
var Arya = dog
assert ( -y ) : "What do we say to the Lord of Death?"
assert foo(-TABLE[0.3][TABLE[Arya][TABLE[TABLE[-0.18][--74 - -66]][ROWS]]] - dog - 0.98 + -ROWS) : "Fear cuts deeper than swords."
assert Stark * COLS : "One can not simply parse himself"
def protect(x){
	Jon -= TABLE[Stark][ROWS] + bar(( -0.18 ),destroy(( -dog / 28 ),--1)) / protect(foo(rule(-73,0.33)),( ( -betray(mislead(( ROWS ),( rule(-1) ) / ROWS + destroy()),mislead(-TABLE[-90.925][( protect(Stark,0.36,ROWS + ( -57 )) )] - destroy(980.49,-COLS / mislead() - Hodor * -( ( 60.3182 + Stark ) )),-rule(( betray(betray(( -mislead() ),bar(-95,COLS,COLS - betray(0.68 / ( --mislead(mislead(mislead(y)),mislead(),Sansa) * Hodor ))))) ))),COLS - ( -Ygritte + ROWS )) ) ),y);
	if(0.03){
	if(rule(1,--0.73 * x,betray() * Ygritte)){

}
}
}
def TABLE[COLS][i] {
	( foo(--360.756,-56 * -TABLE[TABLE[Ygritte][betray(dog) - ( Arya )] * protect()][COLS]) * y * rule(foo(-78),bar()) / COLS - -dog / ( rule(protect()) ) )
}
assert ( rule(COLS) ) : "What do we say to the Lord of Death?"
def TABLE[-0.18][i] {

}
def foo(x){
	Jon
}
var Jon = Stark
def rule(Sansa){
	x -= -78;
	x -= Ygritte
}
var Stark = -60.1595
def betray(x){

}
def TABLE[7][j] {
	Arya -= TABLE[-64][x];
	if(--ROWS * Jon - protect(1)){
	x /= y;
	ROWS
}
}
var Arya = ( ( Sansa ) )
def TABLE[( -0.73 )][k] {

}
assert destroy(foo(),-dog) + ( x ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert protect(-Hodor,COLS / bar(bar(betray(--0.18),-1,COLS))) / ROWS / Stark * mislead(74) : "Winter is coming"
assert TABLE[y][rule(TABLE[( -( x ) )][foo(( ( -Jon - Ygritte / mislead() ) ),-( foo(Hodor,1) ) * COLS * --ROWS,Stark)])] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert rule(-320.053) : "Fear cuts deeper than swords."
def rule(Stark){
	Arya -= x;
	if(( ROWS )){
	x += mislead(( -20 )) * -570.33
} else {
	Jon;
	if(1){
	ROWS - 0.37;
	-0.59
};
	rule(TABLE[x + protect(( COLS ))][dog],-27)
}
}
def mislead(x,Sansa,Hodor){
	ROWS
}
assert -170.96 / Stark / -0.91 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[TABLE[-ROWS][45]][i] {
	( TABLE[-ROWS][-1] );
	y += -( ( -( --1 ) / TABLE[rule(-( ( ( COLS ) ) ))][36 * dog] ) ) / Stark - protect();
	ROWS / ( destroy(-1 / -1,-COLS) ) - ROWS * rule(0.71 * Ygritte,ROWS,TABLE[20.2][destroy(Hodor,TABLE[0.73][-dog],-6)])
}
var Arya = ( -0.39 ) + TABLE[0.49][ROWS]
assert ROWS * -0.14 : "Nothing burns like the cold."
def TABLE[( Hodor )][k] {
	-( ( foo() / rule(( foo() - ROWS )) + -bar() ) * Hodor )
}
def foo(Jon,Arya){
	-0.98;
	if(-770 / -( bar(Hodor) ) / ( ROWS )){
	dog /= -0.64
};
	if(Stark){

} else {
	( ( bar(( foo(y) ),foo(),destroy(ROWS,--1 - COLS - ( ---58 + y ) + betray(),-COLS) + COLS) ) + ( ( -Arya ) ) + Hodor + 0.89 );
	y += TABLE[Arya][Sansa]
}
}
var Ygritte = -( protect(TABLE[Sansa * -destroy() + y][TABLE[1][COLS]]) )
def betray(Sansa){
	if(--0.29){
	if(COLS){
	if(-foo(dog)){
	if(mislead()){
	Arya += y + ROWS;
	( ( -1 ) + x )
}
};
	Ygritte += -( -0.83 );
	dog
} else {

}
}
}
assert TABLE[ROWS][destroy(--( --( ( ( ( x ) ) ) ) / ( foo(destroy()) ) ) * 0.95 * -0.05 + TABLE[--ROWS][Stark],-( destroy(-Jon,( TABLE[Sansa][ROWS] )) ),--940.6 / Stark)] : "What do we say to the Lord of Death?"
def mislead(y){
	Sansa /= ( ( Ygritte ) )
}
assert COLS : "One can not simply parse himself"
var dog = -1
assert Ygritte : "Nothing burns like the cold."
assert Sansa : "Fear cuts deeper than swords."
def TABLE[dog][k] {

}
def rule(Arya,x){
	Arya /= -370.7385
}
def rule(y){
	dog *= -1;
	if(y * -TABLE[Arya][92]){
	if(bar(ROWS)){

} else {
	dog /= x
}
} else {

};
	if(( TABLE[rule(TABLE[y][-dog - protect(Arya)])][-( -y )] ) / ( -destroy(foo(( -34 ),Ygritte),( Sansa ),0.45) )){
	if(rule(TABLE[( Hodor ) / --mislead() * 0.2 * Ygritte + -( COLS )][45],( --0.49 - TABLE[-52][ROWS] ) * COLS - ROWS,-COLS)){

} else {
	y *= COLS;
	TABLE[COLS][270.19]
};
	if(-destroy(--66 + -TABLE[( -TABLE[( -0.91 )][rule(( 0.2 ),Arya,-( foo(ROWS * x) ))] )][220.6] / betray(29),0)){
	Ygritte -= -Hodor
}
} else {
	protect(1) + ( 140.34 );
	y += foo()
}
}
def TABLE[Hodor][i] {
	if(ROWS){
	-( ( betray(-( -Ygritte ) * x,betray(-41),( ( -1 * 1 ) ) + ROWS - destroy()) ) )
}
}
def destroy(Sansa,Ygritte,Stark){
	Stark -= Ygritte;
	if(betray(Ygritte,( ---1 - TABLE[y][( Arya ) + destroy(ROWS,( protect(Arya - 0.48) ),x)] ),--0.44)){

}
}
var Hodor = -( --COLS * 0.97 )
var Ygritte = -440.03
var x = Jon
def mislead(){
	COLS + -1 - Arya
}
assert ---1 : "What do we say to the Lord of Death?"
assert -1 : "One can not simply parse himself"
assert mislead(ROWS) : "What do we say to the Lord of Death?"
var Sansa = Arya
def betray(Sansa,x){
	if(-0.33){
	if(mislead(1,( TABLE[Jon / ( 610.233 ) * 1 + 79 * TABLE[-1 - foo(Sansa)][Arya] + 0.91][-190.834] * -( ( bar() ) ) ),( mislead(COLS * 4) ) - -80)){
	Jon += TABLE[Jon * COLS][89];
	if(-ROWS){
	Ygritte;
	Sansa /= COLS / -Sansa;
	COLS * COLS * ROWS + ROWS
} else {

}
} else {
	dog -= betray(( bar(y / foo(TABLE[-protect(Jon,protect(dog))][( -12 )],mislead(( ---1 + ROWS ),Stark),bar()) * -protect(Sansa,96,-49),COLS,--TABLE[-( --Stark )][COLS]) ),COLS)
};
	Ygritte
} else {
	if(---81){
	if(( 0.95 ) + -0.13){
	Ygritte += -0.48 - TABLE[bar(TABLE[0.75][-1],-y)][-880.11];
	foo(--Stark,( 1 ));
	if(dog / TABLE[33][TABLE[Jon][dog]]){
	Jon *= -95;
	( ( 1 ) )
} else {
	if(bar(-dog)){
	ROWS
};
	--ROWS + ROWS
}
}
}
};
	Ygritte *= COLS;
	-( ( ( -1 + Arya / -TABLE[rule(ROWS,-mislead())][Sansa] ) ) )
}
var Sansa = -mislead(x * Sansa) - 71 + betray(ROWS,48,betray()) / 760.6 - foo()
var x = foo(-0.44 / 220.188 / rule(85,( COLS )),Hodor,-( ROWS * ( rule(rule(dog + --protect(COLS,-0.04),bar(-( x ),-( Stark ) * bar(330.55),1) / rule(-0.89,betray(foo(),-350.559),dog))) ) + -0.95 ) - destroy())
assert ( Hodor ) : "Nothing burns like the cold."
assert -1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = foo(--bar(TABLE[COLS][( 40 )]) - Hodor / mislead(--50 + 42,-( ( ---38 + 1 + -protect(-protect(--0.89,1),0.35) / Sansa ) ),-Jon) - COLS - bar())
def TABLE[0.29][k] {
	( Hodor );
	if(( destroy(-( -ROWS )) )){
	mislead(destroy(),dog)
} else {
	Jon -= -42
}
}
assert foo(y) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = -COLS / -47
def betray(Hodor){

}
def destroy(dog,Sansa,Arya){
	Sansa
}
def mislead(Arya,Ygritte){
	if(betray(x,( TABLE[ROWS][--1] ),( destroy(dog,( COLS + TABLE[( bar() )][Arya] ),COLS) ) / TABLE[destroy(betray() - ( 0.41 * TABLE[destroy(( ROWS ) - Hodor / 540.996 - -bar(),-0.53,1)][Ygritte] ) * Stark * ( ROWS ) * destroy(( -protect(( foo(-97,( -0.62 )) )) ),destroy(),( Sansa )),COLS)][bar(--Stark,( bar(( ( protect(Hodor,( dog ) + ( x + -1 * mislead(destroy(Ygritte * 0.35) - ( COLS * ( COLS ) )) )) ) ),y * Jon + Arya * ( Jon ),ROWS) - 73 ),( Jon ))])){

};
	if(rule()){
	Jon += -0.3;
	protect()
} else {

}
}
def mislead(){
	Stark *= Hodor;
	( -0.36 );
	if(ROWS){
	Arya -= -COLS
}
}
def TABLE[( ( Sansa ) )][i] {
	if(-0.42 - -Stark / ROWS){
	if(destroy(x,( -( Sansa ) ))){
	Ygritte /= ( x )
} else {

}
} else {
	if(-( Hodor ) / mislead() - dog / betray() - ( COLS )){

} else {
	if(( x + 0.79 ) / ( TABLE[dog][1] - TABLE[dog][1] )){
	( bar(bar(( ( -0.14 ) + y ))) + COLS * Arya - mislead(( ( --rule(-( TABLE[TABLE[Hodor][protect(Hodor + ROWS)] - mislead(bar(mislead(-mislead(ROWS,Hodor + x - ( --550.57 ),--( 0.49 ))),-TABLE[dog][-Stark * 0.58 / ( ( 1 ) + -ROWS - protect() ) * -610.375 + ( Jon + TABLE[Hodor / ( TABLE[Arya][protect(ROWS + protect(-0.08,COLS,Arya),( -19 ))] )][-rule(-COLS)] ) / y],dog - ROWS * dog - ---0.1),-42 * foo(-0.87),-0.79)][destroy(0.96,( ROWS ))] ),-ROWS) ) ),--Sansa) - TABLE[Arya][Stark] ) / foo(---Jon,-( -88 ),21 * ( TABLE[ROWS][( ( -1 ) )] ))
};
	Arya /= foo(--( 0.16 ) - -ROWS * -TABLE[-82][TABLE[-( ( TABLE[-1][( 0.38 )] + COLS ) )][Sansa] + ( TABLE[TABLE[-( foo(COLS) )][Sansa / ( bar(( betray(-0.64) )) )]][-Ygritte] )],ROWS - Jon)
};
	if(-( Sansa * -38 / ROWS )){
	if(y - ( rule() )){
	--19 / COLS * ( -99 )
}
} else {
	Arya *= 42
};
	if(-Hodor){
	if(( Hodor )){
	x -= Ygritte;
	Stark;
	if(dog){
	Arya += Stark;
	if(Sansa){
	Stark -= ----COLS
}
} else {
	( TABLE[ROWS / Jon][ROWS] );
	if(( -0.47 )){
	destroy();
	if(19){

} else {
	if(TABLE[ROWS][dog]){
	dog += rule(( ROWS ),TABLE[( ( destroy(betray(ROWS / ( protect(ROWS,ROWS) ) + protect(-mislead(( ( ( ROWS ) ) ),( 0.11 )) + TABLE[rule(( destroy(Ygritte * protect(y) - ( ROWS )) ))][( ( -40 ) )] / TABLE[foo(bar(--38),Ygritte + -86,-41)][520.578] * -670.8,( ( Ygritte ) )))) ) )][TABLE[( -55 )][COLS]]) * ( -COLS );
	Hodor -= destroy(0.81)
};
	Hodor += ( Hodor )
}
};
	if(Sansa / --rule(530.9)){
	dog;
	67 + -0.7;
	Ygritte -= rule(0.76)
}
}
} else {

}
} else {
	if(COLS){
	if(ROWS){
	Arya *= Hodor / ( -0.61 );
	0.6
} else {
	-x + betray(-0.85 / protect(Sansa,rule(COLS),0.35 + -240.8082)) + ROWS;
	bar(-( 0.19 ) - COLS)
};
	Ygritte += 1
};
	Ygritte /= -protect() * 3;
	Jon /= -( -1 ) + ( ( -bar() ) ) / bar()
}
}
}
def destroy(){
	Jon -= -bar(destroy(protect(),( Jon )),-( bar(9) ) - ( -( 0.2 ) / -0.28 ) - Jon);
	y /= 20;
	protect(-( Jon ),--88 / Stark)
}
def rule(dog,x){
	if(TABLE[( 0.16 + -rule(protect(-0.86 * ( Hodor ),TABLE[36][rule(Stark,betray(ROWS - -400.558 / x),COLS)]),bar(protect(protect(ROWS,TABLE[COLS][foo(-( TABLE[( -Stark )][bar(( protect(( betray() )) ),dog,COLS) + destroy(( Arya - -68 + TABLE[( destroy(-( COLS ),-42) * ( dog ) + Stark * ROWS * ( Arya ) * -Ygritte ) * -y + -foo(( -rule(y) ),TABLE[Hodor][protect(Hodor,destroy(( ROWS ))) / -23])][6] )) / 140.8794 / 1 / Sansa / mislead(protect(COLS,protect(Sansa,250.75)),Ygritte,ROWS)] ) / mislead(990.7,( ( protect() ) * Jon )) + -1,--( -Sansa )) * TABLE[37][-0.1] - x - -mislead(( betray(0.49) )) + ( ( betray(1,Hodor) ) ) / Arya],-ROWS)),( ( -Jon * -COLS ) )) + Stark / ROWS) )][rule(-Sansa)]){
	dog -= ROWS / ( -rule(dog) );
	if(0.06){
	if(ROWS){
	Sansa -= foo(0.86);
	ROWS
};
	if(Stark){

} else {
	if(protect(-TABLE[( y )][--60]) * 0.64 + Arya - ( x ) - ( TABLE[Jon][---0.92 * ( Ygritte )] )){
	if(--Stark){
	rule(-rule());
	COLS;
	if(betray(protect() / 0.31 * rule(( ( betray() ) ),ROWS),-140.72 - TABLE[-COLS][-protect(1,1 / mislead(ROWS,TABLE[( --620.63 )][Arya * -30.9 - destroy(betray(-830.295,85,--( COLS )))])) * -COLS]) + -TABLE[ROWS * -COLS + ( -COLS - ( -0.72 - Stark ) )][ROWS]){

} else {
	protect(-bar(y,69) - TABLE[betray(-0.21)][mislead(--TABLE[y][( betray(Ygritte) + -Hodor + ROWS + bar(( ( ( -TABLE[-46][mislead()] ) ) )) * COLS )],x)]);
	if(( 68 )){
	( dog ) / ( ( Jon ) );
	Hodor += -protect(COLS,dog - TABLE[Jon][TABLE[y - ( TABLE[COLS][betray(( ( --0.71 ) ),TABLE[-1][Stark],COLS)] ) / COLS / Ygritte][-( Arya + 0.22 )]],betray(-20,34) - TABLE[foo() - --1][ROWS])
};
	if(-0.12){
	Sansa -= 62;
	if(TABLE[-ROWS][-54]){
	Arya += betray(( ( x ) ),-( Jon ))
}
}
}
} else {
	if(TABLE[betray(y,( protect(-1,---( ( --rule(-0.77 / -TABLE[rule()][rule(bar(1,( TABLE[bar(foo(( COLS - --25 ),68))][( ROWS )] )),COLS)]) ) )) ),x) * ( -( -90 ) )][TABLE[mislead() * mislead(( Stark ))][-bar(0.76,( Stark ),TABLE[-foo(Jon,foo() / betray(COLS) - 1 / -70.195) + -0.81 * protect()][( destroy(( ROWS ),betray(1 + -36,3)) )] / betray(2))] - ( ( -destroy() ) )]){
	Jon /= COLS;
	if(rule(foo(ROWS - COLS,ROWS)) - 0.45 * ( betray(COLS,Stark) ) + mislead(-710.87,y) - --( -betray(( destroy(y) ),foo(( 360.457 )),0.65 * -( ( betray(betray(protect(-destroy(-160.218,rule(35 + destroy(-COLS,-Arya))),Hodor,betray(( Sansa ),--TABLE[rule(( y ))][TABLE[( ( ( -ROWS ) ) * -64 )][rule(( 1 ) - ROWS / ( protect() ))]] - -0.36 / x * ( ( -( Sansa - -1 ) + rule(COLS,0.53) ) )))),Stark) ) )) + -960.695 ) - ROWS + ( -1 ) * 0.92){
	Hodor /= COLS;
	Arya *= x
};
	betray(ROWS,x,TABLE[foo()][ROWS])
}
}
}
}
} else {
	if(-48){
	if(-foo()){
	ROWS
} else {
	-TABLE[Hodor][TABLE[Arya][Hodor] + rule(-48) / Hodor / ( Sansa ) + Sansa - COLS - TABLE[-rule(-ROWS)][( Arya )] * -1];
	if(350.275 - ( Sansa )){
	Jon += ( -310.209 );
	-1;
	-590.9
} else {
	-0.88
};
	if(-Jon){
	if(rule(mislead() * TABLE[-COLS][dog],-( Stark ))){
	if(protect(ROWS,COLS,-23)){
	if(COLS){
	Jon *= protect(rule(Arya,x),rule(ROWS,-protect(COLS,ROWS),mislead()),protect()) + destroy(0.03,-COLS);
	( destroy() - 0.37 )
} else {

};
	x += Jon
}
};
	if(-Ygritte){
	y += -0.93;
	1
}
}
};
	if(y * ( --25 / COLS )){
	if(0.99){
	Stark *= betray(430.792 * TABLE[70][destroy(390.2871,-dog)]);
	if(TABLE[protect(-Ygritte,0.74,Jon)][560.2453 - 1]){
	betray(( dog ));
	if(0.49){
	rule(( Jon ),bar(COLS - ---1,TABLE[Sansa][x],( ROWS )));
	if(protect(-destroy(1 * mislead(-COLS,--( -dog * TABLE[-protect(-71,( y + ( -38 ) ),-TABLE[Sansa][-Hodor / ( Ygritte )] / foo(betray(( TABLE[-0.65][-96] ) / Hodor,bar(protect(-ROWS),TABLE[-mislead(-COLS)][protect(ROWS) + 16]),ROWS),0.5,TABLE[-( 0.46 )][ROWS]))][y] ) + -Hodor / ( mislead(dog,-y,ROWS) ) * destroy(--( -rule(protect(COLS,( ROWS )) - protect(( foo(destroy(),protect()) )),33) / Arya ) + mislead(Stark,( dog * betray(( 620.001 ),--ROWS + -y) )) - Jon * COLS - --1 - COLS)),mislead(-y,COLS + COLS) - Stark),( -1 ))){
	-COLS;
	if(-1){
	( -0.96 )
}
}
} else {
	betray();
	Hodor - -betray(COLS)
}
}
} else {
	Arya -= betray(COLS,COLS)
};
	( --( 90.82 ) );
	Jon -= ( ( foo() ) )
};
	( -0.04 + protect(Hodor,( -0.77 )) - -82 )
} else {
	if(0.75){

}
};
	if(-69 / -( ROWS )){
	x -= mislead(( -dog )) + TABLE[Sansa][protect()];
	if(-1){
	Jon
} else {
	-COLS
};
	if(-TABLE[-( mislead(dog - --Hodor,( -1 ) * 57) )][y + TABLE[90.2][-1]]){

} else {
	if(-280.88){
	Arya += Arya;
	foo(( -1 ) + TABLE[-0.84][COLS])
} else {
	Ygritte -= dog
};
	dog /= Stark * ( -0.06 )
}
} else {
	dog += TABLE[-( Sansa ) * betray(foo(x,COLS),-48,470.5)][TABLE[190.514][TABLE[0.64][x]]];
	y -= ( ( foo() ) ) / -50
}
}
};
	y -= --COLS / destroy() - ( ( ( ROWS ) ) )
}
def TABLE[ROWS][i] {
	Arya -= TABLE[( protect(COLS,0.91) )][-39 * ( Arya )];
	ROWS
}
def TABLE[1][i] {
	-( ( Stark ) );
	Arya
}
def rule(Stark){
	Jon /= TABLE[TABLE[-0.08][ROWS - ( foo(-1) )]][protect(( ( COLS ) ))];
	dog += -1;
	Ygritte *= -96
}
def mislead(Hodor,Ygritte,x){

}
assert ( TABLE[-920.19][( -( ( -98 ) ) + bar(Stark,-Sansa) ) + Ygritte] * bar(Hodor) / COLS ) : "Winter is coming"
def bar(y){

}
def destroy(Stark,y){
	Ygritte -= COLS;
	-14
}
def betray(dog,Ygritte){
	dog -= ( 64 )
}
var dog = foo(Arya)
def protect(Ygritte,dog){
	ROWS;
	ROWS
}
assert -ROWS / COLS : "Fear cuts deeper than swords."
def destroy(dog){
	--1;
	if(( -betray() )){
	y += betray() + --TABLE[Sansa][ROWS]
} else {
	if(--foo(0.89 - Arya,dog + TABLE[destroy(bar(-foo(-0.08 + betray(( 0.56 )) + COLS,58)))][mislead(TABLE[( -( ROWS ) )][Stark],-bar(TABLE[protect(Arya,Jon)][-ROWS],( -Ygritte ),ROWS))],Hodor) + ( -Jon )){
	Arya -= ( COLS )
} else {
	y -= ( ( COLS ) )
}
}
}
def protect(Hodor){
	x += -0.52;
	( ( ROWS ) )
}
def mislead(Hodor,x,Arya){
	( COLS );
	y -= x;
	Sansa *= ( ( COLS ) )
}
assert 1 : "What do we say to the Lord of Death?"
var x = ( Jon )
assert ROWS : "What do we say to the Lord of Death?"
def bar(dog){
	rule(( foo() ),-protect(-320.86,bar(-0.92,ROWS / -Stark),( -0.75 )) * -0.92 * -destroy() / ROWS,y)
}
var Stark = ( TABLE[( -rule(-1) * ( ( Ygritte ) ) )][Sansa] )
def destroy(x){

}
assert mislead() : "Nothing burns like the cold."
def foo(y){

}
def protect(Hodor){
	Ygritte -= ( 0.62 )
}
var x = -1 / bar()
assert 23 : "One can not simply parse himself"
var y = ( rule(mislead(( Ygritte )),mislead(x * Jon / --0.52 / COLS,-0.92)) )
def protect(Sansa){
	( bar() ) - 160.37 - mislead()
}
def bar(x,Jon){
	Sansa *= TABLE[TABLE[Hodor][-0.33] + protect(-dog + destroy(0.5,( -ROWS * bar(y) ))) * 0.09][bar(( protect(bar(protect())) ))] + --Stark;
	protect(-( ROWS ),dog)
}
assert ( TABLE[-Sansa][-0.88] + -rule(TABLE[-200.84][Stark],TABLE[Hodor][-Ygritte],Arya) ) : "Fear cuts deeper than swords."
assert 100.881 : "Fear cuts deeper than swords."
def TABLE[foo(Sansa,destroy(-0.55,( ( betray(48 + TABLE[64][-1]) ) ),COLS) / 10)][k] {
	if(x){
	TABLE[-96][Sansa / TABLE[---1][--COLS]]
} else {

}
}
assert ( Arya ) : "What do we say to the Lord of Death?"
def TABLE[ROWS][i] {
	Hodor -= ( -( COLS ) - y ) / ROWS;
	rule(bar(-1,( -( Hodor ) ) / --50,Hodor),Stark) + ---47
}
def TABLE[( 0.92 )][k] {

}
def foo(Arya,y){

}
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert bar(COLS,-mislead(TABLE[Stark][destroy()],protect()),TABLE[( ( COLS ) )][x]) : "Nothing burns like the cold."
def TABLE[rule(960.3744,( ( -COLS / -Ygritte - ( protect(TABLE[mislead(-TABLE[COLS][-70.431] + dog * ( betray(TABLE[1][TABLE[--TABLE[mislead(betray(-TABLE[--6][29] / -81),44)][-0.68 - x] / -850.9][( 86 )]]) ),-( TABLE[x][-( 0.75 / ROWS )] / protect(( Arya )) - --COLS )) - -ROWS - --0.09 * 1 - 29][x],--Ygritte,betray(90,ROWS)) - ( -50 ) ) ) ))][j] {
	dog *= TABLE[( ---rule(( -55 )) * ( rule(Arya,x / mislead(-COLS)) - ( 330.586 ) - Hodor / Ygritte ) )][-rule(-TABLE[bar() - -1][ROWS],( destroy() ))];
	dog /= 0.33;
	Jon /= --Stark
}
var Arya = --720.9 * -0.6
def TABLE[-0.72][k] {
	Stark -= ( TABLE[( ROWS )][---0.05] )
}
var Jon = -( 0.85 )
def protect(Jon){
	Hodor += COLS
}
def TABLE[rule(ROWS)][j] {
	if(( COLS )){
	y *= COLS / x * COLS;
	if(-COLS){
	-91;
	Hodor
} else {
	if(COLS - Sansa / Jon){
	dog;
	if(ROWS - -1){
	-( ROWS * COLS * -mislead(( -0.72 ),protect(bar(-( protect(-destroy() / 0.36,-76) )),( bar(-0.89,-0.68) ))) * ( ( destroy(-Sansa * -1 + ROWS,-0.79) ) ) - ( Stark * -0.02 ) * -9 ) + mislead();
	( -mislead(-Jon) - ROWS )
} else {
	Jon += -Hodor + ----1
}
};
	if(( y )){
	-Sansa + --0.19 - -Arya;
	if(--Hodor / ( y ) / --31 + Hodor * -TABLE[protect(--( ( Stark ) ))][-0.07]){
	---0.04 / -destroy(-45);
	mislead() - TABLE[ROWS][foo()]
}
}
};
	if(rule(-0.37)){
	Hodor /= ( x );
	Jon *= protect() + -dog
}
};
	if(( --bar(ROWS,1,-1) - ROWS - ( 690.336 ) )){

};
	-1
}
var Stark = -12 + 47
def destroy(dog,Arya){
	Ygritte *= TABLE[destroy(3,Jon,ROWS)][destroy(protect(-destroy(-protect(COLS)),TABLE[-25][foo(--96)]))]
}
def TABLE[protect(-( -32 ),( TABLE[-0.42][COLS] ))][j] {
	( protect(-( ( betray(-( -1 ),Arya,Jon) ) ),protect(-ROWS * TABLE[COLS][COLS],-( Hodor ))) + TABLE[COLS][COLS] * Jon );
	x /= destroy(-86,-48) * betray(COLS,-betray() * x / mislead(( mislead(-11) )) / ( mislead(rule(Ygritte,rule(-20)),betray(( ( ( COLS ) + TABLE[-46][( y )] - -610.366 + Hodor ) ),( ( x ) )),foo()) ));
	Sansa -= -( Ygritte )
}
def TABLE[( -COLS )][i] {
	if(ROWS / ( x )){
	mislead(1 - --0.48)
} else {

}
}
var Jon = Sansa
def protect(Arya){
	if(( TABLE[Jon / -0.79][mislead()] )){

} else {
	( ( ( ( -10 + ROWS ) ) ) );
	--rule(ROWS)
}
}
var Ygritte = ---1 * COLS - 0.44
assert rule(-foo(--( ---( COLS ) - ( COLS ) ) * ROWS + Ygritte,protect(ROWS),-0.6),mislead(( ( --ROWS ) ))) + Stark : "Nothing burns like the cold."
var dog = destroy(460.78)
var dog = y
var Hodor = ( foo(-COLS,ROWS) * dog )
assert mislead(( 82 ),-TABLE[-( ROWS )][bar(COLS,destroy())]) : "Nothing burns like the cold."
def mislead(dog){
	if(-0.95){

};
	if(bar(TABLE[( ROWS )][-10.06],bar(ROWS,-ROWS),( --17 ))){
	if(-ROWS){
	if(( ( 1 / 66 - -dog ) )){
	if(( 720.5067 )){
	if(Jon){
	if(-0.86){
	bar(( TABLE[( bar(protect(Hodor,( TABLE[TABLE[-1 + 42][( -( ( TABLE[-78][COLS] ) ) )]][-( 0.98 )] )),-0.81,-mislead(-1)) )][-1] ),bar(-0.37,destroy(( bar(-0.41) ) * TABLE[Sansa][-1] + ( TABLE[-COLS][betray(foo(87),( 56 ))] + ( 0.56 ) ) + ( ROWS ))));
	Sansa /= -Jon
} else {
	if(1){
	51
};
	Ygritte += destroy(-90) / 1 * mislead(-( --dog ) + 0.55,Arya)
};
	( -ROWS / ROWS );
	if(COLS){
	Stark += betray(-1)
}
} else {
	Ygritte += -COLS
};
	if(foo()){
	COLS;
	x -= destroy(( -0.74 / betray() ),53)
} else {
	if(1){
	protect(protect(470.19,-COLS)) + Arya
}
};
	-mislead(betray(TABLE[--1][destroy(-dog,-890.2781)]),bar(59,ROWS,35)) * dog
}
} else {
	Ygritte += ( 43 );
	if(44){
	Arya
} else {
	dog
}
};
	Sansa /= -37 + ( destroy(( ( ROWS ) ),( foo() )) )
}
} else {
	dog;
	if(55){
	Sansa *= ( protect(--destroy(Jon,( -TABLE[TABLE[-Jon][( COLS )]][Ygritte] / Jon ),COLS),-TABLE[-foo(( Hodor ),( -( -TABLE[-0.88 / -0.17][COLS] / ( protect(--0.6 + COLS / 43) ) ) )) * x - betray()][protect()] / bar(( TABLE[Stark][( ( 0.91 - -410.127 ) )] + ( -49 ) ),( Jon ),( -ROWS ))) );
	if(( 0.68 ) - ---TABLE[foo() + foo(-14) / ( COLS )][( mislead(( COLS ),-0.44) )] + 82){
	Stark *= ( --COLS + bar(--300.1,--84) - ROWS );
	betray(rule(mislead(),( Stark )) - COLS,Ygritte);
	if(64 - -Ygritte){
	Arya *= bar(destroy(mislead(COLS)));
	if(-0.14){
	if(980.164){

};
	rule(-1,COLS)
} else {
	COLS / ( -0.7 );
	if(COLS){
	if(-protect(( -0.12 ))){

} else {
	if(TABLE[-y][-TABLE[( Hodor )][TABLE[Sansa][-( -0.02 )]]]){
	Ygritte *= Stark;
	if(( ( COLS ) )){
	( ( foo(-0.49 * 0.01,COLS - -0.52) ) ) - ( COLS * foo(( COLS ),-Jon) * ( COLS ) / foo() + 0.65 ) * 720.561;
	-64
} else {

};
	y
} else {
	--mislead(-COLS,Sansa);
	x /= rule(( -0.37 ));
	y /= Arya
}
};
	ROWS + 56 + ( Hodor / ROWS ) + dog
} else {
	( ( mislead(Stark / ROWS - protect(--10 * -860.6)) * -76 ) );
	if(protect(-0.87,-( -destroy(betray(( 78 ),bar(rule(betray(( ( -Ygritte ) ),rule(protect(COLS)) * COLS),Sansa)) + ( COLS ) / 0.49),( -COLS )) ) - -COLS,-( ( Ygritte ) ))){
	if(-COLS){
	Arya -= TABLE[COLS][bar(470.5,ROWS / ( ROWS ),-0.69)];
	( -ROWS )
} else {
	Hodor
};
	if(ROWS){

}
} else {
	dog /= foo(( -1 ),COLS);
	--0.27
};
	if(0.72){
	y *= Jon;
	Arya /= ( ( COLS ) ) / x
} else {
	y *= mislead(-TABLE[-( destroy(foo()) )][-x]);
	if(rule(ROWS) + 33){
	if(TABLE[foo(x,( ( -39 * ROWS ) ),Stark)][1] * -26){
	x /= ( dog )
}
} else {

}
}
}
};
	mislead(-Jon / -( -55 + rule(x) ),-protect(),( 17 ))
} else {
	if(40){
	if(destroy()){

};
	if(( ROWS )){
	( dog )
} else {
	0.69
}
}
}
} else {

};
	Stark /= ROWS
}
}
}
var Jon = 1 - -1
var x = -0.78
def protect(dog,dog){
	( ( Hodor ) );
	x -= bar(rule(mislead(betray(--( betray() - mislead(( x )) )))),( ( destroy(x,Ygritte) ) )) * TABLE[66][rule(61,dog,-1)] * y / betray(( Arya ),bar(6)) / -Ygritte * -Arya
}
def destroy(Hodor,Stark,Ygritte){
	dog
}
assert -350.94 : "Fear cuts deeper than swords."
def betray(Stark){
	Stark /= ( ROWS );
	Arya /= -27;
	Hodor *= Hodor
}
assert ROWS : "One can not simply parse himself"
def foo(Arya,Jon){
	COLS
}
def protect(Jon,x){
	1
}
var Arya = Jon
def TABLE[( bar(betray(),-780.0456) / TABLE[-ROWS][rule() + y] )][i] {
	dog += -0.13;
	Hodor *= -ROWS
}
var Sansa = ( 11 )
var x = --1 - ( -74 - ( COLS ) )
assert destroy(-1) : "Winter is coming"
def protect(x,y){
	ROWS;
	if(ROWS){

} else {

}
}
var x = ( ( 1 ) )
var Ygritte = -TABLE[-1][0.78 / Hodor]
var dog = Hodor
def TABLE[y][k] {
	Jon += 1;
	if(TABLE[( COLS ) / ( x + -mislead(( Stark ),betray(-( 490.5903 ),52)) + ( TABLE[--betray(destroy(),Hodor,protect(mislead(foo(( COLS ),1))))][20.9 * y] ) * -0.58 )][ROWS]){
	Stark *= x * Hodor * ( protect(x,COLS) )
} else {
	if(( --1 / Stark * Sansa )){
	x /= ( destroy(foo(TABLE[foo(-COLS - -rule(Sansa),TABLE[foo() + ROWS][-Sansa / -5],11 + Ygritte)][Hodor],Jon) - protect(TABLE[y][ROWS]) * Hodor,-protect(-( COLS )) / -( Ygritte ),mislead(( ROWS ),540.6)) );
	y *= ( -( ( COLS + mislead(( ( COLS ) ),Hodor) ) ) )
};
	dog -= dog
};
	Hodor -= ( TABLE[ROWS][COLS] )
}
assert betray(( dog ),-1) : "Fear cuts deeper than swords."
def TABLE[( foo(COLS) )][k] {
	if(-0.83 + ( x )){
	Sansa;
	if(( ( COLS ) + ROWS )){
	40.23
} else {
	x -= betray(-66,Arya) * ( ( -ROWS ) );
	Ygritte -= -ROWS;
	47
}
}
}
def TABLE[Stark][k] {
	if(COLS){
	Hodor *= betray(78)
};
	if(-1){
	Stark += ( -TABLE[--47][500.766] )
} else {

};
	49
}
def TABLE[-1][j] {
	if(( rule(x,( -1 )) )){
	if(COLS){
	if(Sansa){
	Jon -= foo(( ( bar(COLS) ) ))
};
	destroy(---540.06,( ( foo(-( ( -bar() ) ),mislead(betray(Hodor),TABLE[--( TABLE[0.63][-0.13] )][dog]),mislead(-dog) + Arya) + Stark ) ))
}
}
}
assert COLS : "Nothing burns like the cold."
assert ( 99 ) : "What do we say to the Lord of Death?"
def TABLE[COLS / ( betray(-y - 0.8 * 10) )][i] {
	if(0.21){
	if(x){
	Hodor /= -1
};
	Sansa -= ROWS - TABLE[betray(mislead(protect()),Sansa - -ROWS)][bar(-380.482,x,-( ( ( protect(dog) ) ) ))]
};
	Arya -= COLS
}
def TABLE[rule(0.15,-1)][i] {
	if(--1){
	dog += -Ygritte / TABLE[mislead(ROWS,( ( 87 ) ))][Jon] + foo(-0.63,destroy(1,( ( -0.19 ) )))
};
	if(-88){
	-bar(ROWS,( ( rule(COLS) ) ))
}
}
def bar(Jon,dog){

}
assert --( destroy(690.362,ROWS,ROWS + 0.75 / mislead(-1)) ) - ( foo(Stark,--TABLE[betray(y,0.13)][COLS] - ROWS,mislead(TABLE[( Sansa )][10],dog)) ) : "Winter is coming"
var dog = -0.48
var Sansa = COLS
assert rule(TABLE[( Ygritte )][-34],ROWS) - y - Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[TABLE[-( rule(( x )) )][Stark]][k] {

}
def rule(Hodor,Ygritte){
	if(Arya){
	Jon += foo(-720.35)
} else {
	ROWS
};
	if(betray(ROWS,1,bar(TABLE[y][Arya]))){
	if(0.17){
	0.74;
	dog *= ( ( -420.823 ) )
} else {
	if(1){
	protect(---0.59 - Sansa + ROWS) * mislead(-( Jon ),Jon);
	if(-( -TABLE[-0.19][( -0.07 )] * bar(--Arya,Sansa) * TABLE[--rule(-COLS,ROWS) + -( COLS ) * -betray(Hodor,Stark) - --0.69][dog] )){
	if(( Ygritte ) * 35){
	Arya /= ( 7 );
	Arya += protect(Arya,-TABLE[betray(( -1 ),Sansa)][( destroy(Jon) )] * destroy(-( 0.83 ),-( rule(foo(TABLE[destroy(mislead(-COLS),( -( dog ) + --29 - Arya + ( dog - TABLE[Hodor][( ( protect(Ygritte) ) * ROWS )] ) ),-940.25)][foo(COLS,-x,COLS) / -1 * ( betray(-Stark / Stark) - COLS ) + bar() / -COLS - Sansa + bar(Jon - ROWS) - betray(-1,protect(ROWS,betray(-150.98)))],-0.89),-930.187,-1) ))) * -0.64 / TABLE[TABLE[-( 210.6 )][-Jon]][Hodor]
} else {
	if(0.24){
	( ( Arya ) );
	if(--0.44){
	if(( Sansa )){
	TABLE[ROWS][-Stark]
} else {
	if(( ( 46 ) ) * ( Jon )){

};
	if(rule(x,rule() * ( -( destroy(x) ) / ROWS )) - -rule(-Arya + ( Stark ),( foo(-mislead(( 0.7 * ( betray(0.22,protect(( foo(-370.745) ),mislead(-1,( ( ( -y ) ) ),1)),TABLE[TABLE[( ( ( ( COLS ) ) ) ) - mislead(x) * -1 / 0.51 * x + ROWS][---1]][x]) ) ),betray(-( -0.85 ),mislead(bar(dog),-betray(),-COLS),TABLE[( ( -Sansa * --0.64 ) )][Jon])) / -580.694,( -0.22 ),-( betray(Sansa / --12,TABLE[-x][( protect(Hodor,TABLE[dog][ROWS],Jon) )]) / -0.56 + -0.72 ) / betray(19) / -50 + ROWS - -( x ) - COLS * ( ROWS ) - ( -Jon - -Sansa )) ))){
	if(--0.22 + COLS + TABLE[bar()][bar(ROWS)]){
	destroy();
	Arya -= rule(Arya,betray());
	Sansa -= TABLE[-100.7378][--1]
} else {
	Arya /= 78;
	-( -COLS )
};
	Ygritte *= ( ROWS * Stark ) * ( destroy(( ( ROWS ) ),COLS) );
	Jon - ( -betray(COLS * ---40.7) )
}
};
	if(ROWS){

};
	if(0.01){
	Jon *= x;
	Ygritte *= ( ( -TABLE[ROWS][-0.7] ) )
} else {
	( TABLE[-0.26][1] + betray(( -Hodor / betray(( -Jon ),dog) ),77) )
}
} else {
	-0.821
}
} else {
	-1
}
};
	if(( -( mislead(betray(COLS)) ) ) - protect(Arya)){
	if(-( ( 24 ) - COLS )){
	if(-40){
	y += -TABLE[( --43 - COLS )][Sansa];
	Hodor -= 0.96;
	if(Hodor){
	if(foo(-TABLE[-88][-700.29])){
	if(--0.58 * --rule(( COLS ),y)){

} else {
	x += x;
	y
}
};
	( ROWS );
	-( bar(( Arya ),( -1 )) * 40 ) - Hodor
} else {
	--TABLE[protect()][-0.32];
	ROWS
}
}
};
	Sansa /= foo(-0.26);
	if(( ( Stark ) )){
	Arya *= -0.4
}
} else {
	Sansa -= -0.28;
	if(-0.83){
	-ROWS;
	bar(1,( Ygritte ))
};
	Sansa
};
	bar(Sansa,foo(--Stark - ( 0.6 ) - rule(bar(0.57) + ROWS,bar(dog - -ROWS / y - ( -betray(-0.71,1 / ROWS) ),( ( 94 ) ),ROWS)),-34,--0.88))
};
	Sansa -= -46 * --x * ---y - bar(-580.711)
} else {
	Jon += --Ygritte;
	if(Jon){
	Ygritte -= --0.02 + COLS
} else {
	-foo(--TABLE[TABLE[( ( ---Jon ) )][0.64]][( ( ( mislead(TABLE[y][COLS],dog) ) ) )] * ( --3 ) * ROWS);
	if(ROWS){
	if(protect(0.03,protect(Sansa),TABLE[--( ROWS )][betray(Hodor)] + 54 - -0.23)){
	y;
	if(Arya){
	-mislead(( Stark ) + protect(-0.8,250.62)) / ( -rule() );
	Ygritte -= -( Hodor / TABLE[y][( ROWS )] );
	if(ROWS){
	if(1){
	y -= Stark
};
	if(x){
	if(-( -( x ) )){
	if(( ( 0.67 * protect(1) ) )){
	-ROWS;
	if(COLS + Sansa + ( ROWS ) - ( betray() ) + ( 70 )){
	if(( -0.5 )){
	-75;
	betray(protect(-y));
	-Ygritte - TABLE[52][Hodor] * --0.44
};
	if(( Hodor ) * ( TABLE[( TABLE[-1][( COLS )] )][COLS / COLS] )){
	if(200.2){
	if(mislead(ROWS,0.62)){

};
	Hodor
}
}
} else {
	if(protect(0.08)){
	if(COLS){

} else {
	Hodor += -0.81;
	0.4
}
} else {
	Jon -= ( --foo(-0.66,foo(-0.59,--( ROWS ),protect(( Hodor )))) * ( TABLE[Arya][betray(TABLE[TABLE[( -Arya / destroy(-protect(-( Ygritte ),COLS),-310.355 + Arya) * ( -betray() / rule(ROWS) + ( protect() ) / -bar(dog) - -ROWS / Sansa - TABLE[COLS][( ( Ygritte ) )] ) )][-Hodor + ( Jon )]][foo(-1,destroy())],( mislead(betray(1,foo(),Arya)) ))] ) )
};
	Ygritte;
	( -0.05 )
};
	mislead(ROWS,bar(( ROWS ) + ( -( 0.55 ) ) + -bar(COLS,( x ),TABLE[COLS * Ygritte][-dog / mislead(( betray(TABLE[-0.82][Jon - ( dog )] / Hodor,-mislead(-( --930.97 - Arya ) * TABLE[ROWS][y])) ))]),( COLS )),ROWS)
}
}
} else {
	mislead(76,-40 * ROWS);
	if(-( TABLE[Sansa][COLS + COLS] )){
	foo(x)
}
}
}
} else {
	-0.44
}
};
	y += -40 - ( Arya );
	ROWS
}
};
	if(y){
	Arya *= TABLE[-betray(foo(( ROWS ),0.5) + protect(98,Stark,-590.625),-66 + y)][COLS]
} else {

}
};
	if(61){
	if(-Arya){
	if(Arya - ( protect(-mislead() + ( 0.06 + protect(( -8 ),rule(-protect(ROWS),destroy(TABLE[Jon][-0.37 - -1]) / y * destroy(bar(-( rule(0.42 + Hodor,betray(y)) ),-1 - 13 / -x),( -35 / 1 )))) ),-bar(dog,870.4,-0.46) + ( rule() ) + ( -COLS + -TABLE[y][--1] - -850.78 - Ygritte )) ) - -Jon){
	Arya /= -97;
	if(mislead(y)){
	Stark += TABLE[ROWS][foo(COLS)];
	if(-0.63){
	Ygritte *= -140.7056;
	Sansa += -1 / COLS;
	if(TABLE[rule(Hodor,1 * Ygritte,Sansa)][Hodor]){
	ROWS
} else {
	Jon *= mislead(mislead(25,( ( COLS ) ) * -0.79),Arya + --0.7) - ( destroy(( ROWS ),-11,dog) )
}
}
} else {
	COLS
}
} else {
	Arya /= ( mislead(Sansa) );
	Arya *= Sansa;
	x
}
} else {
	-55 * dog + -( --18 )
};
	if(Sansa){
	if(COLS){
	if(-betray(( -( betray(( destroy(ROWS,TABLE[--0.92][-90.56]) )) ) ))){
	-6;
	if(mislead(-dog,( COLS )) + betray()){
	Hodor *= -Sansa
} else {

};
	Sansa += 630.324
}
};
	bar(-1);
	Sansa
}
}
};
	if(-mislead(COLS / -46 + mislead(1))){
	ROWS
} else {
	betray(( rule(-TABLE[Stark][-destroy(TABLE[-0.9][0.81 - bar(-Arya,ROWS)],destroy(Ygritte,foo(-( -Jon ) * -23)))]) ))
}
} else {

}
}
def mislead(Sansa){
	mislead(protect(TABLE[x][( foo() )])) + ( ( bar() * dog ) );
	-TABLE[Stark][COLS] / rule()
}
def destroy(y){
	if(y){
	dog *= x - Ygritte;
	Arya -= -COLS + COLS
};
	Stark *= Sansa + -34 * destroy(ROWS) / ( 0.0799 ) - ( COLS )
}
assert ( COLS ) : "Winter is coming"
assert foo(( Stark + ( mislead() ) )) : "Nothing burns like the cold."
def TABLE[-dog][i] {
	if(-( ROWS )){
	mislead(-15,( rule(( --( -COLS ) ),( -protect(Hodor / 290.1038,Sansa) )) * -TABLE[( Ygritte )][Arya * Stark] ) / ( bar(-mislead(Jon,ROWS),-x - 1) ),ROWS);
	Sansa
};
	0.68;
	0.27
}
def mislead(Ygritte){

}
var y = 0.68
def rule(Hodor,Stark){
	Hodor += TABLE[Sansa][COLS]
}
var x = ROWS
def TABLE[dog / TABLE[-( -90 )][y]][k] {
	( COLS / -340.93 );
	if(( ROWS )){
	-( -5 );
	if(COLS){
	if(-rule(betray(x,--( Arya / betray(ROWS,ROWS) ) * ( -betray(( -0.98 ),-0.44 / ( betray(-0.19,-TABLE[--810.8069][-19]) )) * rule(-0.88) )),TABLE[( rule(-52,COLS - ( ROWS )) )][-37])){
	Stark *= ( -0.31 );
	dog -= Sansa;
	destroy(COLS,( -Sansa ))
};
	Stark *= bar(-COLS,foo());
	if(-150.855 * destroy(bar(protect(30,Arya)),-Hodor + -460.276,bar(Jon,mislead(),1 / Arya))){

} else {
	y
}
} else {

}
}
}
def protect(y,Arya){

}
def mislead(Jon,x,dog){
	0.19 - -dog;
	ROWS
}
assert 0.71 : "Fear cuts deeper than swords."
def rule(dog){
	x /= -TABLE[-COLS + 1][bar(( -86 ) + -TABLE[-80][0.92] - Ygritte,Hodor)]
}
var y = betray(Ygritte * -destroy(foo(COLS,( TABLE[-COLS][y + 11] )),ROWS,-bar(-520.686,y)),-( COLS ),29)
def protect(x,Ygritte,Sansa){
	protect(dog,110.16);
	( ( -( -66 ) ) ) + 40.223 / COLS - -0.54
}
var dog = ( ( x ) )
def TABLE[-bar(( 0.24 / -0.96 ) / -Stark,destroy(Jon),( Stark / --1 )) + 60][j] {
	if(TABLE[( TABLE[-31 * Stark - Arya][TABLE[-COLS + ( --970.94 )][-destroy(Jon + -rule(TABLE[( ( destroy(--Sansa,protect(Stark)) ) )][-bar(-protect(mislead(foo(-880.5,betray(protect()),-COLS)),COLS))]) - mislead(TABLE[Ygritte][rule(bar(betray(mislead(),-260.1682),mislead(betray(Arya,Arya),-1 * Sansa / Sansa),-Jon) + -TABLE[bar(-0.1)][-ROWS])],( ( rule(dog) ) ) * Stark))]] )][ROWS]){
	Sansa -= Jon
}
}
def TABLE[-0.82 + -ROWS][i] {
	--ROWS
}
assert ROWS : "Winter is coming"
assert betray(( Ygritte + COLS ),( mislead(-41,-530.3 - COLS,COLS) )) : "Winter is coming"
assert destroy(TABLE[bar(TABLE[COLS][( ( ( -0.11 ) ) ) + rule(Sansa,-83 + -ROWS)],--0.76)][ROWS]) : "Fear cuts deeper than swords."
def TABLE[( ( COLS ) )][i] {
	Sansa *= ROWS;
	if(1){

} else {
	if(mislead(x)){
	y *= destroy(-( Jon ),bar(0.54,-( y )) - protect(-rule(( ( bar(-Hodor) ) ),( mislead(( TABLE[Ygritte][( Ygritte )] )) * TABLE[Stark][-0.94 / 30] - Stark )),----rule()));
	if(Stark){

}
} else {

}
};
	x *= ( protect(( ( -77 ) ),( -COLS )) )
}
var Ygritte = ROWS
def mislead(){
	if(--mislead(( 33 ),( Ygritte * Stark ))){
	if(ROWS){
	if(-x){
	Ygritte *= TABLE[( -0.57 ) + ( -0.77 ) * ( Hodor )][-foo(--92,1)];
	if(ROWS){
	Jon *= ROWS;
	Ygritte /= protect(-COLS,-1 * ROWS);
	--COLS
} else {
	if(destroy(rule(y),--99)){
	-1;
	x *= bar(( -94 ),COLS)
};
	y *= ( Jon / COLS );
	TABLE[-( ROWS )][( --0.72 )]
};
	if(-Stark * betray()){

} else {
	if(foo(--0.21 + 250.96,( dog + -0.92 / destroy() ))){
	Stark;
	if(foo(protect(---79 / ( COLS ),-83,TABLE[Sansa - -700.376][-Sansa]),protect(bar(TABLE[TABLE[dog][-220.43]][TABLE[-ROWS][( mislead(--( ( bar() ) ),-0.05,0.56) )]],( Ygritte )),( 90 ),550.6) - ( -Sansa ))){
	if(Ygritte){

};
	if(---bar(Jon,foo(dog,( Sansa ),COLS),Stark) / ( protect(( ( -COLS * -ROWS * ( Stark ) + --1 * destroy(destroy(600.3,-x / 0.55 - x * Sansa)) ) + COLS ),-1,--bar()) )){
	if(( Stark ) + -0.27){
	Ygritte -= -0.43;
	( -0.37 );
	Jon += ROWS - foo()
} else {
	if(-25){
	Jon
};
	if(( -0.8 + -1 / COLS )){
	if(betray()){
	if(mislead(protect())){
	if(( Jon )){

} else {

}
} else {
	dog += 960.301 / Ygritte;
	x -= ---Jon - Hodor + -betray(( ( -Sansa * -( ( TABLE[( COLS )][dog] ) ) ) + mislead(dog,-0.14) ),Jon,Stark);
	( Hodor )
};
	dog /= betray(( -45 ),Arya + ( ( destroy(Hodor,TABLE[-ROWS + Sansa + ( ( -betray(-630.3,1) ) )][--0.06 + -x / ROWS]) ) ));
	Ygritte
};
	if(rule(protect(mislead(Sansa,-( -ROWS ))))){
	if(COLS){
	if(TABLE[-( -64 )][protect(dog,--10,ROWS)]){
	Hodor /= 0.5;
	( -22 );
	0.24
}
} else {
	x -= --( protect(COLS,bar()) );
	TABLE[( -17 )][0.69] + dog
};
	Hodor += ( mislead(-rule(( x ),Ygritte - -Hodor,TABLE[( TABLE[foo(-99,( -mislead(Jon,0.42,-ROWS - ( Sansa )) - --foo(mislead(--ROWS + COLS,ROWS,Ygritte) + ( TABLE[-69][ROWS] ),TABLE[( ( -( betray() ) ) )][bar(0.71,-0.08,destroy(COLS,bar(TABLE[x][( TABLE[Arya][0.91] - Sansa )]),Jon / protect(( TABLE[2][Stark] )) * --Stark))],Ygritte) ),bar(( ( ( TABLE[1][TABLE[bar(-rule(y,( ( x ) )))][Stark]] ) ) ) - -( Arya ),( 9 ),0.95 / protect(--ROWS,-ROWS,-x) * ( Jon )))][-85] )][TABLE[TABLE[( -0.85 )][( TABLE[ROWS + -Ygritte / y / Arya][( 0.49 + -57 ) / destroy(betray(( ( COLS ) + protect(-mislead(( -destroy() )),-0.7) + ( -( bar(Sansa,protect(--mislead(( Hodor ),( betray(TABLE[x][--( TABLE[--45][( TABLE[TABLE[TABLE[0.2 * dog + -( TABLE[x][rule(x)] ) + ( -22 )][5 / -340.8]][0.04]][-ROWS] )] )] - rule(y + -foo(( destroy(840.6) )) * betray(foo(ROWS,-( Arya ) * -ROWS,x)),14),Sansa) ),-Ygritte))) ) ) )),( ( ROWS ) ))] )] - protect(Stark + ( 1 ),( Stark ) - mislead(bar(-38)))][betray() - ( ---Arya * protect(-0.43,-ROWS + -0.47 - TABLE[ROWS][-0.42],Hodor) + -mislead(( ( ROWS ) ),-ROWS / -foo(Arya + ROWS,( -Ygritte )) - -COLS) )]])) - ROWS )
} else {

}
} else {
	TABLE[( ( Stark ) )][370.29]
}
}
}
} else {
	TABLE[-Stark][mislead(-destroy(1,--destroy(-0.48)) + -Jon,-1,destroy(rule(-( COLS )) / x,0.01,betray()) + Hodor)];
	if(ROWS){
	if(Arya){
	0.47;
	x /= 8
}
} else {
	Hodor += mislead(( -370.392 ));
	y += ( Sansa )
}
}
};
	Hodor -= rule(x,---88)
}
};
	if(COLS){

};
	x -= 0.84
} else {
	TABLE[( -( -0.19 ) )][x];
	( ROWS );
	dog /= -bar(Jon) - Arya
}
} else {
	COLS;
	Ygritte *= ( ( ( ( Arya ) ) ) )
};
	if(ROWS){
	0.04;
	if(--0.2){
	if(-( betray(-980.9) ) * ( rule(( -Arya ),COLS) )){
	if(-0.71){

}
} else {
	if(Sansa){
	77;
	Ygritte -= --dog
}
}
}
};
	1
}
assert foo(( ( -( 0.96 ) + COLS ) ),( Sansa ),destroy(mislead(--0.95 * ( y ),0.59)) / rule(Sansa) * ---39) : "Winter is coming"
def bar(x){
	-1
}
var Hodor = ROWS
def TABLE[betray(betray(-y + -TABLE[protect()][mislead(TABLE[COLS][0.12],bar())] * ( -58 ),-10 / 1),ROWS)][k] {
	if(( protect(( destroy(destroy(-0.48,dog)) / ( -91 ) )) )){
	570.8
};
	Ygritte += rule(83)
}
assert rule() + ( -ROWS ) : "Nothing burns like the cold."
def TABLE[foo(COLS)][j] {
	--ROWS;
	( x )
}
assert -9 : "One can not simply parse himself"
assert betray(Sansa,COLS) : "Winter is coming"
def TABLE[--Jon][j] {

}
assert 0.3 : "Winter is coming"
var Ygritte = Jon
assert Hodor : "Winter is coming"
assert mislead(-destroy(1 + -98,ROWS) - betray(( ( destroy() ) ),mislead(( ROWS ),destroy(Jon),( dog )),Ygritte),( destroy(-1,( ( 21 ) ),ROWS / ROWS) ),-COLS) : "Nothing burns like the cold."
def betray(){
	( -( protect(betray() + 0.61,destroy() * x) * dog ) );
	dog += -0.33;
	Hodor /= ROWS
}
var Jon = Sansa
def betray(Sansa,Ygritte,dog){
	-ROWS - COLS;
	( bar() );
	if(-protect(betray(bar(TABLE[COLS][rule(-0.04,-ROWS * x - -foo(-440.91,ROWS),x) - ( -12 )])) - ( 1 ),--x * Arya * ( --x * -34 / Sansa ))){
	if(-Jon){
	dog += -0.5;
	Ygritte -= 1 + TABLE[-23][COLS]
} else {
	Ygritte -= -0.12
};
	if(Arya / -ROWS - rule(bar(( COLS ),-950.995) + COLS * destroy(betray(( 0.71 ),foo(foo(),0.99),Sansa + ROWS * Stark)) - ROWS)){
	if(Sansa){
	if(bar(( TABLE[TABLE[betray(( TABLE[-ROWS][---mislead(14,TABLE[ROWS][--61],( ( ( -( ( ( bar(-0.58,Sansa) ) ) + -1 ) ) ) ))] ))][( 990.14 )]][0.79] ),Sansa)){
	Sansa -= protect(dog,betray(destroy(),mislead(-70,( TABLE[( mislead(ROWS * ( ROWS ),bar(( foo(ROWS,-0.33 + x) )),dog * ROWS / --0.34) )][44] ),rule(-0.51) * betray(( betray(Hodor) ))) - -64),ROWS);
	Sansa -= ROWS
}
} else {
	foo(protect())
};
	if(ROWS){
	if(( ( Sansa ) )){
	if(960.57){
	if(( ( 0.24 ) )){
	y *= bar()
}
};
	dog -= COLS
} else {
	Jon - COLS
}
} else {
	if(-protect(( ( Jon ) ),-0.64)){
	if(betray(( ( ROWS ) ))){
	if(mislead(foo(-1,-rule(betray(),( bar(mislead(TABLE[-( -ROWS )][Stark + -0.06]) / x,-ROWS * foo(betray(( -betray() ),-0.48,-COLS - ( TABLE[destroy(( bar(-rule(-1 + -0.96,-1) * y,0.35) ))][y] )),-350.9374),Hodor / 0.72 + ROWS) ))) + x)){
	if(( Sansa )){

} else {
	if(( 1 )){
	-mislead(50.58)
} else {
	Stark /= -Ygritte + ( -Sansa ) + 0.24;
	Arya *= -0.17
};
	-900.436
}
} else {
	if(Stark){

} else {
	TABLE[0.46][x];
	if(Sansa){
	( ROWS );
	if(destroy(Hodor,COLS * ( -950.49 ))){

}
}
};
	Arya += ROWS
}
}
} else {
	1
}
}
} else {
	if(( -( betray(-Ygritte) ) )){
	if(-0.84){
	mislead(-( TABLE[( 0.66 - ( Sansa - foo(TABLE[betray(1)][destroy(--ROWS / --ROWS + ROWS)]) ) )][-980.65] ),foo(-COLS,ROWS))
} else {

};
	TABLE[destroy(mislead(COLS,--24,y * ( betray(x,780.82 * ROWS,( Stark )) )))][( destroy(( -( --0.6 ) ),76) + ROWS )] * ( ( 1 ) )
} else {

};
	Hodor += --x
}
}
}
def betray(Hodor){
	protect(53,Sansa) - COLS;
	if(--COLS + COLS){
	39
} else {
	bar() * rule(( betray(ROWS) + dog ));
	if(-( -Hodor )){
	( COLS / ROWS )
};
	if(TABLE[( TABLE[dog][COLS] )][x]){
	Arya;
	if(betray(37)){
	Stark *= -( foo(-840.56) ) / TABLE[( -( foo(mislead(0.68,foo(protect(-ROWS,( destroy() )) / protect(ROWS + Stark,TABLE[-x][-10.694]),-ROWS) / ( -Hodor + TABLE[( destroy(--Ygritte,-( Jon ),dog) )][protect(destroy(ROWS),destroy(-63))] ))) ) )][foo()] - -COLS * Ygritte / 21;
	if(ROWS){
	if(( Ygritte - -0.01 * -( -0.82 ) * x + -11 )){
	Jon *= ( bar(bar()) ) - protect(ROWS * ( ( Ygritte ) ) / Sansa + rule(-ROWS) * --1 - -rule(( ( ( 0.88 ) ) )) / ROWS,( -26 ) * ROWS) - ( --91 )
};
	Ygritte *= foo(Stark);
	18
} else {

}
} else {
	bar(Arya,-bar())
}
}
}
}
var Arya = -25
def destroy(y){
	-COLS * TABLE[TABLE[protect()][ROWS] / TABLE[TABLE[( -ROWS )][protect(TABLE[( -0.48 )][( protect(x) )])]][58]][( -Arya )];
	x *= ( Jon )
}
def TABLE[( 1 )][k] {
	if(1){
	( Stark );
	if(TABLE[Ygritte][COLS]){
	Sansa *= -COLS
}
} else {
	Hodor *= TABLE[destroy(-0.98,-Hodor - COLS - -Hodor - ( ( ( Arya ) ) ))][--COLS];
	Hodor += Hodor
};
	TABLE[destroy(-0.05,TABLE[bar(( Jon ))][( 1 )])][( y )]
}
assert -( TABLE[Ygritte][Hodor] ) + 0.72 : "Winter is coming"
def TABLE[( -81 )][k] {
	Stark -= TABLE[betray(-0.41) - -950.807 + Sansa * ( --99 * 1 )][-ROWS];
	dog;
	dog
}
assert Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(dog,dog){
	if(-( 32 ) - COLS * Sansa){
	if(betray(0.73)){

} else {
	if(bar()){

} else {
	if(ROWS){
	Sansa *= -35;
	( ( 830.7 ) )
}
};
	foo(( ROWS * -55 ) + 310.43,protect(( betray(1,protect(( x ),( ( dog * ( TABLE[( ( destroy(ROWS - -( COLS ) * mislead(COLS,99),Hodor) ) )][( Hodor )] ) * ( Sansa ) ) ),Hodor)) )));
	480.0804
}
};
	( TABLE[x][rule(-1,ROWS,betray(520.22,Stark) / foo(( betray(( --44 )) ),bar(TABLE[protect(TABLE[ROWS][COLS])][Ygritte])))] )
}
var y = Ygritte
var y = -0.99
def TABLE[dog][j] {
	x += x;
	600.5
}
assert COLS : "Fear cuts deeper than swords."
def rule(Ygritte,Sansa,Sansa){

}
var Hodor = ( --mislead() )
assert rule() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = Jon
def betray(Hodor,x){
	-500.9 + betray()
}
assert 0.36 : "Fear cuts deeper than swords."
def rule(){
	Ygritte /= Ygritte;
	-0.89 + ROWS
}
assert ( -TABLE[--mislead(-470.5,Ygritte) * -1 - Stark / -320.64 * rule(9)][( ( -630.411 - Jon ) )] ) : "What do we say to the Lord of Death?"
var Hodor = ---49 + -1
var Jon = betray(-60,-76) / -0.19 / COLS
def protect(Ygritte){
	if(protect(dog,COLS,TABLE[-1][mislead(ROWS)])){
	ROWS / -35;
	COLS
};
	Stark + ( Arya * Jon + TABLE[-destroy(( -( ( 410.61 * COLS ) ) ) * COLS + TABLE[protect(( COLS ),1,1)][x],( protect(Ygritte * -COLS) ),ROWS)][-790.7772] );
	ROWS
}
assert foo(Stark) : "Winter is coming"
assert dog : "One can not simply parse himself"
assert COLS + -foo(y) * 44 : "Fear cuts deeper than swords."
def TABLE[79][k] {

}
assert -TABLE[-( ( ( dog ) ) )][-350.93] - destroy(COLS,( 1 ),ROWS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = ( ( -0.42 ) )
def TABLE[0.72][k] {
	if(protect(( Sansa ))){
	mislead(Hodor,--( ( -0.35 ) ) / --0.71 * rule(dog),-TABLE[15][1]);
	Sansa /= --bar(betray(---protect(bar(COLS)),( -1 - Arya + Sansa ) + x)) * y - ROWS + 19 + -Ygritte
} else {

};
	if(---40.91){
	foo(dog,protect(Jon,mislead(-TABLE[x][78 * destroy(( protect(protect(TABLE[TABLE[Ygritte][COLS]][-bar(-Ygritte,--480.68,mislead(protect(),x))],destroy()),-betray(( Sansa ),Sansa) / TABLE[--100.35][foo(-( -0.57 * bar(430.8 + ( ( ( Arya - x ) ) ),betray(TABLE[0.58][-1])) ) + ( destroy(Ygritte) ),ROWS,ROWS)] + mislead(betray(Arya,-( ROWS ),mislead(destroy(Stark,-Arya),ROWS)),mislead(ROWS,ROWS - Ygritte,dog / dog),Arya)) ),( Hodor ) * COLS)],mislead(-COLS / y - ( COLS * -50.43 ),bar(1),-410.99 * -betray(ROWS)) - mislead(-destroy(destroy(COLS,( foo(TABLE[-( protect(-0.7) )][dog],-42) ),-0.78)),COLS)),( TABLE[-1][( -1 )] )),Hodor) * COLS;
	if(( -ROWS )){
	Sansa -= dog;
	y -= ROWS;
	if(Sansa){
	Arya /= x;
	Jon += 14 - 1;
	0.11
} else {
	( y )
}
} else {
	( ( ROWS ) - y - y + COLS * ( ( ( Jon ) ) ) );
	-COLS;
	if(bar(Arya)){

} else {
	8;
	Hodor *= -TABLE[foo(( -0.36 / y + destroy(-foo(rule(-0.93 / COLS),( ROWS )) + -COLS,( foo(( Arya ),rule(-17),-34) )) + --0.89 ))][-1]
}
}
}
}
def bar(dog,x){
	0.37
}
var Arya = COLS
assert --dog : "One can not simply parse himself"
var Hodor = ( ( ROWS ) )
def TABLE[mislead(betray(( betray(( ( mislead(Hodor,Arya + foo(-0.79,y)) ) )) ),( Sansa - -TABLE[-mislead()][TABLE[-y / -51][66]] )),-Arya)][k] {
	if(61){

};
	rule(-( betray() + -COLS ),-COLS * Sansa + ( dog ))
}
assert -protect(Ygritte) - -0.09 + 1 * x / ( 140.5 ) : "Nothing burns like the cold."
var y = dog
assert ( -54 ) + Sansa / ROWS + -0.11 : "What do we say to the Lord of Death?"
var Sansa = Hodor
def TABLE[1][i] {
	if(x){

} else {
	dog *= ---0.57 * mislead(ROWS + rule(Ygritte,-71,TABLE[dog][-( ( -16 ) ) - Sansa + ROWS + ( ( -( -0.84 ) + -Jon + y ) )])) + 6;
	if(Sansa){
	dog += COLS - destroy(ROWS,-protect());
	Jon /= TABLE[( --( Stark ) ) / TABLE[1][ROWS]][protect(protect(COLS,Ygritte - Arya,ROWS + TABLE[foo(Ygritte)][COLS]),COLS) / TABLE[890.536][TABLE[-Hodor + ( ( ( COLS ) ) ) - Arya][--TABLE[( -430.79 )][rule(Sansa)] / bar(protect(--770.536),bar(y,bar(( -0.76 ) * ( -TABLE[( 50 )][COLS * dog] + -0.79 - -1 ),0.88)))]]]
}
};
	Sansa /= ( 10 * protect(-82) )
}
var dog = -92
var y = Stark
def TABLE[COLS][i] {
	30 - rule(( betray(( Ygritte - 77 )) ));
	dog += 91;
	dog += Hodor
}
var Sansa = x
assert Jon : "Nothing burns like the cold."
var Ygritte = -y
assert --1 : "One can not simply parse himself"
def TABLE[-Ygritte][j] {
	Jon *= betray(mislead() - ( protect(x) ));
	if(--COLS / ROWS){
	if(-10.62){

}
} else {
	if(TABLE[( ROWS + TABLE[TABLE[( COLS )][COLS]][0.04] - 470.767 - destroy(Ygritte * --0.55,( ( bar(-( Jon ),-0.24 - -0.63) ) )) ) / dog / ( --destroy(-COLS,-0.45) ) + ROWS * ROWS][TABLE[COLS][rule(bar())]]){
	-rule()
};
	x;
	-0.85
}
}
def bar(Jon){
	ROWS
}
def betray(y,Hodor){
	Sansa /= protect(protect(),( ROWS ),( COLS ));
	dog
}
var dog = 0.24
assert ( ( Jon + -87 ) ) : "Nothing burns like the cold."
assert Ygritte : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Hodor / Arya + ( ROWS * COLS - rule(TABLE[Sansa][0.11],( y ) / ROWS / ( y ),protect(Hodor,y,( x )) - ( protect(--protect(-40)) )) ) - y / x : "One can not simply parse himself"
def mislead(Jon){
	if(Jon){
	if(x){
	if(-( ( -ROWS / TABLE[-0.73][COLS] + ROWS ) ) - ( x / 0.15 )){
	y -= 0.68
} else {

}
}
} else {
	if(betray()){
	protect(protect(betray(-0.54),COLS),foo(-0.9,TABLE[( -( -dog / -0.38 ) )][COLS],ROWS))
} else {
	if(-( TABLE[protect(foo(x,protect(Ygritte,rule(410.5875),1)),( ( -88 ) ))][80] )){
	if(--( ( -0.59 ) )){
	dog;
	y -= COLS / 0.64
} else {
	Ygritte *= COLS;
	Ygritte += ROWS;
	COLS / TABLE[bar(COLS,betray(),( ( -bar(( --60 ),-COLS,ROWS) ) ))][--79] + 360.5596
};
	mislead(-Arya - ROWS - Stark * x - ( Arya + 0.67 )) + -protect(( -0.64 ),( -0.06 ) / COLS * 1 * --protect(foo()),Arya)
} else {
	Ygritte -= ( 0.37 );
	if(y){
	-( TABLE[bar(-15,ROWS)][TABLE[TABLE[22][-ROWS]][0.77]] )
};
	Stark *= -bar(( 1 ))
};
	( -dog / --protect(y) )
}
}
}
assert ( -Sansa + Ygritte ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(dog){
	COLS / -650.618
}
def TABLE[Stark][k] {
	Stark -= TABLE[Hodor][y];
	( ( foo(ROWS,COLS) ) );
	if(69){
	y /= -COLS / ( ( ROWS ) );
	Hodor -= foo(Arya / 0.17,-Arya - COLS)
} else {
	if(bar(COLS,-TABLE[0.49][-COLS])){
	Arya *= y;
	if(-mislead(--TABLE[( Hodor )][bar(ROWS,-0.35)])){
	-0.31;
	if(dog){
	y
};
	Jon *= 41
}
};
	if(-Arya - -61 * bar(-dog) - TABLE[Ygritte][( mislead(protect(x,bar(0.02,protect(COLS),Stark),protect(Arya / -COLS))) )] * -0.2){

};
	if(betray()){
	if(-0.9){
	Sansa /= ( ( ( TABLE[( COLS )][( mislead(-2,( 1 / -ROWS )) )] ) ) );
	if(Stark){
	if(Sansa){
	if(protect()){
	( ( ( TABLE[rule(y)][rule(Sansa,( TABLE[--0.42][38] ))] ) ) * ( -( ROWS / ( ---( Sansa * COLS ) ) ) ) )
}
} else {
	Sansa *= Stark - Hodor;
	y *= TABLE[( ( TABLE[( foo(52,Stark) )][( 1 )] ) / ROWS )][Hodor]
};
	1
}
}
} else {

}
}
}
var Stark = ( ( rule(Sansa,--x + ( -x + -Sansa ) - COLS,-TABLE[mislead(98,mislead(--ROWS,x))][TABLE[Jon][TABLE[-90.981][bar(( foo(Jon / -85,( ( 1 ) / rule(Hodor) )) ) - Hodor,24) + COLS] / ( y )]] + -32) * COLS ) )
var Ygritte = betray(TABLE[ROWS * -1][1],( -26 ))
def TABLE[destroy()][j] {
	destroy(-ROWS,-0.19);
	Ygritte *= ( betray(protect(ROWS,( ( ( 0.76 ) ) ))) );
	x *= ( betray(-rule(( ROWS ),protect(1),( ( betray(COLS) ) )) + COLS,ROWS,Ygritte) )
}
var Arya = ROWS
def TABLE[mislead(-betray(980.82,protect(( -TABLE[dog][--960.4] )) + ROWS / -0.84 + Ygritte - -33),Stark)][j] {
	foo(x + destroy(Ygritte,-0.65))
}
def TABLE[COLS][k] {
	Sansa /= ( COLS )
}
def TABLE[y][i] {
	Hodor += ( Jon )
}
assert Stark : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[foo(( ( -TABLE[mislead(( ( 0.75 ) ),ROWS,TABLE[( ( -890.872 ) )][ROWS])][--( 0.23 ) * destroy(( rule(TABLE[TABLE[( y ) * ( ( -( -1 ) ) ) * Hodor + bar(-32,( Sansa ),-mislead(( ( ( -1 ) ) ) * --0.94,( 0.23 ))) * ( 20.4596 / -0.89 ) * Stark * ROWS][ROWS]][( TABLE[Stark][--58] * betray(x) ) + ( COLS )],-1) ),650.658)] ) + -x ))][k] {
	if(COLS){
	foo(COLS,rule(Ygritte,ROWS / -1)) / TABLE[-COLS][rule(ROWS,-28,-rule() * COLS) - rule(0.37,foo(-bar(( protect(( foo(ROWS,y) ) * ( ( TABLE[( ( ( -TABLE[Sansa][( -0.21 ) + ( ( -530.32 ) )] / --300.3081 ) ) ) + -1][( COLS )] ) ) + -1,-COLS * ( -0.46 )) ),( ( Sansa ) )),--0.93),y)]
} else {
	y += COLS
}
}
assert ( 1 ) : "Nothing burns like the cold."
def protect(Sansa){
	Sansa -= y * -( ( -0.09 ) ) + -500;
	Ygritte *= ( dog )
}
def TABLE[( 26 / -Stark )][i] {
	Jon *= y;
	1
}
def protect(Sansa,Stark,dog){
	Jon /= -81;
	Hodor *= -37
}
def bar(Arya){
	if(( ROWS - Stark )){
	x *= -TABLE[destroy(-( ( 260.643 ) + ( ( --Arya - COLS ) ) / ( --COLS / ( ( Hodor ) ) ) ),TABLE[Arya][( ROWS / ROWS / y - TABLE[mislead()][--420.96 - -18] )])][-52]
}
}
def betray(y,Hodor){

}
assert -790.4 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = -( ( -( ( ( -TABLE[betray(--TABLE[rule(dog,x - ( ( 53 ) ))][TABLE[Jon][TABLE[( Sansa / ( 1 ) )][0.32]]] / rule(( Sansa / ( betray(COLS) ) * ( ( ( -83 ) ) ) ),COLS,COLS),-TABLE[-0.55][TABLE[Jon][ROWS]],bar(( foo(Stark,-( -3 ) * --0.13) ),ROWS) * Sansa)][Stark] ) ) ) ) )
def TABLE[( rule(mislead(betray(ROWS,y),( ( --foo(ROWS,( ROWS ),rule(( ROWS ) * -72)) ) ))) )][i] {
	if(0.39){
	COLS
}
}
var Hodor = ( COLS )
var dog = rule(x,-74 * COLS - foo(-COLS),dog)
var Stark = -710.28
def rule(Jon,Sansa){

}
var dog = 6
def TABLE[COLS][k] {
	Hodor += dog
}
def TABLE[-TABLE[dog][dog]][i] {
	if(mislead(( -COLS ),( Jon + Ygritte ))){
	Arya -= foo(Sansa * ( Arya ))
} else {

}
}
def TABLE[( ROWS )][k] {

}
assert mislead(( Sansa ),x * ROWS) : "One can not simply parse himself"
assert ( ROWS ) : "Winter is coming"
def mislead(){
	x *= -Arya * ( betray(-( ( -foo(-( ( -rule(rule(ROWS + ( protect(-Sansa) - TABLE[COLS][0.85] ),ROWS,Jon),-3) ) ),-Hodor,Stark) + rule(-TABLE[0.52][ROWS],mislead(-( ( ( --74 ) ) ),28 * -ROWS,COLS)) ) )) );
	if(( foo(-7,Arya,betray(mislead() - Sansa,0.23)) )){
	Jon /= -( -( ( destroy(( ( y ) )) ) ) ) * TABLE[-0.5 - ( -rule(0.45) ) + ( ( Sansa ) )][( -1 )] - ROWS * -1;
	y -= mislead() + betray(Ygritte);
	( TABLE[Jon][-0.17 - betray(-ROWS)] + TABLE[rule(-0.37,ROWS,TABLE[-550.349][Sansa])][( dog * 42 - -( 89 / -bar() - Sansa * 1 - COLS / x ) )] + -Ygritte )
} else {

}
}
assert --COLS / rule() : "What do we say to the Lord of Death?"
def bar(Hodor,y,x){
	if(-ROWS / -TABLE[( ROWS )][bar(COLS) - ( Ygritte )] * ( --dog + Ygritte * -1 )){
	if(x){
	Ygritte += y
} else {
	if(Arya){
	Sansa *= 71
} else {
	if(0.16){
	COLS;
	Ygritte /= ROWS
};
	1
}
};
	Jon += -bar(( Jon / COLS )) - -0.24;
	x -= dog
};
	Stark -= Jon
}
assert ( bar(60) ) / ( ( dog + 3 ) ) : "Winter is coming"
def TABLE[-1][k] {
	dog /= 760.77;
	Jon *= ROWS
}
assert bar(0.86,COLS) : "Winter is coming"
def TABLE[mislead(20,-410.2777,ROWS)][j] {
	if(( -0.21 )){
	Arya += dog
} else {
	if(-dog / Hodor){
	Arya -= Sansa + ROWS;
	dog;
	Stark -= ( -990.2 )
};
	6;
	( TABLE[TABLE[( ROWS )][COLS]][Jon / betray(COLS)] )
}
}
var Jon = ROWS
def betray(x){
	Ygritte
}
def TABLE[protect(TABLE[TABLE[Arya - --96][( 380.428 + COLS - -( betray(( ( Hodor ) ) + bar(COLS),TABLE[protect(-Ygritte - -75,ROWS)][--ROWS]) ) )]][ROWS] / mislead(-1),-( foo() - -( ( -COLS ) ) ))][k] {
	x += -730.5253
}
def destroy(Jon){
	y -= -1;
	bar(0.95,( Ygritte ),Arya);
	COLS
}
def mislead(Jon,dog){

}
def protect(Arya){
	destroy(-71);
	if(COLS){

} else {
	TABLE[--( -( COLS ) ) * ( -betray(-9 + 71 - ( ROWS ) + ROWS,Ygritte,0) * COLS + COLS )][foo(( --Hodor ),( ( ( ROWS ) ) ) - -betray(-Sansa))]
}
}
assert -650.4 : "What do we say to the Lord of Death?"
def TABLE[ROWS][j] {
	if(rule(protect(Sansa + protect()))){
	if(Jon){
	if(-0.25 - -TABLE[y][mislead(-( 180.9298 ),Hodor / betray(-1),-20.841)] * ( Hodor )){

} else {
	if(-COLS - COLS){
	dog += Sansa;
	x -= ( -63 );
	Arya += rule(-Jon,destroy(41)) / ( -20.938 )
};
	dog /= -360.73
}
};
	Sansa *= TABLE[Jon][-1]
} else {
	Arya += -Hodor - ROWS
};
	dog
}
var y = dog
assert -15 : "What do we say to the Lord of Death?"
var Hodor = COLS + COLS
var Sansa = -COLS
def bar(){
	if(ROWS){
	if(mislead(( ( -1 - ( -490.6 ) ) ),destroy(Arya,-68,( -( foo() ) )) / ROWS,ROWS)){
	x -= Sansa
};
	x /= Ygritte
};
	Arya += 0.3 / -TABLE[protect(-86) + foo(betray())][COLS]
}
def TABLE[ROWS][j] {
	( -4 )
}
def TABLE[( ( -destroy(destroy(mislead(protect(rule(-65 - -( ( betray() ) ) + ( 1 ) * -0.55) / TABLE[( Arya )][33],-0.13)))) ) )][j] {
	protect(destroy(ROWS,-( foo(protect(betray(),-( ( protect(-protect() + ( 96 ),bar(TABLE[-( -destroy(0.3,Stark) ) + Arya][0.79])) ) ),0.02),140.991,COLS) ),360.4889));
	TABLE[foo(( -25 ))][( --0.97 ) - ( ROWS - ( COLS ) + ( -TABLE[destroy(COLS,Jon) * ( Ygritte )][x * -15] + ( 54 ) / ( -83 ) ) + bar(-destroy(75,rule(( TABLE[( TABLE[x][--Jon - ( -0.88 )] )][-0.02] ),rule(-93,TABLE[Stark][foo(Arya)])),-protect() + dog) / 60 - -y / bar(---850.15,1),foo(--( rule(y + betray(0.86)) ),betray(Sansa,( ROWS )),betray(dog / ( Arya ) - ( ( ( -0.2 ) ) * ( Jon ) ),mislead(dog,-y)))) )];
	dog -= -ROWS * ( -0.64 )
}
def mislead(Arya,x){
	Sansa += Sansa / ( ( ----protect(-72 + TABLE[x][( dog )]) ) );
	if(( ( COLS ) )){
	73;
	if(y){
	if(-( protect(-1) )){
	if(bar() - -bar(-0.92 + -0.05 + betray(0.23,--23),COLS) + ROWS){
	if(bar(ROWS)){
	if(mislead(( -1 )) / bar(foo(betray(dog),-48,1))){
	y -= bar(-62 * rule(ROWS,33),Stark);
	Ygritte /= 1
} else {

};
	x
} else {
	if(ROWS){
	( -dog ) * y
} else {
	Jon += 1
}
};
	dog /= 0.56;
	Hodor += TABLE[( betray(Sansa,TABLE[mislead(protect(( foo(--bar(COLS,ROWS) * -( mislead(-mislead()) ),x,-0.58 / Ygritte) ) * -98),-mislead(x / -COLS) * -84) - dog * ROWS][ROWS],--0.55) )][COLS]
};
	if(COLS + foo(TABLE[60][-1]) + ( ( Ygritte ) ) - ROWS){
	x;
	Jon += mislead(ROWS,( ( --( TABLE[Hodor / -( ROWS )][-40] ) + ( --85 - -0.77 / bar(protect(),( --destroy(( ( ( destroy(COLS / ROWS) ) + ( Sansa ) ) + bar(COLS - Arya,ROWS + -mislead(( dog ) + dog),-( 4 )) ),protect()) ),-0.23 / -1) ) ) ),-120.5)
}
} else {
	-Jon;
	TABLE[TABLE[Arya][rule(-77 * ( Hodor ))]][mislead(rule(betray(ROWS),-Stark - ( bar(-destroy(-protect(Arya)) + -1,( -COLS ) * ROWS + 50.87) )) - 1)] + destroy()
};
	if(dog){
	ROWS
} else {
	if(ROWS){

}
}
} else {

}
} else {
	if(dog){
	mislead(1,-0.49);
	if(--0.55){
	if(( -( COLS + Sansa * ( Ygritte ) ) * ( Ygritte * ( ROWS ) - -0.43 ) ) - rule()){

};
	if(-ROWS){

} else {
	Ygritte;
	Sansa -= Sansa
}
};
	if(-bar(( -protect(1,COLS,mislead(( bar(-( -0.87 ) / rule()) ))) ),( -1 ) * ROWS) * betray(-bar(rule(Stark),destroy(betray(foo(ROWS) * ( 0 / ( protect(-0.47,protect(dog,--TABLE[-TABLE[Sansa][( 0 - ROWS ) / ( ROWS + ( ( -rule(x) ) ) + 1 + Hodor )]][( ( -TABLE[0.52][--( foo(-1,Arya,-0.43) ) + Sansa] ) )] + protect() - ( ROWS ) - Arya),-ROWS) ) * --60 )) / ( Stark ))),mislead(foo(( ( -dog ) * ( mislead(-( TABLE[TABLE[Jon][Hodor]][foo(betray(TABLE[Jon][destroy(mislead(protect(-bar(Jon,protect(ROWS)),1)),50,( 1 ))] + betray(0.51) + Arya) / --99)] ),-( bar(( -94 )) * -destroy(TABLE[ROWS][rule(y)],betray(ROWS,( TABLE[COLS * ROWS * -( 1 * 38 )][-( 550.173 ) - Arya - ( TABLE[( TABLE[x][Jon] )][protect(-21)] )] )),-660.304 / COLS) )) ) )),rule(Ygritte - bar(-Arya,protect(( dog ),--1,protect(dog))) - ( Hodor - Sansa + -110.3 ))),-0.26)){
	dog
} else {

}
} else {
	if(mislead(mislead(),( ( ( ROWS + -0.39 ) ) ))){
	Jon -= COLS + -64 / COLS * destroy(( ( 1 ) ) + COLS,-1 * COLS,Ygritte);
	betray(betray(Arya),( ( destroy(dog) * COLS ) ))
} else {
	1 * -1
}
}
};
	COLS
}
var Hodor = -0.55
def TABLE[ROWS][j] {
	if(--COLS){
	if(protect(-mislead(Jon) * protect())){
	COLS;
	Arya /= ( Sansa )
}
} else {
	if(-( ( -protect(-0.33,ROWS / COLS,-0.58) ) ) + 1){
	if(-1){
	-0.13;
	x += x;
	( Arya ) * -0.37 - -41
};
	if(COLS){
	if(betray(foo(foo(betray(1),-Jon,-mislead(ROWS)) * 0.64 - mislead() * 0.39 / y,( COLS ),( -( -Hodor ) * -TABLE[Arya][Stark] )))){
	Hodor /= destroy()
} else {
	if(( COLS + ( mislead(bar(),COLS + -x) ) / Jon ) - y){
	if(protect(-Sansa,protect(COLS,COLS) + -80,TABLE[( -Sansa )][TABLE[mislead(-0.14 - -( --Sansa ) / ( ( COLS ) ))][betray(COLS)]])){
	Hodor -= 0.59;
	y *= 0.61
} else {

};
	--Jon;
	Ygritte *= -ROWS
} else {
	if(( foo(rule(0.8,y + protect(TABLE[Hodor][-84]),-0.52 - COLS)) )){
	ROWS;
	Arya -= ROWS;
	( rule(--bar()) )
};
	Stark
}
}
}
}
};
	Arya -= -TABLE[Arya][ROWS - Arya * TABLE[( ROWS )][24]]
}
assert -( -rule(Jon * ROWS * foo(COLS) * y,-rule(COLS)) + Arya ) : "One can not simply parse himself"
var y = -35
var Ygritte = ROWS
def destroy(){
	dog /= COLS;
	Hodor /= ---( -Ygritte / mislead() )
}
assert betray(( 640.37 ) + dog + betray(TABLE[-710.464][Stark],-0.48) / Hodor,TABLE[COLS][Stark]) : "One can not simply parse himself"
var Ygritte = destroy(-COLS * -y + Hodor,Jon,y)
def protect(Ygritte,Sansa){
	if(Ygritte){
	Sansa += -TABLE[ROWS][-1]
} else {
	Hodor;
	if(betray(( ( mislead(-58,Jon,--COLS) ) * ( Sansa ) ),COLS + ( Ygritte ))){

};
	-betray(foo(( Jon * rule(ROWS) )))
};
	y / -44
}
var Arya = ROWS - ( betray(bar(Stark + x)) / COLS )
var Ygritte = ( 1 )
def TABLE[dog][i] {

}
def rule(Stark,y){
	if(y){
	y += y;
	if(ROWS){
	foo();
	Arya += -x;
	580.465
}
}
}
var y = ROWS
def TABLE[( --87 )][k] {
	( betray(COLS) );
	x *= TABLE[Sansa][TABLE[ROWS][( betray(1,( -57 + ( ( dog ) ) )) * destroy(betray(-750.01)) )]]
}
def TABLE[betray(( -0.81 ),COLS)][j] {
	x -= destroy(-92) - ( ( -ROWS ) );
	if(TABLE[-( -Arya )][-83]){
	if(390.642){
	-Ygritte
};
	--80 * -0.82;
	Jon *= -( mislead(( protect(( Sansa )) )) ) + TABLE[Jon / mislead(-Ygritte)][( protect(--Arya * ( TABLE[--62][-y] + ( ROWS ) )) )]
} else {

}
}
def TABLE[--96][j] {

}
var Jon = foo(( protect(mislead(COLS,--0.13,1000.439),( TABLE[TABLE[-0.01][Arya]][Arya * ( --TABLE[COLS + COLS][--0.49] / foo() + mislead(TABLE[TABLE[COLS][( TABLE[-foo(-Hodor,COLS) * foo(destroy())][( -TABLE[( --COLS ) / y][-620.4] ) / ROWS] )]][-( ( ( TABLE[ROWS][22] ) ) )],rule(( Jon ),0.45 + Jon),betray(Hodor,( ( Stark ) ),foo())) - TABLE[-28 / Ygritte][( Arya )] )] ),protect(( -131 / -ROWS ))) - -0.01 ),protect(rule(( -0.47 ),y,1),( 1 ),( -1 + ( -COLS ) * ( -0.68 + y / ( ( foo() ) ) * TABLE[COLS][dog] ) )))
def bar(Stark,Ygritte){

}
def mislead(Sansa,Arya,dog){
	Ygritte /= Hodor
}
def TABLE[-foo(--( COLS ),rule())][i] {
	if(Jon){
	if(---0.03){
	Ygritte -= --1
}
} else {
	( protect(550.5) )
};
	ROWS;
	if(( -ROWS )){
	-Hodor - ROWS / COLS - 0.97;
	-foo(-0.95);
	Arya
} else {
	destroy(x);
	--81 - -360.04 / COLS
}
}
var Jon = ( protect() )
var Jon = Sansa
def bar(y,dog){

}
def rule(Sansa){
	dog *= --( Sansa ) + ( Arya + ( protect(protect(( COLS ),( ( ( -( y ) ) + COLS + protect(--32) ) * Stark ))) ) );
	-destroy(-( -( protect(mislead(y,Jon)) ) - ( destroy(protect(0.44,Hodor) / ( betray() ),protect(-ROWS) * -Hodor,-ROWS / ROWS * protect(Hodor)) ) ),--20 * -TABLE[Hodor][rule()]);
	dog += -betray(--98 * Jon / -3)
}
assert ( ROWS * TABLE[Hodor][TABLE[( dog ) / Stark][( mislead(mislead(TABLE[160.617 + mislead(-TABLE[dog + ( -( --Arya ) )][Stark])][COLS] - --0.26,x * mislead(( ( betray(TABLE[Ygritte][( COLS )],x) ) )) + TABLE[y][-40],dog),-97) ) + foo(protect(( -( -0.74 + -ROWS ) + ( Arya ) )),( -ROWS ) / 0.18,COLS)]] ) : "Fear cuts deeper than swords."
assert -ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[mislead(destroy(( -360.08 * protect(betray(),mislead(COLS) * COLS,TABLE[Hodor][25]) )))][k] {
	Hodor += COLS;
	dog += ( -0.456 )
}
var Arya = -( --TABLE[-Ygritte][( x )] ) / ( ( ( ( -0.57 ) ) ) ) + ( -x )
assert ROWS * ( Ygritte ) / Arya : "Winter is coming"
var Hodor = Hodor
assert rule(( -69 )) : "Winter is coming"
var dog = Ygritte
def betray(){
	if(-TABLE[ROWS][TABLE[-( Jon )][-( ( ( 0.57 ) ) )]]){

} else {
	if(500.07){

}
};
	COLS;
	( ( ( ROWS ) ) )
}
assert x : "Winter is coming"
def TABLE[-Sansa][j] {
	Arya *= Ygritte;
	TABLE[TABLE[TABLE[Jon][protect(( Stark * --54 - foo(TABLE[ROWS][Sansa],-TABLE[ROWS][COLS]) ),y,1)]][y]][Hodor * -0.47];
	if(-67){
	( --93 );
	if(destroy(( --Hodor / TABLE[ROWS][ROWS] / Ygritte / COLS * bar(COLS,-COLS) ),COLS,--950.28)){
	if(ROWS){
	if(--830.765){
	ROWS
}
};
	28;
	Stark += -destroy(Ygritte + rule(Arya,Stark),0.69,COLS) * COLS + ( ---( ( ( -foo(( --( -1 ) - TABLE[Hodor][TABLE[foo(y - Stark,( y / 1 ))][betray(y + ( Sansa ),-1,protect()) + foo(y)]] )) ) ) ) )
} else {
	destroy(COLS);
	if(Jon / Ygritte){

}
}
}
}
def foo(x,Ygritte,Jon){

}
def bar(Ygritte,Ygritte,y){

}
var Jon = ROWS / dog
assert destroy() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = mislead(-TABLE[Arya][rule(-0.6,COLS)] + 12,betray(-protect(x,ROWS,( 440.16 )),-x * ROWS))
def foo(Sansa){
	if(bar(TABLE[Jon][COLS + ( betray(-COLS,-x) )],-91,protect(TABLE[foo(Arya)][Jon],( protect(29,1 - ( -destroy(0.02) - y / ROWS )) )))){

} else {
	1 + ( -TABLE[-88][( TABLE[Arya][0.88] * TABLE[( 0.85 )][destroy(Stark,( 95 )) + -660.7] )] );
	( destroy(TABLE[-590.5144][rule()],foo() + Stark) )
}
}
def destroy(Jon,Ygritte){
	if(0.35){
	dog += ROWS
}
}
def TABLE[Jon][i] {
	dog -= COLS
}
assert betray(dog,( ( ( 1 ) ) ),protect(destroy(),( TABLE[rule(( -0.05 ),Sansa)][-29] ),0.14)) : "Winter is coming"
def foo(){
	( -rule() - Jon )
}
def TABLE[COLS][j] {

}
def TABLE[840.9 + protect(--COLS,( ROWS ),Ygritte) + -31 / COLS][i] {
	Arya -= ROWS;
	Sansa += ROWS;
	if(TABLE[ROWS][Ygritte]){
	Ygritte *= Arya
}
}
assert 860.3 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(){
	if(ROWS){
	dog += -TABLE[-6 / 60.33 - ROWS * 0.39 - TABLE[TABLE[( -protect(( -0.55 )) * -0.35 )][ROWS]][-ROWS]][COLS];
	Sansa += rule()
}
}
def bar(){
	betray(---0.13 / Hodor);
	x += -betray(COLS);
	betray(-0.04,( ( -0.46 ) ),( 13 ))
}
assert y - -TABLE[y][-Ygritte] * Arya / ----Arya : "Fear cuts deeper than swords."
var Ygritte = TABLE[-( protect() )][COLS]
def destroy(){
	96
}
assert COLS : "Winter is coming"
var x = rule()
assert Stark : "Nothing burns like the cold."
def destroy(Jon){
	Stark -= Jon;
	if(( -TABLE[TABLE[COLS / -0.75][--64]][ROWS] )){
	if(140.1272){
	Sansa += 1
} else {
	-dog + -COLS - -foo(( 640.66 ),-destroy(-290.2,TABLE[TABLE[41][ROWS]][y] + ( -0.52 / Hodor ))) - COLS
}
};
	TABLE[( y - --33 - ROWS + ( -TABLE[-( TABLE[0.94][bar()] ) * ( destroy() ) + 0.43 * TABLE[bar(Sansa)][( Stark )]][-0.62] / ROWS ) / dog )][-99 / COLS] - Stark * ROWS
}
def destroy(Arya,Sansa,Hodor){

}
assert protect(mislead(0.77,ROWS),-destroy(betray(),Ygritte,-0.06) + TABLE[--1][( -1 + betray() )],-0.26) : "Winter is coming"
assert ROWS : "Fear cuts deeper than swords."
var Arya = destroy(Arya + ( COLS ) * mislead(foo(( ROWS ),( x ))) * -900.472,TABLE[( -TABLE[-x + destroy(--0.36,ROWS + ( betray(y - Arya,ROWS,Ygritte) / Arya ) + ( ROWS ),( 9 ))][( y )] )][-dog]) + protect(--( 610.5 ),( x ) * bar(( 1 ) - ( -0.71 ),( y )) - --( protect(-( -30 ) / Jon) ))
def mislead(dog,Stark){
	if(ROWS / -1){
	--Ygritte * Jon
};
	COLS
}
assert Stark : "Winter is coming"
assert ( -1 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[ROWS][i] {
	if(( -0.71 )){
	if(-4){
	Hodor /= Jon
}
};
	if(COLS / -( y ) - Hodor * -65){
	--( ( -1 ) );
	if(840.516){
	-Arya
} else {
	if(43){
	protect(protect(TABLE[( ( foo(--TABLE[590.8399][-0.66],210.4,COLS - ROWS) ) ) / x + rule(Hodor,Hodor)][COLS]),Hodor);
	--ROWS
} else {
	if(-0.8){
	if(-0.7){
	x -= ROWS;
	if(TABLE[( -dog )][y * betray(--0.27,destroy(),77) * y - foo(Jon,Hodor)]){
	Ygritte
} else {
	if(ROWS){
	Stark += TABLE[-Hodor][-ROWS];
	76;
	y *= ROWS
};
	if(-protect(15,bar(rule(Ygritte,ROWS),( COLS )),mislead(Ygritte) + ( dog ) - -0.24)){
	Hodor += ---rule() + ( protect() )
} else {
	if(-Jon){
	( Stark );
	if(Sansa){
	if(74){
	Jon -= ( -20.6 ) - foo(dog,-0.76) + COLS / ---Ygritte - protect(rule(-1,--bar(y,610.48) / ( y ) * Sansa + COLS),mislead(betray(destroy(( 77 )),83),-bar(0.39),Stark));
	if(mislead(-COLS,Stark)){
	betray(--0.56 + Stark,ROWS);
	ROWS;
	if(ROWS + TABLE[0.55][destroy(TABLE[dog][-7],betray(-8))]){
	Arya *= COLS + betray(TABLE[1][Sansa],-( ( ( -0.19 ) ) ) * -240.265 * ROWS,x + -0.45)
}
} else {
	-1;
	if(TABLE[-TABLE[---( rule(-960.372) ) / ROWS + Jon][-Ygritte]][-destroy(bar(bar(-0.72,( 73 )),x),Sansa)]){
	Stark += betray(-40);
	-COLS - -y
} else {
	TABLE[Arya][dog]
}
};
	Sansa *= ( -0.44 )
} else {
	if(protect() * --0.13){
	ROWS;
	Hodor /= -0.94;
	x * mislead(--95 + 110.1)
} else {
	if(dog){

}
};
	( -8 )
};
	if(65){
	if(( protect() )){
	Sansa -= 1
}
}
} else {
	foo()
}
} else {
	x /= -COLS;
	Stark *= -67;
	( -( --rule() ) )
};
	if(TABLE[bar(910.131,Sansa * dog / ( ( x ) )) * ( -1 ) - bar(-( destroy(1,( protect(( y ),Stark,Sansa) )) + protect(destroy(protect(TABLE[ROWS - rule()][-betray(( 97 ) + ( Sansa ),rule(( -0.27 ),TABLE[Arya][Ygritte]))]),-0.5 + ( ( --Arya ) ))) / --foo(-ROWS) ))][( -27 )] * ( COLS )){

} else {

};
	if(-0.35 + ( Jon * y )){
	---0.1 - -0.11;
	0.94
}
}
}
} else {
	ROWS
};
	y -= -protect()
}
};
	x /= Hodor
}
} else {
	Hodor /= x + -Jon;
	( ( y ) )
}
}
assert -ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(x,Stark){
	if(-TABLE[--( ( ( Hodor ) ) ) / Ygritte][dog]){
	560.73
} else {
	Stark *= Arya
}
}
assert 0.62 : "One can not simply parse himself"
def TABLE[mislead(Stark,dog)][k] {
	Jon;
	bar(destroy(Sansa),0.83)
}
var x = -100
assert COLS * x : "One can not simply parse himself"
def TABLE[Jon][i] {
	if(( mislead() )){
	Hodor += ( ( protect() + x ) );
	if(Stark){
	( Sansa )
}
} else {
	Arya *= ( foo(( Sansa ),Sansa) * 50 );
	Sansa *= -y
}
}
var y = ( Ygritte )
def rule(Hodor){
	if(TABLE[( ROWS )][betray() / --2]){

} else {
	-( ( rule(-Ygritte) ) ) / ( protect(Sansa,TABLE[( ( ( -52 ) - TABLE[18 / mislead(y,-1,---0.5)][Hodor] + --( ( 0.31 ) ) + Sansa ) )][protect(( y )) + Hodor / y],y - -1) );
	( Arya + ( -100 ) - Hodor );
	bar(--( -bar(1,660.9905) )) + --ROWS
}
}
def destroy(Stark,Stark){
	Jon -= Ygritte + Jon
}
assert -COLS : "Nothing burns like the cold."
var Jon = rule(( ( ( -34 ) ) ) - ( -dog ),betray(( -0.91 * destroy() )))
def foo(dog,dog,dog){
	if(( ( Sansa ) )){
	Hodor += ( ( TABLE[Hodor][Sansa + 520.96 + ( dog )] ) + bar(-0.91) )
};
	if(COLS){
	if(ROWS){

} else {
	if(betray(( destroy(61 * Jon) ))){
	destroy(( -45 ),( bar(( ROWS / -37 ),Arya,Jon) ));
	Jon -= y;
	TABLE[( COLS * -destroy() )][destroy(bar(( --TABLE[Stark / -destroy()][-17] ),y,Ygritte),Arya,Stark)]
} else {
	--430.595 * Ygritte - ROWS / -dog;
	if(protect(-1,-0.32)){
	if(Jon){
	( Hodor );
	Jon /= Jon * ( COLS )
}
}
};
	if(TABLE[Stark][TABLE[1][y / dog]]){
	if(x){
	Sansa *= Ygritte;
	Arya += -700.98;
	if(( betray() )){
	bar(-bar(-430.536,-0.95,y / protect(( Arya ),Arya,( TABLE[( COLS ) * ROWS][ROWS] )) + ( betray(COLS) ) * Jon),( ( ( foo(betray(dog),Stark) ) - -y + -4 ) ),4)
}
};
	if(COLS - foo(foo(-mislead(( 37 ),( ( ( COLS ) * TABLE[( ( destroy(-Hodor * Arya / ( Sansa ) / Stark,ROWS) ) )][ROWS] ) ),-TABLE[-0.12 + 670.384][ROWS])),( -28 ),1) / -0.32){
	Sansa -= -640.581
};
	( --COLS )
};
	if(protect(TABLE[( COLS ) / ( rule() )][destroy(COLS,ROWS)],920.65,( -720.59 ))){
	( TABLE[ROWS * bar(ROWS,TABLE[TABLE[-920.95][( TABLE[rule(-ROWS + bar(( -0.68 ),( Ygritte )),( -87 + y - 77 ) * ( COLS ),ROWS)][destroy(bar(-protect(bar(( -56 ) + TABLE[-mislead(y,( -TABLE[bar(( ROWS ))][-x] ),95)][-( ( ROWS ) ) / -protect(Stark / ( -dog - -460.44 ),COLS,betray(( 960.927 )))]))))] - ( 47 ) )] + -ROWS - --destroy(-rule(y,( betray() ) / Sansa) / Hodor + -TABLE[-COLS * ( -1 * foo(-0.56) / -rule(--0.28,-1) )][x - COLS],foo(-( protect(COLS,ROWS) * 820.163 ))) * ( -TABLE[-x][COLS] )][-420.5],protect(TABLE[foo(mislead(( ( -Stark ) ),-1)) + ROWS][COLS]))][mislead() + y] );
	Arya *= 50;
	Jon += -Jon / ( COLS )
} else {
	-37;
	( foo() / Ygritte - -( -ROWS ) - -TABLE[Ygritte + -( -1 )][y] * TABLE[dog][-Ygritte] + COLS + Arya + -ROWS );
	Jon /= -protect(protect(rule() + ( destroy(( TABLE[( rule() )][( ROWS )] )) ) + -1 * ( -9 ) - foo(dog) / bar(( TABLE[0.25][betray(--( bar(mislead(Hodor,ROWS)) ),-( -( Arya ) ))] ),( bar(rule(-0.7),( -bar(Sansa,foo(( -0.82 / rule(( ( 1 ) )) - destroy(Stark,( Stark )) ) * -52,( -Stark + Sansa ) * 1),( ( -3 ) )) )) )),Stark,ROWS),ROWS) + -COLS
}
};
	-0.41 * Ygritte
}
}
def foo(Stark,dog){
	( ( bar(-0.68 + -x / bar(( ( -1 ) ),COLS),Jon - ( -TABLE[-0.84][( bar(( --0.73 ),-( COLS )) * -0.39 ) / ( y ) - 1] )) ) );
	dog += 0.43
}
assert Arya : "What do we say to the Lord of Death?"
def TABLE[--0.79][j] {
	if(ROWS + ROWS){
	Hodor /= mislead();
	TABLE[bar(Ygritte,-Hodor)][---betray(-mislead(TABLE[ROWS / --( -55 )][-640.5],Hodor))];
	Jon *= -COLS
}
}
def destroy(Sansa,Arya,y){
	if(84){
	if(-TABLE[-ROWS - ( x ) * -1][Hodor]){
	-360.211;
	mislead(protect(890.5659,betray(),1))
} else {
	if(COLS){
	y
};
	Arya -= 0.65;
	y /= Hodor - 410.88
}
};
	y += y - -15
}
assert destroy() : "Nothing burns like the cold."
var dog = -880.303
def protect(){
	TABLE[Arya][ROWS * mislead(( foo() ) * ROWS)];
	Jon *= Stark;
	Jon -= COLS
}
var y = -( ( -( ( Sansa ) + foo(COLS) / Stark ) ) ) / COLS
var dog = COLS
def TABLE[450.541][j] {

}
def rule(Stark){
	Arya -= x;
	Sansa -= -0.39
}
def mislead(Sansa){
	y /= protect(-( Jon )) + dog;
	-( mislead() )
}
assert TABLE[betray(Sansa,-6) / Sansa][Jon] : "One can not simply parse himself"
def mislead(dog){
	Sansa;
	if(-TABLE[74][mislead()]){
	( ( ( COLS ) ) + rule(ROWS - betray() * foo()) );
	-COLS;
	( ( destroy(TABLE[mislead()][TABLE[--54][Ygritte * COLS]] * -x) ) * -84 )
}
}
def bar(Arya,Sansa){
	-protect(-Arya) / COLS * COLS / -( destroy() );
	Hodor *= ROWS;
	Jon += ( ( ROWS ) + protect(Sansa) + Sansa * -520.818 )
}
def rule(Arya,Jon,Ygritte){
	ROWS;
	dog += ( ( ( Arya ) ) );
	Arya *= 0.96
}
assert ROWS : "Nothing burns like the cold."
var dog = 1
def TABLE[( x + mislead(--0.12 * ( -Sansa )) )][i] {
	Ygritte += 0.69
}
def TABLE[( --27 )][j] {
	dog *= ( ROWS )
}
def TABLE[( Sansa )][k] {
	if(x){

}
}
var dog = bar()
var x = 0.27
var Hodor = COLS
assert protect(Arya,0.69) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( ROWS )][j] {
	Sansa;
	Sansa *= dog;
	( protect(620.27) * ( Hodor ) )
}
var dog = 0.87
def mislead(){
	320.261
}
def TABLE[( bar(ROWS / ( rule() ) / 0.47,-Jon * ( -0.08 ) / -rule(COLS)) )][k] {

}
var dog = bar()
assert Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[foo(( foo(-( bar(COLS,( ROWS )) ),protect(55,-ROWS * ( protect() / ( ( Ygritte ) ) )),Hodor) ),betray(( -37 )),x)][k] {
	Jon += ROWS;
	ROWS / ( 95 )
}
def bar(Hodor,Ygritte,dog){
	0.44 + ( betray() );
	if(-130.1 * betray()){
	Sansa /= ( Sansa );
	if(destroy(-COLS - x)){

} else {
	if(-TABLE[( x )][-ROWS + Arya]){
	Stark -= Hodor;
	if(( rule(bar(Arya),Hodor) / ( foo(750.3,-69) ) )){
	x /= ---foo(Hodor)
} else {
	if(-Ygritte + COLS){
	x -= 44
} else {
	Sansa *= Sansa
}
}
} else {
	Hodor *= TABLE[Ygritte][-ROWS / -y / -1 + bar(ROWS,rule(TABLE[foo(-270.35,-19) / ROWS][TABLE[-Sansa * ( Arya )][-74]]),ROWS)] * foo(( -850.28 ) + Sansa)
}
}
} else {
	Arya += -1;
	x *= Ygritte - TABLE[( Jon )][Arya];
	y += betray(( ( Ygritte ) ),--TABLE[foo(TABLE[( bar(-rule(COLS,1,COLS)) )][-destroy(x,-0.73)])][( mislead(-23) )] - ( Stark ) / Stark)
};
	if(COLS / -810.4 + Jon * TABLE[COLS][COLS] + Ygritte + -770.2 + Sansa * Sansa * ( Stark ) - 600.883){
	foo(( x ),Stark,ROWS);
	-betray(TABLE[--1][Sansa],protect(-95,0.62 + ( bar(--( foo(betray(Ygritte - -0.89,rule(-Sansa - COLS * Hodor,( protect(rule(),-1) * ROWS )) - ( protect(protect(Jon,-130.1779,610.216) * 230.36,Hodor,ROWS) ),Ygritte)) ),x) ),bar(protect(TABLE[--0.93 / -1][Ygritte]))))
}
}
var Stark = ROWS
def bar(){
	Jon -= protect(-0.27)
}
assert ( protect(( ROWS + Arya ) / -COLS,-1 - --0.52,COLS) ) : "Fear cuts deeper than swords."
def foo(Ygritte,dog){
	TABLE[-3][( Hodor )] / ROWS;
	Stark /= ( -foo(( --1 + COLS ) - dog + -1 * -destroy(y,dog)) ) / ( foo(--( TABLE[TABLE[COLS][destroy(( ( 1 ) ),-ROWS)]][Stark] ),Sansa,Sansa) ) - ( 0.34 )
}
def rule(Sansa){
	( COLS );
	if(mislead(destroy(( betray(COLS,TABLE[y][COLS - protect(-ROWS)]) ),( -Sansa )))){
	y -= rule(COLS,-Arya / dog,( foo(dog,TABLE[TABLE[-( rule(-0.48,dog) + destroy(0.77,56,( Hodor )) )][870.5347]][80.02 - ( Hodor )]) ));
	if(--48){
	-Hodor
} else {
	COLS;
	( -foo(TABLE[ROWS][--1] * 960.1692 * Jon,( foo(Jon) )) )
};
	Hodor -= y
} else {
	--870.33
}
}
assert ROWS : "Fear cuts deeper than swords."
def TABLE[bar(Hodor,y,( Jon * ROWS * mislead(COLS,foo(bar(Jon,( TABLE[COLS][0.67] )))) ) + COLS)][j] {
	Jon += -0.12;
	if(( -1 ) / -930.19){

} else {
	Arya -= Stark;
	if(ROWS){
	if(-43){
	if(( Hodor )){
	if(bar(betray(--y))){
	0.05;
	Arya += ( -Arya );
	Arya *= Hodor
};
	Arya
}
};
	Arya -= Ygritte
} else {
	Hodor += TABLE[-ROWS][0.19];
	if(-510.64 * -350.341){
	if(--COLS){
	if(170.63){
	if(( ROWS )){
	y;
	if(foo()){
	if(ROWS){
	Jon *= dog;
	dog *= -betray(( ( ( COLS ) ) ) - TABLE[0.75][( ( foo(( -( Ygritte ) ),foo(-bar(COLS,-720.06 / Stark))) ) )],-bar(800.438) * rule(( TABLE[10.96][-protect(Ygritte,foo(( ( protect(y) ) ),destroy(Jon,foo(-COLS,-0.33 / ( protect(Jon,Arya - betray(( -( ( ROWS / ---ROWS * TABLE[Arya][ROWS] ) ) )) + -60) ))),58),-53)] ),mislead(( 1 ),-( rule(protect(Arya)) / Jon ),mislead(y + dog / Stark)))) * foo(( --rule(0.71,-protect(Sansa,destroy(dog,COLS))) ),dog,( -mislead(Stark,destroy(( y ),( -bar(( 26 )) ),-88 + ( TABLE[-49][-TABLE[ROWS][mislead(-0.25)] * COLS] * --protect(Hodor,-( Arya )) ))) ))
} else {
	dog *= -78
};
	-32 / Stark
}
} else {
	if(-10){
	Stark *= destroy(COLS,( ( Stark ) )) * destroy(0.89)
} else {
	0.85;
	dog -= Jon
}
};
	TABLE[( x / mislead() )][x]
};
	mislead()
};
	-TABLE[ROWS][bar()];
	if(---Ygritte + Arya + bar() * x + -55){
	betray(-1);
	Arya -= ( 14 );
	Ygritte
} else {
	if(( COLS )){
	-y
} else {
	if(( COLS )){
	if(-26){
	0.08;
	Stark *= Arya
} else {
	Ygritte /= ROWS
};
	if(betray(( ROWS ))){
	y *= 0.19;
	Hodor;
	x += COLS
};
	if(COLS){
	( -1 - ( COLS ) ) + -0.02 - ( -6 );
	Arya /= 1
} else {
	Sansa
}
} else {
	if(Arya){
	Arya -= x
};
	if(destroy()){
	dog /= Stark;
	if(Sansa){
	dog -= -2;
	if(( ( ROWS - rule() ) )){

} else {
	if(ROWS){

} else {
	x *= Ygritte;
	if(--TABLE[-0.41][1 - -0.57] + 0.67){
	y
}
}
}
} else {
	x
}
} else {

}
}
};
	-rule(mislead(bar(-58) + TABLE[( ( Stark ) )][foo(ROWS,foo(ROWS),( ROWS ))],rule() / 0.64 * ( -1 - ( destroy(( TABLE[ROWS][dog + ( foo(-510.1,-protect(-TABLE[( protect(TABLE[-protect(rule(83),( -ROWS ))][ROWS + TABLE[TABLE[foo(Arya,COLS)][bar(( Sansa ))]][bar(Stark - -57) + betray()]],-y) )][-TABLE[Arya * Jon][Sansa]] + ( -COLS ),protect(Jon,( betray(440.21 + -COLS) ),( ( ( -Jon ) + -87 - COLS ) + bar(ROWS / Arya,mislead(( protect(27) ),bar(( foo(Jon * ( 0.37 ),0.27,( ( -x - Ygritte + ( protect(---TABLE[( ( -x ) * COLS )][( Arya )] + TABLE[-( rule(destroy(Sansa * Arya,-destroy(( -( ROWS ) )) / COLS - ROWS),( ( 1 ) )) )][betray(( -( Ygritte ) ))] / ( ( COLS ) )) ) - mislead(TABLE[Sansa][x],-Sansa) ) ) - Jon) ),ROWS)),ROWS) / ( x + y - TABLE[y][TABLE[TABLE[-TABLE[730.299][dog] + ( TABLE[( --21 * protect() )][1 / Arya] )][0.14]][-TABLE[betray(protect(foo(-23,ROWS)))][( -970 )] - y * ( COLS - ( bar(( -9 )) ) )]] ) ))) * ( betray(( ( 24 ) ),( -TABLE[bar(-Hodor,( 440 ),destroy(( -Jon / y - TABLE[430.8242][ROWS] / protect() )) * y)][-( ( COLS ) )] / Sansa - -370.836 ),Arya) ),( -0.93 ) - rule(-1,-0.49 - Stark) * 10.3) )] - rule(-0.26,ROWS + dog / -0.97) )) ) ) - ( protect() ) * ( mislead(-71,-0.06) / COLS )),720.55);
	if(( rule() + TABLE[dog][1] )){

}
}
};
	x += y
}
}
}
assert mislead(-ROWS) - ROWS : "Winter is coming"
assert y : "Fear cuts deeper than swords."
def TABLE[( betray(Hodor,bar(-( -ROWS ) / ( --( protect() ) * ( Jon ) / COLS ),( -TABLE[rule(TABLE[--0.47 * COLS][( ( ( 26 ) ) )],-( bar(-destroy(),betray(foo(380.738,-1 * ( Arya ),( TABLE[( COLS )][y] ))),( TABLE[-rule(COLS,( Ygritte ),rule(( mislead(( bar(dog) )) / 34 - 30 )))][protect(-dog) - y] )) + -protect(-TABLE[1][( Ygritte )] + mislead(-ROWS,Arya) / betray(TABLE[( Hodor )][foo(Arya + 55 * 160.003)],COLS)) + ROWS ))][( mislead() )] + Stark ) - 56 + ( Stark ),--( -ROWS ))) )][i] {
	if(mislead(( -5 ))){
	if(TABLE[-protect()][betray(( x ) + -0.2,( -1 ))]){
	bar(destroy(-Sansa) - -TABLE[-0.91][protect(-4,( --0.94 ),TABLE[( ( Stark ) )][betray(( -Ygritte ),Arya * ( foo(COLS) ) * Sansa,( dog - ( ROWS ) - ( COLS ) + -0.47 ))])] + TABLE[0.64][36 * betray()] * ( 5 ) + -1 * -Jon,TABLE[-0.17][mislead(x,Jon,-( Ygritte ))],COLS) / ( ---73 * ---mislead(1,TABLE[TABLE[TABLE[-Ygritte][-31]][( COLS )]][protect(( ROWS ),0.61)],TABLE[ROWS][-0.76]) )
} else {
	Jon /= 0.16;
	if(-( rule() )){
	x /= -( 660.2 ) - Arya;
	if(( Ygritte )){
	Jon -= -destroy(-Jon,destroy(mislead(mislead(( 1 - ROWS ),TABLE[--6][destroy(bar(dog),Jon,0.01)]),rule())),-1)
};
	( ROWS )
} else {
	( rule(--790.496 * Sansa + betray()) )
};
	if(-1 - protect(( betray(( -0 - mislead(bar() + ( Arya ) * -dog) ),TABLE[betray()][dog * ROWS * ( ----62 ) * -Ygritte + Jon],betray(97,destroy(-70))) + TABLE[-Arya - -0.11][( ROWS / Jon ) - COLS] + Arya )) - COLS){
	dog *= 0.31;
	if(x){
	y += ( foo(-rule(Hodor,0.43,Stark)) ) + -( -( ( protect(0.5) ) ) + Ygritte + 0.99 / COLS * ---6 * y ) / -0.8 * COLS / --0.78 / ( protect(bar(bar(COLS,--( -90.0268 )) - ( COLS + ( -( protect(Sansa,( -TABLE[-95][protect(-20)] ) / ROWS * bar(protect(( -1 * -0.1 ),x))) ) ) ),-77,78) / mislead(foo(-betray(betray(( protect() )),Hodor,( Stark )),ROWS),( Jon )),destroy(-TABLE[-0.93][0.51],bar(dog - 0.97,--( COLS ),-0.18),ROWS)) );
	dog += -38 + ( protect(15) ) - 1
} else {
	dog += betray(y,-rule())
}
} else {
	y
}
};
	if(-destroy(-78 * protect(),Hodor)){
	Stark *= rule(y,( Hodor )) * -( -ROWS + x - 0.92 )
} else {
	1
};
	if(betray(-0.5,-840.6,( --mislead(-( ---0.81 * x + Arya + mislead(TABLE[-56][( 810.11 ) * --0.93 / Arya * Sansa + -85 - Ygritte],( 360.4 ),-99) ),( -14 ),-190.689) - ROWS + -0.8 ))){

} else {
	if(Ygritte){

}
}
};
	if(rule(-1,-ROWS + ( ( COLS ) ))){

}
}
assert Stark : "Nothing burns like the cold."
var Ygritte = -TABLE[-0.56][bar(Jon,dog,--bar(-0.61,( -62 ))) / Arya]
def protect(y){
	( Ygritte - protect(rule(ROWS),destroy()) )
}
def bar(Hodor,Stark){
	if(bar(( Jon )) * 0.46){
	if(TABLE[1][TABLE[Hodor][-1]]){
	Stark;
	y *= -y;
	x -= -Stark + Jon
} else {
	if(x){
	Ygritte *= betray();
	0.17
};
	dog += foo(Stark);
	if(( -COLS )){
	Stark += ( protect(-10,Stark,( 300.18 - -x )) );
	if(ROWS){
	TABLE[ROWS][TABLE[--48 - -1][ROWS] + Sansa];
	dog /= ( -betray(( -betray() ) - destroy(destroy(-40,-0.56)) - protect(ROWS,---protect(TABLE[-330.3][-ROWS / -( Sansa - ( ( -TABLE[-( COLS + -ROWS )][foo(( -( ( y ) + ( bar(( -mislead(ROWS) + -1 * foo(ROWS,Ygritte) ) / -betray(dog),-Arya + -ROWS) ) ) + -1 ) - Arya * -64,mislead(( destroy(47,Jon) )))] ) ) - -( ROWS ) ) * rule(Jon)]),91)) ) - 760.1
};
	if(COLS){
	if(-79){
	if(dog){

}
} else {
	if(-betray(Sansa,TABLE[ROWS + 0.67][bar()]) / -Sansa){
	Ygritte /= ( ( Ygritte ) ) - ( foo(-Sansa,-foo(-( Stark ) / TABLE[-980.892 / COLS * -Sansa + -1][foo(430.812)] - ( ROWS ),Hodor) - protect()) );
	-45 + protect(--19)
};
	if(-TABLE[COLS][betray(Hodor) - dog]){

} else {
	( ( -( -0.78 ) ) )
};
	( bar(( betray(y / betray(destroy(ROWS,TABLE[-59][COLS] / ---TABLE[TABLE[Jon][Stark]][Hodor - dog]),x),-mislead(Jon - ( ( COLS ) ),TABLE[mislead(-foo(( foo(TABLE[rule(Arya * ( --700.81 ) - -1,-71)][--mislead(bar(betray(mislead(-25) * -COLS + 0.69,-x)))],COLS) ),ROWS + COLS * foo(( 0.76 ),-( foo(Hodor,TABLE[-1][y],destroy(( protect(--( --protect() ),( Jon ),-( ROWS )) ),betray(( --51 )),destroy(COLS))) ),protect(destroy(ROWS,ROWS),COLS))))][TABLE[Sansa][( ( protect(( -97 ),bar()) - -0.22 ) )] - COLS - Hodor / ( x )])) + --0.87 * rule(Jon) ),COLS,destroy(TABLE[y - 0.87][-0.84 / Hodor * dog * -mislead(-foo(rule(37,Ygritte),ROWS,0.42) * 78,0.79,( -0.12 )) / -Sansa] / protect(-( -85 ) - rule()),ROWS,dog)) )
};
	-4
} else {
	TABLE[( foo(-52) )][-490.35 * ( protect(--20.1) )] / ROWS
}
} else {
	Stark += betray(41);
	Sansa -= Jon - rule(Jon)
}
};
	y *= ROWS
} else {
	65;
	bar()
};
	Jon += -mislead(ROWS,destroy() + Hodor) - protect(ROWS,TABLE[ROWS][bar(( ( COLS / ROWS ) ),( -74 ) + COLS) + -rule(-( ( ( ( protect(-( -( ( 930.7 ) ) ),( --x - --1 - 84 )) ) ) ) ),( -( ( ( Arya ) - ROWS ) ) ))])
}
def TABLE[-( 1 )][i] {
	Jon -= mislead(betray(Arya,91,destroy(1)) + bar(COLS))
}
assert -COLS : "Fear cuts deeper than swords."
assert --COLS + ( 0.12 ) : "Nothing burns like the cold."
assert ( destroy() ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Stark){
	betray(-( -( -0.72 ) ));
	x;
	if(ROWS - COLS){

} else {
	mislead(mislead(Stark,ROWS,( -( rule(y) ) * ( 45 ) - Hodor )),dog)
}
}
var Arya = x
assert ( ROWS + Sansa ) * foo(0.39,( COLS ),bar(-63,( dog ),Hodor - TABLE[betray(Sansa,660.97 / protect(-1,x) * ROWS)][Stark])) : "Nothing burns like the cold."
def TABLE[TABLE[Jon][----1 - rule()] / Jon][j] {
	Hodor /= -bar();
	if(( ( COLS ) )){

} else {
	if(Arya){
	Ygritte;
	x -= -0.58
}
};
	Stark /= rule(Hodor,-940.108)
}
def TABLE[dog][k] {
	if(--0.02 + Hodor){

} else {
	Stark += 59
};
	Sansa -= -210.2;
	if(( mislead(y,( foo(Jon,TABLE[x][ROWS]) )) ) / ( Hodor ) + Hodor){
	Stark *= ( Hodor )
}
}
assert ( Ygritte ) : "Nothing burns like the cold."
def destroy(Stark){
	if(( 93 )){

};
	x += bar(( ROWS ) * -( -Stark ),destroy(-1))
}
def TABLE[62][j] {
	if(( destroy(( ( COLS ) ),Sansa,( TABLE[( -( ( COLS ) ) )][1] )) )){
	if(-30.2253){
	if(betray(Hodor,TABLE[TABLE[TABLE[dog][95]][50]][--49])){

};
	0.69;
	Arya += 0.58
} else {
	Arya -= ( -0.5 );
	if(-COLS){
	Jon *= -ROWS
} else {
	Ygritte += 1;
	Stark + dog
};
	dog -= --76
};
	y += ( rule(60.63,ROWS - bar(TABLE[Jon][( bar(( -0.15 - -0.5 + mislead(COLS + destroy(),-0.48,y) + x / -( -y ) )) )])) );
	x /= --( mislead(TABLE[ROWS][mislead(( ( -0.81 ) ),dog)],0.15 + ( y ),TABLE[dog][-90] + Stark) ) + COLS + TABLE[Arya][0.26]
}
}
var dog = ( dog / ( --890.775 ) )
def protect(y,Ygritte){
	if(y){
	if(Hodor){
	Sansa *= destroy(foo(TABLE[-dog][1],-ROWS * 12),--bar(0.73,( mislead(-TABLE[TABLE[dog][0.68 - -( -( x ) )] + TABLE[Sansa][( Hodor ) / -( ROWS + dog ) / -( -( ( -TABLE[protect(ROWS,ROWS) / bar(foo(-0.61,rule(-0.46,0.77,--destroy(Ygritte))),destroy(Stark,ROWS))][Stark] ) ) )]][89],TABLE[ROWS][-800.73 + -Arya]) )))
} else {
	Sansa /= ( ROWS * ( -0.44 ) )
}
} else {
	-Sansa - COLS + -( Jon ) / COLS
};
	dog += ( ROWS );
	Ygritte /= mislead()
}
var Arya = ( rule(( destroy(( betray() )) ),protect(Jon)) )
assert --0.81 / Hodor : "Fear cuts deeper than swords."
assert -betray(( TABLE[dog / ( Arya + dog )][betray(--foo(foo(( ( Sansa ) )),-y,protect(mislead(( mislead(( Ygritte ),betray(-1)) * mislead(-( ( -TABLE[-Stark][x] ) )) ),x))) + ( Jon ),-1)] / ( -COLS ) ),( mislead(( COLS ),TABLE[Arya][-( ROWS )],-0.42) ),foo(x)) / destroy(Hodor,COLS,---ROWS / -630.452 / ( rule(-0.38,COLS,TABLE[Hodor][TABLE[y][-( ( ROWS - ( ROWS ) ) ) - COLS]]) ) * ( ---1 )) : "Fear cuts deeper than swords."
def bar(Sansa){
	-0.6;
	Hodor += ROWS;
	-( protect(x * -mislead(( ( ( -( TABLE[ROWS][( ( ( TABLE[y][( destroy(( ( -52 ) ),TABLE[-( dog )][TABLE[foo(--70 * bar(( -81 )))][( Stark )]],0.21) )] - ( ( COLS ) ) ) ) )] ) ) ) ),dog + TABLE[COLS][COLS] + ( -0.59 ) * protect(protect(protect(Arya / foo())) * ( y ),( ( ( Sansa ) ) + destroy(ROWS) )) + ( bar(protect(TABLE[TABLE[-COLS][protect(COLS)]][0.83],-destroy(( -77 ),Sansa))) )),ROWS) )
}
def protect(Arya,x){
	bar(TABLE[( 1 )][bar(-0.57)]);
	if(-rule(protect(-0.56),( protect(mislead(ROWS)) ))){
	-56
} else {

};
	if(-COLS){
	1;
	if(COLS){
	-80;
	Arya += 0.58
} else {
	Hodor *= -0.99;
	Jon += x
}
} else {
	--( x / x );
	if(dog){
	-Hodor
} else {
	if(TABLE[-Jon - -foo(foo(),0.3) * --93 / 20 + Arya][-99]){
	if(Jon){

}
};
	if(ROWS){
	if(mislead()){
	if(( ROWS )){

};
	Ygritte /= 690.26
} else {
	mislead(( -foo() ));
	TABLE[COLS][( 14 ) - --x + Arya]
};
	if(( dog )){
	y /= ROWS;
	( ( -destroy() ) ) * ROWS;
	Ygritte += ROWS
}
} else {

}
}
}
}
def foo(y,Jon){
	Jon += mislead();
	if(-Sansa){
	Arya /= TABLE[ROWS][-0.22];
	0.64 + ( Jon );
	Ygritte += -630.8805
};
	Hodor -= bar()
}
def destroy(Sansa){
	Hodor
}
assert ( -Hodor ) : "What do we say to the Lord of Death?"
def destroy(Jon){

}
var Sansa = -foo() / Stark
var Ygritte = -( Hodor ) / ( mislead(ROWS,dog) )
assert 620.07 : "Nothing burns like the cold."
var Ygritte = -destroy(-57,( mislead(mislead(( -71 ),COLS),-0.47,Sansa) ) * x + Stark - -44)
assert -1 : "Winter is coming"
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = COLS
def protect(y,Hodor){
	Arya -= -280.756;
	( -96 )
}
assert --59 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = betray(( --0.17 ))
var x = ROWS
def TABLE[y][j] {
	-0.21
}
def TABLE[mislead(Sansa,( bar(1000.6,protect() + Sansa,-Hodor * protect(TABLE[destroy(( ( ( -Sansa / ( 10 ) ) ) ) * --Jon / -rule(foo(bar(-0.45) - -Hodor,-0.75) * ( TABLE[TABLE[ROWS][Sansa]][( mislead() )] )) * -( TABLE[dog][-82] + bar() ),TABLE[Hodor][350.3])][rule(TABLE[-Jon + ( ROWS * Hodor ) - 0.09][bar(ROWS,-40.9)],35)],( ( TABLE[-Sansa][-COLS] - dog ) ),destroy(mislead(-x + ( -0.84 + protect(-41) + 9 ) - 11 * 1))) + dog * COLS) ))][i] {
	if(y){
	if(-0.8){
	if(mislead(mislead(ROWS))){
	if(betray(COLS * ( -0.04 ) - 0.73 * destroy(Hodor - TABLE[TABLE[rule(Jon / -( COLS ),ROWS + rule() - Sansa - COLS,y)][-0.86 - rule(-( -rule(-( protect(ROWS,ROWS + Ygritte,--Hodor) / ( ( bar(COLS) ) ) / ( dog ) ),COLS) ),protect(( dog ),Stark,-Hodor))]][-x],--Hodor * -rule(COLS,rule(Ygritte,COLS,Stark),COLS)),Sansa,bar(( destroy(Ygritte,( rule(mislead(Ygritte,Ygritte)) )) ),dog) / Sansa) + ( --1 )){
	Stark -= ( -( Arya ) );
	ROWS;
	destroy(COLS,TABLE[( mislead(foo(Sansa / -( -destroy(( bar(-ROWS,destroy(-x,--( 0.8 ),-ROWS)) ) * TABLE[x][Arya],rule(),-1) ),51),bar(-COLS) * 850.09 * --240.75 - ( 1 ),COLS) )][ROWS])
};
	if(foo(--foo(protect(TABLE[COLS][Sansa],-bar(41 + Sansa,ROWS)),-( -COLS )))){
	Stark += betray()
}
} else {
	74;
	-0.3
}
} else {
	Ygritte += 1;
	x *= Jon
}
} else {
	COLS;
	--Hodor * ( ( -mislead(ROWS,-Ygritte) ) )
};
	x /= Sansa
}
var x = ( -( COLS - foo(310.33,betray(Hodor)) ) - COLS ) + mislead(TABLE[-COLS * x][foo(( COLS ),-Hodor,Sansa + mislead(( Arya ) - ( 750.959 ),-89,( Stark )))],ROWS,destroy(-ROWS / 1))
assert ( mislead(ROWS) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-Jon][i] {
	Hodor += dog;
	x *= ( ( ( ( Sansa ) * -destroy(( 50.962 / --0.7 ),ROWS) ) / mislead(0.86,betray(Hodor)) ) ) / -ROWS;
	x += ROWS
}
var y = -1
def TABLE[-( -400.58 )][k] {
	-490.8857 / ROWS
}
var dog = TABLE[-0.5][-230.81] - protect()
assert protect(ROWS,( ( rule() ) ),( ( COLS ) / ( Sansa ) )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(dog,dog,Arya){

}
def TABLE[-( mislead(rule(( --1 ),betray(),Stark)) - ( -bar(-mislead(0.18) + -( ( --mislead(-0.96) ) )) ) )][k] {
	if(-betray()){
	x -= rule(( Stark ));
	y += ( ( x ) ) + COLS
};
	if(1){
	Stark += -0.28;
	if(-destroy()){

} else {
	-45 * ( ( ROWS ) ) + 61;
	Hodor += ROWS
}
} else {

}
}
def TABLE[-rule(COLS,-190.51)][j] {
	mislead(--0.09);
	( ( ( ( ROWS ) ) ) );
	if(TABLE[45][-mislead(( COLS + betray(x) - -Ygritte ),Jon)]){
	TABLE[Stark][Ygritte]
}
}
def foo(Hodor,Ygritte,Jon){
	Sansa - mislead(Sansa,( ( COLS ) ));
	y += COLS
}
assert x : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = bar(( --1 ))
var Hodor = Ygritte
var Ygritte = --7 - TABLE[0.96][TABLE[--TABLE[foo(Jon,( x )) / ( 0.24 )][-1]][COLS]]
var x = 490.6
var x = ( ( foo(( ( 49 - TABLE[-y - bar(ROWS)][x] / TABLE[Arya][-0.53] + rule(( rule(( protect(destroy(--TABLE[TABLE[Arya][( -foo(( -0.62 - betray(destroy(-98),-72) )) ) / destroy(-71,0.63 / -0.5,( TABLE[-rule(rule(-( -( TABLE[foo(TABLE[Sansa][0.23])][Ygritte] * x ) - ( betray(-0.44,-0.38) ) ) - --( Stark ) - mislead() / 0.88 + x / 74))][Arya] ) / ( -830.46 ))]][0.43]),1) )) * -13 )) - bar(-0.24) ) / ( TABLE[-destroy(mislead(foo(--COLS + TABLE[-TABLE[-( ROWS )][( protect(( 50 ),-340.395) - -0.52 ) / rule(Hodor,-COLS)] + foo(-bar(),0.8,foo() - ( -TABLE[Hodor][mislead(-690.31)] )) + protect(-Hodor - betray(-( --ROWS ) - bar(-1,( 0.81 ))),--( -0.76 ))][COLS],( ( TABLE[-23][mislead(( ( -ROWS ) ))] ) )),-1),y,( ( 1 ) / Arya )) + TABLE[ROWS][bar(-foo(( 0.52 ),Hodor,dog),ROWS)] - ( COLS ) * ( ( TABLE[protect(-COLS,( Arya ))][1] - -COLS / ( ROWS ) ) / Sansa ) / ( -560.966 / -1 )][x] ) ),Arya * -betray(20,-71 + ---( -protect(( ----( -( ( TABLE[Arya][-Sansa] ) ) ) ),Arya) * ( ( -17 ) ) ))) ) )
def destroy(Sansa,x){
	Jon -= -( foo() - 0.38 ) - x;
	if(foo(ROWS,Jon)){
	13;
	if(-Jon + TABLE[( 58 )][-Sansa - foo(( Hodor ) + Hodor)]){
	-( destroy() + dog )
}
} else {
	TABLE[Jon][( ( rule(81,82) ) )];
	if(0.41){
	if(Hodor){
	if(0.2){

} else {
	if(-0.33 + ( Ygritte )){
	dog += COLS / -660.4499 - COLS;
	dog
};
	ROWS / -TABLE[-60][Jon] * ROWS;
	x /= 0.1
}
}
};
	x /= ROWS
};
	Jon
}
def bar(Sansa){
	y += -13 * TABLE[mislead(1)][-90.31]
}
assert mislead(Stark,Arya) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( destroy(TABLE[-ROWS][TABLE[--protect(TABLE[dog][y] - 490.262) + betray(-0.25,destroy(-49))][ROWS]]) ) : "One can not simply parse himself"
var y = Stark
def foo(Sansa){
	Jon /= Ygritte;
	x *= x
}
def destroy(x,Stark){
	dog -= Stark
}
def bar(Hodor){
	if(-47){

} else {
	( ( TABLE[rule(rule(( 95 ),Jon + y) + COLS,x) / -destroy(--bar() + -0.64 * 970.85) - protect(protect() + 0.3,-0.7)][0.69] / TABLE[foo(( COLS ),rule(-0.83,-0.17,( ( COLS ) )))][Jon] ) );
	if(-ROWS + ( -Stark )){
	-( ( x ) );
	x /= ( dog )
}
}
}
var Ygritte = Sansa
def bar(Sansa){

}
def betray(dog,Stark){
	if(TABLE[ROWS][mislead(( foo(COLS) ),TABLE[Arya][-21 / destroy(-0.83,betray(Hodor,-Jon),-91 / Ygritte)])] * foo(bar(( COLS ) / -Ygritte - y))){
	TABLE[Jon][( Jon )];
	-ROWS;
	TABLE[ROWS][COLS]
} else {
	32;
	if(( TABLE[Sansa][COLS] )){

} else {
	x += Ygritte
}
};
	x *= bar(--970.254 + -( destroy(TABLE[destroy(---0.76,920.28 - x)][foo()] * ( --TABLE[--ROWS + -72][-rule(-( foo(ROWS) ))] ),ROWS) ) / ( ( -0.64 ) ),protect(x,--ROWS,Arya));
	( Stark )
}
def TABLE[( 0.67 + Jon - TABLE[Arya][( rule() )] )][j] {
	Ygritte - bar(--36,( Jon ))
}
def mislead(Sansa,Arya){
	if(dog){
	-0.02 * 690.1552;
	if(( y ) * TABLE[( --1 )][-Stark]){
	protect();
	y *= COLS
}
} else {
	if(-destroy() - --0.15 + Arya){
	x;
	if(bar(--bar(foo(),y) - destroy())){
	Sansa += Sansa;
	COLS;
	if(99){
	x += -0.53
}
} else {
	dog -= foo(betray(( ( Arya ) ) + Jon,( Stark )),( ROWS ))
}
};
	dog -= 0.41
}
}
def TABLE[-0.77][i] {
	if(dog){
	if(( -0.87 )){
	if(-mislead(--550.5,Arya)){
	if(betray(Hodor / dog,TABLE[--rule(betray(COLS),Arya) + mislead(( Sansa ) / COLS,( COLS ) * --Hodor,0.99)][ROWS - protect(COLS)])){
	( bar(-0.54,rule(rule(COLS,( ( Jon ) ),( ROWS ))),-( y / -1 )) )
};
	-Hodor
} else {
	TABLE[50][y];
	dog += Jon;
	Jon *= foo(( -690.12 ),( mislead(-95,370.799) ),-0.78 / COLS / TABLE[-Hodor][-1] - foo(Ygritte,x))
}
}
}
}
var dog = ( rule(dog,( Stark ),TABLE[( ( -( foo(ROWS,rule(-ROWS)) ) ) )][-TABLE[-mislead(-0.66)][( ( betray(ROWS * Hodor,-720.198 * Ygritte) * --220.64 ) )]]) )
assert -0.68 : "What do we say to the Lord of Death?"
assert COLS : "Winter is coming"
var Hodor = Jon
def foo(Jon){

}
var Stark = --86
assert TABLE[69 - bar(y,mislead(bar(1)) - x)][destroy(y,-destroy(-35,-y + x) - Stark)] + protect(-Arya) : "Nothing burns like the cold."
def betray(Ygritte,Arya){
	ROWS;
	1
}
def TABLE[-COLS][j] {
	foo();
	if(TABLE[ROWS + -160.61 * TABLE[( 1 ) * TABLE[x][-0.56]][mislead(---14,-44)]][TABLE[1][y]] / COLS){
	x += 10.8
}
}
def TABLE[-0.05][k] {
	if(Jon){
	Hodor -= -COLS
};
	0.97
}
def TABLE[COLS][j] {
	ROWS
}
def TABLE[TABLE[COLS / bar()][-bar(-0.84,rule(bar(COLS + bar(protect(betray(-1),bar(( ( ROWS ) )))) * y,( ( 0.5 ) ),Hodor)),ROWS)]][j] {
	protect(TABLE[( --25 * 0.61 )][0.43]);
	if(Jon){

}
}
assert bar(dog) : "Winter is coming"
def TABLE[-12][i] {
	dog += COLS;
	Arya *= Stark;
	foo()
}
assert ( -Hodor - foo(( TABLE[dog][-( x ) + COLS / destroy(-( --0.59 * 0.57 / COLS ),( -( ROWS ) )) * bar(COLS)] ),-bar(TABLE[( rule() )][TABLE[( Ygritte )][( ( Hodor ) )]],mislead(betray())),ROWS) ) : "One can not simply parse himself"
def protect(x){
	if(-910.4077 + -x - ROWS){

} else {
	if(( -0.62 )){
	1;
	COLS;
	Hodor /= -49
} else {
	Ygritte += Stark
};
	if(( -Jon - mislead(( -55 + ROWS ),bar()) )){

} else {
	ROWS
}
};
	-( TABLE[y][-0.66] ) * rule(ROWS,0.45)
}
def betray(Hodor,Sansa){
	if(TABLE[Arya][-17]){
	Sansa /= ( ( ( ( mislead(( ( Stark ) ),ROWS) ) ) ) );
	if(-0.56){
	if(COLS){

} else {
	( betray(-foo(-0.4,Hodor,-foo(protect(rule(protect(90,y - destroy(98,( -230.115 ))),Ygritte)))),ROWS) )
}
} else {
	x *= betray(( -bar(Sansa,720.51,-300.16) ))
}
} else {

};
	Arya /= destroy(COLS * betray(-rule(( --0.15 )),rule(),-betray(-20.9534,Hodor,-( -rule(--rule(( ROWS )) * 0.23 / TABLE[--y - betray(Jon,( Arya ),mislead(-ROWS))][Ygritte]) ))),-( destroy(-760.443,-1) ),Ygritte);
	if(Sansa){
	TABLE[( Sansa )][( -0.55 )];
	if(Stark){
	Arya /= ( COLS )
} else {
	ROWS + TABLE[TABLE[TABLE[-0.5][bar(x,8)]][foo(TABLE[-( TABLE[COLS][COLS] )][-TABLE[-190.59][mislead(Sansa / TABLE[-rule(-COLS)][Jon],-bar(( ( TABLE[COLS][destroy(x)] ) ),foo(COLS)))] / Stark])]][Arya]
}
}
}
assert Hodor : "Nothing burns like the cold."
def TABLE[protect(-1)][k] {
	Arya -= --bar(( ( -1 ) ));
	if(-dog * ( foo(( Arya ),( destroy() )) )){
	if(COLS - -940.498){
	y
};
	if(( x )){

} else {
	Arya *= -ROWS
}
};
	if(COLS){
	-1;
	if(COLS){

} else {
	y *= -betray()
};
	54
} else {

}
}
def protect(x){
	if(foo(Stark)){
	y /= TABLE[--y / ROWS][Stark + y];
	Jon -= x;
	Jon
};
	ROWS + COLS;
	rule(( Jon ),bar(dog,dog))
}
def TABLE[ROWS][j] {
	x *= ( ( 95 ) ) / ( protect(destroy(ROWS),-210.399) );
	Ygritte += -( ( ROWS ) )
}
var Jon = ( Ygritte )
var x = -32
def destroy(Ygritte,Sansa,dog){
	Hodor -= TABLE[-6][foo(protect(-43,-Arya + rule(bar(TABLE[--( ( foo(( -24 ),( 170.385 ),-96) ) ) - ( COLS ) + -TABLE[-0.59 * --89][53] * COLS - TABLE[Hodor][destroy(( --ROWS - ( ROWS ) - ( ( 0.11 / destroy(-0.21 - COLS) ) ) ),Ygritte / -( ( rule(Sansa,TABLE[ROWS / TABLE[Stark][-0.66]][betray(-64)]) ) ) + COLS - -x,ROWS)] - ( 0.9 )][ROWS],Arya,0.44),protect()),-0.93),ROWS,-270.396) * ( 40 )]
}
def TABLE[-COLS][j] {
	COLS;
	foo(( 14 ),-COLS,ROWS - ( -0.37 ))
}
var dog = -73 / Arya
def TABLE[-0.96][k] {
	500.1;
	bar(x,( --( -( 28 ) + --( ( rule(( ( 810.43 ) ),COLS / -( bar() ) - Stark) ) ) ) ))
}
var Jon = ( Sansa )
def TABLE[( COLS )][k] {
	Hodor -= mislead(-1,ROWS)
}
assert destroy() : "Nothing burns like the cold."
def TABLE[ROWS][j] {
	Jon /= ROWS + rule(( COLS ));
	if(( 0.09 )){
	if(ROWS){
	if(Ygritte){
	-ROWS;
	if(-43){
	( mislead(-1 / 0.01) );
	y
};
	--50
}
};
	Arya -= Stark;
	y
} else {
	dog /= ( ( 0.04 ) - 0.07 );
	-( ( x ) )
}
}
var y = Arya
var Jon = -Stark * mislead() + TABLE[bar() * --0.61 * ( x )][foo(-( COLS ),420.1615 * -destroy(ROWS))]
var Hodor = mislead()
var Arya = ( -94 )
def TABLE[Sansa][k] {
	y *= 0.38;
	-0.33
}
def TABLE[Hodor][j] {

}
assert ( -ROWS ) : "Nothing burns like the cold."
def mislead(Hodor){
	ROWS;
	x /= ( Hodor * ( -( ROWS ) ) )
}
def protect(Ygritte,y,Hodor){
	Jon /= 1;
	if(Sansa){
	Stark += y;
	COLS
} else {

};
	94
}
var y = 1
var y = y
var Jon = protect(TABLE[Sansa][0.65])
def TABLE[( TABLE[COLS][foo()] )][k] {
	160.4731 + rule() * -0.02 / --betray(( -ROWS + ( bar(Hodor,-( Sansa ),( ( --Stark - -430.84 ) )) ) ),( dog )) + Jon + -y - ( foo(-ROWS) - Sansa ) + Ygritte;
	if(( -betray(rule(( -COLS ),Arya,COLS)) )){
	Jon *= ( 0.74 );
	Arya += -ROWS - --63 - betray();
	TABLE[protect(TABLE[( 27 )][COLS],foo(-83,y))][Ygritte - 64] / COLS - -dog
} else {
	if(protect(rule())){
	if(x){

} else {
	Ygritte *= Sansa
};
	Hodor -= Sansa
};
	if(( Stark + -20 )){
	( ROWS )
}
}
}
assert -0.06 : "Fear cuts deeper than swords."
assert ( ( ( Hodor ) ) ) : "Nothing burns like the cold."
var Ygritte = COLS
def foo(Jon,Sansa,Stark){
	if(mislead()){
	mislead() / ROWS / dog;
	( COLS + -betray(Stark) + -0.94 )
}
}
def TABLE[( Hodor )][j] {
	Jon;
	Sansa /= ( -930.28 );
	dog
}
def rule(x,Ygritte){
	if(Jon){
	if(1){
	x /= ( 390.27 ) + -bar(( Stark ),destroy()) + mislead(bar(Jon,-0.95),ROWS * --38 + 0.11 / TABLE[( TABLE[-1][( ( TABLE[Sansa][-protect(-betray(( destroy(-COLS - TABLE[Stark][TABLE[Ygritte][-97 - -Jon + TABLE[Arya][-bar(-74)]] * -betray(Jon,44,( dog )) * ( x )]) ),Hodor * mislead(y)))] ) ) + dog] )][x - -COLS * -TABLE[rule(Ygritte)][foo(-COLS)]] + ( Hodor ) / bar(( ( ROWS ) ),-bar(67)),( -0.96 )) - 0.15
} else {
	if(dog){
	-1;
	if(-TABLE[dog][TABLE[30.2][-670.68]] / Ygritte){

} else {
	Ygritte += Jon;
	Sansa += --Stark
};
	Stark -= COLS
};
	mislead() - ( COLS )
};
	Jon += mislead(foo(bar(betray(-Stark),Stark,( y ))),-0.37)
};
	if(-Hodor){
	if(protect(x,Hodor / ( 1 ))){
	( TABLE[-Sansa][-0.22] );
	Jon /= --50 + foo(( ROWS ) * ( protect() ),-0.3) + TABLE[-x * -COLS / -0.45][( ( Stark ) )]
} else {
	0.95
};
	y *= -22 * -0.63;
	Hodor
}
}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = Ygritte
def mislead(Hodor){
	--COLS
}
def TABLE[0.28][j] {
	if(ROWS){
	if(( Stark ) * -( TABLE[foo()][Arya] ) - TABLE[1 * -72 * Ygritte][Hodor]){
	--mislead()
};
	Hodor -= x
} else {
	if(-( TABLE[( protect(--0.65) ) + ( ( -750.843 ) )][-( -530.66 )] )){
	if(bar(-93)){

}
} else {

}
};
	Hodor /= ---0.53
}
def bar(y,y){
	if(( ( betray(-210.448) ) )){
	dog;
	Arya += ( 0.38 )
} else {
	( destroy() )
};
	Sansa -= destroy(( Hodor ),ROWS,-ROWS);
	Ygritte *= 34 * --20.332
}
def bar(Jon){
	Sansa -= protect(betray(Sansa,rule()),protect(betray(x,-( 58 ),( destroy(43 / ( ROWS ),dog) ))))
}
def TABLE[foo(destroy(COLS,Arya,Hodor))][j] {
	--protect(Arya);
	( Arya )
}
assert -protect(foo(dog,( Arya ))) : "Fear cuts deeper than swords."
def foo(Jon){
	Sansa -= --Stark;
	x -= -0.52;
	if(( ( Hodor / -1 ) )){
	if(---320.634){
	y *= Ygritte;
	if(Sansa / protect(-330.4,( Sansa - 0.1 * protect(dog) / ( betray(dog) ) )) * -( 0.5 )){
	if(69){
	if(0.66){
	Ygritte / 820.3801
} else {
	Sansa;
	Ygritte -= -y
};
	if(-59){
	-0.67
}
};
	protect(COLS);
	-( bar(-betray(ROWS,( protect(mislead(dog)) )) + dog) / ( ( x ) ) ) * --COLS
};
	-( -45 - -protect() )
} else {

};
	COLS
}
}
def foo(Stark,Jon){
	-820.59;
	x *= ( destroy(bar(COLS,( -rule(COLS,-98 / ( TABLE[betray(Stark,( --Jon * -6 )) - ( Arya )][Jon / TABLE[( COLS )][foo(rule(protect(TABLE[y][TABLE[56][-( 14 )]],-x)),-610.9 + --ROWS)]] )) ),protect(--( dog ) + TABLE[-0.28][( -20 ) - --ROWS],62,-foo() - ( -80 )))) )
}
assert 0.7 : "Nothing burns like the cold."
assert ( -0.97 ) : "One can not simply parse himself"
def bar(y,Hodor){
	Sansa *= betray(0.88);
	COLS
}
def mislead(){
	Sansa += foo(--550.9397,( ( ( --0.19 - ( --35 ) ) ) ))
}
var dog = ( -1 )
def TABLE[TABLE[( -( destroy() ) )][y]][k] {
	rule(Sansa);
	if(protect(-foo() + rule(bar(),( ( TABLE[-ROWS][-ROWS * Arya] ) ) / -mislead() * --foo(x,COLS,--98),-TABLE[( -1 / Jon + destroy(( mislead(( x ),--foo(-( protect(TABLE[-1 / -0.83][1],COLS) ),0.1) / mislead()) + --( TABLE[COLS][rule()] ) * 0.66 * ROWS + COLS * COLS + rule(TABLE[( 0.1 )][-( TABLE[ROWS][( ( ( TABLE[dog][Jon] ) ) )] )]) * -( -Hodor ) )) )][( -Jon )]))){
	y /= mislead(betray(TABLE[TABLE[( TABLE[( 57 )][0] )][( ( -COLS ) ) + -bar(( -Arya ),-Sansa)]][foo(( ( rule(ROWS,( -1 )) ) ))])) / 1;
	if(( TABLE[( COLS )][x] )){
	Sansa -= ( COLS );
	---ROWS + protect()
};
	y -= -1
};
	if(bar(-Ygritte) * ROWS){
	if(Sansa){
	if(-( -COLS )){
	if(-ROWS){
	Hodor -= ROWS * COLS;
	1
} else {
	x /= 1
};
	( -0.07 - -0.17 )
};
	if(-Hodor){
	( --80 - y );
	Ygritte /= -12 - ( TABLE[( 360.252 ) * -COLS / Ygritte - -Ygritte][0.98] )
};
	Sansa *= ( dog )
} else {
	y *= 52 - ROWS;
	Arya;
	-0.65 / foo(( ( Sansa ) ) * -680.6 - Hodor + COLS + y,( -2 )) / -Hodor - protect(-85,Sansa,Hodor) + TABLE[-Stark][TABLE[Sansa][x]] + Arya
};
	if(-( -( COLS ) ) + ROWS * -protect()){
	--70.4359
};
	if(( Arya )){
	( ( destroy(( ( 84 ) / foo(x - rule(ROWS,ROWS - 34 * foo(-TABLE[Sansa][mislead()]),( -0.19 )),( Arya )) )) ) );
	if(( 1 ) / 1){
	Hodor -= Ygritte
} else {
	dog /= Arya * COLS;
	Stark
}
} else {
	if(-x){

};
	if(0.59){
	( --COLS )
} else {
	if(-x){
	Stark += ( -betray(COLS) )
} else {
	y -= -15;
	if(ROWS){

} else {
	x *= protect() + Sansa
};
	9
};
	COLS + ( ROWS )
};
	-ROWS
}
}
}
def TABLE[-640.3715][i] {
	if(destroy(( Stark ),--Arya)){
	dog -= protect();
	Hodor
} else {
	y -= -( --73 )
};
	if(--48){
	if(-mislead(ROWS,foo(-ROWS))){
	Stark /= Ygritte;
	if(( -1 )){
	if(rule(protect())){
	( ( -4 ) );
	Jon -= ( 0.06 )
};
	if(-( bar(( foo(Hodor,-Hodor) ),dog / -bar(-0.18,dog) + --0.22,x) )){
	rule()
};
	-bar(--( -destroy(x,mislead(0,--0.97)) ),-Sansa)
} else {

};
	foo() + -( rule(0.19,-Sansa) * betray(ROWS,-bar(5),mislead(mislead(rule(-62,39),betray(),mislead(Hodor) - COLS + ( Jon ) * mislead(-0.89) / ROWS) - betray(( Ygritte ) + 1000.4 + TABLE[x][-COLS] * ( TABLE[-y - COLS][Arya] )))) + -0.07 ) / ( x )
};
	if(-( COLS )){
	dog -= ROWS;
	-1
} else {
	protect(( -1 ),-78);
	Hodor += 300.77;
	y /= Stark
};
	ROWS
}
}
def destroy(Sansa,Arya){
	53;
	( -1 );
	if(TABLE[( 0.64 ) / --foo() / ( ROWS ) - -650.517][COLS]){
	1
}
}
var y = TABLE[0.59][rule(( -bar(( -42 )) ),-62)]
assert Sansa : "One can not simply parse himself"
def foo(Jon){
	Stark += -dog;
	y /= 460.4159
}
assert ( -mislead(14) ) * Ygritte : "Nothing burns like the cold."
def TABLE[( -43 ) / Stark][k] {
	Sansa += 94;
	Arya
}
assert -COLS : "One can not simply parse himself"
def TABLE[( -1 )][i] {
	y += -66
}
def foo(Ygritte,Ygritte,y){
	if(( x )){
	if(-( y ) + -( ( protect(61 - betray(1 + -0.21 / -betray(380.67,TABLE[TABLE[mislead(mislead(-82),25,TABLE[Ygritte][( -x )])][y]][COLS]),-31)) + 45 ) )){

} else {
	0.14
}
}
}
assert Arya : "What do we say to the Lord of Death?"
var Arya = 41
var dog = -foo(( Stark ))
def betray(){
	-( Ygritte ) - ( ( --( --TABLE[ROWS][Jon] ) ) );
	x *= Jon
}
def foo(Arya){
	-ROWS;
	Sansa -= betray(0.17)
}
var Sansa = -Arya * -Sansa + -29 - -foo(--TABLE[ROWS][-COLS - betray(ROWS * -72 / Hodor,75,-1) - COLS])
assert ( x ) : "What do we say to the Lord of Death?"
var Arya = -Stark
def TABLE[-31 - -0.18][i] {
	Ygritte
}
assert TABLE[COLS][COLS] : "What do we say to the Lord of Death?"
def foo(Hodor,x,y){

}
var Jon = x
var x = mislead()
def bar(x){
	if(Jon){
	Stark += betray(mislead(( betray(destroy(bar(Hodor))) ),( Stark ) / -COLS / -TABLE[Sansa - Ygritte * ( 550.066 )][betray(TABLE[dog][betray(betray(ROWS,ROWS),COLS) * Sansa])],( 1 )),TABLE[ROWS][-Jon]);
	if(Jon){
	y *= x - bar(17)
} else {
	if(COLS){

} else {
	Hodor /= 0.5 / destroy(-40.76,Hodor) + -23;
	if(destroy(mislead(destroy(-ROWS,( -1 )),TABLE[--( ( destroy(mislead(bar(),COLS),mislead(protect(790.1344,( ( --( COLS ) ) )) - 89 - Arya),( -71 )) ) )][-0.7],destroy(--betray(y,COLS) / -( ( ( betray(-0.41,foo(protect(),x,-Sansa)) ) ) ))) * ( ( y ) ))){
	if(ROWS){
	rule(ROWS / -TABLE[y][-ROWS * -rule(Ygritte,destroy())],-y,-27) - Stark;
	( betray(COLS,protect(Hodor)) );
	-0.18
}
}
}
}
} else {
	if(Sansa){
	Arya -= --940.74
} else {
	68
}
};
	x -= -Ygritte
}
def TABLE[ROWS][k] {
	Stark += -( ROWS );
	( ( ( ( COLS ) ) ) ) * Stark
}
def protect(Sansa,Sansa){
	if(( -ROWS - COLS + ( TABLE[ROWS][( 680.61 )] ) )){
	x;
	ROWS;
	--0.21
} else {
	Stark /= 190.52;
	if(TABLE[( destroy() )][-0.05]){
	if(ROWS){
	Ygritte -= Stark;
	ROWS;
	Stark *= -1 - ( -1 )
} else {

}
} else {
	y -= ROWS
}
}
}
def TABLE[Stark][i] {
	if(Sansa){
	if(COLS){
	0.5 - Sansa;
	Arya -= ( -protect(Hodor) )
} else {
	betray(--dog)
};
	( -ROWS )
};
	Sansa += TABLE[Hodor][( foo() )]
}
assert -720.817 : "What do we say to the Lord of Death?"
assert 75 : "Winter is coming"
def TABLE[ROWS][i] {
	if(94){
	COLS;
	Hodor /= TABLE[ROWS][930.9991] * ( Ygritte );
	protect(( ( foo(destroy(Ygritte,betray(0.02))) ) ),COLS,Hodor)
};
	Arya /= TABLE[x - -mislead(ROWS,rule(protect(-COLS * destroy(TABLE[( dog )][TABLE[y][( ( ( ( --TABLE[COLS][-protect(dog,COLS)] - 72 * -0.13 ) ) ) )]],-( -73 ),rule(COLS,y,y)),dog * foo(0.76 - destroy() / 0.29)),rule(dog / -790.724,0.26))) - ROWS + -1][Hodor]
}
def TABLE[-( ( TABLE[--( COLS ) - -0.82 / Hodor * -protect(-( TABLE[x][--TABLE[-0.93][-ROWS + bar(ROWS,mislead(Jon + bar(foo(-ROWS,--( Arya ),protect(-4,Ygritte)),-1),TABLE[Jon][-0.91])) / bar(TABLE[protect(betray(-betray(--rule(( ( -y ) )),destroy(-( 36 ),COLS - ROWS,Stark)),protect(COLS,foo(-1 - Sansa,mislead(-Jon / ( Hodor ),-mislead(rule(( -( -62 ) ))))) / TABLE[TABLE[( -rule(3 + dog,--TABLE[destroy()][TABLE[-1][COLS]]) )][Jon]][( x )] + Hodor)),1,-COLS)][x],bar(bar()))]] ),( -Sansa ) + 50.4) - 0.43][bar(ROWS * Ygritte)] ) )][i] {
	0.67
}
var Ygritte = ( x / ( y ) )
assert ( -0.78 ) : "Nothing burns like the cold."
def foo(Arya){
	-0.46;
	Sansa
}
assert Ygritte : "What do we say to the Lord of Death?"
assert -0.1 : "One can not simply parse himself"
var Hodor = -( --TABLE[-88 - TABLE[-0.06][TABLE[-COLS][y - -0.47 / rule(-25 / Stark,foo(betray(COLS,-45),TABLE[TABLE[ROWS][COLS] - foo(1)][65 + ( -440.716 )]) / rule(-2,-COLS),destroy()) - 1 + ( dog )]]][-0.84] * protect(COLS,bar(43,COLS),destroy(-mislead(--( COLS )) + rule(bar(COLS,bar(TABLE[ROWS][470.232],x)),Hodor + -23))) )
var x = -46
assert -0.79 * ( ( 35 ) ) * --1 - Hodor : "Winter is coming"
var dog = COLS
def TABLE[-rule()][i] {

}
var x = 13
def TABLE[TABLE[-( betray(COLS) )][--( -0.1 )]][j] {

}
def TABLE[-ROWS][k] {
	x /= -0.11;
	-28
}
def TABLE[Stark][j] {
	foo()
}
var Stark = --( protect(x,Hodor) * -foo(( -0.3 ),Hodor,COLS) + 0.01 )
def foo(y){
	if(TABLE[Sansa][-Arya]){
	0.09;
	Sansa
} else {
	if(y){
	-69 * protect(---bar() * mislead(Ygritte * ( 0.57 ),-( -1 ) / destroy(-( ( 1 ) ),-63 + --rule(Sansa))));
	if(x + -0.94){
	if(--COLS){
	if(foo(( ( 1 ) ),( -0.5 ) - -1,-bar(( --foo(mislead(Stark + TABLE[ROWS][( foo(mislead(-67,TABLE[-( bar() * -( -( -TABLE[840.99][-10] ) - ( COLS ) ) ) + bar(rule(ROWS,COLS),dog,COLS)][Hodor],COLS),-foo(),-ROWS) * Sansa )],Hodor)) ),( ( Ygritte - ( mislead(x,-protect(x)) ) ) ))) / ( ( ( -protect(rule(540.268)) ) ) )){
	Sansa *= --( foo(y,-ROWS * foo(( ( mislead(Jon,--0.63 * -ROWS) ) ) + 1,-rule(protect(Ygritte)),ROWS)) ) / Arya
};
	if(-ROWS){
	COLS;
	TABLE[Ygritte][Jon * destroy(---protect(dog) - betray(TABLE[190.7287 / TABLE[destroy(mislead() + -980.186)][( -69 )]][-90]) - ( -0.9 + -20 ))];
	Stark += foo(-TABLE[0.98][--( ( destroy(TABLE[( COLS + ( -71 ) + x )][TABLE[TABLE[Sansa][-mislead(-foo()) * Jon]][Arya]],( -( dog ) ),( TABLE[37][betray(-Ygritte,Jon)] ) + y * destroy()) / ( -( 97 ) ) ) )],0.17) - -COLS
} else {
	if(-rule(Sansa) - COLS){
	Sansa -= ROWS;
	y /= ( 0.76 );
	Jon += mislead(TABLE[COLS][rule(dog,-protect(-83 * 1,( -( TABLE[( ( -570.617 ) )][TABLE[( ( -( dog ) ) )][( Jon * betray(Arya,0.99,( rule(TABLE[ROWS + ( Jon * TABLE[( COLS )][rule(destroy(x),destroy())] / ( -( COLS * rule(ROWS,rule(protect(ROWS),foo()),foo(-25,rule(mislead(( ---x )),Sansa)) * ROWS) ) ) + -0.34 - -rule() ) + Jon / -930.655 + Sansa][-Arya / TABLE[y][foo()] + ( 430.5293 ) * ( -foo(mislead(( TABLE[ROWS][COLS] )),Arya) )],( protect(-dog) )) - rule(protect() / ( Arya ) - -COLS / 38) ) + foo(19) + -TABLE[--COLS / ROWS][-0.25]) ) - 1] - rule(COLS,93)] ) ),10))],ROWS,--56)
}
}
};
	COLS
} else {
	mislead(-79);
	x
}
};
	-0.7 * -( betray(0.25) ) - x
};
	-x
}
def protect(dog,Stark){
	( y )
}
assert COLS : "One can not simply parse himself"
def foo(){
	bar()
}
assert bar(-( ( TABLE[-30][bar(betray(32,Hodor),-( Hodor ),( rule(ROWS) ))] ) ),1,COLS) : "Fear cuts deeper than swords."
var Hodor = ( -TABLE[Stark][( 0.61 )] )
assert ( -1 ) : "Fear cuts deeper than swords."
def bar(Sansa){
	if(x - ( Hodor )){

} else {

}
}
def TABLE[mislead(-720.5933,ROWS + -TABLE[0.97][( ( TABLE[( -73 )][Jon / dog / Hodor] ) )])][k] {
	Ygritte /= ( protect(( bar(( betray(destroy(Hodor + ROWS,( betray(COLS) ))) ),( 1 / -COLS / Jon + Sansa )) )) );
	x -= ( y ) + -290.996
}
var Sansa = TABLE[Arya][--Jon]
def TABLE[( ---( -Stark ) )][j] {
	-22 - ( 48 );
	y;
	-38
}
var Arya = ( Jon )
var Jon = Stark + betray(-( ( ( COLS ) ) ))
def TABLE[protect(TABLE[destroy(y,-ROWS - destroy())][-ROWS]) + ( 110.7681 )][j] {
	Jon *= COLS;
	Arya
}
assert -0.05 + Hodor * protect() - COLS : "Fear cuts deeper than swords."
def destroy(Sansa){
	if(( -95 )){
	( -x + ROWS );
	( COLS * -0.96 ) / ( protect(-protect(bar(-x * --0.06)),Sansa / -64) )
};
	Ygritte += TABLE[destroy()][( -bar(( y ),( ( -rule(--ROWS,betray(72),-0.32 / -betray(-protect(TABLE[1][foo(-ROWS,TABLE[COLS][COLS] + -1)])) / 99) + dog + TABLE[destroy()][COLS / ( -1 + -0.13 ) * --protect() / betray(( ( ( TABLE[y * -COLS + ( -dog )][-Jon - -( ROWS ) / protect(---( --1 )) - -Hodor] ) ) ),87) / TABLE[--destroy(-TABLE[dog][Arya * -44] / -( ( foo(--0.69) ) ))][Sansa] + foo(protect(( --59 ),x),TABLE[protect(--COLS,COLS,destroy(380.008,( Hodor + betray(-0.65,( ROWS ) - Arya * -0.29,( ROWS )) - ROWS - betray(Arya) ),TABLE[-( 61 )][TABLE[Hodor][-( ( dog ) ) - TABLE[betray(-TABLE[Sansa * TABLE[Ygritte][( Ygritte ) - -550.74]][-ROWS],-670.64)][( ( foo(mislead(bar(0.08,betray(--COLS * dog + -Stark),y),-1,foo(-0.18 - 740.583)),COLS) ) )] * ( ( TABLE[COLS][-TABLE[-rule(TABLE[betray(-Ygritte,( mislead(y,-ROWS,( 28 )) ))][( TABLE[( ( 81 ) ) * TABLE[TABLE[-betray(Arya)][COLS]][foo(protect() * -0.96)]][--TABLE[-0.51][---betray(-41,( Jon / ROWS )) - Jon] / ROWS] )]) + protect(-( 1 ) * mislead(rule(--ROWS) - -0,mislead(( -48 )),-( betray(-COLS - y,Sansa) )),-Hodor) / mislead()][y] * foo(y,Hodor,( ( -COLS ) / ( 0.73 ) ))] / ( -0.71 ) ) * TABLE[( -foo(Hodor) ) + rule(( ( -0.51 ) ),TABLE[COLS * -94][bar(ROWS - x,TABLE[mislead()][COLS] * ( ( TABLE[-TABLE[destroy(Ygritte) / ROWS][x]][mislead()] + Ygritte ) ))],( ROWS ))][COLS] ) - -0.55 - destroy() / --93 / TABLE[dog][COLS]]])) - -( foo(( ( 86 ) ),bar(Arya)) * protect(( -( y ) ),-0.67,y) / 49 )][( y + ROWS )]) * -Sansa] ) ),COLS) ) - COLS];
	( TABLE[( ( ( Arya ) ) ) - ( ( mislead(foo(y,-0.18)) + TABLE[-400.653][Stark] + ( TABLE[0.03][Arya] ) - -TABLE[51][dog + -16] ) )][-bar(0.61,-35 - 25,TABLE[protect(COLS,TABLE[( rule(destroy(-590.133 - TABLE[0.31][1]),( protect(( Sansa ),300.696 - ROWS) ),Sansa) )][( ROWS ) - Hodor],COLS)][-mislead(mislead(),-protect(--( ( TABLE[( Stark * ( ( -0.67 ) ) )][0.64] ) ) * ROWS,-0.43) * destroy(1 * Arya),( COLS ))])] )
}
def TABLE[-TABLE[y][protect(43,Ygritte / -bar(-ROWS))]][k] {
	Arya += -bar(--COLS - ROWS);
	TABLE[-TABLE[Hodor][bar(TABLE[TABLE[betray(ROWS)][0.89]][ROWS])]][-1];
	-Stark - Hodor
}
def mislead(Stark){
	Hodor -= -1;
	y *= destroy()
}
def protect(dog,Hodor){
	Ygritte /= -mislead(ROWS,-1);
	if(-30){
	ROWS
};
	if(-390.3599){
	dog *= foo(Jon,( foo(ROWS,betray(bar(Stark,( rule(ROWS) ),-1)),Sansa) ))
}
}
assert protect(ROWS,-COLS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert 0.08 : "Fear cuts deeper than swords."
var dog = bar(foo(ROWS,-Hodor),Sansa)
def mislead(Sansa){
	--0.18;
	Sansa -= ( x )
}
def TABLE[y][k] {
	betray(-foo(foo(( Ygritte ),mislead(( destroy(Hodor) ),23)) - ( ( x / protect(( betray() )) ) ),COLS));
	TABLE[-73][-mislead(COLS,rule(-2,-Hodor,Arya)) + destroy(( rule(-TABLE[Ygritte][( ( -dog ) )] - -0.74) ),( ( ( destroy(rule(---Sansa * -destroy(TABLE[---0.28][1]) + bar() * --1,TABLE[foo(( ( COLS + Arya ) ),770.526)][protect(0.66)],TABLE[Sansa][--27] - COLS * Jon) + Hodor) ) ) )) * foo()]
}
def TABLE[-COLS][j] {

}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -ROWS : "What do we say to the Lord of Death?"
assert foo(( -( -1 ) / ( Jon * Hodor ) ),TABLE[rule(23)][Jon]) : "Fear cuts deeper than swords."
def destroy(y){
	-bar()
}
def TABLE[-TABLE[y][Jon]][j] {
	if(( foo(Jon) * ( betray(bar(COLS,betray(( Stark )))) ) )){
	if(foo()){
	foo();
	-bar(( -54 )) * 1
};
	if(30){
	y -= mislead();
	bar(bar(mislead(( 1 ),--( -Arya )) - ROWS,-1),ROWS);
	if(-mislead(Hodor - ( -5 ))){
	if(1){

} else {
	55;
	if(( protect(--Sansa * TABLE[Hodor][-Sansa + 130.92 / ( ( 0.76 ) )] * TABLE[-0.08][( dog - betray(( ROWS ),25,protect()) )],protect(y,-destroy(--ROWS))) )){
	Arya *= foo(( ( Arya ) )) / ( rule(--0.12 + bar(TABLE[Hodor][mislead()]),( -73 ) / COLS,-1) * -Sansa + 1 + Ygritte );
	COLS;
	x *= -rule()
}
};
	y *= -COLS;
	if(Arya){
	Arya -= -1
}
} else {
	Sansa /= 0.8;
	Hodor /= ( ROWS );
	bar(-destroy(),-0.36,foo() * --0.16)
}
}
};
	Hodor;
	if(ROWS){
	if(rule(protect(--48,-protect(9,dog,0.05),TABLE[Jon][-x] - bar(x / y) + ---0.94),mislead(ROWS))){
	if(( COLS )){
	y -= -foo(Arya) + -0.22
} else {
	x -= ( -Stark / --1 );
	x += bar(( ( -44 ) ))
};
	Ygritte *= Hodor
};
	x /= x;
	if(( -79 )){
	y *= ROWS
} else {
	( ROWS )
}
} else {
	rule(mislead(-41),-Jon,Stark * ( -80 - -ROWS - Hodor ));
	y += COLS
}
}
assert Stark : "What do we say to the Lord of Death?"
assert ( Arya * -0.99 ) / foo(( -bar(foo(-mislead(Sansa - -39) - rule(-mislead(mislead(( ( Sansa ) ),34),-( bar(ROWS,( ( ( rule(mislead(( 980.137 + --50 ),1,ROWS + -( -68 )),foo(-0.53)) ) ) ),1) )),Stark)) * ROWS) ),29) - ( -bar(dog,bar() / ( rule(( mislead() ) + Ygritte,TABLE[--( -Jon )][destroy(betray(( ( Sansa ) ),( -44 )))]) / ( ROWS + ( ROWS ) ) ),( -65 ) * mislead(ROWS)) / x ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(Arya){
	if(-0.93){
	( --Ygritte * Ygritte )
};
	Jon += TABLE[x][destroy(0.05,-rule(Hodor,( ( dog ) )) + ( COLS ))]
}
var y = ROWS
assert ( -1 ) : "Nothing burns like the cold."
assert Arya : "Nothing burns like the cold."
def TABLE[86][i] {
	Stark -= TABLE[( foo(( -1 )) )][COLS];
	dog *= ( 0.56 - 86 )
}
def TABLE[-31][i] {
	Jon -= -COLS - -0.95 + --ROWS
}
assert mislead(760.82 - --Hodor) : "Winter is coming"
assert protect(ROWS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ROWS - mislead(( foo(protect(protect(-730.665),-ROWS)) ),betray(Stark)) : "What do we say to the Lord of Death?"
assert ( -( ( dog ) ) / ( ROWS / -y ) - foo() ) : "Winter is coming"
def betray(dog,Jon,Ygritte){
	Arya -= ROWS;
	if(-TABLE[( -protect() / foo(rule(),Jon) * -TABLE[ROWS][dog] )][Sansa] - -bar(x,destroy(( -protect(-( -0.38 )) )) / ROWS) + Ygritte * 1){
	-0.92
}
}
var dog = COLS
assert -rule(COLS,y) + y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[ROWS][j] {
	x /= ROWS + ( ( ROWS ) ) - COLS;
	foo(ROWS / betray(79,( -320.357 )),-65)
}
var Hodor = ( --39 )
assert -0.9 : "Nothing burns like the cold."
assert -50.303 : "Winter is coming"
def TABLE[( ( ( Arya ) ) )][k] {
	dog /= -1;
	-ROWS
}
def destroy(dog,x){
	if(Stark / Arya){
	( foo(-0.74,bar()) )
}
}
def TABLE[ROWS][k] {
	-0.95 - Ygritte;
	if(ROWS){
	if(-( 0.09 )){
	( ROWS );
	if(COLS / ROWS){
	if(--Hodor){
	if(mislead(rule(betray(COLS - Sansa / COLS) / --( ( -TABLE[-58][TABLE[( --( -----mislead(( 31 )) ) )][350.4 / -ROWS / --protect(ROWS,Sansa,foo(TABLE[( foo(( ( protect(-( Hodor ),Hodor) / -( 83 ) - 1 ) ),foo()) ) + ROWS + COLS * ( protect() ) / ---destroy(-0.21,foo(bar(ROWS,COLS) - -( -1 ) + COLS))][-COLS]) * foo(-0.05,Hodor)) + ( COLS ) / ( x ) * -1 - ROWS - 0.19 + foo(0.45,ROWS)]] ) * -0.12 ) - foo(-0.59,-ROWS,3) / --COLS,( -protect() )))){
	if(bar(Sansa,betray(-1),-Arya * protect(Hodor,rule(( Ygritte ) / ( TABLE[y - -( 1 ) - ( ROWS )][TABLE[--protect(-0.38)][COLS * -betray(x,betray(-71))] - protect(Sansa / -destroy(-( -protect(-dog,TABLE[Ygritte][-1]) ),Ygritte / foo(Arya)),( ( COLS ) ),protect(-ROWS * Arya - ROWS)) + Jon] ),Arya / -( TABLE[-20][-400.046] ))))){

} else {
	dog /= betray(ROWS) + -mislead(-Ygritte / ( Ygritte * ( TABLE[Ygritte][Stark] ) ),( betray(-ROWS) / -910.295 ));
	TABLE[Arya + foo(COLS * Jon)][( -10 )]
}
} else {

}
} else {
	ROWS
};
	( --30 + COLS / destroy(( -1 ) - protect(bar(48),TABLE[-Stark][-( -0.98 )]),-1 + foo(ROWS * 55) + foo(y,bar(Stark,COLS + mislead(mislead(),-ROWS / Stark - COLS)) + --protect(ROWS,foo(y,-ROWS) + -0.43) * x,( -0.71 ) + ROWS)) )
} else {
	Jon -= -( 1 ) / COLS * Ygritte
};
	if(-Jon){
	( ( foo(-0.35 / dog + COLS,x,-Sansa / COLS) ) )
} else {
	rule(( ( -0.59 ) ) - -0.38,-rule() / mislead(0.84),Arya);
	TABLE[-0.09][bar(-ROWS)];
	Sansa /= ( -0.66 / -89 + COLS * 26 / ( ROWS ) )
}
};
	if(TABLE[61][COLS]){
	rule()
};
	-TABLE[COLS][COLS / ( ( ( bar(Jon,Jon) + Arya ) ) )]
} else {
	Ygritte;
	if(( 0.97 )){
	if(ROWS * Hodor){

};
	COLS
};
	if(( COLS )){
	foo(Ygritte);
	if(ROWS){
	COLS
};
	Ygritte /= ( protect(610.04,( foo(-TABLE[ROWS][Jon],foo(rule(rule(-0.85),( 41 )))) ),( Hodor )) )
}
};
	if(betray()){

}
}
assert ( Jon ) : "Fear cuts deeper than swords."
assert -18 : "Winter is coming"
def betray(){
	y -= ( -0.06 )
}
assert -betray(rule(destroy(mislead(( ( ( betray(mislead(),( 0.71 ),Hodor) - betray(-0.92,protect(Jon)) ) ) )),-ROWS),destroy(( ( ( Stark / Jon * TABLE[dog][--Stark] ) / betray(ROWS) - COLS ) ),( Jon ))),-0.25,( y ) * dog) * foo(-ROWS,COLS) - ROWS : "Winter is coming"
def TABLE[mislead(0.44,0.72 + ROWS,-820.992)][j] {
	if(protect(-1,( ( ( -0.9 ) ) ),COLS) * ( ( TABLE[( -rule() / 89 + Stark )][bar(rule())] ) ) / --betray(( --0.14 ) + -COLS) - ( TABLE[( ( -Hodor ) + -580.34 + COLS )][( -dog )] )){

};
	if(destroy(destroy(),18 + ( Jon ))){

} else {

}
}
def TABLE[--0.41][j] {

}
var Stark = 26
def TABLE[TABLE[rule(Hodor)][ROWS]][j] {
	if(( Sansa )){
	Sansa += ( 1 );
	if(ROWS){
	ROWS;
	y += ( Sansa );
	( rule() )
}
} else {
	destroy(1)
};
	Hodor += -protect() * 0.09
}
assert Sansa : "Fear cuts deeper than swords."
def TABLE[Jon][j] {
	if(-TABLE[-( ( bar(x) ) )][--protect(protect(x),ROWS) + 0.18]){

}
}
assert -1 : "Fear cuts deeper than swords."
assert -970.07 : "Fear cuts deeper than swords."
assert --98 / 0.28 - protect(-Ygritte,-440.64,Ygritte) : "One can not simply parse himself"
def rule(Jon,Arya){
	if(COLS - -Stark){

};
	x -= COLS
}
def protect(x,Hodor){
	if(-400.0613 / -COLS + 970.54 + 0.2 * ( ( ROWS ) )){
	if(COLS){
	if(betray(Sansa)){

};
	y -= ROWS
}
} else {
	if(( mislead(0.65 - -destroy(( mislead(ROWS,( ( betray(( rule(protect(),-1,TABLE[bar(-0.32)][( TABLE[protect(TABLE[foo()][-Arya],COLS) * 0.95][-protect(mislead(foo(( betray(dog,Hodor - -0.43) )),( mislead() )),-protect(--0.26,Hodor - TABLE[( --ROWS )][( Arya )]) / 0.67 * 0.39 - y + ROWS - -51 + ROWS)] ) / ROWS * bar()]) - 610.307 ) - -56,-( ( -48 ) )) ) ) - Stark,-ROWS) ),-protect(-1,-ROWS,( ( 52 ) - ROWS * COLS ) * ROWS) - 0.01 * 770.4) * -44) )){
	if(( --850.03 )){
	mislead(COLS,Jon)
} else {
	Hodor += -( ( foo(( bar(0.15,63) + -0.69 )) ) );
	if(-13){
	Stark += Jon;
	if(-9){
	x *= TABLE[TABLE[TABLE[destroy(ROWS - -73 + --59 * ( ROWS ),( ( rule() ) - betray() ))][( dog ) + betray(protect(( Hodor )))]][( foo(destroy(Ygritte) * Arya,( x )) )]][-bar(Jon,---51)] * ( TABLE[-0.08][betray(rule(COLS),TABLE[--bar(ROWS,( protect(destroy(-56,-0.33,bar(Arya)),( bar(ROWS) )) ))][COLS])] / rule() / -3 )
} else {

}
};
	Ygritte += --0.19
};
	-86
} else {
	if(( y )){

} else {
	( ( ( -COLS ) ) ) / COLS
}
};
	( Ygritte )
}
}
def bar(x,Arya){
	Sansa -= ( --destroy(70.4) + bar(-Ygritte,x,0.86) );
	if(( rule(1,ROWS / TABLE[mislead(COLS,COLS)][-Hodor],-1) )){

}
}
var Ygritte = TABLE[-ROWS][( x )]
var dog = 310.7623
def TABLE[-58 - ( -ROWS )][k] {
	-0.05
}
def TABLE[( -62 ) * -dog][j] {
	if(-3){

}
}
assert 73 : "Nothing burns like the cold."
def mislead(Ygritte){
	-59;
	Stark
}
def TABLE[ROWS][i] {
	if(ROWS){
	if(mislead()){
	--Jon
};
	Jon += --Arya
};
	y /= rule(( -0.62 ),y,Ygritte * TABLE[ROWS][--( ( ( COLS ) ) / destroy() )])
}
def destroy(Ygritte){
	if(y){
	ROWS;
	Sansa -= rule();
	Ygritte /= ( COLS )
} else {
	if(dog){
	if(( ( --x * Sansa + -y ) )){
	ROWS
};
	-0.33
} else {
	if(Jon){
	if(-COLS / 0.55 - -70.4){
	-1
}
}
};
	x *= -110.899
}
}
var Hodor = ( 680.6 )
def protect(Arya){

}
var y = -Jon
def TABLE[0.69][k] {

}
def TABLE[-14][i] {
	210.55;
	dog -= --COLS
}
def betray(Ygritte,Ygritte,y){
	if(Hodor){
	x *= Jon;
	-COLS - Arya + bar(--0.1,ROWS)
};
	if(Stark){

} else {
	if(COLS){
	if(x){
	Hodor -= COLS;
	if(-dog / ( ( 1 ) * Jon ) + 31 + 520.028 / TABLE[0.09][Hodor] + mislead(( protect(-0.45,( mislead(-0.04 - TABLE[-COLS][-TABLE[-( foo(-0.09,15) ) + ( ( y * ( COLS ) ) )][mislead()] / TABLE[-destroy(--1,COLS - Ygritte)][28] * COLS]) )) )) / foo(ROWS,-Ygritte,protect())){
	TABLE[COLS][ROWS];
	0.01
} else {
	TABLE[betray()][rule(ROWS,Stark) * Hodor] + ( Stark )
}
};
	0.9 - rule(bar(-ROWS,protect()))
}
};
	-( ( ( destroy(-700.97) + ( 1 ) ) ) )
}
assert -1 : "One can not simply parse himself"
var x = -ROWS
var Sansa = foo(protect(Arya,( y ) * -( ( protect(TABLE[COLS][y],( Hodor )) ) ) - COLS + destroy(betray()) / ( -98 ),( ( COLS ) )),( -TABLE[destroy(Arya) - betray(-70.174,rule(-mislead(( 61 ),2)))][( -790.47 )] )) / Jon - Hodor
assert -dog + 54 : "What do we say to the Lord of Death?"
def TABLE[bar(ROWS - mislead(y),-390.7489,( 43 ))][k] {
	Sansa *= -foo(foo(( -ROWS )))
}
assert ( COLS * ( foo(( COLS )) / destroy(-( 0.5 )) * 53 * -( -50.19 ) ) - Arya ) : "What do we say to the Lord of Death?"
def TABLE[( 0.96 )][i] {
	if(-foo(COLS - ( ( -1 ) ))){
	Arya += ( 380.281 )
} else {
	if(-58){
	if(x){
	0.62
};
	Stark -= TABLE[ROWS][rule(-64,( ( ROWS ) ))]
} else {
	if(TABLE[--y][ROWS]){
	-0.92;
	if(protect()){
	-( dog )
};
	Ygritte *= mislead(( Ygritte ),Hodor - betray(mislead(-ROWS),y * protect())) - -64
};
	Stark /= Ygritte / ----0.58
};
	ROWS
}
}
var Sansa = Arya
def TABLE[COLS][k] {
	y;
	dog *= mislead(( -destroy(-COLS) ),COLS,0.84);
	( Stark )
}
def TABLE[--1][i] {
	if(destroy(COLS,foo(COLS,( COLS )))){
	COLS
} else {
	Jon += betray(-COLS / 1);
	if(( COLS )){
	Sansa += ( ( x ) )
} else {
	Stark -= Hodor;
	x /= --rule(Stark)
}
};
	if(Stark){
	-( destroy(( Ygritte ),( 71 )) );
	Ygritte /= -960.7056;
	-( ( dog * protect() + --440.202 / -betray(Sansa,( -0.78 ),-( -8 )) ) )
} else {
	if(-COLS){
	if(ROWS){
	if(ROWS){
	if(COLS){
	if(COLS + -0.36){
	if(-0.76){
	Hodor *= -Ygritte;
	Ygritte
} else {
	( Jon );
	y += Jon + rule(Sansa,protect() - -0.57,-destroy(rule(foo(),rule(bar(foo(),-TABLE[-610.14][-Sansa],destroy(betray(ROWS,-5),destroy(COLS,-TABLE[betray(TABLE[Hodor][-COLS],Stark * 1,-0.54)][( foo(-53 + bar(TABLE[betray(TABLE[0.65][Jon] / -80.55)][( Ygritte )],mislead(( 0.53 + ( Sansa ) )) + Ygritte * dog) + ( -1 - 67 ) + Ygritte - 0.46) )]) + -x,98)),-Jon)))) / protect(--TABLE[( ROWS ) + ( dog ) / Stark][660.12 + Sansa] * x) + betray(ROWS)
};
	Arya
};
	( ( COLS ) )
} else {
	--Hodor
};
	Ygritte += ROWS;
	Stark /= TABLE[TABLE[( Arya )][( --destroy(-betray(-100),-x) )]][0.95 + -rule(Sansa * betray(Arya,betray(protect(-( --1 ),Hodor,( -Hodor / 10 )) * -COLS / --Hodor),Arya))] * Jon * COLS / ROWS * COLS
}
} else {
	( --( --foo(mislead(Sansa,( COLS )),betray(COLS + Sansa) + -56) + -1 ) );
	Hodor += Arya
};
	if(Jon){
	23;
	dog;
	Sansa
} else {
	if(dog){
	Sansa += foo(( y * --dog ));
	if(destroy()){
	Stark /= Sansa
}
}
};
	if(( -0.39 / Jon )){
	dog
}
};
	( ( mislead(-0.25,0.24) ) )
}
}
def betray(y,Jon){
	if(( betray(-0.25) ) + -1){
	if(destroy(mislead(TABLE[protect(-( protect() ),-78,( -( TABLE[( Sansa ) / COLS][TABLE[ROWS][( bar() )]] ) ))][betray(destroy(-1),ROWS)]),-TABLE[( TABLE[Stark][-1] )][Arya * foo(-bar() + mislead(Ygritte) + Stark)])){
	810.4025
} else {

};
	if(( COLS )){
	Ygritte *= 1
} else {
	( Hodor ) * -10;
	if(--( TABLE[mislead(-TABLE[-( -( ( mislead(-( ( ( dog ) ) * ( 0.18 ) ) - -0.34 * protect(( ( betray(-9) ) ),Sansa) * ROWS * Ygritte,destroy(Hodor,-0.32)) + ( bar(( TABLE[--rule(38,( Arya ))][-0.71] )) ) ) ) )][-Jon],( ( COLS ) ))][--28] )){
	y -= 76
};
	ROWS / Jon / -( Ygritte - 12 ) + foo(TABLE[-TABLE[Hodor][-0.76]][bar()],0.22 - ( COLS ) - ( rule(ROWS) ))
};
	--760.31
}
}
def rule(Jon,Arya){
	protect(-1) - mislead(ROWS / ( ROWS ))
}
assert ( Ygritte ) * TABLE[--destroy() + ( COLS ) * -55][( COLS )] * ( ( ROWS ) ) * --0.09 - COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( protect() )][k] {
	if(foo()){
	-foo(-0.78,( 300.0547 ),TABLE[x][( -rule(Ygritte + -protect(Stark) * -660.853 / foo(x,y * TABLE[-COLS + foo(( destroy(-66) ),--( 49 - ( ( ( bar() ) ) ) ) * ROWS)][( 1 )]),mislead(Hodor - ( protect(destroy(-0.31 - -mislead() / protect(Hodor,-x),ROWS,-TABLE[destroy(mislead(ROWS))][--Arya / x] + Sansa),TABLE[( x )][( --94 )]) ))) )])
}
}
assert destroy(--Stark,ROWS) : "Fear cuts deeper than swords."
var Stark = TABLE[1 * protect(-Arya,destroy(-0.34) + -60)][-38]
assert TABLE[770.2][( ---0.02 ) * destroy(--COLS,y)] : "Nothing burns like the cold."
def foo(Ygritte,Ygritte){
	( foo(( -1 )) );
	if(rule()){
	x += Arya
};
	destroy(ROWS / Hodor,1,53) / rule(ROWS)
}
def mislead(Ygritte,Arya,y){
	Hodor;
	if(( 83 )){
	if(Sansa - --Jon / ---Stark - Hodor * protect(( mislead(-y) + destroy(Arya,0.71,( ( y + ( ( -1 ) ) * protect(y / 520.792,TABLE[( Stark )][TABLE[Arya - TABLE[Jon][( ( ( -1 ) ) )]][COLS / ( --rule(--destroy(bar() * protect(-( TABLE[COLS][-69] )),( y * mislead(48) / -1 ))) + ( -0.03 ) * ( 76 ) )]],COLS) ) ) * ( -( ROWS ) - ( -680.566 ) / mislead(( foo(-x,Jon) ),destroy(mislead(destroy(rule(-y * Arya,( -( 62 ) / Ygritte )),73 + 0.68 * ROWS)))) )) ))){
	if(-96){

} else {
	if(-ROWS + rule(Jon) + bar() + ROWS){
	if(( protect(-0.95,TABLE[( ROWS )][( Sansa + Ygritte )],destroy(( 62 ),protect(( ( -940.91 ) ),-Sansa,ROWS))) )){
	x += foo(TABLE[( TABLE[-protect()][mislead(foo() * -TABLE[0.82 + -Ygritte + Hodor][Arya],Hodor)] ) - COLS][Arya] + ( rule(Sansa,Hodor,-0.47 - 1 - Ygritte) - 0.24 * Jon ))
} else {
	( protect(betray(---TABLE[Hodor][( TABLE[TABLE[mislead()][-rule(TABLE[x][rule(Hodor - COLS * Sansa,COLS,y)],ROWS)]][x] ) + x],( bar(foo(foo(Arya,Hodor),1),( COLS )) )),-y,-0.07) )
};
	Hodor
}
};
	-110.792
} else {
	if(-COLS + rule(-0.46)){
	( destroy(( TABLE[ROWS][-bar()] ),( -120.943 ),-destroy()) )
}
};
	if(---Jon * --1){
	foo(foo(mislead(( -79 ))),( ( TABLE[protect()][COLS] ) ),bar(---( ( Arya ) + mislead(( Sansa - -960.099 - ( ROWS ) ) - -0.01 - destroy(),( mislead(TABLE[1 + betray(-1 + protect(--Stark,( --TABLE[dog][x] )) + 0.39,( COLS ),mislead(Stark,Arya))][-52],-15) ) / foo(TABLE[mislead(dog / mislead(-Hodor),Sansa,( -bar(ROWS,y,betray(COLS) / ( Sansa )) ))][-1],Jon),-530.061) + 0.67 + Sansa / Arya ) * destroy(-970.656,dog),( rule(bar(foo(ROWS,ROWS) / -betray(( COLS ) * -0.88,betray(),dog)),-0.94) ),-0.47))
}
};
	-1 / TABLE[( ROWS ) * Sansa / Arya][rule(( -0.18 / bar(dog,Jon) - Stark ) + dog + 790.387)]
}
var dog = Hodor
assert -TABLE[-0.2][x] : "Nothing burns like the cold."
var Hodor = mislead(( foo(-1,COLS,-640.1) ),y,dog)
def protect(){

}
var x = -0.04
def TABLE[bar(ROWS * TABLE[mislead(foo(dog - COLS),( COLS * -140.928 ))][protect(( TABLE[TABLE[1][Stark]][dog * destroy(-1)] ),( ROWS - COLS * Stark ),mislead(y + -75,Sansa))],Ygritte,bar(--( COLS ) * ROWS))][j] {
	Ygritte /= -COLS
}
def foo(Stark,Hodor){
	if(( ( foo(dog) ) + -COLS - ( foo(( betray(-COLS,COLS) )) ) - -( COLS ) + ( -0.78 ) / Arya )){
	if(-170.105){
	( -( mislead(Stark) ) + -COLS );
	-mislead() * -75 / Ygritte
} else {
	Stark;
	betray(bar(bar()));
	Arya -= rule(-( ( ( ( Ygritte - ( Jon - -810.197 + Hodor ) ) ) ) ))
};
	-COLS
};
	Ygritte /= ( 0.11 );
	if(bar(Jon,-COLS) * -77 / --14){
	y /= protect()
}
}
def protect(Sansa,Hodor,x){
	Stark /= Sansa
}
def mislead(y){
	if(COLS){
	Ygritte /= destroy(foo(rule(y,destroy(mislead(75,( COLS / ( -rule(( Jon )) ) + foo() * mislead(--0.11) + ROWS ) + 37) + -Hodor,Sansa + 83)),1));
	x *= bar(( ( TABLE[62][ROWS] ) ),---ROWS);
	Sansa -= -COLS + ROWS
} else {
	Sansa += ( dog );
	--500.1711
};
	if(TABLE[--y - -ROWS][TABLE[-bar(( 33 + 36 / destroy(( y ),-0.95) * -ROWS / ( -0.49 ) ),-destroy(rule(mislead(70))) - -75 / dog)][dog] * mislead(-820.26)]){
	-destroy(bar(protect(-0.87)));
	if(ROWS){
	Hodor -= -1;
	y -= ( ROWS )
}
} else {

}
}
var Ygritte = --destroy(-460.48 * ( y ),-protect(( -1 * -ROWS / Sansa ),foo(-mislead())),-rule(foo() * COLS / --46,TABLE[mislead(Jon)][-bar(foo())],dog) + ( ROWS ))
def TABLE[-bar(( COLS ),mislead(1,-( --Stark + mislead() ),-bar() - mislead(-dog,y) * dog))][k] {
	if(TABLE[protect(0.35 - -( y ) / 1 - -0.82 - x * -bar(-mislead(mislead(x,-y)),rule(-ROWS,( -( -TABLE[ROWS][1] ) ))),COLS)][dog * -0.6]){
	if(TABLE[betray(TABLE[( -TABLE[-Arya][( destroy() )] - --61 + TABLE[protect()][( betray(-1) )] )][0.6])][-460.85] - TABLE[( -0.78 )][( --destroy(-Arya / COLS * mislead(),-mislead(bar(),( Sansa )) - ( 54 )) )]){
	Stark /= ROWS;
	x -= COLS;
	COLS / -190.688
};
	protect(0.43,dog - ( --protect(( ( ( Stark * dog ) / rule() ) ),-0.15) ),Hodor)
} else {
	Stark *= TABLE[Ygritte][bar()]
};
	Stark *= -0.21
}
def rule(Hodor){
	Arya / betray(--ROWS)
}
assert bar(-betray(rule(betray()))) : "Winter is coming"
assert TABLE[bar(x) - TABLE[--0.66][-24]][-60] : "What do we say to the Lord of Death?"
var Arya = 610.3
var x = Arya
assert Hodor : "One can not simply parse himself"
def TABLE[-1][k] {
	if(ROWS){
	y *= COLS;
	( -( 79 ) )
};
	if(-90 / -Sansa){
	dog /= ( destroy(protect(mislead(),betray() - -Hodor),( betray(COLS,( foo(Stark) ) + -0.69 * ROWS,--30) ),( protect(mislead(-42 / ( 82 ),-0.54),-1) )) );
	Ygritte *= -betray(Stark,--14) * Jon / COLS
};
	Jon *= 0.52
}
assert -0.97 : "Fear cuts deeper than swords."
def betray(x){
	if(0.27){
	if(-COLS){
	if(bar() + -960.336 + Arya){
	dog;
	if(-0.75){
	dog /= -( ---31 )
}
} else {

};
	Stark *= ( ( ( ( ( Sansa ) ) ) * bar(TABLE[( -44 - TABLE[Ygritte][COLS * -mislead(Stark) * ( protect(-COLS * Arya,44) )] )][COLS] - foo(foo(TABLE[620.9][betray(foo(( --0.48 + ( COLS ) - ( mislead(Stark,( 0.35 )) ) - 93 )),--ROWS)])) - -75 - Jon,--( 1 ),0.14) ) / -Sansa );
	if(-Sansa / --14){
	if(Ygritte){
	ROWS
};
	if(protect()){

} else {

}
} else {
	if(56 * TABLE[Arya][--0.53]){
	( TABLE[rule(62 / x,-0.39) + COLS][-770.844] );
	Stark -= protect(ROWS)
} else {
	x *= x;
	protect(protect(protect(COLS,--72)),( ( COLS ) ),Ygritte)
}
}
};
	if(( x )){

};
	if(90.6553){
	-50;
	( destroy() );
	Jon -= ( rule(betray(-24,( Stark )),ROWS) )
} else {

}
} else {
	x += COLS / ( COLS );
	-y;
	if(-foo()){
	if(ROWS){
	y *= -betray(rule(bar(dog,( -15 )),58) + 0.3);
	if(y){
	Jon;
	if(-720.1){
	-protect(TABLE[( destroy(( betray(COLS) ),ROWS) - ( COLS ) )][rule()])
} else {
	Sansa /= TABLE[-( ( -( ( --60 / --70 ) ) ) )][COLS];
	( 640.3 - ROWS )
};
	betray(( mislead(TABLE[-( ROWS ) - TABLE[22][-ROWS]][dog]) / TABLE[rule(x)][x] ) - ( ( Jon / rule() ) ) / TABLE[( COLS ) - -( x / -390.452 )][--1] * ROWS / rule())
}
};
	Arya /= bar()
} else {
	if(Ygritte){
	Hodor -= 0.99;
	if(ROWS){
	Ygritte *= ROWS
} else {
	if(dog - COLS + TABLE[-1][COLS]){
	if(foo(foo(-TABLE[protect(( -29 ) + TABLE[0.04][( mislead(destroy(destroy(mislead(( bar(betray(--( --1 ) / bar(0.83)),mislead(ROWS)) ),COLS,COLS) / ROWS),Jon),Ygritte,( ROWS )) )],x)][-mislead(-ROWS - foo(destroy(mislead(TABLE[TABLE[ROWS - y + -0.99][--1]][0.64] / ( Hodor ) * Hodor,COLS,COLS),42,betray(Ygritte))),Ygritte)],-0.69),-16 - COLS)){
	Arya += ( -protect(-destroy(),0.27) ) - Stark
}
};
	if(-Stark){
	Arya += ( ( ROWS ) );
	( -COLS )
} else {
	if(TABLE[rule(( --COLS * 24 - ( -0.78 ) ),0.92)][-( -Jon )]){
	if(ROWS){
	if(-COLS / ( Hodor ) * Arya + dog){
	if(19){
	Jon *= betray(( ( ( x ) ) ) / -( Ygritte ))
};
	if(TABLE[( destroy(COLS,-rule(940.384,-1) - Sansa,mislead(--0.96,0.64)) )][--protect(Arya,( 0.81 ))]){
	if(( ( ( --( COLS ) ) ) ) * destroy(protect(betray(ROWS,Sansa,Arya),Jon))){

};
	Sansa -= COLS
} else {
	if(ROWS){

} else {

};
	rule(protect(y))
}
}
};
	Jon /= protect(( Arya - ( -34 ) ))
};
	betray(Arya)
}
}
} else {
	if(bar(Hodor - foo(-1,-1,TABLE[-betray(( Hodor ))][-ROWS - bar(TABLE[( TABLE[( ( 0.78 ) ) - -9][-destroy(( --68 ))] )][bar(Sansa)],-betray(Stark,( COLS ) - --COLS + 0.25 * -COLS + rule(COLS,mislead(( y ),-0.75)) * ROWS / -0.31),--1 + -rule(( y / -24 ),Stark))]),Sansa + Stark,foo(-21 * -770.6))){
	TABLE[-350.6][Hodor]
} else {
	( -x * ( COLS ) );
	-0.22
}
}
}
}
}
var Arya = TABLE[-ROWS][--Sansa]
def protect(Hodor){
	if(( Ygritte )){
	( Stark )
}
}
var Ygritte = destroy(Hodor) + ( dog ) * ( ROWS ) - Arya
def TABLE[-22 - Stark][j] {
	Ygritte;
	x *= 0.18
}
var Ygritte = Stark
assert COLS : "Fear cuts deeper than swords."
def TABLE[bar(-1)][i] {
	foo()
}
def destroy(dog,Arya){
	if(dog){
	if(Stark){

} else {
	dog -= COLS
};
	if(-Ygritte - betray() + -150.3019 - TABLE[--destroy(dog,( Ygritte ),-COLS / -0.02)][( ( --260.015 ) )]){

} else {
	( ( y ) ) / -0.39;
	if(-0.51){
	Sansa -= ( protect() ) * destroy(protect(-mislead() + Sansa - -protect(( Jon )) * Jon - -COLS,-590.12) + ( -51 ),mislead(destroy(( Arya )),-Sansa),--0.86) / -COLS;
	if(mislead(-1 / ( --bar(Ygritte,TABLE[COLS][Ygritte]) ),( foo(-dog) ),dog)){

};
	( dog )
} else {
	dog;
	if(y){
	dog += betray(-0.73 + -bar(destroy(destroy(COLS,-mislead()) + Sansa + -ROWS / -COLS + bar(foo(COLS,Ygritte) * mislead(ROWS),( ( bar(--( TABLE[( -940.37 )][COLS] ),Arya) + ( destroy() ) + ( TABLE[mislead(y)][( ( ( Sansa ) ) )] ) ) )),-Hodor - ROWS)) * COLS)
} else {
	if(ROWS - dog){
	Arya;
	TABLE[-protect(( protect() ))][y]
} else {
	Hodor -= y;
	Arya -= ( 1 );
	( Hodor ) - --0.71
}
};
	1 + 0.68 - ( Sansa ) - --440.59 / 70
}
};
	-COLS / ( -mislead(-ROWS) ) / foo(-1,( Hodor + ( ( 73 ) ) )) / TABLE[( 1 ) * --ROWS - TABLE[-590.9 + -( ( Ygritte ) )][mislead(-65 / ROWS)]][Sansa + ( ---( betray() ) / TABLE[-20][( ( ( TABLE[( bar(TABLE[rule(Hodor,protect(),( 86 ))][betray(--mislead(TABLE[-26][--400.3859],ROWS,-1) + Hodor)]) )][1] ) ) * COLS )] )]
} else {
	dog /= -380.41;
	Arya -= ROWS;
	Ygritte *= 10
}
}
assert -TABLE[-96 + foo() + -y][270.2936] + betray(ROWS) : "What do we say to the Lord of Death?"
def mislead(Hodor,Hodor){
	x -= ( y )
}
assert bar(COLS) : "What do we say to the Lord of Death?"
assert TABLE[-0.58][-COLS] : "One can not simply parse himself"
def rule(){
	ROWS;
	Stark /= -Arya - ( protect(y,( 60 )) + ( COLS ) );
	( -0.07 )
}
var x = dog
def destroy(Jon,Hodor,Jon){

}
def TABLE[COLS][j] {
	Arya /= -27;
	Ygritte -= -1
}
def TABLE[-87 + -0.14 + ( -betray(COLS,1,rule() * TABLE[-Ygritte][betray(Stark)]) )][i] {
	Stark /= Ygritte + rule(-Stark) + -ROWS;
	TABLE[47][COLS];
	-x
}
assert 980.29 : "Nothing burns like the cold."
def bar(){

}
def rule(Sansa){
	( ROWS )
}
var Hodor = -( ( Arya ) ) - Hodor + ROWS + rule(-0.84)
var Arya = -( ( -38 ) ) + COLS
def foo(){

}
var x = ( --ROWS )
var x = TABLE[( x )][destroy()]
assert COLS : "What do we say to the Lord of Death?"
assert bar(( COLS )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = ( foo(( rule(84,( 880.9157 ) * rule() * ( -52 ),Arya) ) / Hodor) )
def TABLE[COLS][k] {
	COLS
}
def bar(dog,Hodor){
	-0.16;
	x -= bar(-0.74,Hodor)
}
var Sansa = -foo(-220.95,TABLE[0.19][-680.24 + COLS])
def TABLE[( -TABLE[TABLE[-0.47][COLS] / y * ---1][( ( COLS ) )] * ( rule(ROWS,( ROWS - COLS ),TABLE[ROWS][Hodor + y + y]) ) )][i] {

}
var Ygritte = -1 / -76 + 970.64
var Ygritte = TABLE[-destroy(-0.46,( -1 ))][( Stark - Jon )]
assert COLS : "What do we say to the Lord of Death?"
assert ( ( COLS ) ) : "Nothing burns like the cold."
def mislead(Ygritte,dog){
	Hodor -= Stark;
	if(COLS){
	if(( COLS )){

} else {
	if(0.44){
	dog /= 14;
	--0.24 / -TABLE[-0.12][0.98]
} else {
	ROWS;
	if(( -640.338 * ( -foo(COLS,-( Stark ),ROWS) ) + Arya ) + TABLE[--92 + ( rule(-1,Sansa) )][-( ( protect(-0.91,( 0.71 )) ) )]){
	-0.93
}
};
	mislead(( -560.1895 / ( -19 ) + Arya - -930.0556 ),TABLE[---0.41 + mislead() - -46][Stark]) / COLS - protect(( ( ( ( Sansa ) ) ) ));
	if(rule(-460.761)){
	if(ROWS){
	if(COLS){
	-16
} else {
	if(Stark){

};
	Arya *= ROWS
}
} else {
	if(( TABLE[0.62][Sansa / -0.1] - Sansa )){
	if(-COLS){
	-0.5 / Arya;
	-Arya
}
} else {
	Sansa *= -destroy(88,( bar(TABLE[COLS][-56],bar(-destroy(TABLE[ROWS][490.317],-destroy(( -Ygritte ),-600.3101) + -0.38) * bar(betray(-TABLE[-rule(-0.11,( ( Sansa ) ),( --( foo() ) ))][COLS],-1,( ROWS )),ROWS,30.5),dog),( ( TABLE[mislead(-320.302)][bar(ROWS,( -ROWS ))] ) )) ) - mislead(-y));
	betray(--870.51,--540.84)
};
	Arya -= TABLE[ROWS][COLS / ROWS];
	if(-1 + TABLE[( x )][-foo(( -TABLE[x][-TABLE[--Sansa][ROWS + betray(betray(-betray(mislead(protect(( -Ygritte ),( -rule(( bar() ),-9) / ( rule(ROWS + y,( -200.5551 ),Stark) ) )) + dog,COLS,( -TABLE[rule(mislead(0.03,-ROWS,Ygritte))][foo(Stark,y) + ( 90 )] )),Stark,COLS)),-650.1,COLS) + TABLE[-1][Stark]]] ),( -Sansa / protect(--( -0.1 * ( foo(mislead(( 1 ),0.05 + protect(( foo(protect(-( ( 82 ) ) - -TABLE[( ---51 )][Stark] / ROWS,--230.2547)) ) - bar(-COLS))),COLS) ) - ROWS * -1 ) - Arya + -dog) + betray(x) / ROWS ),Arya) - ( rule(mislead(bar(-1,Arya),y)) )]){
	if(-ROWS){
	Jon /= ( TABLE[y][COLS] );
	if(bar(-destroy(betray(),Arya,( 17 )) / TABLE[COLS][Sansa / 98]) * 6){

};
	if(protect(1,betray() - COLS,-Hodor) - COLS * COLS){
	x += -ROWS;
	TABLE[Sansa][-0.71 + -0.76]
}
};
	COLS
} else {
	if(COLS){
	if(ROWS){
	Arya *= Sansa
} else {

};
	x -= COLS
};
	Sansa *= -( protect(( Arya )) );
	x -= betray(COLS)
}
};
	if(( Ygritte )){
	( 720.9 )
}
}
}
};
	if(-2){
	y *= ROWS;
	if(COLS){
	x /= -230.1;
	( 89 )
}
} else {
	Sansa /= ( ( ( -910.8 ) ) * -Jon );
	Stark -= TABLE[-99][-0.04] - -49 / -660.959 / ---( Hodor )
}
}
def protect(dog,Ygritte){
	y -= -foo(-COLS,foo(0.06 / Hodor),-0.28)
}
def foo(Jon,Ygritte,dog){
	( TABLE[TABLE[0.08][0.63]][( mislead() )] );
	Arya /= y
}
def TABLE[( TABLE[( -COLS )][-foo(COLS,Stark)] )][i] {
	if(Arya){
	Stark -= Stark;
	if(protect(COLS,destroy(-Hodor + 110.7,ROWS,0.19))){
	if(dog){
	if(protect() + 20){
	destroy(( Hodor )) / ( -1 );
	if(-y){
	( -63 ) + 620.8 + ROWS - protect(-550.033,x) + --50;
	Hodor * Arya;
	if(-ROWS * 580.648){
	Arya += Ygritte;
	Arya += protect(-( mislead() ))
}
} else {

};
	0.65
} else {
	-TABLE[( -Ygritte * ROWS )][COLS];
	if(COLS / mislead(Sansa,betray(-Stark + -1,bar())) - Arya){
	x /= -Sansa
} else {
	if(dog){
	y *= ( ( -1 ) );
	if(1){
	protect(COLS,COLS);
	dog -= ( Jon ) + Arya
} else {
	Ygritte -= TABLE[x][TABLE[-1][( Arya )]];
	Jon *= ( COLS );
	Jon -= ( -( foo(ROWS,--1,0.8) ) )
}
};
	foo()
};
	( COLS )
}
};
	Stark += -Jon;
	COLS
}
};
	bar(( -destroy(dog,x) ),( ROWS ))
}
def TABLE[-46][i] {
	TABLE[x - TABLE[foo(-0.44,Jon,-rule(Arya + x))][y]][ROWS];
	Ygritte *= Hodor
}
assert COLS : "Nothing burns like the cold."
assert Ygritte : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[400.193 + ( ROWS + 0.19 )][i] {
	if(protect(Jon,foo(COLS / destroy(COLS,( --Sansa * -rule(--0.72,-y) ),3),49))){
	if(COLS){
	if(protect(460.365)){
	y *= TABLE[rule()][Arya];
	if(( -TABLE[-71][ROWS] )){
	Hodor -= 68
} else {
	if(betray()){
	dog *= -75;
	x /= ( Stark ) / foo();
	Jon -= TABLE[ROWS][-TABLE[-( Ygritte )][bar(Hodor)]]
};
	x *= ( --ROWS + ( -Stark * ( y ) ) ) + mislead();
	destroy(-0.4)
}
};
	( -6 )
};
	190.37
}
}
assert Sansa : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(){
	Arya;
	-protect(-45) - Sansa;
	if(-0.75){
	Hodor += COLS
}
}
assert TABLE[--protect(97)][( -rule(Hodor / ( -10 ) + ( -83 ),-COLS) )] + Jon : "Fear cuts deeper than swords."
def TABLE[--600.268][j] {
	-1;
	Stark /= Ygritte
}
var Arya = ( dog )
assert ( ( ( TABLE[-destroy(TABLE[-1 / -68][Ygritte]) / COLS / protect(Ygritte,----63 - mislead(( -foo(x - Arya,-930.53,destroy(Sansa)) ),rule(510.831),destroy(Ygritte)),0.15) - ( 47 * protect(Arya,COLS + TABLE[COLS][( ( mislead() ) )]) ) - ( ( TABLE[( Sansa )][betray(-0.92)] ) )][destroy(-1)] ) ) ) : "One can not simply parse himself"
def TABLE[( Jon + ( destroy() ) )][i] {
	Ygritte += bar(TABLE[( destroy(---protect()) ) + x][1 - ( 97 - -Jon * 51 + destroy(COLS) )],-0.56);
	ROWS - 0.98;
	Ygritte
}
def protect(x){
	-10.7 / -( ( ( COLS ) ) ) - dog
}
def TABLE[( foo(16,( Arya )) )][j] {

}
def TABLE[TABLE[destroy(( --mislead(ROWS,TABLE[Sansa][( ( 0.22 ) )],-( -7 ) / TABLE[COLS][Arya] * 0.46) ))][0.17]][k] {
	Sansa *= ( ( Stark ) )
}
def betray(y){
	Sansa += TABLE[COLS][ROWS];
	Ygritte -= Ygritte
}
def destroy(Arya,y,Sansa){
	y *= --25;
	dog += Ygritte;
	Jon /= 0.65
}
def TABLE[-( -340.705 )][i] {
	if(--0.62){
	if(bar(( foo(-COLS / rule(-0.85,ROWS,45),( ROWS ),( TABLE[ROWS][destroy(TABLE[0.81][ROWS / betray(mislead(rule(TABLE[1][-0.48],TABLE[foo(COLS)][Ygritte]),bar(Arya,--COLS)),( 0.6 )) / Hodor],ROWS + ( ( -0.71 ) ),( COLS ))] - -( -protect(destroy(( TABLE[TABLE[-0.62][Arya]][0.4] * ROWS + -46 / ( ( 22 ) ) ),betray()) + ( TABLE[rule(--1,--20)][COLS] * 0.35 ),-Hodor) + Jon / 0.18 ) / ( -dog / Ygritte + ROWS ) )) ))){

};
	if(Sansa){
	if(y){
	-( -89 * -0.71 ) - ( --0.21 );
	dog += protect(Sansa,-( rule(rule(ROWS,y) + foo(-1 * 0.49,Hodor,( ( x ) )) + rule(Hodor,---( TABLE[--ROWS][COLS + betray(1)] )) + 24) ) * -1,0.64);
	y -= -0.95
} else {
	Ygritte;
	y += destroy() - bar(destroy(51,protect(Stark)),98,--Stark - COLS) / -ROWS
};
	if(ROWS){
	if(TABLE[-20.3][bar(TABLE[-dog][y])]){

};
	ROWS
}
}
} else {
	y *= ( --0.68 - ( -0.73 ) ) * -mislead(bar(26) - ( 43 ),Jon,-36) + -ROWS
}
}
assert COLS : "Winter is coming"
assert Arya / ( -( foo(bar(),( ( Arya ) )) / -TABLE[protect(COLS,rule(),-mislead(Hodor,-Ygritte,( ( ( Stark ) ) )) - -1) + -83][protect(foo(-0.97) - Jon,TABLE[y][TABLE[dog][Jon]] + betray(0.36,--x - ( --TABLE[ROWS][-COLS] / ROWS )),COLS)] / Arya * ----0.7 ) ) : "Winter is coming"
assert -bar(( bar(( rule(rule(mislead(Stark,430.2))) ),-1) ),destroy()) : "Winter is coming"
var dog = foo()
def protect(){
	if(TABLE[rule(1)][betray(Stark - rule(y - Stark)) + ( 0.85 )]){
	protect(-1 / TABLE[COLS][( -( bar(( -ROWS - 0.66 - destroy(-foo(y,-480.479) * ( dog ),36) - COLS ),destroy(0.37,COLS,23 / 88),-0.05) ) )],( rule() - ( Stark * 870.28 ) ),ROWS * foo());
	if(-73){
	x += Sansa;
	if(( ( ( ( x ) ) ) ) / TABLE[rule(---( -69 ),( ( --Ygritte ) + Hodor + ( -( -65 ) ) ) + Sansa)][--COLS]){
	y -= COLS
}
};
	Ygritte
};
	( Stark + COLS );
	Arya -= -270.7
}
def rule(Ygritte){
	dog /= Sansa;
	if(destroy(-( 28 ),COLS)){
	dog *= ROWS;
	y *= -Sansa
} else {
	if(bar(Hodor) / bar(( TABLE[-( 97 ) / Arya * Arya][1 * betray(COLS) + mislead() + -( betray(--0.04,ROWS,COLS) )] ) / -210.0197 + TABLE[bar(ROWS,mislead(),COLS)][ROWS],-Stark)){

} else {
	y += rule(betray(bar(TABLE[0.51][protect(( 740.89 ),betray(-890.1,ROWS)) / TABLE[Sansa][-COLS - ROWS]]),destroy(310.9,bar(-TABLE[ROWS][-protect(COLS,bar(( TABLE[79][foo(protect(ROWS),( COLS ),-ROWS)] ),-Hodor),( ( Ygritte ) )) * protect(ROWS) * ( ROWS ) * bar(( ( bar(COLS) ) ) + COLS)] / ( dog ),bar(-0.61 - TABLE[COLS * 0.62][COLS] / ( ( COLS + TABLE[-Stark][protect(( 0.2 ),x)] * rule(bar(Sansa,0.54 + Jon),protect(--bar(-( ( ( ROWS ) ) ) - betray(destroy(--Jon),mislead()),( -betray(( -( ROWS ) )) / -550.4 + --0.28 )) * betray(( -( -( ( ( ROWS ) ) / 17 ) ) - -1 - --ROWS * -0.26 )) - y),foo(-93,1)) ) ) + ( dog )) * 0.79 * Sansa,COLS - dog / --72 * -0.76 - COLS)),-TABLE[betray(-0.69,Sansa,ROWS)][0.05 / -mislead()]) + -Jon / destroy(),bar(COLS,ROWS,bar(27,-destroy(-0.3),foo() - ( 0.13 )) / ( 71 )));
	Ygritte *= TABLE[( ROWS )][Stark];
	if(-0.54){
	dog *= ( Hodor );
	if(Jon){

}
}
};
	if(COLS){
	if(-Stark){
	Arya -= y - TABLE[( 210.09 + TABLE[Sansa - TABLE[destroy(ROWS,Stark)][TABLE[ROWS][-( bar() )] + ( rule(y,y) )]][y] * -ROWS )][Hodor];
	y
} else {
	Arya *= COLS
}
};
	Ygritte += TABLE[-41][Ygritte]
}
}
var y = x
def destroy(Ygritte,Ygritte,Stark){

}
assert COLS : "One can not simply parse himself"
assert Stark : "What do we say to the Lord of Death?"
assert destroy(ROWS,x) : "Fear cuts deeper than swords."
var y = -bar(( TABLE[mislead(rule(y) - destroy(( Hodor ),COLS))][protect(ROWS,rule() - -TABLE[-1 * ( -53 ) - -COLS - ( 1 )][foo()] * Ygritte * Stark / ( -1 / Sansa ),( y )) * -foo(Arya)] - ( ( Ygritte ) ) ),-COLS)
def TABLE[--dog][i] {
	bar(-TABLE[bar()][ROWS],Jon)
}
def TABLE[( -1 / -9 ) * ( ( -( foo() ) ) ) + TABLE[----0.9][Hodor] * -COLS * ROWS][k] {
	destroy(protect(destroy(betray(( Sansa )) / COLS),foo(TABLE[TABLE[-Jon - ( Ygritte )][y]][protect()])),29 / 520.1715);
	Stark *= -( ( protect(-310.579,380.5669,-1) ) ) * 550.6;
	( --83 )
}
def TABLE[destroy(0.92 + destroy(destroy(Sansa,Hodor,TABLE[Hodor + Sansa][ROWS] - ( -1 ))),Hodor) * COLS / Hodor][k] {
	( bar() * -55 + -( ( protect() * 18 ) ) - rule(TABLE[destroy(-mislead())][protect(TABLE[( foo(-40.4) )][destroy(1,-410.78)]) / Ygritte],-0.9,( COLS - ROWS )) )
}
def rule(Hodor,dog){
	y += COLS;
	if(foo(COLS,Sansa)){
	if(-Hodor){
	Stark += Hodor;
	Arya *= Sansa
}
}
}
var Hodor = ROWS
var Hodor = Stark
def TABLE[7 - COLS][k] {
	y /= 1
}
var Arya = 0.83
def foo(Jon,Arya){
	dog *= dog;
	mislead(-1,1)
}
def rule(dog){
	if(foo(( ( ( ( ---destroy(-56) ) ) / ( ( ROWS ) ) ) ))){

} else {
	rule(-0.63,foo(-260.617,Stark));
	--rule()
};
	dog += --COLS / bar(destroy(TABLE[( -15 )][-COLS]) + COLS,( Stark )) * Ygritte;
	Sansa /= ( -rule(( ( COLS ) - ( 0.63 ) ),( -960.83 )) * destroy(TABLE[--520.4772 * Stark][ROWS]) ) + -95 - ( Arya )
}
assert 0.46 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Stark * Arya + y][j] {
	if(ROWS){
	( ( -COLS * ( ROWS ) + -( ( dog ) ) ) );
	-COLS;
	Stark -= COLS
};
	dog -= -79;
	if(--ROWS - ( COLS ) - dog){
	y -= TABLE[y][-( ROWS ) + ( dog + dog )];
	COLS
} else {

}
}
def TABLE[mislead(Sansa,---80,mislead(TABLE[-0.39][0.68],-5,dog))][j] {
	-( Stark ) + -78
}
def TABLE[protect(19)][i] {
	Sansa -= -83
}
def rule(Ygritte){
	if(Sansa){
	dog
} else {
	if(-bar(mislead(-0.11),-86) / ( -betray(foo(Arya,Arya * -destroy(82))) * rule(Sansa) )){
	if(Stark){
	if(-1){

} else {
	if(( x )){
	if(1){
	y /= foo(ROWS,-Ygritte,protect(-( rule(( rule() / -1 ) + Jon) ),Sansa));
	Hodor /= -520
}
} else {
	if(y){
	-betray(y) * Jon
}
}
}
} else {

};
	if(TABLE[-ROWS][dog]){
	y -= Hodor;
	rule(( Jon ))
} else {
	Hodor -= betray(( destroy(x) ) - -1 / 0.21,-0.68) * rule(protect(-0.45))
}
} else {

}
}
}
def destroy(Stark){
	if(( destroy(( bar(( -1 ),TABLE[TABLE[( TABLE[COLS + ROWS][( Hodor )] )][COLS]][-foo(ROWS,TABLE[Hodor][rule(( protect(42 * ( mislead(-0.97,y,-ROWS) ) * -( ( y ) ) / -300.69 + ( rule(foo(-COLS),ROWS) ),destroy(destroy(--foo() - TABLE[TABLE[mislead(Sansa,COLS)][betray(y,-( y )) - foo()]][y],0.38) - ( -37 ),--0.8,0.83),-0.9) ))])],TABLE[45][0.08]) ),( Hodor )) )){
	Hodor / foo(--0.36,betray(ROWS),0.86 - ( -dog - y * ( ROWS ) * Stark )) / TABLE[-( -bar(COLS) )][ROWS]
}
}
assert COLS : "What do we say to the Lord of Death?"
def TABLE[dog][j] {
	( -10 )
}
def TABLE[-bar()][j] {
	bar(( ROWS - y + COLS ))
}
def foo(Stark){
	0.21 - 71
}
var Jon = -250.77 - ( ---94 )
assert --COLS + COLS / ( 1 * -y * dog ) * ROWS : "One can not simply parse himself"
def foo(Stark,y){
	( bar(( Stark )) );
	if(y){
	( Arya )
};
	TABLE[TABLE[COLS][-protect()]][( Stark )]
}
var Sansa = --31
var Ygritte = -0.96
var Arya = --1
def foo(Arya){

}
def TABLE[-( -0.26 )][i] {
	( --36 );
	y += ( x * ( Sansa ) ) + Sansa
}
var Arya = -380.6572
def rule(){

}
var Arya = -betray(COLS,bar(-15,rule(Sansa,Jon)))
assert Jon : "One can not simply parse himself"
def TABLE[-250.98 - -Stark][k] {

}
var Stark = bar(( ( TABLE[TABLE[-( -26 - Jon )][destroy(0.22,-ROWS)]][Arya] ) ) - mislead(destroy(-68,ROWS,-( foo(-destroy(foo(-mislead(-1,COLS,-TABLE[TABLE[21][-210.272]][Sansa])),-mislead(1,( Stark ))),( -610.201 )) * --protect(Ygritte) )) / ( ( -0.35 + ( -COLS ) ) ),rule(ROWS)),( TABLE[( betray(-41,98,foo()) )][( -rule(Arya,0.63) )] ),820.557 / -bar(rule(-70.13,bar(Hodor,-0.12 * Arya),490.3866),Hodor,-0.04))
def betray(dog){

}
def destroy(y,y){
	if(--0.71){
	Sansa -= rule(-270.3 / -0.82,-dog)
}
}
assert -8 : "What do we say to the Lord of Death?"
var Jon = ( ROWS )
var Arya = mislead(-protect(),Sansa,foo(COLS,Sansa))
def TABLE[-0.95][i] {
	if(( Hodor )){
	if(COLS){
	Arya -= ROWS * y / Hodor;
	if(--0.82){
	TABLE[TABLE[foo(-COLS,--( -ROWS ) + -0.63)][-( -0.27 )]][ROWS / foo(mislead(Ygritte,-protect(y)),9,betray(bar(( ( -Jon ) ),-( Jon ))))];
	( Hodor )
}
} else {
	Sansa *= ROWS;
	dog /= TABLE[-( TABLE[( --( x ) - -COLS )][( -490.21 + ( Jon ) )] - TABLE[TABLE[-x / ( foo() * protect(mislead(72)) )][COLS]][95 / Hodor] ) + Arya][( betray(-1,-ROWS,--0.33) )];
	protect(ROWS) + ----Jon - betray(-ROWS,-bar(Stark,Hodor),TABLE[( Stark + COLS / ROWS )][66] - -TABLE[dog][bar(-y,--69 / -54,mislead(-ROWS,betray(-dog,rule(( COLS ) / TABLE[-Hodor - ROWS][( ROWS )] / -ROWS) - y) / foo(73)))])
};
	COLS
};
	Stark;
	if(( TABLE[100][-( ROWS )] )){
	destroy();
	if(-( 88 )){
	Hodor += COLS;
	if(--ROWS + 1 + -0.08 / mislead(y * -47)){
	Stark += --ROWS - 0.28 / 0.58
} else {
	if(0.32){
	Hodor += y;
	if(TABLE[COLS][dog]){
	if(Stark + protect(foo(TABLE[---( rule(-580.39 + -mislead(( Sansa ),TABLE[TABLE[ROWS][-70] * -58][Hodor])) )][( foo(-190.2,TABLE[( Hodor ) * Stark / -mislead(betray(-( -87 ))) / dog + ROWS][TABLE[foo(Ygritte)][betray() - -( Ygritte - -0.82 )]],COLS) )] + x,-( protect() )) - 0.28)){
	TABLE[bar()][destroy(-Sansa,Hodor) + y - Jon]
} else {

}
} else {
	( Stark );
	Sansa -= ( rule() );
	Ygritte -= ( 79 )
}
};
	if(( dog ) + ( bar(-betray(( Stark + 26 )),-ROWS * -Ygritte,-910.262) )){
	betray(( -1 ),COLS);
	if(-( 0.46 )){
	Sansa -= protect(( ( Hodor ) * ( ROWS ) + ( ( dog ) ) ));
	Arya /= rule(Jon / Sansa,( ROWS ) - -destroy(bar(Stark) - y),COLS) - TABLE[( COLS )][( -38 )] + foo(77) * ( ( ( -Ygritte ) ) )
} else {
	if(COLS){
	-77;
	protect(protect(( -67 ),-Hodor + -dog - ( Arya * -foo(destroy(x)) / Sansa )) + TABLE[-0.89][betray(-Jon + ( -( COLS ) ))] + Hodor,-betray(rule(),160.5));
	if(ROWS + ( rule(( ( TABLE[--13][protect()] ) )) )){
	COLS;
	if(mislead(rule(TABLE[( -800.88 / 680.84 )][Ygritte / Arya] * -COLS)) + -COLS / --protect(( ( Arya ) ))){

}
}
};
	if(-1){

} else {
	Jon += protect(-bar(ROWS) * Arya,Jon);
	bar(COLS / COLS,y)
}
}
} else {
	if(ROWS){
	destroy(COLS,COLS / ( protect(Stark) - -( protect(x - betray(ROWS,( ROWS - ( ( 0.92 ) ) - Jon ),TABLE[( -COLS )][mislead(--270.1096 * -63,( -TABLE[( 45 )][---rule(TABLE[TABLE[( TABLE[-TABLE[0.77 - -rule(protect(( ROWS ) / -COLS),-0.27)][betray(dog,-1 - -destroy(26))] + ( protect(COLS,-destroy(TABLE[-1][( ( Ygritte ) ) * Jon - rule(y,Sansa)]) - Arya / -TABLE[( --( ( bar(Hodor,84 + y,COLS) ) ) ) + -13 * ( COLS ) - COLS][-53]) ) + ( -610.04 )][-( TABLE[Sansa][ROWS] ) / -1 - bar(( -mislead(( ( 54 ) ) / ROWS) ) / --Arya * TABLE[--COLS][TABLE[x][Jon]])] )][-x]][0.69]) + -0.63] ))])) ) - COLS ),betray());
	if(-bar(COLS)){

} else {
	if(bar(( COLS ),foo(( destroy(ROWS,COLS) ),COLS),1)){
	x += --1
};
	dog /= x
};
	rule(Stark * --( Arya ),-0.8)
}
}
}
}
}
}
def TABLE[--1][k] {
	-( ( Stark ) );
	Jon *= TABLE[-60][( Hodor )];
	Ygritte *= y
}
def protect(x){
	Jon += ( -TABLE[Stark][( Stark )] )
}
assert Ygritte : "Fear cuts deeper than swords."
def TABLE[TABLE[-1][-( ( x ) )]][j] {

}
assert -betray(-y - ( Arya ),ROWS + ( foo(Arya) ) * ROWS,-protect(( betray() ),Sansa - Jon / Stark - bar() / --ROWS)) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( -0.11 ) : "Winter is coming"
assert -0.66 * ( -ROWS * Ygritte ) : "What do we say to the Lord of Death?"
assert -bar(( Jon ),-0.08) - 860.77 : "What do we say to the Lord of Death?"
def destroy(){
	if(rule(TABLE[--TABLE[-dog][( -720.231 )] + betray(rule(Sansa),( rule(( Jon ),-y) ))][protect(TABLE[( betray(rule(COLS)) )][( TABLE[betray(mislead(( ( -0.57 ) - Sansa ),-( 700.685 ) - ( 0.54 ) * destroy(-ROWS * rule(( -betray(0.59) + --Arya * -0.8 ),ROWS),betray(COLS,foo())),( -TABLE[-( TABLE[y][-foo(( ( -foo(-dog,-990.924) ) ),foo(1))] )][-Arya] )),mislead(-720.17),COLS)][TABLE[-0.29][y]] )],-2)])){
	dog / mislead(rule(( -Arya - -Ygritte ),( ( --y - TABLE[Stark][( betray(TABLE[-0.14][betray(( -0.72 ))]) )] - y * ( -( Jon ) * -280.097 ) / Stark / -COLS ) ),TABLE[-38][( mislead() )]),-270.61);
	( TABLE[x][( -( betray(Ygritte,bar(mislead(mislead(ROWS,-1,0.55)),( foo(( -10.4 + ( ROWS + TABLE[-rule(( 0.04 ))][rule(rule(betray(TABLE[85][( 63 )],-1)),-640.3)] ) )) / y ))) ) )] );
	Jon -= -55
} else {
	( -destroy(-foo(COLS - betray(Stark),Ygritte,( 630.904 )) * -48 - 980.33) ) - ( -( destroy(0.52,--betray(-0.53 * -34 - betray(-1),0.86)) ) ) / -0.07;
	COLS;
	Ygritte /= ( -Stark )
}
}
def TABLE[( -rule(dog) )][k] {
	Jon += TABLE[0.12 / -y][COLS];
	-foo(foo(-0.63,83,---0.26)) / ( Arya )
}
assert TABLE[foo()][Jon] : "Winter is coming"
def destroy(x,Arya,Stark){
	if(rule(-0.52,y,TABLE[0.89][--0.85] * protect(( Sansa )) * dog)){

} else {
	-COLS * --850.6;
	if(betray(180.5757 * destroy(( destroy(-1) ))) / x * x){
	( betray(-0.89) );
	Ygritte
} else {

};
	betray(betray(),22 * Jon + protect(foo(( -bar(-18) / -0.26 ),Jon * ( 1 ),-( 34 ) * x),Hodor))
};
	y /= Stark
}
var Hodor = ROWS
def TABLE[Arya][i] {
	Ygritte /= -COLS;
	x += -780.51 + TABLE[-destroy(-betray(( 160.95 )),( 0.38 ))][( ( 19 ) / Hodor )];
	Sansa += ( ( ROWS ) )
}
var Jon = Jon
def foo(Sansa,Jon){

}
assert ( Arya - dog * ( bar(rule(x,Arya + -( TABLE[--1][betray(Jon)] ))) ) ) : "What do we say to the Lord of Death?"
assert ( ( 22 ) ) : "Fear cuts deeper than swords."
def foo(Hodor,Hodor,Arya){
	TABLE[Ygritte][-39 - ( 85 ) * 40.79]
}
def TABLE[( -rule(-ROWS + -rule()) )][j] {
	if(54 - y){

} else {
	if(dog){
	( ( COLS ) );
	if(Jon){
	Arya;
	dog -= 0.13
} else {

}
} else {
	Jon -= mislead();
	Jon - ( destroy(( Jon ),rule(bar(y,Sansa + ( protect(destroy(-Hodor / ( --( ( Hodor * ( ( ( y ) ) ) + --8 + -( dog ) ) ) ) * COLS + Hodor,-79),protect(1,betray())) )),--( ( --60 ) ))) ) + -17
}
};
	rule(COLS,-0.88);
	y -= -foo(( Stark ),foo(rule(protect(ROWS,Jon),-1),--ROWS * -27)) - -( ( y ) ) - ROWS
}
assert --1 : "One can not simply parse himself"
def protect(){
	if(( protect(-betray(rule(TABLE[mislead(--20.4862)][( -19 / Jon )])) - betray() * TABLE[bar(--0.54 * TABLE[--14][--0.3] * -81 * COLS)][( Stark )],Jon) )){
	if(0.72 * foo(-TABLE[( Stark )][foo(protect(-betray(-58) + --( Sansa )))] - ( --( foo(Jon,ROWS) / -0.08 ) + 870.111 ),ROWS) / -Sansa * ( Arya - ( -destroy() ) )){
	x += --rule(COLS,-COLS,-480.9 / -40);
	y -= -0.33
};
	-0.76
} else {
	Sansa += -0.24 - -Ygritte
}
}
var Ygritte = ( -foo(COLS) )
def betray(Arya,Stark){

}
def rule(){
	( TABLE[-( foo(x,( Jon ) - x,Sansa) )][y] )
}
var Hodor = bar(y,ROWS)
assert Ygritte : "What do we say to the Lord of Death?"
assert 0.21 / ( Jon ) : "Winter is coming"
def betray(Hodor){

}
def destroy(Ygritte){
	-TABLE[TABLE[Jon][-1]][( ( ( COLS ) + ROWS / betray(y) / --0.2 ) )];
	Sansa += protect(foo(-betray(betray(COLS * Ygritte + Stark),TABLE[protect(-( --420.7173 ) * ( TABLE[rule(destroy(200.3242 + COLS - -52 * foo(COLS,--32,0.8) - Hodor,1,( ( ( -Stark ) / rule(-COLS,1 + TABLE[( 3 )][Ygritte] / TABLE[--destroy(( ( ( betray() ) - ROWS ) ),Ygritte)][( betray(--protect(COLS),--( -0.53 )) * -Ygritte )]) ) )))][mislead(rule(),TABLE[( 30 )][-TABLE[Arya][( -( foo(COLS) ) / -1 * mislead(Stark,x,dog - -0.69) )]])] ) / x + ( -bar(Sansa,( rule(( ( ( -destroy(mislead(-Stark,COLS,12 - ---destroy() - protect(-950.0783) / Jon),-1) ) ) )) ),-0.82) ),TABLE[-TABLE[TABLE[dog][-( -0.27 ) - mislead(0.35,ROWS)]][-17]][( 0.67 ) - ( -240.777 )])][Stark] / dog),protect(-570.45,betray(Arya,37,protect(( bar(TABLE[x][Hodor] / destroy(12,-Stark + foo(Jon,-( betray() )) + betray(ROWS,( dog )) - Arya / mislead(rule(mislead(( 29 ),TABLE[--TABLE[-Sansa / ROWS - mislead(( Sansa ),foo(x - ( ROWS ),ROWS + dog),dog - Stark - TABLE[0.95][( ( Stark ) )]) * -0.53][-( -0.1 + TABLE[85][betray(( Sansa ))] * -0.51 )]][Ygritte]),COLS * Ygritte),( protect(betray(ROWS,COLS + 18),ROWS) )) / 0.02 / Ygritte),x,ROWS) ))) / 680.8611)),COLS * -foo(-( ( Sansa ) ) - protect(( ( Stark ) )) + -1,protect(66)),bar()) + rule(COLS,protect(-destroy(( ROWS ),betray(-990.088,ROWS) - TABLE[( ( Stark ) )][-ROWS] / destroy(bar(protect(ROWS),( Ygritte ))) / Stark)) * ROWS) / foo(( x ))
}
var x = Hodor * ( -83 )
var Jon = 51
def TABLE[750.03][k] {

}
def destroy(dog){
	( foo() );
	if(0.39 + protect(-bar(betray()))){
	0.65;
	if(rule(COLS)){
	if(x){
	x;
	Ygritte;
	if(Ygritte){
	if(--COLS * foo(( -54 ))){
	-Sansa;
	if(Arya - Ygritte){
	if(( Sansa )){
	Sansa /= ROWS;
	if(Arya){
	if(-0.09){

};
	if(-Jon){
	( ( TABLE[( ROWS )][Stark] ) );
	Stark -= Jon
} else {
	Hodor - Jon;
	if(( ( betray(1 + -98 + TABLE[-( betray() )][0.86],COLS) ) )){

} else {
	Hodor += foo(-betray(-( betray(-COLS) ),( COLS )));
	if(betray(( -67 ))){
	dog *= -rule();
	ROWS
} else {
	if(Sansa){
	Ygritte /= Jon;
	Jon += ROWS
} else {
	-betray(betray(rule(),destroy(400.54))) / COLS;
	Hodor -= -ROWS / Arya
};
	---770.1
};
	Sansa
};
	if(protect()){
	Jon;
	TABLE[rule(TABLE[bar(-950.2,-1)][--44])][COLS] - destroy(---1 - mislead(mislead(destroy() - --1),( ( dog ) ) / ( 0.39 )),Sansa) + COLS
} else {
	if(-rule(-0.47)){
	dog *= Arya;
	y *= TABLE[( y )][TABLE[-41][Stark]]
} else {

}
}
};
	dog /= -mislead(foo(Arya,--Ygritte,x),TABLE[Sansa][86 / Arya]) + COLS
}
} else {
	if(20){

} else {
	if(destroy(mislead(ROWS),( ROWS ))){
	if(bar(-Arya,( ( Ygritte ) ))){
	if(rule(-1)){
	-dog;
	if(COLS){
	Sansa += -( ( --( ----Hodor ) * -1 ) ) - ( -0.64 )
}
} else {
	if(-protect(TABLE[-y][-mislead(( -760.39 ),1,ROWS - x)],( foo() ))){

}
};
	if(( 77 )){
	if(-8){
	Jon /= ROWS
};
	if(destroy(--Jon / -1)){
	-320.199
}
}
}
};
	y *= -betray(( COLS ) / -( dog ),( --250.483 ) + bar() * -( betray(destroy(Ygritte) / betray(-dog) + x,160.913,protect(32)) ))
}
};
	TABLE[-bar(foo())][destroy(COLS)]
}
} else {

};
	16
}
}
} else {
	Ygritte -= destroy(-860.3 - dog,COLS)
}
} else {
	Arya /= -rule();
	Sansa -= -32;
	if(-( destroy(COLS) )){
	if(mislead(foo(( COLS ))) * ( -destroy(COLS,TABLE[TABLE[( 0.1 )][---1]][x],( mislead() + TABLE[foo(betray(1,protect(ROWS,-COLS,dog)),-0.93)][-COLS + y] )) ) - dog){
	( TABLE[1][foo(protect(( TABLE[rule(-0.54,y)][1] ),( betray(97,( -850.47 )) ),Jon + Ygritte),( x ),( ( mislead() ) ) + 78)] )
} else {
	Arya += TABLE[COLS][Stark] + ROWS - 1;
	-protect(--ROWS) * 40;
	TABLE[( -1 )][0.88] - 0.68
}
}
}
}
assert ( ( Arya ) ) : "What do we say to the Lord of Death?"
def foo(Hodor){
	if(ROWS){
	mislead(-1 * dog / ( TABLE[-98][rule(-ROWS,9)] ) / COLS * foo(ROWS,-1))
} else {
	Ygritte /= rule(81);
	Hodor -= ( 0.96 );
	Hodor += TABLE[ROWS][ROWS]
}
}
assert Sansa : "What do we say to the Lord of Death?"
var Ygritte = ROWS
assert -ROWS : "Nothing burns like the cold."
var Ygritte = ( ( 59 ) )
assert COLS : "Fear cuts deeper than swords."
def TABLE[COLS][k] {
	Arya += ( -dog ) * destroy(COLS,COLS) - TABLE[Hodor / ( Ygritte )][COLS * -( -( ( destroy(Stark,rule(),11) ) ) - Hodor )]
}
assert destroy(( --TABLE[--x][COLS] ),Arya) : "What do we say to the Lord of Death?"
def protect(Arya,Sansa,Hodor){
	Arya -= rule(mislead(mislead(-( Jon ) - Arya,-COLS),COLS),foo()) / -( 1 + -Stark - y );
	x += dog
}
def TABLE[-( 620.1229 )][k] {
	Sansa /= 4;
	if(bar(Ygritte) + COLS * x){
	ROWS
}
}
var Sansa = -COLS + -protect(protect(0.31) - -6 * 1 / -( Arya ),-( ( 1 ) ))
var dog = y
def TABLE[ROWS][i] {

}
def TABLE[-900.92][k] {
	y;
	if(mislead(Hodor,( -TABLE[dog][mislead(-9)] ),bar(TABLE[-( COLS ) * Sansa / Sansa / -COLS * 22][rule()] + ( x ),protect()) + protect(0.47,-91))){

} else {
	Sansa *= Sansa
}
}
def rule(Ygritte,y,dog){
	( protect(-Stark,foo(COLS,--COLS * -1)) );
	if(Ygritte){
	ROWS
}
}
def protect(Stark){

}
assert ROWS + mislead() + 0.62 / TABLE[1][14] : "Winter is coming"
def TABLE[COLS][i] {

}
assert y - Stark : "Winter is coming"
assert foo(-( foo(COLS) + -betray(-ROWS,( ( TABLE[Stark][0.6] ) + ( ( ROWS ) * Stark / mislead(ROWS) ) )) / --1 ),TABLE[Ygritte * 0.7][COLS]) : "One can not simply parse himself"
def bar(Ygritte,Hodor){
	-0.55;
	if(COLS){
	TABLE[Stark][Jon] + --Jon;
	if(-( -foo(destroy(ROWS,( betray() ),-betray()),64) ) + foo(( TABLE[Hodor][80] / destroy() ),COLS,ROWS + 0.99)){
	betray(TABLE[( 85 )][mislead(dog + mislead(-0.56,TABLE[( -1 ) - ROWS / TABLE[TABLE[COLS][( --betray() + Stark + -( dog ) / ( Arya ) )]][bar(dog,TABLE[-foo(720.738)][rule(COLS)])] - ROWS - destroy(-0.08)][400.3452]) / destroy())])
} else {

};
	Stark -= ( ( -54 ) )
};
	if(destroy(COLS,betray(--( ROWS )) + ( -Arya * COLS ),foo(rule(( -Ygritte ))))){
	Arya += ( 1 ) - 77 * destroy(-Ygritte);
	Sansa -= ( -0.58 + Ygritte / ( ( Ygritte ) ) )
} else {
	-Hodor * 1
}
}
def TABLE[-1][i] {
	Stark;
	if(-Hodor){

} else {
	x *= Stark;
	x /= 0.81
}
}
def rule(Jon,dog){
	1 / bar(TABLE[60.0792][ROWS]);
	if(( ( ( -rule(ROWS) / TABLE[-25][protect(COLS / COLS,-0.12)] ) ) ) + TABLE[-COLS][x]){
	Stark /= ( -( --60 ) / y )
} else {
	7
}
}
def betray(Jon,Stark){
	Jon -= --( COLS );
	ROWS
}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = -1
var y = Stark
def TABLE[-protect(( -0.56 ),TABLE[-0.36][--( Jon )],bar(680.9262 - Jon - -dog,TABLE[Arya][mislead(620.21,( -56 ))]))][k] {

}
def protect(){

}
def TABLE[-( bar(( rule(( -Sansa - protect(--0.4 + TABLE[rule(TABLE[TABLE[--protect(( -Sansa ) - Hodor * --300.519 * rule(),rule(destroy()))][-( ( TABLE[x][57] ) )] * TABLE[Jon][Sansa] / x + bar(-1,betray(Jon,Hodor,-protect(( -destroy(TABLE[230.786][--33]) ),-1) - 30.51),( 83 )) / bar() - 660.9][0.46],x / ROWS * ROWS,-COLS * y)][ROWS]) ) + x + 0.88,Stark,-350.51) )) )][i] {
	if(180.609){
	-TABLE[TABLE[( rule(rule(Sansa,Arya),( -y ),Arya) )][y]][ROWS + -0.91 / betray(-destroy(COLS,-( ( COLS ) )),-Jon) - COLS + -Hodor + ROWS];
	x /= -----32 + foo(x * 90);
	x /= COLS
} else {
	Jon -= ( -x )
};
	-Hodor
}
assert ( foo(( protect(ROWS,-betray(--10)) * COLS )) ) : "Nothing burns like the cold."
def TABLE[( destroy(-rule(( -0.8 ),-0.93)) + -30.03 ) - dog][i] {
	--Arya / -( dog / foo(0.76 / destroy(( Jon )),Hodor) );
	if(dog - ( protect() ) - TABLE[Hodor / -1 * ( ROWS )][0.59] - -TABLE[( 0.02 )][Hodor] - -y / 0.5 + ( ROWS ) - ( -0.09 ) - 840.6501){
	dog -= ROWS;
	if(Jon){
	( Jon );
	if(Jon){
	Stark /= 0.5;
	if(-22){
	if(--ROWS){
	if(( Hodor )){
	Arya += destroy(COLS)
} else {
	--rule(COLS)
}
};
	if(1){

}
}
} else {
	if(bar(--( 220.9878 ),-730.68 / --780.2966 * -1 / -x - --( COLS ),COLS)){
	if(-protect(( 96 ),TABLE[mislead(--mislead(( Sansa ),-33),( -COLS )) * Hodor][0.94] - mislead(62),( ROWS ))){
	( Ygritte ) + -ROWS + -270.7
} else {
	Jon /= betray(( ( y ) ),foo(Stark,( ROWS ) / -0.6)) * -( destroy(0.58,-830.64) ) / ( -20 ) / --Hodor
};
	if(( Hodor )){
	if(x){
	if(( protect(-ROWS,-COLS + -( 1 / -bar() ),Jon) )){
	if(-ROWS){
	1;
	-94;
	Jon -= x
} else {
	( x );
	if(Hodor){
	if(betray(TABLE[( ( -( destroy(-dog * ( Arya ) / 17,( COLS )) ) ) )][Stark - -foo(-y)],Jon)){
	-94;
	-0.75
} else {
	-9;
	TABLE[ROWS][bar()];
	if(( ( -bar() ) )){

}
};
	TABLE[( ROWS )][foo() - -48] - rule(( dog ),( Stark ));
	Hodor
}
}
} else {
	if(protect(Jon,y - 53)){
	( ( x ) )
};
	Sansa *= COLS
};
	Arya *= ( -COLS ) - ( bar(dog,y,-Sansa) );
	Arya -= rule(150.203,-( -0.19 ) + dog)
} else {

}
} else {
	--( mislead(-destroy(),TABLE[-1][---0.66],COLS) ) / ( betray(-rule(TABLE[Jon / ROWS][( Sansa )],TABLE[Jon][-ROWS])) );
	Sansa;
	if(( --( Stark ) ) / ROWS){
	if(--0.49 / 0.1){
	-ROWS;
	y += 0.8
} else {
	-44 * Sansa;
	-( -Hodor * dog );
	if(--Jon){
	Arya *= COLS;
	( dog );
	if(-destroy()){
	Hodor += destroy(Hodor - ROWS - -( ROWS ),( rule() )) + -740.79
}
} else {
	Stark;
	if(Arya){

} else {
	x /= TABLE[COLS][Stark];
	Jon /= -470.591;
	( ( TABLE[COLS][-( -Ygritte )] ) )
}
}
}
} else {
	if(--310.0275 - 16){
	if(-24){
	Sansa /= --0.52
};
	Sansa -= TABLE[( -1 )][betray()];
	y /= Hodor
}
}
}
};
	Hodor *= ( ( 0.85 ) / 82 )
}
} else {
	0.88
};
	if(( protect(-1,x,--destroy(x)) )){
	x /= Jon;
	if(rule(COLS,--y)){
	if(( x ) - Ygritte * -0.61){
	if(protect(Stark)){
	if(-0.74){
	if(-0.18){
	if(-( destroy() ) + -( ROWS / bar() ) * 260.85){

}
}
}
} else {
	x /= Sansa;
	if(TABLE[( Ygritte )][Hodor]){
	dog -= --Stark
} else {
	Ygritte += ( ( 850.6 ) + 1 )
}
};
	-TABLE[--COLS][TABLE[rule(0.37 + -1,-Hodor,( 22 ))][-0.69 / -0.92]];
	-betray(--26)
};
	if(TABLE[( ROWS ) * destroy(20,( ( 560.46 ) ),58)][--( 8 * -bar(Sansa - ( ( ( COLS * ROWS ) ) ),1,-rule(Ygritte - x)) ) - x]){
	-y
}
}
}
} else {
	Arya /= -( 1 );
	Sansa += ( mislead(-0.05,-760.4) );
	if(Stark){
	18;
	if(( destroy() )){
	if(Sansa){
	Arya -= bar(foo(Arya * Hodor,ROWS))
} else {
	if(x){
	if(y){
	if(COLS){
	dog /= ( -39 )
};
	Jon += TABLE[( Hodor - TABLE[Ygritte][-0.55] * ( destroy(1,Jon) + ( ( COLS ) ) ) )][-0.47]
}
};
	TABLE[-5][COLS]
};
	if(COLS){
	Stark += -92
} else {

}
} else {
	if(( -foo(ROWS,-( Stark ),Hodor) )){
	0.53
}
}
} else {
	x -= rule(TABLE[COLS][( ( mislead(---1 - ( bar() ),Ygritte) ) )]);
	Jon
}
}
}
def TABLE[TABLE[( betray(dog) )][foo(-Sansa + 940.71 - -160.545,-( -1 ),( -0.31 ))]][i] {

}
def TABLE[-mislead(bar(( ROWS ) * ( ( betray(( dog )) ) ),700.39),--0.72 * Stark / foo(( 0.46 ),mislead(-COLS,y / -0.05)))][i] {
	Hodor += y;
	if(COLS){

} else {
	y += TABLE[-( TABLE[Jon][-0.22] ) - ( ( TABLE[-0.34][bar(x)] ) )][-0.33];
	if(--dog){

} else {
	--bar(41)
};
	if(ROWS - ( bar(( TABLE[Ygritte][Sansa] ),destroy(-0.94 * COLS,( ( destroy(--destroy(-31,Ygritte / Jon,( 1 )) / Sansa) ) ) / -56,-0.9),ROWS) ) + 1){
	if(-foo()){
	ROWS;
	--Stark;
	rule(destroy(COLS,x + Ygritte))
} else {
	if(( ROWS )){
	if(--73){
	-0.81;
	foo(foo(),destroy(betray(Jon),COLS - ( -52 ) + dog * -70.3 * COLS / y - x))
} else {
	y /= ( mislead(( Arya ),COLS) ) / ROWS
};
	( ROWS );
	if(COLS){
	( Arya + foo(-foo(),-Ygritte) - TABLE[( --ROWS + TABLE[Sansa][( protect(290.4622 + Ygritte + 0.92) )] )][Ygritte] * ( ( -0.67 ) ) + ( ( ROWS ) ) );
	if(Sansa){
	if(--destroy(betray(rule(x,( TABLE[COLS][( ( y ) ) + destroy(Ygritte) * Ygritte] )),y,( COLS - --0.39 ) - ( betray(TABLE[-TABLE[-dog][bar(bar(-71),-mislead(( Jon + -680.449 ),0.58),-( Hodor ))] - --290.214][Arya],COLS / TABLE[protect(TABLE[-72][Sansa])][x],-( COLS ) * 2) )))){
	betray(TABLE[Sansa][betray(Stark)]);
	if(ROWS){
	Sansa /= COLS;
	Hodor *= rule(rule(( 0.95 ),Sansa * Arya))
} else {
	-56
}
} else {
	if(( COLS )){
	( --( mislead(-( protect(TABLE[foo(( y ),COLS)][ROWS],bar(( Hodor ),TABLE[29 / ROWS * 240][34])) )) ) + -dog );
	0.9
};
	y -= ( 1 ) * destroy(-( protect(-96) ) - -0.47 + TABLE[foo(COLS / -( Jon ) / dog,-Jon)][TABLE[( Jon )][Ygritte]] * destroy(( x ) * 0.04 / ROWS),Arya) - x;
	Stark
};
	Sansa /= ROWS;
	if(betray(-50,Ygritte)){
	Arya += ROWS;
	betray(( ( ( -rule(ROWS,( Ygritte )) / 20 ) ) ),-7);
	if(( ( -60.9 ) )){
	-ROWS
} else {
	if(-rule(( -destroy() / -TABLE[-( ( protect(-COLS) ) )][0.68] ))){
	x /= ---TABLE[y][1];
	Hodor /= betray(-0.88,COLS / ROWS)
} else {

};
	mislead(Stark,-0.54)
}
}
}
} else {

}
} else {
	-COLS;
	dog *= COLS;
	Arya
};
	if(-38){
	( bar(ROWS,betray(rule(Sansa,--COLS)),0.05) )
};
	if(-0.14){
	if(-Ygritte){
	Stark /= TABLE[Arya][( destroy(-ROWS) )] * Jon;
	dog /= ( ( 1 ) )
}
}
};
	Arya += bar() / TABLE[( -( bar(-( --TABLE[x][betray(rule(( ( -0.17 ) )) * ( --0.24 ),( COLS ))] ),mislead(490.6)) / -TABLE[94][( foo(0.26,ROWS,ROWS) - ( -110.76 - ( 35 - -730.686 - COLS ) ) )] - Hodor - ( ( -30.169 ) + -COLS ) ) )][-63];
	if(ROWS){

}
}
};
	( ( mislead(Jon - Sansa) ) )
}
def rule(dog,Arya,Ygritte){
	Jon *= Sansa
}
var Ygritte = ( ROWS )
assert bar(( -bar(Ygritte,-destroy(ROWS,-( ( ( 1 ) ) ))) + mislead(ROWS,-1,( Arya - Arya )) ),( -x )) : "Fear cuts deeper than swords."
def TABLE[bar(-2 / ROWS) + COLS - 0.84][i] {
	ROWS;
	-( Ygritte );
	Ygritte += 1
}
var Sansa = bar(COLS) * ( COLS - -dog )
assert -0.71 : "What do we say to the Lord of Death?"
def rule(dog){
	if(87 * ROWS){

};
	if(ROWS){
	rule(-55,--0.92) * ( -bar(Hodor * foo(TABLE[( TABLE[26][( Ygritte )] )][--55 - ( ( ROWS / 69 ) )]),-840.67 / y - ( y ),-TABLE[y][-( Sansa )] / ( ( -96 ) ) + -rule()) )
} else {
	( TABLE[--COLS + --y - bar(Jon,mislead(betray(x)))][bar(( -( --COLS ) ),-( ( 0.17 ) ),-ROWS)] )
}
}
assert ROWS : "What do we say to the Lord of Death?"
def TABLE[TABLE[COLS][rule(bar(( -920.16 + 16 )),betray(),( protect(Jon) - -26 ) + ( -1 + 0.03 ))]][k] {
	if(Jon){
	TABLE[foo(-680.8,-0.58) * -dog][COLS - TABLE[ROWS][TABLE[-Sansa - -55][( -0.41 )] / 0.28]];
	Ygritte;
	if(foo(( Sansa ),0.23)){
	if(TABLE[( 25 )][mislead(destroy(bar(),( TABLE[x][-0.17] )))]){
	if(( -20 )){

} else {
	rule(foo(-770.04,protect(COLS,-1)) / Jon,-COLS + Jon / bar(COLS / Stark,( --betray(foo()) ) * dog));
	if(-COLS){
	Sansa *= 1
};
	TABLE[x][Ygritte]
}
} else {
	x /= x
};
	Ygritte;
	if(destroy(( COLS ),93,-0.8 * 0.27 - -TABLE[44 / ( ( -( Stark ) ) )][ROWS])){
	Ygritte -= -betray() * Ygritte * dog * --protect() - COLS
} else {
	y *= --Arya;
	betray(-( -18 ),-TABLE[TABLE[destroy(Sansa,---( x ) / -1 * protect(Hodor,--1),Jon)][COLS]][77],dog)
}
}
} else {
	if(( TABLE[y][590.809 * -TABLE[0.46 - ( rule(-Stark) )][Ygritte]] )){
	Hodor -= ROWS
} else {
	TABLE[betray()][-COLS - Sansa - bar(( 940.31 ),-0.55) - -70 / -81 / -61 / y * 1 / protect(bar(mislead(),y),betray(betray(0.22),Arya,mislead(Sansa,TABLE[-64 + COLS / x][640.473]))) + TABLE[-Sansa][58]]
};
	Stark += foo(-1,dog,( -ROWS / ( protect(( bar() ) - -0.05,COLS) ) * ( COLS ) - 0.52 ) - -Hodor);
	ROWS
};
	protect() + rule(TABLE[1][rule(( ( COLS ) + ( foo(ROWS,TABLE[Stark][-99]) ) * -440.933 ),mislead(foo(bar(COLS,( Jon ))) + ( Stark ),destroy(Arya,--Stark)) * y)] + -0.61 / destroy(( Sansa )) + ( ( ( COLS ) ) ),0.05)
}
assert Arya : "Nothing burns like the cold."
def TABLE[betray(protect(),TABLE[foo(( Jon ),Hodor,-( ( -ROWS ) ))][Sansa])][i] {
	if(bar(( COLS / Ygritte * x + y ),-31)){
	if(-Hodor){

} else {
	Jon /= ( y );
	if(x){
	Hodor += -Arya + -Ygritte + -Jon
} else {
	Arya += -Hodor * foo(ROWS)
}
};
	y *= --( -0.21 )
}
}
def TABLE[( protect(protect(( -betray(dog,x + ( -( protect() ) ) - ROWS + TABLE[( ( ( -COLS * -protect(Stark) ) ) )][0.18] * mislead() - Stark) / Jon ) / foo() * 0.45,-ROWS)) ) - bar() + 18][i] {
	-940.5046 / ( ( ( y ) ) )
}
assert Stark : "Nothing burns like the cold."
def betray(x){
	Hodor /= TABLE[--dog][rule(mislead(-TABLE[( ( -0.46 ) )][destroy(( ( COLS ) ))] - 0.37,-0.86 + ROWS + TABLE[ROWS][destroy(( x )) / ( -0.33 )] + ( COLS - -140.468 / destroy(foo(TABLE[x][( Sansa )],-x + -57,x),-0.95) )))]
}
var y = ( ROWS ) + x + x * COLS
var Jon = ( Jon )
assert ( ( ( -0.38 ) ) ) : "Nothing burns like the cold."
var Stark = Ygritte
assert ROWS : "Fear cuts deeper than swords."
def bar(dog,Arya){

}
assert -bar(-( --TABLE[betray(foo(COLS,COLS))][mislead()] ),Sansa) : "Winter is coming"
assert dog : "Winter is coming"
def rule(Hodor,y,x){
	( ( Sansa ) );
	rule(Arya,-300.9987)
}
def TABLE[foo(betray())][i] {
	ROWS;
	bar(x)
}
var Hodor = -TABLE[1][x]
assert Hodor : "Fear cuts deeper than swords."
def mislead(Stark,Arya){
	if(74 / 0.25){
	( 41 ) / -protect(-TABLE[Sansa][foo(dog,87) * 840.9035])
} else {
	if(mislead(destroy()) / 77){

};
	if(( COLS )){
	if(( -0.54 )){
	( ( -1 ) );
	if(bar(ROWS)){
	bar(rule(( -1 )));
	-TABLE[mislead()][COLS]
} else {
	( ( Stark ) * dog );
	x *= ROWS
}
};
	betray(x)
} else {
	x += ROWS;
	if(-( COLS / TABLE[( COLS ) - rule(-96,( ( ROWS ) ),x) / Sansa / ( COLS ) / ( ( COLS ) )][betray(destroy(Sansa,-( Stark ),( ( ( rule(COLS) ) ) / bar() )))] )){
	Hodor -= betray(20)
}
};
	foo(dog,-0.91)
};
	if(-480.6){
	if(TABLE[( -1 )][Sansa]){
	if(rule(-73,( -77 ))){

} else {
	Jon /= bar(-210.63 - -11,Arya);
	x /= -y
}
}
} else {
	TABLE[-( mislead() )][protect(ROWS + -TABLE[--TABLE[protect(--( -rule(-74) * mislead(ROWS) ),betray())][foo(950.6 * 0.57)] * ROWS][protect(Sansa,( ROWS ),-0.11)])]
}
}
def TABLE[( ( COLS ) )][j] {
	( ( x ) ) + dog
}
var dog = destroy(-( Sansa * --rule(TABLE[TABLE[--1][Arya]][-820.89 + Arya]) - protect(Ygritte,( -0.21 / COLS )) + -Hodor - ( ( Ygritte ) + ROWS ) - ( -( ( COLS / ----970.378 * 0.44 + ROWS - ROWS ) ) ) + -x ) / ( 0.21 ),mislead(TABLE[( TABLE[-Sansa][( ( destroy(--TABLE[-dog][--( -COLS * ( protect(0.16) ) - 0.73 )] / Ygritte,ROWS - 0.68) ) )] )][-80.5],-0.68)) / COLS - -540.4 * bar(-0.98,( ( COLS ) * ( 51 ) ))
def protect(Arya,Arya,Hodor){
	dog += ROWS;
	Hodor *= foo() + ( -690.502 )
}
var dog = -47
var Sansa = ( ( ( --44 ) ) ) + TABLE[-0.67 + -TABLE[destroy(rule(0.28,COLS),-0.07)][-( --ROWS + mislead() - mislead(( COLS ),Stark,--35 - -1) ) / destroy(COLS,1 / --32 - ( -1 )) + bar()] + ( TABLE[protect(-660.049)][mislead(( -TABLE[-ROWS][Ygritte] ),Jon + bar())] )][ROWS]
def mislead(x,Arya,Stark){
	Sansa;
	if(190.8){
	Hodor /= -0.51;
	Ygritte *= ROWS
}
}
var y = ( Stark )
var y = dog - Stark
def protect(Stark){
	if(0.17){
	-160.23
};
	Hodor += ROWS
}
var Stark = -TABLE[-TABLE[TABLE[Ygritte][Hodor]][y]][-1]
var Ygritte = 64
var Jon = Stark
def bar(Hodor){
	if(( ROWS )){
	x
} else {
	Jon *= --Ygritte;
	Sansa *= COLS
}
}
var Ygritte = -4
def mislead(Stark){
	x
}
var Hodor = -Jon - -0.89 / --foo(---dog,1)
var Stark = -1 / -Sansa
assert y - 89 : "What do we say to the Lord of Death?"
def TABLE[98][i] {
	if(Stark){
	if(TABLE[( --790.172 )][64] / -( ROWS ) * TABLE[x][-Arya]){
	Jon /= -0.47;
	x *= ( -36 ) - ( foo(---protect(( -( Jon ) / --1 * -1 ),( ( -ROWS ) ) * bar(foo() * ( betray(( ROWS )) ))),Ygritte,Sansa) )
} else {
	COLS
};
	Stark *= protect(COLS,--COLS + 59)
};
	Hodor *= COLS
}
var Ygritte = dog
assert TABLE[mislead(Ygritte,bar(( --TABLE[-( TABLE[( Hodor )][betray()] )][y] )),-TABLE[0.18 - COLS][Stark] / ---destroy(--bar(( Jon )),foo(-betray(),-1,( TABLE[COLS][-COLS] * -49 )))) / Ygritte][ROWS] : "What do we say to the Lord of Death?"
def TABLE[-0.38][i] {
	if(ROWS){

};
	0.06;
	y *= --27
}
var x = -ROWS
assert ( -( ---ROWS - COLS - --protect(( bar(Stark,Sansa / -destroy(x,ROWS) - COLS + Sansa) ),( --6 * -mislead(( destroy(76) ),dog) )) / -43 + foo() / Sansa / -1 * ( ( ( -ROWS ) + 0.98 ) ) ) ) : "Nothing burns like the cold."
def TABLE[destroy(TABLE[ROWS][protect(( COLS ) - COLS + -TABLE[( -y )][Jon - -protect(betray(0.88,-mislead(Stark,0.76,-bar(( 0 ),-1) - 1)),COLS)] - betray() * bar(( ( -0.15 / ROWS ) )),--1)],Ygritte) * -COLS][i] {
	52;
	Ygritte += 1
}
def TABLE[x][j] {
	Arya /= 48
}
def protect(dog,Stark){
	( ( COLS ) );
	if(( -protect(62,TABLE[foo(0.13)][-dog]) )){

} else {

};
	-betray(-COLS + ( -rule(Hodor,( ( ---( y ) ) )) ))
}
def TABLE[--ROWS][i] {
	-Hodor
}
def TABLE[TABLE[-mislead(( 740.7 ) / 0)][dog + ( mislead(foo(( ( ( destroy(250.054,( Stark )) / Jon ) ) ),( TABLE[( rule(COLS,Stark,( betray(y) )) ) / Jon - -COLS][-Stark] ))) ) / ROWS]][k] {
	Sansa += TABLE[COLS][1]
}
assert TABLE[-( ( COLS ) )][--Stark - 70.4822 - ( -68 ) * 0.5 - -70] : "Fear cuts deeper than swords."
var Ygritte = -0.25
def TABLE[-( COLS ) + protect(rule(TABLE[TABLE[ROWS][Jon / ( --320.54 )]][COLS + Hodor]))][j] {
	dog += ( -Sansa )
}
var Jon = COLS
def TABLE[--ROWS - ---Sansa][k] {
	if(ROWS){
	Jon
} else {
	Stark /= Arya;
	if(Jon){
	TABLE[protect(( COLS + dog - -48 ),---Stark / Stark / ( ( -( 1 ) ) ),( -Arya ))][-0.93] * --( COLS ) * TABLE[-32][TABLE[--0.13][1]]
} else {
	Stark /= TABLE[( Hodor )][( foo(COLS,ROWS / -COLS * Hodor) )] + protect();
	Sansa /= Jon
};
	dog *= --27
}
}
def bar(Arya,Sansa,y){
	if(TABLE[-COLS][destroy(rule(mislead(Sansa,( ( ( COLS ) ) ) / ( ROWS ),ROWS))) * Arya]){

}
}
assert ROWS : "Winter is coming"
def TABLE[( ( -81 ) )][j] {
	if(-( ( 1 ) )){
	if(foo(ROWS,rule(),destroy(--98))){
	if(--y){

};
	if(rule(-Jon,510.71)){
	Arya -= mislead();
	Ygritte += Hodor
}
};
	-Stark;
	if(foo()){

}
} else {
	-34 + ----x - ( ROWS );
	-Ygritte
}
}
def betray(Stark,Ygritte,y){
	if(-1 * ( -0.9 )){
	x += 16
} else {
	if(--0.78 * --( -y ) - -( 330.26 )){
	Ygritte -= -ROWS
} else {
	Arya *= rule(ROWS,Stark + -0.44);
	y /= -0.76
};
	x /= COLS
};
	mislead()
}
assert protect(Sansa) : "One can not simply parse himself"
def TABLE[--0.96][j] {
	x *= COLS
}
def destroy(Sansa,dog,Hodor){
	Stark /= ( dog ) - y
}
def rule(y,Arya){
	Stark += protect(Stark)
}
assert -Ygritte / bar(TABLE[( TABLE[Stark][--x - ( 74 )] )][230.807],( x ),-bar(TABLE[--1][1],-x)) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = 0.32
var Jon = -27 / ( ROWS ) + rule(99 * Ygritte) / -25
def TABLE[( TABLE[Stark + -protect(-foo(Stark,ROWS),protect(destroy(-2),-ROWS))][-TABLE[TABLE[Jon][Hodor]][-241] + foo(( TABLE[62][61 * 58 / ROWS] ) - -destroy())] )][i] {
	( betray(TABLE[-98][--( ( Ygritte ) )],Arya,ROWS) );
	if(( rule(TABLE[Sansa][( x )],COLS) ) + TABLE[destroy(( destroy(ROWS,TABLE[Sansa][-ROWS - --( ROWS ) + -destroy(protect(),-1,COLS) * foo(48,--1 + ---( ( ROWS ) / foo(--0.11 - ---( ( 0.86 ) ) * Ygritte * -0.14 * Ygritte / Ygritte + COLS) ) / ( ---53 + y ),( ( -55 ) ))]) ),510.43 * TABLE[COLS][COLS],Sansa)][Sansa]){
	COLS
} else {
	Jon /= betray(x * ----COLS * rule(COLS,ROWS),protect(),-COLS);
	Arya += -COLS;
	-7
}
}
assert y : "Winter is coming"
var Ygritte = ROWS / 45
var Stark = -0.2
def TABLE[Ygritte][j] {
	Hodor += 1;
	y /= ( Stark )
}
assert foo(( --( protect(( dog * 0.72 ),TABLE[COLS][-1],64) ) ),-( Stark + foo(( COLS * 1 ),( ( ( Ygritte ) - -0.14 ) )) )) - -( x ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert destroy(-87) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = -Sansa
var Ygritte = Stark
var Jon = dog
def TABLE[foo(rule(88,-570.4718),y)][k] {
	if(TABLE[destroy()][-0.71 - ( ( --bar(( ROWS )) / rule(( Sansa ),Sansa + foo(ROWS)) / -0.8 ) )] / -1){
	x += protect(COLS,-1,28);
	dog
} else {

};
	dog;
	Sansa += ( ( rule(( ( protect(( -0.08 )) ) ),38) ) ) + ( -ROWS )
}
assert TABLE[--38][ROWS] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[y - 0.59][i] {
	bar(( -0.28 ),ROWS,( betray(mislead(betray())) ));
	if(COLS){
	if(120.3757){
	if(-( 1 ) - -750.931){
	Hodor /= Jon
} else {

};
	Arya -= -0.82;
	foo(Sansa,-1,-ROWS)
} else {
	if(destroy(COLS,-foo() - ( TABLE[( COLS )][( mislead(protect(-( --65 + x ),-protect(( TABLE[( ( 0.12 ) )][--1] ) + betray(210.254,protect(-( -( ( -foo(( 0.88 )) ) ) / -76 / mislead(Ygritte,protect(ROWS,39 * ROWS * betray(Hodor)),( mislead(mislead(destroy(-Arya,( ( protect(-0.2,310.738,( protect() )) ) )) - -mislead(( Hodor )),-47,( --foo(y) * foo(protect(-( ( destroy(COLS) ) ) - ( ( protect() ) ),( rule(TABLE[--protect(-0.61)][( mislead(40 / betray(Jon,destroy(0.03)) - foo(-0.53) + Arya,foo(COLS + -0.32 - -ROWS,( y ),( COLS ) / 70)) )]) )),Stark,Hodor) )) / betray(( -ROWS ),( ROWS )) / -( -3 ),Arya) / ( ---Arya ) )) ),Stark - protect(Hodor * COLS,0.61 * -0.5201 - TABLE[-Stark][( protect(( -foo(TABLE[( x )][( --( Ygritte ) ) - 220.519 + rule(Jon)]) )) + ROWS )]) + -dog),protect(y)) - ROWS) / ( -0.72 ),0.01)) )] ) / destroy(dog))){
	Stark + -ROWS - ---protect(-0.86 * ( -840.67 - -mislead(dog * bar(protect(),bar(-Jon,( betray(bar(( ROWS ),19),mislead(-protect(--0.76 + mislead(),mislead(dog,-230.689),-0.42),( y ))) ),-59 * betray(COLS)),( -760.07 ))) ),betray(( ( Ygritte - y - ( destroy(bar(protect(0.66 * Stark),( --bar(COLS) )),( rule(rule(Ygritte,bar(Hodor),ROWS),-58) )) ) ) ),protect(Sansa))) * ( Jon );
	Jon /= rule(y,dog)
}
};
	Stark;
	( -1 )
}
}
def TABLE[mislead(bar(),0.64,destroy(-ROWS))][i] {
	if(TABLE[y][-30]){

};
	Sansa /= -( Jon );
	-0.37
}
assert -0.91 : "Fear cuts deeper than swords."
def bar(){
	if(betray(52)){
	Hodor += ( ( ( ( mislead() ) ) / Arya / ( betray() ) ) ) / rule(70,( COLS ));
	Jon *= 44
} else {

};
	if(foo(34,-43,1) + -6){
	if(Stark){
	Ygritte /= -foo(ROWS / ROWS / 1 / Hodor - COLS / -ROWS - --foo())
} else {
	1 / ( 50.538 ) - ( 0.79 )
}
} else {
	Stark -= mislead(-foo(foo(COLS),-( COLS )),bar(foo(rule()),0.65 * TABLE[COLS][-55 / -foo(Arya)],-380.946) + y * ( --betray(-dog) ));
	-ROWS;
	Arya += ROWS
}
}
def TABLE[Hodor][j] {
	( -TABLE[foo(1,ROWS)][TABLE[( betray(( -1 )) ) / 1][Stark]] / 24 )
}
def TABLE[( 160.68 * 400.37 )][j] {

}
assert rule(foo(-28)) : "Nothing burns like the cold."
def TABLE[destroy(( ROWS ),ROWS) * -41][k] {
	y += Ygritte;
	if(---880.136){

};
	COLS + ( ( destroy(-Jon * -mislead(ROWS),COLS / destroy() * -( -( TABLE[Sansa][( -Stark )] ) * 1 - Ygritte * ( foo(--Sansa,( --TABLE[( protect(( ( Ygritte ) )) )][Stark] - 25 * COLS )) ) ),-COLS * COLS) ) )
}
def TABLE[COLS][i] {
	if(rule(Stark)){
	-0.35 - 50;
	Sansa /= ( 6 )
}
}
def foo(Stark,Stark,Sansa){
	if(Stark - -( -49 )){
	Hodor /= ( ( rule() ) + rule(Arya) / -0.49 );
	Ygritte /= betray(-TABLE[dog + x / Hodor][rule(-6,Stark)] / 0.96,bar())
} else {

};
	if(100){
	( -44 * ( destroy(mislead(destroy(Arya)),rule(protect(( rule() ),740.72) / -( -0.72 * TABLE[-Hodor][COLS] ),dog,ROWS),( ( rule(( 810.27 ) / -destroy(( protect() - Hodor ),foo(Hodor)) + -0.23,-y) ) )) ) );
	dog -= ( -Sansa )
} else {

};
	y -= y
}
def TABLE[dog][j] {
	x *= ( Hodor );
	if(COLS){
	TABLE[TABLE[-94][betray(betray(( COLS )),y)]][Jon];
	if(ROWS){
	--0.17;
	if(ROWS){
	if(Hodor){
	--( y - bar(bar(29)) );
	if(bar(( betray() ),-0.05,-0.29)){
	if(TABLE[( -ROWS )][Ygritte]){
	if(Jon){
	( rule(-( --93 ) / -1 * 10.9,protect(-0.01)) )
}
} else {
	dog
}
}
}
}
}
};
	if(-0.96){
	-COLS - COLS;
	if(( -protect(y,TABLE[-0.73][ROWS] * mislead(-ROWS * COLS - foo(bar(-betray(TABLE[destroy()][x] + TABLE[TABLE[-( -0.29 )][--78]][ROWS],Arya)),bar(( -( Arya ) ),20,dog)),-( protect(Ygritte,( -( 1 ) )) / ( 27 ) ),-650.645),-1 * Jon) )){
	Stark /= foo(( -mislead() ),--570.604) / -1
} else {
	TABLE[66][50.8];
	Sansa /= COLS
}
}
}
def TABLE[Hodor][k] {
	29
}
def TABLE[Stark][j] {
	( 94 )
}
def TABLE[--260.3531 - TABLE[( -y / COLS ) - ROWS * x * Stark][-0.93]][i] {
	Arya -= Ygritte;
	Jon *= y
}
assert ( ( ROWS ) ) : "Winter is coming"
def TABLE[( mislead(( -mislead(Stark,COLS) ),-0.21) )][j] {
	if(( x )){
	-( --1 / ( TABLE[59][-1 * COLS] ) - ( -( ( COLS ) ) ) )
};
	Arya;
	x /= -86
}
var dog = 0.94
def TABLE[Arya * -Arya * 1][i] {
	if(-( ( ( 1 ) - TABLE[y / destroy(COLS,--82) * 18][TABLE[-690.598][TABLE[Stark][COLS]]] ) )){
	Sansa
}
}
var Hodor = ROWS
var dog = -Hodor
def TABLE[-bar(TABLE[COLS][( y )],( -Hodor )) * -betray(-0.11,( x ),betray(( ( ( ( TABLE[COLS][-destroy(( protect(-TABLE[-100][0.39],y) ),--ROWS,COLS)] ) ) / y ) ) * rule(93,200.7,rule(-1,ROWS,-TABLE[Hodor][destroy()]) * rule(Jon + ( Ygritte ))),-( Ygritte )))][j] {
	Arya;
	COLS
}
assert ROWS + -protect() : "Nothing burns like the cold."
def betray(y,dog,dog){
	if(-4 / 1 - Ygritte){
	Ygritte /= Jon;
	Jon /= TABLE[73][-COLS]
};
	Jon += y / mislead(ROWS,foo(-0.24,( -Arya + ( -Sansa ) ) / foo(0.38) * foo(-( 230.75 )),1))
}
def TABLE[bar(( TABLE[-( COLS )][rule(-( Arya ))] * 380.45 * Arya ),-440.2 * -380.032)][j] {

}
var Stark = -570.3
def destroy(Sansa,Stark){

}
def protect(Ygritte,Sansa,Hodor){
	if(foo(( rule(TABLE[x][-770.606]) ),430.519)){
	Arya += rule(ROWS)
}
}
assert ( bar() ) * -Ygritte * Ygritte + ( TABLE[mislead()][-0.35] ) : "One can not simply parse himself"
var Ygritte = x
var dog = COLS
def TABLE[440.34][i] {

}
var dog = -64
var Ygritte = -destroy(0.96,-( -x ))
def rule(Arya){
	Arya;
	if(-0.33){
	( mislead(( 3 / 41 / Jon ),Arya,dog + -Sansa + foo(-0.94,Ygritte,32)) ) * Sansa
}
}
def TABLE[Sansa + ( y )][k] {
	dog -= -990.991;
	TABLE[mislead(COLS,( -66 ))][96]
}
def TABLE[Jon][i] {
	Ygritte /= ROWS - 0.46 / y * TABLE[--0.21 * -640.23 / ( betray(0.41) * foo(( -( bar(mislead(( Jon * ( ( y ) / ROWS / -foo(ROWS + -71,( ( x ) )) ) ),destroy(( -Sansa ))),x) ) )) )][-( TABLE[--35][( --0.71 - mislead(( ( Ygritte ) ) - 1) - ( ( betray(-930.82,( ( ( ( --Sansa ) ) ) )) ) ) )] )];
	ROWS * ( -1 ) + TABLE[dog][x]
}
assert -x : "One can not simply parse himself"
assert Hodor : "What do we say to the Lord of Death?"
def bar(Ygritte,Hodor){
	x += TABLE[ROWS][( --y )];
	if(-Ygritte - Arya / 0.57 - -COLS / ROWS){
	if(COLS){
	if(( y ) + ( mislead(COLS + -rule(( ( --Stark - foo(Hodor,--Jon + TABLE[dog][betray(-foo(foo(( COLS - Jon ))),( COLS ))]) ) ),betray(( Jon ),( -y + x - Hodor / mislead() ))),0.16) )){
	if(Hodor){
	mislead(( -( x / -x / betray(Jon,Stark) ) * Stark + -1 ) + protect(1) + bar(-1,protect(-100.038,( TABLE[Hodor][( -( ROWS ) ) - ( COLS - Jon )] ),-y) * -79,-rule(1,( --x / --ROWS * --betray(Jon) - rule(( -1 )) - -Sansa * protect(( ( Stark ) ),Hodor) ))),mislead()) - ROWS * dog;
	-100;
	( -1 )
} else {
	-1
}
};
	if(foo(-17)){
	protect(-( Arya ) / --2,ROWS);
	Arya += -Ygritte;
	if(mislead(10,( 0.95 ),Hodor)){
	if(990.87){
	ROWS
};
	Jon *= Sansa;
	Stark -= ( 49 )
}
} else {
	Ygritte += Arya / ROWS;
	Arya
}
};
	dog *= ( -1 )
}
}
def mislead(dog){
	ROWS;
	if(-21){
	Hodor += COLS;
	if(-0.63){
	if(ROWS){
	COLS
} else {
	y /= COLS
};
	foo(y,x) / dog
};
	Arya /= -Ygritte - ( ( 0.01 ) )
} else {

};
	if(protect()){
	if(COLS){

};
	( ( 0.2 ) / bar(-Sansa) )
} else {

}
}
var Arya = --TABLE[ROWS][-destroy(-97)]
var dog = destroy(mislead(Ygritte))
def TABLE[x - 55][j] {

}
def TABLE[0.56][j] {
	Jon += ( -0.72 );
	if(-33){
	Sansa += Arya;
	if(-( TABLE[Sansa][y] )){
	if(mislead(-Sansa) - ---0.19){
	if(0.96){

} else {
	if(0.78){
	-x * ( ( 60.744 ) ) + 58
};
	if(-( protect() )){
	Hodor += -Arya
} else {

};
	x /= Sansa
};
	if(y){
	y
} else {

};
	-0.28
};
	Hodor -= 83 / ( dog )
}
} else {
	( Hodor );
	if(( bar(-0.66,rule(protect(COLS,Sansa,( mislead(( Arya * -360.6 )) )),-mislead())) )){

}
};
	Jon -= COLS
}
var y = y
def TABLE[TABLE[ROWS][54]][j] {
	x;
	y -= Ygritte - 0.21
}
assert destroy(foo(ROWS - COLS,dog),( TABLE[----0.39][0.96] )) : "What do we say to the Lord of Death?"
def mislead(Sansa,dog){

}
assert 39 : "Winter is coming"
def TABLE[-52][j] {

}
assert betray(1,--95) * foo(( 97 * ( ROWS ) * -rule(Jon,TABLE[TABLE[bar(-0.06,-y,-1)][( -0.86 )]][rule(foo(-Stark,TABLE[-0.87][--0.59 + foo()]) + -650.29 / ( -destroy(rule(100,-410.85 * betray(( bar() ),Hodor))) ) / ( mislead() + 0.69 ) - bar(--mislead(Arya,-62) - -( Jon ) / COLS / ( -mislead(( Stark + -( COLS ) - Ygritte ),rule(Stark) - -1,( Hodor )) ) * Stark - Ygritte),ROWS,-COLS)],( betray(-78,1) )) + protect(-1,Hodor) ),( -10.67 )) : "One can not simply parse himself"
var Jon = -0.99
def betray(Jon,Ygritte){
	if(-640.35 * -( 0.17 )){

} else {
	if(-rule(-95 + --COLS / ( ( ( Jon ) ) ),( y ),x) - rule(-1,( mislead(y) ))){

}
};
	-63
}
def mislead(Sansa,Jon,Hodor){
	Jon += mislead();
	Jon -= -Stark
}
def TABLE[( ( 24 ) )][i] {
	COLS;
	y - -TABLE[TABLE[rule(COLS) * Sansa + foo(-dog)][Arya]][Ygritte] * dog;
	TABLE[protect(-( --0.87 ) - -31,( -83 ))][-79]
}
assert mislead(( --0.12 ) - -110.2) : "Nothing burns like the cold."
var Hodor = -COLS
def TABLE[dog * -51][i] {
	Hodor;
	dog
}
def TABLE[mislead(Jon)][i] {
	if(Ygritte){
	Hodor /= ( -( ROWS ) / ( COLS ) );
	Sansa /= TABLE[ROWS][-ROWS - -0.86]
};
	if(0.37){
	Jon -= ROWS * ( ( x ) ) / ( TABLE[-780.512][Hodor] )
}
}
def TABLE[betray(dog)][i] {
	( ( ( rule() ) ) );
	if(betray(-1,-41) - Hodor){
	if(( dog )){
	if(-610.6){
	Ygritte /= -----440.675;
	if(-TABLE[Jon][ROWS / ROWS]){
	-0.12
} else {
	COLS;
	-Stark
}
} else {
	if(TABLE[Ygritte][Stark]){
	0.87
} else {
	if(betray()){

} else {
	if(Hodor){
	( ( COLS * 0.24 + ( ( -18 ) - Stark ) - ( TABLE[-53][Ygritte] ) ) );
	y += COLS
} else {
	x -= protect(betray(-betray(--betray(COLS,protect(Ygritte + Jon,COLS,y - ( -0.3 ))),--Hodor,-Ygritte) / COLS),-0.63)
};
	Ygritte /= ( -( -1 ) * 560.5 );
	foo(Jon,destroy(TABLE[600.672][Jon] + ----1 - Jon + betray(-( 89 ) / destroy(( rule(( protect(x) ) * protect() - Jon) ) + ( ( mislead(-1,mislead(1)) / 67 / COLS ) )),y)))
}
};
	if(mislead(bar(destroy(),COLS,( ( ROWS ) )) * y,( -0.85 ))){
	x /= ROWS;
	Arya -= ( COLS );
	( -dog )
} else {
	( mislead(dog) );
	y -= ( -0.63 )
}
};
	if(( 39 )){
	x += 1;
	if(( ( Jon ) )){
	if(( rule(1,ROWS) )){
	Ygritte += ( Arya / bar(dog,TABLE[rule(( -0.82 ),( dog )) * 0.96][( mislead(rule(Hodor,1 * ( Jon )),TABLE[-( TABLE[-foo(foo(--Arya * ( ( Hodor ) ),Arya,foo()))][( -30.472 )] * TABLE[Jon][COLS + destroy(-ROWS)] )][COLS],foo(Ygritte * -bar(-1) / Arya)) )]) )
} else {
	ROWS
};
	bar(( 4 ) / dog) * rule(( ( x ) ))
}
} else {
	if(TABLE[--1][( --0.77 )]){
	y += -( ROWS );
	if(Hodor){
	Sansa /= -foo(-23,destroy(( -0.15 / Sansa ),-92) + ( betray(--ROWS) ),-62)
} else {
	if(-98){
	if(mislead(betray())){
	if(( ROWS )){

} else {

}
} else {
	-0.38
};
	Hodor += betray(rule(Ygritte,-( -bar(y,betray(1,( -( foo(rule(TABLE[-TABLE[-( x ) * --Jon][( foo() )]][-bar(--0.03,rule(-0.16,( -Sansa )),-COLS)] / dog - 420.486 - 99)) ) )),-640.62) ) * ROWS,-TABLE[-dog][ROWS]),Arya)
}
}
}
}
}
}
}
def foo(Ygritte,x){
	-1;
	if(( TABLE[( -Sansa )][0.93] )){
	if(-1){
	y *= x;
	dog += -79 * 34;
	Stark /= -410.5
} else {

};
	Arya -= 0.83
}
}
def foo(x){

}
def TABLE[-bar() / -Sansa][i] {
	Sansa;
	y *= rule()
}
def rule(Arya){
	y += TABLE[-5][ROWS]
}
def TABLE[foo(0.18)][j] {
	dog *= ( protect(Ygritte - 0.04,-1) );
	-x * ( ROWS )
}
def rule(Arya){
	ROWS;
	if(destroy(Jon,( Stark ))){
	if(y){
	if(( ( protect(Arya / y,( 0.49 ),0.34) ) )){
	dog -= Stark;
	if(TABLE[-( ( -destroy(foo(Arya)) / destroy(10 + y * dog,destroy(--Jon / dog,-( -( bar(( Ygritte * Jon )) ) ))) * -350.55 ) )][betray()]){
	dog *= 1;
	TABLE[( Jon ) + COLS][510.57];
	Jon /= -Hodor
};
	if(rule(28)){
	TABLE[destroy(1,TABLE[1][-mislead(--55 * rule(bar(rule())),foo(Stark,1) - -1) + y])][COLS]
} else {
	x -= -COLS;
	220.4303
}
} else {

};
	y *= -( 0.67 * --Hodor );
	if(mislead(Stark)){
	( 0.25 ) - 62;
	if(( foo() )){
	-Arya;
	-Ygritte
};
	----1
} else {
	Jon /= dog
}
} else {

};
	Sansa
}
}
def TABLE[--rule() * 55 * ROWS][i] {
	-( -1 ) * -( -( TABLE[--34][---( --ROWS + y ) - Stark / Jon / -38] ) );
	dog += 270.287
}
def betray(Jon,Sansa){
	dog *= -x;
	if(-0.81){
	if(-Jon){

} else {
	Hodor /= 0.11 * -2;
	if(-dog){
	Arya += COLS;
	-COLS
} else {
	Stark += -( Arya + ---COLS ) - -TABLE[COLS][bar(3)] * y - ROWS
}
};
	if(foo(( Stark ) - ( 1 ))){
	if(protect(( foo(-0.42,Jon) ))){
	mislead(foo(COLS,( -destroy(180.08) - COLS ),-0.17) - dog / mislead(protect(-51 / -TABLE[( -0.75 * --0.16 )][( 25 )] + 78 / dog,7,-70),ROWS) + --( Ygritte ) * rule() * COLS + ( TABLE[-36][mislead(Jon) * ROWS] * Jon ) / Sansa,( COLS ));
	Ygritte;
	if(foo(( bar() ),rule(ROWS),TABLE[-120.2073][ROWS])){

}
} else {
	Sansa -= -0.53
};
	dog /= -Hodor
} else {

}
}
}
var Arya = destroy()
var Ygritte = ( COLS )
var Sansa = -y
def TABLE[( ( -x ) )][k] {
	Sansa *= 0.9
}
assert COLS / -1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[destroy(protect(-0.02),Ygritte,-( -rule(betray() - y,-0.25,Sansa) ) - --43)][k] {
	x -= -( foo(( -ROWS )) ) + ( ROWS )
}
var Hodor = -Ygritte
assert -0.24 + Hodor : "Nothing burns like the cold."
assert -Ygritte : "Winter is coming"
assert bar(rule(--bar() / TABLE[Hodor][bar(ROWS) - rule(x,0.4,-1)])) : "One can not simply parse himself"
def TABLE[mislead(--990.714 * betray(foo(-y),ROWS * x))][j] {
	TABLE[-0.03 - 0.27][Ygritte];
	if(TABLE[( rule(TABLE[COLS][( ROWS )] * y,-0.58 * -Jon) )][0.16]){
	if(( y )){
	Hodor += mislead(-660.53) - ( --mislead(-Sansa - Stark) * ( ROWS ) - 270.677 / -31 );
	Hodor += -Sansa;
	y -= -69
} else {
	if(( Stark )){
	Arya
};
	if(( betray(ROWS / mislead(protect(( rule() ),COLS),Sansa),bar(-Stark + -COLS / y)) )){

};
	if(bar()){

} else {
	-( COLS - TABLE[COLS][-1] )
}
};
	protect()
} else {
	Arya *= ( COLS )
}
}
assert ROWS : "What do we say to the Lord of Death?"
def TABLE[dog][i] {
	if(-COLS){
	if(---y){

} else {
	-0.97;
	if(-94){

}
};
	24
};
	dog
}
def destroy(){
	TABLE[ROWS][-ROWS];
	dog += -96
}
assert COLS + ( ( -betray(( y ) + ( -1 )) * ROWS * Ygritte ) ) : "Nothing burns like the cold."
assert Sansa : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(Ygritte){
	if(TABLE[0.91][betray()]){
	if(COLS){
	Ygritte *= -TABLE[rule(TABLE[Arya][-y])][COLS]
} else {
	if(--45){
	Sansa /= 36 * -0.08;
	dog /= y;
	if(-1){
	if(dog){

};
	if(protect(( bar(foo(bar(mislead(-( -Stark * -0.24 ),COLS,-TABLE[dog][bar(-0.44 / -ROWS,TABLE[690.927][Sansa]) * ( betray(ROWS,Ygritte) )] * -74)))) ) * destroy() / Stark,x)){
	-0.46 + COLS;
	betray(( Jon ))
} else {
	if(dog / -ROWS * ( ( -( ( -0.44 - rule() + -1 + -96 ) ) ) )){

} else {
	y += COLS
};
	if(betray(-Arya * Stark)){
	y;
	82
}
};
	y /= ( 0.47 )
} else {
	if(foo(foo(foo(--TABLE[foo(-70 - -0.79)][ROWS] - -COLS * ROWS),Stark,Ygritte),ROWS)){
	dog -= ( ( -0.29 ) * COLS ) * TABLE[TABLE[COLS][Arya]][Sansa] / protect(--790.01,Ygritte)
}
}
} else {
	if(ROWS){

} else {
	if(-61){
	Jon += ( ( -( -Jon ) ) ) * ( mislead(TABLE[-1][Sansa + rule(TABLE[--ROWS][( ( Stark ) )],mislead(dog)) * Stark]) - -0.39 + Jon )
} else {
	if(( TABLE[mislead(-910.571)][x] )){

}
}
};
	72;
	if(bar(69)){

} else {

}
};
	if(0.08){
	if(42){
	if(98){
	if(-92){
	if(( Stark )){
	if(-19){

} else {
	( -58 )
};
	COLS;
	x -= COLS * --( -rule(x) / ( ( Arya ) ) )
} else {
	if(COLS - ---70){
	betray(( Sansa * -79 ),0.77);
	if(protect()){
	ROWS
} else {
	Hodor += ROWS;
	betray(rule());
	dog *= -( ( ROWS + COLS ) ) / -( ( COLS ) )
}
}
};
	Jon *= -0.76 - -ROWS / betray(64,( -dog ),foo() / COLS) * foo(COLS,Sansa) + Stark
} else {
	Sansa += 340.007
};
	( Hodor )
} else {

}
};
	Arya *= TABLE[( foo(--750.7) )][dog];
	if(ROWS){
	Arya *= Ygritte;
	Sansa *= ( -( ( foo() / ( 19 + ( 200.45 ) ) * --rule(x,( y )) ) / -betray(TABLE[--protect(-dog,ROWS,( ( 1 ) ))][-0.67] * -85,( ( -5 ) ) - foo(-ROWS,370.32,foo(destroy(( ROWS ),Jon))) * -0.98) ) * foo() )
}
} else {
	Jon /= ( -ROWS );
	dog - -0.41 * ( COLS ) + -ROWS
}
}
} else {
	41;
	Ygritte -= destroy(Arya,Hodor + Stark - ( -ROWS / COLS ))
};
	Jon /= rule(TABLE[---rule(ROWS)][( ROWS + -0.83 * TABLE[TABLE[ROWS - TABLE[Jon - COLS * COLS][Jon] + COLS][( foo(Ygritte) ) * foo(( -betray(foo(( bar(COLS / 56) ),-1),Sansa * -1,-620.5554) + -COLS ))]][TABLE[---0.01][---130.18 * -40 - -protect(ROWS,Hodor,--10) / -270.61 / TABLE[-Jon][( --Sansa )]]] )] - -Arya / ( bar(y) ) + ( bar(-1 - -750.42,COLS,-protect(-y,rule()) - ROWS) ) * COLS,---Stark / COLS);
	( ( ( rule() / -0.07 ) + COLS * COLS ) + -Jon )
}
def foo(Arya){
	if(-21){
	if(-( mislead(Arya * betray(-180.2228,( ( -betray() ) ),rule())) )){
	( Sansa - ( -betray(( y ) + ( bar() )) ) ) / y - Hodor
};
	rule(--29,-Sansa);
	if(betray() / betray(protect(-14))){
	if(TABLE[--0.99][-( ( ( -COLS ) * Ygritte / ( destroy() ) * --1 + --Arya - -0.35 - betray(protect(Jon,Jon)) - ( COLS ) ) + -93 )]){
	Hodor += dog;
	Hodor /= ROWS;
	Sansa
} else {
	dog /= destroy(-Ygritte - protect(y) + ( ( ( COLS * Hodor ) / mislead(Arya) ) ) / Sansa)
}
} else {
	-( Jon )
}
}
}
def TABLE[--rule()][j] {
	Sansa *= -0.91
}
def protect(){
	dog /= -destroy(COLS / ( destroy(TABLE[-1][TABLE[20.66][( bar(( ROWS / 53 ),-12) )]],Hodor) ))
}
var x = 0.75
var Ygritte = -TABLE[destroy(COLS) - ( -ROWS + ROWS + TABLE[Hodor / Sansa - -43][95] )][Arya]
var Arya = ( rule(-COLS - TABLE[---dog][-dog]) )
var Sansa = rule(-Ygritte,41)
def protect(Arya,Hodor){
	( protect(protect(),-protect(-( ( bar() ) + ( bar(COLS) ) * y ),( x + -x ) / COLS * Stark,( rule(mislead(-0.92),bar(-ROWS,-( ( ---0.84 + -1 ) ) - ( ( foo(Sansa / mislead(-46,( ( TABLE[betray(Sansa,( Hodor ),-0.7)][-0.49 * ( -mislead(mislead(-protect(--0.92,Stark,ROWS)) + ROWS * --7 / ( ROWS ) + Stark / destroy(( ( ( mislead(foo(Sansa),-y) ) ) ),protect(Sansa)) + 0.36 + Sansa + mislead(COLS + protect(rule(850.29),( COLS - mislead(Ygritte) )),-TABLE[( -0.39 )][rule(-8,betray(protect(destroy(-1) + y,Stark,x)))]) * destroy(( -TABLE[COLS][( ( Jon + y + 47 ) ) / Hodor] )) / betray(Ygritte + destroy(64,Jon,x),--Ygritte / ( -protect(dog,TABLE[rule(dog)][Hodor]) + Hodor + ( ROWS ) )) / -( ( ( protect(-protect(),( ( TABLE[dog][x] ) ) * ROWS) ) ) ) - Sansa) - betray(TABLE[dog][( Arya ) - 89],COLS) - foo(-ROWS + y * --foo(ROWS),COLS) - 560.23 )] ) ),TABLE[( Sansa )][Stark]),TABLE[protect(Hodor,betray(destroy(COLS,Jon),x))][-16]) ) ) + Stark + bar(1)) * COLS - Stark) ))) )
}
var y = protect(-ROWS - protect() + -83)
def TABLE[mislead()][k] {

}
def betray(x,Hodor){
	-87;
	( Ygritte );
	TABLE[TABLE[-130.8753][-800.03]][COLS] / COLS
}
var dog = 1
def betray(Stark){
	if(TABLE[( -1 )][Stark]){
	Hodor += -( -1 ) / Arya;
	rule();
	if(betray()){
	if(TABLE[ROWS][betray()]){
	Jon += -( ( -rule(Ygritte,Sansa,bar(-0.78 + protect(),-270.395,-( Stark ))) ) + -( COLS ) + -770.5 );
	if(dog){
	0.4
}
} else {
	if(COLS){
	protect(23,Sansa);
	Arya += 1
};
	if(y){

} else {
	destroy(( dog ) + 0.63)
};
	Hodor *= ( Jon - ROWS - COLS )
}
} else {
	if(Stark){
	destroy(y,( -TABLE[-( Arya )][-28] + -0.41 * x + Stark - ( destroy(( Sansa ) * destroy(( ( 0.22 ) ),( -x ))) ) ));
	x /= destroy(ROWS,COLS);
	Stark += y
} else {
	( bar(destroy(Sansa + Jon,---88,-( -ROWS )),( COLS ) * -23 * -( foo(( ( -670.54 ) ),( -0.19 )) )) * COLS )
}
}
} else {
	( Ygritte ) - -1;
	Arya *= 86 - y
};
	Arya += COLS
}
assert -x * y - ( ROWS ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Stark : "Winter is coming"
def betray(Sansa){
	if(( -0.46 )){

};
	Sansa / ROWS
}
assert -1 : "What do we say to the Lord of Death?"
def rule(Hodor,y,Jon){
	if(Arya){

};
	if(COLS){
	-1 - mislead(bar(COLS),Hodor) / Sansa
} else {
	Sansa /= mislead(( TABLE[--betray(ROWS,Sansa)][---Sansa + ( -9 ) - ( ( Hodor ) ) * -Hodor] ),0.62);
	dog *= -0.18
};
	TABLE[COLS][-bar(Hodor,( foo(destroy()) + ( --( betray(Hodor) * ROWS ) ) ))]
}
def TABLE[bar(( Stark ) - ( ( --0.7 ) ))][i] {
	if(TABLE[-( 0.17 )][1]){
	--1;
	if(TABLE[-TABLE[TABLE[-83 + 91][( Jon )] / ( -0.04 ) / ROWS][-0.39] - ROWS + -0.35][-betray(-0.46 * ( ( mislead(21,60) ) ),-foo(( COLS - x )) + -foo()) * mislead(( ROWS )) * betray(betray(11),foo(0.58,dog,betray(x,rule(destroy(),COLS,ROWS) - x + foo() + -( ROWS )))) - ROWS]){
	x /= --Ygritte;
	mislead(foo(rule(Stark / x),betray(( -72 ))),0.67,Stark)
} else {
	x /= bar(Ygritte,47);
	if(destroy()){

} else {
	if(79){

} else {

}
}
}
} else {
	( Arya )
};
	y - -bar(Stark,ROWS) * -TABLE[-COLS][COLS / Stark] * --rule(51 + x,y,( Sansa ))
}
def destroy(Arya,Hodor){
	if(y + ( 190.7 )){

}
}
var dog = 0.48
var Hodor = COLS
var x = rule(-580.2)
def protect(Hodor,Ygritte){
	Ygritte += -Jon;
	if(( -Hodor * betray() / 0.06 )){
	dog += -( Stark );
	if(( ( Jon ) )){
	dog /= mislead(foo(( Stark )));
	-Stark;
	Hodor *= Stark
} else {
	ROWS
}
} else {
	y -= ( betray(0.27) );
	-COLS;
	rule(COLS - ( 46 ),mislead(dog,betray(( bar(( ( ( -Hodor ) + 0 ) ) + ( destroy(-83 - -( ( COLS ) ),( ( ROWS / destroy(COLS - -TABLE[180.679][( -1 )],-mislead() * TABLE[88][( dog )]) ) ) / Sansa,COLS) ),0.06) ))),1) + -0.95
};
	if(-destroy(1,Stark)){
	TABLE[39][x * -98];
	-( -620.3 )
} else {
	if(-0.86){
	( Jon );
	Sansa /= 74
} else {
	if(protect(Stark,-ROWS,-230.918)){

} else {
	560.87
}
}
}
}
def TABLE[( -1 ) - ROWS - ROWS][j] {
	if(Stark){
	x /= -Arya
};
	if(-( ( ( COLS ) ) ) + -0.34 * ( protect(COLS + Sansa) ) * ( dog )){
	Sansa *= foo(-560.904)
} else {

}
}
def TABLE[( -TABLE[ROWS][Stark] )][k] {
	TABLE[( --( TABLE[y][bar(0.6)] ) )][Ygritte]
}
assert ( TABLE[y][0.53] ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = -99
def rule(dog,Arya,x){
	( ( bar(-ROWS) ) )
}
var Ygritte = ( --Jon )
assert COLS : "Winter is coming"
def rule(Stark){
	COLS;
	10.38;
	betray(-10.068,-rule(x * COLS)) / --ROWS
}
def TABLE[COLS][i] {

}
assert TABLE[COLS][mislead(mislead(ROWS,-810.8))] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(){
	Jon *= bar()
}
var Hodor = ( -0.69 )
def TABLE[--97 + 73 / Arya - -Sansa - -bar(Hodor - -95,-Arya)][j] {
	Hodor -= 800.898 - -ROWS * -85;
	Jon /= TABLE[( ROWS )][ROWS];
	Hodor -= -foo(( ( ( Jon ) - TABLE[-TABLE[96][( -0.66 )]][foo()] - -0.91 ) ))
}
def protect(Ygritte,Stark,x){
	Jon /= COLS
}
var y = 0.88
var Stark = dog
def TABLE[1][i] {
	TABLE[-83][mislead(y,-0.16)];
	betray();
	Sansa -= ( -1 )
}
assert Hodor : "What do we say to the Lord of Death?"
var Ygritte = COLS
def TABLE[protect(-190.2)][j] {

}
def mislead(Sansa,Ygritte,Jon){
	if(TABLE[COLS][ROWS]){
	if(COLS){

} else {

};
	dog /= -0.04
} else {
	if(Stark){
	Sansa /= x
};
	ROWS
};
	32
}
def TABLE[Hodor][j] {
	if(-Ygritte + COLS){
	ROWS;
	-COLS;
	Ygritte += COLS
} else {
	if(protect(ROWS) * Ygritte){

} else {
	if(( TABLE[mislead(-ROWS)][destroy(-Arya + Ygritte / ( dog / Hodor ),x)] )){
	-1 + COLS - 0.69 + ( bar(x,-0.31,betray(destroy(),430.05)) ) / Ygritte
};
	Arya *= 1
};
	if(-96){
	ROWS;
	if(ROWS){
	Ygritte -= ( COLS * 37 );
	if(COLS / -0.68){
	Hodor /= ---TABLE[ROWS][Stark];
	Stark *= destroy(-0.3,COLS,mislead(rule())) - Stark + bar(Arya,-26,( dog ) * ( ( 0.71 ) * dog ))
}
} else {
	1;
	ROWS
}
} else {
	Sansa -= 0.11
};
	y /= Sansa
}
}
def TABLE[y][j] {
	dog += ( --870.58 )
}
var Ygritte = TABLE[( 78 )][-0.21]
def bar(Arya,x){

}
var Jon = ( ( bar(-Sansa - COLS - -y + ( -bar(ROWS,-Hodor,COLS * ( ( -( mislead(foo(TABLE[( Jon )][( ( -1 ) )]),( -Arya - ( COLS ) )) ) ) )) ) + destroy(( ROWS ),-foo(y,-TABLE[COLS][--19]),0.55)) ) )
var y = dog
def TABLE[( -0.43 )][j] {

}
def protect(){
	rule(-( -4 ) * -0.97 + TABLE[x][( rule(( ROWS ),( Jon )) )],--660.006 + Ygritte) / ROWS / Jon
}
def mislead(Stark){

}
def mislead(Stark,x,Arya){

}
assert -foo(Jon) : "Fear cuts deeper than swords."
def TABLE[0.96][j] {

}
def TABLE[-0.93][k] {
	y -= -TABLE[-99][Ygritte];
	93;
	if(0.82){
	Hodor += -COLS / TABLE[bar()][rule()] / TABLE[TABLE[TABLE[0.82][ROWS] - bar()][Stark + ( Stark ) * -betray(Hodor)]][rule(0.44)];
	Jon -= -( ROWS )
}
}
var y = TABLE[Stark][TABLE[-0.91][--Hodor]]
def foo(Jon){
	ROWS
}
def bar(){
	bar()
}
assert TABLE[82][protect(( ( ROWS + -( betray(( mislead(-Jon,ROWS) )) ) ) ))] : "Winter is coming"
def TABLE[0.06][k] {
	if(-( ( ( ( rule(83) ) + rule(( Stark ) * -32) ) ) ) - 65){
	x += Jon;
	Sansa -= ( COLS ) + x
} else {
	Hodor += -650.65;
	if(foo(-bar(TABLE[betray(destroy(1,---1,TABLE[Jon][--340.1]),16,rule(bar(),-( protect(-( --mislead(-1) + -Hodor )) )))][( betray(( Jon ),-TABLE[TABLE[TABLE[rule()][destroy(x)] / dog * -0.5][TABLE[( TABLE[ROWS][( protect(-0.39,Arya) ) - ( ( ( ( destroy(foo() * --foo(COLS / -( -0.43 + x ) / TABLE[COLS][-dog]) / -( ROWS )) ) ) ) ) / Jon] / ( --rule() + -840.91 ) )][TABLE[36 * -9][mislead(-destroy(betray(bar(protect(-33,-31),TABLE[-foo(COLS)][-( -destroy(-36 / destroy(ROWS - x,( rule(TABLE[-ROWS / --( foo(dog,( ( ( -( -( TABLE[-TABLE[betray(( -950.55 ),Sansa,-rule(( Sansa )))][( y ) - COLS]][TABLE[Jon][-foo(COLS,-62)]] ) ) ) ) + foo(-( foo(--COLS + ( COLS )) )) - Hodor ),---x) ) + -foo(-0.42)][Hodor / -TABLE[( -0.89 )][-( ROWS )] - protect() / ( foo(Hodor) - betray(-rule(( mislead() )),( betray(1) ) + rule(85 * protect(( -23 ),ROWS)),190.51) * 32 )]) ) + 1 + mislead(destroy(-0.77,ROWS)) / Jon),-COLS) )],-destroy(COLS,( Sansa ),Arya)))) + -( COLS ) + --81,-destroy(dog))]]]][-Stark],rule(0.65)) )] - rule(),Hodor,protect(-44)),ROWS) + ( 62 )){
	( dog )
} else {

};
	Hodor *= x
};
	Jon += ---0.88;
	rule()
}
def TABLE[-85][i] {
	Ygritte;
	if(Ygritte + -300.775){
	if(TABLE[-betray()][-98]){
	if(COLS){
	Sansa -= -47;
	rule();
	bar(-( mislead() ),protect(x,bar(-660.078,betray(-ROWS + ( -45 ))) * -x + ROWS,Arya + COLS))
} else {
	Sansa -= -0.76;
	if(-destroy(Jon / 0.99) + Hodor + Ygritte + ( -mislead(-ROWS,-0.5,Ygritte) )){
	if(COLS){
	if(( 0.02 )){
	Ygritte *= ROWS + dog
}
} else {
	Stark /= TABLE[( Stark )][-62 - --destroy(COLS / ( rule() ) + mislead(TABLE[ROWS][bar()] - 37))] * -380.5;
	if(dog){

};
	61 + ROWS
}
} else {

};
	Stark -= -COLS + -ROWS
};
	-1
};
	COLS
};
	Stark += bar(-0.25,( ( Hodor ) ))
}
var Ygritte = ( rule(( COLS )) )
def mislead(Stark){
	if(-( foo(bar(dog,COLS) / -betray(-TABLE[Ygritte][( Ygritte )],destroy(( ---34 )),( ( -ROWS ) )),mislead(destroy(-0.26) / -y / mislead() - ( -rule(mislead(TABLE[--ROWS][( Jon )],( COLS )) + 460.82) ) * ( -980.06 ) * Stark + -( ROWS ),-( ( ( -70.154 ) ) * betray(protect(Arya,1),foo(0.5,-protect(-38,dog)),-Ygritte - mislead(COLS)) ),( -rule(ROWS,bar()) - x )) + bar(destroy(mislead(-y + x / ( Arya ) - -240.229),Stark)),TABLE[Jon][TABLE[Jon][0.29] - COLS]) )){
	Hodor -= mislead(ROWS,( -790.14 ),protect())
} else {
	Ygritte += -Sansa
};
	-0.64;
	Sansa += --x + betray(( destroy(dog,ROWS) + -( COLS ) ),( destroy(protect(dog + -1 + Ygritte),ROWS,rule(TABLE[mislead(betray())][mislead()],TABLE[-22 - Jon][TABLE[( -protect(( dog )) * TABLE[destroy(-0.92 / -0.68)][-161] )][1]])) ))
}
def rule(Jon,Stark){

}
def betray(y,dog){
	if(protect(--0.11,rule(( COLS ),--( -( bar(-rule(Arya),destroy(( ( ( TABLE[64][0.58] ) ) ),( betray(-ROWS,Stark,-ROWS) ))) ) + -Ygritte ) + Hodor)) + betray()){
	TABLE[Jon][Jon]
} else {
	if(-TABLE[rule(-betray(TABLE[( -Stark )][foo()],COLS),TABLE[-( dog )][30.526])][foo(Hodor)]){
	COLS + COLS
}
}
}
def destroy(Hodor){

}
assert -77 : "Nothing burns like the cold."
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert COLS : "Winter is coming"
assert dog : "Nothing burns like the cold."
var dog = -Hodor - 260.7037 * 790.1365
def mislead(Stark,Sansa){

}
assert 22 : "What do we say to the Lord of Death?"
assert destroy(-( 1 ),bar(-( ---0.02 - mislead(Hodor,-1) / mislead(rule(( -21 ) + -94,x,ROWS),0.02 - -190.7 + ( -protect(ROWS) + ( ( y ) / Sansa ) )) * 1 ) - ( Ygritte ))) : "What do we say to the Lord of Death?"
assert destroy(Jon,mislead(-0.72,-rule(1,59))) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(y,Jon){
	( protect(COLS,--bar(( Hodor ),-bar(( COLS + y ) - Ygritte,-( -0.83 ) - ( rule(-0.25) ),45),y),TABLE[---18 + ( ( -bar(Arya,ROWS + ( protect(-y / ROWS) ) + betray(1) * COLS + -630.716 - -0.14 * betray(),x - COLS) * ROWS ) )][-COLS - COLS / -0.38]) )
}
def foo(dog,Sansa,dog){
	bar(foo(-Stark + Stark - TABLE[( -85 )][( -TABLE[( -37 )][-Hodor] )]) + y);
	if(( mislead(destroy(rule(( -0.83 ),-240.446 * Ygritte)),( x )) / 0.27 + Hodor )){
	if(-18){

};
	if(( y )){
	if(( mislead(betray(rule()) * protect(-( -bar(Hodor) )),-mislead(y)) ) - rule(x,COLS)){
	if(Ygritte / ROWS){

} else {
	Hodor *= ( Sansa );
	if(rule(-1,betray(( mislead(protect(y,-mislead(foo(( -93 ),bar(( -Sansa + TABLE[-13][TABLE[ROWS * foo(protect(COLS,-ROWS,-rule(--0.19 * -0.09,( ROWS )))) - -COLS / x][TABLE[-( bar(-54,15) ) / 70.314][foo(dog,TABLE[COLS][--0.81] + TABLE[-Ygritte][Hodor])]]] )),y),bar(x)))) )))){
	Jon += x;
	if(TABLE[Stark][Stark]){
	Hodor
};
	foo(betray(TABLE[( ( x ) )][( ( ( ( dog - -4 ) ) / -( rule(protect(TABLE[rule(COLS * x,( 480.95 ))][-Hodor],Hodor) - ( betray(dog) )) ) + betray(-67) + TABLE[rule(protect(Arya,-30.771),rule() / -Hodor)][Arya * ( -x * COLS )] + -52 ) )],-protect(25,-COLS)),-Sansa / destroy(-( -foo() ),-99,( COLS )) + Arya,COLS)
};
	-330.976
}
} else {
	x -= -67;
	TABLE[-( -( --0.72 ) )][( betray(( ---ROWS ),TABLE[--Stark][Arya - Hodor]) ) + bar(( ROWS - ( 95 ) * ( Sansa ) / Arya ))]
}
} else {
	if(-Jon){
	Arya;
	if(0.95 + destroy(0.27)){

}
};
	Sansa += COLS
}
}
}
def protect(Hodor){
	( -betray() + foo(-( ( betray(rule(),destroy(ROWS,Arya,-TABLE[Hodor][ROWS * ( --x + ( rule(protect(-1 + 0.49,--0.44,COLS * y),-290.022) ) )]) - destroy(( betray(( COLS ),-COLS / ( betray(ROWS,bar(-protect(TABLE[ROWS + TABLE[bar(( 61 ),mislead(protect(COLS)),-mislead())][TABLE[52][( TABLE[5][bar()] )]]][0.43]),0.55 - Hodor,ROWS)) )) ),( x ))) ) )) );
	if(rule(betray(x * betray() - mislead(71,-COLS)),--Sansa,951) - ROWS){
	Ygritte *= --Ygritte
} else {
	foo(mislead());
	--protect() - -( bar(dog) )
};
	Sansa /= ( --Stark )
}
def rule(Sansa,Hodor){
	COLS;
	COLS * 87;
	dog -= 80.535
}
var y = ( --mislead() )
def foo(Sansa,Stark,Jon){

}
def TABLE[0.04][j] {
	if(( --bar(COLS,( ( ( COLS + protect(TABLE[( -dog )][destroy()],1,betray(--x + -77,Jon,4)) ) ) ),-y) - protect(---0.52 + betray(TABLE[( mislead(-( -0.81 ) + 40.6421 - Jon) )][betray(COLS)],COLS),COLS) )){
	if(-( ( -0.01 + ( foo(destroy(y) + Jon,destroy(Stark)) ) ) )){

} else {
	y -= Ygritte;
	0.45
}
}
}
assert ( betray(-0.07,Hodor,( ( COLS * Ygritte ) * mislead(Arya,Ygritte - -ROWS,( betray(ROWS) ) * 80) / TABLE[-40][-( Sansa )] )) + Stark * y ) / ( x ) : "Winter is coming"
assert ROWS / ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Hodor][i] {
	Hodor *= 0.57 / mislead(( Arya ));
	dog /= x;
	Stark *= ( Ygritte )
}
def TABLE[rule(( ( ROWS ) ),TABLE[bar()][-COLS * ROWS + -92 - Arya],150.13)][j] {
	if(( 1 )){
	-TABLE[-0.1275][( TABLE[foo(destroy(( TABLE[( ( bar(foo(Jon,( y )) + destroy(),y) ) )][-rule(x,-590.56)] ),foo(TABLE[-0.88][COLS],rule(-destroy(ROWS,( --TABLE[TABLE[( ( TABLE[-bar(Jon + Sansa,-0.24) - -30][( ( 1 * x + -( destroy(-( destroy() ),92,COLS * -TABLE[Jon][-26]) - 0.39 + y ) - COLS ) )] ) )][-0.81] / -0.36][betray(y)] )),Ygritte) + Hodor - foo(ROWS) / y)),bar(foo(5),x),COLS)][( 46 )] )]
};
	x /= protect(Ygritte)
}
def TABLE[( -0.73 )][k] {

}
var Jon = ( ( foo(COLS,ROWS) ) )
assert COLS : "What do we say to the Lord of Death?"
def TABLE[Hodor][i] {
	COLS
}
var Hodor = Stark
assert TABLE[COLS][-( Stark * -protect(-400.57 * betray() - -mislead(-37) - ( -0.81 ),-640.049) - ( --18 ) )] : "Nothing burns like the cold."
def TABLE[Hodor][i] {
	Jon *= 620.5;
	if(Sansa - ( -0.67 )){
	Arya -= Stark + --x
} else {

}
}
assert -ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[--dog][k] {
	if(( Arya / --( rule(foo() / y - betray(-COLS,Jon)) ) + ( 0.1 ) * -destroy(--COLS / COLS,-( COLS ),-230.11) ) * betray(49,-( 1 )) + 0.13){
	Jon *= Hodor
} else {
	if(-0.23){
	if(83){

} else {
	if(betray(-980.9,-71 - ( ( -Ygritte ) ))){
	x;
	Jon += ( --Arya / 24 )
};
	-Ygritte
};
	if(y - -58){
	Stark *= 0.48;
	dog *= Sansa
}
} else {
	Arya;
	-Hodor;
	if(1){
	if(-0.37){
	if(( 0.17 ) - 1){
	0.64
} else {
	0.59
}
};
	if(( ( -bar() ) )){
	Stark /= rule() + ( TABLE[9][-40] );
	if(COLS){
	x += ( 69 ) * Ygritte
};
	protect(-destroy(Hodor,foo(COLS,( --y )),0.8) / ROWS,-0.11 / rule(foo(-COLS),1),foo(-betray(TABLE[x][( bar(( -( -1 ) ),( 72 )) )],COLS * ROWS,-TABLE[( foo(1,-( protect() ),destroy(-( foo(bar(COLS,Ygritte,-mislead())) * Arya ),( COLS ),-( Sansa ))) )][( COLS )]),rule() / destroy(COLS),-COLS)) * COLS
}
} else {
	if(betray(COLS)){
	( destroy() - ( -( 810.1 ) ) - --41 + COLS * ( -570.5417 ) - ( COLS ) + TABLE[mislead(Hodor * --0.12,( destroy(Hodor) ),Hodor)][ROWS + foo(rule(--COLS / --0.53,( protect(ROWS) )),16 - Arya)] );
	if(--ROWS / rule(( TABLE[( TABLE[foo(-1 / ( -protect() ),x,rule(-12))][( ( foo(ROWS + foo(-0.84,foo(Hodor,COLS))) * -Stark / ( -0.46 ) + y ) )] )][COLS] ))){
	if(-bar(-60.02,mislead(-61 - TABLE[-490.719 * COLS][dog - --( ROWS / -0.25 )],-betray(ROWS,98) / -TABLE[Stark][( -Stark - -( Arya ) ) / foo(Arya,( ( bar() ) ) / rule(200.111 + 32,ROWS,-0.43 * ROWS * ( -protect(----Arya,COLS) )),COLS)],betray(( 0.91 ),( Arya ) * mislead(ROWS))))){
	0.35;
	Hodor /= -0.19
}
} else {

}
} else {
	76
};
	dog *= --TABLE[-ROWS][-Ygritte / foo()]
}
};
	mislead(-Sansa,( Arya )) / ( COLS )
};
	TABLE[( 270.92 )][Jon];
	Ygritte *= -0.79
}
var Jon = -0.03
var Ygritte = --betray(destroy(Ygritte + -( -( bar(-( COLS ),( -( TABLE[( y )][( --( -rule(( 41 )) ) / ( ( destroy(rule(destroy(-0.41,-0.51)),0.8) ) ) ) / --dog / -COLS / foo(-COLS)] * Ygritte ) )) ) ) - destroy(-470.21),COLS))
assert protect(-( -COLS / foo(( TABLE[bar(y)][90] - COLS )) * ---( bar() ) - ROWS - ROWS * ( 0 ) )) : "Winter is coming"
var dog = ( ( -Stark - -protect(--dog,ROWS) - -0.95 ) / 50.1 )
def rule(Ygritte,Jon){
	if(COLS){
	if(-dog){
	if(COLS){
	Stark += TABLE[31 * -y - ( betray(---( ROWS ),( COLS ),-140.9) )][y];
	if(TABLE[x][( mislead(( betray(-48 * ROWS,ROWS) ),-foo(( Arya ),COLS,y)) + ( ( Arya ) - ( -26 ) ) ) * TABLE[y][dog]]){
	y += ( 1 );
	x
}
} else {
	if(-76 * -ROWS){

} else {
	ROWS;
	mislead(380.09 + -dog * ( TABLE[TABLE[( foo(x) )][-foo()]][-rule(7) + -0.87] ) * ( Hodor ) * COLS * -( 1 )) * ( y );
	if(foo()){
	betray();
	TABLE[-1][( ROWS )];
	-830.535 - mislead(-0.99,protect(-( ( betray(-20.35) + ( -890.2 ) ) ),( betray(x,-57) ),-( COLS ))) * ( y )
}
};
	if(-TABLE[0.68][--770.18 / Stark - ROWS]){
	if(6){
	ROWS
} else {
	if(( betray(-0.86,x,-78) )){

};
	if(protect(ROWS)){
	x *= ( mislead(--800.15 * Stark,rule(bar(Hodor),1 / --0.83 + foo(TABLE[ROWS][ROWS] - ROWS,( ( mislead(-84,dog) ) )),0.05),( ( Hodor + -ROWS - ( foo(-0.23,76) ) ) )) );
	dog *= -270.48
}
}
} else {
	-1
};
	Jon += ( 730.1 / 230.92 )
};
	Arya -= TABLE[( ( COLS ) ) / ROWS + -mislead(bar(--32 * -0.61,Jon))][COLS]
}
} else {

};
	if(COLS){
	if(Hodor){
	Sansa /= Jon;
	if(TABLE[ROWS][ROWS]){
	y += Hodor;
	if(ROWS){
	Stark /= -80.42;
	if(-bar()){
	if(-Sansa){
	y /= mislead(COLS,Hodor);
	-rule(--1,ROWS)
};
	-( -99 );
	dog -= COLS
} else {
	dog;
	if(ROWS){
	Hodor -= ( -ROWS ) + COLS - ( COLS )
} else {
	if(rule() + COLS){
	COLS
};
	Sansa += -COLS
}
}
} else {
	y /= TABLE[( Ygritte )][( 44 )]
};
	( ( mislead(( -COLS )) ) )
} else {
	( Hodor )
};
	Sansa *= TABLE[( -81 )][Ygritte / -mislead(0.27) / -dog / COLS + ( 1 ) / ( -( --Stark ) )] + -Hodor / 86
};
	y
} else {
	if(( TABLE[-0.13][-dog] )){

};
	Sansa *= 160.766;
	if(-mislead(-0.54,Arya,-0.97)){
	Stark /= Stark
} else {
	if(foo(rule(Jon,dog),( 0.95 + ( -foo(Hodor) ) ))){
	y *= COLS
}
}
}
}
assert ( betray() ) : "Fear cuts deeper than swords."
assert Stark : "Winter is coming"
def TABLE[Sansa][i] {
	Sansa -= Jon;
	Arya *= COLS;
	if(protect(mislead(),-COLS) - ( -0.89 )){

}
}
def TABLE[-0.18][i] {
	if(( mislead(-ROWS + -55 - TABLE[Arya][--ROWS],--220.3) )){
	--0.44
};
	-rule(y) / ( ( ( betray(Sansa,destroy(( -Sansa ) * 0.48),Stark) ) * -( TABLE[550.5][( -rule() ) - ROWS - TABLE[-Stark][( -betray(Jon) )]] ) ) ) / TABLE[Sansa][84 + Stark] * TABLE[rule(foo(mislead(),-destroy(-39),( 53 )),dog / Jon)][COLS] - ROWS - 750.56
}
assert bar() : "Nothing burns like the cold."
def TABLE[Sansa + betray(-130.801)][k] {
	y += -680.425
}
def TABLE[--1][k] {
	if(0.95){
	Ygritte /= ( ROWS )
}
}
var Ygritte = destroy(destroy(Sansa,-( protect(-54) ) - -0.53) + x,( dog * --TABLE[TABLE[--COLS - ( foo(protect(-TABLE[COLS][TABLE[-betray(-1) * ( TABLE[x / ( -( -0.55 ) )][Ygritte] ) * ROWS - ROWS][61] + foo(-TABLE[Jon][protect(( bar(( COLS ) * ROWS,--92) ) / ROWS,( -Arya ))],Stark)]),TABLE[-( COLS )][Hodor / -Hodor * ( --420.079 - Arya ) + COLS],TABLE[mislead(-destroy(-94,Jon,-dog))][-mislead(-( Arya ),-Hodor / Stark)]) )][-TABLE[( betray(--1,mislead(betray(( rule(COLS,TABLE[y][( COLS )] * 78) ),-ROWS),betray() / ROWS / -1)) )][Hodor]]][( ( -660.1022 + 400.1615 ) )] ))
assert Jon : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( ( -1 ) ) : "One can not simply parse himself"
def TABLE[-y][i] {

}
var Hodor = ROWS
assert ( ( betray(ROWS,-0.42,-590.7 + Ygritte) ) ) - -COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(Stark){
	Hodor *= -Arya;
	Ygritte -= -27;
	Arya -= COLS
}
def TABLE[( 0.65 )][i] {
	17
}
assert betray(Stark,---1) : "What do we say to the Lord of Death?"
def TABLE[( 0.92 )][j] {
	dog;
	Jon /= -y
}
def foo(x,Stark){
	if(Hodor){
	if(--0.93){
	protect(( -33 ),Hodor)
} else {

};
	if(TABLE[ROWS][( ( destroy(0.86 + ( ( Stark ) ),-0.02) ) )]){
	-( y )
}
};
	( --49 / protect(Ygritte,--y - Arya,x) )
}
def betray(Hodor,x){

}
assert Hodor : "Nothing burns like the cold."
def TABLE[dog][j] {
	if(Ygritte){

} else {
	if(mislead(-0.31,ROWS)){
	Jon *= ( Hodor );
	protect(Arya)
} else {
	-840.6688;
	if(TABLE[ROWS][--COLS]){
	if(mislead(y)){

}
} else {

}
}
};
	if(( protect(Hodor,-protect()) )){
	if(( --0.04 ) + y * y){

}
}
}
var Arya = -( -0.55 )
var y = rule(-0.43 * ( 75 * ( protect() / COLS ) ))
assert ( ( --ROWS ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(Ygritte){
	Jon *= COLS;
	if(rule()){
	TABLE[-400.5][COLS];
	Stark
} else {
	Ygritte -= COLS;
	Arya -= ---0.74
}
}
def TABLE[rule(y,0.6) * COLS][k] {

}
def TABLE[-77][j] {
	-720.3
}
assert bar(ROWS,-( Ygritte )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = ( rule(0.71,27,protect(-Sansa * ROWS + -34,0.57)) )
def rule(Ygritte,Arya){
	COLS;
	if(x){
	dog += Jon
} else {
	0.7
}
}
def bar(){
	if(TABLE[x][betray(rule())] / ( -0.5 )){
	y -= foo()
} else {

}
}
def TABLE[Hodor][i] {
	Arya
}
assert TABLE[( -( COLS ) * protect(COLS,bar(Hodor,Ygritte),COLS) )][TABLE[0.17][--Sansa] / Sansa] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert --0.95 : "Nothing burns like the cold."
def TABLE[TABLE[rule(Ygritte)][Jon]][j] {
	if(--( COLS )){
	if(( protect(TABLE[0.83 / betray(y + 1,COLS)][---destroy(Ygritte,( -750.32 / COLS ),--1) - 1 - Arya]) ) - -destroy(-destroy(TABLE[0.78][( 13 )] + mislead(),( -970.06 ),( Ygritte / x )) + ( ( dog ) ))){
	bar(betray(foo()),ROWS);
	if(--Sansa){
	( COLS );
	if(bar(TABLE[320.378][-mislead(-1)],( foo(COLS,ROWS) - Sansa ))){

}
} else {
	-1
};
	if(( ( rule() ) )){
	1;
	Ygritte -= destroy(rule(ROWS / ROWS / ( 0.44 )),Ygritte,COLS);
	Ygritte
} else {
	Hodor -= --0.18 + -( rule(( 0.74 )) );
	8;
	x *= ( ( 59 ) )
}
}
};
	Jon /= -0.84
}
def foo(){

}
assert ( -----destroy(protect(Arya)) ) / rule(x - ( 1 ) * TABLE[foo(Ygritte,-0.15)][94]) * betray() : "What do we say to the Lord of Death?"
var y = foo(dog,-( ( --0.02 ) - x ) / foo(),( -( Arya ) ))
def TABLE[mislead(rule(-20) - ( ( -1 ) ),-ROWS * ( Arya ) - ROWS + Jon)][j] {
	if(bar(destroy())){
	Arya /= ( foo(( 0.09 + ROWS * -1 ),COLS) );
	Hodor -= ( protect(Hodor / mislead(protect() - foo(0.22)),betray(-68)) )
};
	Stark + ( foo(( COLS )) )
}
def mislead(Jon,y){
	protect(Sansa)
}
assert mislead(destroy(COLS,( ( COLS ) ))) / rule(-x,Ygritte,ROWS) - 0.8 : "Fear cuts deeper than swords."
def TABLE[TABLE[Ygritte][ROWS]][i] {
	Ygritte /= y;
	TABLE[rule(--0.92)][dog]
}
var Ygritte = TABLE[mislead(( -18 ),Ygritte,rule(Jon,( -Stark ) - bar(Stark,betray(-29)),dog))][( dog ) + bar(Hodor + destroy(99),( -Stark )) / ( --mislead(-73) ) + betray(-Stark,( -ROWS ),-1) / TABLE[destroy(-1,-19 * 1)][COLS]]
assert Jon : "Nothing burns like the cold."
assert ROWS * TABLE[TABLE[protect(TABLE[( Ygritte ) / 670.616 - -450.195 + bar(( ( protect(protect()) ) ) - -destroy(Hodor),Hodor)][-1]) * bar(( dog * Stark ),( -93 ))][protect()]][COLS] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -COLS : "Winter is coming"
var y = dog
assert ( x ) * mislead(( -COLS / TABLE[-0.15 - mislead()][TABLE[COLS - 1][y]] - Ygritte ),Sansa) : "Nothing burns like the cold."
var Arya = -0.25
def foo(dog){

}
def TABLE[destroy(-6)][k] {
	( bar(-protect(COLS)) )
}
def bar(Stark){

}
assert dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -Jon : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-20][k] {
	-Hodor;
	if(TABLE[-1][foo(( 0.48 - COLS + bar(ROWS) )) / -( -93 )] + -TABLE[-foo(( -92 ),bar(( ROWS )),rule(Stark,-( ( -5 ) ),480.69 + protect(-82,destroy(-COLS,5,( ( Jon - COLS ) )) * ( ( rule(Stark + -0.76,mislead(),Ygritte + ROWS) ) )) / -protect(TABLE[( -Arya - ( y ) )][COLS] - ( Hodor ),--44 * ( Sansa )) * ( x )))][-( bar(Hodor / COLS / betray(mislead(x))) )]){
	TABLE[rule(destroy(-Ygritte,( 0.15 )),Stark)][-TABLE[( ( x ) )][dog]]
} else {
	if(55){
	-68
} else {
	-protect(0.51,bar(betray(mislead(),--( rule(TABLE[( x )][-( ( ROWS ) / ROWS - destroy() )]) ) / -COLS + -560.3952 - -1 * mislead() + -betray(COLS,y / protect(Arya + foo(80.923,dog,( --COLS - COLS * y / 310.7429 + TABLE[TABLE[COLS / TABLE[-1][TABLE[( Sansa )][COLS]] * Ygritte][y]][rule()] / -( ROWS ) )),foo(-rule(9) - protect(),( ( y ) )),--950.18)),-COLS * ROWS))) + ( -( ROWS ) );
	Hodor -= -0.51
};
	y += --5
};
	if(( ( -77 + 1 ) )){
	TABLE[x][mislead(-0.52)]
} else {
	x;
	Stark -= Arya
}
}
assert ( Jon ) : "What do we say to the Lord of Death?"
def mislead(y,Sansa){
	TABLE[COLS][-0.06] - Arya;
	if(( ROWS )){
	( 29 ) + Sansa
} else {
	if(dog + 52){
	-1;
	Ygritte -= Ygritte / -( mislead(-20.613,x) ) * dog
} else {
	-( -TABLE[COLS][COLS] * Stark )
};
	protect(7);
	x += TABLE[( ( ROWS ) )][( ( -( Ygritte ) / COLS ) )]
};
	Arya /= y
}
def TABLE[ROWS][j] {
	if(( ( -y - -Hodor + -67 ) ) + mislead(( -1 ),0.18)){
	-0.97;
	Stark *= Sansa;
	Jon *= Stark
} else {
	y -= -0.49 + ( 990.37 ) - ( destroy(Arya * TABLE[Hodor][destroy(Arya - ( ROWS ),ROWS,--0.48 - TABLE[1][( -TABLE[TABLE[TABLE[TABLE[TABLE[mislead(dog,mislead(0.06),-470.041)][Hodor]][betray(( -0.73 ),Hodor)] * TABLE[( ROWS )][Hodor]][--( foo(COLS,0.19) ) / -foo(ROWS,-0.85) * TABLE[rule(( 15 ),0.99) / ( 0.2 )][foo()]]][-41 + Jon]][protect(dog)] - --ROWS + Sansa )])] * x,ROWS) )
}
}
def TABLE[( -72 + -94 )][j] {
	if(betray(x + Jon,1,COLS) / ( Arya )){
	COLS;
	if(-protect(COLS - rule(-700.9912,-ROWS + --mislead(Hodor,Arya),-( Jon )),-0.4)){
	if(protect(TABLE[destroy(( ( Stark ) ))][Hodor],ROWS,ROWS / 1)){
	if(Sansa){
	if(( Arya )){

} else {

};
	if(-0.47){
	Arya /= COLS
} else {
	if(-( protect(30 + 1) ) + 1){
	dog -= rule(-0.44);
	y /= -0.43;
	COLS + foo(-destroy(rule(rule(betray(dog)))) - ( Ygritte )) / -Sansa * -11 * 78 * TABLE[Sansa][Hodor] / ( destroy(-rule()) / ( ( COLS ) ) )
} else {
	Ygritte /= rule(( 520.746 ),Jon,foo(COLS));
	if(bar(ROWS)){

};
	-0.13
};
	if(Hodor){
	( 1 );
	Arya *= ROWS
};
	COLS
}
} else {
	if(--0.31){
	( 1 )
};
	if(bar(( -0.04 )) / COLS){
	dog /= -Jon * ROWS;
	Ygritte *= ( ( foo(betray(( foo(dog) ),betray(protect(),ROWS),dog),-0.45) ) )
}
}
} else {

};
	Arya /= ( Sansa ) * TABLE[Arya][TABLE[-1][Stark]] / ( ( ( -COLS - Arya / -49 + -( Hodor ) ) ) )
}
} else {
	foo(y,-COLS) / Jon;
	-4
}
}
var Arya = Arya
assert 0.78 : "What do we say to the Lord of Death?"
var x = betray(Sansa,--Stark + TABLE[( -0.12 )][( mislead(mislead(48,COLS - -67 + ROWS)) )] + -10,( --650.992 )) + ROWS
assert foo(-0.7) + protect(Jon + ( TABLE[---bar()][0.2] ),TABLE[( TABLE[-75 / foo(TABLE[COLS][TABLE[COLS][mislead() - ( -COLS ) - 59]])][62] )][Arya]) : "One can not simply parse himself"
def TABLE[ROWS][i] {

}
var Sansa = ( 660.468 ) - 670.873
assert y : "What do we say to the Lord of Death?"
assert foo(( ( ( betray(-65,-1,0.27) ) ) )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Ygritte][j] {

}
def TABLE[-( Stark )][j] {

}
def TABLE[-dog][j] {
	if(protect() / destroy(mislead(( ( -1 ) ),Ygritte,86),( ( -1 / TABLE[Jon][Stark] ) ))){
	if(dog){
	Jon /= Arya
}
};
	TABLE[-1][-ROWS] - y
}
def mislead(y){
	if(Hodor){
	if(x){
	x -= rule();
	dog *= TABLE[mislead(-220.13,-ROWS)][rule(destroy(Jon),Ygritte)];
	foo(protect(( 50.4 ) + Stark,( rule(( -0.08 + ( mislead(( Hodor )) ) * -1 )) ) - protect(TABLE[( Hodor + ( ( --( x ) ) / -1 * Stark ) )][-1]),( 37 )))
} else {
	Jon += ROWS;
	Ygritte;
	TABLE[TABLE[COLS][Hodor]][--dog]
}
} else {
	x *= protect(--bar(dog,590.3,TABLE[---dog][-150.339]))
}
}
assert TABLE[ROWS][mislead(Jon)] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = 32
def protect(dog){
	if(rule(-ROWS)){
	Hodor *= -0.95;
	if(protect()){
	Ygritte += ROWS;
	y /= x
} else {
	y *= ( 0.65 );
	-57 + y
};
	Ygritte -= TABLE[destroy(x,Ygritte)][-TABLE[Ygritte][( betray(( -( Jon ) ),Stark,Sansa - 880.84) )]]
} else {
	if(Hodor){
	Ygritte *= ---1;
	Ygritte -= betray(( -betray(TABLE[1][ROWS],-betray(0.43)) ));
	rule()
} else {
	( dog );
	if(130.3597){
	if(970.9){
	Sansa -= Hodor
} else {
	if(-0.52){
	38;
	if(( TABLE[( betray(Sansa) )][( -dog - -( y ) )] )){

}
} else {
	--y;
	y -= -( x / protect(Ygritte,-1) * -8 )
};
	if(( ( -( foo(--76 * TABLE[rule(ROWS,-Stark)][( -TABLE[protect()][ROWS] )],510.62) ) ) )){

};
	bar(32,destroy(--1))
}
}
};
	if(--TABLE[Stark][TABLE[-( 720.4 ) + 200.1193][COLS]]){
	Hodor += foo(( mislead() ),( -6 ))
}
}
}
assert bar() : "Fear cuts deeper than swords."
var Jon = y
def TABLE[1][i] {

}
assert mislead(TABLE[-betray(Ygritte,foo(-25,( -23 + ( dog ) ),COLS - 1))][0.96],rule(--Ygritte / dog + --0.35),---x - x) : "What do we say to the Lord of Death?"
assert COLS : "What do we say to the Lord of Death?"
def TABLE[0.39][i] {
	y += x;
	if(x){

}
}
var Sansa = Ygritte + ( ( Ygritte ) )
var Jon = -protect(Jon / 0.71) * ( ( -420.1263 ) + protect(( --ROWS / ( -20 + COLS ) )) )
def TABLE[destroy(0.67)][j] {
	Sansa -= COLS
}
def protect(Stark){
	if(TABLE[dog][betray(ROWS)]){

} else {
	0.19 - ( rule(foo(0.17) - destroy(-1,TABLE[COLS][--TABLE[TABLE[( y )][COLS + ( ROWS ) * TABLE[( ( --ROWS ) )][( Arya ) * -COLS]]][foo(COLS * TABLE[( ( --dog * Stark ) )][6],ROWS,1)]]) * COLS,COLS) );
	if(TABLE[COLS][-( Sansa )]){
	x -= --x;
	-dog
} else {
	if(TABLE[Arya][bar()]){
	if(TABLE[bar(-x,ROWS)][Ygritte]){
	TABLE[( TABLE[--41 + mislead(-32,( TABLE[rule(destroy(COLS),dog,( Arya ))][mislead(-85,( 600.0196 ),0.16)] )) * TABLE[COLS / TABLE[0.96][99] - COLS][( Hodor )]][Sansa] ) - 210.5 + -1][-( ( protect(-Arya + Jon,rule(COLS,Arya / -0.45)) + ROWS - ( 630.69 ) ) ) / ( Ygritte - -1 / 500.98 )]
} else {
	Stark += foo(( dog ),-66);
	-6 * ---foo(bar(( ROWS )),( foo() ),( COLS )) * ( dog );
	Stark /= bar(Ygritte,Sansa,Jon)
}
}
};
	-0.93
}
}
def TABLE[ROWS][k] {
	x *= Arya;
	if(91){
	Stark /= dog;
	bar(protect(COLS,-betray(-21)),COLS)
} else {
	--66
}
}
def bar(dog,Sansa,dog){
	TABLE[( mislead(( ( protect(-0.42,COLS,( Jon ) + Ygritte + betray(Stark)) ) ),Sansa) )][( Jon )]
}
def betray(Hodor,Hodor,Hodor){
	dog;
	betray(-0.69 * -30,Jon)
}
def protect(){
	-920.35
}
assert Stark : "Winter is coming"
def TABLE[protect(ROWS,-1)][j] {
	Ygritte *= betray(ROWS,-bar(),COLS) * 0.73;
	--( 47 ) - ( -( ( 0.41 ) ) ) / Sansa - TABLE[Jon][protect(Jon)] - 1 / ( protect(rule(Arya,rule(-90.493))) )
}
var dog = -Sansa
def foo(){
	foo(Stark - TABLE[bar(( COLS ),Jon)][-ROWS],-Sansa)
}
def betray(y){
	--0.78 - -75;
	if(--( ( COLS ) ) * Ygritte){
	Arya / Hodor;
	if(mislead(COLS)){
	Ygritte /= protect(-Stark,( 85 ))
} else {
	x /= y;
	if(Sansa / --0.56 * Ygritte){
	Sansa /= -0.69;
	x *= -foo(COLS,Ygritte) + -52
}
};
	Hodor /= betray(( y )) / COLS
};
	0.1
}
def mislead(Arya,dog){
	x *= ( COLS * rule(TABLE[-92][-1 + TABLE[-Sansa][12]],COLS,--0.85) );
	if(-73){
	-( Stark )
} else {
	if(( -0.81 )){
	dog /= TABLE[-ROWS][-Ygritte]
} else {
	-29
};
	dog -= -protect(bar(66,( ( -8 * -Jon ) )),dog) * -71
}
}
var dog = -dog
var Hodor = -70
var Ygritte = ( Jon )
assert protect(protect(TABLE[-0.32][destroy(( TABLE[-mislead(ROWS,ROWS)][( foo(COLS,-0.63) )] ),Stark,-1)]) * ( ROWS ) * TABLE[Jon][Hodor + protect(( 33 ) * destroy(( foo(1,25,-( Arya )) ),41 + ( -0.92 ) / ROWS,0.21),dog,TABLE[( betray(-43,-( foo(( -320.99 )) )) )][ROWS] * COLS)]) + y : "One can not simply parse himself"
def bar(){

}
def destroy(dog){
	Jon -= --1 * -1
}
var y = 0.91
assert ( ROWS ) : "Fear cuts deeper than swords."
var Hodor = ( destroy(0.89,y) )
var dog = --protect()
def protect(Ygritte,Stark){
	y *= ( -betray(( ( ROWS ) )) * ( Jon ) / TABLE[--foo()][destroy(ROWS,TABLE[Stark][1]) * TABLE[( protect(TABLE[Ygritte][dog],( bar(( -( COLS + -Stark ) ),foo(COLS)) ) - -Jon * Ygritte) )][dog + 1] * ( -foo() )] );
	0.68
}
def TABLE[-0.95][i] {
	y *= ( ( ROWS ) );
	Jon += -0.28;
	if(( -820.092 )){
	x
} else {
	Jon /= -COLS
}
}
def TABLE[( dog )][i] {
	Sansa *= TABLE[( ROWS )][-0.38];
	if(x){
	if(--mislead(-Arya,( -mislead() - -( Jon ) )) / ( 0.03 )){
	if(-TABLE[rule(310.278,COLS)][mislead()] - bar(-0.48 * -0.93)){
	if(( x * Stark )){
	-84;
	Stark -= -0.54
} else {

}
} else {
	-1
};
	mislead(-360.436) * bar(rule(2),-destroy(( foo(y,0.21 / --92 - -x - -95) ) - Ygritte))
}
};
	if(Stark){
	x;
	TABLE[COLS * x / --30][-( rule(-protect(TABLE[( ( x ) )][foo(TABLE[( x )][-0.89],1,COLS)],-0.46,ROWS)) ) + Ygritte] / -Arya;
	dog
} else {
	if(rule(-91,( Jon ))){
	if(Hodor){
	if(COLS){
	dog -= mislead(( -0.3 * 74 ),930.02);
	Hodor -= dog;
	( TABLE[-68][-860.243] )
} else {

};
	TABLE[-0.79][( COLS ) + x]
};
	-1
} else {
	if(TABLE[-( dog - Sansa )][-TABLE[protect(rule(COLS,protect(-bar(),COLS,COLS),( -42 )),-0.94,( foo(-destroy(0.64,-0.07,Jon),Ygritte) ))][x] + Ygritte]){
	if(( ( protect(Hodor * ( ---920.414 )) / -Jon ) ) - -COLS - mislead()){
	if(( bar() + -( foo(( x ),ROWS) ) / ( Stark ) )){
	if(ROWS){
	Arya *= ( Ygritte );
	( 1 )
};
	bar();
	Ygritte += betray(Arya,destroy(dog,Hodor),100.197 / foo(dog,( ( 76 ) ))) + -y
}
} else {
	Jon *= 1
}
} else {
	if(TABLE[-ROWS][Stark]){
	if(( ( -ROWS - ( -910.5 * bar(( ( COLS / Ygritte ) )) ) - ( rule() ) - ROWS ) )){
	if(Hodor){
	( TABLE[47][-1] );
	y += Arya
} else {
	if(-0.42){
	if(( 0.42 )){
	Arya *= Hodor;
	-rule(( mislead() ) * ROWS) + y
} else {

};
	TABLE[TABLE[TABLE[protect(Sansa,-( y ) / dog)][mislead()]][COLS]][--( COLS )]
};
	( ( foo(Arya + ( -420.065 )) - COLS * ( TABLE[Stark][destroy() / 95 / ( mislead(x,Jon) ) + Stark] ) ) )
}
} else {
	Sansa += protect(-1,betray(Ygritte));
	if(COLS){
	Ygritte += ( -87 );
	-( --COLS / ROWS / ROWS );
	--0.35
};
	mislead(protect(( Ygritte )),( ( ( --mislead() ) ) + x ) + -destroy()) / -betray(TABLE[dog][( --Stark - -TABLE[1][-0.4] * betray(-240.122,( ( TABLE[mislead(foo(Jon,Stark) * destroy(x,( ( ROWS + -60 ) / -56 / Jon )))][-Stark - -ROWS * protect(ROWS)] ) )) )],--57 - ( -0.43 ) - COLS)
};
	Hodor *= betray()
} else {
	if(TABLE[-1][( TABLE[Arya][--( -17 )] ) + 0.82]){
	y;
	if(-1){
	Stark /= bar(mislead(COLS),bar(14 + 26) * mislead(COLS))
}
};
	ROWS
}
}
}
}
}
var Hodor = ( ROWS ) + foo(80 - rule(-51,mislead()),--( protect(TABLE[dog][( -510.36 + -bar(destroy(27)) )],-390.053,870.44) ) - ( ( Arya ) ) / -mislead(0.14,destroy(( bar() ),TABLE[( -COLS )][ROWS])))
def foo(Arya,dog,Hodor){
	dog -= ( ( -ROWS ) ) / -1
}
def TABLE[betray(bar(Jon))][k] {
	Ygritte /= foo(---Hodor,TABLE[0.97][-( TABLE[mislead(( bar(--COLS) ) * ( protect() ) / TABLE[920.09 * Hodor / -Hodor][dog],x)][-38] )]);
	x += 0.36;
	-destroy()
}
assert rule(( protect(-Ygritte - mislead(0.32,x * bar(1,-1),240.1) * rule(-0.03) * Jon / -TABLE[betray()][1] / ( ROWS )) ),--foo(Arya + destroy(destroy(--COLS - ( mislead() ) - -( protect(-1) ) / rule(),Ygritte),-0.11))) : "Winter is coming"
var y = foo(( ( COLS * mislead(( --Arya ),mislead()) ) ),ROWS)
var Jon = ( -( TABLE[protect(TABLE[dog][Stark])][( Stark )] + --( ( -0.34 ) ) ) / TABLE[-22][-0.84] )
assert -( ( ( Stark ) ) ) : "What do we say to the Lord of Death?"
var Arya = Stark
assert -( foo(39 * 34,--bar(( Ygritte ),COLS)) ) : "One can not simply parse himself"
def foo(y){
	-y - 0.76;
	Sansa
}
def bar(Arya,Sansa){

}
assert 14 : "Nothing burns like the cold."
var Arya = ---0.1 + Sansa + ( ( -1 ) )
assert -1 : "What do we say to the Lord of Death?"
def protect(x,y){
	if(betray(COLS / TABLE[-1][rule(Hodor,ROWS)] - mislead(1))){
	foo(-6) + ( --280.36 )
} else {
	if(-0.66){
	TABLE[-x][protect(y * ( TABLE[Hodor][dog] ),( Jon ),( --0.1 ) * Hodor)]
} else {
	-57 - ( Hodor ) - COLS;
	1 - -13
}
};
	-60;
	-1
}
var Hodor = ( COLS )
var x = 590.4208
def TABLE[( dog )][i] {
	x += 0.53
}
def TABLE[( -220.44 * betray() )][j] {
	Ygritte -= foo(ROWS,-Sansa);
	Jon += -x
}
assert -bar(-0.87) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[foo(-( -0.57 ))][k] {
	Stark *= ( ( 8 ) );
	if(betray(ROWS) - rule(830.91,0.53)){

};
	Ygritte
}
var Jon = mislead(-ROWS,--ROWS)
var x = -0.93
assert ROWS : "Nothing burns like the cold."
var Hodor = dog
var x = ( ( -690.5 ) ) / ( TABLE[y][ROWS] )
def betray(Arya){
	y -= TABLE[---COLS + -TABLE[0.92][36] * TABLE[destroy(( ROWS ) + x,COLS / Sansa)][0.57]][-1 * ( ROWS )];
	Hodor -= Hodor
}
var Hodor = -0.49
def TABLE[Jon][j] {
	if(betray()){
	y /= Arya
} else {
	Sansa /= -( COLS ) - -COLS;
	( ( ROWS ) );
	if(( mislead(mislead(( -0.48 ),-( ( y ) - ( x ) ))) )){

} else {
	x -= ( -480.473 )
}
}
}
def TABLE[-destroy(Arya,1,---0.57 * -820.6 * -1)][j] {
	if(--Sansa / Stark){

}
}
var x = -protect(-( ( 0.51 ) ))
assert -( -0.11 ) * -protect() * -( COLS ) / Stark : "Nothing burns like the cold."
assert protect() : "Winter is coming"
var y = TABLE[( COLS / ( dog ) )][-foo(0.25) + COLS]
assert protect() : "One can not simply parse himself"
def TABLE[( -1 )][i] {
	if(ROWS){
	Stark *= TABLE[-0.09 * COLS - 320.21][foo(rule() * Jon / mislead() * protect(0.41,protect(Sansa,( Jon ),--0.8 * ( -1 ))) - Arya)];
	TABLE[-780.846][--TABLE[1][( ( ROWS / Ygritte ) )]] - Hodor
}
}
var Hodor = COLS
var x = ROWS
var dog = ( bar(( COLS + Arya ),-dog,COLS) )
def mislead(Arya){
	if(Jon - --1 + 370.06 + -1 / Ygritte){
	( foo() );
	x
};
	if(--( COLS )){
	Sansa += ( Jon );
	Ygritte *= x
} else {

}
}
def TABLE[--( -11 )][k] {
	destroy(COLS,-foo(( ( ( TABLE[Jon][dog] ) ) ),COLS)) + -( foo(protect(TABLE[91][ROWS])) ) * 300.11 * --0.45 / -( rule(9,-0.77) ) - -rule(-Stark,Sansa,( protect(protect(bar(-43),-Stark),( ( ROWS ) )) )) + protect(590.56,( --protect(TABLE[TABLE[( ROWS )][rule(TABLE[ROWS][COLS],Sansa,ROWS - -62)] - TABLE[destroy(Arya - -COLS + -60 - -30,Ygritte)][y]][destroy(-rule(( -830.7 + COLS )) + TABLE[TABLE[foo(x,( -0.8 ))][Hodor - -0.36]][mislead(mislead(0.64) * ( 180.38 ),-1)] * Stark,-190.9996) + protect(rule(Jon,Jon,-( Arya )),Ygritte)]) ),-COLS) + -1;
	-Sansa;
	if(-1){

} else {
	dog;
	-( x )
}
}
var Ygritte = ( dog )
def betray(Hodor,y){
	Arya /= dog;
	dog /= ROWS;
	-12
}
var Sansa = COLS
def protect(Arya,x){

}
def TABLE[ROWS][j] {
	-0.12;
	ROWS;
	y /= Sansa
}
def TABLE[dog / rule(220.19 - TABLE[TABLE[0.16][-( COLS + bar(0.88,-mislead(Jon,bar(betray(mislead()),COLS,-bar(rule(1 - -ROWS / ( Hodor ) - destroy(49,ROWS) / dog,( Ygritte )),y,( ( y ) ))) / -0.62 - -1 - Ygritte,x)) ) + x]][TABLE[COLS][-83]])][i] {
	dog *= 0.68
}
var Ygritte = COLS
def betray(Jon,y){

}
def TABLE[( bar(Hodor) )][k] {
	if(-COLS){
	dog;
	ROWS
}
}
var Sansa = --1 + -1 - x
def TABLE[Sansa][j] {
	Jon -= -TABLE[Sansa * ( Stark )][betray(0.94,protect(0.7 - TABLE[y][-0.24]),rule(mislead(rule(( ROWS ) + ROWS + ( mislead(-TABLE[-0.77 - TABLE[COLS][-protect(ROWS)]][( 0.77 )],( Sansa ) - 0.85) ) * 660.5,( ( -bar(foo()) ) ) * ( foo() )),COLS))) * -foo()]
}
def TABLE[bar()][i] {
	if(COLS){
	if(mislead(rule(),foo(TABLE[Arya + Jon][rule(protect(---x / 16,( 0.14 ),bar(( ( ( Jon ) ) ))),-Arya,( Arya ))]))){
	if(-0.75){
	1
}
}
} else {
	Sansa += COLS;
	x /= -TABLE[( ROWS )][-( -Jon )];
	if(-Hodor){
	if(40){
	ROWS / ROWS;
	( -foo(x,( Hodor )) ) - -bar() * foo(mislead(),x,foo(-Jon,( ( -1 + ( -( ( TABLE[ROWS][0.28 * -39] ) ) ) ) ) - x));
	if(COLS - bar(betray(Jon + ( COLS ) * Ygritte,470.84),destroy(( -91 ),-0.9,( ( mislead(dog) ) )),y)){
	Jon += -10
}
} else {
	Arya /= bar(-Jon * 200.655 * -82,x)
};
	x
}
};
	( COLS );
	if(-0.25){
	bar();
	-mislead(Arya,foo(-96 + betray(Stark + --mislead(Stark,Ygritte),ROWS,Stark)));
	destroy(bar())
} else {
	( Sansa )
}
}
def rule(y){
	if(destroy()){
	if(0.78){
	if(--rule(Sansa)){
	y -= Jon;
	Arya *= y;
	Sansa *= TABLE[860.6][ROWS]
} else {
	Jon;
	( -1 + ROWS / TABLE[1][( -0.94 ) / --( -Jon ) + -0.71] )
}
};
	if(( ( Jon + Stark + --1 * COLS - -1 * ( TABLE[dog][Sansa] * protect(mislead(0.56),( COLS )) ) / 62 * rule(1) + -93 + Stark * ROWS ) )){
	if(( --32 * 1 )){
	if(destroy(Hodor) / 1){
	Hodor /= ( -1 )
} else {
	if(-Stark){

}
}
} else {

};
	if(Sansa * ( 0.35 - 44 )){
	protect(bar(0.25,ROWS) - ROWS,TABLE[y][( -0.39 )]);
	betray()
} else {
	y -= TABLE[-Stark][-Ygritte - 0.53];
	if(TABLE[Jon][-( foo(ROWS) )]){
	if(21){

}
}
}
}
}
}
def protect(){

}
def TABLE[760.111][k] {
	0.61;
	if(COLS){
	if(-protect(bar(ROWS,-x),y) * 1){
	Stark *= -TABLE[-0.03][ROWS];
	-Stark
}
}
}
var Jon = ( Arya )
def foo(Jon,Sansa){
	if(-0.35 + COLS){
	x
};
	Sansa += 0.64
}
assert 0.53 : "Nothing burns like the cold."
def foo(y,Hodor,Hodor){

}
def rule(Ygritte){

}
def TABLE[ROWS - ( COLS ) - -betray(-COLS * rule(TABLE[TABLE[( ( Arya ) )][-( Stark )]][COLS],80,-0.47),TABLE[1][destroy(ROWS,( ( TABLE[0.1][protect(( Hodor * dog ),--0.54,Sansa)] ) ),destroy(TABLE[-COLS][COLS],49))])][k] {
	if(-foo(x)){
	Jon /= TABLE[Stark][-38];
	if(ROWS){

};
	COLS
} else {
	if(( destroy(TABLE[---1][dog],( 510.114 * ( -700.37 ) )) )){
	-1;
	0.48
};
	Hodor += rule()
}
}
var Ygritte = -1
def mislead(Sansa,Stark,Arya){
	Hodor += ROWS
}
var Arya = 26
assert ROWS : "Nothing burns like the cold."
assert -77 : "Nothing burns like the cold."
def TABLE[destroy(destroy(),mislead(),9)][i] {
	Arya += ( ROWS );
	if(1){
	y /= Hodor;
	if(protect()){
	y /= TABLE[--0.13][rule(COLS)];
	Arya /= ( destroy(( ( destroy(ROWS) ) )) )
} else {
	if(-destroy(COLS,( TABLE[-990.47][-foo() / -Ygritte] ))){
	Hodor
} else {
	if(COLS){
	if(TABLE[x][( COLS )]){
	dog *= ( 0.57 );
	( ROWS );
	45
} else {
	ROWS;
	Jon *= mislead(rule(TABLE[---Stark][destroy()]))
}
} else {
	x *= TABLE[-0.68][COLS]
};
	Hodor /= Jon
};
	if(TABLE[TABLE[( Jon )][( 1 )]][Ygritte]){
	if(210.741){
	Jon -= Hodor;
	TABLE[dog][( ( destroy(x,destroy(-bar(Ygritte,betray() + Hodor),rule(Jon,dog))) + dog ) ) + -bar(ROWS,-foo()) * TABLE[---( -57 ) - dog - 0.36][-0.32]]
};
	Jon /= ( Stark )
} else {
	if(-foo(TABLE[-0.41][ROWS] - ( ( protect(rule(-betray(destroy(Ygritte,( -1 )),-dog,( -( -betray(betray(-( 10 ),ROWS)) ) ) + COLS) / COLS,TABLE[protect(TABLE[( -dog )][-540.21 * COLS],1,y)][ROWS]) / -0.91,870.59 * Sansa) ) + -COLS ),( TABLE[foo(Hodor)][dog] ))){
	if(-mislead(betray(( Ygritte + COLS )))){
	Stark += --( ( Arya ) ) / ( ( -( --protect(-Jon,mislead(2,84)) / betray(-0.69,protect(-1,--TABLE[Ygritte * ( destroy(dog,Hodor) )][betray(Sansa,Hodor)] + betray(-1) / protect(bar(rule(),Ygritte),( ( -57 ) ))) * bar(-410.95)) * Arya ) ) )
};
	if(( 90.688 )){

} else {
	Ygritte /= -Arya;
	y += COLS
}
} else {
	y /= ( Stark );
	Jon;
	x /= protect(COLS,y)
};
	-0.68
}
}
}
}
var Jon = y / ROWS
def TABLE[( ( ( Jon / -Sansa / COLS - ( -rule(Hodor,( ( rule(42) * x ) )) ) ) ) )][k] {
	if(660.63 / y){
	if(x){
	Arya *= ( ( -48 ) );
	( ( ( y ) ) );
	betray(dog * bar(),--82)
}
} else {

};
	( ( ( COLS * Ygritte - bar() + protect(-91,1,-Hodor) ) ) )
}
assert -93 : "Winter is coming"
def betray(Hodor){
	x -= COLS;
	y += ROWS
}
def mislead(Hodor,Stark){
	61 + -Arya
}
assert ( y ) + ( -23 ) : "One can not simply parse himself"
var Jon = 0.95
def destroy(Hodor,Sansa){
	y -= destroy(TABLE[-destroy(( ( TABLE[COLS][TABLE[Jon - ( dog )][foo()]] ) ),-dog,( TABLE[( mislead() / Sansa )][( protect(( ( --( mislead(x) ) ) ),bar(),TABLE[TABLE[Stark][1]][betray(-Jon,TABLE[( mislead(-destroy(COLS) / TABLE[-Ygritte][betray(TABLE[COLS][foo(1,-( 380.8996 ))],-foo(TABLE[Hodor][( TABLE[foo(( 1 + -TABLE[COLS / --94][TABLE[-destroy(-( ROWS )) * protect()][ROWS]] + Jon ))][betray(dog + foo(-26 - ( -betray() )),( Hodor ) * 0.99 + x - ( rule(COLS,mislead(COLS,Hodor,( --0.57 ))) ) / ( ( bar() ) ),-TABLE[rule(91) - --0.74][8])] - Sansa / --rule(Sansa,Stark) + x ) / ROWS],--COLS,ROWS),destroy(-protect(),y,-0.92) / ROWS * ROWS)],ROWS,( TABLE[( ROWS )][-Hodor * TABLE[Jon][-Sansa]] )) )][dog] + ROWS,1)]) )] )) + 0.64][-32] * ROWS)
}
def TABLE[35][i] {
	Sansa -= -Sansa * rule() - ( ( Hodor ) ) - TABLE[bar(rule(rule(( -18 ),-28,bar(-( TABLE[-Jon][COLS + TABLE[1][Hodor]] ))),-64 * ( ( 79 ) )))][( ( bar(TABLE[-98][dog]) + ROWS + TABLE[Jon][--betray(COLS,( TABLE[-0.2][( COLS )] )) * ( 0.59 )] ) )]
}
def protect(x,Jon,Arya){

}
assert 0.93 : "Winter is coming"
def rule(x){
	Ygritte += Ygritte;
	Stark += betray() + destroy(destroy(rule(ROWS,( ROWS * TABLE[0.58][( -TABLE[-ROWS][-Ygritte] )] ))));
	TABLE[0.92][Stark] * ( ( -1 ) )
}
def rule(Ygritte,y,y){

}
def foo(Arya){
	if(Hodor){
	if(( COLS ) + TABLE[-5][-ROWS]){
	Ygritte += --1 + -1 + -57;
	Hodor -= ( Jon )
} else {
	-0.28;
	Sansa -= Stark
};
	foo(Hodor)
} else {
	if(TABLE[foo(1)][mislead(( Sansa ),x)]){

};
	-foo(ROWS,COLS / 1)
};
	if(y){

} else {
	( ROWS )
}
}
def protect(Hodor){
	if(COLS){
	if(x * ( Arya ) + -( 0.11 / COLS )){

} else {
	if(Sansa){
	-280.1762;
	if(bar(( Ygritte ))){
	Arya += ( COLS )
} else {
	if(Arya){
	if(-1){
	y *= -1
} else {
	if(dog){
	Arya *= ( ROWS )
};
	bar();
	Ygritte -= -ROWS
}
} else {
	( TABLE[COLS][betray(TABLE[--840.49][rule(Hodor)],-0.58)] );
	Sansa += 270.986
}
}
} else {
	if(dog){
	-Arya;
	Jon += -ROWS
} else {
	TABLE[8][COLS] * ROWS
}
};
	Sansa;
	if(( ROWS )){
	--0.03
}
};
	Hodor /= foo(-14)
}
}
var x = 0.9
assert ROWS : "Winter is coming"
def betray(dog){
	Hodor *= ( rule(( ( Sansa + bar(mislead(x,-1)) - mislead() - ( x ) ) ),bar(protect(TABLE[( Arya )][1 + -1],-1),Sansa)) );
	y *= COLS - ( ( Jon ) )
}
def protect(Ygritte){
	( -destroy(-0.58) )
}
def foo(dog,Ygritte,Stark){
	if(mislead(( -73 ),Jon + rule(26,Ygritte,( ( -TABLE[1][---COLS] - 1 / -x - -8 / protect(Jon,38,( --betray(-0.14,rule()) ) - 1) ) )) * ( -0.87 ),rule(protect(-bar(6 / ( ( ( COLS / -ROWS ) ) ),Ygritte,Arya))))){
	if(( -( TABLE[destroy(betray(-Stark),TABLE[( ROWS )][( ( -1 / 53 ) ) - -80 / ( -( bar(0.8,( ROWS ),-( Sansa ) / -COLS) ) )])][Ygritte] / 340.05 ) )){
	Jon -= Hodor;
	if(--Stark){
	dog *= -75
}
};
	( ROWS )
}
}
def TABLE[( bar(bar(destroy(COLS,( betray(Arya / -Jon,rule(betray()),1) )),bar(-COLS,bar(Ygritte,--0.61),( --( ( 0.39 ) ) ))),Stark) + --( Jon ) * foo(COLS) - ---TABLE[( rule(-rule(ROWS,protect(-0.75,-y),0.38),-49 - -dog + Jon,( Jon ) + -Jon + ( 0.17 )) )][TABLE[bar()][mislead(x)]] + TABLE[( betray(ROWS) )][destroy(mislead(( -0.26 / destroy(1 - ROWS) ),-53),-( COLS ) * COLS)] / ( bar(( -TABLE[TABLE[Jon][( 96 )]][-ROWS] ) * destroy(-destroy(-0.75 * -0.56,-( Sansa ))),Jon) ) / ( COLS ) )][i] {
	Ygritte /= bar(TABLE[-Ygritte][-y / ROWS]);
	( ( ( TABLE[TABLE[x - -y][--COLS]][betray(( -COLS ),--0.55,( Jon ))] ) ) - foo(destroy(),50,( 0.91 ) * 21) )
}
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(Sansa){
	if(-foo(destroy(y),-y)){
	if(( protect(COLS,42) )){
	if(betray()){
	y -= -840.58
} else {
	Ygritte /= TABLE[TABLE[0.81][y]][( 170.66 )];
	Sansa += ( --betray(-1,( -ROWS ) + 43 + ( ( ( -63 ) ) ),protect(destroy(( betray(Sansa + 0.86,TABLE[Arya][COLS]) - ( ( dog ) ) ),1),85,-35 - ( COLS ) + dog)) )
};
	dog += ( Arya )
} else {
	dog += ( -95 )
}
};
	( COLS / Arya )
}
def rule(Jon){
	Arya /= betray(( Sansa ),COLS) * -39 + -( y )
}
def TABLE[ROWS][k] {
	if(-betray(--destroy(),-81) - ( y ) / ( -( 410.7 ) - protect(Hodor) * -( Jon ) + ( COLS ) * dog )){
	Stark += x;
	Stark
} else {

}
}
def TABLE[-Hodor][i] {
	if(Stark){
	Ygritte /= ( -betray(-0.25) );
	1;
	if(Jon){
	if(dog){
	Ygritte;
	-1;
	x /= foo(ROWS * TABLE[Stark][destroy(Arya * ( ( 25 ) ))] + Ygritte)
}
} else {

}
} else {
	Arya *= Jon
};
	if(-ROWS){
	destroy();
	if(550.6){
	( ( bar() ) );
	mislead();
	Hodor -= ( --0.35 )
} else {
	Stark *= -protect(1,( rule(ROWS,( ( -350.7 ) )) ));
	Arya /= Stark
}
};
	x
}
def destroy(dog,Arya){
	TABLE[( ROWS )][y - foo(mislead(-( ( ROWS ) ),-430.668),( ( ( ( foo(protect(TABLE[bar(( -Stark ))][( ( -68 ) )],bar(( --( foo(-ROWS + -0.14) ) ) * -47)),TABLE[Jon][-41]) ) ) ) )) + TABLE[( dog ) * ( ( COLS ) )][Hodor]]
}
def protect(Sansa){
	ROWS;
	if(TABLE[--( ROWS / Ygritte + -1 )][( betray(COLS,foo(( -22 ),-TABLE[-90 / --2 * Stark][0.41])) - bar(-72) )]){
	Stark += ROWS;
	( ROWS )
}
}
def betray(Sansa){
	-ROWS;
	if(ROWS){
	if(rule(( protect(betray(bar()),-foo(-0.21 / TABLE[x][bar(-TABLE[540.08 - -foo(-30.513)][destroy()],40) / COLS + foo(x,foo(-32) - dog) / ( mislead(( Hodor - TABLE[y][dog] )) )],COLS)) ))){
	if(Hodor){
	if(betray(COLS,ROWS)){
	( -( destroy() ) );
	if(840.17){
	Jon + --rule(-TABLE[-75 + ( -35 )][COLS],bar(230.21,-x * ( 18 ) + mislead(betray(bar(( -1 ))) * -( -Stark + mislead(-TABLE[0.62][--Arya],COLS) ),Stark,ROWS),ROWS) + TABLE[Jon][-900.2],( ROWS )) + TABLE[mislead(COLS,foo(-( Ygritte ) + 0.35 / --0.19 - --TABLE[-protect(y,( ( 77 ) ) - Sansa)][ROWS] - dog * TABLE[331][--Stark] - ( mislead(TABLE[mislead(90) - foo(-1,COLS,TABLE[ROWS][-COLS])][430.246],TABLE[( mislead(Stark) * -ROWS )][Arya],betray(bar(COLS,-COLS + Hodor),-1,destroy(TABLE[ROWS * bar() + Sansa - --bar(( COLS ),300.07,-0.57 + mislead()) / ROWS][-970.03] + ( Sansa )) - ROWS)) ),-4,500.04 + 0.41) / -350.73,( ( COLS ) - Sansa ))][-( Stark )] * TABLE[-11][-0.14] / destroy(COLS)
} else {
	y *= ---( bar(ROWS,TABLE[bar(130.4512,-0.18 - --65 - ( Stark ))][-protect(TABLE[dog][ROWS],COLS,Sansa) / -( 97 )]) ) * mislead() + --ROWS * ROWS * -45 - TABLE[betray(ROWS,mislead(( ( y ) )))][TABLE[y][-1]];
	if(( Jon )){
	dog -= ( COLS / ( ( ROWS - -1 ) ) + -COLS );
	if(0.43){
	if(Arya / -330.86){

} else {

};
	( ( -COLS ) )
}
};
	Sansa += TABLE[betray(--x + ( -0.01 ))][-1]
};
	if(-1){
	Sansa /= -1
}
} else {
	Stark += ROWS;
	y -= -0.62;
	x += foo(bar(-rule(-Stark,betray(( ---betray() ) - ( y ))),destroy(COLS),Stark))
};
	if(( ROWS )){
	if(-protect(-mislead(Jon) * -Stark - ( y ),( ROWS ),-79 / -Sansa + -mislead())){
	Ygritte /= ( foo(-1) );
	dog;
	Ygritte
}
}
}
}
} else {
	Sansa *= Hodor;
	Jon *= 27;
	if(TABLE[rule(rule(rule(( -14 ) / destroy(TABLE[( ROWS )][destroy(-( COLS )) + TABLE[-97 * Jon][( Jon )]]) - Hodor)))][COLS]){
	if(( -TABLE[-Hodor][0.85] ) + Jon){
	if(rule() * -x){
	if(Jon){
	Arya += ( Arya )
} else {

};
	COLS
} else {
	if(-( COLS ) + COLS){
	Hodor;
	Hodor -= destroy(Hodor)
};
	-mislead(Stark);
	Ygritte -= y
};
	if(dog){
	if(----360.502){
	y += -720.628;
	( betray(--220.346) )
} else {
	if(-TABLE[mislead(x,y)][COLS - -0.24]){
	if(COLS){
	-TABLE[Ygritte][-60 - 1] / -0.97;
	if(0.06 * bar(TABLE[( --betray(-( ( Jon ) / TABLE[( betray(-( Ygritte / destroy(TABLE[-y][Ygritte],6) ),Jon - -( Hodor ) * bar(destroy(( ( ROWS ) ),-x),destroy(TABLE[Stark][1],( Sansa )),-53) - COLS / -rule(TABLE[protect(( destroy() ) + 89 / -( -COLS ),foo(( betray(Hodor) ) / mislead()) + -0.69)][( -betray(rule(( ( COLS ) )),-( -0.9 )) ) - Ygritte]),-y) ) - Hodor - COLS][410.164] )) )][Stark],-Hodor,-680.41) * destroy(destroy())){
	Hodor *= ( -140.672 );
	( 220.302 )
} else {
	if(0.39){

}
};
	--87
}
};
	dog -= Stark
};
	bar(1,96)
};
	if(ROWS){
	-Jon * destroy(-y / TABLE[-110.4678][( 0.41 )] + ( ( -betray(-TABLE[-1][foo(TABLE[TABLE[destroy(rule())][( ( rule(---( 63 ),( dog ),Sansa) ) )]][810.4 / 980.9],Stark) / 1]) + TABLE[-mislead(Hodor)][( COLS )] ) ) * -( 49 ) * TABLE[( 0.05 )][--1 - ( COLS * -10 * -12 )] + -160.898 + 40)
}
};
	( Arya )
}
};
	-90
}
var y = ROWS
def mislead(x,x,dog){
	Sansa *= ROWS
}
var Arya = Sansa
assert Arya : "One can not simply parse himself"
var y = COLS / -Hodor * foo(--( -ROWS ))
assert bar() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = y
assert TABLE[rule(Stark) - 0.8 + ( -66 + COLS ) - ( 1 )][140.3] : "Fear cuts deeper than swords."
var x = ( --rule(Arya) / betray(0.45) )
var Arya = Stark
def foo(y,Hodor,Ygritte){
	if(y){
	if(-61){
	if(dog){
	if(1){
	Ygritte -= Ygritte;
	if(COLS){
	if(protect(1,--0.69)){
	if(-1){
	Stark -= -( bar(--0.79,( protect(Sansa * -62,( protect(( Sansa ),betray(Hodor)) )) )) )
} else {
	x /= COLS / TABLE[Hodor][--( -COLS + ( mislead(bar(( TABLE[-87][-51] )),-COLS) ) - ( --0.45 + foo(Jon * bar(mislead(-98 + -0.34,y)),270.75 * ( Arya ) / -760.5864 + 0.65 / mislead(),ROWS) ) * ( Ygritte + ROWS ) )];
	if(-bar(Jon,Jon - -( COLS / -560.424 )) * Arya){
	( -TABLE[( -66 )][-0.87] );
	if(Arya){

} else {

}
}
}
}
}
}
} else {

}
}
} else {
	Arya /= rule(( -Jon ) + ( y ),Hodor);
	COLS
};
	Sansa *= ( destroy(TABLE[Jon][0.25]) )
}
def TABLE[COLS][j] {
	if(560.1723 * -1 * ( -89 + Ygritte ) * foo(protect(-1,protect(COLS,0.48,--ROWS)),Hodor)){
	-1;
	-Ygritte + destroy(( protect(COLS,-Arya) )) * y
}
}
var Sansa = ROWS
var Sansa = -32 / ( -bar(0.35,-destroy(ROWS + -x,-COLS,ROWS),-Ygritte) ) * ( Stark )
def TABLE[( foo(x,88) )][k] {

}
def TABLE[( -Jon )][j] {

}
var Arya = TABLE[-85][--74]
def TABLE[1][i] {
	if(Arya - -77 - -( x )){
	ROWS - Jon;
	bar()
}
}
def protect(Ygritte,Ygritte,Jon){

}
assert Sansa : "Nothing burns like the cold."
def TABLE[Arya][i] {
	if(mislead(Sansa) - 640.1){
	if(( Sansa )){
	( --( y * -0.43 * ( Arya ) - -( ( -13 ) ) - -0.44 / -COLS + ( -( TABLE[-( ( -180.25 ) - 1 )][COLS] ) ) * destroy(y) + Jon ) / dog * --( ROWS ) + -13 + protect(( -69 / x - COLS ),( 0.27 ),TABLE[-Stark - -3 * ( betray() - 0.68 )][COLS]) + TABLE[( 15 )][-( COLS ) + -mislead(( bar(Sansa,Ygritte,( betray(-1,protect(--0.93),y) ) * TABLE[-foo(foo(TABLE[Hodor][0.5],( ROWS + Sansa ) - Stark))][-mislead()]) ),dog) - ( ( --rule() - ( -( -( betray(Jon / COLS) ) ) ) ) )] );
	Hodor += Sansa
};
	Hodor += TABLE[protect(TABLE[protect(-0.06,95)][x],-0.59,( foo(18) ) - protect(---( foo(ROWS / Ygritte,y - ( rule(y,-protect(COLS) - Sansa,--destroy(( rule(TABLE[Arya][0.71],ROWS,-rule(--1 - x,Sansa)) )) - -ROWS) ),( Jon )) )))][----destroy(rule(protect(dog,-ROWS * ( Jon ) + COLS,Sansa)),-rule(),bar(-----( ROWS ),dog,ROWS)) + 0.34 + 18 / destroy(( TABLE[Arya][0.89] ),-22) / -Stark]
};
	if(-1){

} else {
	y *= ( Hodor );
	0.91
}
}
def betray(x,Sansa,Hodor){
	if(( -62 + Sansa )){
	-1
} else {

};
	destroy(( destroy(COLS) ));
	( ( 0.29 ) )
}
def TABLE[--1][j] {

}
var Hodor = ( ( 1 ) )
var Hodor = protect(-60.3)
def TABLE[mislead(-x) / ( -( ( mislead(( 0.8 )) ) ) )][i] {
	-TABLE[Sansa][destroy(-( -mislead(0.86) / betray(destroy(dog) * ( destroy() ) * foo(-rule(TABLE[-62][10.983],foo(Jon + TABLE[foo()][-1 / Jon] / ( -( protect(( TABLE[COLS][destroy(-foo(ROWS))] )) ) ) * ROWS,-ROWS))),COLS) ) - --Hodor + -980.561 / COLS)];
	Stark += --51;
	if(protect()){
	( ( 0.68 ) - Ygritte )
} else {
	if(dog){
	if(-TABLE[0.31][( destroy(TABLE[--1 / ( -x / -51 )][( Hodor )],dog * rule(-600.21,mislead(y),COLS) / betray(-330.5824,TABLE[-0.88][( -0.67 )],( COLS )) * -270.85,Stark) )]){
	y /= TABLE[( destroy(TABLE[bar(-ROWS,-TABLE[Ygritte - ( ROWS / ---0.44 + -Jon )][ROWS] - -0.12)][betray()],rule(Ygritte + ( ( Stark ) ) / -Ygritte,-bar(( ( destroy(ROWS) - x ) ),---620.57,rule(mislead(TABLE[( ( --foo() ) )][-890.3499],-Stark - -ROWS + ROWS / -Arya,x) * Jon,foo(( ( COLS ) ),-foo(COLS) / dog))))) )][( 1 )] * -dog;
	if(TABLE[( bar(-TABLE[( protect(protect(dog)) )][bar(1,protect())],-destroy(TABLE[--rule(x) / 0.9][protect(rule(COLS) * -11,-0.64 * --( destroy() ) * Sansa)],( COLS ))) )][x]){
	Ygritte += ( ( destroy(-COLS) ) );
	dog / -Hodor
} else {
	COLS
}
}
} else {
	Stark += -30.47
};
	Jon += destroy(0.79 * Ygritte - ( 51 ) - Jon + foo(Sansa),dog);
	Arya -= Hodor
}
}
def rule(Ygritte,Hodor){
	if(protect(( 85 ),40,foo(-ROWS))){
	if(-COLS - ( -destroy(Sansa,-protect(-( -8 ),bar(y * -ROWS * x))) )){
	Ygritte -= ( Ygritte - -57 ) + ( -( ( 0.27 ) ) )
} else {

};
	protect(Jon,x - destroy(-39,( -( destroy() ) )) / rule(betray(Sansa)) * bar(( ( -0.02 - COLS ) ),COLS) - ( foo(protect(Hodor),-0.52) ))
} else {

};
	if(( 1 )){
	-protect(Jon) + Sansa;
	if(( Jon )){
	x *= -760.8491;
	x /= Ygritte
}
};
	x += -39
}
def foo(dog,dog,Sansa){
	Stark -= ROWS;
	dog
}
def TABLE[x][j] {
	if(-( y )){

} else {
	( ( ( -ROWS ) ) ) + 1
};
	if(Stark){
	rule(COLS,ROWS - Stark / y,foo(-0.41));
	betray()
};
	x -= 0.51 * COLS
}
def mislead(){
	if(TABLE[( ( 0.73 ) )][46]){

};
	Hodor *= 950.443
}
var y = destroy(COLS,Arya)
def foo(Arya,x,Sansa){
	bar(Ygritte)
}
assert COLS : "Winter is coming"
def TABLE[--ROWS - 350.6301][i] {

}
assert ( Jon ) / -TABLE[destroy(betray(( mislead(TABLE[( Ygritte )][betray(COLS)]) ),ROWS) + ---0.07,ROWS,betray(0.19,--1 + --x / mislead(-COLS,COLS * COLS),( -( 21 ) ) / ( 56 ) - x))][bar(( TABLE[-Ygritte + 1][ROWS] - mislead(0.74,betray(( x ),-Ygritte)) / TABLE[-Jon][-11] )) * ROWS] : "Nothing burns like the cold."
var y = bar(rule())
var Jon = COLS
def betray(Sansa,Arya,Jon){

}
assert x : "Winter is coming"
assert COLS : "Winter is coming"
def rule(Hodor,y){
	-1;
	( ( ROWS ) )
}
def protect(Jon){
	-y * ( ROWS );
	Sansa += -1
}
var Jon = -protect(-0.38,foo(-0.65),( COLS ))
def TABLE[-( 0.11 )][j] {
	dog *= ROWS / ( ( COLS ) ) + 29;
	dog *= -0.41
}
def betray(Stark,Jon,Jon){
	( Stark )
}
def rule(Jon){
	if(( --( -370.344 - 1 ) / ROWS )){

} else {
	TABLE[rule(( ( -foo(foo(Stark,-1 / Stark) + destroy(( --1 )),betray(dog,( COLS ))) ) ))][( COLS ) / --ROWS]
}
}
def TABLE[Sansa][i] {
	if(--940.46){
	dog
};
	( -0.25 )
}
def TABLE[-0.79][j] {

}
def betray(){
	x *= Arya
}
def foo(dog,Arya){
	y -= 0.97
}
var y = ROWS
def TABLE[-0.21 * ( TABLE[( protect(910.148,( -( --( COLS * Hodor ) / 91 ) )) )][( ( ( TABLE[-0.71][-0.73] ) ) )] )][i] {
	---( COLS );
	Stark *= --betray(ROWS,-72)
}
def TABLE[( -300.09 )][j] {
	if(-640.58){
	COLS
};
	if(mislead(( 150.3052 ) + ( ( ROWS ) ))){
	-x / TABLE[( COLS ) - --1 / -( ROWS + bar(( TABLE[protect()][--0.82] )) * -x )][( 0.28 )];
	if(bar(rule(rule()),mislead(Ygritte + COLS + -( ( ( TABLE[-destroy(Ygritte,TABLE[COLS][betray(COLS)] + -0.23)][destroy()] * Arya ) ) ) - ( -87 ),( TABLE[-620.3][-TABLE[( -1 ) / protect(( -( ( Stark ) ) ) / foo(Ygritte,0.52))][( -TABLE[( COLS )][mislead(-TABLE[( dog )][COLS],22 - -84,-71)] - -ROWS )]] ),rule(TABLE[-( -0.25 ) + -8][1],mislead(-Hodor,( ( y ) ) - -( -1 ) - COLS)))) / -mislead(Ygritte,180.23,( Stark )) + Hodor / ( ( ( betray(y,ROWS) ) ) ) - Arya){
	Arya *= Sansa;
	if(( Jon )){
	if(-( --rule(( y + ( mislead(x / ( betray(COLS) + ( Hodor / -930.68 ) ),TABLE[-betray(( -0.57 ),--betray(dog),ROWS) + rule(ROWS)][0.69]) ) / 0.95 ),foo(ROWS + -( destroy(( betray(x) ),-( 1 )) ) + Ygritte + Stark,foo(Stark) - ---0.1),TABLE[---COLS][( TABLE[y][ROWS] )]) * -790.76 )){

}
}
};
	x -= betray(x,COLS)
};
	if(-0.24){

} else {

}
}
def TABLE[-Sansa][i] {

}
def TABLE[( destroy(Arya,bar(protect(ROWS),420.89) / ( protect(-protect(-x,-0.31)) )) )][k] {
	dog /= ( COLS );
	Sansa += -( ( ---ROWS * foo(-Arya * mislead(TABLE[0.66][( betray(y,Hodor) )] * --910.432,( TABLE[destroy(( TABLE[( ( foo(y) ) ) / betray(ROWS,Stark) / Ygritte - ( -0.91 ) / -( -( Stark ) ) - Jon / -0.64][35] ) / COLS,dog)][Stark] ))) ) )
}
def TABLE[x + -ROWS][j] {
	-dog;
	( bar(y,0.73 + 69) ) * TABLE[( ( betray(1,Hodor,( -0.96 )) ) )][1] + x
}
def destroy(){
	if(Ygritte){
	-protect(-91,ROWS,--ROWS) - 0.42 * Hodor;
	1
};
	x -= Arya;
	-110.8583
}
assert ROWS * TABLE[COLS][-Stark / bar(bar(protect(Ygritte / -ROWS - rule(COLS,COLS,( 8 )) * -COLS - -mislead(),foo(-betray(Hodor) * -bar(-160.379) / betray(ROWS,ROWS) + -0.64,COLS),protect(-0.98 / -mislead(COLS,Jon,( ( ( ---( -ROWS ) / 98 ) ) ) / destroy(betray(-COLS) / -( TABLE[-( ROWS ) - TABLE[COLS][Jon]][COLS] ) + protect(protect(-y + foo()),Ygritte),betray(-foo(protect(dog,ROWS),Arya),( ( rule() ) ),Arya) / COLS)) + y,-1)),-0.48,( Sansa * ( ROWS ) )),destroy() + -betray(),0.22) * 16 + -0.69] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[foo()][k] {
	ROWS
}
def destroy(Arya,y){
	Sansa *= Jon
}
assert Ygritte : "Fear cuts deeper than swords."
def rule(Jon){
	-0.76
}
assert TABLE[TABLE[( -( -COLS ) )][0.44]][-bar(-Sansa,-44,( TABLE[foo(Sansa)][Hodor] * Stark ))] : "Winter is coming"
def TABLE[-dog][i] {
	if(dog){
	TABLE[rule()][( ( rule(TABLE[( destroy(-52,Ygritte) )][ROWS],Arya / -6) ) )];
	x += 420.53
} else {
	Jon -= ( -( ROWS ) / protect(( x ),ROWS) / TABLE[-( 1 / -0.18 ) - Sansa][( 620.1 ) * y] ) + Jon
}
}
assert Ygritte : "Nothing burns like the cold."
def TABLE[bar(1,-1)][j] {
	Ygritte -= Hodor;
	31 / -( y );
	if(foo()){

} else {
	( COLS )
}
}
assert 14 : "What do we say to the Lord of Death?"
def mislead(Ygritte,Jon){
	Arya += -COLS * Stark;
	if(-80){
	if(TABLE[COLS][Jon]){
	if(destroy(ROWS) / -58){
	if(( TABLE[1][-Sansa] )){

} else {

};
	Stark -= Stark;
	ROWS + Hodor - mislead(TABLE[0.91][Ygritte],destroy()) * COLS
} else {
	y -= 88;
	if(Sansa / ROWS){
	Sansa /= ( 0.48 * -( -Stark ) );
	COLS
};
	Arya += COLS
}
}
} else {
	Arya /= -ROWS
}
}
assert ROWS : "Fear cuts deeper than swords."
var Arya = --1
var Arya = ( COLS ) / protect(ROWS,protect(TABLE[destroy()][64])) + -500.3
def TABLE[mislead(( Ygritte ))][i] {
	if(ROWS){
	y += TABLE[27][mislead(( -1000.0237 ),mislead(Jon,Ygritte))]
};
	Hodor -= Stark
}
def mislead(Stark,y){
	-Jon;
	if(-foo(( -95 ),COLS)){
	if(--ROWS){
	69
} else {
	if(Arya){
	Hodor *= TABLE[( bar(rule(( destroy() ),TABLE[0.35][Sansa * COLS]),y / TABLE[rule(-0.94,--890.2 * protect(-mislead(-15 + ---0.3) * --y * destroy(betray(),TABLE[-Stark][ROWS + ( -( Ygritte ) )],-( COLS ) + COLS),-590.69,-( betray() )),-TABLE[Hodor * dog][66])][-1]) + ( mislead(TABLE[TABLE[--( rule(COLS) )][ROWS / 1]][-mislead(Sansa)],TABLE[bar(( bar(-17,TABLE[Stark + 1][-Hodor - Ygritte] - ROWS - mislead(bar(41)),TABLE[destroy()][( Sansa )]) / -protect(( bar() ),dog) ) + -protect(-54,Ygritte - 1 - ( mislead(mislead(Ygritte,betray(( 1 )),foo(Sansa))) )),bar())][COLS] + COLS) ) * -94 )][560.383]
} else {
	Stark += ( dog )
};
	if(-0.84){

}
}
} else {
	if(20){

} else {
	if(TABLE[65][-78]){
	-0.53
} else {
	( -Stark );
	if(-Hodor){
	x /= protect(Arya,20,rule(( Ygritte )));
	if(ROWS){
	if(-( y )){
	Sansa -= COLS;
	Hodor -= foo(( ( mislead() - mislead(COLS,( COLS )) * -1 ) ))
} else {
	( -1 - foo(( 1 )) ) + Arya
};
	--mislead(-11) - COLS;
	x += --dog / betray(( -38 ))
} else {
	Sansa += ( TABLE[0.15][--y / betray(dog)] )
}
} else {
	-( ( ( 0.64 ) ) )
}
}
};
	( -( Hodor ) ) / rule(Hodor,mislead());
	if(rule()){

} else {
	if(dog){
	if(betray(( ( ( destroy(bar(COLS),0.22) ) ) ))){
	if(21){
	-22;
	x -= mislead(COLS + 55,ROWS)
} else {

};
	y /= -( --1 )
} else {
	-y;
	if(-0.12){
	if(( ( --TABLE[Ygritte][Jon] ) )){
	if(mislead(COLS)){
	Sansa /= -betray(Stark);
	( ( TABLE[protect(dog)][protect(dog,( destroy(-TABLE[TABLE[Ygritte][mislead(--1,( 0.12 + foo(x) * mislead() )) / Jon]][betray(COLS,( ( -ROWS ) ))],-1,( Hodor ) / TABLE[( Jon )][Ygritte]) - 540.41 * ( dog ) ))] ) )
} else {
	if(( -betray(( foo(TABLE[-( COLS )][1]) )) ) + mislead(TABLE[-860.938][Arya * betray()],Stark)){
	Hodor *= Ygritte;
	betray(ROWS);
	Stark -= -COLS - y
};
	dog += -330.667;
	x *= -dog
}
} else {
	-( -Jon + foo(-dog,Hodor,( 0.3 )) );
	if(y){
	Stark /= ( ( ( 59 ) ) );
	( ROWS );
	-0.39
}
};
	Stark *= -0.24;
	x -= ( TABLE[830.43][dog] )
}
};
	----protect(rule() * bar(mislead(rule(180.98)),( 540.64 )) + --foo(( ( destroy(ROWS,250.8,foo(-( ( -99 ) ),COLS,ROWS)) ) ),ROWS / TABLE[Sansa][( -ROWS ) + 68] - mislead(Jon,ROWS) - ROWS) - 13,ROWS)
} else {
	if(foo(( betray(ROWS,protect(betray(COLS,ROWS),( ( -22 ) - ROWS ))) ))){
	foo(Arya,Stark)
}
}
}
};
	Arya *= Stark - -0.01
}
assert ( y + -Sansa * TABLE[ROWS][COLS] ) : "What do we say to the Lord of Death?"
def rule(Ygritte,Hodor,y){
	if(ROWS){
	Stark /= Arya * COLS
}
}
assert --22 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-38][k] {
	if(TABLE[ROWS][mislead(ROWS)]){
	Stark += x;
	if(TABLE[destroy(-TABLE[x][0.48] - Stark * Ygritte,mislead(( 0.8 ))) + ROWS][( ( Sansa ) )]){
	y += -Arya;
	Stark *= -ROWS - ( 1 );
	if(destroy(0.66,TABLE[TABLE[Stark][ROWS]][destroy(-( dog ),-1)])){
	Arya -= TABLE[destroy()][-0.5];
	protect(TABLE[0.28][x]) + Ygritte
} else {

}
} else {
	foo();
	if(-28){
	( -12 ) + -0.67;
	if(Hodor){
	Jon += x;
	Arya += -( ( TABLE[640.66][-TABLE[-0.44][--1 / -1 * -0.31 + ( COLS )]] ) );
	Hodor -= TABLE[Sansa][COLS]
} else {
	if(destroy(COLS,ROWS)){
	Jon -= Ygritte;
	mislead(Arya,-y,630.98);
	Jon /= rule(( -TABLE[Hodor][foo(( x * -( COLS ) ),( -bar(0.96) ),-dog)] ),COLS,-Arya)
} else {
	if(( ( ( -ROWS ) - 83 ) )){
	mislead(ROWS);
	x += ROWS
};
	Arya *= x
}
};
	if(TABLE[COLS * Ygritte + betray(-49,( ---51 - ( foo() ) ),( -62 )) - 0.91][Sansa]){
	if(COLS){

};
	Hodor *= betray(x,protect() * x)
}
} else {
	-( -930.774 )
}
}
}
}
var dog = destroy(ROWS,mislead(--0.82,-ROWS))
def TABLE[( COLS )][k] {
	if(TABLE[( 0.69 )][Stark]){

} else {
	Jon *= x
};
	x -= ROWS
}
assert Arya : "One can not simply parse himself"
def TABLE[y][k] {
	COLS * foo(TABLE[-10 / ( rule() + ( TABLE[COLS][x] ) ) * COLS][( TABLE[rule(COLS,TABLE[( ( ROWS ) )][( rule(Sansa,( ( ROWS / -0.15 ) )) )]) - Ygritte][( ( Ygritte ) )] )])
}
var Jon = 230.871
assert ( COLS ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = -30.9
assert ROWS : "Nothing burns like the cold."
var Stark = 68
def TABLE[0.83 - COLS + COLS][i] {

}
assert Arya : "Fear cuts deeper than swords."
assert ( TABLE[Sansa][y] ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[0.2 + Arya - 65][k] {
	x += ( -Arya );
	( 0.53 )
}
assert foo(foo(y,( -29 ))) : "What do we say to the Lord of Death?"
def TABLE[-39][i] {
	y -= bar(Sansa,-x,dog);
	Ygritte += protect() / protect(( ( -destroy(( -1 ),Ygritte / -TABLE[-Ygritte][rule(foo(),COLS,0.91)]) ) / dog - TABLE[1 + TABLE[-810.276][y + --Stark]][( COLS )] ),foo(),-48 + ROWS) + Ygritte
}
def betray(dog,Sansa,Jon){
	COLS
}
def TABLE[-( -68 )][k] {
	-( TABLE[-dog][mislead()] )
}
assert --TABLE[mislead(37)][-0.48] : "Nothing burns like the cold."
var Hodor = ( ( ( ( Sansa * ROWS ) ) ) )
def TABLE[Jon][k] {
	if(COLS){
	Hodor += bar(foo(),COLS,dog)
};
	if(Stark){
	-rule(x);
	Stark /= COLS / foo(( -Ygritte ),-280.5 * -( ROWS ),0.33)
}
}
var Sansa = -1
def TABLE[Stark][j] {

}
def foo(){

}
def rule(){
	Jon *= ---destroy(-46,( TABLE[-dog / 0.19 + -72][-740.321] )) + ( ROWS );
	( y )
}
assert betray(TABLE[( mislead() )][( -( 0.01 ) )]) : "Winter is coming"
assert -betray(0.32) + --dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(){
	Sansa *= Hodor / ( betray(( -( TABLE[COLS][foo(Ygritte,TABLE[ROWS][Stark])] ) ) * ( rule(( ( -0.22 ) ) * ROWS,( destroy() )) ),1) )
}
var y = ( -23 + ( ( betray(TABLE[( protect(TABLE[COLS][--( ( -ROWS ) ) + ( COLS )]) )][56],-420.176) ) ) )
def rule(y,dog){
	Sansa += COLS;
	-0.93
}
assert -1 : "One can not simply parse himself"
def bar(Ygritte){
	( 500.94 );
	if(33){
	if(( destroy() * ( ( 560.23 ) ) * ROWS )){
	dog -= Arya
} else {
	if(-TABLE[( -Arya )][TABLE[0.21][( betray(( ( destroy(-Arya - --0.09 + Jon,( -mislead(Hodor,( Arya )) ),-67) ) )) )]]){

};
	if(TABLE[-1][( destroy() )]){
	Ygritte *= destroy(1);
	dog -= 0.85 + ( rule() ) + ROWS
} else {
	Ygritte /= rule(-0.14 * --340.57 - -( --1 ),protect(-1,( -130.299 )))
}
};
	-300.1
}
}
def TABLE[protect()][i] {

}
assert dog : "What do we say to the Lord of Death?"
assert mislead() : "Nothing burns like the cold."
def TABLE[Arya][j] {
	if(foo(Stark,-0.9,( betray(( -1 ),-y - mislead(mislead(-1,foo(ROWS)),( --TABLE[83][( 44 )] + rule() + protect(y,Ygritte) )) - foo(-y * -( 1 ) - ( -0.11 ) / ( ( ( -2 + Arya ) ) ) / -260.3,protect(98 - y,( -dog )),( --ROWS / 140.9386 + ( betray(700.1917,bar(( ( ( ( ( Hodor ) ) ) + -betray(-( Stark ) - 870.031 / destroy(foo(( ( -Arya ) ) - TABLE[ROWS / -2 / -( -( ( Ygritte ) * bar(( Stark * ( mislead(Arya,betray(ROWS)) ) ),-Jon + foo() * foo() * Arya) - -mislead() ) ) - -mislead(COLS,( -TABLE[bar(( -1 ))][x] ),bar(-390.46,TABLE[rule(Hodor)][ROWS - protect(( Jon - destroy(1,COLS,( y )) ),( -mislead(( TABLE[Arya][rule(rule(( dog )),( ( ( -770.56 ) ) ))] ),-y) ))]))][-destroy(200.6)],TABLE[betray(570.534,TABLE[( ( x ) )][COLS / COLS + 3])][---0.09],45)),mislead(TABLE[TABLE[ROWS][destroy(betray(ROWS),-540.62)]][( TABLE[-( -dog )][( Hodor )] )])) * Stark * -TABLE[y][COLS] + -rule() + -( rule(destroy(( COLS ),TABLE[betray(destroy(-0.33),ROWS)][1]),-1) ) ) ),mislead(-ROWS))) ) + destroy(Ygritte) )) * destroy(( COLS )) + dog,Stark) ))){
	x -= foo(-dog,Hodor);
	-70.64;
	if(-430.51){
	ROWS;
	Arya /= --ROWS * ROWS / -COLS + 0.3;
	if(( ( ( TABLE[0.18][Arya] ) ) )){
	if(Hodor){
	protect(TABLE[-0.34][( ROWS )])
} else {
	if(Sansa){

};
	if(-( ROWS )){

} else {
	if(140.69){
	foo();
	( COLS );
	dog *= ROWS
}
};
	-foo(y,Arya,( rule(0.48,88,foo(COLS) / destroy(ROWS,bar(foo(TABLE[y][destroy(Stark) * -4]),( Hodor ),( destroy(0.07) )))) )) - dog
};
	if(TABLE[---protect(-0.32) - 61][COLS]){
	if(( -0.34 )){
	if(destroy(( protect(-destroy(ROWS,-0.7)) ))){
	betray(protect(-39,( ROWS )));
	Sansa
} else {
	Ygritte /= bar(--foo(),ROWS,-Jon);
	-( TABLE[( -0.09 * TABLE[-42 * dog][Ygritte] - ( 0.77 + x ) )][destroy(-( ROWS ))] ) - -x;
	-rule(y * ( Ygritte ),Arya * -54 / betray(Hodor,bar(-96,( ROWS ))))
};
	670.5
} else {

};
	destroy(TABLE[1][destroy(mislead(TABLE[betray(-400.075)][TABLE[TABLE[x][-610.37] - ( foo(dog,COLS / foo()) )][( foo() )]],ROWS * ( bar(-85,Arya) )),foo(( ( destroy(-( ( protect(TABLE[-mislead(foo(-Stark),-0.81) - -0.86 + --COLS][-25],TABLE[0.88][ROWS + foo(Ygritte,ROWS)],foo(destroy(),COLS)) ) ) / --22) ) ),betray(-69),-ROWS),ROWS) / protect(-0.62,-y)],-Hodor)
}
} else {
	Sansa *= ( 0.38 );
	30.7
}
} else {
	-1
}
} else {

};
	Jon *= -TABLE[( -770.52 )][( dog )] * ( -COLS );
	foo(-84)
}
def protect(Hodor,Jon,y){
	if(( ( TABLE[-57][-( foo(Jon,1 / --foo(TABLE[betray(( --Stark ) * -Hodor + Jon,( 720.27 ))][-( ( betray() ) ) * COLS],foo(-0.6 / dog,--1))) )] ) )){
	( ( Hodor ) * 0.51 )
};
	protect(Ygritte,y)
}
def TABLE[-35 + ( rule(-1,TABLE[( -0.33 ) / --betray(TABLE[92][-TABLE[COLS][( ( ( ( ( ROWS ) ) ) ) )]],-0.98 / --Arya / -43,( foo() ))][Jon]) * 94 ) + 1][k] {
	Sansa += foo(( COLS ),foo(ROWS,( 29 + dog ),TABLE[betray(protect() / betray(TABLE[-0.81][Sansa],0.36) / -0.16 - ( destroy(ROWS,( ROWS ),( -0.47 + ROWS * protect(betray(destroy(-420.14,-0.11),y,-42) / TABLE[ROWS][( destroy() )],Hodor) )) ) * -y / ROWS - --mislead(protect(( ROWS / --920.9198 / x ))) * -( 30.7 ) - -71 - ( x ),--67)][dog * --50 / Sansa] + Stark))
}
assert ( TABLE[destroy(COLS,( ---rule(( -74 + ( COLS ) )) ),--( ROWS ))][0.78 / -( rule(Ygritte) ) + TABLE[--93][Ygritte]] ) : "One can not simply parse himself"
var Jon = -0.97
def TABLE[( -( -COLS ) * rule(-1 / rule(Sansa,TABLE[( ( TABLE[-Arya][mislead(1,( 0.03 )) / x] ) + -43 + ( ( ( Arya ) ) ) ) + Hodor][mislead()],ROWS),--ROWS) ) - Jon][i] {
	Sansa;
	Ygritte += COLS / betray(COLS)
}
def rule(x){
	ROWS;
	dog
}
def rule(x,dog){
	if(---COLS){
	-46
};
	Ygritte += Ygritte;
	y -= ( Stark )
}
assert betray(--850.75 * Ygritte,( COLS ),-rule(-0.65) / --( betray(( -bar(( COLS ),TABLE[bar()][Stark]) )) )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -Sansa : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = Jon
def protect(Hodor){
	Hodor -= Arya
}
assert --44 / -77 / -62 : "Winter is coming"
def TABLE[COLS - -790.01][k] {
	bar(COLS)
}
def TABLE[COLS][i] {
	--4
}
assert -74 : "Nothing burns like the cold."
assert ( x ) : "Nothing burns like the cold."
var dog = COLS
def rule(){
	if(mislead(-530.69,-0.04,y)){

};
	Stark -= foo()
}
var Ygritte = --TABLE[betray(( betray(( ( dog ) + rule(betray(( -foo() ) * -430.486 - ---( 1 ),x - TABLE[COLS][ROWS])) )) ),dog)][x]
def TABLE[TABLE[( 1 )][COLS]][j] {
	Hodor -= -23;
	Stark += betray(-0.56,mislead());
	-COLS
}
assert 0.39 : "One can not simply parse himself"
def protect(){

}
var dog = -betray(Sansa,50) + Ygritte / ----ROWS
assert x * -destroy(-ROWS) : "Winter is coming"
def TABLE[x][i] {
	Arya *= --0.94;
	if(foo(TABLE[-96][--820.967 * -0.8 / betray(17 * dog + -840.07,Arya)],Stark) - ROWS + TABLE[( rule(-0.89,54) ) / -50 * -46][-0.18]){
	Arya -= foo(-( ( TABLE[0.65][-1] ) ) - destroy(--COLS) / 1,-( -( ( ( Stark ) ) ) ) - y / TABLE[( 57 )][Arya / --betray(-TABLE[-Sansa][( -50 )],TABLE[ROWS][rule(betray(ROWS))],11)] - ROWS)
}
}
assert ( --y ) : "Winter is coming"
assert ( -betray(COLS) ) : "What do we say to the Lord of Death?"
assert COLS : "Winter is coming"
def destroy(x){
	if(Arya){
	Sansa /= TABLE[rule(-COLS,mislead(( 0.37 )),-COLS) - -( betray(( Ygritte ),Stark,protect(0.27)) ) + y][--protect(-( -720.68 ),y)] - ( -ROWS ) * -ROWS
};
	if(betray(-COLS)){

} else {

};
	( -1 )
}
def TABLE[-betray(( -( ( 1 ) * -TABLE[ROWS / -Ygritte][betray(bar(( TABLE[dog][( TABLE[-1][protect(0.13) - protect(rule(( ( -Stark ) )),rule(Stark),( -54 ))] + ( -530.136 ) )] ) + ROWS))] ) ),ROWS)][i] {
	-destroy(bar(ROWS)) * dog / -( TABLE[--( Sansa ) + Sansa + ROWS + Sansa][( dog )] );
	if(Hodor){
	dog += ( mislead(1) )
};
	Hodor -= -Jon + COLS
}
var Stark = --0.7 - TABLE[betray(( Sansa ))][-( ROWS )]
var Arya = 1
def bar(Jon,x,Hodor){
	if(Stark){
	( rule(-COLS,Jon,-81) )
};
	( mislead(COLS - ( Hodor ),dog) )
}
assert destroy() : "Winter is coming"
def protect(){
	if(x){
	if(--COLS / TABLE[-( foo(-1 * foo(-TABLE[protect()][TABLE[mislead(-COLS,( -COLS ))][TABLE[ROWS][( -TABLE[1][TABLE[-Sansa - -rule(-1) - 0.11][( 0.12 )]] / ( Sansa ) + -230.83 )]]] / --0.61 * ( -TABLE[-protect(foo(),-0.1,0.29)][x] ),-dog) * -( COLS ) - -( ( ( bar() ) ) ),1,( ( ( foo(-( ROWS ),( dog )) ) ) )) )][( ( protect(-1) ) )]){
	x += ( TABLE[-x + TABLE[TABLE[-TABLE[ROWS][foo(-1)]][-( destroy(-COLS,bar()) ) + Hodor / rule(( dog ) * Arya)] * betray(--0.53,COLS)][--0.42]][foo(( ROWS ))] )
} else {
	y *= bar(--protect(-1 * -1 * ( bar() ),ROWS),Hodor);
	( ( 0.53 ) - ( -81 - 1 ) )
}
} else {

}
}
def mislead(y){
	Jon /= bar(0.74 * 63,-60);
	y *= betray() - ROWS * 1 - -440.09 + TABLE[foo(ROWS,-27,40)][( Ygritte )]
}
assert -betray(-30,ROWS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = -x
def bar(Sansa,x,dog){
	bar(-mislead(( Arya / COLS ),-mislead(),TABLE[dog][mislead(destroy(-23,Stark,betray(( -ROWS * Jon - -Sansa ) / betray(protect(-dog / ROWS,---( ( Ygritte ) ) * protect(-( ( TABLE[( -1 )][destroy(TABLE[( 95 ) * ( mislead(COLS) )][( ( rule(( x + ROWS )) * ---0.8 ) )] + Hodor,Arya)] ) * x ))),destroy(-680.177,( Hodor + -70 ))))) / -destroy(-( --1 ),99),mislead(dog,--1))]) / bar(-280.1,dog,--( -( ( bar(--640.04,Stark - TABLE[protect(-ROWS / destroy(160.89 / -1 + ( -ROWS ),destroy(mislead(( ( 31 ) ) * rule(-foo(TABLE[TABLE[ROWS][( ( -Arya ) )] - ( Arya )][ROWS],Stark),ROWS,-0.41),ROWS / ( bar(( -910.54 ),TABLE[destroy()][( ( -14 ) )]) )),rule(0.69))) / Arya / -TABLE[0.2][Arya + --Jon * TABLE[rule(61)][rule() * y]] * Sansa,ROWS,-( ( 200.19 - ROWS ) ) + ROWS)][Stark] * 0.16 * -protect(-0.48,-90) * ( -rule() ) - betray(-840.8,bar(--( TABLE[y][-67 - ( Sansa )] ))) + 58) ) ) - rule() ) / -( -Jon ) * --0.79 * Stark) - ( -150 ) / Sansa,( 1 ),( 0.46 )) * ---1 / Hodor / COLS
}
var Ygritte = TABLE[-Ygritte][( TABLE[-TABLE[( -1 )][--0.21]][-1] )]
def mislead(Ygritte,Hodor){
	if(y){
	if(ROWS){
	Arya /= --8 - 74;
	if(-TABLE[ROWS][ROWS - --COLS]){
	if(--Jon){
	if(bar(bar(protect(COLS,( --y - --( TABLE[COLS][betray(0.88,-54)] ) - -34 / ROWS )))) - -0.95 - ( ---( -TABLE[( -TABLE[( ( 76 ) / Hodor )][30] )][mislead(destroy(mislead(),( Stark ),( 840.896 + y )))] * COLS ) )){
	( y ) * ( -Sansa );
	( 0.37 );
	dog *= -0.28
};
	if(TABLE[ROWS][0.75]){
	if(Ygritte){
	if(ROWS){
	if(0.3){
	-betray(foo(Ygritte,protect(TABLE[COLS][COLS],( mislead(0.86) + betray(Stark) )),COLS)) / ( ( foo(( destroy(bar(TABLE[24 / COLS - 0.58 - -ROWS / -Hodor * ( rule() / -60 )][ROWS] + -55,-98,ROWS)) ),x / ROWS) ) * COLS );
	-440.94
} else {
	Ygritte += -2
}
}
};
	if(-0.9){
	0.44;
	TABLE[Jon][COLS] + ROWS;
	COLS
} else {
	x *= bar(-1,-720.88,Arya)
}
}
};
	if(mislead(ROWS,Hodor,TABLE[( -Stark )][rule(Arya,ROWS)])){
	if(-( ( ( Hodor ) ) )){
	Hodor += protect();
	( -Arya );
	-destroy(--660.155)
} else {
	Hodor *= TABLE[( dog )][-ROWS + COLS + Sansa + Arya]
}
}
} else {
	if(( COLS + ( mislead(-( x ),-51) ) + --1 )){
	if(x){
	dog -= rule(Jon,-0.22) + ( ( betray(( 41 )) ) );
	betray(mislead(( bar() )))
};
	if(-410.24){
	Stark /= rule(bar(( ROWS ),( -1 ) + bar()) * ( -0.21 ),COLS / foo(-0.43,x,-dog) + Stark,Sansa);
	Sansa /= protect(x,-0.62,destroy(-710.812 + -rule(-( betray(protect(COLS,0.52) * Hodor - mislead(protect(-----Arya - -COLS,Hodor - ( foo(mislead(-210.12)) )) + ( -82 ),rule(y,-Arya)),Arya) ),TABLE[( ROWS )][Sansa],mislead()) + -1,dog,( ( -320.1 ) / COLS )))
}
} else {
	if(Arya * Stark / -29 - -0.51){
	Jon *= ROWS;
	if(-( ( -Ygritte ) )){
	Hodor += mislead(x - foo(-Jon,( -220.69 ) * COLS * betray(-TABLE[( TABLE[-foo(betray(--ROWS * protect(Stark,rule(-( ( 0.45 ) ) * COLS,COLS,Sansa)))) + 0.88][--ROWS] )][( -TABLE[bar(y + COLS,Stark)][( -85 )] ) + ROWS] - bar(COLS,( 68 ))) - -0.59),( ROWS ),0.6);
	if(-41){
	-foo() * foo()
} else {

};
	Jon += ( 0.36 )
};
	if(protect(-COLS,-( protect(( -900.54 )) ) - COLS) / protect()){
	if(-destroy(Ygritte)){
	Stark += -( -0.55 );
	if(-( --( COLS ) )){
	-550.219;
	x *= betray(( bar(betray(-52,bar(-Sansa)),-0.97) ),--protect(rule(ROWS * rule())),-1)
} else {
	if(-72){
	if(TABLE[COLS][-ROWS / destroy(-foo(0.78,Arya)) + -( protect(( betray(destroy(-( 450.519 ),Jon,370.09)) ),destroy()) )]){

} else {
	-1 - Sansa;
	x += foo(-foo(( ( ( -1 ) ) ),Jon));
	Stark /= -1
};
	if(52){
	( betray(betray(---0.59,betray(-( 59 ),mislead() - ( Sansa / ( y ) + -( 990.6 ) ))) / TABLE[-COLS][y],TABLE[destroy(protect(),betray(-( 0.77 * -Stark ),foo(ROWS,bar(Hodor,( -170.6308 + ( -0.22 ) )))))][TABLE[( 1 )][-( ( ( ( -COLS - -COLS ) ) ) * ROWS ) / foo(( ( COLS ) ))]]) );
	if(( foo(Ygritte) )){

};
	if(( COLS )){
	Jon -= ROWS;
	if(Arya / TABLE[y][COLS]){
	if(1){
	if(Jon){
	640.0472;
	if(0.06){
	if(( COLS )){
	if(( -y * Sansa )){

}
};
	Ygritte /= TABLE[bar(1)][betray(--TABLE[( ( -ROWS ) )][TABLE[y][0.37]] * bar(foo(-TABLE[TABLE[( foo() - ( -300.749 ) * ( -18 ) )][protect(x)]][COLS] * ( 1 ),Stark,( destroy() )))) - ( TABLE[-54 + Ygritte / ( ( ( bar(-61,-73) ) ) )][y] ) - x];
	if(mislead(-----1 * -TABLE[Jon][( Arya )],( TABLE[-Jon + ( -610.94 ) * bar(-ROWS) + Ygritte][-1000.248] ) + -0.25)){
	if(( Ygritte )){
	if(dog){
	if(Arya){
	if(-13){
	x *= TABLE[-1][mislead(ROWS)]
} else {
	if(Ygritte){
	if(bar(ROWS,13,-ROWS) / 730.222){
	Jon;
	0.25
} else {

}
};
	( 17 );
	x += COLS
};
	Stark /= ROWS
}
}
} else {
	if(COLS){

};
	-x
}
} else {
	Sansa *= foo();
	if(COLS * 0.57){
	if(( ( --x - -Hodor ) )){
	-TABLE[-0.42][betray(-0.9,Stark)];
	Sansa -= ( ( COLS ) )
} else {

}
}
}
}
} else {

};
	if(foo(--protect(TABLE[-0.4][0.52],x,--660.581),( mislead(----COLS / ( -Sansa ) / protect() - ( ( 910.7808 ) ),( TABLE[---TABLE[ROWS][betray(( rule() ),betray())] - 1][( -foo(--mislead(0.05,--74 / -0.69,rule(--35)),bar(-TABLE[( ( --( COLS ) / ( TABLE[TABLE[TABLE[betray(0.94 - ( ( TABLE[ROWS][rule(( protect(y / ( bar() ) + Hodor / 0.63,TABLE[-COLS * 95][foo(( ( ROWS ) ),--28 / TABLE[TABLE[1 + y][rule(rule(dog))]][ROWS - COLS],-foo(-1,( ROWS )))]) ),mislead(0.09,ROWS))] ) ))][TABLE[ROWS][dog / -860.73]]][ROWS]][--Ygritte / -dog] ) ) )][Ygritte] * 0.69,TABLE[rule(( ( bar(34,( foo() )) ) ),-27)][dog]),ROWS) )] ),-dog * -1) ),ROWS)){
	if(( foo(-0.92,TABLE[destroy(-0.69,( Ygritte ))][betray(-ROWS,protect(( Arya ),( ( 1 ) )))]) )){
	0.05;
	TABLE[ROWS][50]
};
	rule(ROWS,-990,protect(( ( -COLS ) ),-y)) * COLS / -0.71;
	if(Jon){
	Jon += ROWS;
	Ygritte += mislead(destroy(-0.26) * Sansa,ROWS)
}
}
};
	ROWS;
	dog
};
	if(ROWS - TABLE[31][( -COLS )]){
	if(Hodor){
	if(mislead(69,( TABLE[--( x )][( -foo(COLS) )] ),Ygritte * dog - -COLS)){

};
	Arya -= bar(-bar(),COLS,TABLE[-( ROWS )][( dog ) - 880.9138 + 49]);
	TABLE[-0.99 * Jon][-foo(-( x ),( ( betray() ) ))] + ( TABLE[( Ygritte ) + TABLE[Sansa][-1 - ( --0.22 ) + ( TABLE[-0.49][-y * TABLE[-COLS - -dog][0.14]] ) + 140.555]][Jon] )
}
} else {
	Sansa += 1
}
}
} else {
	if(Arya){

} else {
	Hodor -= TABLE[Arya][Arya];
	Sansa *= 14
};
	y -= Sansa
};
	destroy()
};
	Arya;
	-1
}
} else {
	if(foo(0.39,Jon,foo(Ygritte,( dog )))){
	if(Sansa){
	Stark -= -COLS + Hodor - ( TABLE[x * --Ygritte][destroy(-mislead(Jon))] ) / ( rule(( ( ( --( 66 ) ) ) ) + --( 0.92 )) );
	Arya += ( ( betray() ) );
	Hodor += dog
}
}
};
	1
} else {
	y /= -destroy(-60 * -( COLS ),-TABLE[Stark][0 - TABLE[( ( dog / ( --ROWS ) / ROWS / ( Sansa ) ) ) * ( Jon ) - rule(protect(TABLE[-( -1 - bar(TABLE[Hodor - mislead(-1,TABLE[x][Jon + ( 0.17 )])][Sansa],--betray() * -betray(TABLE[ROWS][Ygritte],( -x )) - rule(),-Arya + x) )][( -940.89 - Hodor )]),Ygritte) - -TABLE[( ( 0.97 ) )][foo(destroy(TABLE[dog][TABLE[TABLE[( ( x / ( ROWS ) ) )][-1 + 1]][0.67 / dog + destroy(( -betray() ),1,bar(( bar(-COLS,-( foo(protect(-ROWS,1)) )) / betray(y) )))] + Arya - bar(-mislead(),( Ygritte ),dog) - -( Stark )]),-93,mislead(destroy(Ygritte,--490.163),dog))] - COLS][rule(bar(( ( ( ( ( --0.44 ) ) ) ) )))]]) / COLS;
	Ygritte
}
};
	Sansa += 23;
	if(0.39){
	Sansa;
	y -= COLS
} else {
	x -= -68 / -68;
	Arya /= protect(42,bar(81,---protect(( Stark + ( -bar(Sansa) ) ),ROWS / protect(Ygritte))))
}
}
}
} else {

};
	dog += -890.435
} else {
	( -COLS );
	Hodor /= ( COLS ) - y
};
	if(97){
	Hodor;
	-ROWS
}
}
def protect(Stark){
	if(bar(ROWS,ROWS * -Ygritte + TABLE[( y )][TABLE[betray(destroy(-63,0.15,Stark / -0.41 + ( -rule() ) - ( -1 )))][dog]])){
	Arya;
	if(protect()){
	if(x){

};
	dog /= ROWS
} else {
	-Arya / rule(( COLS ),-1 - destroy(-COLS)) - -48;
	if(-620.3 / destroy(Sansa)){
	Arya * Hodor;
	y /= TABLE[-0.26][destroy()]
}
};
	if(COLS){
	if(31 + Arya){

}
} else {
	-TABLE[-96 / -betray() * TABLE[y][( foo(-0.36 - ( dog ),mislead()) )]][( -0.13 )];
	if(x){
	Sansa -= betray()
};
	--TABLE[( ( 99 ) / Ygritte )][mislead()]
}
} else {
	Jon += mislead(TABLE[COLS * ROWS][x]);
	if(protect(( ( ROWS ) - betray(-82) ))){
	y += bar(Arya,foo(Arya),TABLE[y][mislead(destroy(-16))])
} else {
	bar(TABLE[rule(TABLE[Arya * TABLE[75 - Hodor][-TABLE[-ROWS][Arya] * Hodor]][foo(bar(-140.3677) * -( ROWS ) * -bar(--protect(mislead(destroy(ROWS,( betray(Arya) ),Ygritte))),72) * 0.61 * Jon,betray(Arya,-420.1304,( ( Hodor ) / ( --TABLE[Sansa][0.17] / TABLE[dog][x] * y + Hodor ) )) / ( -80 ),-Ygritte + rule(Sansa,-Sansa - COLS / ( ( rule(x,COLS) ) ),( --350.632 )))],( -y ))][( TABLE[-foo(dog,ROWS,ROWS)][( TABLE[--( -mislead(( ( ( ( TABLE[COLS][-0.81] ) ) ) )) )][-( x )] )] )],( mislead(71) ),-Sansa);
	if(-91){
	( dog * ( -betray(55,dog * 90 + ( ( -37 ) / -1 )) - ( betray() ) ) );
	( -1 )
} else {

}
}
};
	Arya += ( ( TABLE[-rule()][TABLE[---46][( 0.24 )]] ) * TABLE[Arya][mislead(-mislead())] ) * ROWS;
	Ygritte += Ygritte
}
def TABLE[-COLS + Hodor][i] {

}
assert rule(( y ),-0.09) : "One can not simply parse himself"
def TABLE[protect(-Arya + dog,ROWS,y) * -390.199][i] {
	x += betray(-( ROWS )) + COLS;
	Jon -= -( -40 + ROWS )
}
var y = TABLE[-0.49][TABLE[--y][( COLS )]]
def TABLE[Hodor][i] {
	Arya *= mislead(Arya,-rule(-protect(destroy(protect(rule()),( ( -rule(( Sansa ),Stark) ) ),destroy(-83 / 14,-destroy(0.31,ROWS)))),TABLE[( -betray(ROWS,x) )][-0.14 * Sansa]),( -Arya * ( -0.7 ) ) * Stark)
}
def TABLE[( ROWS ) * -35][j] {
	Arya -= ( betray(Stark,dog) );
	x -= ( destroy() )
}
var Ygritte = protect(( mislead(-510.16) ))
def TABLE[ROWS][i] {

}
assert rule(( ( ( destroy(Stark,-Jon) ) ) ),-mislead(),protect(--0.26)) : "Nothing burns like the cold."
def foo(Stark,dog){

}
def bar(dog,Stark){
	Ygritte -= -35
}
var Hodor = 14
var Hodor = 920.9253 - -foo(( Stark - ( 0.35 ) )) / COLS
def TABLE[-COLS][k] {
	-protect(Jon)
}
var y = TABLE[rule(Stark)][( rule() )]
def betray(dog){
	y -= -( bar() )
}
def betray(){
	if(( Sansa )){
	mislead(-ROWS)
} else {
	if(-0.69){
	Sansa *= -y
} else {
	if(dog){
	( ( 0.76 ) / TABLE[-1][( -1 ) + -foo()] / y );
	-TABLE[-ROWS][( Arya )]
} else {
	Hodor *= protect(ROWS)
}
};
	if(( 11 )){
	ROWS * COLS
} else {
	if(( 0.47 - ( -protect(-dog * COLS + -120.7679) + 360.221 - betray(TABLE[-( Sansa )][Jon]) - -( destroy(betray(-ROWS - ( TABLE[-( ( protect(betray(bar(-COLS * 1 + bar(),( x )))) ) )][COLS] + ROWS ),-0.5)) ) - y ) + COLS )){
	Ygritte *= 87 / 100.27 - -ROWS;
	if(( COLS )){
	dog /= -dog;
	if(( Jon ) * mislead(y,46)){
	Jon;
	0.93
}
};
	Stark /= ( -0.2 - COLS )
} else {
	rule();
	Arya -= -0.8;
	Hodor -= Sansa
};
	if(betray(( ROWS ))){
	if(( --( -0.86 ) + ( bar(ROWS) / TABLE[( -ROWS )][-0.94] ) )){

} else {
	if(COLS){
	( ( 1 ) );
	if(----( -130.227 )){
	if(-( -COLS - -( -( -protect() ) ) )){
	1 / ----310.3
} else {
	Jon /= mislead(-0.74 + destroy(Stark,--destroy(-destroy(( 110.76 ),mislead(-( -foo(Sansa) / COLS ),--600.701 + betray(COLS,foo(( -COLS )) + ( ( ( mislead(x) ) ) ))) - ROWS),( 61 ),-840.163)),-73 / ROWS) * ( Arya );
	if(--1){
	if(rule(Sansa)){
	Arya;
	if(--0.7){
	if(---bar() - Sansa){
	( ( -Hodor * rule(dog,( x ),ROWS) / TABLE[-210.76][foo()] ) )
}
};
	if(Arya / destroy(-10,Sansa)){
	0.83
}
} else {
	Hodor -= -0.54 * TABLE[TABLE[--34][---( Ygritte ) * COLS + -20]][-destroy(ROWS,( ROWS )) - Hodor];
	if(x - dog){

} else {
	dog /= TABLE[COLS][-( ( TABLE[-ROWS][TABLE[( -1 )][-( foo(( dog ),( 0.63 * protect(-1) ) / dog * ---y + TABLE[mislead(-1)][dog]) + -1 )]] ) )] + ROWS;
	Sansa /= Sansa
}
};
	y /= -x
}
}
} else {

};
	TABLE[-betray(Hodor,Stark)][-1]
} else {
	if(protect(50.059,7) + foo(830.92,--42,ROWS * ROWS)){
	1 * 36;
	if(y){
	( ( 89 ) );
	-ROWS;
	dog += -ROWS - 1
}
};
	y /= ( 390.07 * x ) / Ygritte
};
	--y * TABLE[--betray() * ( TABLE[-22][COLS] )][( -10 ) - ROWS]
};
	if(-Hodor + -0.12){
	foo(mislead(foo(ROWS,dog),ROWS,TABLE[( TABLE[( ( Sansa ) )][-protect(TABLE[( rule(-670.7 + Arya,destroy(TABLE[dog][betray(ROWS,-( -mislead(protect(-10),protect(--95)) ))])) )][foo(ROWS,TABLE[( Ygritte )][( TABLE[Jon][ROWS * Hodor] )])]) - 1 + COLS] )][rule(foo(56,Jon,( -TABLE[bar(destroy(),( destroy(( -Hodor )) ))][0.78] )))]),ROWS,0.98)
}
}
};
	protect(( -ROWS ),-Sansa)
}
}
def rule(Arya){
	if(0.5){
	if(-COLS){

} else {
	if(mislead(foo(( ROWS ),--( x ),1),mislead(62,-1) + 34,rule(ROWS / Sansa,( Ygritte )))){
	Jon /= Jon
};
	dog -= -1
};
	Sansa -= -bar(( COLS ))
};
	Sansa *= ROWS;
	if(-76){

}
}
def TABLE[( TABLE[Stark][-1 * -COLS] )][i] {
	-0.34 + TABLE[Arya][0.43];
	if(x){
	x -= dog;
	if(Hodor){
	foo(destroy(rule(-( ( Sansa ) ),( ROWS ) - -COLS * -x / ( rule(Stark) )),COLS,Ygritte),-0.9);
	if(-1){
	if(TABLE[Ygritte + ROWS - mislead(( bar(-97,bar(40 * TABLE[rule()][Arya * ( --( -dog ) )],--( --Jon ) * ( ( TABLE[-340.213][-1] * COLS ) ) - ( -1 ))) ),ROWS)][COLS * Sansa]){
	if(( COLS )){
	if(Ygritte){
	if(dog){
	Hodor /= Arya;
	if(Jon){
	if(bar(Hodor,( -foo(( -( Ygritte ) )) - betray(-Jon,Jon / Arya + Stark) ))){
	Ygritte
}
} else {
	ROWS
};
	( y ) - -( -21 * COLS - dog )
} else {
	-Ygritte
}
};
	Ygritte /= -ROWS
} else {

};
	if(COLS){
	if(TABLE[Hodor][Stark]){
	TABLE[Stark + 89][destroy(110.1 / foo(( Sansa ) * 62,dog,-( foo(Jon / ( 73 )) + 41 )),-( -( ( x ) ) ))];
	( ( 380.64 ) - destroy(dog - ROWS * ( ( ( -protect(--44 / COLS,x + Stark) ) - ( --dog ) ) ) * betray(( -1 ),TABLE[( -0.14 ) - dog][1],bar(Stark,( -0.36 ))),COLS,mislead(37,0.83) - ( 1 )) / COLS - -Sansa * -Stark + ROWS - -betray(protect(Jon,y),betray(-37,( Stark * Hodor )),0.18 * protect(( ROWS ),-dog,( COLS ))) * ROWS / -Stark + ROWS ) - Jon / Ygritte;
	Stark -= 96
} else {
	Jon;
	Ygritte += -76 - 73;
	y += ( -0.23 ) * -0.27
};
	if(ROWS){
	( 1 );
	Sansa -= bar(TABLE[rule(-1)][-24],TABLE[( -55 )][-0.37 * foo(-0.6,( rule(rule(bar(37 + 23) * -betray(betray(0.15,Arya),dog) * betray(-Hodor * ----foo(COLS,destroy(y + ( -92 ),Stark),-0.4) * -0.92,foo(-Stark)) / betray(0.25,( Sansa * ROWS ))),foo(TABLE[( COLS )][( ROWS )])) ))]) - ROWS
}
}
}
} else {
	if(Ygritte){
	Arya += Stark
}
};
	betray(( --COLS ))
} else {
	Sansa *= -( --19 - ROWS )
}
};
	Arya += y
}
def TABLE[-( ( --0.66 ) )][j] {
	Ygritte += ( 77 );
	if(destroy(( ( foo(protect(bar(-1,TABLE[( ROWS ) + destroy(COLS,-dog) * COLS][( COLS )])),betray(),( ( foo() ) * bar(Arya) )) ) ))){
	-37;
	Sansa -= mislead(( COLS ),bar(( ROWS )),destroy(rule(( Hodor ),ROWS),TABLE[( Jon )][80],---1)) + Ygritte / destroy(Arya,-17);
	if(protect(--0.87)){
	Jon += -COLS + TABLE[ROWS][dog + ( -( COLS ) / y )];
	y /= ( betray(0.21) )
}
} else {

}
}
assert rule(y,-0.15,TABLE[ROWS][--( mislead(-ROWS,COLS) )]) : "Nothing burns like the cold."
assert TABLE[mislead()][--( -( dog ) * ( COLS ) ) + ( Jon )] : "One can not simply parse himself"
def TABLE[bar(( -470.2 ),mislead(( COLS )),0.76)][k] {

}
def protect(Jon){
	if(-ROWS){
	y -= -( 530.8 ) + dog - ( Jon ) * dog / rule(Arya,-Stark)
}
}
var Sansa = -0.17
def TABLE[( ( TABLE[betray(-0.41,-0.22)][-15] ) )][j] {
	( --1 );
	if(-53 - x){
	TABLE[Stark][foo(TABLE[-890.7][( bar(( -Sansa / betray(-1 / Sansa) ),Sansa,( COLS )) )],Ygritte)]
} else {
	x *= ROWS;
	( ( rule(bar(( COLS ) * -( 0.97 ),mislead(protect(TABLE[-( rule() / ROWS )][Sansa],-x),-( Sansa ) * -TABLE[ROWS][destroy()] * ROWS)),( ( Arya * -1 ) )) ) + mislead(---370.4,42) / bar(-510.1352) * -( ROWS ) + -770.2 )
}
}
assert ( -0.18 ) : "One can not simply parse himself"
def TABLE[-y][j] {
	x -= --rule(--Stark) * ( Arya )
}
var x = destroy(destroy(destroy(--35,-Arya),-1,mislead(TABLE[-TABLE[0.59][53 * ROWS] * 0.83 - TABLE[Sansa][( Hodor )]][( foo(-0.91,mislead(( -COLS ) + 30 - --Sansa * foo(),-COLS)) )])))
def rule(){
	if(bar(( Hodor ))){
	Hodor -= Stark;
	if(ROWS){
	if(-betray(x + COLS * ( COLS ) * 0.32)){
	Ygritte -= -1
} else {
	Ygritte += betray(--840.2611,( Ygritte ));
	if(-0.54){
	dog
};
	dog -= 0.83
}
}
};
	dog /= -COLS
}
def betray(){
	-0.2
}
var y = ROWS / -38 / -0.48 - bar(-72)
var Sansa = TABLE[--50][Arya]
assert -x : "What do we say to the Lord of Death?"
assert ( ( -TABLE[-( ( -( betray(Ygritte) ) ) + y )][0.39] - Arya ) ) : "One can not simply parse himself"
def TABLE[ROWS][k] {
	-43;
	71
}
assert TABLE[COLS][0.32] : "Nothing burns like the cold."
var Hodor = protect(COLS)
assert -1 : "Nothing burns like the cold."
def TABLE[-( TABLE[y][( protect(-TABLE[betray(-( -50 ) / -25)][dog * ( -x )],mislead()) ) + mislead(-42,x - ( rule(Jon,-35,COLS) ) - ROWS)] )][i] {
	if(COLS){
	-Ygritte / ( mislead() ) * --1 + TABLE[Stark][0.96 * Sansa - ( -bar(TABLE[( Hodor )][Sansa],64,-COLS) * -80 * ( bar(TABLE[-1][-1 / ROWS - COLS]) - 580.8 ) - --( y ) * Ygritte ) - ( y )] - protect(COLS,-rule(COLS)) + destroy();
	if(Sansa - -ROWS){
	dog /= -mislead(( -( --Sansa ) * mislead() / Jon - ( ( ( ( Arya ) * Arya / ( ( -( Jon ) + Stark ) ) ) ) ) ),Arya,0.8);
	bar(mislead(Sansa,ROWS),78)
} else {
	--( y ) * ( ( --rule() / destroy() ) ) - TABLE[ROWS][Arya];
	Stark /= 1
}
} else {

}
}
assert foo() + x : "What do we say to the Lord of Death?"
def mislead(Stark,Ygritte,x){
	Hodor += Hodor;
	Hodor -= ( rule(ROWS,-COLS,-660.11) );
	if(foo(--0.75,Ygritte)){
	Sansa /= 0.29 / bar(-( bar(ROWS,COLS,betray() * foo(( -1 ),bar(foo(Ygritte)))) ))
}
}
assert -61 : "One can not simply parse himself"
def rule(){

}
def TABLE[dog][i] {
	Hodor /= -80;
	if(--COLS){
	1;
	Jon /= ( -61 )
}
}
def rule(Sansa){
	( Hodor )
}
def TABLE[protect(-300.98,-350.88,0.06)][j] {
	-76
}
def TABLE[foo(foo(( Arya / ( foo(COLS,( -COLS )) * 50 ) ),-TABLE[( -40 / -ROWS ) + Arya][( COLS )] / 0.97),-67,26)][k] {
	Ygritte *= COLS;
	Ygritte += ROWS + ( protect() );
	betray(--Ygritte,rule(-x,( ( rule(ROWS) - ( betray(-10) ) ) )))
}
def TABLE[x][k] {
	if(-0.03 + betray(bar(920.232,--58 * ( -0.83 )),COLS)){
	-0.72
};
	-5
}
def TABLE[( -COLS )][j] {
	if(dog){
	if(COLS){
	if(dog + ROWS){
	Ygritte *= COLS + bar();
	Sansa /= 1
} else {
	foo(bar(),betray(-190.78 + -TABLE[-COLS][-9],--0.03) - bar(COLS) - TABLE[TABLE[( betray(dog,-890.527) )][TABLE[--Jon / 0.12 * 0.81 / ( ( -rule(Sansa,-Stark,( protect(Stark,Arya,( rule(bar(Stark / Jon * ( protect(0.92,foo(0.14 + --rule(--( ( protect() ) / 490.4 * -20 / destroy() )),y),destroy(-1)) ) / -56 / COLS,( -COLS ))) )) )) ) )][( -mislead(-3) )]]][-19],ROWS)
};
	if(bar()){

} else {
	( -99 );
	Sansa += ROWS
}
} else {

}
}
}
def TABLE[-COLS][k] {
	if(21){
	-1
};
	if(-0.01){
	TABLE[-57][( destroy(-( Arya - ( ( foo() ) - ROWS ) )) )];
	-( TABLE[-Hodor + ( 35 )][Ygritte] - 72 )
};
	if(betray(0.59,TABLE[Jon][TABLE[--( COLS / -( 0.99 ) )][protect(93 * ( Stark ),Hodor)]] / -TABLE[y][--76])){
	mislead(( ( 0.2 ) ) + x,TABLE[TABLE[Sansa][1 * dog]][-0.79])
}
}
def TABLE[y][i] {
	if(( Jon )){
	Arya *= ROWS / bar()
}
}
var x = ROWS
def protect(){
	Sansa;
	Jon -= --0.86;
	if(protect(710.485 + -1 + -44 + -61 + 92,rule(( -Arya - ROWS )))){
	Hodor;
	if(-1){
	if(Ygritte){
	if(750.939){

}
} else {
	if(betray(betray(-1 / ( Arya ) / -ROWS * ROWS) * -1 / COLS + bar(-Ygritte,970.145))){
	if(-rule(( TABLE[destroy(---TABLE[-Sansa][-ROWS] - Jon - ( --1 ))][( rule(dog,COLS,-Arya + ( -87 )) )] ),71)){

} else {
	if(1){
	Ygritte += Jon;
	if(ROWS){
	Stark += foo(betray(mislead(),foo(dog,Jon)),( -81 ));
	Stark *= ROWS;
	if(-58){
	if(mislead(-0.18 - Hodor)){
	destroy(foo(dog),TABLE[y][COLS]);
	x;
	if(TABLE[( COLS )][-1]){
	if(Hodor){
	COLS;
	Ygritte += mislead(COLS);
	Jon += Sansa
}
} else {
	if(-65){
	y /= ROWS;
	Stark *= ( dog )
};
	mislead(-( betray(ROWS,( ROWS )) ),Arya / -( Hodor ),bar())
}
} else {
	-88;
	-34
};
	Sansa += destroy(-0.93,-24) / --0.94
} else {
	if(bar(-1)){

};
	Stark += ROWS
}
}
}
};
	Stark *= -0.96;
	if(COLS){
	y /= rule(ROWS);
	Hodor *= TABLE[( betray(COLS) )][-COLS]
}
} else {
	dog += destroy(0.81)
};
	y += -0.56
}
}
}
}
assert --Hodor + -Stark - TABLE[Arya / -1 * -170.744][( ( --x ) * 740.8 - -220.0137 - 1 )] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[COLS][i] {
	Hodor += -9;
	( ( -( -protect(foo()) ) ) )
}
var Ygritte = ROWS
assert -protect(bar(foo(COLS,betray(),-48) / dog,y)) * -1 : "Nothing burns like the cold."
def bar(x,Ygritte){

}
def mislead(){
	Sansa += protect(---Jon,1,( Sansa ));
	Sansa += TABLE[Stark / COLS][dog]
}
def bar(x,y){

}
assert x / -( ROWS ) + 0.6 + ( Jon ) : "Winter is coming"
var Sansa = betray(ROWS)
var Arya = ( Jon + Hodor )
assert ROWS : "Nothing burns like the cold."
def bar(Jon){

}
def bar(){
	Ygritte += -0.12;
	( mislead(Stark,Jon,( ( Ygritte ) )) )
}
def protect(x,dog){
	if(COLS){
	if(bar(( x ))){
	( --1000.47 )
};
	y
}
}
def mislead(y){
	if(( y * y / protect(-Arya,( -69 ),-( TABLE[( -12 )][85 * ( 0.53 )] )) + protect(ROWS,x) )){
	Arya += -dog
}
}
assert y - dog : "Nothing burns like the cold."
var Sansa = Hodor
def foo(Sansa){
	Jon /= COLS;
	( TABLE[0.8][-0.84] )
}
def foo(Hodor,y){

}
var y = --rule()
var Hodor = -40
var x = Jon
def destroy(Sansa){

}
def TABLE[ROWS][k] {
	ROWS;
	if(Jon){
	( COLS - 0.79 );
	dog *= ( TABLE[mislead(4,-57)][-18] ) - TABLE[y][bar(Hodor)]
} else {

}
}
def mislead(){
	if(betray()){
	-( mislead(bar(COLS,COLS,-0.29),ROWS,( Sansa ) / Stark) )
} else {
	if(-( COLS )){
	Hodor *= 27;
	Ygritte += ROWS
};
	destroy(--990.7,betray()) + -1;
	0.51
};
	Ygritte += --( Jon - 1 );
	Jon
}
var Hodor = -y + 0.12
var Arya = ( COLS )
var y = betray(-protect(--1),-260.839)
def destroy(Ygritte){
	0.95;
	Hodor += TABLE[--74][COLS]
}
def mislead(Stark){
	mislead(-ROWS) + -0.82;
	x += ( -bar(Sansa + 4 + -0.94,foo(Stark)) - ( 61 ) )
}
var x = -COLS
def rule(dog,Stark,Jon){
	if(-TABLE[protect(betray(-180.277 / betray(-( ROWS ),0.28) * ROWS,-COLS),( TABLE[( -45 - ( 67 ) + Ygritte )][betray(( -ROWS / 540.43 )) + ROWS / -ROWS / ( -COLS ) * Arya] ),Arya)][-0.05]){
	Arya *= COLS
} else {
	( 900.4 );
	Arya *= COLS
};
	if(( mislead(TABLE[-780.7][ROWS],dog) )){
	Sansa *= --foo(-( ( Hodor ) ),bar(-( ( ( -740.328 ) ) ),rule(-( foo(( mislead(-( ( Ygritte ) ),-810.059) )) ),y),mislead(protect(-0.21,dog),( ( -0.62 ) ))),x);
	Hodor -= -32;
	Jon
} else {

}
}
var y = Stark * -( Stark ) - COLS
var Ygritte = 8
def destroy(Sansa){
	Stark += Jon;
	x += 2;
	if(mislead(( Arya ))){
	if(1){

} else {
	TABLE[( -COLS )][-1];
	if(-500.72){
	if(rule(mislead(( dog )) + -0.99,Stark + ( Jon ),destroy(-dog - ( ( destroy() ) ),foo(Jon + --Ygritte - COLS + -Ygritte) - -( COLS )))){

}
} else {
	if(1){
	y *= -dog
};
	if(ROWS){
	foo(( -TABLE[---77][( Jon )] ),mislead(dog,-30.313),protect(foo(( rule() ),COLS),Sansa));
	Ygritte -= ( Ygritte )
} else {
	-( Ygritte );
	if(destroy(TABLE[200.702][0.78],COLS)){

} else {
	ROWS;
	( Ygritte )
}
}
}
};
	if(COLS){
	y *= COLS;
	Ygritte /= ( Arya )
} else {
	if(foo(foo(ROWS,COLS))){
	Arya *= TABLE[-x][--87];
	if(( TABLE[destroy(y)][betray() - COLS * ( Arya )] )){
	ROWS;
	Jon /= ROWS;
	if(-1 - 7 * COLS * COLS){
	Hodor /= ---0.01
}
}
} else {
	0.07
};
	Arya
}
}
}
def TABLE[( dog )][j] {

}
assert ( destroy(86,-0.16) * rule(( protect(( protect(COLS,mislead(rule(( ( ROWS ) ),rule(37,TABLE[( COLS )][( TABLE[TABLE[COLS][( 0.35 )] * 31][-COLS] + -dog )])),1 / -( -( foo() ) * dog - mislead(( -22 )) / bar(( COLS ),Sansa,TABLE[( ( rule(Stark,foo(-dog)) ) )][( -Sansa )]) ),( COLS ))) )) ),--( TABLE[-1][Hodor] ),COLS) ) : "What do we say to the Lord of Death?"
def TABLE[ROWS][i] {
	Hodor -= COLS
}
var Sansa = TABLE[( mislead(Jon) )][0.95]
def mislead(Sansa,Arya,Stark){

}
var x = ( -( -630.684 ) )
assert ( 55 ) : "What do we say to the Lord of Death?"
def rule(Stark,Stark){
	0.75;
	y += ( Arya )
}
assert --640.099 + Stark - COLS : "Winter is coming"
var dog = 88
def TABLE[-0.96][j] {
	if(y){
	if(Arya * COLS){
	if(x){
	730.748
} else {
	if(-ROWS){
	-1 + -30
} else {
	rule(0.43,( ( bar(--0.98 / COLS,destroy(rule(betray(),bar(-TABLE[Ygritte][( Arya )] * -30 / -mislead(49) / 0.53,x,92)),Ygritte,ROWS)) + rule(COLS,dog + Stark - ( foo(--0.48 / -COLS / ROWS) )) ) ),( -0.01 )) * protect(( 55 ),Stark);
	-Hodor
};
	if(-ROWS * -4 / --( dog ) / ROWS){
	Arya;
	Jon *= Ygritte
} else {
	if(-( -destroy(( destroy(TABLE[0.01][bar()]) ),( 15 * ( ( Ygritte ) ) )) - TABLE[-1][protect(( -0.81 ),y) / destroy(( TABLE[( TABLE[rule(( ( --y ) ))][-Sansa / 37] )][( TABLE[-99][x] ) * 0.55 / -860.5] ),----( -32 ) * betray(-1,-0.44)) - 770.9991] ) * --Jon){
	930.4;
	if(1 * ROWS){
	Hodor -= COLS;
	dog *= -0.74
}
} else {
	protect(Hodor,77,670.724) / ( --COLS - protect(----( -15 ) + Ygritte / x,( rule(TABLE[-ROWS][TABLE[Jon][41]] / -( Arya )) )) ) + 0.81;
	if(Sansa){
	COLS;
	ROWS
};
	( -34 )
};
	( -13 );
	if(-destroy(1) * 0.67 + foo(( rule(COLS) ),Ygritte - Stark)){
	if(460.097){
	Jon *= Arya;
	rule(COLS)
} else {
	Ygritte *= ROWS
};
	if(-Jon + -foo()){
	Jon /= dog;
	if(ROWS){

} else {
	y;
	if(-Jon * ROWS - TABLE[( foo(destroy(-bar(bar())) * betray(foo(0.07),1) + -( -400.5 * -TABLE[Sansa][ROWS] * COLS * rule() ) - -1 * foo(-0.14,-57) - destroy(Jon,( -( --COLS ) )),TABLE[-0.9 - Hodor][x * COLS / ( ( Ygritte ) ) / COLS]) * -bar(mislead(-0.19 / -TABLE[betray(-Jon)][( -10.423 )],Stark)) + mislead(( 0.76 )) )][Ygritte]){
	if(Sansa + TABLE[( ROWS )][COLS]){
	if(-mislead(-1,-( --810.22 )) / -mislead(Hodor)){
	Sansa += mislead(ROWS,ROWS,-900.324 / y);
	if(-0.11){
	if(COLS){
	if(-( mislead(-COLS,( ( ( ( TABLE[COLS + Stark / y][ROWS] - COLS ) ) * -COLS ) )) - Arya )){
	--0.87;
	Arya -= -0.31
};
	Jon += --( -y ) * ( -81 )
}
} else {
	( Jon )
}
} else {
	Jon -= COLS;
	-1
}
} else {
	Hodor *= --67 - protect(Arya);
	if(rule(betray(foo(bar(( -y )),ROWS)),--0.82)){
	if(x){

}
} else {
	if(-( ( Jon ) )){
	if(protect(-21,-130.341,TABLE[COLS * protect(ROWS - -690.3 + Hodor)][protect(( ( 36 ) + Sansa ))])){
	-( rule(COLS) ) / destroy()
}
};
	if(--( Stark ) / TABLE[-0.99][Ygritte] + COLS * ROWS + -0.82){
	y /= ( betray(-1,-COLS) );
	if(( -( -1 ) )){

} else {
	if(COLS){
	if(mislead() * 0.11){
	if(Arya){

} else {
	( COLS );
	Sansa *= -20
};
	Sansa;
	if(--1 / rule(0.73) - 0.85){
	Sansa
} else {
	( ROWS )
}
};
	Ygritte += Stark;
	TABLE[--COLS * betray(protect()) - COLS / Stark][destroy(Jon)]
} else {
	Ygritte -= betray(( protect(21,-( Sansa / betray(-75,COLS) * -TABLE[( -0.19 / ( COLS ) )][x + 510.9118 / 580.208] * Ygritte ) / Stark - y) / Arya ),Hodor,bar())
};
	if(1){
	TABLE[11][-1 / ROWS];
	-Hodor
};
	( 84 ) / -dog * -mislead(COLS)
}
} else {
	betray(betray(( COLS )))
}
}
}
} else {
	if(ROWS + foo(TABLE[rule(-ROWS - --rule(( -dog ),-230.6921))][mislead(dog,770.3,-9)],-310.97 + TABLE[-93][Ygritte / Sansa] - -destroy(19) - mislead(--Sansa - x))){
	--Hodor;
	bar(-1,ROWS);
	if(( ( ( mislead(( foo() ),( --87 ),( --260.91 )) ) ) ) / ( destroy(35,( TABLE[Sansa][( -COLS )] )) )){
	x -= -x
} else {
	Jon;
	if(destroy(ROWS)){

};
	if(Sansa){
	if(destroy(Arya,ROWS)){
	if(bar(( -( TABLE[( betray(-COLS,-TABLE[( protect(-( x )) )][0.36]) )][-660.958] ) / -0.84 ),foo()) * -0.61 - Jon){
	Sansa += -protect(( ROWS - Jon )) + x - ( -0.09 );
	-0.46;
	( bar(betray(-1,TABLE[Hodor * x][Stark] * TABLE[rule()][TABLE[0.55][dog]],ROWS)) + Sansa - protect(y,Sansa) - ---260.15 - -Jon - 74 )
} else {
	if(Hodor){
	Jon /= Jon;
	x /= Ygritte
} else {
	Stark
}
};
	Ygritte += TABLE[( 66 )][( protect(( Ygritte )) ) - ---TABLE[( 1 )][( Hodor )] * ( bar(-0.72 / -89 * ( Ygritte ),( x )) - -rule() )]
} else {
	Arya *= dog;
	protect(ROWS,-COLS)
};
	if(TABLE[TABLE[Jon][bar()]][ROWS]){
	( -COLS )
} else {

};
	if(-( Arya / ( mislead() ) + ( 45 ) ) / ( ( 74 ) * COLS )){
	if(mislead()){

} else {
	y /= ( ( ( ( foo(( -bar(ROWS) + -32 )) ) * -72 ) ) )
}
}
}
}
} else {
	( rule(y) * destroy(-bar(Sansa),( protect() ) * -protect(rule(),rule(),destroy(foo(y * -0.69 + -720.042)) / --85),Hodor) );
	if(COLS * ( destroy(destroy()) )){

} else {
	if(TABLE[--0.95 * ( protect(-Stark,1000.161 * ROWS) )][-170.52]){
	-Hodor;
	if(0.23){
	x /= COLS
} else {
	if(-( Stark )){
	Stark -= bar(Jon,TABLE[----( ROWS )][dog])
} else {
	if(-400.7){
	Arya /= ( -0.34 )
} else {
	Jon -= destroy(TABLE[Arya][dog],-Arya,TABLE[ROWS][( y )])
}
};
	if(COLS){

}
};
	Arya
};
	Arya /= ( COLS )
}
}
}
}
}
}
};
	ROWS
};
	y /= ( ( foo(33,28) ) )
}
};
	Arya -= y;
	Ygritte /= Hodor
}
var Stark = -betray(( -1 ))
def TABLE[( ( Sansa ) )][j] {
	y *= foo(TABLE[bar(( ( -TABLE[( Stark ) / ( -ROWS ) + y][TABLE[-mislead()][Stark]] ) ) + -x,betray(--400.1683) - foo(rule() * COLS,bar(Sansa) + Ygritte,48),Arya)][foo()],x);
	if(-Jon){
	COLS
} else {
	if(-Ygritte){
	x += COLS
}
}
}
def foo(){

}
var Hodor = rule(( 92 ),betray(betray(( --Hodor ),( COLS )) * bar(-( -( 96 ) / ( -bar(y + 120.2,0.59) ) ),--1),Stark) / --destroy(( ROWS )))
assert destroy(( destroy() ),destroy(-( -x ) + --ROWS / 45),( -0.52 + ( mislead() ) )) : "Fear cuts deeper than swords."
assert -bar(( TABLE[-( betray(TABLE[-30][-73],-( -foo() ) * ( destroy(Ygritte) ),( x )) )][( -980.49 )] - -89 ) * TABLE[Ygritte][Arya] * ( ( -0.06 ) ),TABLE[mislead(foo(foo()),TABLE[Arya][( --Ygritte ) / ( COLS )])][( protect() )]) - y : "What do we say to the Lord of Death?"
def destroy(dog){
	if(betray(protect(-1,--0.37))){
	x /= ( -mislead(Ygritte) );
	-ROWS;
	--( 0.93 )
} else {
	if(mislead(TABLE[-TABLE[65][ROWS]][y],-0.47)){
	Hodor /= Ygritte
};
	y /= -95 * -660.67 - COLS * Hodor;
	-0.18 + mislead() / ( dog )
};
	if(-COLS){
	Ygritte += 0.07;
	if(Ygritte){

}
} else {
	if(TABLE[Sansa][( Sansa )]){
	Jon -= ROWS;
	Stark += -50
} else {
	if(x){
	if(dog + ( bar(1,( COLS )) ) + Sansa){
	Hodor;
	if(Jon + -Hodor){
	if(-0.03 - TABLE[( Hodor )][TABLE[-210.7427][COLS]]){
	0.23
};
	Jon -= -0.78 / -1;
	Hodor += COLS / ( Hodor - -COLS )
} else {
	Ygritte *= Sansa - ( Arya )
}
} else {
	-bar(( ROWS ),COLS) - Hodor
};
	Jon
} else {
	if(( bar(Sansa,dog) )){
	Stark -= -Jon
} else {
	if(930.08){

} else {
	( Jon )
};
	if(( Sansa )){
	( Ygritte );
	if(x){
	-420.924;
	COLS
} else {
	foo(--TABLE[--0.22][-ROWS],-protect(TABLE[-( ( Stark ) )][-0.48],( -72 / COLS ),-160.3),bar(420.42));
	if(( bar(-1,-mislead(betray(dog))) )){
	if(( Stark )){
	88
};
	50
};
	y += -foo(--( ROWS ))
}
}
}
};
	Arya /= ( bar(( -( TABLE[-12][dog] * -dog / mislead() ) + -Jon ),-ROWS) ) * 900.1324;
	--1
};
	Ygritte
}
}
def mislead(Ygritte,Arya,y){

}
assert rule(( -0.48 ),foo(( ( y ) + 0.95 ),TABLE[( ROWS )][protect(TABLE[Sansa][rule(84)],TABLE[( dog )][y],Jon)] / mislead(betray(destroy(1),( ---1 )),( 40.44 ),destroy(-Ygritte + ( ( Sansa ) - -0.75 ))),-680.1173),0.99) : "What do we say to the Lord of Death?"
assert protect(( Arya ) / ROWS) : "Nothing burns like the cold."
def betray(dog){
	Arya *= bar(x,x)
}
assert y : "One can not simply parse himself"
def TABLE[dog][k] {

}
var Ygritte = ( protect() )
assert destroy(dog,-0.67) : "What do we say to the Lord of Death?"
def betray(Stark){
	Hodor /= 0.77
}
def destroy(Ygritte){
	destroy(y,destroy(0.99));
	if(-0.32){
	foo(--1,0.97,-Jon);
	if(2){

}
}
}
assert bar(-( ROWS ),59 / Arya * Ygritte,COLS) : "What do we say to the Lord of Death?"
def foo(Jon,dog){
	if(mislead(( -dog ),dog)){
	if(Jon){

} else {
	if(-Hodor){
	if(ROWS){

} else {
	Arya -= -( COLS );
	-( ( 0.05 ) )
}
};
	COLS
};
	if(Hodor){
	destroy(protect(( -( rule(destroy(mislead(-ROWS - Ygritte,--ROWS) / rule(( 41 ),-1),TABLE[Ygritte][-destroy(--( mislead() ),( Jon ),betray(25))])) ) ) + Hodor));
	Jon *= TABLE[-destroy(--foo(( 0.17 * Jon ),( 60.9014 )))][42] / bar(ROWS) + -y
};
	if(x + dog){
	if(Ygritte){
	if(mislead()){

};
	-betray(( destroy(( -Arya * 0.78 + Ygritte )) ));
	dog += --Hodor
}
}
}
}
def TABLE[( -1 )][i] {
	ROWS;
	y
}
def rule(Arya,Arya,dog){
	-Sansa
}
assert -9 : "Nothing burns like the cold."
def TABLE[Arya / ( -20 )][j] {
	if(bar()){

}
}
def protect(Stark,Hodor){
	if(COLS + betray(-TABLE[TABLE[-mislead(foo(Sansa,betray(COLS,520.5)) + -12)][destroy(ROWS,Ygritte) - ROWS]][50],1,TABLE[-0.75][-60])){
	-( TABLE[( protect(Arya) ) + Stark / TABLE[foo(-y)][( -0.59 )]][200.316] );
	if(-Jon + -13){
	if(bar(ROWS,1,ROWS) / --TABLE[Jon][ROWS] * ROWS){

};
	( ROWS / COLS * Ygritte )
}
};
	if(protect(bar(TABLE[TABLE[ROWS][rule(( ROWS ),( ROWS ),TABLE[COLS][70]) + ROWS + -TABLE[( bar(foo(--( -0.54 ),( destroy(destroy() * ROWS) )),COLS) )][Jon] / -300.89 - -52 - x]][0.14 - Ygritte],COLS),-0.76)){
	Ygritte += -98;
	if(destroy(-( 521 ),( ( ( -Hodor ) ) )) * ( ( -( TABLE[protect(ROWS,foo(( ( 170.1 ) / 0.22 ),COLS)) - ( Sansa )][-89] ) ) )){
	Stark;
	dog *= -( rule(-800.44,TABLE[Jon][Sansa]) * COLS ) * --( -( destroy(TABLE[-78 / TABLE[-99][protect(TABLE[-98 * ---( ( TABLE[x][Stark] ) )][-0.43],( -1 ))]][( ( 11 ) )],betray(Hodor),-0.01 * COLS * Hodor) ) )
}
} else {
	Stark
}
}
var Sansa = -45 * Sansa
assert 790.63 : "Nothing burns like the cold."
def TABLE[( Jon )][k] {
	-1;
	if(-TABLE[-( 52 / -TABLE[ROWS][( COLS )] )][betray(-960.32,foo(foo(( -1 )),y),Jon)]){
	if(protect(x,ROWS)){
	---80;
	if(destroy()){
	if(COLS){
	if(destroy(ROWS,--( Stark ) - COLS - 17)){
	dog -= -0.74 * TABLE[( Arya )][( ---COLS )];
	-ROWS * -COLS;
	if(( Ygritte )){
	if(( ( ( Sansa ) ) ) + ( protect(10.884,Ygritte) )){
	if(-0.59){
	Arya /= Stark
} else {
	Arya -= protect() - protect(COLS,y * ( ROWS ),0.49)
}
} else {
	if(( ( ---( ( -0.51 ) ) ) )){
	protect(destroy());
	if(foo(COLS)){
	COLS;
	1;
	33
} else {
	dog += ( -protect(-foo(destroy(TABLE[( -destroy() )][--36],y)),Stark) + dog )
};
	TABLE[( dog * -Hodor - ( y ) )][-1]
} else {
	COLS;
	Jon *= -COLS
};
	-( ROWS )
};
	-Jon + foo(-foo())
} else {
	if(530.6){
	if(--61){
	Jon -= ROWS;
	--dog - ( ( ROWS ) )
};
	if(protect()){
	Sansa += Sansa;
	Sansa /= Ygritte
};
	y -= ROWS
};
	Ygritte;
	protect()
}
} else {
	if(--88){

} else {

};
	dog;
	y *= ( Jon )
}
}
} else {
	-Jon;
	if(COLS){
	( ( COLS ) );
	( destroy() );
	-mislead(-destroy(-20,1),--protect(x,betray(--0.86,COLS,--mislead(( mislead(--Hodor * -COLS + ( -( 13 * -94 ) ),( mislead(COLS) )) * ( ROWS ) ))) / COLS * -ROWS) - ( foo(-bar(-7 * -COLS / ROWS + 1,TABLE[-Stark][-Arya * x]),-21,-protect(Jon)) )) - Jon + Jon
}
};
	Arya *= 17
} else {
	Jon /= ( Jon );
	( Hodor )
};
	Stark *= ( ( ( -ROWS ) ) );
	ROWS / -rule(( ( TABLE[TABLE[Arya][1]][( Jon )] ) / betray(( destroy(ROWS - 0.46,Sansa) ),-y) ),-( x ),protect(ROWS,dog))
}
}
var Ygritte = -protect(-0.43)
def TABLE[destroy(( Arya + COLS ),protect(-foo(TABLE[mislead(Arya)][rule(( ROWS / bar(-88,destroy(-700.64,--0.09) - COLS) ),ROWS / -0.21)],TABLE[COLS][bar(--0.54,y,Hodor)]))) / protect(ROWS,TABLE[( -Arya )][x])][j] {

}
var Hodor = Jon
def mislead(x){
	if(64){
	if(betray(-87)){
	if(bar(( rule() ),0.91)){
	-COLS
}
};
	Jon += bar()
}
}
assert dog : "Winter is coming"
def TABLE[COLS][i] {

}
var x = ( -61 )
def foo(){
	Arya /= rule(Hodor,Sansa);
	-0.42 / -( 1 )
}
var x = rule()
assert -bar(0.82 + betray(),rule(Arya)) - protect(ROWS) + protect() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Jon,y){

}
assert bar() : "Fear cuts deeper than swords."
def TABLE[TABLE[-85][Ygritte]][i] {

}
var Sansa = 0.1
var y = x
assert COLS : "What do we say to the Lord of Death?"
def foo(){

}
def foo(){
	if(foo(dog - ( -foo(( -51 ) - 0.94) ),-( ( protect(( Sansa )) ) ),( Stark ))){
	-COLS - bar(-0.51) - mislead(foo(-0.09)) - ROWS
} else {
	Arya *= COLS
};
	Jon += -0.76
}
def foo(Stark){
	if(TABLE[Sansa][( -TABLE[TABLE[x][-destroy(-Arya,mislead())]][ROWS] / ROWS )]){
	TABLE[rule(COLS)][-1];
	dog *= protect(dog);
	--0.1
};
	if(-0.84){
	if(-( x ) * -( -52 )){
	ROWS;
	foo(( protect(y,COLS,1) ),( ( -ROWS ) ) / TABLE[Sansa][( -destroy(-ROWS - TABLE[-76 / -( TABLE[x][( destroy(betray(Jon)) / ( -0.85 * Hodor - ROWS ) )] )][0.25],COLS) )] + ROWS + betray(bar(( COLS ),ROWS) * mislead(( Arya ),ROWS),COLS),0.31)
};
	if(-1){

};
	x -= Arya
}
}
var Sansa = TABLE[mislead(x / dog,Arya)][-COLS] - ROWS
assert destroy(Hodor,-Stark / destroy(-( -Ygritte * foo() ) + TABLE[Stark][( Arya )]) + 0.46) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[ROWS][k] {
	-Arya;
	TABLE[bar(0.39,Hodor,protect(bar(-rule(35,( bar(TABLE[Stark][foo()]) - bar() )),protect(foo(30)),( ( ( -0.3 / TABLE[x + -( --destroy() * Jon )][COLS] ) ) ))))][x]
}
var Jon = 0.94
var Ygritte = Arya
var Arya = -60 / Ygritte
assert foo(Jon) : "One can not simply parse himself"
def foo(Jon){
	if(destroy(dog)){
	if(( TABLE[COLS][protect()] )){
	if(rule(-40,( Stark ))){
	Jon
} else {

};
	93 * x
}
};
	Arya *= ROWS
}
var Sansa = -dog
assert foo(( -( foo(-x,-42) ) ) * 600.447,( Hodor + -( Sansa ) ) + -0.64,-( Sansa )) * ( COLS ) : "Fear cuts deeper than swords."
def TABLE[COLS][j] {
	y -= betray(ROWS)
}
def TABLE[( 800.715 )][i] {
	if(-450.4 / dog){
	if(Hodor){
	Jon + -410.2 - 27
} else {
	Jon *= Jon;
	if(-ROWS / rule()){
	if(protect()){
	-Hodor;
	-1
} else {
	ROWS;
	-TABLE[rule(COLS,TABLE[betray(( rule(TABLE[COLS / ( -67 )][68]) + COLS ))][y],foo())][-Jon];
	if(COLS){
	if(rule(betray(( betray(dog,mislead(0.8)) )),x / ( ( foo(destroy(bar(-20) + dog)) ) ),dog)){
	if(-0.68){
	Sansa /= TABLE[Stark][ROWS];
	Stark += Arya
};
	if(71){
	betray(Stark)
};
	if(( 1 ) / ( TABLE[--COLS][34 / bar(72 * -x - ( -TABLE[Ygritte][Jon] ) / 0.8 * ROWS) - ( ROWS )] )){
	COLS;
	ROWS
}
} else {

};
	Ygritte
} else {

}
};
	if(TABLE[TABLE[TABLE[Jon][COLS] - mislead() * Jon][Stark]][120.83 + ( -( TABLE[destroy(( ( rule(( ( -1 / COLS ) ),( ---( ( Hodor ) ) ),ROWS / betray(COLS,( ( TABLE[rule()][-mislead(dog)] ) ))) ) ),Sansa,TABLE[TABLE[TABLE[ROWS][1]][TABLE[1][( -580.14 * 66 )]]][TABLE[--rule(-COLS - COLS * TABLE[Sansa - Hodor][-( x ) / -TABLE[( -mislead(Hodor,--1) )][--mislead(51,Arya) - rule(-betray(-6,96),ROWS)]] - -( ( ROWS ) ),TABLE[protect(COLS - Sansa + 80,Jon)][( 1 )])][destroy(Stark)]])][TABLE[-0.5][( TABLE[ROWS][-780.03] )]] ) )]){
	Jon *= destroy(ROWS);
	foo(( ( COLS - COLS ) ) + -rule(protect(( ( COLS ) ) + ( -10 ),-14,destroy(TABLE[( 1 ) * -rule(( -destroy(0.05) ),dog)][-0.12 * Stark],Jon))),1,COLS)
}
} else {
	Ygritte += TABLE[( bar(-0.54 + Hodor,-960.32,( 31 )) )][( Stark ) * ( ( --0.92 - Hodor ) )];
	y *= TABLE[44][COLS];
	Ygritte
};
	( -Ygritte )
};
	if(COLS * COLS){

}
} else {
	-0.29;
	-69 + -1
};
	y /= ( ROWS );
	TABLE[Sansa][----ROWS + ( ROWS )]
}
assert COLS : "Nothing burns like the cold."
def betray(Stark,x){
	380.3;
	( Stark + Arya )
}
def betray(){
	x *= -1
}
def betray(dog){
	-0.31 - 1 / -0.44 + ( -betray(( -protect(Jon,TABLE[rule(COLS / ( TABLE[-TABLE[0.08][ROWS]][destroy(betray(( ( 98 ) ),( ROWS )))] )) - Ygritte * --0.88][TABLE[-( 810.11 )][TABLE[Hodor][foo(0.55)]]]) ),protect(( rule() ))) );
	if(( -37 / ( ROWS ) * ( TABLE[TABLE[-foo() - 0.49][foo(rule())]][x] ) * ROWS )){
	if(--36){
	y -= ( ( betray() ) );
	if(ROWS){
	( ( COLS ) )
}
} else {
	Hodor += COLS;
	Ygritte /= -0.28;
	y += ( ( TABLE[dog][0.36] ) )
};
	88 - -protect(ROWS) + Arya
} else {
	Stark *= dog
};
	if(-1 / -Jon){
	if(-destroy(Jon) * 1){
	( ROWS );
	Hodor *= Hodor
} else {
	if(COLS){
	protect(Sansa,--190.132);
	Ygritte /= Stark
} else {
	Arya *= -( -0.95 )
};
	-x;
	y /= -( --0.21 / ( Ygritte + Jon ) * 33 )
};
	Arya += protect(-TABLE[Hodor][-0.35 - protect(ROWS,rule(COLS,COLS * ROWS))] / -COLS,( -1 ))
} else {
	( ( ( -43 / bar(( foo(Jon,bar()) )) ) ) )
}
}
def destroy(Ygritte,Arya){

}
var x = TABLE[rule()][0.8]
def protect(Arya){

}
def destroy(Hodor){

}
var y = TABLE[Arya][destroy(( ( ROWS ) ) - ( COLS * ROWS ),0.07)]
def foo(x,Sansa){
	-Arya
}
assert betray(-COLS - 67,bar(x,Arya,Stark),( 6 )) : "Fear cuts deeper than swords."
def TABLE[-( --0.93 + dog )][i] {
	Arya += ( ( Jon ) - y * TABLE[destroy(340.802,ROWS + ( Ygritte ))][-0.14] - Arya );
	Hodor /= bar()
}
var dog = 6
assert -( ROWS ) : "Fear cuts deeper than swords."
var x = 0.13
assert Stark : "Fear cuts deeper than swords."
var Stark = -TABLE[Arya][COLS] - ROWS
def rule(y,dog,Sansa){

}
def TABLE[dog][i] {
	if(( bar(-33,foo()) )){
	Jon *= ( -10.53 )
}
}
assert ( destroy(( 51 ),--Jon + -0.07) ) : "One can not simply parse himself"
def betray(y){
	dog += 0.65;
	Hodor /= Hodor * -18 + -Stark
}
def foo(){
	if(--( COLS )){

};
	if(foo(( ( x ) ))){
	-0.27
} else {
	-foo();
	x -= ROWS;
	TABLE[Hodor][protect(COLS - rule(0.93 * 93),Jon)]
};
	if(( ( TABLE[-( dog + COLS * protect() )][TABLE[Hodor][TABLE[--mislead() / Ygritte][Stark]]] ) )){
	Sansa *= ( -1 + Hodor - ( -80 ) - TABLE[TABLE[COLS][-ROWS] * protect(protect(TABLE[COLS][-0.04],-Jon),( ( -9 ) )) * ( -0.68 ) + mislead(Stark) - ( Sansa )][( -63 )] );
	( -0.76 );
	if(Hodor){
	mislead(360.4 * COLS)
} else {
	mislead();
	dog /= --0.88
}
} else {

}
}
var Arya = ROWS
assert ( ( dog ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(Hodor){
	y *= Sansa;
	Arya += -0.56
}
def destroy(x,Ygritte,dog){
	if(( Ygritte )){
	if(-0.98){
	Arya /= ( foo(TABLE[-( Hodor ) * -0.31 + dog][( ROWS )]) )
};
	dog -= ( 1 );
	if(foo()){
	TABLE[x][TABLE[rule(0) - -54 - destroy(-0.15 / ROWS,( -1 )) * ( bar(( -bar(ROWS - 2,TABLE[( ( ROWS ) ) / Ygritte][( -( ( rule() - ( -41 + mislead(-COLS * COLS,bar(-betray(-Ygritte,rule(Hodor)) + foo(Stark,ROWS),-( ( -( TABLE[mislead(Arya)][-( betray(-120.695,-0.31,-1) / ROWS )] ) ) + Arya )) * -rule(-mislead(-0.62,mislead(( foo(-1 + ( Sansa / ( y ) / y ) + ROWS / Jon - Stark,Ygritte - ( ROWS )) ),ROWS,betray(-betray(destroy()),COLS))),( -0.54 ) + x,bar(-220.983 / ROWS)) / -0.64 + foo(-( -17 + ( -29 / ROWS ) ) + Hodor,-Jon) - betray(-ROWS - ( x ),COLS) - -bar(( TABLE[-( destroy() * Sansa )][COLS / x / -( TABLE[TABLE[protect(TABLE[destroy(Hodor * ( --( COLS ) ))][( ----protect(--COLS,-0.13) )],-69)][betray(( 21 ))]][x] )] / Hodor )),Hodor) + -1 ) / -53 ) / Jon ) )],--TABLE[betray(( 8 ))][47] + destroy(( mislead(COLS / ( mislead(destroy(TABLE[bar(COLS,0.76) * protect(-( ( mislead(destroy(mislead(0.58,0.16),740.335,450.123)) ) ))][( ROWS )],-1),---0.65) ) * Ygritte,( rule(0.04,Hodor,( ( mislead() ) )) ),Stark) ),ROWS)) + destroy(( Ygritte )) / -( ( -TABLE[87][( mislead(-40,( -COLS ),betray(Ygritte)) )] ) ) - -Jon + TABLE[--foo(Sansa,rule(0.86,Stark,COLS))][Ygritte] ) * 750.13,destroy(( bar() ) * ROWS)) ) + Jon][( Sansa )]]
} else {
	if(810.7547){
	x -= 0.89
} else {
	-rule(rule(1,dog * Hodor))
}
}
}
}
def destroy(dog,Hodor,Hodor){
	ROWS * Arya;
	Arya;
	if(ROWS * 920.44){

} else {
	-( ROWS );
	dog /= TABLE[foo(bar(),betray(mislead(790.4331 / ROWS,Stark)))][-89]
}
}
assert Ygritte : "One can not simply parse himself"
def TABLE[-0.22][k] {

}
def TABLE[---TABLE[1][Sansa] - COLS - ( ( Ygritte ) )][i] {
	if(Hodor){
	( ( ( ( foo(( TABLE[( -0.86 )][-( -rule(protect(COLS - -( Ygritte - ROWS ),bar(-( ( 0.58 ) ))),0.07,( ( -60 - -73 ) )) ) / bar(( ( Sansa ) ),betray(-rule(( -0.26 ))))] ),--590.7,Jon) * ( Hodor ) ) ) ) ) * COLS + -( Arya );
	-6
} else {

};
	dog -= ( ( ( foo() - dog ) ) )
}
def TABLE[rule(( protect(x) ),protect(-( ROWS / Arya ),( ( -Jon ) ),-COLS) - Arya - Ygritte)][j] {

}
def protect(Hodor){
	--COLS;
	if(-1){
	destroy(y);
	if(Stark){
	Ygritte *= Jon
}
};
	if(bar(TABLE[y][x] - 67)){
	if(TABLE[dog][dog + -rule(ROWS,TABLE[rule(--0.11 - -1 / mislead(),Jon)][COLS]) + -x + -1 + x * ---1] / -ROWS){
	Sansa *= foo(Jon);
	dog /= -0.79 - TABLE[Arya][mislead(Jon,---630.43)];
	Stark *= TABLE[TABLE[rule() / -810.02][-Arya]][foo(TABLE[( Stark )][Sansa * destroy(dog) - --Sansa - destroy(y,TABLE[--TABLE[---bar()][Jon + ( -x * 3 )]][-TABLE[bar(ROWS)][betray(rule(Arya)) / -Stark]],ROWS - -0.28) - ( -bar(( COLS ),( ( bar(1 * -1) ) )) ) - -protect(( destroy(COLS) / TABLE[bar(-84)][Arya] ),( ( x ) ) / -( --320.59 ))],1,Ygritte + ( ( Hodor ) ))]
} else {
	Ygritte
}
}
}
var Hodor = -0.69 - -220.9164
def TABLE[1][j] {
	if(-mislead(-0.95) / 0.45){

};
	Arya /= -betray(0.19,620.19);
	Stark
}
assert Arya : "Nothing burns like the cold."
def TABLE[rule(( TABLE[y / 45][bar()] ))][j] {
	x -= -COLS;
	if(protect()){

};
	Sansa *= ( TABLE[y][TABLE[mislead(( rule(destroy(Ygritte) - foo(rule(0.72,protect(rule(--TABLE[x][( Ygritte )],( ( -0.32 ) + x )),-96)),-ROWS,ROWS)) ),-betray(TABLE[--6 / Stark][Sansa],Jon))][TABLE[bar()][( 25 )] - 1]] - bar() + COLS / ( ( Hodor ) ) - foo() )
}
assert ( -0.69 ) : "Nothing burns like the cold."
assert -foo(Hodor) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(Stark){
	if(y){

};
	Ygritte *= COLS;
	Jon /= --Ygritte * COLS * ( 600 )
}
def rule(Stark){
	if(( -COLS )){

} else {
	if(---34){
	if(-foo(destroy(-97,-0.89,COLS))){
	Sansa += bar(betray(betray()))
};
	Jon
};
	0.12 + foo(( foo() ),99);
	if(rule(( TABLE[TABLE[-betray() - ( ROWS )][ROWS]][ROWS] ),( ( bar() ) ),foo(rule(x,( mislead(-10.56,( -TABLE[COLS][82] / 53 - -0.58 + --7 )) )),Jon,( betray() ) + Stark))){

}
}
}
assert TABLE[-180.1928 + x + 19][Arya] : "Winter is coming"
assert 86 : "Fear cuts deeper than swords."
def bar(Ygritte){
	Arya /= TABLE[betray(ROWS,destroy(( ( ROWS ) )))][ROWS];
	Stark *= COLS
}
def betray(Arya){
	if(protect(COLS,( Jon ),-protect(40,TABLE[Hodor][0.8]) / -48)){
	x
};
	betray(1) - TABLE[destroy(mislead(TABLE[TABLE[Ygritte][--0.96]][57] / COLS))][---y]
}
def TABLE[TABLE[Jon][Hodor]][j] {
	if(ROWS){

} else {
	mislead(-ROWS,--0.55);
	Arya += COLS;
	-910.002
}
}
def mislead(Ygritte){

}
def TABLE[-( y ) / 0.18 - ( Stark )][k] {
	COLS * ( mislead(--( Hodor )) )
}
def TABLE[TABLE[bar()][( Arya ) + -( ROWS )]][k] {
	if(Sansa){
	protect(ROWS,1) - TABLE[protect(( ( mislead() * ( 28 ) ) ),-foo(( ( -9 * --TABLE[( TABLE[Ygritte / TABLE[-0.06][-Sansa / foo(Sansa)]][TABLE[--0.32][---0.17]] )][( Jon )] ) ),Ygritte) + ( Hodor ))][bar(Stark,x)];
	Jon += 1
} else {
	if(COLS * -780.83){
	Stark /= TABLE[-bar(TABLE[x][420.636])][-( bar(TABLE[-1][ROWS] + 230.087,( 0.56 ),( -rule(( ( -0.5 / -58 + Stark + ( TABLE[( TABLE[620.919][y] )][ROWS] ) ) )) ) - Ygritte) )];
	if(COLS){
	Arya -= x;
	protect(betray(),bar(ROWS))
} else {
	Stark;
	if(1){
	bar()
}
}
} else {
	Arya += -Hodor
};
	( -Jon - -1 )
}
}
var Sansa = -0.34
def protect(Jon,dog,Hodor){
	betray(-Sansa,( -ROWS ),82);
	Stark *= Hodor;
	( -48 )
}
def TABLE[( -0.2 )][k] {

}
var Ygritte = -60 - 1
def betray(Ygritte){
	Jon + betray(120.7,-( -destroy(0.51,( protect(COLS,1) - Hodor / ( ( ( destroy(Stark) ) ) ) )) - rule(rule(mislead(x,-( ROWS * 0.97 + -Stark )),1),TABLE[-46][ROWS]) * ( COLS ) * x ),Stark)
}
def TABLE[TABLE[y][Stark]][k] {
	x /= 31;
	if(( betray(( ROWS ),y,bar(--( Ygritte ) + -47 + Arya,-ROWS,ROWS) - Ygritte) ) + mislead(( ( --1 ) ))){
	x;
	Jon *= -betray(Sansa) - x
}
}
def TABLE[-77 / -210.6][i] {
	bar(Hodor,-1,59);
	if(ROWS){
	( mislead(foo(( rule(0.34,Hodor,( ( bar(COLS,-1,Ygritte) ) )) ) / -bar(( -destroy(( ROWS ),-mislead(( Hodor )),Hodor) ))),( ( --0.46 ) )) * ( 97 ) );
	Ygritte /= Stark - COLS
} else {
	if(-TABLE[ROWS][COLS]){
	-840.2675 + -Hodor;
	if(Stark){
	83
} else {

}
};
	Jon
}
}
def destroy(dog){

}
assert TABLE[( ( bar(COLS,destroy(39 + -TABLE[( -TABLE[0.48][-x] )][Sansa],betray(TABLE[Hodor][y + ( COLS )],dog),( -( mislead(-ROWS) * 990.59 / ( --1 - -( TABLE[0.53][foo(COLS,-protect(1),mislead(Jon,--ROWS))] ) ) * ( ( Sansa ) ) - Stark ) / TABLE[x][-Hodor] + -1 - -mislead() )) + Arya) ) )][( TABLE[bar(COLS)][rule()] )] : "One can not simply parse himself"
def TABLE[TABLE[( betray(( dog - rule(rule(-bar(TABLE[( ( ROWS ) )][dog - ROWS],y,1)),protect(COLS,-39 * x + betray(COLS))) )) )][0.43]][j] {

}
var Sansa = -TABLE[mislead(( Jon ),rule(-0.37 * mislead(protect(Jon),17)))][x / bar(TABLE[mislead(Stark - 920.653)][TABLE[COLS - -0.94][Hodor]]) * protect() / mislead(-0.55,( -( ( ( --50 * foo(-ROWS,( ROWS ),x) ) ) ) ))]
def TABLE[88][i] {
	x += ( mislead(y) * rule(-( -950.06 ) + -0.54 * -0.69,53) / -( -rule(( ( dog ) ),betray(-1)) / -6 ) );
	dog -= ROWS;
	mislead() - mislead(TABLE[-83][Sansa],-( Ygritte ))
}
def protect(Ygritte){

}
def rule(Jon,Ygritte){
	Arya /= dog;
	if(0.2 / Ygritte / protect(-13,COLS)){

} else {
	foo(-0.24 * Stark,bar(bar(),Arya) * -0.39);
	if(( x )){
	x /= 140.83
} else {
	-0.72;
	rule(COLS * 1 / COLS,83 / TABLE[---( foo() / Jon )][( ROWS )]) / Hodor - Jon / -0.51;
	dog -= --( Jon ) + 1
}
}
}
assert rule(-0.48,destroy(TABLE[( ROWS )][ROWS - TABLE[TABLE[TABLE[( -Jon + COLS ) / -ROWS][bar(COLS) + ROWS] + 0.69][--destroy(COLS,( -780.07 / 0.54 )) / ( ( Arya * TABLE[TABLE[Arya][( ( -dog ) )]][67] ) - ROWS )] + TABLE[-( Sansa + ( foo(-( -dog ),rule(COLS,protect(x,( ( dog ) )),-ROWS / -1 - ( ( 40.2 * destroy() ) ) / ( Sansa )),Hodor) ) )][Stark] * -1 - betray(ROWS,bar(-25,( ( x ) )))][COLS]])) * -betray() : "Nothing burns like the cold."
def mislead(x,x,Jon){

}
def TABLE[--protect(Jon)][i] {
	if(790.48){
	Sansa += ( protect(ROWS) );
	if(( -770.2232 )){
	-dog;
	( -( ROWS - Ygritte / 7 ) + ROWS );
	-1
} else {
	betray();
	y -= foo(protect(19,COLS),( -Jon ))
};
	-78
} else {
	if(-mislead(mislead(Jon,COLS))){
	if(rule(( COLS ))){

}
} else {

}
};
	Sansa
}
def mislead(Hodor){
	y /= dog
}
assert ( -140.602 ) : "What do we say to the Lord of Death?"
var x = ( destroy(( -( -97 ) / mislead(dog) ) / 10.7,COLS) )
def TABLE[Stark][j] {
	Ygritte -= rule(-bar(( bar(x,betray(COLS,( rule(protect(-( protect(-Hodor,( y ),-1) ),betray() + rule())) - -Jon ),rule(0.88)),-79) * betray(rule(),-0.63) ),-dog));
	-( ( destroy(mislead(y - -Hodor,dog),Stark,Arya) ) )
}
assert COLS - -betray(-betray(COLS,( y ) - Arya,-1 + betray(Ygritte))) : "One can not simply parse himself"
var dog = ROWS
var Arya = -( -47 )
def TABLE[rule(( Stark + rule() ))][k] {
	TABLE[0.46][-Sansa]
}
assert -ROWS : "What do we say to the Lord of Death?"
var dog = --0.03
var Stark = ( destroy(ROWS) )
assert -( bar(COLS,-COLS + rule(( TABLE[y][-1] ) - TABLE[0.89][ROWS],protect(59),TABLE[( -ROWS )][COLS])) + 0.29 / ( ( 72 ) ) ) : "Nothing burns like the cold."
def destroy(dog){
	foo(destroy(-73,y,-0.61));
	Arya += foo(( dog ),TABLE[-( ( ( ( ( TABLE[87][mislead(--( --95 ))] ) ) ) ) )][Ygritte]) / protect(ROWS,-Sansa) / -( -TABLE[( -Arya + -130.5004 )][protect(Stark,dog)] );
	if(Arya){

} else {
	Stark += -foo();
	Ygritte -= betray(( mislead() ) * TABLE[TABLE[-1][Jon]][( TABLE[--1][( 0.05 )] - rule(-0.73) )],0.01,0.26);
	Jon *= destroy(mislead(ROWS,dog))
}
}
var y = TABLE[( 65 ) / -( Sansa ) * ( foo(-0.51,-380.9) ) * COLS][0.78]
def destroy(){
	if(-( -50.9 ) / -82){
	if(( Arya )){
	rule(( 1 ))
};
	Jon *= betray(destroy());
	Jon /= -( TABLE[89][TABLE[-betray(-foo(1,ROWS * ( Ygritte ),foo() - ROWS),200.03) * rule(Stark) * y - COLS][-rule()]] )
};
	Stark /= ( mislead(-38,( dog + -ROWS )) + ( y ) )
}
def TABLE[Arya][i] {

}
def protect(Sansa,Jon,Sansa){
	if(protect(96,--560.76)){
	mislead(-1 + x,Hodor,( -81 ) / ( -1 ))
} else {
	x -= Hodor
};
	Arya += ( -1 * TABLE[0.9][-38] / 1 + ( betray(mislead(x,x),-Arya * ( destroy(COLS) ),0.42) ) ) * Hodor
}
assert -0.87 : "One can not simply parse himself"
assert -0.8 - -0.35 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( COLS ) + -10 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Ygritte : "What do we say to the Lord of Death?"
def rule(Sansa,Stark){
	if(x - mislead(( -( ( x ) ) ))){
	if(( destroy(foo(20,betray(ROWS),( ( ROWS ) )) + ROWS,-Jon - ( ( TABLE[-rule(ROWS,( -( -63 ) / --1 )) - ROWS - Ygritte][Stark] ) )) )){
	if(Stark){
	Stark *= ( TABLE[protect(foo())][Jon] + Jon ) / 93 - Ygritte;
	x -= COLS
} else {
	ROWS;
	if(Stark){
	if(Jon){
	x /= foo(0.52);
	y /= dog
};
	dog += TABLE[COLS][bar(-x)]
}
}
}
} else {
	Sansa -= Jon * Arya / -9;
	Ygritte /= -rule(COLS - Stark,-( --44 )) + ( TABLE[--ROWS / -1][1] )
}
}
def bar(y){
	if(( Stark )){

} else {
	Jon += x
}
}
def TABLE[mislead(mislead(--35,Jon + ( COLS ) / protect())) / Stark][i] {
	Jon /= mislead(ROWS,TABLE[Hodor][( -( protect(mislead(betray(( ( -( ROWS ) / -Stark ) * ( TABLE[bar(--0.39,( TABLE[TABLE[-TABLE[mislead(Arya)][-0.08]][foo() - ( protect(foo()) / COLS )]][TABLE[( ( 0.06 ) )][-1]] ),TABLE[-0.62][-1])][( ---( Hodor ) / ( --( 0.57 ) ) )] ) ),dog - mislead(Hodor)),-90),-ROWS) ) )])
}
var Hodor = 530.527
var Ygritte = ( ROWS )
assert ( ROWS ) : "Fear cuts deeper than swords."
var Hodor = mislead()
def TABLE[( betray() )][i] {

}
def bar(y,y,y){
	if(ROWS){
	if(( 93 + foo(( 1 / Ygritte )) )){

}
};
	y += TABLE[-72][foo(Jon - -ROWS) * protect(ROWS)] * -51
}
var Hodor = TABLE[-( -foo(TABLE[TABLE[( ROWS ) + ROWS][betray(x)]][( -ROWS / COLS )]) )][TABLE[-210.6 - Jon][TABLE[( Jon - foo(1 - Ygritte + betray() / dog,( COLS )) )][-ROWS]]]
def destroy(){

}
def TABLE[( ( -( -0.71 ) ) + dog + -( -0 ) / Jon )][k] {
	if(( -ROWS )){
	Jon
};
	Jon -= 0.59
}
def foo(Hodor,y){
	COLS
}
var Ygritte = -86
assert ( COLS ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = mislead(dog)
assert ( -55 ) : "Winter is coming"
var Jon = -0.3
assert -betray(Jon,-dog / Ygritte + mislead(ROWS,destroy(0.87,COLS))) : "What do we say to the Lord of Death?"
def protect(Arya){
	if(COLS){
	if(( -COLS )){
	( dog );
	if(Hodor){
	COLS;
	Jon += 0.76
} else {
	Arya += COLS
}
};
	--ROWS - 0.87 * Arya - ROWS * 1
};
	if(-82){
	y -= ( destroy(y,-0.81,Ygritte) ) - protect(ROWS - y * Ygritte,( 27 ),y);
	if(-340.0417){

}
}
}
def TABLE[-( -0.58 / Arya + 12 ) - Ygritte][k] {
	-710.41 * ( -77 )
}
def TABLE[Jon][i] {
	if(-( TABLE[ROWS + -0.31 + -700.77][--1] )){
	Sansa += dog;
	if(mislead(Sansa / -dog + betray(32,TABLE[( betray(dog,Jon) - COLS / bar(-57,-COLS) )][-mislead(Hodor,( bar() ))]),y) - ( -ROWS )){
	x
};
	--betray(y / Arya,( -( rule(-44,--63) ) ))
}
}
var x = 1
def betray(y,x){
	if(foo()){
	dog *= ( -dog );
	--81
} else {
	--( ( protect(( -Stark * y )) ) );
	Jon /= -protect(-3,-COLS);
	y += 10.7584
}
}
var Jon = y
var dog = -COLS
def TABLE[y - Jon][i] {
	if(-COLS){
	if(COLS){
	Ygritte /= -0.94;
	if(( Sansa )){
	Hodor += ( TABLE[bar(---x)][Stark] );
	55
} else {
	if(( Hodor + ( ROWS ) * 23 )){
	y
} else {
	if(protect(93)){
	( TABLE[( COLS )][betray(TABLE[COLS][COLS],-730.05)] );
	Sansa -= foo(betray(dog,( -88 ))) * 0.6;
	dog /= ( ( ( bar(destroy(protect(-Stark),bar(ROWS,( rule(Sansa) )))) ) ) )
}
};
	Stark += 1
}
}
} else {
	x -= Stark;
	x -= -0.07;
	Sansa
};
	if(( protect(y) / ROWS - 24 + bar(( Arya ),ROWS) + TABLE[70][( foo(( mislead() * x ) - -0.25 / TABLE[mislead(-COLS / -520.4,-56 * ROWS,x)][( ROWS )]) )] )){
	foo(Hodor) * -betray(-( ( ( mislead(( ( bar(rule(-0.98)) ) / rule(-( y ) / ---1 - 0.66) ),-0.63,-68) ) ) )) * ( ( -( Jon ) ) - 0.04 * ROWS - dog ) - Ygritte - Ygritte;
	Stark -= --protect(TABLE[-Ygritte][( ROWS )]);
	if(-TABLE[( ( ( 0.32 ) + ROWS * 90.03 ) )][( -( -Hodor ) )]){
	if(COLS){

};
	Stark += 0.02
}
};
	if(betray(bar(-Arya,TABLE[0.38][-74],TABLE[betray(-1 + TABLE[0.81][COLS] * protect(COLS,-70,rule()) * -Sansa + 0.86 / ( -TABLE[ROWS][-0.83] ),( betray(( destroy(rule(COLS) / -2,-92) ),-58 * Ygritte,-TABLE[-0.53][( -Hodor )]) ) - Hodor)][( -destroy(( rule(-ROWS,ROWS,Jon) ),1,1) )]),( Ygritte )) + protect(COLS)){
	Jon *= COLS;
	COLS;
	x
} else {

}
}
def foo(Stark,Ygritte){
	64;
	-TABLE[( --1 )][( TABLE[( Jon )][( TABLE[COLS][--( betray() * protect(mislead(-destroy(Ygritte,-( bar(mislead(mislead(( Sansa / --ROWS )),--1,-36)) ),ROWS))) )] )] ) / -TABLE[TABLE[COLS][x]][COLS + -640.27] * -1] + -y;
	Arya
}
var Jon = -y
def mislead(Arya,Stark,dog){

}
def bar(Jon,Hodor){
	mislead(-( ROWS - Sansa ),destroy(ROWS),-Hodor - ( ROWS ))
}
def TABLE[( -41 )][i] {
	dog += -0.31
}
def bar(Stark,Arya,Hodor){

}
assert -0.07 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = -protect(rule(),Jon)
def foo(Arya,y){
	mislead(y);
	-( ( COLS ) );
	Jon /= y
}
def TABLE[COLS][j] {
	x /= TABLE[COLS][Arya];
	if(dog){
	if(mislead(440.129,ROWS)){
	bar(-protect(Sansa),( -0.12 - betray(betray(-( -26 / Jon ),ROWS + ( --0.86 )),-68,( ( COLS ) * 0.27 )) - COLS ));
	Hodor /= ( -( dog ) / ( ( --58 ) ) - mislead(TABLE[( 860.78 )][Stark - ---( -( COLS / Stark ) * ( protect(ROWS,-COLS - ( 50 ),y) * ROWS ) )]) );
	-( Sansa )
} else {
	60 / --0.57;
	( betray(ROWS,COLS,ROWS) - x );
	if(rule(-68,-( -13 ))){
	y /= -dog;
	x /= bar(Hodor,protect(( ( -( -( foo(ROWS) ) ) ) ),0.77))
} else {
	Stark;
	Stark -= ROWS;
	if(( ( betray(TABLE[ROWS][0.99]) ) ) * ( rule(ROWS / -Hodor - -0.82,dog) )){
	if(Hodor){

} else {
	foo(( betray(28 + Stark,-rule(( ROWS ) + -( ( TABLE[COLS + -( COLS )][foo(bar(-820.824),dog) / betray(0.44,0.15,Stark)] - Hodor ) )) + TABLE[-( 120.87 )][destroy(0.17 - -( ( bar() ) ) + 140.3,0.99 - TABLE[( dog )][Arya])],bar(( 72 ),-ROWS)) ) * dog,0.81);
	Sansa -= TABLE[( mislead(79) )][TABLE[33][betray()] / ROWS]
}
}
}
};
	y;
	x /= rule(( Stark ),ROWS * rule())
};
	-21
}
assert -( -0.64 ) : "Nothing burns like the cold."
def protect(Ygritte,y,Hodor){
	Stark += -0.46 + Arya;
	( dog )
}
assert COLS : "What do we say to the Lord of Death?"
def TABLE[destroy(440.38 + 25 / y - COLS * ( 1 ))][k] {
	mislead(TABLE[protect()][Sansa] + 0.15,dog,dog);
	protect()
}
def TABLE[( -21 * ROWS ) + -Arya][j] {
	if(Hodor - TABLE[( ( 0.12 / -( protect(( 0.2 ) * dog,90.64) ) ) )][destroy(-0.15) - -bar(bar(destroy()))]){

}
}
def protect(){
	if(dog){
	Arya += COLS
} else {
	COLS;
	COLS
};
	if(( 56 ) - ( COLS ) / -23 * rule(1 / Arya * 1,ROWS)){
	if(destroy(TABLE[-1][Stark],( -Hodor ))){

};
	( -x / x )
} else {
	if(0.81){
	Ygritte
} else {
	-( foo() )
}
};
	protect(( destroy(-0.79,-0.45 - betray(0.29 + dog,rule(Sansa,--1),-1),( Hodor )) - TABLE[( ROWS )][rule(--70.4499,--26)] )) + ( TABLE[Sansa][( COLS )] )
}
def TABLE[( rule(-x,-dog) )][i] {

}
def TABLE[( -ROWS )][k] {

}
def betray(){
	y /= -780.39 + -Hodor * dog
}
def TABLE[0.94][i] {

}
var Sansa = -0.86 / ( -mislead() ) * foo()
def TABLE[protect(82,Hodor)][k] {

}
def TABLE[-Hodor][j] {
	( -ROWS - COLS )
}
def TABLE[COLS][j] {
	TABLE[-( COLS )][ROWS];
	Jon *= ( COLS - y ) + --( Hodor );
	( ROWS )
}
assert -bar(--1,dog) : "Fear cuts deeper than swords."
assert betray(( -dog ),ROWS) : "What do we say to the Lord of Death?"
var Hodor = ROWS
var Ygritte = -dog
assert foo() : "Nothing burns like the cold."
def destroy(){
	Ygritte *= ( ( -bar(21 * COLS) ) )
}
var Jon = 210.15
def foo(Sansa){
	if(dog){
	Ygritte *= ( Hodor );
	23 / ( Sansa );
	if(dog){
	if(Jon){
	Stark -= foo(ROWS,COLS);
	if(-Jon){

} else {
	if(y * -( Sansa )){
	rule(( -62 ),TABLE[ROWS][Jon],rule(dog,Ygritte,-47 / TABLE[-0.48][0.72 - 1 / --foo(bar()) + ( -protect(Arya,mislead(-TABLE[( mislead() )][-COLS]),( ( ( -0.57 ) ) )) )]));
	Ygritte += -5
} else {
	x *= ( -y );
	TABLE[340.323][bar(-0.88,( -Jon ))];
	Sansa *= x
}
}
}
}
} else {
	if(0.26){
	if(Jon){
	Jon *= ( ( Jon ) );
	0.45
} else {
	-780.3512
};
	( COLS )
};
	if(( ( ROWS ) ) * Stark){

} else {
	dog += ( bar(destroy(),-170.889) ) * Sansa / Sansa;
	if(-0.25){
	if(ROWS - ( Arya )){
	Hodor += ROWS;
	if(mislead(7,( -( COLS / ( ( betray(--1,Arya) ) ) / Hodor ) ),-destroy(-630.178,TABLE[Arya][-ROWS] - Ygritte + bar(( protect(mislead(),--foo(protect(betray(0.46,COLS))) / -75) ),bar(( betray(610.7,( Ygritte ),y) ),( ( -( Stark ) ) * -( ( COLS ) ) ))))) - ( bar(-( destroy(ROWS) )) )){
	if(Sansa){
	if(( ( ROWS ) )){
	( rule(COLS - ( TABLE[( COLS )][mislead(-Arya) / protect(-betray(betray(-Ygritte,betray()) - Jon / -1,betray(( 1 ) - ( x + ( y ) * TABLE[-75][-0.63] ),foo(rule(ROWS),Jon),TABLE[-71][TABLE[-mislead(ROWS,ROWS)][destroy(-Hodor,-Sansa,-0.9)]])) - ( -0.12 ))] )) );
	Jon *= -( -y )
}
} else {
	ROWS;
	Hodor += -rule(--Ygritte) - betray(-COLS);
	y *= protect(-0.66)
};
	Sansa += rule(COLS);
	if(-ROWS){
	dog *= Hodor;
	( destroy(1) )
}
} else {
	if(1){

} else {
	if(Hodor){
	if(-85 - ( -( protect(TABLE[ROWS][TABLE[Sansa][( y ) * foo()]],Hodor,1) ) / ( Jon ) )){
	Hodor += bar(mislead(-0.56 / y - mislead(-Stark)),Hodor);
	Sansa /= protect();
	Arya += Jon
};
	if(x){
	if(Ygritte){
	if(-rule() + mislead(Jon) + 0.54){
	if(Jon){
	dog *= -80;
	( ROWS )
} else {
	Ygritte += ( protect(( -Ygritte ) - mislead(-920.35,COLS)) )
};
	y /= 1
} else {
	if(( ---75 ) * -110.6){
	if(( TABLE[0.78][1] )){
	Jon *= ROWS / ROWS;
	-59;
	if(( ( Ygritte ) )){
	if(-0.44){
	y /= 1;
	y += -Arya * Ygritte;
	if(ROWS){
	Hodor -= -ROWS
} else {
	-TABLE[ROWS][ROWS]
}
};
	if(( ( 0.94 ) )){
	Hodor /= COLS;
	Jon
}
} else {
	foo();
	if(ROWS){
	--COLS;
	if(1){
	Stark -= ( TABLE[( destroy(y,88 + Stark,Jon) )][0.79] * Arya );
	0.73
};
	Jon += COLS
}
}
};
	( 27 )
};
	-ROWS / 81
};
	if(Hodor){
	if(y){
	Hodor;
	x *= -COLS
}
}
} else {
	y -= 410.193;
	-0.41
};
	Stark -= TABLE[950.505 / -( ( Hodor ) )][0.04]
}
} else {
	if(COLS / -y){

};
	COLS;
	-protect(rule(( 430.9862 )) - ROWS,-430.437,( -360.9753 ))
};
	if(Sansa){
	if(160.551){

} else {

}
} else {

}
};
	ROWS;
	if(32){
	COLS;
	Arya *= -( protect(bar(-0.81,68)) );
	if(---TABLE[-0.08][-dog] / -0.13 * betray(Sansa + 88 + ( ( -mislead(Ygritte) - ( -0.74 ) - TABLE[Arya + -( destroy(( COLS - ROWS ) + -Arya / -destroy(destroy(-protect(-Jon,--Arya) / foo(),( -( destroy(destroy(COLS,-COLS),-dog) ) * x - ( mislead() ) )),COLS)) )][-0.89 + Stark] * -34 ) ) / ( TABLE[Stark / --1 + Sansa][( COLS ) - x] ),dog - mislead(Stark)) / foo(dog) - -protect(( ( mislead(( dog ),--destroy(),Stark) ) )) - destroy() + COLS + ( COLS - ---1 / Sansa )){
	Arya *= Arya;
	x
}
}
}
};
	Stark -= ROWS - -( ---( 1 ) / 52 );
	if(y + COLS - ( TABLE[Jon][destroy(( x / ROWS ),-240.194) / -0.05 - -y] )){
	destroy(0.44,destroy(protect(---TABLE[ROWS][-dog] - 490.9866 * ( 0.56 )) + COLS,Hodor * rule(ROWS,-mislead(( -86 ),dog) * ( ( COLS ) ),---73)));
	COLS;
	dog /= Ygritte
}
} else {
	if(( ( rule(65,( Sansa )) ) )){
	if(-0.59){
	Arya *= ( ( mislead(-( ROWS ),TABLE[foo(Arya)][Arya],betray(rule(-37,COLS) * y)) ) );
	rule(-y / -destroy(x,protect(( ( mislead(0.97,protect(ROWS * protect(Ygritte,( --1 )),Arya) + Ygritte) ) - x ),( bar(COLS) ) - ( -96 ) - destroy(-17 * -0.02,0.61))) + destroy(Ygritte,30.0301 / -63) / --Jon * 0.1);
	if(0.57){
	Arya += ( ( 3 ) )
} else {
	Jon /= betray(COLS / destroy(-50,-0.33,( --8 )) * protect(( -COLS ) + ( mislead(mislead(ROWS)) ),mislead(-bar(-foo(ROWS) * destroy(( -destroy(( -TABLE[( ROWS )][--84] )) * ROWS ) * ( -dog + 1 ),-Ygritte - Stark - -46,Stark) / 7,bar(0.16),-y) - COLS),betray(( -y / ( protect(COLS,betray(foo(protect(( -1 ),-1),-86,Stark)),betray(( bar(-TABLE[Hodor][COLS - -destroy(TABLE[Arya][TABLE[protect() / TABLE[( -x )][foo(Stark,ROWS)] - bar(Arya,bar(ROWS,mislead()),( Ygritte )) + Jon][Ygritte]]) - protect(Jon,( Arya )) * 99]) ),Hodor)) ) ) + TABLE[610.41][-86],30)),-110.9268);
	if(410.5 / Hodor){
	x *= 0.55
} else {

}
}
} else {
	if(destroy(0.56,17)){
	74;
	( foo(-83,Hodor * -0.09,-1 + betray()) );
	Jon += --rule(( y / Hodor ))
} else {
	x -= -180.21;
	-betray()
}
}
} else {
	Stark /= COLS
};
	ROWS;
	TABLE[-( TABLE[Stark][( ( TABLE[destroy(mislead(-x),( Hodor ))][--TABLE[( -( -30 ) )][ROWS]] ) )] )][-dog + -49] / --( -COLS )
}
}
}
}
def betray(Jon,Jon,Stark){

}
assert -( -620.9229 ) : "One can not simply parse himself"
var Jon = y
var Ygritte = --( --0.11 / ( Ygritte ) )
assert --39 : "Nothing burns like the cold."
def TABLE[bar() + 0.13][j] {
	Arya -= Ygritte;
	Stark *= -0.65 - -1;
	Arya
}
var Sansa = foo() - foo(-ROWS)
def TABLE[rule(( 59 * ROWS ) * 270.766,dog,-10)][j] {
	Hodor *= ( ( ---x + Jon ) );
	Arya *= --Jon;
	if(-betray(TABLE[COLS * -rule(rule(destroy(-ROWS,rule(Stark))) + 99)][Hodor],( -0.06 )) + -0.16){
	Sansa;
	--30;
	if(-0.86){
	y -= 0.95
}
}
}
def foo(Arya,Stark,Stark){
	y -= -0.08;
	if(Stark){
	( ( 860.8 ) - destroy() )
}
}
def TABLE[Ygritte][j] {
	Jon -= ROWS;
	if(( betray(-0.27 + protect(-TABLE[protect(-foo(betray(TABLE[TABLE[0.75][TABLE[x][ROWS]] - 62 - TABLE[TABLE[-0.1][( ( Jon / y ) )]][x / TABLE[( -protect(-0.02,TABLE[-bar(-0.58 + ROWS)][Ygritte],ROWS) )][Stark - ( COLS + destroy(1,-670.45,ROWS) )] + TABLE[destroy(rule(bar(( Ygritte ),COLS) - COLS),---ROWS / TABLE[-Arya / destroy(-920.46,-45)][ROWS] + -( 950.784 - Ygritte / -330.6721 ),( ( --0.32 ) ))][TABLE[ROWS][-240.35]]]][( mislead() ) + -100.89 * -( Stark ) - y],-Arya / TABLE[-1][Sansa]),rule(COLS,92)),Ygritte)][Arya] + Hodor / ( bar(mislead()) ),-22)) + -1 )){
	52;
	if(TABLE[Hodor][-26 + ROWS]){
	Ygritte *= ( -0.04 );
	Jon /= Ygritte;
	Hodor
}
};
	x *= 1
}
var Stark = -9
var Ygritte = COLS
var Jon = ( Stark )
assert ( ( Jon ) ) : "Nothing burns like the cold."
var y = mislead(Jon,0.49,( -0.45 ))
def TABLE[( Stark / -850.72 )][k] {
	if(-0.87){
	if(COLS / ( -1 ) / dog + COLS){
	foo(-91,Hodor)
} else {
	Jon += Arya
}
};
	x /= 0.99;
	if(x){

} else {
	( protect(ROWS) )
}
}
assert -780.8468 : "Nothing burns like the cold."
def betray(){
	if(( COLS / COLS - -( betray(930.956 * ROWS + ( bar(Hodor) ),Ygritte,-29 * ( Ygritte )) ) - betray(Stark) ) - 0.52){
	y -= -x
} else {
	y *= Jon
};
	Stark
}
def destroy(dog){
	ROWS;
	-95
}
assert -( ROWS ) : "Nothing burns like the cold."
def betray(Arya,x){
	if(TABLE[foo()][rule(-( protect(COLS,Jon) * protect(( ( x + rule(-destroy(Ygritte - Stark * Ygritte,Sansa,Hodor),--1) ) )) ))]){
	if(foo(-940.9901,1)){

} else {
	if(COLS + COLS){
	Sansa
} else {
	if(0.7){
	Ygritte += ROWS
};
	TABLE[protect(ROWS,-0.74,110.94)][( ( ( Stark ) + ROWS / ( COLS + COLS ) ) )]
};
	x -= ROWS
};
	if(TABLE[94][--310.8082]){
	if(ROWS){

} else {

};
	-0.55;
	Arya *= Arya
} else {
	x -= -69;
	( Hodor )
};
	if(ROWS / Stark){
	mislead(( -ROWS ));
	if(-( y ) + ( Hodor )){
	if(1){
	if(-65){
	if(Jon){
	betray(-240.5801,( 0.23 ) + COLS)
};
	if(COLS){

}
} else {
	if(y * ( -7 )){
	( bar(y) )
};
	foo(destroy(),Hodor);
	-0.41
}
};
	Sansa /= 170.7
}
}
};
	Jon /= protect(betray(foo()),( betray(destroy(( betray(-53) ),foo(destroy(),COLS + 62))) ))
}
assert -foo(( Hodor )) + ( mislead(bar()) ) * bar(-1) - TABLE[( COLS ) + --Ygritte][Jon] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = betray()
assert TABLE[( 710.236 )][26] : "Nothing burns like the cold."
def TABLE[( COLS )][k] {
	x -= TABLE[Jon][x]
}
def TABLE[0.89][i] {
	y /= 0.04;
	y += COLS
}
var Stark = ROWS
def TABLE[COLS][i] {
	Jon -= Sansa;
	Ygritte *= ( COLS / ( ( ROWS ) + ( Arya ) * TABLE[TABLE[TABLE[COLS][COLS]][Hodor]][( -31 )] ) )
}
assert ( COLS ) + COLS : "Fear cuts deeper than swords."
def foo(){
	if(x){
	-1
} else {

};
	if(Sansa + -COLS){
	mislead(ROWS)
} else {
	y /= rule();
	dog /= Jon
}
}
var Stark = COLS / ( Ygritte )
def destroy(dog,Arya){
	if(bar(( ( ( -520.6 ) ) ),ROWS)){
	Jon *= y
};
	if(-71){
	y /= ( x );
	x -= x;
	if(bar(Arya)){
	( dog );
	Stark -= -COLS;
	Jon /= ( Arya ) + Hodor - -protect()
}
} else {
	if(rule()){
	y
};
	if(destroy()){
	Stark;
	( ( -Sansa ) + Hodor * COLS ) / 40
}
};
	if(protect(( ROWS ),Arya)){
	dog *= ( 1 ) * ( -800 * -( -1 ) );
	Jon *= ROWS * -1 - COLS + --protect(y,foo(( bar(ROWS) * ( protect(rule(bar(),x,240.579)) ) ),-Ygritte / -0.05),( ROWS )) - 0.65 + ROWS / Ygritte
}
}
def mislead(){
	if(70){
	Sansa -= Sansa
};
	x -= x
}
assert bar(foo(dog,rule(-1,Stark))) : "Winter is coming"
var Ygritte = -720.7
def TABLE[COLS][k] {

}
def TABLE[-350.385][j] {
	bar(Ygritte);
	dog -= ROWS
}
var Arya = dog
assert -rule(360.626,mislead(( destroy(Sansa,COLS) - rule(TABLE[COLS][ROWS],ROWS) ),x) - x) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = --bar(1,COLS,Jon) + ( ROWS )
var Sansa = dog
var Jon = Jon
def TABLE[-79][k] {
	Sansa;
	if(( ( 0.06 * -39 ) )){
	( dog / ( 1 ) * Ygritte );
	-rule(Stark) + -31 + 0.47 * protect(ROWS,TABLE[y - Stark][Arya])
}
}
def TABLE[x][j] {
	Sansa += TABLE[-0.82 / Ygritte][Hodor];
	( -33 );
	if(Arya){
	Jon -= rule();
	Stark += -destroy(TABLE[( ( ( -ROWS ) ) )][( -( 42 ) )],foo(( ROWS ),Stark))
}
}
var x = Hodor
assert -0.88 : "Nothing burns like the cold."
assert ( Jon ) - -900.2617 : "One can not simply parse himself"
def TABLE[y][j] {
	if(ROWS){

} else {
	-protect(foo() * betray(COLS - betray(ROWS,COLS,betray()) * foo(-800.4611,Jon),44));
	Stark /= ( Hodor );
	if(1){
	if(mislead(-0.98,--1,ROWS)){
	if(betray(dog)){
	protect(-COLS,( -dog ),ROWS);
	if(mislead()){
	if(0.41){
	-1
};
	if(( mislead(TABLE[dog][y],-0.53,-Hodor) )){
	betray(-1);
	if(COLS){

} else {
	if(-( ( ( -ROWS ) + 0.15 ) )){

};
	dog
};
	( -48 / foo(COLS) )
} else {
	( Ygritte );
	ROWS
};
	Ygritte *= COLS
} else {
	Arya += Ygritte;
	if(ROWS){
	x *= Ygritte
} else {

};
	Stark -= COLS
}
}
};
	Jon -= -77;
	( Sansa )
}
}
}
assert ( dog ) - TABLE[foo(-ROWS,Hodor + foo(( mislead(COLS,Arya) )))][-1] : "Nothing burns like the cold."
var Arya = -0.37
def destroy(x){
	if(( COLS )){
	y /= Stark;
	Stark += destroy(-mislead(y,( ( rule(COLS,0.64) ) - TABLE[bar()][ROWS] + -( y ) ),mislead(Sansa) / ( -Sansa ) + ROWS) - -400.362,( ROWS ) - COLS * dog) / ( rule(( Stark )) );
	if(-----( 0.93 ) + x){

} else {
	if(x){
	if(-COLS){
	---33
}
} else {
	if(ROWS){
	destroy(( x ))
};
	if(Sansa * --0.21){

} else {
	--foo() / ROWS
};
	y /= 53
};
	Ygritte /= protect(-580.1,foo(-980.484,-Ygritte))
}
};
	if(--67 + Ygritte){
	Ygritte
}
}
assert mislead(-61,( ( rule() ) )) : "What do we say to the Lord of Death?"
assert -0.57 : "Winter is coming"
def TABLE[( 670.7 )][j] {
	if(( -36 )){
	Arya *= -0.87 / ROWS
};
	if(bar(-mislead(Hodor))){
	Arya += Ygritte
} else {
	-bar(rule(1,45));
	if(foo(rule(( mislead(ROWS,74,TABLE[COLS][ROWS]) ),-TABLE[66][COLS]))){
	if(( -0.54 )){

};
	-0.8
} else {
	if(bar()){
	( -COLS ) * --Ygritte;
	Hodor
};
	--0.65
};
	Jon -= mislead(bar(y),rule(destroy(),550.4482,COLS))
};
	if(Ygritte){
	if(( COLS )){

} else {
	Ygritte -= Stark;
	COLS - betray()
};
	TABLE[betray(( dog ),COLS,-0.71)][ROWS * betray(-1 / x,TABLE[-1][ROWS],-( COLS ) - TABLE[-dog + ( -ROWS ) / protect(Hodor,( Jon ))][( 0.55 )])] - -ROWS
}
}
var Stark = ( mislead(COLS * Ygritte) * ( ( -0.16 ) ) )
assert -0.84 - Sansa : "Fear cuts deeper than swords."
def protect(dog){
	if(Hodor * COLS){
	Ygritte /= ( dog )
};
	-foo()
}
assert -1 + foo(Sansa,Sansa) + ROWS * ( COLS ) : "Nothing burns like the cold."
def TABLE[( ( COLS ) )][j] {
	-Arya * Arya
}
def destroy(Sansa){
	destroy(protect(( --0.72 ),ROWS),protect(-Arya));
	if(dog){

} else {
	if(bar(COLS * ROWS,( -( ---430.9 ) / x * ( -0.2 ) )) * TABLE[( TABLE[Ygritte][26] )][x]){

}
}
}
var Hodor = x
def TABLE[-130.733][j] {
	Sansa;
	if(( ( y ) )){

} else {
	Ygritte /= TABLE[---5][( COLS ) * ( bar(x,bar(rule(( COLS ),mislead(COLS,--1 + betray(y) + -( betray(TABLE[betray(ROWS,Hodor)][Stark + ( COLS ) * ( ( ( COLS ) ) ) * ( TABLE[x][destroy()] )],( ---60 )) + ( -bar(ROWS,bar(TABLE[Stark][( 300.4722 )]),---0.75) ) ) * -0))),-0.77) )]
}
}
def TABLE[-Ygritte][k] {
	if(( 190.61 )){
	dog += -( TABLE[rule() + Stark + foo(ROWS - ( TABLE[93][0.02] ) - COLS + ROWS) - COLS][Ygritte / bar(-Ygritte + COLS - -76,( 0.21 ))] );
	--( -rule(mislead(-COLS),COLS) + ( ( 21 ) - COLS ) - -Ygritte - -280.7846 + ( rule(betray(--ROWS,-1,mislead()),( mislead(destroy(),destroy(-Sansa + --dog * Sansa + 35 + betray(-640.77,( ROWS )),0.94),--55) )) ) * bar(Sansa,( protect(COLS) )) + foo(Jon) ) + TABLE[-( Sansa ) * ( ( ROWS ) + x )][Sansa]
}
}
def betray(Ygritte){

}
def betray(dog){
	betray(( TABLE[( -49 )][COLS] ) - TABLE[COLS][rule()],0.89,protect(( betray(dog,destroy(-20 - COLS,-foo(COLS)),TABLE[( TABLE[63][( rule(-( 16 - ---Stark / -COLS * COLS ),Stark) )] - ( -35 ) )][COLS]) * rule(62 + bar(( 0.42 )),destroy(0.49,-0.23 - y,COLS * bar(y,COLS) * Hodor - x - protect(y,Arya) / betray(( -( -( ( -mislead(--( TABLE[-0.38][Jon * COLS / Ygritte / TABLE[x / ( ROWS )][0.51]] ) - TABLE[--1][ROWS]) ) ) ) ),ROWS,Arya))) / 1 )));
	COLS
}
def TABLE[---910.414 + -TABLE[destroy(--45 * 360.776,Stark,Hodor + ( TABLE[Arya][Arya] ))][-( COLS ) * ROWS]][i] {
	if(Hodor){
	Jon += x;
	if(COLS){
	-rule(1,ROWS,protect(COLS,( 1 * y )));
	Hodor -= 0.97 + -0.2
}
}
}
def mislead(Hodor){
	if(Stark){
	if(-0.07){
	-rule(Ygritte,0.71,-1)
}
};
	Arya *= x;
	if(Ygritte - COLS){
	Jon;
	( ( TABLE[betray(ROWS,bar(900.402))][( --20 ) - ( ( destroy(destroy(( Jon ),x,betray(--120.144 - -COLS + -0.38))) ) )] ) )
} else {

}
}
assert ( ( ( -0.7 ) ) ) : "What do we say to the Lord of Death?"
var Ygritte = betray()
var Jon = -Jon
var Ygritte = ( ( ROWS ) )
assert TABLE[Jon][0.69] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = ( 0.73 )
def bar(y,Jon,Arya){
	Hodor += ( -0.87 ) * ( -( ( -COLS + -destroy(140.75,( ( -1 ) )) + x ) * x + COLS ) );
	if(--( TABLE[Sansa][Arya] ) - rule(bar(Stark),ROWS,ROWS)){
	betray(( betray(630.94,( TABLE[-destroy()][-0.56] )) ),( COLS ),( Jon ))
};
	-ROWS / ( -( ROWS ) )
}
var y = Ygritte
assert x : "Nothing burns like the cold."
var y = -Jon - --foo(30,COLS)
def protect(){
	Sansa /= COLS;
	ROWS * ( Arya )
}
assert 79 : "Nothing burns like the cold."
var x = ( bar() )
def destroy(Arya,y,Hodor){
	Jon /= betray(---Arya / -( Hodor )) / Ygritte / 25
}
def TABLE[86][k] {
	-0.57;
	if(ROWS){

}
}
def mislead(Ygritte){
	Ygritte *= destroy(destroy(( -bar(betray(0.1,( Hodor ))) ),COLS),-400.008);
	if(-betray(Jon)){
	if(dog){

};
	Hodor *= COLS;
	x *= foo(1,COLS,( ( -destroy() ) )) + rule(foo(TABLE[-71][-destroy(-Hodor / -mislead(-TABLE[( -rule(-( dog ),---COLS) )][--0.19 + rule()] * mislead(),bar(ROWS,-1,76),57) / bar() - -betray(COLS - y,--1,protect(Stark,-COLS)) - -Hodor,-ROWS)],Ygritte),COLS)
} else {
	if(( Sansa ) * Jon){
	Sansa
} else {
	( ( Sansa ) - TABLE[destroy()][mislead(-0.21)] );
	( dog )
};
	Ygritte
};
	Hodor
}
def destroy(Stark,y){

}
var Jon = --13
def protect(){
	if(--( TABLE[rule(( destroy(Stark,-COLS - ROWS) * COLS ),-( --protect(mislead(( -Sansa ))) ) * -0.24 * 1,Sansa / ( ( ROWS + 0.07 ) ) - COLS + ( ( -( foo(( Hodor )) ) ) ) * Ygritte)][protect(( COLS ))] ) * -dog / --rule(TABLE[-( destroy(( x / x / ( -24 ) ) - ( dog ),y) ) + y / Arya][( y )])){
	----( betray(COLS) ) / Arya * ROWS;
	Hodor -= Jon / ROWS
}
}
assert --1 * -( ROWS ) + TABLE[TABLE[-0.55][--dog]][COLS] : "Fear cuts deeper than swords."
assert destroy(TABLE[protect(( 0.88 ),-destroy(( rule(( ( COLS ) ),ROWS,( ( Jon ) ) - ( ( foo() ) )) )) + foo(dog,( 37 ),protect()))][ROWS],950.46,-1) : "What do we say to the Lord of Death?"
def TABLE[-( ( ( 0.17 ) ) )][i] {
	Stark -= -protect(-0.55,( ROWS / x ),Jon - 2) + 11;
	if(TABLE[( -ROWS )][230.24]){

} else {
	-740.6;
	Ygritte /= -1;
	if(TABLE[( -bar(y,Stark) )][Ygritte] * COLS){
	-40;
	if(--ROWS + rule(betray(COLS,TABLE[protect(--0.7 * dog / ( -COLS ))][ROWS],98),x)){
	Stark -= COLS;
	0.24
}
}
}
}
def TABLE[destroy(--80 - foo(bar(destroy(bar(),protect(Stark,y,ROWS)) + -( 0.04 + 1 ),Hodor) / 72))][k] {
	-Jon
}
def destroy(Sansa){

}
def rule(Jon){
	if(COLS){
	-( ( foo(TABLE[Sansa][( --TABLE[mislead(15,--TABLE[19][x - rule()] - -0.72,( -foo() )) * -Stark + -TABLE[-1 / ( 540.625 ) + destroy()][COLS] - TABLE[x][destroy(COLS)] / TABLE[-dog][-0.23]][-0.42] )]) ) );
	( -bar(Arya) )
} else {
	Sansa -= Ygritte
};
	Stark += -Hodor;
	if(foo()){
	y /= dog * Stark;
	Stark *= -TABLE[38][Ygritte] * TABLE[( COLS ) * Ygritte / -0.76][ROWS] * Sansa
} else {
	y /= rule(Sansa)
}
}
def destroy(Sansa,Sansa,Ygritte){
	foo(TABLE[x][Jon - -ROWS / ( TABLE[dog][( mislead() )] )])
}
def bar(Arya){
	Stark *= 1
}
def rule(){
	rule(0.02 - -94,y + ROWS * betray(ROWS));
	if(COLS){
	Sansa *= mislead(26,-COLS,-( bar(-destroy(-1)) ) + TABLE[betray(-protect(--0.37 + ( ( TABLE[protect(destroy(TABLE[-( x ) + Hodor][Hodor],COLS),( COLS * Sansa ))][TABLE[---0.08 / foo(-9,Jon,-Jon + -65 * ( -Jon ))][0.6]] ) ),--( Stark ) - -45 / rule(ROWS) - ( ( rule() ) + -( COLS ) ),-( COLS )))][dog])
};
	Stark / 0.13
}
def TABLE[( Hodor )][k] {
	290.0296 * ( ( ( -0.83 ) ) )
}
var x = TABLE[Sansa][-( --0.24 + Arya )]
def TABLE[betray(x,TABLE[Hodor / ( -30 )][Stark])][k] {

}
def TABLE[protect(-30.63 - x * ROWS)][i] {
	( --10 - Stark + dog )
}
var Ygritte = ( -1 )
assert bar(Sansa * ( -35 ),-y,-58) : "Winter is coming"
var Stark = -ROWS
def mislead(Jon){

}
assert 0.52 : "Fear cuts deeper than swords."
def rule(Jon){
	Arya *= Stark
}
assert mislead() / -1 : "Fear cuts deeper than swords."
def TABLE[Hodor * ( ROWS ) + ( ---mislead(betray(mislead(protect(protect(-1,TABLE[--0.61][610.3868]),( -Sansa )),x),1) + -( Sansa ),y,ROWS) ) + 96][j] {
	destroy(1,-mislead(ROWS))
}
def betray(y){
	Hodor += ( TABLE[-96][TABLE[-37][-3 / -0.31 * dog]] ) / --660.8 + rule(( protect(bar(-COLS),( TABLE[( TABLE[Ygritte][( Stark )] )][bar(( COLS + foo(80.67) + dog ))] )) )) * ROWS / x - mislead(-foo(-0.61,( 17 )),-destroy(betray(-TABLE[-52][Ygritte],dog),TABLE[--TABLE[( ( ROWS ) )][1 * bar(520.926)]][mislead(( betray(x,Sansa * ( -TABLE[( ROWS * COLS )][dog] ),betray(rule(),( COLS ) + Ygritte * betray(-0.63,protect(foo(x / foo(Jon,( Hodor )) + Stark / Hodor,( x )))) / -destroy(TABLE[-( ROWS )][mislead(-( protect(TABLE[rule(-bar(TABLE[TABLE[-( ( ROWS ) ) * Sansa][-Sansa]][Stark],x))][Stark],( COLS ) * TABLE[( Hodor ) - Arya][Jon * y]) ))] / ( ( bar(-dog,--57 * Ygritte + ROWS) ) - -Stark )))) ),0.24) * TABLE[Arya][x]]))
}
def TABLE[ROWS][i] {

}
assert Stark : "One can not simply parse himself"
assert ROWS : "Nothing burns like the cold."
def TABLE[-0.54][i] {
	TABLE[Sansa][bar(--43 + ROWS + TABLE[-0.93][Jon],-COLS,Ygritte)] - -bar(( Ygritte ),foo(betray(dog,24) + --bar(-( COLS ))),ROWS);
	Stark *= ROWS
}
assert foo(-COLS,( ROWS + betray() )) : "Fear cuts deeper than swords."
def destroy(){
	if(29){
	--1;
	Jon *= protect(protect(foo(0.69),58,-destroy()),Stark)
} else {
	( Stark )
}
}
def TABLE[TABLE[TABLE[COLS / Sansa][( -1 )]][ROWS]][k] {

}
var Hodor = -mislead(COLS)
def TABLE[( ( ( TABLE[Arya][rule(63)] ) ) ) / TABLE[-destroy(rule(1,x))][betray(COLS,83)]][k] {
	if(-Arya){
	COLS - ( -0.1 ) + -0.4;
	( -Hodor )
}
}
assert TABLE[-79][320.3] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[1][j] {
	if(COLS / mislead(( TABLE[( -protect(--TABLE[mislead(Ygritte)][y] / -( --TABLE[13][y] * ROWS )) - ( -( ( -47 ) ) ) )][--( ( --x - TABLE[-Stark][ROWS] ) + foo() ) * ( betray(COLS,mislead(),ROWS - COLS + ROWS * bar(Stark,( COLS )) + Ygritte) )] ),rule())){
	Ygritte *= ( ( 1 ) ) * ( x ) - Arya - betray(Hodor,( -TABLE[-Sansa][x] )) / 290.046
} else {
	Sansa *= mislead(Stark)
}
}
def protect(dog){
	y /= 0.94;
	0.11 * ROWS
}
def mislead(){
	Hodor;
	Stark
}
assert destroy() : "Winter is coming"
assert -0.58 : "Nothing burns like the cold."
assert -0.77 : "What do we say to the Lord of Death?"
assert TABLE[Ygritte][-1] : "What do we say to the Lord of Death?"
var Hodor = betray(-TABLE[TABLE[dog][( dog )] / -----Arya][-69],Sansa - Stark)
assert -destroy(TABLE[foo(0.26,Ygritte)][0.04]) + dog / -COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = 1
var Ygritte = 0.11
def TABLE[y][i] {
	x
}
var Sansa = 0.43
var dog = TABLE[COLS / mislead(COLS,x)][-TABLE[1][0.46] - y] - -( -0.32 )
def rule(x,Stark){

}
def destroy(x,Ygritte){
	Sansa;
	0.03
}
def mislead(Ygritte){
	if(--1 - COLS){

};
	-0.41
}
def TABLE[87][i] {
	y *= protect(-420.877,bar(),Jon)
}
def protect(Ygritte,Jon){

}
assert ( ROWS ) : "One can not simply parse himself"
def betray(Jon,Sansa){
	7;
	Hodor /= --1
}
var Jon = y
def TABLE[betray(ROWS,ROWS,x - --0.17 + ( Jon ) / ROWS / foo() - --ROWS)][i] {

}
assert -520.17 : "What do we say to the Lord of Death?"
assert 1 : "One can not simply parse himself"
var Stark = ( 1 + foo(foo(),TABLE[Ygritte][foo(( bar(COLS + 0.34,Jon + -40 + Sansa * ( betray(0.63,0.59) )) + -1 ))]) + -0.8 - -Jon )
def destroy(Arya){
	Stark *= ( bar(foo()) );
	if(( COLS )){
	Stark;
	COLS
} else {
	-mislead(250.8);
	-0.04 - mislead(( 20 ))
}
}
def TABLE[protect(mislead(Stark,ROWS,360.4009),ROWS,40.4)][k] {
	if(-34){
	if(betray()){
	if(( -1 )){
	if(( foo(betray(( TABLE[Ygritte][-Ygritte * -rule(-14,-bar(COLS,1,-Jon),330.811 * ROWS)] )),destroy(Ygritte,ROWS) / --61,TABLE[( COLS )][--1]) )){
	if(TABLE[protect()][mislead(-96,-mislead(-1) - Jon)]){
	if(-TABLE[-1][( x )]){

} else {
	TABLE[1][Hodor] * ROWS
}
} else {
	bar(Hodor,-( -Arya + COLS ),-92)
}
};
	if(TABLE[-0.59][-0.21]){
	if(TABLE[( protect(destroy(--Hodor * ( Hodor ) - 880.65,-( TABLE[-0.79][( ( destroy(TABLE[foo(bar(),COLS - dog)][rule(-protect() / betray(Hodor) / TABLE[COLS][rule(75 / Stark - betray(44) * TABLE[0.52][destroy(ROWS,COLS)] + ROWS + dog)] - COLS,( foo() ),( COLS ))] * ( bar(x) ),( --1 )) ) )] ) + COLS)) )][betray(y,-COLS)] * Arya){
	if(foo()){
	if(-( -TABLE[rule()][-1] )){
	( 700.483 );
	betray(10)
};
	if(--53){
	dog;
	if(rule(-( ( COLS ) )) + ( ( COLS ) )){
	y /= COLS;
	Arya -= ( ( bar() ) );
	destroy(-28,-Arya) - ( Stark ) / ROWS - -( betray(--1 + mislead(destroy()),Ygritte,bar(COLS,x)) )
} else {
	Sansa;
	Ygritte *= ( ROWS );
	( y )
}
} else {
	-destroy(ROWS,16 + bar() / ( TABLE[( 310.7403 * Hodor )][0.47] )) / y
};
	if(( Arya )){
	COLS
} else {
	( Jon );
	y += y
}
};
	ROWS;
	dog += COLS
}
} else {
	( ( Sansa ) );
	Arya += TABLE[TABLE[Ygritte][dog]][Arya]
}
} else {
	( -TABLE[COLS][-34] + -9 - dog )
};
	( --Sansa ) / TABLE[-93][COLS]
} else {
	if(( 55 )){
	if(-destroy(---0.75 + -1 - ( -51 ),dog + protect(-( -1 )),protect(-TABLE[COLS][-0.41],betray(x)))){

} else {
	Ygritte -= dog;
	Hodor /= 1
};
	COLS;
	if(Hodor){
	Stark / -TABLE[COLS][-TABLE[Arya][-70.421]] - -rule();
	if(-0.83){

} else {
	Stark;
	Ygritte *= Ygritte;
	if(bar(Sansa)){
	destroy(Hodor,Jon);
	----1 + TABLE[-64 - ( ROWS ) - -0.69][( -( Sansa ) * y - 50 )]
}
};
	( foo(y,rule()) )
} else {

}
} else {
	if(( Hodor )){
	Hodor;
	if(foo(Sansa,( bar(destroy(( mislead(bar(betray(bar()))) ),betray())) ),-( bar(( -TABLE[TABLE[Stark][Sansa]][foo()] ),TABLE[-4][-1 / ( ( y ) ) / --( Arya ) - -0.74]) ))){
	if(ROWS - COLS){
	Hodor -= -190.1;
	if(94){
	betray(( ROWS ));
	Hodor /= Arya * Sansa
}
};
	if(-( mislead() ) + COLS){
	-COLS + ( -( y ) ) + -rule(-590.9) / ( COLS );
	Sansa -= mislead(81)
} else {
	-1
}
}
} else {
	if(( COLS )){
	Sansa /= 0.41 / ( ( -Stark ) )
};
	if(-1){
	-0.49;
	x *= TABLE[14][( 1 )]
}
};
	if(0.28){
	rule(-( ( bar() ) ),-72) - -( -16 ) + -62 / ( TABLE[destroy(-260.735)][COLS] + COLS )
} else {
	TABLE[Stark][bar() + y];
	1 - foo()
}
};
	Ygritte *= -0.1
};
	if(COLS){
	if(( -COLS )){
	if(-foo(---760.9076,-protect(COLS) * ROWS)){
	Ygritte += -Hodor;
	if(ROWS){
	Hodor / Jon - ( -( x ) );
	if(foo()){
	if(-Sansa){
	if(-foo()){

} else {
	if(ROWS){
	if(mislead(Hodor,69) / ROWS){
	( ( Stark ) / ( -1 ) );
	Jon /= ROWS
} else {
	--TABLE[-Hodor + COLS - Arya][-bar(-( -850.343 ),--( ( mislead(protect(TABLE[COLS][ROWS * -destroy(protect(Ygritte,TABLE[Hodor][ROWS],( TABLE[( -46 )][destroy(bar(rule(ROWS,--95) / 0.89))] )) + ( ( -protect(( -320.4115 )) ) ))],mislead(( ( Jon ) ),1,Sansa)) / -32 / -x,( -Hodor / TABLE[protect(COLS,Hodor)][-1] + ( foo(COLS,protect(rule(),( Jon ))) ) ),-0.89) ) ),betray())];
	mislead(TABLE[0.11][Ygritte],( ROWS ),790.72)
};
	if(( bar(y,-rule(Jon,rule(-99,-TABLE[Jon][TABLE[( rule() )][( TABLE[-ROWS][TABLE[--COLS][ROWS]] )]]))) / bar() )){
	ROWS * ( betray(Arya,ROWS) );
	Sansa += ROWS;
	if(39){
	x /= 27;
	if(---( 39 )){
	( betray() )
}
} else {
	Arya *= -370.735 / ( ROWS - Sansa )
}
}
} else {
	ROWS
}
}
} else {

}
}
}
}
} else {
	y -= Sansa
};
	Jon *= -Hodor;
	-( 0.07 - -( ( -betray(-50,bar(-Ygritte,( 970.798 ),( -35 ))) + -COLS / 0.35 ) + ROWS + foo(--TABLE[Jon][Sansa],ROWS) - dog + dog ) * mislead(ROWS,TABLE[-80][( Jon )]) ) / betray(15 / COLS,TABLE[Ygritte][COLS],rule(( -48 - --( -95 ) * -1 ))) * Stark + mislead(mislead(),( -0.87 ),betray(COLS))
};
	if(( ROWS )){

}
}
}
def rule(Ygritte){

}
def TABLE[dog][j] {
	if(Hodor){
	COLS;
	if(Sansa){
	--52;
	Sansa += Arya;
	86
};
	if(TABLE[x * 0.86][( COLS )] - bar(-Arya)){
	Sansa /= ( -( ( -Arya ) ) );
	Hodor
}
} else {
	x += -81 + Stark;
	Hodor += 1
}
}
var Hodor = ( -( ( rule(betray(dog / rule(-TABLE[-1][betray(( ROWS ))],-0.72)),-0.33,ROWS) ) + COLS / TABLE[COLS][mislead(( Sansa ),Jon,Ygritte)] + betray(( -Stark )) * TABLE[betray() + -( destroy(-12 * -COLS / dog * --0.96 - Sansa) )][Hodor] + ROWS / ( ( TABLE[( betray(betray(-Ygritte * dog + dog * -1,protect()) / 61,-560.138 * bar(TABLE[COLS][( -Ygritte * ( 93 ) )],protect(TABLE[( COLS )][Ygritte],TABLE[0.01][-dog * ( x )],protect(( -( ( TABLE[( protect(protect(),1) )][bar(-58,-320.617)] ) ) ),37))) + COLS,Hodor) / Hodor )][bar(-38,bar(bar(ROWS) + betray(( ( Jon ) ),-ROWS,-ROWS / Jon - ( 53 )) + Arya))] ) ) ) * ROWS / -1 )
assert ( 0.63 ) : "One can not simply parse himself"
def TABLE[betray(( Jon * betray(-mislead(foo(Arya + TABLE[betray()][( Stark * Arya )] / 0.34,Stark),TABLE[dog][-ROWS]) * betray(( rule() ),-74),( ROWS ),Sansa) ))][i] {
	COLS
}
var Ygritte = ( rule(-720.414,betray(x,COLS - -ROWS - ( -destroy(270.5 / betray(mislead(0.77,--COLS) - -1,-TABLE[-( -94 )][Jon])) ),mislead(-Sansa * ROWS / rule(290.197,( ( Sansa ) + --10.555 ),Hodor)) - COLS * ( destroy(protect(),0.96,TABLE[-1][x]) ))) / ( Ygritte ) ) * dog
def TABLE[--COLS][j] {
	if(ROWS / x){
	if(( Stark )){
	if(destroy(ROWS,0.84 * ( Sansa ) + -( -230.39 ) / -0.93 * -1) - 0.55 - ( protect(( 79 ),( Sansa * COLS ),-9) )){
	if(Stark){
	if(Ygritte){
	if(protect(destroy(1,-bar()) + -38,1 / ( ROWS ) + ROWS,( -dog ))){
	Hodor /= ROWS - -betray(-46,mislead(-0.69,TABLE[COLS][Sansa]));
	Sansa *= betray(COLS,-11)
}
} else {
	Ygritte += TABLE[destroy(-55,COLS) + -foo()][--6 / destroy()];
	Ygritte -= ( 0.51 )
};
	if(COLS){
	Hodor *= Arya
} else {
	Jon -= COLS
}
};
	( Arya )
} else {
	y += TABLE[ROWS][-85];
	if(500.75){
	COLS;
	dog /= destroy()
} else {
	Hodor *= betray(Jon / --1,--( mislead(y,60,mislead(-0.74 + ( betray(COLS,-( TABLE[( -( 0.22 ) * destroy() )][87] )) ))) ));
	if(ROWS / ( 490.676 )){
	x *= ( Ygritte ) * Stark
} else {
	if(x){
	( Ygritte );
	Hodor *= rule(Sansa,foo(( -rule() + -ROWS ),ROWS / Stark,( ( ( -58 ) ) )))
} else {
	if(mislead(-ROWS,-TABLE[destroy(( 0.17 ))][destroy(TABLE[Sansa][( 1 )] / ( foo(-dog,protect(rule())) ),( 1 ))],COLS)){
	dog /= betray(( mislead(foo(),ROWS) ) * 0.4,ROWS)
};
	Jon /= destroy(dog,-y + TABLE[( -TABLE[destroy(TABLE[betray(TABLE[-protect(-x,ROWS)][protect(-180.116) + foo(( -rule(0.2,0.27) ))])][dog],-x)][-1] * betray(COLS,TABLE[( TABLE[COLS][( -46 )] )][12 / COLS]) )][Jon],-COLS * -y + Hodor + --62)
}
}
}
}
} else {

}
};
	if(( foo(5,x,1) )){
	foo(-( Hodor ));
	if(COLS){
	destroy(bar(ROWS * --72),destroy());
	Jon -= ( -( -1 ) ) + 840.365 - -Ygritte
} else {
	-bar(ROWS)
};
	if(( y )){
	( betray(Ygritte,( -protect(--( bar() )) )) ) + 1
}
}
}
def betray(Sansa){
	-Jon
}
assert mislead(( -COLS )) - -1 : "What do we say to the Lord of Death?"
def TABLE[ROWS - ( mislead(-rule(),Jon) )][k] {
	dog /= COLS
}
var Jon = -0.15
var y = 0.71
var y = Jon
def TABLE[TABLE[dog][-25]][k] {
	if(Ygritte){
	if(67){
	if(Ygritte){
	Jon /= ROWS;
	protect(-( 0.23 ),Arya) - Arya
}
}
};
	if(COLS){
	dog /= -destroy(-5);
	if(1){
	Hodor /= ---COLS + --Ygritte * -81;
	Stark
}
} else {
	COLS
};
	if(Sansa){
	if(-( rule(ROWS) )){

} else {
	-0.37;
	if(-( protect(Jon,-( --protect(( dog ),-68,destroy(ROWS,foo(190.53,-0.25),ROWS)) + ( -0.58 ) )) + COLS / Hodor )){
	Hodor -= mislead(TABLE[-0.18][mislead(( ( -bar(ROWS) ) ) * COLS,31)],protect(( Ygritte / COLS )))
} else {

}
};
	( TABLE[0.53][-0.24] );
	if(dog / 0.57){
	Sansa -= -690.6;
	bar(ROWS,-0.44)
}
}
}
assert -600.17 : "Nothing burns like the cold."
var x = ( y )
def destroy(Jon,y){

}
def TABLE[-0.36][k] {

}
var Stark = -0.47
assert -47 - COLS - ---( --mislead(-550.799,( --mislead(( foo() )) * Ygritte * ( -1 ) ),( bar(TABLE[--y][-79] * mislead() * -270.504) )) ) * protect(-( -Stark * ( COLS ) * x )) * Hodor : "One can not simply parse himself"
assert TABLE[COLS][-Stark] : "One can not simply parse himself"
def protect(Hodor){
	if(-( Arya / foo(-1) )){
	if(Ygritte - -COLS){
	0.58 + foo(destroy(),-250.97);
	ROWS - mislead() + ROWS
};
	if(betray(TABLE[protect(x,destroy(Arya) * TABLE[COLS][20 / -Stark]) * TABLE[-COLS][( TABLE[-COLS][Hodor] )]][foo(TABLE[( ( bar(COLS) ) )][( ( TABLE[destroy(150.769)][( 0.65 + dog )] ) )])])){
	dog -= ROWS
}
}
}
def destroy(Stark,Jon){
	if(( ROWS )){
	( dog - destroy(TABLE[1][--destroy(y) / -Arya / ( COLS ) * -rule() + Ygritte],rule(--foo(( ( -ROWS ) / -( ( -0.92 ) ) ) - foo(TABLE[-64][rule(ROWS,protect(),-82)]) - 0.69))) )
} else {
	if(98){

} else {
	if(protect(mislead(( ( -1 ) )),Hodor)){
	5
} else {
	dog *= -bar(y)
};
	-45
};
	if(-1){
	TABLE[TABLE[Jon][--Jon - betray(-ROWS,Arya,( ( ( ( ROWS ) ) ) ) - -0.4)] * -20][17] / -14 + ( Stark );
	TABLE[ROWS][dog]
};
	rule()
}
}
assert -destroy() - y : "Fear cuts deeper than swords."
def TABLE[foo(-0.37 / -COLS * ( ( -47 ) ) + ( destroy(TABLE[protect(ROWS,dog,COLS) / ( --80.059 )][destroy(Jon,ROWS / ( ( destroy(TABLE[( 1 )][( mislead() )],Hodor / protect(COLS / ( ( ( COLS ) ) ),-dog,( COLS )),destroy(( -ROWS ),0.35)) ) ) + -foo(TABLE[Ygritte][TABLE[-ROWS][-0.15]],-35),bar())],ROWS,( -55 + bar(-33) + -3 )) / -dog ) + foo(0.92)) + Hodor / y * ROWS - protect(-ROWS - betray(foo())) * Ygritte / ( ( ROWS ) )][i] {
	if(Hodor){
	if(-63 - ( protect() + ( -( COLS ) / x / Ygritte ) )){
	-76
};
	Ygritte -= COLS
};
	Hodor *= -protect(-0.25)
}
var dog = TABLE[ROWS][-ROWS]
def TABLE[( 58 )][i] {
	protect(Stark,mislead(TABLE[-0.81][Hodor] + -destroy(Sansa) / ( ( x ) ) - ROWS * ( ( -( TABLE[mislead(-480.77,TABLE[-0.09][foo(COLS / rule(Jon,750.33))])][-COLS] ) ) ) * ( -ROWS ),( ROWS ))) / ( 86 ) + 31
}
assert -Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = ( 43 * -450.44 )
assert foo(ROWS,y,-0.46) : "Nothing burns like the cold."
assert ( rule(( ----0.31 / Ygritte ),destroy(destroy(ROWS,--1 + 0.39 / --rule(-bar(-1),-destroy(( -( -foo(( TABLE[--43 - COLS][TABLE[y][-57]] )) + COLS ) ),( ( Hodor ) )) + foo())),TABLE[( -36 )][--( -78 )]),ROWS * -rule() * -52) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = foo(protect(6),COLS / ( -ROWS + ( ( destroy(--( TABLE[foo(TABLE[betray(Stark)][( ROWS )],--1 - ( rule() ),--TABLE[-0.05][Hodor]) / Arya][x] ),0.03) ) ) ))
assert foo() : "Winter is coming"
var y = -( ROWS )
def TABLE[Stark][i] {
	Sansa += mislead()
}
def foo(Jon,Jon){
	protect(-dog,-Sansa) - --0.33 * -foo(-67,Arya) - protect(y) * ---COLS;
	( 1 ) / dog;
	Arya -= rule(-50) - COLS * rule(--COLS)
}
def foo(Hodor){

}
assert -83 : "What do we say to the Lord of Death?"
def foo(dog,x){
	if(Ygritte){
	if(protect(( ( COLS ) / ROWS ) / -0.16,( COLS ))){
	if(( ( -( bar() ) + --0.38 ) )){
	if(( Ygritte )){

};
	ROWS
} else {
	COLS;
	if(betray(( x ))){
	y
}
};
	Sansa
};
	if(y){
	ROWS
} else {
	if(ROWS - protect(-1,-0.92,--0.76) * TABLE[COLS + ( ( -foo(280.946,TABLE[0.9][x]) ) )][TABLE[( foo(foo(120.5),Hodor,COLS) )][-ROWS]]){
	if(Arya){
	Sansa /= ( ( Arya ) );
	if(dog){
	if(37){
	if(( ( --dog - 0.89 ) )){
	if(foo(COLS * Ygritte,COLS)){
	if(rule(--( 0.22 ) * 0.83,-( betray(betray(Stark,-x,bar(bar(destroy(( -betray(TABLE[protect(-5)][COLS]) ),COLS)),0.73)),protect(( -1 - COLS - Arya - ( protect() ) / y ),( ( 11 ) )),( ( foo(Sansa + 0.57,betray(protect()),Ygritte) ) )) ),Sansa)){
	ROWS;
	if(33){
	Arya += -TABLE[Hodor][( x )] / ( 16 ) / 22 * -7 - destroy(COLS,15 + ( betray(y - ( -49 * -bar(( ( TABLE[Hodor][destroy(( -1 ),rule(betray(-rule(-0.26)),TABLE[-TABLE[-foo() + Stark - ( ( Ygritte ) ) - -( ( ( protect(-betray(dog + -63 / Stark / COLS,( ( destroy(mislead(x,-44),-destroy(mislead(),y + -betray(( foo(--TABLE[COLS][-foo(mislead(Stark),( destroy(-destroy(destroy(-mislead(Jon - -( 99 ))),Hodor),destroy(foo(x,ROWS * -( Hodor ) / rule(( TABLE[( Jon ) + TABLE[x][betray()]][150.2] ))),-0.33) - -0.52) ),dog)]) + -( mislead(-( TABLE[-0.12][( betray(y - -dog) )] )) ) / mislead(0.87,-180.4) / 23 )),ROWS) * foo(rule(COLS),( -Hodor ),bar(( Hodor )) / bar(-64 + Sansa - destroy(Ygritte * -( ( --210.186 ) ),( --x / Sansa ),Sansa) - ( foo() ),COLS,Arya)),( protect(Stark,rule()) )) ) )) / foo(--( -36 ),ROWS,protect(Hodor,( Ygritte ))),-650.7239) ) ) ) * Arya - COLS + ( COLS )][-x]][-1] - Jon + ( --( Stark ) )))] + betray() * Sansa ) ),( foo() ),( ROWS )) / ( ( y ) ) * TABLE[ROWS][Ygritte] ) / ( Sansa + -0.83 ),destroy()) ) - TABLE[Sansa][Ygritte + TABLE[dog][-betray(-( 670.1154 ) / Hodor)] * COLS]) + -ROWS + -13 / bar(-TABLE[y][protect(-( 120.156 ),-1 - mislead(Hodor - COLS),( ( protect(50,y - -43,ROWS) ) ) + ( ( ( -( -x + ( destroy() ) * ( ( ( 0.68 ) * ROWS ) ) ) ) ) + ( COLS / destroy(--TABLE[COLS * 9][-0.45],Ygritte) ) ))]);
	if(ROWS){
	37
} else {

};
	dog
}
};
	foo(TABLE[-ROWS][foo(betray(41))],-1);
	Sansa -= rule(-0.7,Arya - --1)
}
} else {
	COLS;
	if(1 - -0.3){
	Ygritte *= -1
} else {
	-99;
	-( Arya )
}
};
	x += COLS
} else {
	betray()
};
	if(( -foo(-foo(( Hodor ),bar(--destroy(dog * rule(--96,y + 44,( COLS ) * -45) / 65,-betray() * ( -0.26 * Arya ))))) )){
	dog /= Arya;
	destroy(mislead(-Arya + ( Stark ),protect(Stark / y + -1 - x,-rule(protect(-protect(1,-mislead(-0.43,Hodor / destroy(Stark - ROWS) * 240.93)) / -betray(protect(),-ROWS,( y * 170.65 + rule(( ( bar(destroy() + COLS + 0,-Arya + 0.37,-1) ) ),betray(-1 * rule() * TABLE[--Jon][Hodor * --0.39],ROWS,( Jon ))) * ( y ) )) + -1 * -( ( ( COLS ) ) ) * ROWS),Sansa) * rule())));
	-32
} else {
	-590.37;
	dog *= rule(ROWS,( ( COLS / -48 ) ))
};
	rule(-460.28)
}
} else {
	ROWS;
	if(-23){

}
};
	if(-TABLE[ROWS][TABLE[Ygritte][-Jon + Sansa]]){
	if(Jon){
	Hodor *= 1;
	Sansa -= -mislead(foo(Stark) + -0.66) * ( -Arya + foo(destroy(y,-0.94)) )
};
	Hodor *= Sansa
} else {
	( mislead(rule(-30,TABLE[protect(protect(),Sansa,-x)][-1])) ) * -Hodor;
	if(COLS / destroy(ROWS,mislead(0.47))){
	Jon += foo(( ( -bar(( -COLS ),( Stark )) ) ),mislead(Jon),500.098)
} else {

}
};
	if(( -Jon )){
	Sansa -= -0.97;
	if(-470.236){
	Ygritte /= COLS;
	Stark /= TABLE[Sansa][-180.23] - Ygritte - Ygritte
};
	if(mislead()){
	if(y){
	Hodor -= -1 * ROWS
} else {
	( ( -bar(mislead(ROWS,-mislead(foo(--1),protect(--COLS + -protect(Arya),y) / x,( --ROWS )))) ) );
	bar()
};
	x
} else {
	if(-29){
	Sansa -= -84 + ( -TABLE[Hodor][ROWS * -Ygritte / 0.31] );
	rule(14,-4,( ( y * 19 ) * COLS + -0.64 - -76 ))
} else {
	1;
	Stark += -( foo(-1,-COLS) - Ygritte ) / x * x;
	rule(( ( 45 ) ),COLS)
}
}
}
};
	betray(-0.14 * TABLE[dog - y][41 * TABLE[ROWS][Arya]]) + ( --Hodor )
}
} else {

}
}
assert Arya + bar(( betray(( --( TABLE[TABLE[0.07][foo(COLS,ROWS)]][TABLE[--450.05][Ygritte]] ) )) ) - betray(x / dog,-0.03 - foo(x,( COLS ) + ( 0.33 * -69 )),--bar(ROWS) / ( ( destroy() ) )),Hodor,0.75) : "Nothing burns like the cold."
def TABLE[--ROWS][k] {
	if(-59){
	if(Ygritte / y){
	0.68;
	Stark
};
	destroy(-Sansa + Ygritte + 48,-61);
	Jon /= 390.29
} else {
	Arya /= y;
	( -Sansa )
}
}
def destroy(Stark,Stark,Ygritte){
	if(-x){
	-Jon + 0.7
} else {

};
	if(Jon){
	16;
	-( -Jon );
	if(( COLS * ( bar(protect(-Hodor / y,( foo(( COLS * y - y ),ROWS,protect(-Jon,1)) ),COLS)) ) )){
	Ygritte += ( ( ( --destroy() / Ygritte / ( 85 ) ) ) )
} else {
	if(-foo(( -destroy() + -foo(protect()) ) + dog,-bar(-betray() + 45) + COLS / 78 * x,protect(1 * -Sansa,COLS)) * Ygritte){
	ROWS;
	Arya += 57
};
	dog += COLS
}
}
}
def TABLE[( ROWS )][k] {
	dog += TABLE[bar(33,-860.598)][( -0.09 ) * destroy()];
	Sansa *= ROWS
}
assert TABLE[( betray(0.85,-0.31,( ( -82 ) ) / x) + TABLE[Arya][-protect(COLS) - -Stark - Jon * Ygritte] )][-1] : "One can not simply parse himself"
var Ygritte = COLS
def rule(Ygritte,x){
	if(--dog * bar(( --0.11 ) / ---foo(( 50 ) * bar(( foo() ),foo()),betray(TABLE[( ( ( Ygritte ) ) )][-( ROWS )]) / -0.26 / COLS) + foo() - COLS)){
	dog -= -( Sansa )
};
	if(dog + ( ( Ygritte ) )){
	if(-COLS){
	y *= ( -( ( -1 ) ) + -1 + betray(( destroy(protect(Jon,protect(dog)),160.15) ) - -83,-97) );
	x *= ( COLS )
} else {
	Stark *= ( 63 );
	Ygritte /= COLS
}
}
}
var Hodor = -1
def TABLE[COLS][j] {
	x -= TABLE[-0.05][-320.145] * --destroy() * ----60.73 + betray(( Ygritte ));
	if(Jon){
	COLS
}
}
def TABLE[-ROWS - -protect(-foo(( ( -Stark ) ),Jon / TABLE[ROWS][destroy(COLS,0.08,0.76)],bar(Stark))) * destroy(( -86 ),dog,ROWS)][k] {

}
def TABLE[-83][i] {
	if(-y * -1){

}
}
assert ( COLS ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(dog,Hodor,dog){
	Arya *= TABLE[rule()][( TABLE[TABLE[TABLE[-0.92 / foo(( ROWS + 84 / mislead() ),dog,x / foo(-61 * 0.86 - Arya,TABLE[Arya][1],-24 + TABLE[-ROWS][betray()] / Stark))][80]][TABLE[ROWS][protect()]]][COLS] * -protect() )];
	-----1;
	TABLE[ROWS][ROWS] / 850.4
}
assert ( TABLE[-Stark][bar(bar(TABLE[foo(-ROWS)][96],-1,TABLE[-( ( --COLS ) * ( -ROWS ) / -( -0.63 + ROWS ) - Hodor )][-( foo(( mislead() )) )] * -COLS) + ( x ),( y ) * -ROWS)] ) : "What do we say to the Lord of Death?"
def TABLE[-foo(rule(( ( -TABLE[x][( destroy(betray(-98),55) )] * ROWS + dog ) ),Sansa,( -ROWS )),( ( Ygritte + ( Jon ) ) ))][j] {
	( ( bar(ROWS) ) )
}
var Hodor = x
var Arya = ( -780.09 )
var Jon = rule(1 + -mislead(foo(),Stark) - -89,y)
var Stark = -COLS
assert foo() : "Winter is coming"
def betray(y,Hodor,Hodor){
	( ROWS );
	protect(Sansa)
}
var Stark = COLS
def TABLE[rule(( -44 ))][i] {
	if(ROWS){
	if(( ( ( TABLE[( --0.18 - betray(destroy(),( dog ) - -betray(COLS / ( TABLE[( rule(-TABLE[( destroy(ROWS) * ROWS )][-( COLS )],80,protect(-ROWS + TABLE[COLS][TABLE[Hodor][Ygritte]])) )][-Arya / ( foo(Jon * betray(foo(Arya,-ROWS - -61 * ( ( --foo() ) ) / -1 / COLS,bar(0.75))),COLS,-0.06) )] ),bar(rule()))) )][x] ) ) + TABLE[protect(( --0.09 ),( bar(TABLE[COLS][-54],bar(-0.87,TABLE[( -( betray() ) * mislead(-( COLS )) )][-ROWS])) ),--0.17 / rule(( COLS ),940.86))][Sansa] )){
	if(dog){
	if(( Ygritte )){
	if(( --0.58 )){
	Jon -= x;
	Hodor += ( -14 * destroy(( -0.28 ),-2) / ( y ) ) + ( -210.51 ) * -0.59;
	Arya /= dog
} else {
	if(--COLS){
	Jon /= ( --bar(Sansa) )
} else {

};
	if(( ( ( -41 ) ) )){
	if(81 * ( ( -ROWS * Jon * mislead(-1) ) ) - -Ygritte - Arya * COLS + TABLE[-COLS][Jon]){
	if(( Hodor )){
	7;
	25
} else {
	if(( x * --ROWS )){
	dog *= ( --1 )
} else {
	( Stark / -27 )
};
	if(( y )){
	Ygritte /= --foo(68,rule(ROWS,-21,( ( -0.26 ) ))) + -destroy() / destroy(y,betray(),rule(5));
	dog
}
};
	mislead()
};
	if(( -bar(Stark) * ( -310.8 ) + ( 80.8 ) )){
	if(83){
	dog /= ( ROWS );
	if(y){
	if(7){
	if(rule(-y)){
	Ygritte += x;
	Ygritte *= -( -240.77 )
};
	if(( -9 )){
	if(-0.89){
	COLS * destroy(-( TABLE[rule(x * ROWS)][-( --1 ) + Arya] ),-940.77 * -460.447) + 59
};
	if(-TABLE[Jon / 0.18 * Hodor][Hodor]){

} else {
	if(rule(ROWS)){

} else {
	if(ROWS){
	( Sansa ) - ( -690.8 ) + --0.96 - TABLE[TABLE[-destroy(rule(( protect(( Sansa )) ),( -rule(( ( --y ) ),foo(ROWS),( --810.65 )) ),( 1 + ( ( Jon ) ) + Arya ))) - Jon * Stark][0.47]][-TABLE[( bar(( ( -51 ) )) ) + 1][Sansa] - Stark];
	if(( COLS )){
	dog -= protect(COLS);
	( bar() );
	-betray(0.74 + Sansa,-( COLS ),TABLE[-0.38][( --TABLE[COLS][rule(0.74 * --foo()) * -0.61] * -COLS * ( Jon ) )])
} else {
	-1 - -29;
	ROWS
}
} else {

};
	if(-75){
	if(( -46 )){
	Ygritte *= dog
} else {
	if(Stark){

};
	y *= -61
}
}
};
	if(-19){
	Arya -= foo(1,( ( -85 ) ))
};
	Jon /= Jon + rule(Arya,( rule(-Jon) ) * y)
}
} else {
	TABLE[( 29 )][-0.92 / foo(--45 * dog,TABLE[1][COLS])];
	if(-0.78){
	-COLS;
	( -24 )
}
}
} else {
	( -ROWS );
	x
};
	( 52 )
} else {
	if(-560.69){
	510.69;
	foo(( Sansa ),rule(33,TABLE[bar()][Sansa]),y);
	if(betray(-x)){
	Hodor -= Hodor;
	dog += 50
}
};
	if(53){
	if(TABLE[420.3][TABLE[( bar(-1,98,-0.08) )][Jon]]){
	Arya /= betray(---63 / -Ygritte + ( COLS ) + COLS)
} else {
	( ( --1 ) / protect(-rule(--0.12)) )
}
} else {
	--0.2
}
}
} else {
	if(90.66){
	-TABLE[( x )][( -Arya )] + dog;
	Sansa -= -Hodor;
	if(TABLE[1][Ygritte]){
	if(( -1 ) - ( -( TABLE[( dog ) / Stark + ( -Sansa )][( bar(bar(Stark,--34,protect(-( destroy(--320.314) ),COLS)),-Sansa) / 0.72 )] ) )){

} else {
	if(( TABLE[bar(( Stark )) / bar(( -destroy() ),1 - destroy(0.76) - 160.2)][foo()] ) - protect()){
	Ygritte += -ROWS;
	Jon;
	Stark *= -880.367 + x
};
	Stark /= bar() / Sansa
};
	ROWS * ( betray(dog,Jon) );
	Hodor -= protect(Ygritte)
}
}
};
	if(ROWS - TABLE[( ( -0.89 ) )][Hodor] - ROWS){
	if(ROWS){
	x *= y;
	TABLE[( protect() )][y];
	Jon += rule(( COLS - ( -ROWS ) * ( Ygritte ) ),( Arya ))
};
	y /= ROWS
} else {
	if(Ygritte){

} else {
	Ygritte /= 52 * ( Stark / --1 ) - -betray(-1 / ( -1 )) * rule(TABLE[betray(COLS,-ROWS * protect(TABLE[-ROWS][( --0.13 )]) / destroy(x,0.53))][y],-TABLE[dog][ROWS],-1);
	Jon += 1
};
	x /= -( --TABLE[( -0.96 )][( -28 * Arya * protect(foo(-1,Arya),Hodor) )] )
}
}
};
	Hodor *= betray(TABLE[( bar(-mislead(ROWS,Arya)) ) - Arya][-( ( COLS ) )],( 1 ))
}
} else {
	TABLE[mislead(ROWS * -0.72) - ( -80 ) + protect(Arya)][y]
};
	if(( -270.362 )){
	if(0.63){
	if(Jon){
	COLS
} else {
	Hodor -= ROWS;
	Ygritte /= rule(( 0.87 ),COLS,bar(rule(( betray(-1,( x )) ),Jon)))
}
} else {

};
	if(ROWS){
	if(destroy(mislead(destroy() + COLS),ROWS)){
	if(betray(-x)){
	if(ROWS){
	( TABLE[( protect(-y + -0.25,1 / COLS / -Arya) * rule(--65 - 73,rule(COLS)) - ( COLS * dog ) * 0.66 )][TABLE[Jon][-ROWS - -( destroy() )]] );
	Ygritte /= --betray();
	y /= ( ( -3 ) )
};
	dog /= ( betray() ) + -( -rule(foo()) - -720.4853 ) * -970.6952 + ROWS
}
};
	bar(Arya,-0.25)
}
};
	if(betray()){
	TABLE[( -1 )][( ROWS )];
	mislead(--0.7)
} else {
	Jon += -x;
	x -= Stark
}
} else {
	Hodor *= -1
};
	( --42 * 16 )
} else {
	if(mislead(-COLS)){
	-mislead()
};
	if(ROWS){
	y;
	y *= ( --destroy() )
}
}
}
}
assert 140.243 : "Winter is coming"
var Sansa = --1
var Jon = foo()
var Arya = -betray(---( -mislead(ROWS) / ROWS - Hodor ) * y) + TABLE[( Jon )][bar(( -Jon ))]
def TABLE[TABLE[Jon][28]][i] {
	-0.04 - Arya / mislead(destroy(-( -90 )));
	Jon += ( destroy(foo(( -30.96 )) * -68,( ( ( ( bar() ) ) ) )) + -x ) - --0.01
}
def destroy(Sansa){
	if(COLS / 0.64){
	Hodor -= 0.41
};
	ROWS
}
def betray(Arya,Hodor){
	ROWS
}
var x = -470.5887
var Ygritte = protect(mislead()) * foo(( -0.18 ),TABLE[--Stark][-1] + COLS)
assert Sansa : "One can not simply parse himself"
var Ygritte = -COLS - ROWS - ( -1 )
assert ROWS : "What do we say to the Lord of Death?"
var Jon = Stark
def foo(dog){
	if(Arya){
	0.38 - dog;
	if(rule(( Arya ),38,destroy(-Jon,-TABLE[Ygritte][( -( COLS - ROWS - -35 ) )])) * 33){
	Arya *= destroy(( -x ));
	if(Jon){
	Sansa *= Ygritte;
	Jon += bar(ROWS,rule(ROWS,-620.586)) * destroy(-0.94)
} else {
	COLS;
	if(mislead(( ROWS ))){
	Arya += 0.26;
	( -Sansa )
};
	0.58
}
} else {

}
};
	Hodor += betray(Hodor);
	x *= COLS
}
def TABLE[ROWS][i] {
	protect(Arya);
	if(Sansa){
	if(Sansa){
	x -= bar(Ygritte,1,COLS + TABLE[-TABLE[( -TABLE[y][destroy(foo(-( -bar(( 7 )) ),ROWS)) + ( -0.77 / mislead(destroy(Ygritte,betray(ROWS,-( ( ( betray() ) ) ),Ygritte)),Sansa,-TABLE[COLS][( ( -1 ) )]) / mislead(-96) ) / ( -ROWS )] + ( mislead(-mislead(protect(Hodor,-0.46),-94,Hodor)) ) )][0.27]][-0.32 * ( bar(-380.1,-0.83) ) + -betray(-43,COLS / x) + 75]);
	Stark /= foo(-98,( destroy() ),47 / Ygritte)
};
	Stark *= ( ( dog ) );
	COLS
};
	y /= Hodor
}
def TABLE[TABLE[ROWS][Stark]][j] {
	if(dog){
	if(-86){
	x *= --87;
	( -0.65 )
}
} else {
	rule(--10,TABLE[Arya - -y][-64] * ( Sansa ))
};
	Jon -= -y
}
def TABLE[( TABLE[Stark][COLS] - Arya )][i] {
	if(Ygritte * ( ( Hodor ) )){
	if(-0.16){
	y /= ---17 + -66
} else {
	y *= ( COLS );
	Arya *= betray(-Jon) - -0.9
};
	Ygritte *= ( Arya - -foo(( TABLE[COLS][ROWS] ) * rule(( 6 ),Ygritte)) )
} else {

}
}
def mislead(Stark,Arya){

}
def TABLE[dog][k] {
	if(COLS){

} else {
	betray(foo(),( destroy(mislead(Stark),--8,( protect(-TABLE[( Ygritte )][0.17] * y) )) ))
};
	if(-dog){
	-43;
	-( ( x ) );
	if(0.78){
	if(foo(-36,foo(-44))){
	Arya += 1 - -( ( rule(TABLE[-bar(TABLE[-ROWS + -Jon][Hodor],90)][destroy(-bar(--220.15,COLS,-foo(( COLS )) * protect(470 - -41)),destroy(ROWS))],( TABLE[-0.48][0.6] )) ) );
	if(1){

} else {
	Jon += -43
}
};
	TABLE[-COLS + TABLE[COLS][protect()]][dog] - y - -dog + Stark;
	Sansa *= y
}
};
	( foo() )
}
def TABLE[mislead(destroy(( Arya / betray(COLS) / destroy(bar(),bar(betray(Ygritte,( mislead(ROWS,( ROWS ),-bar(-( TABLE[COLS][COLS] ),( -( -95 ) ))) ) / ROWS),COLS / COLS,( ( ( 0.37 + ( -26 ) ) ) ))) / y ),Arya),-10.839 / ( ----0.55 / --0.08 ))][i] {
	if(-84){
	-0.62
};
	if(COLS){
	-710.713
};
	if(ROWS){
	Stark += 51;
	( -ROWS );
	41 + mislead() + Arya
} else {
	Hodor *= 43;
	destroy(bar(-ROWS / ( ROWS ) + TABLE[Arya + dog][Stark],Stark));
	foo(ROWS,-protect(( ( -Hodor ) )),TABLE[betray(TABLE[-Stark][COLS] / destroy(( -1 - bar(ROWS) ),Hodor) + ( -bar(86) ) - -( Hodor ),-Ygritte)][destroy(foo(( ROWS ),7),( 980.01 ))])
}
}
assert TABLE[17][-15] : "What do we say to the Lord of Death?"
def TABLE[( -81 ) / Stark + -betray(47,( -580.48 ),TABLE[-TABLE[-0.48][-90 / rule()] * -( Jon ) + y * COLS + --foo(COLS,protect(610.94),870.18)][COLS]) + dog - bar(COLS)][j] {
	dog
}
def TABLE[-30 - -54][j] {
	bar(( Jon ),rule(mislead(-COLS + -141)));
	if(Hodor){

} else {
	if(-y){
	if(COLS + Ygritte){

};
	Ygritte /= TABLE[( dog )][betray()];
	TABLE[Arya][betray(( mislead(( COLS ),( -( TABLE[x][foo(( Arya ),0.46,rule(ROWS,( ( COLS ) )))] ) )) ),bar(-1))] / foo(betray(ROWS,30.29,( rule(rule(( protect(ROWS - TABLE[-0.07][TABLE[TABLE[mislead(ROWS,( ( rule(Ygritte,ROWS) ) ))][rule(bar(TABLE[( bar() )][0.66],-Arya))] * ROWS / ( ( ( Hodor ) - -700.3281 ) )][( ( -1 ) / 39 + --( -dog ) / Ygritte * -Arya / ROWS )]],foo(rule(( foo(COLS) ),0.14,-( -0.69 ) + ( -bar(rule(0.81,( ROWS + COLS )),( y )) )) * TABLE[ROWS + destroy(( betray(y) ))][-87],-x,--26)) )),bar(ROWS,-270.478)) )),COLS)
};
	if(Sansa){

} else {
	Sansa += -0.38 + ( bar() ) * -95;
	-dog
};
	foo(TABLE[( Jon )][Sansa])
};
	Stark += -0.96 / ( betray(-COLS) )
}
def TABLE[mislead(78,destroy(( Stark ) + x,-0.72))][k] {
	if(Sansa){
	if(Sansa){
	if(-19){
	Jon += ROWS
} else {

}
}
}
}
def TABLE[ROWS * rule(COLS,Jon - COLS)][i] {
	if(betray(( ROWS ) + COLS) * Hodor - rule(( --48 ))){
	Jon += ( Hodor );
	if(( Stark )){

};
	Ygritte *= dog
};
	if(ROWS){
	if(( x ) / ( ( 0.27 ) )){
	x /= Jon;
	if(rule(bar(Ygritte,( -ROWS / COLS ) - foo(-16,mislead(0.3,COLS))))){

} else {
	if(TABLE[( -( ( COLS ) - ( -( betray(Stark,x) ) ) ) )][-830.3732]){
	Stark += x
}
};
	y /= --Arya - Hodor
} else {
	if(x){

} else {
	if(--( 0.1 )){
	if(--foo(( COLS ) + 1,( ROWS ),Jon) / ( ( ( foo(1,mislead() / Arya) ) ) )){
	if(( TABLE[( ROWS )][betray()] )){
	if(47){
	if(TABLE[( ( rule(y,dog) ) )][42]){

} else {

}
}
};
	-0.34
} else {
	rule(( ( destroy(-0.17,---TABLE[-COLS][39]) ) ) * y * -Sansa);
	y -= ( -45 ) / protect(TABLE[-( TABLE[3][Sansa] )][COLS] / 0.86,COLS) - ROWS
}
};
	protect()
}
};
	if(betray(-y)){
	if(Ygritte){
	Stark /= protect(Arya)
} else {

}
} else {
	Stark -= -0.02
}
} else {

}
}
def foo(Sansa,y){
	mislead() + ( ( Hodor ) );
	-dog
}
assert ( -( --( ROWS ) ) ) : "What do we say to the Lord of Death?"
var Sansa = ( ( mislead() ) )
var Arya = -840.848
def rule(y,Hodor,Stark){

}
def TABLE[COLS][i] {
	if(42){
	Ygritte *= mislead(-x)
} else {
	( x );
	if(( ( dog ) )){
	if(destroy(Arya)){
	Sansa -= x;
	ROWS;
	if(-mislead(---TABLE[----1 - 0.52][( destroy(( -TABLE[--120.301][( -29 )] ) + TABLE[Sansa][-( ( COLS + -1 ) / ROWS )]) )] * y,TABLE[-0.97][-970.966]) + TABLE[COLS - TABLE[-96 / 49][-1] + -( rule(TABLE[( ( mislead(0.85 + Ygritte) / 0.32 + 64 ) )][Arya]) ) + foo()][--0.91]){
	x *= ( COLS );
	if(COLS){
	if(Stark){
	Ygritte += ( destroy(COLS) );
	Stark *= --foo(-( foo(--COLS,mislead(destroy(( betray(bar() * -1,-0.69) / ----x * destroy(TABLE[-150.404][COLS],-1) * TABLE[ROWS][-COLS - Stark] ),( -rule(bar(Stark,1) * 1) + Hodor ) / x),destroy(--( destroy(( --destroy(( 68 ),( ( mislead() ) ),--TABLE[ROWS][( ( betray(-42,mislead(y,Jon)) ) )]) ),-( TABLE[COLS][Stark] * 61 / foo() / ( Ygritte ) )) ) - -Sansa,( -1 ),( -x )))) * betray(ROWS,Stark) + mislead(mislead(( ROWS )),Hodor) * ( ROWS ) ),( 210.6 ));
	y -= bar(( y ) * -190.833,-dog,-68)
};
	Jon += ( -y ) + ( ROWS ) + Stark;
	if(Ygritte){
	if(-780.761){
	y *= x;
	if(COLS){
	( destroy(x,( --rule(COLS) )) );
	Arya *= 990.3
} else {
	betray(15,1 + -( 89 ) + ( ROWS - -( 66 ) ) + COLS / -Jon * y,-980.8);
	COLS / Stark;
	x * COLS
}
}
} else {

}
}
} else {
	if(destroy() / -destroy(( ( COLS ) - ROWS ))){
	bar() * -1;
	Arya
};
	if(COLS){
	destroy(( ROWS ),-11 + -betray(( -betray(( -TABLE[Hodor / betray(COLS,protect()) / -1][ROWS] )) ),TABLE[-40.1][betray(dog,Ygritte,-0.71 * Ygritte)],TABLE[TABLE[Ygritte * -0.91][COLS]][Stark]));
	y /= ( 0.94 )
};
	betray(-9,-( ( COLS ) ) - betray(-44))
}
}
};
	dog += -TABLE[750.072][1 / ( ( rule(-( -destroy(-73,-foo(-protect(-980.48 - -x,-protect(TABLE[( -8 )][destroy()],Stark,-1) / -1 * 70) / destroy(bar(rule(Sansa,bar(foo(dog,-( rule(( TABLE[Hodor][--2 - ( 1 ) * mislead(foo(ROWS,ROWS),foo(30,foo(710.27 + ( ( TABLE[ROWS][-51] ) ))),betray(-74)) + ROWS - bar(COLS,ROWS)] ),-0.07) ),bar(---61 + Sansa,-( TABLE[-TABLE[y][Jon]][( Arya )] ))),TABLE[Sansa + ( ( betray(rule(( COLS ),( x ))) ) - -47 )][betray(( Ygritte ),rule(x,-Ygritte / Hodor * -ROWS + COLS - ( -Stark )))]),0.06),-0.94),890.126) * Stark)) ),foo()) ) ) * -COLS]
};
	mislead(Stark);
	Sansa
}
def betray(x,Sansa,Hodor){
	dog * TABLE[betray(foo(930.4,( ( destroy() ) ),-0.62),ROWS - COLS)][protect(destroy(-protect(-Sansa),1),-46,Hodor / foo(( ( -0.08 ) ))) * TABLE[-0.58][( Stark * ROWS )]] + ( ( ( -x ) ) );
	-0.74;
	destroy()
}
assert -110.535 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = protect(-3 * destroy(Arya))
def destroy(Ygritte){
	if(--y){
	if(Sansa){
	if(-foo(x,--Stark + ( betray(betray(( ( destroy(( dog )) ) ))) ) - 0.78)){
	45;
	-0.74
};
	Arya -= --Arya;
	Arya += ROWS
};
	Sansa /= Arya;
	y /= 1
}
}
var dog = bar(( 71 ),-( 1 ) + 0.16) * TABLE[-28][x]
def mislead(x){
	( x )
}
var Jon = COLS
var y = -rule(210.633,-21 * -68)
assert ( destroy(destroy(ROWS)) ) : "What do we say to the Lord of Death?"
assert -390.7 : "Winter is coming"
def betray(Arya,dog,Stark){
	if(--53){

} else {
	ROWS
};
	if(TABLE[ROWS][( Jon )]){
	( -Jon )
} else {
	( COLS )
}
}
assert ( -1 ) : "What do we say to the Lord of Death?"
var x = --15 * betray(( ( -80.411 * -( -0.29 ) ) ))
def rule(Ygritte){
	dog += betray(-rule(-0.65 + destroy(ROWS),COLS * COLS),( protect(-220.0502 + foo(---dog,bar(ROWS)),ROWS) ));
	-1;
	-11
}
def TABLE[Sansa][k] {
	Ygritte
}
var dog = -x
def protect(){
	if(dog){
	if(bar() - -720.228 - -( 77 ) * -Jon){
	ROWS;
	Sansa /= TABLE[-betray(( betray(mislead(Hodor)) ),-1) * destroy(4)][ROWS]
} else {
	( ROWS ) - ROWS / betray(-0.19,TABLE[-45][ROWS]);
	y -= COLS * ( TABLE[ROWS][dog] - Hodor );
	y -= TABLE[bar()][-( -protect(-27,Stark) )]
};
	73 / ROWS
};
	Sansa -= destroy(-ROWS);
	Jon *= TABLE[rule()][dog]
}
def bar(Sansa,y){
	if(( -protect(-0.81) )){
	y -= bar()
} else {
	Arya
}
}
var Arya = destroy(( -destroy(protect()) * ROWS * protect(( ( ( -y ) ) ),betray(COLS,-35,foo(0.47)),protect(160.27,1 + TABLE[( Sansa )][( -1000.6 ) + ( Hodor - -54 * ( --bar(-0.75,mislead(x)) ) / rule(Stark) )])) ))
var Arya = x
def TABLE[( TABLE[rule(Arya)][protect()] )][k] {
	Jon;
	if(( TABLE[mislead(0.06,Jon,-0.1) - ( --30 )][Hodor] )){
	Stark /= -41
} else {
	foo(-( Hodor ));
	COLS
}
}
assert TABLE[TABLE[0.26][( ROWS )] * ( COLS )][Ygritte] : "Nothing burns like the cold."
def TABLE[-57][k] {
	( Sansa );
	if(-0.15 + TABLE[( 0.45 )][( x )]){
	Stark -= 0.79;
	0.66
}
}
var dog = ROWS
var x = Arya
var Stark = bar(mislead(480.592,Stark + ( Sansa - destroy(COLS,Arya) / dog )),dog,--0.58)
var x = Hodor
assert y : "Winter is coming"
assert 0.28 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert TABLE[5 + ( COLS )][( ROWS )] : "One can not simply parse himself"
def TABLE[TABLE[-56 - Jon * -( Ygritte ) / destroy(-TABLE[dog][-0.33] - betray() * Hodor * Hodor)][COLS]][j] {
	if(Sansa){
	Hodor -= TABLE[--mislead(-( dog ),dog,0.12)][COLS - bar(640.5,TABLE[4][mislead(Sansa)],protect(TABLE[TABLE[Jon][y]][-TABLE[31][COLS - TABLE[( 0.41 )][foo(( foo(1,ROWS) ),-TABLE[bar(( TABLE[betray(betray())][foo(-0.64,rule(y,Hodor,TABLE[TABLE[-ROWS][-betray()]][rule()]))] )) - -Ygritte][-x])]]] * -( TABLE[1][370.55] ))) * dog - ( ( rule(betray(),destroy(mislead(0.86))) ) * --0.53 + -4 )] * 1
}
}
def TABLE[TABLE[TABLE[( -350.82 )][protect(-protect() * bar(( -( -0.25 ) / 1 ) / 0,( y * -dog ))) / bar(TABLE[-80 * betray(protect(Arya) - y)][( -( rule(-0.43,600.121) ) ) / ( destroy(-COLS) ) / Jon],890.647)]][TABLE[Jon][protect(COLS)]]][i] {
	dog += rule(bar(),-Ygritte,mislead(( ( 99 ) )));
	Jon * ( protect(bar(),mislead(protect(),( -0.13 ),--( -1 )),Stark) );
	if(destroy(TABLE[destroy(ROWS) + protect(Sansa)][Arya])){
	Sansa += ( mislead(-Stark,x) )
}
}
var x = ( Sansa )
def TABLE[y][j] {
	if(protect(--Hodor)){
	-Sansa
}
}
def bar(){
	if(rule(bar(97 - ( foo(TABLE[rule()][-( -0.57 )],( TABLE[-84][--COLS] )) ),( ( COLS ) * -bar(rule(58,foo(),-( ---0.26 ))) ),( -30 )),TABLE[( -12 )][TABLE[destroy(Sansa)][-betray(( -Jon ),ROWS) * -betray(bar(),COLS)]])){
	Hodor += ROWS
};
	380.53;
	( ( -96 ) )
}
def betray(Ygritte){
	( COLS );
	if(-0.89){
	protect(Stark);
	Hodor;
	Hodor *= -1
}
}
def betray(Jon){
	if(( -0.39 )){
	if(rule(destroy(-0.11),x * Ygritte * ( foo(ROWS,Hodor,310.4) + ( ( mislead(-betray(),COLS + mislead(58,( -Stark - protect(foo()) - mislead() )),betray(( ( ( -0.25 ) ) )) + ( ( -61 ) )) ) ) ) + 61,( ( -COLS + --7 ) ))){
	COLS;
	Jon / -protect()
} else {
	dog /= --400.027
}
};
	if(Ygritte / dog){
	COLS
} else {
	Jon -= betray(-( -0.14 ),-680.41,( ROWS )) * Arya / Stark
};
	if(TABLE[( COLS )][TABLE[COLS][destroy(( ( x ) ))]]){
	if(COLS + betray()){
	protect(-( ( ( ( COLS / Hodor / 92 ) ) ) ),ROWS,protect(bar(),( x - destroy(0.97,COLS) ),x)) - 1 - betray(-( ROWS ))
} else {
	if(y){
	( ( Ygritte ) );
	if(-67){
	Arya *= ROWS
} else {
	--rule(COLS,30);
	mislead(Stark,Hodor / 75,( TABLE[-Ygritte][-COLS] ))
};
	dog /= ( Arya ) / Ygritte / -Stark
};
	y *= ---59
}
} else {

}
}
assert ( ROWS ) : "What do we say to the Lord of Death?"
var Ygritte = dog
var Ygritte = ( bar() )
var Arya = bar(COLS,betray() * ( ( COLS ) ),-0.75 / --( TABLE[protect(( Hodor ))][( --0.75 )] )) - ROWS
assert ROWS : "What do we say to the Lord of Death?"
var Stark = -ROWS
assert ( -1 ) - rule(82,( --461 / mislead() + Jon ),-( ROWS )) * 0.81 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[ROWS][i] {
	( -TABLE[-TABLE[COLS][ROWS]][TABLE[bar(-( y ),( Arya )) * destroy(COLS,-bar(( destroy(foo(-55 - ( Arya )),0.37) ),-Arya,( -69 )),ROWS)][-TABLE[destroy(-Jon)][rule()]]] );
	Arya -= ( ( Ygritte ) );
	if(( foo(( -0.21 + -destroy(-Sansa,( ROWS )) ),COLS) )){
	-18;
	1
}
}
assert 200.46 : "Fear cuts deeper than swords."
var x = ( COLS ) - TABLE[940.88][-destroy()]
var Stark = Ygritte
def betray(){
	if(COLS){

} else {
	if(( ( -rule(( Jon ) - foo(--540.68,-( ( ( TABLE[mislead(-( bar(COLS) ),-COLS,-33)][Sansa] ) ) )),Stark) ) )){
	-x
} else {
	if(bar(( COLS ),COLS + -COLS)){

};
	if(63){

}
}
}
}
def TABLE[mislead()][j] {
	if(( -51 )){
	Jon += 79;
	Hodor *= ( 1 );
	1 * 68 + ( -y )
} else {
	foo(ROWS)
}
}
assert TABLE[TABLE[-280.427][-0.9 / -( Sansa ) / y - COLS]][COLS] : "Fear cuts deeper than swords."
def rule(){
	if(ROWS){
	Ygritte += rule()
} else {

}
}
def TABLE[( Sansa - ( -bar(COLS,0.79) ) / TABLE[870.92][-6] )][i] {
	if(Sansa - bar(ROWS * protect(-0.76,y) - COLS,-mislead(Sansa,34,( TABLE[Ygritte][98] )) * TABLE[Hodor][( Stark ) + ---1 + destroy() + -920.799 - COLS - 740.02 / 0.62 * ( Hodor / ROWS )],protect(( ROWS ))) - ( ( ( y ) ) ) / TABLE[Arya][( Arya )] * TABLE[COLS][--Hodor] * x){
	if(bar(-610.29 / dog * ROWS,1)){
	if(1 + Arya + COLS){
	dog /= ( ( y ) );
	if(56 - ( TABLE[( ( Ygritte ) + -0.03 )][-76] )){
	betray(-destroy(destroy(betray(betray(protect(COLS,TABLE[-730.63 - 1][protect(protect())]),( foo(TABLE[betray(-1,TABLE[COLS][-750.5353],Arya)][COLS],--1,destroy(-TABLE[COLS][-Sansa + rule(--ROWS,TABLE[Jon][( -90 )]) * -Jon])) )),-60)),-dog))
} else {
	if(( --rule(COLS + bar(( protect(y) / --Jon ))) / ( x ) )){
	if(Stark){

} else {
	y += Stark / ( foo(bar(-1,TABLE[foo(( ( --0.43 / COLS ) ),0.84)][TABLE[-0.87][( 0.84 ) * ROWS]],( ( -( rule(--97 / ( Stark ) - ( COLS ),( 59 ) - -26) ) + TABLE[TABLE[1][x]][ROWS] ) )),protect(rule())) - -360.994 / 23 ) / betray(COLS)
};
	COLS
}
}
} else {
	Stark *= 0.02;
	if(-ROWS - ( -x ) * TABLE[( bar() - --x )][TABLE[15][dog - -COLS]]){

};
	Ygritte /= -COLS
}
} else {
	if(Stark){
	Sansa *= 130.8796;
	Arya -= Ygritte + ( ROWS * 0.46 * ROWS )
} else {
	( COLS );
	-( --86 - 100.01 )
}
}
};
	if(mislead(Stark,x)){
	bar(bar(-12) * -0.65)
} else {
	rule(( TABLE[dog][-Arya] ))
};
	Hodor *= 0.9
}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[380.09][k] {
	if(foo(74 + ( mislead(dog,-0.97) ))){
	if(ROWS){
	mislead(mislead(foo(-COLS,Hodor) + -75));
	-90;
	if(mislead(ROWS)){
	rule(destroy(-0.57,( dog )),x / -1,destroy(mislead(ROWS,y,TABLE[ROWS][foo(protect(( -1 * 1 / ( -10 ) ),TABLE[mislead(-76,ROWS)][TABLE[ROWS][mislead(1 - y)]]),protect(destroy(COLS)) * --0.16)]))) - mislead(betray(Sansa),-46) * ( ROWS );
	x -= 1
} else {
	if(( 860.534 )){
	if(-ROWS){
	y += COLS;
	if(-Sansa / ( 31 ) / -78 * ( ROWS - -ROWS - ROWS * Ygritte )){
	y -= 1 * 7;
	( ( ( destroy(( TABLE[( bar(( ( -bar(-Ygritte,0.95) ) * protect(( ( ( -( -( 71 ) ) ) ) ) - -bar(-70,TABLE[( dog )][Ygritte]) - x,--0.85,590.2816) * protect(foo(),( COLS + ( betray(-rule(),TABLE[( dog )][-Sansa + ROWS],Sansa) ) )) * TABLE[( ( y / TABLE[0.69][destroy()] * Ygritte ) )][-390.332] ) * -COLS,TABLE[0.07][x] / 51,-Arya) )][protect(Arya / foo(-0.96 / 0.46,-destroy(foo(( Ygritte )),ROWS)) + -( betray(-Ygritte) ),-0.28)] ),( ROWS )) ) ) )
};
	if(TABLE[-0.97][Jon + ( ---Hodor / --dog )]){
	-y / -23 / Ygritte + --foo(ROWS) / ( --62 * 68 ) / bar(x - --protect(-( bar(mislead(),rule(( -Hodor - Ygritte ))) - -1 ) / -bar(( dog / -36 )),--1),Arya) + --1;
	Arya /= -( ( protect(COLS,x,foo(( -Ygritte + COLS + -96 ),760.82 / ( -dog ) * foo(( ( ROWS ) ),Jon,TABLE[-Stark][-1]) - ---TABLE[COLS][bar(-( -rule(TABLE[( --1 ) - ( -COLS )][rule(-( -74 ) * -600.7 + COLS)],TABLE[protect(Arya)][Sansa]) ))])) ) ) - Jon;
	if(Stark){
	if(rule()){
	if(( -1 )){
	bar(Jon,-dog,Jon);
	if(ROWS){
	dog += ROWS;
	y -= ( -( TABLE[mislead(97)][-( Stark )] * Arya - Stark ) )
} else {
	Jon;
	-1
}
} else {
	Hodor *= -( ( -rule(-( Stark ) - COLS,-( Arya )) ) );
	if(---19 / 63 - 93){

};
	Ygritte += Jon
}
}
}
}
} else {
	Stark /= destroy(-1,( -( ( ( betray(( -61 ),x - Jon) ) ) ) ),-17) * ( dog );
	Hodor -= destroy(Stark,foo(protect(--0.86 * -dog + Hodor * COLS / dog / ( Sansa * bar(-0.04,foo(1),0.52) - --0.92 ) / TABLE[COLS][( ( --0.39 ) )],destroy(( ( protect() / COLS - 0.68 ) / -0.88 / -TABLE[Sansa][0.78] ))) - Stark));
	Ygritte += --bar(( 73 - foo() ),56)
};
	Stark *= -bar(Jon,( rule(( COLS ),( 1 )) ),mislead(TABLE[( Sansa )][betray(( ( rule() ) ),ROWS)])) + Jon;
	if(0.31){
	Sansa /= 0.4
} else {
	if(1){
	Jon *= rule(-mislead(( ( ( Jon ) ) ),Jon),Stark,TABLE[-Stark][Hodor]);
	Stark += Ygritte
};
	betray();
	Hodor /= ( -59 * Hodor ) + 0.19
}
};
	Ygritte -= COLS
}
};
	Stark /= -TABLE[-0.98][betray(--( TABLE[-Arya / -betray(( protect(bar(),320.669) ),( 940.781 ),ROWS)][44] ) - ( y ),foo())]
};
	COLS
}
assert -( rule(( Arya ),---mislead(-41,-bar(4,Ygritte + foo()))) / y / 0 * -bar(Stark) + Jon ) : "Nothing burns like the cold."
assert TABLE[x][Sansa] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert --0.9 : "What do we say to the Lord of Death?"
def betray(Hodor){
	Arya *= 15 * bar(-680.283)
}
def betray(Sansa,dog){
	Ygritte -= Sansa
}
def protect(Sansa,x,dog){

}
var Jon = -79
def TABLE[-1][j] {

}
assert betray(( --Jon ),betray(-COLS,TABLE[Hodor][TABLE[-1][-75 / Ygritte + destroy(-TABLE[betray(( -COLS ),-8)][destroy()],COLS)]])) : "Nothing burns like the cold."
assert foo() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(){
	Sansa *= -( TABLE[ROWS - Jon][-1] ) / -Sansa
}
var Ygritte = destroy()
def protect(dog,Arya){

}
var Sansa = -50
def TABLE[( bar(Jon) ) + ROWS][i] {
	Ygritte *= Ygritte;
	Stark
}
def TABLE[TABLE[rule()][-COLS - protect()]][j] {

}
def TABLE[TABLE[protect(( --16 - -( ( 460.9 ) ) ),rule(COLS * --72,-210.7) * -77)][COLS] + -( rule(( ( Sansa - 31 ) )) )][i] {
	COLS * Hodor / Hodor;
	--( --74 );
	x
}
assert Arya : "Nothing burns like the cold."
var x = TABLE[( ( ROWS ) )][rule()]
assert ( protect(ROWS,dog) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(){
	if(-2){
	Arya
};
	0.42 - -Ygritte - ROWS;
	if(-0.02){
	y /= Sansa;
	Jon *= 820.62
} else {

}
}
var Sansa = Stark
def mislead(Jon,Ygritte,Arya){
	if(-COLS){
	( -88 );
	if(bar(-( Sansa ))){
	ROWS
}
};
	( -140.872 )
}
var Stark = TABLE[ROWS][-Jon - ---betray(Arya,620.875)]
def protect(dog,dog){
	-( -1 ) / -0.46
}
var Jon = -0.43
var Arya = ( -( betray(( -130.919 ) * Jon) ) )
def bar(Stark,Stark,Sansa){
	y *= COLS;
	destroy(-protect(-destroy()),y) + Hodor;
	Ygritte /= -1
}
def protect(x,x){
	Arya
}
var y = ( TABLE[protect(1 - COLS + rule(( 0.13 )) - -ROWS)][0.48] )
def protect(Stark){
	Sansa *= -0.06 / destroy(-290.77);
	if(bar(-44) - x){
	if(protect(-0.86 * TABLE[( -( Sansa ) )][--10],x)){
	mislead(rule(),( ( ( foo(bar(),-( -Arya ) + ( ( ( ( ( -ROWS ) ) * ( -0.36 ) + ( Jon ) ) ) )) ) ) ));
	y /= protect(protect(-Jon * -1) * 0.06,-1 / -betray(( ( x ) / -Hodor )) / -880.34 * ( TABLE[COLS + destroy(( -( ( -480.2039 ) ) ) / -bar(protect(Jon - -Hodor + dog - ROWS),TABLE[rule(ROWS + ( Arya ))][TABLE[( --0.6 - 0.23 / -ROWS * foo(COLS) )][( ROWS )]]) - TABLE[( -( mislead(( ROWS ),betray(-( TABLE[( Ygritte + bar() )][TABLE[Jon][--65]] / mislead(( -0.98 ) * --Hodor) ) - Ygritte,mislead(Jon,Jon))) ) )][-17],protect(ROWS,-ROWS))][-Sansa] ),-0.62)
} else {
	Jon /= ( 0.83 );
	if(ROWS){

} else {
	TABLE[-destroy(-Stark,( COLS ))][protect(-( COLS ),-rule(TABLE[mislead(rule(),Stark,rule()) / Jon + 20 / ( TABLE[-rule(( 0.54 ))][protect(Hodor)] )][Hodor],( dog ),x / -destroy(y) * -44))];
	if(Arya){
	-COLS;
	dog /= foo(Arya,( destroy(COLS,27) ))
}
};
	if(-170.203){
	x -= 0.79;
	Arya += 0
}
};
	if(-COLS / 40){
	TABLE[TABLE[Hodor][foo(TABLE[( Arya - TABLE[-TABLE[0.81][COLS] * COLS][-TABLE[( ( destroy() ) )][---protect()]] )][Sansa],( Sansa ),dog - --( COLS ))] + Sansa - ( Stark ) / -bar(--TABLE[( Ygritte )][( -1 )],mislead(TABLE[-COLS - ROWS][( -destroy(( -Jon ),dog) ) / foo(-( -( Arya ) * Hodor ) / destroy(ROWS / -TABLE[( Arya )][Hodor] - 21 - ( -0.99 )))] - -Hodor))][Arya];
	ROWS
}
} else {
	Jon *= ( ( -0.29 ) - -mislead(( 0.58 ) * -y * --69 + ( -110.72 / 1 ),-98) * COLS )
};
	dog / -mislead() - -dog
}
var Stark = bar(Jon)
def protect(){
	Stark
}
def betray(x){
	Stark *= destroy(destroy(mislead(( betray(COLS,-ROWS,mislead(-ROWS,( TABLE[--Hodor][-y] ))) + -ROWS ) / -Ygritte)) / y) * Arya
}
var Jon = ROWS
var x = -18
def mislead(dog,x,Hodor){
	( TABLE[foo(-Sansa - Sansa)][Stark] )
}
def TABLE[rule(-0.41 - -0.04)][k] {
	if(-TABLE[-( -COLS ) * 70][rule(bar(Stark,COLS),--COLS,TABLE[----72 + foo(( protect() ),COLS / -1)][mislead() - 17]) * TABLE[-1][bar(y - COLS,-450.346)]] * Stark - dog){
	if(COLS){
	dog *= ---13;
	-( ( Arya ) )
} else {
	Sansa *= ROWS + COLS
};
	if(foo(( Stark ),-25 - mislead(( 220.83 )))){
	foo();
	if(betray(-0.16,destroy(COLS * -0.43 - -( -Arya ) * x,-( TABLE[betray(protect()) + -310.277][COLS] )))){
	Hodor *= -47;
	Arya += 0.75;
	y += -ROWS / rule(x)
}
} else {
	if(-99){
	if(ROWS){
	-COLS + foo(mislead(foo(-44,y,240.11)))
}
} else {
	if(1){
	Hodor += y
} else {
	Stark;
	if(-dog){
	( COLS ) - betray(--380,x + ( mislead(foo(( -Sansa )),Jon - -Jon) ),foo(betray(),x,protect(( ( ( -48 ) ) ))))
}
}
};
	-mislead()
};
	if(-0.11){
	if(--COLS){
	if(protect()){

} else {

}
} else {
	Jon *= 41
};
	if(( y )){

} else {

}
} else {
	if(-TABLE[-x / Sansa][1 - Sansa] * --ROWS){
	dog += dog
}
}
} else {
	dog /= Sansa
};
	dog += TABLE[protect(COLS - -Hodor / destroy(--Sansa,foo(mislead(rule(0.44)),Ygritte,0.86)),COLS) / -x / x][protect()]
}
def protect(Arya){
	if(( y )){

} else {
	if(-94){
	x /= x;
	if(bar(-0.08)){
	-1 * TABLE[-dog][bar(-0.94 - --dog / 410.3 - 1 / ( protect(-TABLE[protect(COLS + ( ( -( rule(( -rule(foo(-1)) )) + 1 ) + Arya - destroy(rule(Jon,mislead(rule(Jon),foo(Ygritte,( ( Stark ) ))),Jon),COLS) ) ))][-COLS],( Stark )) ),( Sansa ))] * 97
}
};
	if(COLS){
	if(( ROWS + -y )){
	dog /= ( x )
} else {
	Stark + ( 13 )
};
	if(-8){
	x *= -foo(ROWS,ROWS);
	-1 + COLS
};
	x
};
	if(-( ( protect(-1,ROWS) ) )){
	Sansa += 0.08;
	Sansa -= Stark;
	COLS
}
};
	-0.26
}
var Hodor = Sansa
def TABLE[( ( Stark ) )][k] {
	Arya -= destroy(( 0.46 )) - foo(--Arya + mislead());
	if(ROWS){
	mislead(TABLE[mislead(foo(-0.53,ROWS,COLS),( -bar(64,Ygritte) ) * ( -y ))][ROWS / COLS],-x,betray(( foo(betray(( destroy(-0.55 / ( ( Sansa ) ),x) )),rule(foo(COLS,betray(( Arya ) + ( protect(rule(),rule(( Sansa ),( Jon ),---TABLE[COLS + -destroy()][ROWS] / Sansa) - 290.4955 + ROWS) ) / COLS * -0.37,foo(( ( 12 ) )),-0.42)),-0.11 / rule(ROWS))) ),dog,90))
}
}
var Stark = -Sansa
var Ygritte = -0.69 * ( foo(( Stark ),dog) ) + y / ( --( x ) * Stark / ( Arya + ROWS ) ) / destroy(-0.44 - ( Sansa / ( destroy(( ROWS )) ) ) + ( ( COLS ) ),-( rule(-y,Sansa) ) - --( -Arya ),rule(bar(( -0.8 ),-( COLS ),dog / ( COLS )),Stark,foo(-TABLE[( Sansa + betray(x,TABLE[mislead()][( ( ROWS ) - -0.12 )],COLS) )][( protect(-foo(-0.46,Arya),-Hodor + mislead(ROWS) - x) )] + ( -490.2445 ),1,( TABLE[71][COLS] )) + TABLE[COLS][Jon + y + ( rule() )]))
var Jon = Arya
def protect(Sansa){
	y -= bar(-foo(Hodor));
	if(-TABLE[rule(---ROWS,( foo(( ( betray(destroy(0.51 / ( 0.72 ))) ) )) ))][mislead(TABLE[Hodor][rule(Jon,( ( --62 - ROWS / -0.7 ) ))],0.64)]){
	destroy(rule())
}
}
var Stark = ( ( ( Sansa ) ) ) * ( ( destroy(( 2 ),-ROWS + foo(bar(-1),Arya / -Hodor)) ) )
def TABLE[( -TABLE[-TABLE[rule(Hodor)][-420.4382]][-TABLE[57][( -rule(--betray(( 0.12 ) / -1),33) )]] )][i] {
	if(protect(-450.52)){

} else {
	( ( x ) )
}
}
def foo(Stark,Arya){
	Sansa *= betray(-COLS);
	if(bar(( ( -foo() * 0.34 ) - ( -y / COLS ) + -( y ) ))){
	TABLE[x][COLS / -Ygritte * -( ---63 * betray(TABLE[destroy(-Hodor,0.2,( ( --COLS ) ))][( 790.73 )]) ) / ( ( 0.65 ) ) / -0.04];
	Sansa *= COLS
};
	Ygritte /= ( ( -31 ) ) - 540.513
}
assert Stark : "One can not simply parse himself"
assert rule(foo(COLS / -COLS + -protect(( ROWS ))),-0.48,protect(rule(-1) - destroy(( dog ),-ROWS))) : "Fear cuts deeper than swords."
assert ( ROWS ) : "Fear cuts deeper than swords."
assert 37 : "Nothing burns like the cold."
def destroy(){

}
assert -TABLE[Stark][1] : "Winter is coming"
assert -77 : "What do we say to the Lord of Death?"
def TABLE[( TABLE[Hodor][y] - mislead(---COLS / foo(( --24 ))) - ( Ygritte ) ) * ROWS][j] {
	ROWS
}
var Jon = ( ( bar() ) ) + COLS - ( ROWS / Jon )
def betray(Sansa,Sansa){
	if(-foo(( protect(COLS,( protect() )) ),-Ygritte) + 1 / -mislead(( x ) - x * rule() - ROWS)){

};
	if(COLS){
	if(Sansa){

} else {
	Ygritte += ROWS
};
	if(Hodor){
	Hodor += ( ----COLS + ( ( -190.67 ) ) * ( ( TABLE[-( rule(64,COLS,-destroy(COLS,rule(-Stark / x,( TABLE[TABLE[TABLE[0.1][COLS]][-COLS]][-0.4] )),-rule(-( -( ( Stark / Arya ) ) ) - rule(),--y))) * rule(-( -0.55 ),COLS) )][Sansa] ) ) / -( destroy(x,y,COLS) ) / bar(--mislead(-( -y - ( TABLE[( 1 )][COLS] ) ) + Sansa),Ygritte) );
	if(TABLE[ROWS][( protect() )] - COLS){
	if(Jon){
	bar(-300.219,COLS)
} else {
	Arya -= ROWS;
	if(Hodor){

} else {
	if(ROWS){
	Jon *= COLS;
	Ygritte /= Jon;
	destroy(COLS)
} else {
	if(-0.87){
	Stark *= Ygritte;
	if(protect(bar())){
	Stark /= -12 / -610.013 - 21 * bar(mislead(foo(destroy(Arya) + rule()))) + ( TABLE[80 - Hodor * mislead(Sansa,( ( destroy(ROWS,-Jon / -ROWS + x - y) ) ))][--Sansa] )
} else {

}
} else {
	if(rule(-0.55)){
	if(Arya){
	if(680.95){
	Ygritte *= -930.5;
	if(ROWS){
	ROWS
}
} else {

};
	x += betray(betray(---470.8,protect(-dog,0.71))) + ROWS * -COLS
} else {
	TABLE[---( 57 )][COLS - 0.95];
	if(ROWS){
	-ROWS + rule(17 / TABLE[-Arya][-bar(-Arya,-Sansa)],protect(( TABLE[dog][Stark] )) / -betray(rule(foo(TABLE[( COLS )][Hodor],bar(-( rule() - Hodor ),( bar(betray(TABLE[----1][( COLS )]),31,( --56 + --38 )) )) * ROWS))))
} else {
	-0.01;
	33 - ---0.55 / x
}
}
};
	x -= rule() + ( 92 )
};
	ROWS / --destroy(--destroy(Ygritte) - ( -220.4 ) * --0.91,Arya - -Ygritte) - ( ROWS )
};
	y *= ( ( -( -0.24 ) ) - bar(( x )) / ( TABLE[Sansa][--protect() + Arya] ) / ---dog );
	TABLE[200.1 / -foo(rule(( ( 1 ) )))][( --COLS )]
};
	---COLS
};
	x /= ( -420.75 )
}
} else {
	dog
}
} else {
	if(( destroy(x,foo(-( destroy(--( Arya )) ) * -1,-1) / dog,ROWS) )){
	Arya *= bar(ROWS * 1,91);
	if(-0.41 * y){
	Stark -= rule(450.6981);
	0.59
};
	Arya *= COLS
}
};
	y += ( Jon )
}
def TABLE[TABLE[-ROWS][betray(betray()) - 0.61] / -Jon * --( --Hodor ) + -1][j] {
	-5
}
assert 12 + ( x ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(Hodor,dog,dog){
	x;
	( -destroy(0.23 + ROWS) * -1000.1604 )
}
var Jon = ROWS
assert COLS + 0.09 : "Fear cuts deeper than swords."
var y = -ROWS
assert ( -ROWS ) : "Winter is coming"
def TABLE[-y][k] {
	Hodor *= -63;
	Ygritte *= -0.42
}
def TABLE[-0.11][k] {
	if(-680.89){
	COLS
} else {
	-1
};
	y += ( ( bar(0.42 - TABLE[( -bar(ROWS,Arya,rule(-ROWS)) )][-ROWS] * ( ( protect(betray(-protect(-0.82,--Arya) - -48,-destroy(Ygritte) - dog + rule(dog,-1),( --( ( rule(1,ROWS) ) ) * -0.63 ) * -Sansa) + COLS - 470.539,-48) ) ) - ( ( rule(destroy(( -( ( destroy(( bar(Stark,-0.28 - ( -protect(bar(( TABLE[Hodor][rule(( -foo(( 510.48 / ( -x ) )) * ROWS ) / -0.66 + ( rule(protect(),TABLE[protect(dog,( --TABLE[foo(COLS,COLS)][( TABLE[----0.2 + rule()][TABLE[ROWS][-0.11]] )] + ( COLS ) - --( -ROWS ) * ROWS ))][-TABLE[( -COLS )][( bar() )] + foo(TABLE[betray(ROWS / protect(destroy(TABLE[TABLE[x][( -( ( y / bar(--0.08,( ( x ) ),( Jon )) - TABLE[protect(-destroy(protect(( Ygritte ),( foo(1,-74,mislead(foo(ROWS)) - Arya) - TABLE[Arya - ( COLS )][ROWS] ) * Jon,( protect() + ( -0.41 ) ))),-Jon,-( -bar(-destroy(--destroy(21) + -ROWS) - -0.73 / destroy()) ) * TABLE[-( ROWS )][Sansa])][Jon] ) * ROWS ) * ( ( ( -0.51 ) / --( x ) ) - ( Jon ) - ( Stark ) / protect(-0.66) * 33 / ( -( y ) ) ) + ( -430.33 ) )] + -protect(-32,-mislead(-( ( -( ( TABLE[0.6 * mislead(-Jon)][Ygritte] - -98 ) * ( -TABLE[rule(--0.51,x,( foo(( ( dog ) ),-( ( y ) )) ))][--( ( -rule(-( TABLE[foo(TABLE[betray(-1,( mislead(mislead(COLS)) ))][destroy()],-1,TABLE[Jon * --0.87][( -3 )] - ( dog + ( -1 ) ))][( Jon )] - COLS - protect(( COLS ),ROWS,TABLE[-0.74][( -COLS + ROWS * -76 )]) ),1 / ( rule(--( Jon )) )) * destroy(( 0.6 ),-0.87 / 0.42) ) )] ) + TABLE[COLS][-foo()] / ROWS + COLS ) ) ),0.27) + rule(TABLE[Ygritte][COLS * ( foo(Sansa,mislead(-960.396,Hodor)) ) - 85 / ROWS],mislead()) / protect(-370.3751,( Ygritte ))) / protect()][-destroy(( -Arya ),TABLE[x][-22]) - COLS] + -rule(rule(( rule(protect(ROWS,-y)) ),0.76) * TABLE[destroy(mislead(( TABLE[( -0.98 )][1] / rule(TABLE[ROWS][-Arya + -rule(( rule(-Arya,x,TABLE[COLS][-0.78]) ),-400.09) * foo(1)],-( ( COLS ) ),( 6 )) * -39 ),-0.83,rule(betray(COLS))))][-1]) / COLS * TABLE[TABLE[( rule(mislead(mislead(destroy(Jon,( ( mislead(-5,protect(TABLE[betray(-Hodor * COLS - -0.07)][Sansa])) ) ))),( -96 - ( mislead(ROWS,( Stark * ( 71 - -59 ) )) ) ))) )][-1]][ROWS])) - --( -Arya ),1)][-dog * 0.99],rule(( ( ROWS ) ) - TABLE[Ygritte][-( 57 )])) / x / 0.09]) * destroy(-39) ),( -foo(-Sansa,( ( ROWS ) ) - 410.956,rule(40,( 730.1 ))) ),-0.74)] - TABLE[( -dog )][COLS] ),-COLS),Hodor) * ( -210.8 ) )) )) ) ) + 54 ),TABLE[-1][bar(-0.37 + x)]),x) ) ) * -TABLE[-0.03 / Jon][destroy(TABLE[ROWS / Arya][-1]) * 840.8944] / -protect(destroy(Arya,0.13)) / COLS - ( bar(-ROWS) ) / bar(ROWS,--640.9,-1) * ROWS,betray(foo(( -0.31 ),bar(--COLS,ROWS - ( foo(-x + Jon,destroy(ROWS + Hodor,-85,COLS),( ( -60.6541 ) + ( -mislead(0.03 - -ROWS,ROWS) ) )) ),Ygritte + -1 + Stark),-82)),protect()) ) )
}
def rule(Jon,Arya){
	if(-41){

} else {

}
}
var Ygritte = -23
def bar(Sansa,Sansa,y){
	Hodor /= 0.73;
	y += -0.75
}
var Ygritte = 1
def betray(Hodor){
	Stark -= y;
	( mislead(( y ) - -Arya + ( ( foo(-( mislead(COLS,ROWS,bar(-920.34)) ) * 0 * 46,-Arya,ROWS) ) ),-( Stark )) )
}
assert 0.54 : "One can not simply parse himself"
def TABLE[( 1 )][i] {
	( ( 1 ) - -betray(TABLE[Ygritte][ROWS] / ( COLS / 0.22 )) + TABLE[Sansa * Jon][dog] );
	if(foo(-Stark + Hodor)){
	if(COLS){
	-74
}
} else {
	Stark /= -COLS
}
}
def mislead(Stark){

}
def rule(){
	COLS / foo(TABLE[COLS][bar(Ygritte) / y / destroy(ROWS,( -68 ) * TABLE[-( ( -destroy() + TABLE[( destroy() )][( ( -0.21 ) - --rule(y) )] ) )][0.21])],( ---690.305 / --860.6 / --Arya - protect(( y ),Arya,rule()) / -890.048 ));
	if(bar()){
	( ROWS )
}
}
def bar(Hodor,Ygritte,Sansa){
	if(-( mislead() ) + -0.79){
	protect(29,-x)
} else {
	Hodor += COLS
}
}
var y = -TABLE[( protect(( protect(-Arya / x) )) ) * ( Arya )][protect(Stark + dog,-50)] / ( dog ) + -COLS
def bar(Arya,Hodor){

}
def TABLE[-bar(--dog)][k] {
	-34;
	Ygritte /= -destroy(ROWS / mislead(),-Stark,protect(-TABLE[Arya / -ROWS - rule(COLS,TABLE[-860.7143][destroy() - 0.53]) - ( -COLS * bar(-96,-mislead(-TABLE[Jon][-rule()]) - mislead(730.975)) )][betray(COLS)],( rule() ))) - ( ( ( Sansa ) / -x ) )
}
def destroy(Sansa){
	if(1){
	x /= 420.98
};
	1 - ( ( -Ygritte ) )
}
var x = 53 * ( -( protect(( -TABLE[-( ( ( protect() ) ) )][TABLE[-20.945][( ( rule(-ROWS + COLS,( rule(-86) )) - bar(ROWS) - COLS ) )]] - Stark )) ) )
assert 0.35 : "Winter is coming"
var dog = -( ( 1 ) )
var Arya = --bar(( ( protect() ) ))
var Stark = ( ( x ) )
assert -foo(foo(foo()),-( --rule(-( -bar(12 * ( ROWS ) - Hodor,dog) - -COLS ),--1 - protect(( Arya - x ),0.19 - TABLE[-Jon][-Stark]) * Sansa) - ROWS ) - Hodor) : "Fear cuts deeper than swords."
def TABLE[--foo(betray(COLS + mislead(Hodor,rule())) * -bar(),760.859,ROWS)][k] {
	Stark /= Jon
}
assert -mislead(Ygritte + foo(ROWS,ROWS),--COLS + TABLE[betray(( -83 ) + 0.54)][x]) : "What do we say to the Lord of Death?"
def rule(){
	Sansa /= ( bar(rule(0.2)) );
	-0.45;
	protect(COLS)
}
assert ( -77 ) : "One can not simply parse himself"
def bar(Sansa){
	if(0.02){
	-protect(dog) - -bar(-1,-73,TABLE[( 83 )][mislead(bar(--destroy(protect(ROWS * ( COLS ) + bar() / foo(19 + ( ( 0.3 ) * betray() )),bar(Sansa),( -destroy(dog,220.863,betray()) )),-( y ),mislead(ROWS)) * Stark + ROWS + foo(--980.77,-COLS,-ROWS),( y ),0.91))]) / -0.55;
	destroy()
}
}
var Arya = rule(Ygritte)
def rule(Arya,Sansa){

}
def TABLE[-( ROWS )][j] {
	if(destroy(Sansa,Stark)){

}
}
var Jon = Ygritte
def TABLE[TABLE[Jon][-bar(-foo(( ( -Stark / ( 0.18 ) ) * Hodor * -0.45 / Stark * -1 ),-Hodor,( 280.378 )))]][j] {
	( ( -( Arya ) ) ) + TABLE[( ROWS ) / protect(-0.64,ROWS)][-COLS];
	if(COLS){
	if(y){
	-TABLE[mislead(-790.2478)][( -protect() )] / -x;
	foo(foo(81,ROWS)) * destroy(dog,0.61 / ( -88 ) / x) - -27;
	( protect(foo(Ygritte,1),Jon,-21) )
};
	Stark += rule()
};
	if(Jon){
	Stark /= y;
	Stark += -0.8;
	-( -( ( destroy(( ( 0.51 ) ),ROWS,--0.95) ) ) )
} else {
	x += ( -0.97 )
}
}
assert protect() / ( foo() ) : "One can not simply parse himself"
def TABLE[-TABLE[-1][-protect(TABLE[foo() + -0.54 / COLS][-mislead(0.17 * betray(19,( 1 )) * 38,-Stark,destroy()) / rule(ROWS,COLS)],-0.89,( -betray(0.28) ))] + destroy(-730.56,mislead(foo(dog),-1,1))][i] {

}
def TABLE[0.62][i] {
	Arya /= --68;
	if(protect(ROWS)){
	( ROWS );
	if(TABLE[COLS][TABLE[Ygritte][COLS - betray(Arya)]]){

} else {
	Hodor -= 90;
	if(Sansa){
	Ygritte += x;
	ROWS;
	if(ROWS){
	Jon *= ( x );
	if(y){
	y *= Jon
}
} else {

}
};
	if(protect(--0.81 / ( bar(TABLE[( x )][-0.61],x,0.47) ),100,-1)){
	Stark *= dog;
	Arya
}
};
	dog *= COLS
}
}
var y = destroy()
assert ( ( --58 ) ) : "One can not simply parse himself"
var Ygritte = -98
var Arya = -0.72
assert -protect(-0.37 / mislead(ROWS),TABLE[betray(-TABLE[0.16][COLS],-bar(-Jon + -protect(-310.536))) - bar(-0.47)][-ROWS],-( foo(( TABLE[COLS / Arya][--COLS] ),foo(Jon,destroy(COLS / -( -TABLE[76][66] ),ROWS))) )) - foo(--990.901,-69,-4) : "What do we say to the Lord of Death?"
var x = Ygritte + 97 * ( -0.52 )
def TABLE[-Stark - rule(26,( ( mislead(-0.62 - -rule(-( rule() + Jon )),( ( -0.3 ) / betray(0.16,rule(0.88)) - Hodor )) ) ))][i] {
	Stark;
	dog -= TABLE[COLS][-y]
}
var Hodor = 220.83
assert ( destroy(-x / -mislead(0.51 - bar(COLS),Hodor)) ) : "Nothing burns like the cold."
def TABLE[--99][j] {
	if(mislead()){

};
	TABLE[dog][Jon];
	-COLS
}
def TABLE[Hodor][i] {
	-0.55
}
def TABLE[Sansa][k] {
	if(-0.98){
	Stark /= ( protect(bar(---COLS,betray(( 0.9 ),betray(dog,Arya))),42) );
	if(ROWS){
	if(Ygritte){
	y += 540.837 * COLS * TABLE[ROWS][( -( --630.629 + ( COLS ) / foo(destroy(ROWS),-dog) ) ) + ROWS]
}
};
	590.13
}
}
assert dog : "Nothing burns like the cold."
def TABLE[-bar(( -0.23 ),ROWS)][k] {
	Arya -= betray(-0.99,protect(COLS))
}
def TABLE[COLS][i] {
	if(mislead()){
	Ygritte -= ( Ygritte );
	Stark *= --mislead(COLS) + ( COLS );
	if(ROWS){
	-mislead(( mislead(-98 / COLS,bar(-0.09,dog + -0.27 / ROWS,-73)) ));
	Stark *= dog - ( -TABLE[dog][rule(14,y)] ) * 0.66 * foo();
	250.4625
} else {

}
}
}
def protect(Stark,x,Sansa){

}
def TABLE[0.98][k] {
	TABLE[0.27][destroy(bar(440.758,ROWS,mislead(93 - TABLE[( destroy(COLS) )][----( ( -1 ) ) - Arya - COLS * betray(( COLS ),( mislead(1) ) * Sansa * ( ( --88 * ( y ) ) )) + ( --950.859 ) + ROWS],betray(foo(TABLE[( ( betray() ) )][TABLE[TABLE[( -0.56 )][COLS / 850.865]][( bar(foo(-92,-0.31)) )] * ( x ) - ( ROWS )],-ROWS)))))];
	mislead(-( -protect(( betray() )) ) * ( ROWS ),bar(3,Stark))
}
def protect(Sansa){
	if(x){

} else {
	if(Hodor){
	Arya
};
	if(-73){
	x /= TABLE[( -0.68 + -1 )][0.81] + ( ( mislead() ) )
}
}
}
assert ( mislead(Hodor) ) : "Winter is coming"
def foo(Hodor,y){
	( COLS );
	( x )
}
def rule(y){

}
var Arya = foo(--Arya,ROWS)
def TABLE[Stark][k] {
	Sansa;
	destroy(-1)
}
var Jon = betray(destroy(-0.44 * ( 1 ),( ROWS )),Arya)
def TABLE[( Hodor + ( 53 ) / ( Ygritte ) )][k] {
	if(rule(Stark,-1)){
	( ( ( -48 ) * Jon ) );
	Stark += ( Sansa )
}
}
def foo(Arya,Stark){
	( destroy(TABLE[ROWS][-Hodor],Sansa,ROWS) ) + 0.55
}
def TABLE[-0.75][j] {
	Stark;
	COLS
}
assert -0.32 : "What do we say to the Lord of Death?"
var Hodor = -( -990.4455 )
def TABLE[foo(930)][j] {
	if(foo(-0.81) / foo(Ygritte) / foo(TABLE[rule(Stark,-TABLE[-( Stark )][( 1 )])][Hodor / -0.39 + mislead()] - dog / -0.12 * ROWS + COLS + dog,TABLE[-1][--rule(( ( protect(ROWS) ) )) + -690.58],--32) * y + ( -0.65 * -Sansa ) - ( rule(-Arya / destroy(bar(ROWS)),protect(( ( protect(( -( bar() ) ),-( ( ( foo(( -110.29 / betray() )) ) ) )) * ROWS / 0.13 ) ),Stark) - Sansa,COLS) )){
	( -( -0.07 ) ) - -( bar() );
	Sansa;
	if(( -( Hodor ) )){
	if(Sansa){
	if(Stark){
	y /= --bar();
	Hodor /= Jon * foo(ROWS,-dog,Hodor);
	if(-93){
	dog
}
} else {
	if(foo(-( -ROWS ) - -bar(23))){
	( dog ) * Stark - 800.6951 * COLS;
	( -ROWS )
} else {

}
}
};
	if(( -TABLE[x][Sansa] * TABLE[-0.76][( dog )] )){
	if(-foo()){
	Arya;
	if(bar(-y,TABLE[dog][foo()] * protect(mislead(( --( ( ( ( -Hodor ) ) ) ) * Sansa / COLS ),Ygritte,( ROWS ) - COLS + 210.3))) - COLS){
	TABLE[-rule(( ROWS )) / COLS][-Jon / y] + -( -0.83 );
	Ygritte /= --( --bar(ROWS,TABLE[220.849][COLS / dog]) )
} else {
	x *= -Ygritte;
	-0.42
}
};
	protect();
	Stark /= ( protect() )
} else {
	Sansa += ( -67 - -0.72 ) / TABLE[-Sansa][COLS * COLS] / -betray() + -( ( ( COLS - x ) ) );
	TABLE[Sansa][( 95 )]
}
} else {
	( -97 ) / TABLE[-0.09][-COLS] - -( ( TABLE[59][mislead(-Stark,0.41)] ) )
}
} else {
	dog;
	if(Hodor){

} else {
	Stark -= TABLE[-0.66][Ygritte];
	mislead(( ( 0.95 ) ),COLS)
}
};
	if(Arya){
	if(-1){

} else {
	y -= --( ( destroy(( bar(0.41,dog) ) - ( bar(( --790.5025 )) ),( -mislead() + -x + COLS )) ) * --1 );
	destroy();
	-27
}
} else {
	if(foo(ROWS)){

}
}
}
var Jon = 0.12
var x = TABLE[--5][-COLS]
assert Ygritte : "Nothing burns like the cold."
assert -40 : "What do we say to the Lord of Death?"
def foo(Stark,Ygritte,Sansa){
	-71;
	-destroy() * -x / Jon * COLS + 200.928 - destroy(-( 1 ),foo(TABLE[rule()][( -( ( -ROWS ) ) )] - -foo(Jon,-TABLE[y][( Ygritte / ROWS )]),35))
}
var y = --betray(94)
var x = ( Ygritte ) * -30.28
assert COLS + --600.87 / rule(COLS) : "One can not simply parse himself"
var dog = ROWS
def TABLE[destroy(--4 / ( TABLE[Sansa][destroy(-ROWS)] ) * -COLS / y,destroy() - COLS)][k] {
	if(-0.07){
	rule(-destroy(mislead(( Ygritte * dog * -( ( -0.67 ) - --10 * --0.81 * COLS / -0.74 / -( -90 ) * rule() + -0.07 ) ),0.06),Jon,protect(ROWS)),-83,( ROWS ));
	dog /= ( foo(x,-protect(Sansa,800.4217,1),ROWS) )
} else {
	if(-0.36){
	if(mislead(-0.58)){
	bar(-Jon) - ( Sansa )
};
	if(( destroy(Ygritte) / foo(Arya) )){
	if(( betray(protect(foo(-41,dog,protect(( ( ( Stark - Arya ) ) ))) - ROWS / -( -48 * -1 ),-TABLE[Arya][( -dog - -760.16 )],-protect(( 990.47 ),COLS,( ( Ygritte ) )))) )){

};
	Stark *= ( destroy(TABLE[( Arya )][---foo(-63)]) )
}
} else {
	( 1 / -0.51 )
}
};
	if(--0.74){
	dog *= TABLE[ROWS][-mislead(foo(-0.7))]
} else {
	-60;
	if(bar(betray(x,Sansa),-0.88)){
	( foo(destroy() + x,COLS,( -43 )) )
} else {
	if(( mislead(rule()) )){
	Stark -= rule(mislead(-COLS),protect(foo(-TABLE[TABLE[--760.412][( ( dog ) )]][0],48),( -1 )));
	if(COLS){
	Stark -= -0.98;
	Sansa -= Ygritte
}
};
	-Stark + TABLE[( COLS )][--1000.4123] / -dog;
	Hodor -= ( TABLE[( -y )][( TABLE[foo(Ygritte)][0.56] )] + ( bar(protect() * ( -ROWS - -x ),Arya) ) )
};
	if(( foo(( protect(TABLE[( -COLS )][Sansa],COLS) ),20) )){
	if(dog + Hodor){
	Jon *= ROWS;
	y += 73;
	if(x + ROWS * 0.75){
	foo(-660.68,( bar(ROWS,COLS) ),( Arya ) - bar(0.75 + protect(-1,y),14))
} else {
	Hodor *= x;
	x *= protect(ROWS,Hodor)
}
} else {
	( x )
};
	( --92 );
	mislead(betray(( ROWS ))) / -53
} else {
	if(Stark){
	-0.61
};
	if(Jon){
	if(ROWS){
	Arya *= Sansa;
	Hodor /= 330.94 * bar(Jon,ROWS)
} else {
	y *= ( -1 );
	if(13){
	( mislead(rule(( Sansa ),TABLE[COLS][bar()],destroy(( -ROWS ) * TABLE[protect(mislead(( Jon )),Jon)][Arya])),Sansa) );
	Jon += COLS
} else {
	if(ROWS){
	Hodor
} else {

}
};
	if(COLS){
	if(-94){
	Ygritte -= -720.4;
	if(( ---Stark - Ygritte )){
	Stark - mislead(bar(0.5))
} else {
	x *= TABLE[0.28][bar(TABLE[protect()][-780.7],-340)];
	Stark += -COLS;
	dog -= -Jon
}
};
	x + rule(dog,COLS) / ( betray(destroy(580.4 + Stark,y),( ( COLS ) )) - --Hodor * 71 ) + Arya
}
};
	Ygritte /= -31;
	Jon /= mislead(Jon) + ( -TABLE[( ( -TABLE[y][mislead(Hodor)] ) )][10.2] ) / 1 / mislead(-0.14)
}
}
}
}
assert x : "Winter is coming"
var Stark = TABLE[( Arya )][( TABLE[--0.52 * Stark][ROWS] ) * TABLE[Stark][betray(protect(dog),( dog ),betray()) - Sansa]] / -Arya + ROWS
assert -( mislead(destroy(-550.14) / -6 / Jon / x - ( -34 - -56 ),COLS,mislead() - -0.55) ) : "Winter is coming"
assert COLS : "Nothing burns like the cold."
assert -Jon : "Nothing burns like the cold."
def TABLE[-Jon / TABLE[-46][--1]][j] {
	if(( ROWS )){
	( ( Arya ) );
	Stark -= COLS
} else {
	Arya += y - 0.71 / bar(-18 / ( --TABLE[Arya][protect()] ) - --( dog ),( protect() ));
	if(bar(y,COLS)){

};
	if(TABLE[( -protect(rule(foo(( ( ( -54 ) ) ),-0.89,Jon + -710.4 / TABLE[( --780.81 ) - x][Jon] + TABLE[( ( TABLE[( protect(y,COLS) / COLS )][( ( mislead(COLS / TABLE[--ROWS][-84 - TABLE[( protect() )][Hodor]],ROWS * ( ROWS )) ) )] ) )][93]),( COLS ),bar(TABLE[Arya][dog])),( Jon )) ) * Hodor + TABLE[mislead(COLS + --1)][--0.01]][TABLE[y][COLS] * 1]){
	dog += protect(( destroy(1) ),dog);
	if(bar(Arya / --0.78 + 0.56,ROWS,bar(( 1 ) - destroy(rule(TABLE[( TABLE[Hodor - TABLE[TABLE[TABLE[-Stark][0.6]][Arya] - ( foo(mislead(COLS,foo(Sansa - dog + ROWS),foo(-0.87) / ( 1 )),x) )][-y] * 1 * 0.78 * -COLS + protect(( -0.85 )) / dog + ( -foo(( -0.64 )) * -0.7 )][mislead(betray(foo(rule(foo(COLS,x) * dog,-foo(),mislead(Ygritte,930.236)),y),Ygritte / destroy(protect(( -( -1 + TABLE[COLS][foo(-0.78)] ) - ROWS - Arya ),390.1861,Arya)) * -TABLE[( 60.1497 / destroy(ROWS) ) - mislead(Arya,ROWS)][-TABLE[Jon][Arya]] - Arya),ROWS)] ) - ( protect(betray(( ROWS ),y) + dog + bar(protect(bar(-( rule() ),ROWS) * betray(450.66,( mislead(betray(( Sansa ),42),( Sansa )) * Hodor )) - Sansa),( 130.6386 + -ROWS ) * -1)) )][( -1 )])) * -ROWS,y))){
	Hodor;
	Jon /= x
}
}
};
	Hodor *= ROWS
}
def bar(Arya,y){
	if(0.03){

} else {
	if(Ygritte){

} else {
	--bar(1) * dog;
	if(--dog * ( ( Hodor ) )){
	( -1 );
	1
} else {
	TABLE[-0.77][Sansa - bar()]
}
}
}
}
def TABLE[bar(1)][i] {
	ROWS;
	-mislead(( ( ( -Hodor ) ) - 0.58 ),Sansa) - TABLE[( -( Jon ) )][( -( 1 * protect(( ( Ygritte ) ),-ROWS) ) )]
}
def bar(Ygritte){
	Stark /= 0.53;
	if(( -1 / TABLE[Jon][y] - COLS + mislead(y,Ygritte,Sansa) ) + Ygritte){
	-ROWS
} else {
	if(-betray(COLS / -( 0.61 ),protect(( TABLE[COLS][( 350.7 )] )))){
	Stark *= -1 * COLS;
	x -= Stark
};
	( betray(protect(ROWS)) ) - 1;
	rule(-COLS,-mislead(-49,Arya) / -betray(-0.19,-TABLE[TABLE[-bar(bar(490.039))][COLS]][x] + -1,-( -540.468 )),rule(ROWS))
}
}
def TABLE[COLS][j] {
	COLS;
	if(0.98){
	83
} else {
	if(( ROWS )){
	x *= COLS;
	if(( ( -( dog ) - destroy() ) )){
	x
}
}
};
	if(29){

}
}
def betray(Hodor,Hodor){
	Sansa -= -TABLE[0.25][0.79 * -mislead()];
	if(-0.5 - Stark){
	if(-730.374){
	Stark /= COLS
} else {

};
	Hodor
} else {
	foo();
	if(TABLE[( ROWS )][-mislead(destroy(-0.26),protect(betray(TABLE[( 1 )][Stark * TABLE[COLS][1]],40.99),Stark) * ( ROWS ),Jon)]){
	-mislead(Hodor,COLS)
} else {
	if(92){
	-bar(mislead(ROWS,protect(COLS,-Sansa + Ygritte,-43)),rule(-ROWS));
	if(protect(-0.54,-dog,-58 + ROWS)){
	( rule(--0.7) / -28 )
}
} else {
	-72;
	if(-( -0.66 )){
	Jon -= ROWS;
	if(--0.78){
	-71;
	if(betray()){
	690.817;
	y /= betray(( -( ROWS ) ),( 0.57 ))
};
	if(mislead(-0.35)){
	Stark += 0.02;
	x *= ( ( ( ---0.3 ) ) ) + -0.57
}
} else {
	0.97;
	Sansa += ( 381 )
}
} else {

};
	if(y){
	Sansa += dog;
	if(( bar(-48,mislead(12,-430.559),-protect() / Ygritte) ) * ( ( ( TABLE[-mislead(ROWS,--foo(COLS))][COLS * Hodor] ) ) )){
	( destroy(Hodor,COLS) );
	Ygritte *= ( -betray(( protect(( -( betray(rule(Stark,( Ygritte ),mislead(-bar(protect(--mislead(---1 * ( ( ROWS ) ),ROWS)))))) ) ),-0.09) )) ) + ROWS + --0.69 * -0.74;
	if(Ygritte - 1){
	if(TABLE[34][Jon]){
	-ROWS;
	if(24){
	( --0.65 )
} else {
	x -= Hodor
}
} else {
	--1 + ROWS
};
	x += -5
}
} else {
	x += ( dog ) * -( foo(COLS,Ygritte) - -ROWS );
	if(-0.86){

};
	rule(( mislead(protect(betray(mislead(-ROWS,58)) / destroy() * COLS,protect(--93,0.19) + 850.746)) ),-dog - ( ( COLS ) / foo(-ROWS * -ROWS) ) + 970.244)
}
} else {
	Sansa /= ( -0.92 * ( ROWS ) )
}
}
}
}
}
def TABLE[( -( COLS ) / TABLE[foo(( betray(Ygritte) )) + ( -COLS ) + 280.58][COLS] )][k] {
	if(ROWS){
	0.47;
	-Stark / Hodor
};
	-700.84
}
def rule(){
	Ygritte += ( Hodor ) - ( betray(rule(( ( 60.2739 ) * -( COLS ) ),0.42),-( mislead(-60.5,( 0.89 )) )) )
}
def foo(Sansa){
	-0.63;
	( COLS )
}
def rule(y,Arya,dog){

}
def destroy(Arya){
	if(COLS){
	Arya += ( betray(( ( bar() ) )) * foo(bar(dog,dog),-( ( ( -53 ) ) ) / Sansa,ROWS) - 0.7 );
	foo(-bar(),COLS)
}
}
def protect(y,dog){

}
assert ( TABLE[COLS][COLS] ) / -0.36 / Ygritte : "Winter is coming"
def TABLE[( protect(( ( ( -COLS ) / Hodor ) )) / betray(mislead(-Jon * ( 1 ) + -36 / ( protect(Jon) ) + y * Stark / -1 / ROWS,-0.35 * -COLS * -Sansa - mislead(protect(-Arya,--1,-Sansa / bar(-550.94,28,-Ygritte + Arya)),-foo(Stark,Hodor) + Jon,COLS)),( Ygritte - Arya )) / Stark )][i] {

}
def rule(){

}
def TABLE[( mislead(Jon) )][j] {
	-0.63 * ( 0.16 )
}
def TABLE[mislead() * -COLS][k] {
	Arya -= 0.06;
	( ( -rule(protect(TABLE[550.23][mislead(COLS)],COLS - destroy(COLS))) ) / --23 - ROWS )
}
assert TABLE[foo(( ( ROWS ) ))][( rule(( 0.36 ),y,ROWS) - -230.58 )] * ---0.47 - -COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -7 : "Winter is coming"
var Sansa = 0.87
def TABLE[foo()][k] {
	Sansa;
	Ygritte *= -rule()
}
def TABLE[--92][k] {
	x += -35;
	if(-Arya){
	Stark += Stark
} else {
	betray(( -( -mislead(( -33 ),x,( x )) ) ) * 64)
}
}
def bar(dog,y){
	if(-920.97 * TABLE[ROWS][TABLE[ROWS][-mislead(bar(COLS / destroy(foo(y),( 8 * y ))) * betray(( mislead(Arya,x) - -1 * betray(-280.7,-mislead(bar(),-destroy(-390.176))) ),protect(0.4 - ( 0.52 ))) - -1,--490.352 - destroy(( -destroy(destroy(--1,COLS),COLS,( ROWS )) ),4) + Hodor - ROWS / protect(TABLE[betray(ROWS,TABLE[Stark][( TABLE[dog][( 55 )] )],COLS * Sansa)][-( -( -680.959 ) )] + ( Stark )) * ( Stark ) * ( ROWS ) - -89,rule(x))]] + destroy(( 23 )) - ROWS){
	COLS;
	if(( Hodor )){
	69;
	-450
};
	if(( TABLE[Hodor * TABLE[bar(-60,TABLE[rule(x,--0.04)][Hodor] * dog)][-COLS * -0.68]][( 1 )] )){
	y /= COLS
}
}
}
def protect(){
	Jon *= ( ( bar(( -TABLE[ROWS][TABLE[-0.87][--16]] )) ) ) * ( Stark )
}
assert ( ( rule() ) / COLS * mislead(COLS,-1) / foo(Stark,-140,12) ) + COLS : "What do we say to the Lord of Death?"
assert Sansa : "One can not simply parse himself"
var Arya = Ygritte
var Arya = 0.16
var y = y
var Arya = 0.74
assert -0.41 : "Fear cuts deeper than swords."
def TABLE[TABLE[COLS][-TABLE[-( ( Jon ) )][99]]][j] {
	Hodor += -0.29
}
def destroy(Sansa){
	if(63){

}
}
def protect(dog){
	-Ygritte
}
var Jon = 0.39
def TABLE[-82][k] {
	x *= foo()
}
assert ( TABLE[1][-( -1 )] ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = Arya
assert rule(Jon) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = ( Ygritte )
def protect(){
	Sansa;
	-1;
	if(ROWS){
	y -= betray(Sansa)
} else {
	if(( -rule(TABLE[( ROWS )][( -( ( --1 ) ) )],( rule() * -dog / TABLE[COLS][destroy(( ( foo(destroy(),betray(( x ),-0.52),( -ROWS - TABLE[x + dog][( Hodor )] )) + --bar(x,-rule()) ) ) - rule(betray(-( Arya )),foo(mislead(foo(( --rule(mislead() * ROWS * COLS,protect(TABLE[-COLS][-73]),( Ygritte )) ),-Sansa + betray(-Arya + -0.96) - 82)),Sansa,( -220.23 - ROWS * ( -0.6 ) + 0.38 - Hodor ) + -85) / Sansa),0.86 * ( rule(TABLE[( -ROWS )][-0.61],-x / foo(( --foo() - ( ( x ) ) ),( mislead(-Jon,( ( ROWS / dog + -Hodor ) )) ) + -74,foo(TABLE[Sansa][-( COLS ) - ( ROWS ) * rule(COLS)],-Stark,( ( 600.35 ) )))) + rule(TABLE[Stark][bar()]) ) - ( ROWS ) * Stark - ( Ygritte ),1)] + ( -760.213 ) / ( --0.17 ) )) )){
	if(-Stark){
	Hodor;
	protect(x);
	x -= -34 - ROWS / bar(TABLE[Arya][TABLE[( -bar(rule(--61 * y),( ( x ) )) ) * ROWS][( 25 )]],( -0.35 ),( -72 ))
};
	TABLE[( y )][foo(-( bar(0.51,rule(),-1) ) * bar() * TABLE[bar()][-( Sansa )] + -Ygritte / destroy(( Sansa ),rule(550.6)) * ( --1 ) * betray(( ( ( 0.01 ) ) )) - -0.61 + TABLE[( destroy(24,-foo(1) - 0.37) )][--( -760.3 ) + TABLE[-TABLE[COLS][Hodor] * ( protect(betray()) ) + 0.47][( -1 )] * ( bar(-87) )])];
	y += TABLE[foo(--( ROWS ),--COLS) - ( Stark )][( ROWS )]
} else {
	if(-0.25){

}
};
	dog
}
}
assert TABLE[-30 * COLS][-mislead(96 * bar(COLS,( 0.62 )) / betray())] : "Winter is coming"
var Stark = betray(y,Stark)
def protect(Sansa){
	TABLE[protect(Jon,COLS,betray(Jon,betray(-( Sansa ),-ROWS,( -x ))))][mislead(COLS)]
}
var Jon = ROWS
def betray(Stark){

}
def TABLE[( COLS )][j] {
	Arya *= protect(( ( TABLE[protect(-1,-77)][1] ) ),-destroy(Sansa,COLS)) * 52;
	( Ygritte ) * Stark
}
assert -620.8297 * --22 - -530.61 : "One can not simply parse himself"
var Jon = x
def betray(){
	--TABLE[( Stark )][36];
	if(( -Jon )){

} else {
	x += Ygritte;
	Sansa *= --Stark
};
	56
}
assert -bar() : "One can not simply parse himself"
assert rule(( mislead(( --( ( y + betray(Arya,COLS) ) / TABLE[( bar(mislead(--COLS * ( y ) - ROWS * ( y ),0.85,----( COLS ) + ( ( 0.87 ) )),0.02,rule(betray(mislead(Arya),protect(-TABLE[--0.29][ROWS],( -600.866 + Hodor + bar(dog) - protect(x,rule(y,bar(58)) + ROWS,-0.8) )),Jon),ROWS / COLS * Jon)) )][-ROWS] / protect(betray(( -26 )),-50,ROWS) / ( -1 + Ygritte ) * ROWS ) ) * ( bar(x,( -0.29 ) * Hodor,Jon - -protect(-0.02,-Stark)) * TABLE[( -mislead(COLS) / Sansa )][-75] )) ),betray(( 73 ),( TABLE[destroy(-0.1)][Jon] ))) : "Nothing burns like the cold."
var Hodor = -( Ygritte )
def foo(Arya,y,y){
	( ROWS )
}
def protect(Ygritte){
	if(Arya){
	protect(COLS,( destroy(destroy(Sansa,COLS - y + ( 640.61 ),TABLE[protect(ROWS,37)][COLS]),ROWS) / Ygritte ) + bar())
}
}
assert ( rule(( ( dog ) )) ) : "Winter is coming"
def mislead(){
	-ROWS;
	if(Hodor){
	Ygritte += ( -Ygritte );
	Ygritte += TABLE[TABLE[Hodor][TABLE[--( 14 )][protect(( ( ( TABLE[( foo(ROWS) )][-1 * ( -Sansa )] ) * y ) )) - bar(COLS,280.338)]]][Stark] + TABLE[( y )][dog + COLS]
}
}
assert ROWS : "Fear cuts deeper than swords."
def bar(Hodor){
	y -= ( TABLE[dog][-destroy(Sansa,( COLS )) * -( Hodor ) * -rule(( y )) / TABLE[TABLE[TABLE[( betray(protect(( Arya ),-x),-0.28) )][-x * ( ( COLS ) )]][COLS]][Sansa]] )
}
def TABLE[betray(bar(-( TABLE[foo(TABLE[Ygritte][rule()]) + bar(--bar(ROWS,COLS + destroy(protect(COLS,COLS),( -foo() ),-710.9405 * x))) - COLS][78] ) / Arya,( TABLE[82][foo(100,rule(TABLE[( Sansa )][betray(( foo(COLS,-0.41,( 0.53 ) + ( TABLE[Ygritte][58] )) ) - ( 1 ),x)]))] ),Hodor),-dog,destroy(-310.102) - ( --0.47 ) - -COLS - rule(-66,ROWS))][j] {
	COLS
}
def TABLE[Arya][i] {
	if(Jon * rule(-47)){
	Sansa /= --1;
	if(-TABLE[protect(( y ),( Hodor ),-1)][Hodor] / COLS - -protect(ROWS,Stark - ROWS) - destroy(( ROWS ),Ygritte,destroy(( ( COLS ) ) / dog))){
	1;
	if(x){
	ROWS;
	dog -= -480.494
}
} else {
	Arya -= destroy(TABLE[destroy(x,TABLE[TABLE[mislead(-Ygritte)][-TABLE[1][TABLE[-360.1][-ROWS / protect(betray(),( Jon )) - -0.44 * protect(Sansa)]]]][( Ygritte )])][-0.44],bar(-Hodor));
	Sansa -= ( -610.14 )
}
};
	if(COLS){
	dog /= --0.05
} else {
	if(Sansa){
	if(-140.4){
	x -= Ygritte * -TABLE[--0.37 + foo(( bar(-320.9,-40.28,( 0.4 )) ),Sansa,85)][protect(rule(protect(TABLE[TABLE[COLS - Ygritte + -74][COLS]][( mislead(COLS,0.71) )] / bar()),ROWS) - ---710.3)] - TABLE[COLS][betray(( -0.09 ))];
	mislead()
}
};
	-70;
	( destroy(Arya / --( ( -650.997 ) ) * x) )
}
}
assert Stark + rule(570.19,550.953) : "Fear cuts deeper than swords."
def protect(dog,Hodor){
	Arya *= bar(Ygritte,-330.01);
	if(-( -TABLE[( COLS )][840.4592] ) * 0.81 + Hodor + dog){
	Jon -= -COLS;
	mislead() / -COLS - bar(Hodor) / -( dog ) - foo(rule(-960.071),0.19,( 4 )) + -0.62
} else {
	if(betray()){
	Jon -= TABLE[( COLS )][ROWS] / -x;
	Ygritte -= -580.68;
	if(0.78){

}
}
};
	( ( protect(( 7 )) - 99 - ROWS ) )
}
def foo(Jon){
	if(mislead()){
	x += -rule(ROWS) * -COLS;
	if(( -1 )){
	y -= -1
}
} else {
	if(ROWS){

} else {
	betray(----0.43,91,( ROWS ))
}
}
}
def mislead(y){
	if(dog){
	if(TABLE[destroy(-1)][( ( COLS ) ) / -foo(TABLE[-1][COLS])]){
	y
}
} else {
	if(19){
	if(ROWS){
	Arya -= Ygritte + --0.79;
	if(( Stark )){
	Arya;
	Jon *= 19
} else {
	if(betray(( COLS ))){

};
	-640.445;
	x *= -( ( --0.14 ) )
}
} else {
	0.69;
	if(-( ROWS )){
	if(--0.53){
	( -x );
	COLS
};
	( ROWS )
} else {
	if(--COLS){

} else {
	if(( ROWS )){
	Hodor / destroy() + 1;
	Arya
} else {
	if(( Hodor )){
	Stark -= --Jon
} else {
	----0.3 - -TABLE[destroy(--( ROWS ) + ( --protect(COLS) / TABLE[-980.059][Ygritte] / -ROWS + bar(--Hodor + -( -ROWS ),ROWS,Hodor) ),COLS,( -betray() * Ygritte ))][-810.84];
	betray() - --0.25 * 1 / -protect()
};
	Stark *= mislead(( ( dog ) ))
}
}
}
};
	if(Arya){
	Jon *= --x / COLS / COLS
}
};
	if(bar(0.36)){

}
};
	( --1 / --0.52 - Arya + TABLE[--( Jon ) + ( Hodor ) + rule(Arya,-mislead()) / ( betray(COLS * Stark,ROWS) )][---( COLS ) + -1] - --0.12 + ( COLS ) ) / destroy(-0.84);
	Jon -= ( mislead(-0.06) )
}
assert x : "Nothing burns like the cold."
def TABLE[TABLE[( COLS )][-Arya - 80 * 0.04 * ( Stark )]][k] {

}
var Ygritte = -( x )
var Ygritte = -ROWS
assert ( 70 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = destroy(--Stark - COLS,TABLE[ROWS][( ( -0.16 ) )])
def TABLE[0.1 + 0.86][i] {
	TABLE[dog][foo(( -( 0.17 ) )) + Jon]
}
var Hodor = protect(( -34 ),-380.51 - COLS,( -64 + -bar() ))
def TABLE[Arya][k] {
	if(COLS){
	if(x){
	Arya -= betray() + COLS / -mislead(-70.6634,Hodor,Jon)
}
};
	Sansa -= -32 - foo(COLS)
}
def TABLE[17 + -bar()][k] {
	if(-foo(Sansa) * ( Ygritte )){
	dog += -dog;
	Hodor += Ygritte
} else {
	-Hodor;
	if(-COLS - -0.04 / betray(1)){
	if(-0.74){
	if(( COLS )){
	if(ROWS){

} else {
	-9 - foo();
	--10
}
};
	0.23 * --0.56 / 1
} else {
	Ygritte += Sansa;
	if(-( 0.75 )){
	Sansa -= Jon
} else {
	( ( ( -TABLE[790.089 + --Hodor][foo(( ROWS ),-Sansa - foo(TABLE[0.07][-50 + rule(0.87,COLS) - ( ( destroy() ) )],( ( COLS ) )))] ) / x ) );
	( -ROWS - Sansa )
}
}
};
	Arya /= -1 + -0.55
};
	if(x){

} else {
	--TABLE[( ( -1 ) )][TABLE[-TABLE[TABLE[ROWS][( TABLE[-0.84][( 830.114 )] )]][COLS]][mislead()]];
	if(-5){
	Hodor -= ( -dog - Ygritte );
	TABLE[y][rule(-35 + -0.02 + -Stark - COLS,-1)]
} else {
	if(--1){
	Sansa
} else {
	COLS;
	Ygritte *= destroy(Ygritte,-foo())
};
	ROWS
};
	Jon -= mislead(betray(),COLS * Arya)
};
	Stark += ( --790.4412 + -1 )
}
def TABLE[betray(( x ) - ( 87 ))][j] {
	if(( --820.535 )){

} else {
	Arya;
	destroy(( ( TABLE[0.09][-( ( ( -foo(TABLE[160.92][0.1],mislead(( bar(1) ) / ( Arya )) - betray(TABLE[mislead(-( ROWS ) + -0.88)][-100],-67) / COLS) ) ) + 740.343 + ( TABLE[--( y )][-( mislead(( ( Hodor ) )) * -8 )] ) ) - ( destroy(mislead(( ROWS ),COLS),COLS) )] ) ),28);
	Sansa -= protect(--foo())
};
	x *= betray() * bar(COLS) - 130.64 - bar(x) + -COLS - ( -10 );
	Ygritte /= ( -81 ) - Sansa - x * TABLE[( --bar(bar(1 - -y,-Jon / 0.96),( -11 + bar(-foo()) )) / COLS - Ygritte * ---ROWS * TABLE[COLS][Stark] / -Arya * Jon + x ) / rule(15)][ROWS] / ( TABLE[Ygritte][( Arya / -COLS )] )
}
def TABLE[TABLE[-ROWS][foo(---TABLE[rule(-( -740.7 ),x,-48)][Hodor] * x * protect(-protect(Sansa,ROWS),-Ygritte),-88,94)]][i] {
	Ygritte *= ROWS
}
def TABLE[Hodor][k] {
	-destroy() - Stark
}
def TABLE[y][j] {
	if(-dog){

}
}
var Stark = -COLS + ROWS
assert destroy(-( TABLE[x][--1 / 0.95] ),Jon,-y) : "Winter is coming"
def TABLE[foo()][j] {
	if(-ROWS){

};
	if(--TABLE[bar(---( protect(-1,( ( COLS ) ),dog) )) - destroy(Hodor)][COLS]){
	Jon *= COLS;
	Sansa += TABLE[--( -1 )][---ROWS] * Stark
}
}
var Sansa = COLS
def TABLE[mislead(-( TABLE[betray(Hodor)][( destroy(-ROWS) ) - ( -360.198 - mislead(Ygritte) * ROWS )] / -83 )) * ROWS][i] {
	Stark *= COLS;
	Stark;
	-1
}
def protect(Arya,y,Sansa){

}
assert foo(dog) : "Fear cuts deeper than swords."
assert -420.74 : "One can not simply parse himself"
assert ( -98 ) : "Nothing burns like the cold."
def destroy(){
	if(( ( ( -1 ) * TABLE[690.4248][-0.97] ) )){

};
	y
}
assert bar() : "Fear cuts deeper than swords."
assert ( -1 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Stark : "What do we say to the Lord of Death?"
assert ROWS : "One can not simply parse himself"
assert --7 : "Winter is coming"
var Hodor = -88
assert ( ROWS ) : "Winter is coming"
var x = betray(( protect(--ROWS,( Jon ),TABLE[TABLE[-1][COLS]][TABLE[TABLE[( bar(Sansa,-x,ROWS - 40) )][( TABLE[5 / --COLS * foo(-Stark,betray())][x] ) - -1] / TABLE[x][( Ygritte )]][-1]]) ))
def TABLE[foo(--COLS)][i] {
	Arya *= -0.6
}
assert protect(-Sansa) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(){
	if(( Stark )){

} else {

};
	mislead(-COLS)
}
def TABLE[( protect(-1) )][k] {

}
def protect(dog){

}
assert -( COLS ) : "Nothing burns like the cold."
var Jon = Sansa
assert betray(Stark,( ( -0.12 ) )) : "What do we say to the Lord of Death?"
def TABLE[TABLE[-980.378 - 45][Stark]][k] {

}
var Stark = 1
def TABLE[TABLE[bar(( ( 32 ) + -0.37 ),82 + -ROWS)][( y )]][k] {
	Arya *= ( -Jon );
	y /= COLS;
	Arya *= COLS + foo(Arya)
}
def rule(Jon){
	if(protect(y) + ( foo(destroy(Stark,Stark,bar(--Stark + 1,0.07)),Arya) )){
	Hodor += 0.32 + -1;
	-190.4
};
	( destroy(-( 12 ) - 75 - y - Jon) )
}
assert bar(-( ( -bar(-x) ) + TABLE[COLS * -0.72][-TABLE[( COLS )][-Arya]] ),-( dog ) * ROWS - ROWS,ROWS) : "What do we say to the Lord of Death?"
assert Ygritte : "Nothing burns like the cold."
def TABLE[COLS - -mislead(( -500.2333 ) + ( bar(ROWS) ),Arya)][j] {
	( ( -0.74 ) );
	Stark
}
def mislead(Stark){
	-Arya * 1
}
def protect(Ygritte,Sansa){
	if(betray()){
	if(TABLE[-66][( Arya )]){
	Ygritte *= protect(TABLE[ROWS][destroy()],ROWS)
}
};
	-0.68
}
assert ( y ) : "One can not simply parse himself"
def protect(x,x){
	( mislead(( Sansa )) );
	-0.89
}
assert foo(( 0.1 )) / TABLE[x][0.89] * -TABLE[580.4653 * 72][-Hodor] : "Fear cuts deeper than swords."
def foo(y,Jon){
	rule(ROWS,( -TABLE[0.02][0.13] ));
	mislead(-protect(( ( mislead() ) )) / ROWS) * -foo(( -18 ))
}
def TABLE[x][i] {
	if(( ( foo(Jon,-30 + destroy(-73) - Sansa) ) ) + 56){
	TABLE[-0.96][dog];
	y -= -rule(1 / -foo(-Sansa,( -1 ),Arya),protect())
}
}
var Jon = TABLE[ROWS][betray(--1 / ROWS,COLS)]
var x = Jon
var Arya = ( -( mislead(COLS,-37) ) )
assert bar(( -Ygritte )) - 1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(Sansa,Hodor,Ygritte){

}
def betray(Hodor,Stark){
	mislead(dog,betray(-740.281,ROWS),--120.22 + ( 1 )) * Jon;
	if(-( Ygritte ) - -rule(Arya) + destroy(bar(-90.998,-93,COLS),-x)){
	1
} else {
	dog *= rule(-210.02) / dog + 5 + 76;
	if(Ygritte){
	Jon += rule(( Hodor ),foo(( -14 ),COLS));
	-Stark
};
	dog += -( bar(betray(),Hodor) )
}
}
def TABLE[ROWS][i] {
	Ygritte -= ( -1 );
	Hodor += -0.61
}
def rule(y){

}
assert -1 : "Winter is coming"
var Sansa = COLS + -( COLS ) + 0.04
var y = Jon - ( protect(COLS,TABLE[bar(Arya)][destroy(TABLE[( rule() )][Sansa])] / ( -35 )) )
def destroy(Jon,Sansa,Arya){
	betray(( 510.432 ))
}
assert ( betray() ) - ( ( -0.16 ) ) : "What do we say to the Lord of Death?"
def protect(x){
	mislead(ROWS);
	betray(( bar(ROWS,ROWS) ))
}
assert x : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Jon,Stark){

}
def TABLE[Ygritte][i] {
	if(( 200.48 )){
	if(Sansa){
	x;
	Stark
}
} else {
	-x;
	bar(--0.79)
};
	if(( betray(COLS,( ---COLS + --COLS * ( y + -ROWS / -13 ) + --bar() * --TABLE[ROWS][destroy(-1) * 54 + -COLS + --rule(65) / mislead(TABLE[79 / --Hodor][-0.52]) / ROWS / -ROWS] * rule(Stark,640.04) ),210.17) )){
	y /= -ROWS;
	TABLE[-Jon][betray(( -foo(-0.73,Stark + TABLE[bar(bar(bar()) * -1) * Ygritte - mislead(47 * destroy(ROWS))][17],COLS) ),( ( dog ) * dog ))]
} else {

};
	Hodor /= mislead(foo())
}
var Sansa = rule(protect())
def foo(Hodor,dog){
	( -0.516 )
}
def TABLE[460.3][j] {

}
var y = COLS * ROWS + Arya - ( bar(-TABLE[( Jon )][( ROWS )],dog) ) + betray(ROWS) - ( COLS ) + ( -COLS )
def destroy(Sansa){

}
def TABLE[( Sansa )][j] {
	if(--1){
	dog;
	-1
}
}
var y = TABLE[-Stark][Sansa]
def rule(){
	-y;
	bar(( Ygritte - 65 ),COLS);
	COLS
}
def bar(Sansa,Sansa){
	if(( destroy(TABLE[( -Jon )][TABLE[Ygritte / bar(( destroy(--TABLE[bar(-Arya,-destroy(( -0.43 ),-79 / destroy(-destroy(Stark,mislead(( dog + -32 ),ROWS,-30 / -0.02)),ROWS)) / -bar(( mislead(ROWS) ),-0.92))][1]) ) / 54,-0.83,Ygritte)][COLS] / COLS]) )){
	( -0.56 )
} else {

}
}
def TABLE[( mislead(( -870.975 / -610.7 ),foo(-ROWS)) )][k] {
	if(destroy(--1,( y ) + dog) + rule(TABLE[ROWS + -COLS + ( Sansa )][-90.7435])){
	if(( ROWS ) + x + protect(-0.98)){

};
	if(( Jon )){
	( ( ROWS ) );
	Arya += ( -y * ( destroy(rule(-0.07) * Sansa) ) )
} else {

}
} else {
	Hodor;
	if(( COLS )){
	if(-bar(Sansa,bar(( Ygritte ),( Sansa ) + destroy(-protect(-( 0.71 ),1)) + ( -ROWS ) + -12,-dog)) + -Jon){
	if(-y / betray()){
	Arya;
	-19
} else {
	if(y){

}
};
	if(ROWS){
	-TABLE[-Jon][betray(Arya,TABLE[-Sansa * COLS][foo()]) + Arya]
} else {
	TABLE[Arya][foo()];
	Sansa /= Stark;
	betray(( --( Arya + ROWS ) ),840.938,-0.64)
};
	-( bar(-( -110.962 )) )
};
	dog
} else {
	Hodor *= ( rule(-Hodor * TABLE[Stark][530.11] / --31 + -Stark) );
	x -= betray();
	if(--Sansa){
	Ygritte /= -betray(foo(ROWS))
} else {
	ROWS
}
}
};
	if(-0.13){
	if(foo(destroy(rule(--96,destroy(protect(),COLS))))){
	Ygritte -= Sansa
} else {
	45;
	if(-271){
	Sansa -= Sansa
} else {

};
	dog *= foo(14 + Jon - 0.36,1)
};
	if(ROWS){
	if(( Hodor )){
	x;
	Stark += TABLE[protect()][-protect(Hodor)]
};
	-1;
	dog += ( -250.5 / -bar() )
} else {
	Jon /= ROWS;
	Arya
};
	Ygritte -= destroy(ROWS,-mislead(-COLS,--( ( --260.5 ) )) + -( -1 ) - destroy(),-71 * -( bar() )) + dog
};
	dog
}
assert betray(bar(Stark / ( ( TABLE[Arya][destroy(Sansa)] ) ) - 920.395,y + COLS,910.06),ROWS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(Sansa,Sansa){
	if(-2 + protect()){
	if(destroy(-Arya,( rule(y,TABLE[-1][-Arya]) - -670.33 ))){
	-20.493
} else {
	if(--destroy(Hodor,TABLE[rule(-1,-( --7 )) * Jon + COLS][ROWS])){
	if(( -250.655 )){
	Hodor += 1;
	y /= ROWS
} else {
	y += COLS;
	if(COLS){
	( -ROWS );
	( -0.54 / ( -85 / -x * Stark ) + rule(TABLE[y][-mislead(COLS * ( -COLS ),bar(-740.9) * --Hodor)],ROWS - ( mislead(-0.35) + TABLE[( COLS + TABLE[Ygritte][( TABLE[0.82][-( -79 )] )] )][-96 * y] )) )
} else {
	if(Stark){
	dog /= Stark;
	if(( bar() - COLS - ROWS )){
	y
};
	if(COLS){
	-1;
	-46
}
} else {
	if(-( x )){
	dog *= TABLE[protect()][1 + -protect(-( 89 ),TABLE[-rule(( -ROWS ))][0.11]) / -0.89];
	Sansa;
	ROWS - Hodor
} else {
	-0.01
}
};
	if(ROWS){
	x /= betray(19,--89,TABLE[--( Jon ) * protect()][( ROWS )]);
	( Stark )
} else {
	Hodor /= ( 0.27 )
}
}
};
	Sansa += ( -60 ) + ROWS
} else {
	if(destroy(( -( ROWS ) - ( ( betray(-1) / ( ( -y - -24 ) ) ) ) / -0.25 ))){
	if(y){
	-27;
	( -1 )
}
};
	Jon *= ( COLS )
};
	Sansa /= betray(0.25 * -ROWS + ( destroy(45,-foo(-( --38 / betray() ),foo(protect(),-1) / bar(COLS) - Hodor) / 62) * Jon ),TABLE[( 340.1 )][bar(TABLE[-83][-betray(-1)])]);
	if(foo() / bar(ROWS,Jon,790.811)){
	Jon;
	if(( 56 )){
	if(rule(( foo() ) + ( foo(protect(( Stark ),( 4 ))) ))){
	Ygritte += -rule(Ygritte,ROWS)
} else {
	Sansa /= bar(( -destroy(dog * x,11) ),protect(TABLE[380.57][protect(rule(( foo(ROWS) )))],--0.73));
	Sansa
}
} else {
	if(--Jon){
	if(( COLS )){

} else {

};
	x -= ROWS
};
	if(protect()){
	TABLE[TABLE[-0.39 + --1 / 0.43][destroy(-COLS + destroy(( TABLE[( TABLE[( Hodor )][-1] + TABLE[bar(-0.89 + ( -1 ),-0.16)][( foo() )] + ( ( rule(Hodor,COLS - 0.27) ) ) / ( ( 0.74 ) ) )][Ygritte] )) / ( -0.33 ) / ( ---mislead(0.78) ),dog,-ROWS) / --mislead(0.66) - 1]][31] + COLS;
	Hodor *= TABLE[( y - ( Hodor + ( TABLE[ROWS][( ( Sansa ) * destroy(-COLS) )] ) * 920.548 ) / ( -1 ) + mislead(-TABLE[--0.74 + bar(TABLE[destroy() * -710.2][280.91] / ROWS) - 0.73 - Hodor / COLS][-0.75],COLS) )][( ---0.02 )]
} else {
	-( -COLS )
}
};
	if(( COLS ) - -1 - ( ROWS / destroy(COLS * protect(Ygritte)) )){
	-( Arya ) / -bar(COLS) - ( 0.52 * ( COLS ) );
	if(foo()){
	COLS;
	if(Jon){

} else {
	-( COLS );
	x -= x
}
} else {

}
} else {
	Stark - -betray(-y,320.63)
}
}
};
	Stark *= COLS
} else {

}
}
assert ROWS : "One can not simply parse himself"
def destroy(Hodor,Hodor){
	dog /= betray(TABLE[rule(Jon,--0.99 + -0.61)][Stark] + ( Arya + -TABLE[TABLE[-COLS][COLS]][-( -57 )] ));
	COLS
}
var dog = Arya
var Ygritte = -1
var Ygritte = y
var Jon = Hodor
def TABLE[Jon][k] {
	if(COLS){
	Ygritte -= --( ( mislead(Hodor) ) );
	dog -= ( 0.55 );
	( betray(foo(Sansa) + protect(0.23 * ( ( ( -100.71 ) * ROWS ) ) * ( COLS )),Hodor) )
};
	y += -Stark
}
def bar(dog,Hodor){
	-0.44
}
assert y : "Winter is coming"
def rule(){
	63
}
def TABLE[( ( 0.83 ) ) * --360.538 / ( Stark )][i] {
	if(dog){
	-( dog )
} else {
	x /= ( --Stark );
	COLS
};
	if(-Stark){

}
}
def TABLE[ROWS][i] {
	if(Ygritte){
	( COLS );
	ROWS;
	ROWS
} else {
	dog /= -0.27
};
	if(Sansa){

}
}
assert ( ( mislead(COLS) ) ) - protect(Jon) - ( Sansa * mislead(bar(Stark)) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = 60
var dog = ROWS
var x = 27
def TABLE[Hodor][k] {
	if(( mislead() - -ROWS ) / --y - TABLE[-( -Stark )][dog / COLS] / -COLS){
	( Sansa * -1 - y )
};
	Jon /= -0.09
}
assert COLS : "Fear cuts deeper than swords."
assert betray(-47) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[x][k] {
	mislead();
	( 29 * bar() )
}
assert betray(foo(Hodor,-660.63),Hodor) : "Winter is coming"
def TABLE[y][j] {
	-TABLE[rule(-ROWS,ROWS,0.51)][destroy(protect(( rule(96 - 42) ),-85),y)] / -betray(ROWS,( ( -9 ) * mislead(dog) ) + ROWS) / ---0.74 + ( COLS );
	if(-protect(--59,Stark / -TABLE[Ygritte][protect(-rule(-1),betray(( ( destroy(ROWS,( ( 100 ) )) ) / -0.7 ),rule(-70,betray(93,-0.32),-51)) * ( bar(rule(( betray(( COLS )) ) - 1,-1)) ) - -Jon)],mislead(-Hodor) / 1)){
	( -TABLE[Stark - Arya][-0.35] );
	0.88
} else {
	if(betray(betray(destroy(Sansa,COLS,mislead(destroy(COLS,1 - -Arya),TABLE[mislead(dog)][betray(-( -0.02 ))])),destroy(0.96 * --530.4,( 88 )),-( -protect(--0.79,( ---100 ),dog / -Sansa) )))){
	TABLE[-74][-Ygritte]
};
	( rule(--0.41,COLS) * -550.4752 ) + COLS
}
}
assert ( Ygritte ) : "Nothing burns like the cold."
var Arya = --( ROWS )
def TABLE[mislead(-Sansa / ( Hodor ),Sansa - -( 1 )) + ( -45 - 90 - ( -mislead(mislead(1)) ) )][i] {
	if(foo()){
	Hodor -= -TABLE[( rule(0.04) )][ROWS];
	Sansa /= ROWS
} else {
	( ( -0.43 ) );
	Stark
};
	y /= --1;
	x += Jon
}
assert Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(Ygritte,y){
	dog;
	Jon *= ( ( Ygritte + ( bar(foo(COLS),( TABLE[rule(( ROWS ),destroy())][-Jon] * TABLE[( TABLE[( bar(-TABLE[ROWS][Arya] * rule(0.71,-TABLE[8][-dog] - Jon),0.77) )][foo(ROWS,79,Stark) + ( -17 + destroy(--( 41 ),TABLE[-bar()][( y ) / COLS - dog]) )] ) - destroy() - ROWS][-1] ) + bar(Sansa,betray(-TABLE[x][ROWS] * 1,( ( -0.35 ) + -destroy() / ---53 )))) ) * -91 / 0.95 + ( COLS ) ) ) - destroy(TABLE[ROWS][( -destroy(COLS,53) )] * TABLE[ROWS][( rule(--53) )])
}
var Stark = Sansa
def rule(Ygritte){
	Hodor /= ( destroy(foo(( -( -ROWS ) ),Sansa)) );
	Stark;
	COLS - Jon
}
def TABLE[Arya][i] {
	Sansa - -290.8
}
var Jon = -Sansa - y
def destroy(Hodor,Stark){
	if(-( -49 / protect(-ROWS * 1,TABLE[( rule(-( -1 )) )][bar(84,( y ) + ROWS,TABLE[0.85][Ygritte / Sansa] + -Sansa) / ( dog ) / 0.25]) )){
	Sansa *= foo(TABLE[TABLE[( protect() * ( -betray(TABLE[y + 91 - Ygritte][Ygritte],Ygritte) ) ) / Ygritte][COLS]][destroy(TABLE[COLS][---1],Stark)],foo(( ROWS )))
}
}
var Sansa = --rule() * rule(Stark + -( 0.21 ),( -33 )) + COLS
assert --bar() * Sansa : "Fear cuts deeper than swords."
var Jon = -Hodor
def TABLE[-0.19][i] {
	Sansa *= -dog;
	if(TABLE[TABLE[-( protect() ) / ( -0.71 )][-50]][-Jon]){
	Sansa /= 590.16;
	if(4){
	Stark -= --1
}
}
}
def mislead(x,x,y){
	( betray(( --ROWS )) );
	( Ygritte ) / betray();
	dog
}
assert 0.79 : "What do we say to the Lord of Death?"
assert -ROWS : "What do we say to the Lord of Death?"
def TABLE[bar(Ygritte,--foo(( 0.18 )))][j] {
	( mislead(( ( TABLE[TABLE[( Stark )][( COLS ) * ( COLS + --180.8583 * -1 )]][( ---Hodor * COLS * Arya )] * ( ( -COLS + COLS ) ) ) ),340.25) );
	TABLE[-170.838][Stark / mislead(-bar(67) * -COLS / -83,( -0.51 )) * -6]
}
assert ( COLS ) : "What do we say to the Lord of Death?"
var y = ( 84 )
assert TABLE[Sansa][-0.67] * -ROWS : "One can not simply parse himself"
def destroy(){
	if(dog){
	x /= y / -0.46;
	Jon += COLS
}
}
def mislead(Hodor){
	Sansa /= Arya;
	if(( -31 )){

} else {

}
}
assert -( --bar(-TABLE[-18][ROWS + y],Hodor) * -Stark + 1 ) / betray(-x / --COLS,COLS,destroy()) * -( --Ygritte ) - TABLE[Arya][Hodor - rule(bar(),0.41)] * protect(Hodor,-ROWS) + betray(-26) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(x){
	ROWS;
	( -18 ) + protect(TABLE[foo(( Ygritte ) - ( ( x ) ),32 * ( TABLE[( ---0.21 )][( ( ( Stark ) + ROWS ) )] ))][Arya])
}
var x = ( ( ROWS ) )
assert -Arya - ---1 * ---TABLE[ROWS][bar(-0.96 - -COLS * -0.62) / 1] / ( ROWS ) : "One can not simply parse himself"
var Jon = bar(-0.8)
var Stark = ( ( ( -45 ) ) ) - --1
assert -( TABLE[-( ( COLS ) )][( ( -61 ) ) - ---betray(-34,TABLE[ROWS / COLS][ROWS - -0.82])] ) * protect(y) : "Nothing burns like the cold."
def foo(y,y,x){

}
assert ( bar() ) : "Fear cuts deeper than swords."
var x = ROWS
assert -Sansa : "What do we say to the Lord of Death?"
def TABLE[( ( mislead(bar(bar(),destroy(12)) / TABLE[protect(COLS,Arya)][COLS] - ( 67 ) - ---( COLS ) * Stark - bar(TABLE[COLS][( ROWS * ( Arya ) )],TABLE[COLS][( -0.21 )]) * -Jon,( Stark )) ) )][i] {
	Sansa -= TABLE[Sansa][betray(mislead(( -66 ) + Stark) + 8)] + TABLE[850.65][y];
	y -= -0.83 + y / ( protect(-TABLE[-760.233][13 - ( ROWS )] + 0.71,Stark,-COLS * Arya) ) - Ygritte;
	if(1){
	if(3){

}
}
}
def TABLE[ROWS][j] {
	if(Jon * bar(-45,--destroy(-( rule() ),COLS - ( Ygritte ),Hodor)) * --87){
	if(betray(-1 * y,0.04)){
	if(protect()){
	if(bar(82)){
	--1;
	Jon -= betray(( COLS ))
} else {

};
	Jon -= 310.87
}
} else {

};
	-1;
	protect(ROWS,Hodor / bar(COLS),foo()) / x
} else {
	if(( -0.76 )){
	if(ROWS){
	if(( bar(TABLE[( Arya )][( -1 )],( ( foo(( ROWS ),( foo(betray(190.44,Stark),-41 * ( --rule(0.77,0.14,bar(0.98,ROWS,TABLE[Ygritte][60])) ),0.72) ),Jon) ) ) + ( Arya )) ) * bar(ROWS,ROWS)){
	Ygritte += 0.86;
	770.137;
	y *= Sansa
} else {
	betray(-0.11);
	if(y){
	betray(( TABLE[ROWS][TABLE[( -7 )][bar(Hodor,Hodor)]] ));
	dog += -foo(-430.7639,destroy(mislead(-betray(32,TABLE[( -rule(COLS) )][--Jon]) - ( mislead(( 1 ),-( -0.47 ) * dog) ),y,-foo(( -Ygritte ),y)))) * -x
};
	if(( mislead(( -0.99 )) ) / y){
	if(-1 + Stark / COLS){
	Stark += TABLE[TABLE[foo(Ygritte - ( ( Stark ) ) - y,ROWS)][( -protect(COLS,COLS,0.35) + ROWS * protect(( ( -dog ) ),-1 + -73) / Hodor )]][Sansa];
	ROWS
}
} else {

}
};
	if(( ---( -1 ) )){
	Jon /= -( -47 )
}
} else {
	x *= -( -Arya - Jon )
};
	if(betray(( Jon ),-Hodor)){
	Hodor /= -COLS
}
} else {
	protect(Ygritte * ROWS / TABLE[0.94 + Sansa][COLS * COLS]);
	bar(( -( TABLE[( -0.26 ) * COLS - protect(TABLE[-1][TABLE[destroy(mislead(-1) * ---dog,destroy(TABLE[--90][destroy(0.03 / -1 - ( ( ( 1 ) ) / TABLE[0.21 / -( TABLE[0.55][( -200.9 )] - dog ) / destroy(-1 / ---betray(-0.12) * Stark * betray(1,COLS))][Jon] ))]))][bar()]])][COLS / -x] ) ),destroy(( ROWS ),-99,-( protect(-54,--Sansa) ) + 720.8725 - destroy(--( -0.27 * rule(( COLS )) / -1 )) * 71),( -Stark - ROWS * Arya ));
	bar(Stark,-Jon)
};
	if(ROWS * betray(Ygritte,TABLE[Jon][TABLE[-0.91][TABLE[( TABLE[-mislead(( ( COLS ) ),( dog )) + Jon][Stark] )][betray(TABLE[770.71][betray(COLS - ( -COLS ))],Stark * TABLE[75][( -1 )],5) + COLS - Ygritte]]])){
	Stark /= ROWS
}
};
	TABLE[protect(-27,COLS)][0.4];
	if(foo(COLS,( -x ))){
	0.27
} else {
	mislead(Ygritte,Jon);
	y
}
}
def TABLE[95][i] {
	y += -0.16;
	Jon += ROWS;
	Stark -= ( Jon )
}
def TABLE[x][k] {
	Jon -= 1;
	( dog )
}
def rule(Jon,Ygritte){

}
var Stark = ( ( ( ( Stark ) ) ) / COLS )
var x = x
var y = -0.97
assert ( 1 ) : "Nothing burns like the cold."
var x = ( ROWS )
def mislead(Jon,x,Jon){
	if(COLS){
	if(( Jon )){
	--y;
	x *= -10 + ROWS
} else {
	Hodor /= ROWS + 0.29;
	Stark -= -( TABLE[1][-70.8059] ) * -79 / 460.95 / ( ( ( Hodor ) ) )
};
	-1;
	if(rule(---890.29 / ( ( betray(-0.41,-59,( -0.66 )) ) ),0.58) - mislead(( y ))){

} else {
	if(COLS){
	dog -= 700.147 / ROWS;
	if(( -rule() )){
	Jon -= ( -0.59 );
	if(Sansa){

}
};
	-900.6176
} else {
	x /= -( ( -( betray(protect(0.09),( --1 ) * ( ( protect(( Ygritte ) + ---TABLE[-590.6552][COLS]) ) )) ) - bar(( -0.44 ),bar(-39,betray(TABLE[Ygritte - -TABLE[foo(-Jon,1,( Arya ))][COLS]][-x - -TABLE[( foo(destroy(),TABLE[-110.662][-( -bar(foo(1,--39) / ROWS + ( ( Arya ) ) / ROWS) )]) )][foo(ROWS)]])),ROWS) ) );
	( -45 )
}
}
};
	if(( betray(380.055) )){

}
}
def mislead(Sansa){
	( ROWS / ROWS );
	protect(TABLE[1 * ( rule(-rule(foo(y,bar(--COLS),-bar(--COLS,-14)),dog) / -0.21 - -9 - ( ( foo(Hodor) ) ) / -0.08 * rule(destroy(--protect(COLS - COLS,mislead(betray(protect(( 0.25 ) / --0.72,-ROWS - -COLS),-( 1 )))),bar(-destroy(1,( Sansa ),COLS)),rule(--Sansa,-Jon,Arya))) * bar(-0.25 / -27,( mislead(Stark,3 * ( -dog ) / ROWS) ) * ( x + ( -betray(-50,betray(( betray(91,bar(),42) )),ROWS) + ( TABLE[-( -Stark )][TABLE[dog][-Ygritte / mislead(COLS,18) / ( COLS ) * protect() / bar(-910.7412 - dog * mislead(--( COLS ) * ROWS * ( -rule(ROWS,ROWS,-0.57) ),-ROWS),( --69 )) / -Ygritte - destroy(ROWS) + ROWS - 0.19]] * 790.34 ) - destroy(( ( ROWS ) )) / ROWS ) ) * dog),-1) )][COLS],COLS)
}
var Sansa = -( ROWS / Hodor )
assert ROWS : "Winter is coming"
def TABLE[( ROWS )][i] {
	TABLE[-( COLS / rule(COLS,TABLE[-0.08][TABLE[bar()][Sansa]],-ROWS) )][COLS];
	x *= -89
}
def TABLE[Jon][i] {

}
var Sansa = destroy(-1 - foo() + ROWS,--980.764 / Ygritte,Sansa)
assert -( 0.49 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(dog,y,y){
	( --bar() );
	( 1 ) * TABLE[Ygritte][-1]
}
def TABLE[protect(bar(COLS * Ygritte / Ygritte),Arya * Arya,710.249)][j] {
	Stark -= ( ROWS );
	Jon *= -TABLE[COLS][550.7142] - 0.49
}
def TABLE[protect(TABLE[mislead()][y],COLS)][k] {

}
def protect(y,Hodor,Arya){
	y /= ( -0.58 );
	--0.21
}
assert betray(0,dog) : "Nothing burns like the cold."
def TABLE[-betray()][k] {
	TABLE[rule(--0.86 * ROWS + 640.9 + Ygritte)][-380.36]
}
def TABLE[ROWS][k] {

}
def TABLE[-0.84][j] {
	y -= Ygritte;
	ROWS
}
def TABLE[290.26][j] {
	1
}
def mislead(){
	if(ROWS){
	Jon
} else {
	Jon += -ROWS * mislead()
};
	Ygritte -= -Stark;
	Ygritte -= Arya
}
assert --0.41 : "Winter is coming"
def foo(y,Stark){
	dog -= mislead();
	if(( -( 350.082 ) )){
	Hodor -= -Ygritte * COLS
} else {
	--0.07;
	Hodor += -1;
	Sansa /= -bar(-COLS - Sansa / 60.1,-0.5) - -betray(--45,rule(( protect(COLS) - rule(betray(x,Sansa)) + ( 1 ) / ROWS ) + Stark,-TABLE[ROWS][bar()] * ROWS))
}
}
def rule(dog,Sansa,dog){
	( --TABLE[( ( protect(-( -0.01 ) * ( ( ( protect(100.42,-TABLE[( ( Arya ) )][Hodor] + -COLS) + COLS ) ) + dog ),foo(( ( ( -foo(-0.03,( ( Stark + 0.01 ) )) ) ) / ( -1 ) ))) / ( -( -21 ) ) ) )][TABLE[-21][-COLS] * ---1] )
}
assert ROWS : "Nothing burns like the cold."
var y = destroy(destroy(Sansa),Arya)
var Hodor = TABLE[( 881 )][Ygritte] - --62
var Stark = 0.22 / Hodor
var Jon = y
var x = rule()
def bar(dog,x,Hodor){
	if(ROWS - ( Hodor )){
	if(-ROWS){
	if(rule(-x,-1 / TABLE[destroy(( -Stark ))][-130.348] * foo(--0.34,TABLE[-69][( -520.24 / ROWS )]) / -foo(Ygritte,1),betray(11))){
	Arya /= TABLE[-93][rule(-mislead(protect(1,880.71),--48 / Arya),-x)];
	if(betray(rule(--240.27,rule(-ROWS,x,ROWS),( -1 )))){

};
	Hodor /= dog
} else {
	Sansa += ( TABLE[( ( ( foo() ) ) )][-----97 * COLS] );
	if(-99){
	x += ( Hodor - -( TABLE[TABLE[( 66 )][protect(COLS,--71)]][mislead(ROWS)] ) );
	Hodor *= Ygritte;
	dog /= -0.07
};
	x += dog
};
	if(protect(Stark)){
	Jon;
	Hodor += rule(betray(( ROWS ),-0.64,-0.51)) * ( bar(rule(( mislead() ))) );
	--( -( 0.89 ) / rule(-( ( -( -foo(TABLE[ROWS][COLS]) ) ) + rule(-0.55) + Jon ),TABLE[betray()][-1]) )
}
} else {
	dog /= -COLS + COLS
}
} else {
	y /= Sansa;
	if(bar()){
	Arya -= ( ROWS );
	if(---( Ygritte )){
	if(ROWS){

} else {

};
	if(TABLE[Ygritte][COLS * ( ( ( y ) ) ) + -( ROWS ) / -( COLS ) - -1] - Stark){
	x -= -0.65;
	y /= betray()
};
	if(-40.5099){

} else {
	-0.6
}
}
};
	Jon /= TABLE[( -COLS )][x]
};
	if(dog){

}
}
def destroy(Arya){
	Stark *= -betray(ROWS) + ROWS;
	Sansa /= -Jon
}
def foo(y){
	destroy(1,( COLS ));
	rule(bar(77),bar());
	if(bar(-0.13 + x + COLS,y,rule(( rule() ),( -COLS )))){
	if(TABLE[--ROWS][( 1 + betray(88,-COLS,Jon - ROWS + destroy()) / -32 * ( Sansa / -0.14 ) * mislead(( Ygritte )) )]){
	y *= 650.9;
	if(Ygritte){
	Hodor += COLS;
	dog /= protect(-290.12 + 1)
};
	COLS
} else {
	if(Jon){
	if(( TABLE[( ( Ygritte ) ) / 0.91][-86] )){
	if(protect(betray(bar(foo(),bar())),( ( destroy(( -( 90.5 ) )) ) ))){
	-57
} else {
	Stark /= Stark
};
	if(destroy(-bar(-0.7 - betray(Ygritte)),bar(( ( 0.33 ) )),( TABLE[-ROWS * -( -mislead(rule(rule() + 0.58,TABLE[dog][-680.879])) + -TABLE[-destroy()][-ROWS - mislead(Arya,Sansa) / 0.6] )][foo(dog * -0.89 / -( -mislead(-Hodor,-TABLE[x][Jon]) )) / -1] ))){
	Hodor *= Arya - y;
	Arya -= bar(( -54 ))
} else {
	mislead(bar(-1,-TABLE[foo()][Stark]),73,-0.37);
	mislead(Arya,Sansa);
	Arya *= -250.04
};
	Sansa *= TABLE[-880.48][-0.85]
} else {
	ROWS + -1;
	if(ROWS){
	if(0.38){

} else {
	if(Jon){
	Hodor *= COLS;
	if(-0.17){
	Ygritte += -0.09
};
	if(foo(ROWS,-TABLE[-COLS][destroy(--protect(-( -( destroy(-( 49 ),--ROWS * mislead(foo(),( ( -Stark * -mislead(Stark,( -foo(ROWS) )) ) )) + destroy()) ) * 730.516 + ( -( -rule() / y ) ) / TABLE[1][0.16] ) * dog,1,bar(Ygritte) - -1),foo(--( 1 ) * --67 * -( dog ) / -86 + ROWS))])){
	if(TABLE[( ( ROWS ) )][1]){
	( ( TABLE[( rule(--80,-mislead(Arya,Jon)) )][-83] ) )
};
	protect(( bar(( 0.47 - 560.7874 ) - rule(dog,---ROWS,-COLS)) ),destroy(( bar(x,( -ROWS )) ) + -TABLE[-1][Sansa] * protect(( betray() ),Ygritte + -( ROWS ) - COLS,0.34) - rule(-75),protect(-( TABLE[destroy(foo(bar(--Ygritte),TABLE[-ROWS][rule(ROWS * -15,Ygritte,protect(Arya,COLS,Ygritte))])) / -0.37][( betray(mislead(--( -( -8 / 1 ) ) - --Hodor,-mislead(Jon),mislead(-1) + -protect(( --0.14 ),( ( -0.8 ) )) / COLS) * ( -1 ),bar(-ROWS),( ROWS )) )] ),--0.21,( bar(-0.75 / 0.84,bar(-1),protect()) ))));
	if(foo(-0.92)){
	( mislead(betray(rule(-Hodor))) ) * ( TABLE[bar(rule() / -1,-( COLS ))][TABLE[( -1 )][( -0.68 )]] ) - 1 * COLS
}
} else {
	Ygritte * Hodor + ( -TABLE[COLS][( ( COLS ) )] - -dog * Ygritte - ( COLS ) );
	Stark -= TABLE[COLS][ROWS] + --650.92;
	if(-bar(-( y ),-1)){
	( ( x ) - --TABLE[ROWS][( foo(-36) )] / betray(-( COLS ),-bar(-66,( ROWS ))) );
	if(TABLE[0.83][protect(3,--0.63,---1 + --1)]){
	if(-Jon / destroy()){

} else {
	Sansa
};
	x /= ( Sansa )
} else {
	Stark /= COLS;
	betray(betray(-0.89,100.9 - -81,x)) - 87 * --1
}
} else {

}
}
} else {

};
	Ygritte;
	if(y){
	if(ROWS){
	Sansa -= ----0.82 - TABLE[Ygritte * Hodor / ( --betray(--ROWS,-( 1 ),0.83) + -bar(Jon,( ( -120.74 ) ) - -( foo(destroy(ROWS),( protect(Stark,-1,310.54) ),TABLE[-0.23][betray(( COLS ),COLS,-bar(TABLE[ROWS][--protect(-ROWS / rule(protect(ROWS) / -0.41,550.5265,-TABLE[COLS][y]) / TABLE[TABLE[Ygritte][ROWS]][1 + ROWS]) + y - ( ROWS )] - ( protect(foo(x,-0.9),( Arya )) ),foo(COLS),-Jon))]) ) + Arya,Stark + betray(protect(( y ),-0.72,Hodor))) / COLS / ( ROWS ) + ( ROWS - -53 - 340 / ( Sansa ) + -TABLE[( TABLE[1][( 1 )] )][bar(Sansa - COLS)] ) ) - TABLE[COLS][y] / ROWS / ( ( --TABLE[-Ygritte][74] ) )][-Hodor] / ( ( 77 ) )
} else {
	if(-Arya){

} else {
	if(bar(COLS,y) + TABLE[( ( 0.37 ) )][-1] / --0.57){
	if(--( y )){
	if(protect()){
	--Ygritte
} else {

}
};
	COLS;
	if(-0.18){
	COLS;
	dog /= ROWS
}
} else {
	--1 + -0.42
}
};
	destroy(protect(48,TABLE[( ( y ) )][destroy(COLS)]))
};
	( 980.25 - bar(Jon) )
} else {
	if(COLS){
	Sansa -= ( -Ygritte );
	if(1){
	( 940.99 )
} else {

}
};
	TABLE[destroy(( TABLE[( -Jon )][-300.77] * 11 ),dog)][0.25 / COLS]
}
};
	Arya *= bar(TABLE[COLS][1] + ROWS);
	if(TABLE[dog][Jon]){
	if(1){
	mislead(( rule(-120.48 / ROWS) ))
} else {
	Stark += TABLE[ROWS][--( TABLE[( -( y ) + bar(--bar(COLS)) )][ROWS] )]
}
} else {

}
};
	if(ROWS){
	if(Hodor){
	if(1){
	if(( -84 )){

} else {
	TABLE[Sansa - --( mislead(( -COLS / protect(foo(),TABLE[Jon - TABLE[-74][--0.5] / --78][Jon * TABLE[-0.89][Hodor + ---mislead()]],Sansa) ),( -mislead() )) ) * -mislead(TABLE[ROWS][-0.03 + -COLS] * -0.54) * Hodor - bar(-x,( -1 ))][( 1 - Jon )];
	36
};
	Stark
} else {
	if(COLS){

} else {

};
	if(0.4){
	Arya *= -0.32;
	if(0.57){
	( y );
	if(-1){
	bar();
	Sansa;
	protect(( ( Ygritte ) + -2 ),x)
} else {
	TABLE[-1][-0.13];
	if(-y - destroy(Arya) - TABLE[bar(( betray() ),500.594,COLS) + -COLS][protect(--76,ROWS,( ( ( protect(-Stark * Ygritte,TABLE[bar(-betray(( 670.293 ),COLS) * TABLE[mislead(-ROWS,COLS)][( dog )] - ( ROWS ),TABLE[mislead(0.13,-14)][--ROWS])][COLS]) ) ) * protect(( -1 ),-1) ))]){
	Hodor -= ( mislead(( -Sansa * 0.04 * ( -0.34 ) )) / ( ( -19 ) ) / ( dog ) );
	Sansa *= Jon
} else {
	Hodor *= ( bar(mislead() + --0.69,foo(rule(bar(( 42 ),Jon),Hodor) * ROWS,COLS)) )
}
};
	TABLE[betray(Stark - 0.51) / TABLE[Ygritte][-57]][---0.75 / -( ( y ) )]
} else {

}
} else {
	Sansa /= TABLE[destroy(dog,( Ygritte ),-0.21 - Stark)][( -( TABLE[( destroy(protect(( 64 ),TABLE[37 - Ygritte][1],TABLE[x][( COLS )])) * 2 )][( ( ---mislead(COLS,-1) ) )] ) )];
	-Stark;
	Arya /= destroy(( Stark ) - TABLE[( betray(mislead(),-960.72 - betray(-0.14,ROWS)) )][-32] - -Arya + mislead())
}
}
} else {
	betray(destroy(-TABLE[betray(-6,--Hodor * dog + -mislead(--( Jon )),( Ygritte )) + 0.75 - 0.39][( bar(TABLE[COLS + 0.33 / COLS * COLS][COLS]) ) - protect(750.75) / -0.72]));
	Stark += y
};
	if(mislead(( ( ( -bar() + TABLE[6][-ROWS] ) ) / COLS ),Stark,ROWS)){
	if(--x){
	Sansa
} else {
	if(( 690.9217 )){

};
	if(Sansa){
	( -y );
	if(-( ( -1 / COLS ) ) * bar(dog)){
	-0.95
} else {
	Arya;
	COLS
}
}
};
	( -Arya )
}
} else {
	-99 - -ROWS;
	if(y){
	Ygritte /= protect(ROWS) / COLS
}
}
};
	-Jon;
	( -( TABLE[-( bar(-Arya / ---50.7) ) + y * ( 0.15 )][ROWS] ) + 1 )
}
};
	x /= -bar(destroy());
	dog -= 0.84
} else {

}
}
var Hodor = 38 - ( ( ( Sansa ) - -17 / --64 * 0.23 ) ) / betray(ROWS,-TABLE[dog][-29],foo()) + COLS
var dog = -( protect(mislead(-( COLS )),0.61) )
def TABLE[14][j] {
	dog *= -x;
	if(Hodor){
	--1;
	foo(mislead(( rule(-470.83) ),( TABLE[TABLE[-( ( TABLE[destroy(1)][--COLS] ) )][rule()]][Ygritte] ),-Arya))
}
}
def TABLE[bar(( 0.18 ) * Ygritte,Stark) / -Jon - Jon][j] {
	Sansa += protect(( COLS ),Jon);
	if(-0.1){
	if(Jon + -0.07 * -( Hodor ) + -1){
	COLS;
	if(-59){
	x -= -1;
	if(-( protect() )){
	Sansa += ( ( -37 ) )
};
	if(( ( COLS ) )){
	if(bar(TABLE[y][Hodor] * ( ( mislead() * ( -0.92 ) ) ))){
	if(mislead(COLS,rule())){
	foo(Hodor,Sansa) * ROWS - Arya / -( foo(-18,20,TABLE[-1][destroy(TABLE[bar(Arya)][-0.51])]) );
	if(--68 / COLS / foo(Jon,( protect(-0.19) )) - 0.84 + TABLE[( TABLE[COLS][( TABLE[mislead(Stark)][( Jon )] )] )][0.97 / -190.8645 * COLS] + bar(ROWS / foo(TABLE[Ygritte][82])) + destroy(( 1 ))){
	-51;
	ROWS
} else {

};
	-foo(280.449,betray(),mislead(-destroy(( Arya * mislead(-( TABLE[mislead(-30.22)][--90 / betray(-1)] ) + -( betray(Ygritte,-0.91) )) ),mislead(-2 - TABLE[--mislead(56)][-89],COLS) - 15 * TABLE[x][( ( ( -( 5 ) ) ) )])))
};
	destroy(Arya)
} else {
	if(-1){

};
	Sansa -= ( -dog );
	-63 + Hodor
};
	COLS
} else {
	if(0){
	Sansa += ( -x ) / x;
	Ygritte -= ( COLS );
	dog += -TABLE[21][TABLE[-55][( -( Ygritte ) )]] / Stark
};
	( ( ( ROWS ) * ( Ygritte ) ) )
}
};
	Hodor *= TABLE[y][ROWS]
} else {

};
	if(rule(dog,( -TABLE[-12][Jon] ),-220.5134)){
	790.13;
	Jon -= COLS + ( ( -0.72 ) );
	if(( ( Arya ) )){
	if(-mislead(foo(( dog )),mislead(protect(mislead(),bar(),1)))){
	foo();
	if(-foo(-51)){

} else {
	if(betray(COLS,x)){
	Stark
};
	ROWS
};
	( -Arya ) / --( ( -0.16 ) )
};
	rule(( rule() ));
	( -68 )
} else {
	dog /= foo(( ( mislead(ROWS,( ROWS )) ) )) + y / TABLE[TABLE[destroy(-foo(ROWS) / -1 - ROWS + Jon + dog / -87,-foo(( -86 )),ROWS * --rule(( Hodor ),( Arya )) / COLS)][mislead(-ROWS,0.98)]][--ROWS];
	if(( -0.12 )){
	Ygritte *= 56;
	if(TABLE[0.8][( rule(-0.4,-TABLE[( TABLE[ROWS][protect(--66,destroy(( Stark )))] )][25]) )]){
	Stark /= ( ( ( destroy() ) ) ) + -140.9
} else {
	Sansa;
	y
}
}
}
}
}
}
var Ygritte = Ygritte
assert x : "What do we say to the Lord of Death?"
def TABLE[rule(-bar(mislead(-1,Hodor)))][k] {
	y += -( Arya );
	( -1 - ROWS )
}
def TABLE[3][j] {
	---rule(COLS)
}
def TABLE[40.66][k] {
	Sansa /= -ROWS;
	if(-ROWS){
	x /= -0.92
} else {
	ROWS;
	protect(Jon,-( bar(TABLE[TABLE[COLS][Hodor]][( -( -( 0.57 * -Jon ) ) )],rule(protect(-destroy(bar(Stark,( ( -46 ) ),--Ygritte - rule(--ROWS * ROWS,1 / foo(bar(--( ( --Sansa ) ) + -( ( dog ) - Sansa ) * Sansa / 0.68)))),TABLE[--ROWS][( dog / destroy() )],99) * ( 160.14 ) * --0.56 - -950.545,--0.22,bar(COLS,-79)),-1 + Stark),betray(bar(-0.51),COLS,( ROWS ) - TABLE[COLS][betray()])) * x ),TABLE[TABLE[foo(foo(COLS,TABLE[-foo()][bar()]))][--1 - ( COLS )]][-bar()]) - COLS
}
}
def TABLE[( ( 0.4 ) )][k] {
	if(rule(foo(51,bar(rule(82,x - mislead(--1,COLS * -Hodor,Jon),COLS),-( rule(ROWS) - betray(betray(mislead(13),Hodor * ( dog ) * y - -foo(( betray(-TABLE[( ( --0.03 ) )][TABLE[COLS / Jon + ( 45 )][COLS]],( 41 )) + COLS ),---rule(dog,protect(TABLE[COLS][Stark + ROWS - TABLE[-0.16][Hodor]])),Stark)) + ( Sansa )) ) / -1)) - ( -44 ),TABLE[ROWS][ROWS])){
	x *= ROWS
} else {
	Stark *= y;
	COLS;
	destroy(y,TABLE[destroy(--0.86)][y + 0.01],( ( 1 ) ))
};
	Sansa += --ROWS + ROWS / ( Arya );
	if(dog){
	if(Sansa){
	x -= ( ( -y ) );
	y -= -foo(TABLE[Arya][0.39])
} else {
	dog *= ( ( --64 * ( 21 ) ) ) - Sansa;
	dog
}
} else {
	Sansa += COLS;
	Hodor += ( -( 1 - mislead(-foo(destroy(y,mislead(ROWS)),-protect(bar(( ROWS )),( ( 770.2 ) )),0.61)) ) );
	Jon -= 0.68
}
}
var dog = x
assert ( -77 ) : "Winter is coming"
def TABLE[TABLE[bar(x)][-ROWS / TABLE[( --13 )][y - COLS * x / COLS] * --x / COLS / ROWS]][k] {
	if(-1){
	if(Arya / -( --0.71 ) / -0.04){
	rule();
	Arya
};
	x /= TABLE[( mislead() )][-Ygritte * ( Sansa )]
} else {

}
}
def bar(Ygritte,dog){
	Jon += -20.61
}
def bar(Sansa,Ygritte){
	if(ROWS / -Hodor){
	ROWS;
	( -56 - COLS / -ROWS )
}
}
var Stark = bar(protect(-0.43))
assert ( betray(-Ygritte / -460.79) ) : "One can not simply parse himself"
def mislead(Arya){
	Arya += ( bar(ROWS,bar() + x) )
}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = 1
var y = Arya
var y = ROWS
var Hodor = ROWS / 89
def destroy(Ygritte,y){

}
def TABLE[betray(Sansa) + COLS][k] {
	y
}
def TABLE[destroy(-1) / 860.848 * Stark][k] {
	ROWS;
	Arya *= ROWS;
	if(-Arya){

}
}
var Sansa = ( rule(( ( Sansa * TABLE[--370.807][-( ( bar(y - Stark) ) * -0.95 )] * -0.99 ) + ROWS ),370.766) )
def TABLE[-dog][k] {

}
var y = 0.3
def betray(x){
	COLS;
	rule() + mislead(y,-5,TABLE[-Arya][-1] - x)
}
def TABLE[Jon][j] {
	if(( Arya )){
	-1;
	Sansa -= 0.62 * -0.08 / ( Ygritte ) + Stark;
	if(-( --( protect(Arya,( x + -COLS * --TABLE[foo(destroy(0.36))][-protect(destroy(( -bar(-( ROWS ),--COLS + COLS - Jon) ),TABLE[dog * ( ( -6 ) )][( 0.38 )]),dog,1)] * -42 )) ) )){

} else {

}
};
	if(---ROWS * ROWS){
	x;
	( -( TABLE[-1][-COLS] ) + protect(---destroy(ROWS,Ygritte),-Jon) - Arya )
}
}
def TABLE[TABLE[ROWS][destroy(destroy(destroy(TABLE[0.3][TABLE[Hodor + 0.51][( -foo() - COLS )]]) / -TABLE[mislead(protect(TABLE[COLS][destroy(y)]))][COLS],COLS),protect(-0.53,( 0.37 ),( -TABLE[( ( TABLE[ROWS][foo(TABLE[0.69][-0.15])] ) )][bar()] )),--( ROWS ))]][j] {

}
assert ( 58 ) : "Nothing burns like the cold."
assert y : "Winter is coming"
var y = TABLE[Arya][bar(COLS,( -betray(( foo(( ( 500.361 ) ),( y )) * 1 / -ROWS ) - -dog,-Arya) ))] + x
def TABLE[--0.81][i] {

}
var x = ROWS
def rule(Sansa,Jon,Arya){
	if(Ygritte / ROWS){

}
}
def TABLE[Sansa][k] {
	Stark += TABLE[rule()][COLS] * COLS
}
def TABLE[dog][j] {
	if(-0.84){

} else {
	--foo(COLS) / -y / ( ROWS ) * ( bar() );
	96
};
	if(0.97){
	dog += Jon
}
}
def rule(y){
	Jon *= 1
}
assert -y : "What do we say to the Lord of Death?"
def rule(Sansa){
	-1 * -destroy();
	-TABLE[-0.71][Stark * y]
}
var Stark = ROWS
var Stark = ( destroy(-0.85,mislead(67)) )
def TABLE[-( --0.4 )][i] {
	betray(Sansa,-110.791) * Ygritte / -410.5 + 22;
	-0.81
}
def betray(Ygritte,Jon){
	if(1){
	if(( Hodor )){
	( rule(Hodor,-ROWS) )
};
	Jon -= --destroy(Arya) / -0.48 / -( ( Jon ) )
};
	if(mislead(betray(Hodor - ( 740.549 + -1 - ( -1 ) ),Sansa))){

} else {

}
}
def TABLE[Sansa][k] {

}
def TABLE[Arya - -1][i] {
	( -60 );
	TABLE[-Arya][ROWS] / protect(Stark,-protect(-( TABLE[34][-24] ),-370.301) - ( betray(( TABLE[1][destroy(-Arya)] ),rule(),TABLE[mislead(960.51)][( dog )]) ) / ( ( ROWS ) ));
	--( COLS )
}
def protect(Sansa,dog){

}
def foo(){

}
def rule(){
	-( TABLE[bar(-( 0.38 ))][mislead(-72,TABLE[-COLS][COLS])] );
	y -= 430.09
}
var x = x
assert protect() : "Fear cuts deeper than swords."
var x = Arya
def rule(Ygritte){

}
assert ROWS + ( 1 ) : "Winter is coming"
def TABLE[Jon - mislead(-92,55 + ( mislead(Arya,foo()) ),-rule(200.6,rule(rule(-99 * 56))))][i] {
	if(rule()){
	Hodor *= x / x;
	COLS
};
	-Arya / ROWS;
	if(Ygritte){
	dog += ROWS;
	-19
}
}
def destroy(dog,Ygritte,Arya){
	Arya;
	y
}
var Ygritte = 0.69 - -0.28
def rule(Ygritte){
	if(ROWS){
	Ygritte /= ( -COLS + -( ROWS ) * Arya + x )
};
	y /= TABLE[y * x][ROWS]
}
def bar(dog){
	Hodor -= -0.86
}
def betray(y){
	Jon /= COLS;
	y + -0.19
}
var Sansa = ( ---1 * COLS )
assert -foo(( x ),( -0.23 ) / TABLE[Arya + rule(foo(1)) * -COLS][-1]) : "Nothing burns like the cold."
def TABLE[-bar(-destroy(0.56))][j] {
	-0.25
}
def TABLE[dog][j] {

}
var Stark = bar(( bar() - Hodor ),( Sansa ),dog)
def TABLE[( -COLS )][i] {

}
var Stark = -ROWS
assert 0.53 : "Nothing burns like the cold."
def protect(Stark,Sansa,x){
	( -TABLE[-COLS * Jon + -bar(-0,TABLE[0.61][ROWS],-protect(-0.96)) / COLS][( TABLE[Sansa][foo(protect(mislead(ROWS,0.67 + -ROWS),COLS - destroy(( ROWS ),TABLE[-Hodor + -( COLS )][dog],0.71 + betray(( TABLE[destroy(-0.63 + rule(Sansa,--64))][-COLS] ))),Ygritte),( -28 )) - 940.6] ) - Jon] )
}
assert -0.76 : "Winter is coming"
var Stark = TABLE[( destroy(-Arya) )][-46 + ( x )]
assert mislead(Hodor - ( -COLS )) : "Fear cuts deeper than swords."
assert Jon : "What do we say to the Lord of Death?"
var Hodor = ROWS
assert -1 : "Nothing burns like the cold."
var x = ( 0.67 )
def mislead(Arya){

}
assert Ygritte : "One can not simply parse himself"
def betray(dog,x,y){
	-mislead(( Sansa ),0.04 + ( --0.51 )) / ( -25 ) + Arya / x / -TABLE[betray()][( ( Stark ) ) - -protect(--( ROWS ),dog)];
	Jon -= betray(TABLE[-betray(--( ( ( x ) ) ))][-0.16 - -foo() * ( Sansa - -( rule(( y ),bar(0.37)) ) ) - ROWS])
}
def bar(Jon){
	Arya += ( x )
}
assert COLS : "Fear cuts deeper than swords."
var Ygritte = Sansa
def protect(Stark){

}
def betray(){
	Hodor -= -0.27 + bar(( -550.058 ),destroy(ROWS,( 0.31 ))) * -330.84;
	( COLS )
}
def protect(dog){
	( -Hodor );
	Jon /= ( betray(-0.62) );
	if(Stark - 0.7 + 1){
	Ygritte += bar(--mislead(COLS + ( -( TABLE[COLS][bar()] ) ),TABLE[-1][bar()],-( Stark )),protect(-mislead(),-x));
	if(Hodor){

};
	-x
} else {

}
}
assert COLS : "What do we say to the Lord of Death?"
def mislead(Ygritte,x){

}
assert ( Arya ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( 1 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Hodor : "One can not simply parse himself"
def TABLE[0.17][i] {
	if(destroy(1,-1) / dog + -x - -( ( Arya ) )){
	Hodor *= dog;
	Ygritte += COLS;
	Hodor *= -betray(destroy(),Stark) - -1 / ( -Hodor + rule(-bar(COLS,rule(protect(32),dog)),-36) )
}
}
def betray(Arya,Arya,dog){
	Arya *= Arya;
	( x );
	-0.78
}
assert protect(--0.77,0.99,Ygritte) : "What do we say to the Lord of Death?"
var Ygritte = -1
assert protect(mislead()) : "One can not simply parse himself"
var y = -TABLE[bar(betray(( ROWS ) + Jon,bar(COLS,TABLE[-TABLE[( dog )][Stark + bar(Sansa,Arya)]][TABLE[protect(protect(-4,Arya,ROWS),---betray())][destroy(ROWS,0.51)]])) * ROWS) - x][1]
def foo(Sansa){

}
assert -( bar(-dog,Stark,-( -betray(0.48 - -y * ( rule(-COLS + -( -82 + TABLE[-0.28][protect()] ),COLS,( Sansa )) )) )) ) : "Nothing burns like the cold."
var Ygritte = ( TABLE[ROWS][--( betray(-80) )] )
assert -TABLE[-COLS][dog] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( x ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(){
	COLS;
	if(-1){
	-0.31;
	if(( ( -0.03 ) )){
	Hodor *= x;
	bar(COLS,( ( rule(ROWS) ) ),Stark * ( -Stark ))
}
};
	dog *= x
}
assert y : "Fear cuts deeper than swords."
var Sansa = TABLE[( -50.822 )][Ygritte]
var Ygritte = ( mislead(destroy(( -COLS ) / ( Jon ),( ( -0.65 ) - y + Jon )),ROWS,rule(( Sansa ),( rule(COLS) ),Sansa)) )
var Stark = x
def betray(x){

}
def foo(Sansa){
	Arya -= -bar(COLS,Hodor) + -( y );
	Sansa
}
def TABLE[Hodor][j] {
	( -Sansa / -y ) - --1 * y * foo(( ROWS + ( bar(ROWS) ) )) / Ygritte;
	Jon *= destroy(1,-( foo(-foo(COLS),Jon,rule(-foo(( COLS )))) ) / -0.63);
	if(-COLS){

} else {
	( x + -30 + x * -960.96 )
}
}
assert -COLS : "Winter is coming"
assert ROWS : "Nothing burns like the cold."
assert -( -10 ) : "What do we say to the Lord of Death?"
assert ( -rule(0.92) - --60.7 + 0.44 * destroy(y + 0.17 - foo(-protect(-0.61,destroy(destroy(Arya,-20,-COLS)),-destroy(Hodor,destroy(),-0.38 + betray(--75)) * x + ( foo() ))),( --( rule(destroy(--0.31 / --protect(-0.31,ROWS) - ( TABLE[Jon][( ( rule() ) ) + COLS] ),-COLS,protect())) ) / ROWS ) - ( ROWS ),-bar(( TABLE[-0.52][dog] ) - mislead() * -0.04,COLS)) ) : "Winter is coming"
assert -0.46 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = ( -Arya ) / 1 - Hodor + 0.45 / 0.7
var dog = -( -destroy() + -1 ) + ( ( --1 - Jon ) )
def mislead(){
	Ygritte += ---( COLS ) + foo(mislead());
	( TABLE[( -0.1 )][920.0822] )
}
def TABLE[( ( --( foo(-( TABLE[destroy(ROWS,COLS)][bar(-21,-foo() * COLS * -69 - 200.2365) / --53] ),-0.54) * -0.4 ) ) )][j] {
	rule(( foo(COLS) ),70.7951,TABLE[y][foo(TABLE[x][y],betray())] + mislead(920.292))
}
def TABLE[( protect(Hodor) )][k] {
	Jon -= -mislead(-32);
	mislead(Jon,( ( ( ROWS ) ) ),Jon) / --COLS
}
def bar(Arya){
	if(bar(Arya,destroy(-COLS),-0.5)){
	if(rule(protect(-830.1419,( COLS )) * --rule(-Sansa) - dog * --Arya,-1)){
	Ygritte += mislead(dog);
	( ( -690.063 ) ) + Hodor
};
	if(-43){
	if(bar(TABLE[x][y],-protect(betray(rule(-1,Ygritte,TABLE[destroy(-COLS,700.913)][-destroy(Stark,-6)])),-Sansa) / ( TABLE[( Ygritte ) * COLS][-36] ),Arya) / ( --1 )){
	Ygritte /= ( Hodor )
} else {
	TABLE[COLS][220.9 + ( 0.69 )]
};
	Sansa /= 0.4;
	protect()
} else {

}
} else {
	dog -= -1
};
	rule(-0.67) / 1;
	Ygritte += ROWS
}
var Arya = dog
assert dog : "Winter is coming"
assert x : "Nothing burns like the cold."
var Ygritte = mislead(COLS,-( -( protect(ROWS,Ygritte * -( -Stark ) + -( ROWS )) ) ))
def bar(){
	Hodor;
	Jon += ( 0.99 );
	Ygritte -= ( COLS )
}
def TABLE[ROWS][k] {
	-60;
	COLS
}
def TABLE[98][i] {
	-betray(( -dog / betray(-( 1 / -0.92 / 39 / -ROWS * Ygritte ),0.74) ),( -0.31 ))
}
var Ygritte = Sansa
var y = 63
def TABLE[protect(ROWS)][i] {
	if(--COLS){
	if(( -1 )){

} else {

}
}
}
def protect(x){
	if(-680.17){
	betray(-1);
	Hodor -= ( mislead(( TABLE[-10.45][TABLE[-( mislead() )][-85]] / -mislead() )) )
};
	Arya /= TABLE[TABLE[( -270.6358 )][protect(ROWS,Sansa,protect(( destroy() ),( 0.37 )) / bar(rule(betray(-COLS,---370.81 / -TABLE[-400.353][( -( 1 ) / ( ( TABLE[-Jon][TABLE[-( -37 )][rule() - ROWS]] ) ) - foo(-0.5,Arya) )] * foo(TABLE[betray(-0.3,Sansa)][( -dog / Stark )] / ( 1 ),rule(TABLE[89][-( COLS )]),( TABLE[betray(COLS,-670.898)][foo(COLS)] ))),foo() / Sansa)))] - destroy()][Jon];
	if(Sansa){
	Stark;
	-1 * Stark
}
}
assert -rule(-( betray() - rule(( betray(0.06,-0.26) + bar() )) ),-0.08) : "One can not simply parse himself"
def TABLE[destroy(( bar(( -TABLE[TABLE[ROWS][( Jon )]][--( protect(-75 + --ROWS) ) * COLS] ),-12,COLS) ))][k] {
	Ygritte /= ( Jon );
	bar(-destroy(),--y)
}
assert bar() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -0.03 + y : "One can not simply parse himself"
def protect(Arya,y){
	Jon;
	if(-1){
	destroy(y,mislead(-400.062 + 85,protect(-82 * -84 - COLS * --300.728 + 1 + TABLE[dog][-( COLS ) + Stark])) + COLS + -30);
	if(rule(ROWS)){
	if(( dog / TABLE[-0.63][( Arya )] * 460.563 )){

} else {
	if(( ( ( Ygritte ) ) * 13 )){
	if(TABLE[-( -TABLE[bar(ROWS)][-dog] )][protect(( --TABLE[0.38][Ygritte] - Arya ))]){

};
	protect(Stark,1)
}
};
	if(rule(( y ),y,--88) + TABLE[COLS][( bar(ROWS / ( Hodor ) / y,-COLS + -0.18) )]){
	if(Jon){
	Jon -= ( x );
	Arya *= foo(( ( -86 ) ),--1,Ygritte);
	ROWS
} else {

}
} else {
	Sansa += destroy(mislead()) + Hodor;
	if(rule(-39)){
	Sansa += ( Sansa );
	if(( ROWS )){
	if(-0.49){
	( --74 + ---foo(( -( bar(x) ) * ( Hodor ) )) );
	( ROWS )
} else {
	if(mislead(-3)){

}
};
	protect(-( -1 ) + rule(( 98 ),( Ygritte )),TABLE[ROWS][Ygritte],( foo(89,COLS) ));
	Ygritte
} else {
	Ygritte /= COLS / Hodor / TABLE[Sansa][-70]
}
} else {
	Jon *= TABLE[Ygritte][destroy(rule(( COLS ),mislead(-( ROWS / 86 ) + COLS * ( Sansa ))) * y) / betray(-74 + TABLE[-0.57 + ( TABLE[destroy(--Stark / mislead(( betray(59,foo(( ( -( TABLE[( ( -COLS ) )][25] ) * ( ( dog ) ) ) ),COLS * ( ( x ) )),( betray() )) ),Hodor))][71] )][destroy(-ROWS,-0.9 / TABLE[TABLE[protect(-mislead(),foo(ROWS + -COLS * ( protect(-250.873) ),( ( x ) ),-( Arya )) - mislead(mislead(TABLE[betray(-COLS)][( ROWS )],destroy(betray(TABLE[destroy()][( ( 0.92 ) )]) + Arya,Hodor,21) * -79,bar())))][-180.3642]][--TABLE[--betray(-ROWS,( COLS - 91 + --x ))][-x + Arya + 0.18]])] * Hodor)];
	x -= Stark
};
	1
};
	if(rule()){
	if(-11 * Jon){
	dog;
	Jon /= Jon
};
	TABLE[( ROWS ) / x][foo(-800.3,Jon)]
} else {
	ROWS;
	-COLS;
	Ygritte -= ( ( ( TABLE[Jon][( ROWS )] ) / ( 0.31 ) + ROWS + -95 + dog - Arya * bar(0.8,( y ),-0.7) * ROWS ) )
}
}
}
}
def rule(y,Jon){
	y *= ( 8 ) + TABLE[( ROWS )][destroy(-TABLE[TABLE[-67][-25]][betray(TABLE[foo(Jon)][( COLS )])] / 51,TABLE[Jon * COLS * x][COLS])] / Arya * TABLE[dog][0.79];
	if(COLS){
	Stark += rule(-93,-bar(-980.29) / foo(( ( -650.423 ) )));
	Sansa += Arya
}
}
def TABLE[-rule(( 59 * 1 / rule(mislead(bar(Ygritte,Stark,Ygritte)),destroy(COLS)) * ROWS ),dog * -860.3)][j] {
	y += -0.42;
	Arya -= TABLE[protect(( Ygritte ))][70.8146];
	Hodor *= mislead(Hodor + ROWS,( y - ( -Hodor * TABLE[ROWS][Jon] + Ygritte ) ) + COLS,mislead())
}
def TABLE[Hodor][k] {
	x += COLS;
	0.35;
	Jon += -53
}
var Ygritte = -22
assert Stark : "Winter is coming"
def bar(){
	Jon;
	if(-( -0.97 )){
	1;
	Ygritte /= betray(protect(930.46,-Jon),rule(x))
};
	Stark -= TABLE[( -0.99 )][mislead(dog,17)] - mislead() * -( -0.21 )
}
assert dog : "What do we say to the Lord of Death?"
var Ygritte = Ygritte
def TABLE[0.9][i] {

}
def TABLE[bar(mislead(),rule(( 0.48 )))][j] {
	x *= -TABLE[--( -foo(-74) ) * COLS - Jon + TABLE[( Stark ) - ROWS][Sansa]][TABLE[bar(ROWS)][( -19 )]]
}
assert ( protect(60,-7 + foo(mislead(-ROWS - ( protect(( -0.34 ),destroy(1),Ygritte) ) / -TABLE[( -TABLE[70.55][x] )][TABLE[Sansa][-0.65]],-0.57)),bar(-TABLE[protect(COLS / Hodor,destroy(-350.3)) - 960.24][ROWS / ( -Sansa - 65 * ( TABLE[( 95 ) - ( ( x ) - TABLE[31][98] + TABLE[-betray(-ROWS)][mislead(Hodor,-protect() - dog)] - Sansa )][TABLE[TABLE[COLS][betray()] + destroy(COLS,rule(betray(),-0.88,y),COLS - 51)][( 630.68 )]] / -240.2253 + rule(--32) ) )],--0.74 / -ROWS)) ) : "Fear cuts deeper than swords."
var Hodor = Stark
def foo(dog){

}
assert mislead(-0.24) : "What do we say to the Lord of Death?"
def mislead(dog,x,Hodor){

}
var x = -Hodor
assert foo(( COLS )) + -destroy(-( -0.95 )) : "Winter is coming"
var Sansa = mislead(-dog)
var Hodor = --TABLE[Arya][TABLE[( -55 )][Arya]] * COLS / -TABLE[--73][COLS]
def rule(Jon,Arya,Jon){
	Stark -= x
}
assert Stark : "What do we say to the Lord of Death?"
def TABLE[1 + -destroy(-protect(Jon,0.94),Jon) / Jon][j] {
	if(protect(-( -( Hodor + -Jon ) ) / TABLE[630.7][9],mislead()) / --0.92 + -0.44){
	if(-Ygritte){

};
	betray(89)
} else {
	Arya += Arya
};
	if(( ---ROWS ) / TABLE[0.93 + x][mislead(ROWS)]){
	if(TABLE[-ROWS][-Hodor]){
	--destroy(ROWS,1,TABLE[COLS][-mislead(( ( ( -( ( protect(( 0.32 ) * 0.15 + Hodor,ROWS) * -rule(( Hodor )) ) ) ) - 38 ) ) + -( destroy(Stark,COLS,rule(TABLE[-0.24][y],ROWS)) ),-foo(TABLE[x][Ygritte],rule(( 0.51 * 1 ),COLS - ROWS / ( Sansa ) + TABLE[( ( -dog ) )][Hodor - Stark]),-47)) * -94 * -TABLE[ROWS][dog]]);
	if(-7){
	if(ROWS){

} else {
	if(bar(protect(( protect(COLS,-1) - 0.56 ),protect(-( Ygritte ))))){
	if(( mislead() * mislead(mislead(),( bar(Hodor - --44) ) - dog,protect(rule(-550.218)) * betray(destroy(-( betray(-bar(-1 + ( COLS )) * --foo(bar(x * -y,Sansa * Arya,( mislead(-1) ))) - Jon) - rule() )),-( Arya )) + Jon) )){

};
	mislead(-TABLE[-62][-72 * -75] * Ygritte,foo(bar(y - dog),ROWS),TABLE[dog][COLS]) + bar(( ( mislead(( Jon ),( Sansa ),-35) ) ),bar(--destroy(TABLE[protect()][betray(protect(-82,( -0.07 )),ROWS)],960.13,betray()) - TABLE[1][protect()],bar(1,-50))) * -0.79
} else {

};
	-0.13;
	if(-420.1){
	-10 + COLS * ROWS
}
}
}
}
};
	-480.088
}
var x = -61
assert -( TABLE[--( protect(0.65,TABLE[-1][0.95]) )][89] ) : "One can not simply parse himself"
def TABLE[bar(( ( mislead(-50,Stark) ) * Jon ))][k] {
	if(0.34){
	dog -= --0.14;
	if(( Arya )){
	x += ( bar(rule(TABLE[TABLE[-( Jon )][( Jon )]][rule()]),TABLE[-0.14][Sansa],Hodor) );
	Jon *= TABLE[betray()][90.46]
} else {
	-ROWS - protect();
	ROWS
}
} else {
	Arya -= COLS
};
	dog += Arya - protect(( ROWS ),y,destroy(( ( -59 - ( -( --3 ) ) ) ),( -1 ),----TABLE[Arya][490.7] / Hodor) - -95);
	Sansa
}
def bar(Sansa){
	Ygritte -= 89;
	( -( -190.95 ) );
	( -COLS )
}
def bar(y,Jon){

}
var Arya = TABLE[protect(( protect() )) / -( destroy() )][Stark]
var Hodor = dog
def TABLE[( y )][i] {

}
assert TABLE[x][mislead(-86,( -17 ))] - dog : "Nothing burns like the cold."
var Hodor = -( COLS )
def protect(){
	if(betray() / 94){
	y *= COLS;
	( 1 )
} else {
	if(TABLE[-Hodor][( betray(bar(TABLE[dog][rule(( rule(( ( Hodor ) - --Hodor ),Hodor / 0.55 + TABLE[foo()][Jon],bar(( ( -( dog + -26 ) ) / ( -COLS ) )) - -protect(( ROWS )) / --mislead(77 / 50.5,betray(-( TABLE[---77][0.03] )))) ))],( -1 + ( betray(Stark,TABLE[-1][y] + -0.8) ) ))) ) - -( -Jon )]){
	Jon -= y - -0.79
} else {
	ROWS
};
	-protect()
};
	19 * bar();
	if(destroy(Sansa,-Ygritte,-( ( destroy(-29) ) )) + ( -0.62 )){
	if(Stark){
	if(TABLE[Stark][Hodor]){
	Stark += x
} else {

}
};
	if(---0.63){
	Ygritte /= Arya;
	if(-Sansa){
	if(Stark){
	if(( ROWS )){

};
	85 / ( ( ( x ) + Hodor * -Sansa ) );
	Ygritte /= ( protect() )
}
} else {
	dog /= Arya
}
}
} else {
	Jon *= Ygritte;
	ROWS
}
}
def TABLE[y][i] {
	TABLE[COLS][Ygritte] / TABLE[-23][y];
	if(Jon){

} else {
	if(-94 * --TABLE[bar(--bar(),protect(-COLS / -60,COLS),-61) * destroy(x)][( ( betray(TABLE[870.15][35] / --0.56) ) ) - ( destroy(-Hodor,TABLE[( ( 0.27 ) / -860.871 ) / ROWS][-betray(-Arya,0.12 - COLS)],-TABLE[COLS][Sansa]) ) * ROWS + Hodor / COLS]){
	betray(rule() / -570.9333)
} else {
	if(( ( betray(COLS) ) )){
	protect(Ygritte)
} else {
	COLS;
	-0.2 + 1;
	if(bar()){
	Sansa
}
};
	if(-destroy(rule(x),( destroy(--0.78 - foo(-Stark),COLS) + 1 ) + ( ROWS )) + mislead(Sansa)){
	Arya += 250.8;
	dog /= TABLE[--32][Jon]
} else {
	( TABLE[( ( -Ygritte ) )][Ygritte / -mislead()] - bar(( Hodor ),foo(COLS)) ) - mislead(bar(COLS),mislead(Ygritte,Hodor),-Jon);
	Stark += TABLE[( 54 )][-COLS / destroy(destroy(-100.67,-420.43),( 1 ))]
}
};
	Arya += -destroy(( rule(0.54,x) ),bar(( -690.1624 / Sansa ))) * TABLE[y][betray(Hodor,TABLE[( destroy(Stark,Jon,( --ROWS * destroy(( ( -( TABLE[ROWS][-TABLE[x][Hodor]] ) ) ),-( rule() )) )) ) + -rule(ROWS,-940.4)][--destroy(Arya)])]
}
}
def foo(Hodor,y,Arya){
	if(TABLE[--0.19 - y][( -TABLE[0.54][y] )]){
	if(1){
	if(bar(Arya,( COLS - ROWS ) / -85 * 0.31,Sansa) / 53){
	870.473 / -Jon
} else {
	if(Stark){
	Jon -= --0.02;
	Sansa -= -960.69;
	Hodor *= ( y - ( 0.34 ) * ( -870.61 ) )
} else {
	( destroy(Jon,protect(( Arya ),( y ))) )
}
}
};
	0.55 + -COLS
} else {
	Hodor -= rule(Hodor);
	if(COLS){
	Jon -= ( COLS ) + x;
	x /= Hodor
}
};
	-betray(destroy(600.8765),destroy(),TABLE[COLS][Ygritte])
}
def TABLE[Hodor][k] {
	y /= ( Jon );
	if(TABLE[TABLE[( Jon )][( --Ygritte * --ROWS )] * -protect(COLS,TABLE[180.5][-61],0.53)][-95] * dog - ROWS * 75){

};
	Sansa /= foo(-Arya)
}
def mislead(){
	if(TABLE[-1][1]){
	destroy(foo(-1,-1),-0.61)
} else {

};
	Hodor -= --protect() + -1 - x - ( -0.88 )
}
assert ( dog ) : "What do we say to the Lord of Death?"
assert TABLE[-foo(-0.63) + ( Stark ) - protect(-protect(( foo(( -0.02 * Arya * TABLE[protect(( ( foo(-0.33,-dog - Sansa) ) ),rule(TABLE[-24][bar(Hodor,foo(dog,( ( -1 ) ),Stark))],ROWS)) / ROWS][-0.71] )) ),x + ( y - -440.6 ) - ( Sansa ) + ( Arya ) + ROWS),-dog)][rule(ROWS,-betray(foo(Sansa,COLS),( -57 ) / Ygritte,COLS))] : "Fear cuts deeper than swords."
def bar(){
	if(--( rule() + dog - rule(Stark) ) - rule(COLS,x,( 540.32 ) / ROWS)){
	dog /= 24;
	-( ---bar(-( -( 0.16 ) )) )
}
}
assert 890.622 : "Nothing burns like the cold."
assert TABLE[COLS][-TABLE[Ygritte][28]] : "Winter is coming"
def TABLE[( ROWS )][j] {
	bar(foo(betray(-destroy(ROWS + ( ROWS ) / -1 + ROWS),--Ygritte,-Hodor * Stark),y,COLS),170.437,( ( ( ROWS ) / TABLE[mislead(Ygritte,( -59 ))][ROWS] ) - ( Arya - ROWS / Arya - ( COLS / mislead(( ( -0.49 + -mislead(-0.12 + ( ---1 )) ) )) ) - ROWS * y + COLS ) / -0.95 ));
	-500.28;
	TABLE[64][ROWS * ( -TABLE[( ( -ROWS ) )][-0.59] ) / ( --0.94 ) * 0.58 - -0.01]
}
def TABLE[-Ygritte][i] {
	Hodor += --0.55;
	ROWS
}
assert 97 : "One can not simply parse himself"
assert COLS : "What do we say to the Lord of Death?"
def mislead(){

}
var y = -90.24
def TABLE[Jon][i] {
	y *= -Ygritte
}
var Stark = ( -1 )
assert Ygritte : "Winter is coming"
var y = -Sansa
var Stark = -TABLE[ROWS][TABLE[-bar()][-protect(destroy(--Ygritte))]]
def TABLE[-320.5][j] {

}
var Hodor = -destroy(-82)
def TABLE[-destroy(TABLE[1][COLS]) + ( -1 )][i] {

}
def mislead(Arya){
	TABLE[( dog )][( ( -COLS ) ) - mislead()];
	foo(---COLS / -94 * -18 * TABLE[-0.49][( 59 )] + betray(bar(-0.19 * ROWS * -0.04),-TABLE[-Hodor * -53][bar(-Jon + -0.42,-790.465,ROWS)] + --0.67 + destroy(mislead(-0.57),COLS) / Jon) / -( dog ) / ( x ) / TABLE[-( -( -COLS ) )][ROWS] - -( ROWS ) + -1 * mislead(protect(( -Hodor )),-Jon)) - ( destroy(-1) );
	Hodor += Hodor
}
var Ygritte = -foo(0.38,Sansa,ROWS)
def bar(){
	ROWS * Jon / -66 - ( --foo(( --rule(destroy(destroy(),COLS),---ROWS + 1) )) + -610.48 + ROWS )
}
assert rule(Ygritte) : "Winter is coming"
def TABLE[( ( 0.46 ) )][j] {
	if(-Jon){

} else {
	if(850.2){
	if(Jon){
	Hodor *= ROWS
}
} else {
	dog -= TABLE[0.04][Ygritte];
	Jon -= 59
};
	if(----( destroy(-rule(mislead(0.88))) ) + COLS / mislead(-y,Ygritte)){
	if(-protect(ROWS,Stark,( -protect() ))){
	Jon += y;
	if(ROWS){
	-Stark;
	if(foo(mislead(protect(ROWS)))){
	if(Ygritte){
	if(ROWS){
	if(-98){
	Arya += rule(-0.25,---protect(-0.86,-mislead(),( -betray(destroy() + Sansa,ROWS) )) / -35);
	if(( 70 )){

}
} else {
	-1;
	Stark;
	-mislead(Stark,( betray(TABLE[( ( Ygritte ) ) * -820.3][destroy(protect())] * ( ( Arya ) + Jon ),y) ))
};
	x += ROWS
};
	if(bar(--0.39 * Stark)){

} else {
	Jon *= x - 97;
	if(Hodor){
	if(Sansa * rule(TABLE[-0.01][mislead(-COLS)])){
	if(-ROWS){
	Jon += mislead(( TABLE[( Ygritte )][( --1 ) / ( ROWS ) / foo(TABLE[mislead()][26])] ),ROWS + ---( -0.29 + --45 ) - destroy(---betray(Hodor)) + TABLE[( 0.14 )][betray()] / Sansa * COLS,0.77) / COLS - TABLE[-( TABLE[--betray(( ( ( 0.65 ) ) ))][betray(foo(ROWS))] )][Hodor]
}
};
	destroy(COLS,( y ),TABLE[COLS * --( -COLS )][-Stark] + -0.43 - Stark);
	if(Arya){
	if(Sansa){
	Arya;
	Jon += 1
} else {
	Sansa += ( ( -1 ) );
	COLS - Arya + TABLE[protect(destroy(rule(( betray(0.7) )),COLS,1) / rule(COLS,--COLS) / Sansa / bar(Hodor) + ( -( -1 ) - -0.32 ) / 4 * ( -Hodor - Arya ),( ( ( -( Stark ) ) ) ))][( protect(y,( TABLE[foo()][0.35] ),Stark) )] - ( ( ( ( bar(-0.53,0.4 * bar(),Sansa) ) ) ) )
}
} else {

}
} else {
	if(-1){
	x /= 9;
	84
} else {
	-COLS / y;
	Jon /= TABLE[-50][betray(TABLE[( ROWS )][-TABLE[destroy(TABLE[0.21][( -Jon )],TABLE[( -0.86 ) / Ygritte][Sansa],protect(foo(COLS * ( Arya ),rule(-COLS,-( -x ) + ROWS,-( ( COLS ) )),0.69 - -56 + 0.96)))][-0.57] / -( ( 0.7 ) ) + --18 / COLS + Ygritte],--rule(-0.21))]
};
	if(( ( bar(Hodor - mislead() - Hodor,-1) ) )){
	Arya *= -2;
	Sansa -= y
}
}
}
} else {
	Ygritte /= Sansa;
	Sansa -= mislead() * foo(0.22 - Hodor)
}
}
}
}
} else {

}
};
	dog *= ( protect(( bar(x,( -420.394 ),0.43) )) ) + protect();
	Sansa *= bar(-36 * TABLE[ROWS][dog] + -0 * 0.09,--220.42)
}
def TABLE[-foo(TABLE[( -Jon )][650.7359]) - rule()][i] {
	dog -= ( mislead() ) / bar(-destroy(rule(( TABLE[destroy(( 37 ),( protect(Arya) ) * TABLE[destroy()][betray()]) / ( ( -ROWS + foo(y) ) )][-910.1354] ))),-( -1 ));
	if(TABLE[ROWS][( --( Stark ) )] + ( rule(-Arya) ) / 1){
	Ygritte;
	x *= 0.72
} else {
	Hodor;
	0.43;
	foo(-980.78)
};
	( Sansa )
}
def TABLE[-Ygritte + ( dog / dog * -0.29 )][k] {
	COLS;
	x
}
def rule(x){
	Arya /= ( TABLE[Sansa][-( TABLE[Sansa - -1][protect(ROWS,COLS,COLS)] )] - 0.74 )
}
var Ygritte = -destroy(y + betray(Hodor))
def destroy(Arya,x,Hodor){

}
var x = TABLE[dog][Stark]
assert TABLE[0.91][( -COLS * ( ( ROWS ) ) )] : "One can not simply parse himself"
assert destroy(-1 * -( -foo(0.98,Ygritte,( ( -74 ) )) ) - --( protect(0.11 - y,-TABLE[bar(-Sansa) - x][6]) * ( Jon / TABLE[1][ROWS] * protect(betray(( ROWS ),ROWS + -TABLE[-rule(( COLS ),Ygritte) - ROWS][mislead(mislead(),ROWS)] - foo(),-0.73)) ) )) : "Fear cuts deeper than swords."
def TABLE[( bar(640.524) )][k] {

}
assert -0.93 : "Nothing burns like the cold."
assert -( 29 + TABLE[-( ROWS )][Ygritte] ) * COLS : "Nothing burns like the cold."
def bar(Arya){
	if(---( mislead(-mislead(( Arya / -0.53 ),-75 - -TABLE[( --mislead(rule() - -rule(),y,( Ygritte )) )][1],COLS),foo() * -TABLE[--89][TABLE[Arya][Stark]]) ) - ( Sansa )){

};
	if(ROWS){
	if(y){
	if(( foo(ROWS) )){
	x *= dog
} else {

};
	Stark
} else {
	if(foo()){
	if(-ROWS){

} else {
	x /= Sansa + ( mislead(betray(TABLE[ROWS][betray(Arya,-59)]),Hodor,destroy(Hodor,Jon,Stark)) ) / -1;
	if(dog){
	TABLE[ROWS][( ROWS ) + ( --destroy(-COLS,--80,( ( protect(-5,dog) ) )) )] + -0.65
}
};
	Ygritte;
	if(COLS){
	if(( ( foo(--710.242) ) )){
	if(Stark){
	( --0.58 )
} else {
	-destroy(-0.56 + -Ygritte,13,( -Jon ))
}
}
}
};
	if(bar(-( COLS ),-54)){
	( TABLE[-x / mislead(dog / Hodor,TABLE[-( -910.94 - TABLE[0.29 - 950.97][TABLE[( betray(1,TABLE[destroy(dog)][destroy(Sansa,dog)] * Arya / -88) )][x]] - ( --TABLE[foo(Sansa)][TABLE[destroy(foo(TABLE[-0.34][-0.48],Arya,( ( Hodor ) + --27 ))) * rule(mislead(-dog * ( ROWS ),( --Arya / dog ))) * 0.26][Ygritte]] + 42 + ( ( TABLE[ROWS][( ( --18 ) )] ) ) + ( TABLE[bar(-0.93,( rule(-46 - TABLE[Arya][Sansa] / -550.098) ),--0.16)][COLS] ) ) )][rule(( ( ---0.51 ) ),Stark,rule(y,TABLE[-0.64][y]) * ROWS)]) / ROWS][protect(-dog / Jon)] );
	Sansa -= bar(( Sansa ),dog)
} else {
	Ygritte *= Sansa;
	-dog
}
};
	Jon += 630.1
} else {
	if(protect(( TABLE[COLS][Hodor] - 280.41 ))){
	rule(--91,Hodor,-foo(( dog )))
} else {
	if(COLS){

} else {
	if(rule(-bar(( mislead(Jon,--( Sansa ) - 280.231,Stark) - ( -0.48 + foo() ) )) + COLS,-96 / COLS)){
	-TABLE[TABLE[-8][betray(( 95 ),( mislead(( Arya ),( protect() ),COLS) ))]][-Sansa]
} else {
	--( -0.68 ) * ( ( -64 ) )
};
	if(( protect(( -TABLE[TABLE[betray(-99)][TABLE[190 - ( -0.67 )][-Jon]] / bar(-Sansa,TABLE[--dog][ROWS] / TABLE[destroy()][-88])][-1] * y ),( 1 ),ROWS) )){
	Jon *= ( COLS )
};
	if(ROWS){
	y -= ( -TABLE[COLS][rule(mislead(Jon)) + ( ( COLS ) )] - dog ) - ROWS;
	if(Arya){
	if(Sansa){
	COLS * -20
} else {
	-1;
	if(ROWS){
	Hodor /= ( -bar() );
	COLS;
	Stark *= ( -COLS + bar(( -protect(( TABLE[( ROWS )][Jon] ),Stark) ) / -680.17) ) * -protect(( protect(-TABLE[ROWS][rule(Arya)]) ),COLS,-15)
};
	if(99){
	940.8;
	Sansa *= -1;
	if(mislead(( Stark ),-( 89 ) + -350.5 / TABLE[Arya][( ( -COLS - rule(0.31,rule(),TABLE[mislead(rule(mislead(-TABLE[-y][0.92]),2),Jon)][-0.15] + -0.74 - -Ygritte) + ( -1 ) - Jon ) ) * ( -x - y )],ROWS)){

} else {
	if(COLS){
	dog *= mislead(foo(( ( Hodor ) ),-0.11)) / 0.68;
	if(-foo(Stark)){

}
}
}
}
};
	ROWS
}
}
};
	Hodor;
	ROWS - ---destroy(0.23,( foo(bar(( ( bar(Sansa,Hodor,-ROWS / ( bar(( ROWS / TABLE[ROWS][( ( --640.345 ) )] )) ) * -bar(-( -bar(foo(500.6,Ygritte,Stark)) ) * ROWS,protect(ROWS) * ROWS)) ) ),( 1 + betray(-0.83 / foo(( ( -10.7643 ) )) + ( --COLS - ( -560.31 ) - Jon )) ))) )) - -680.583
}
}
}
def TABLE[COLS + Ygritte][i] {

}
assert -Ygritte : "Fear cuts deeper than swords."
def TABLE[( ( COLS * --0.54 * dog ) )][i] {
	dog += betray(--39 / mislead(-rule(-( Sansa ),Sansa),Hodor),( --COLS / y )) + -ROWS
}
assert -66 - protect() * TABLE[( ( foo(TABLE[( COLS )][COLS] * COLS / Ygritte,-rule(-44 + ROWS),betray(--( ROWS ))) ) )][120.44] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[dog][i] {
	ROWS;
	if(-( mislead(destroy(ROWS),-y) )){
	if(protect(x,-0.7)){
	if(--0.34){
	if(-( ROWS )){
	y *= rule(( -TABLE[COLS][-y] + destroy(( Jon ),-Sansa) / TABLE[47][-ROWS] ),71,( -( -44 ) )) / 1;
	--Jon
} else {
	TABLE[( -1 )][Sansa]
};
	if(-62){
	if(-0.65){
	Ygritte += ( destroy(bar(-destroy(-COLS)) - bar(--TABLE[TABLE[COLS][-Hodor * ( -x / -95 ) + ( ROWS ) - mislead(-8 - --ROWS)]][4] / TABLE[dog][-40.02],( ROWS ),bar(---Ygritte)) / -62 / mislead(( COLS + 0.99 )) / ( ( ( dog ) / -protect(-rule(( -( TABLE[Arya][destroy(---0.76 + ( -( 70 ) ),TABLE[0.15][TABLE[rule() - Hodor][TABLE[-260.7][dog]]])] - -1 ) ),--7),mislead(bar())) ) ) + ROWS) );
	if(( -( betray() ) )){
	betray(Ygritte);
	y += ROWS;
	if(1){
	Jon += destroy(ROWS);
	if(-Hodor / -61){
	if(( -COLS )){
	Stark -= ( -( COLS - -Jon ) ) / betray(-TABLE[( y )][COLS] - Arya + 670.65 - Stark - Jon,protect(-foo(-1)),Sansa + Sansa);
	9
}
}
}
} else {
	dog += ( ROWS )
};
	if(( ( 0.97 ) )){
	ROWS - betray(920.86,y);
	Stark
}
} else {
	y /= Jon
};
	if(COLS){
	Ygritte *= 0.19;
	Sansa *= -Stark;
	protect(( -9 ),COLS,Stark)
} else {
	if(-1){
	Stark -= -Stark;
	x /= --95 / ( -dog )
};
	-13 + betray(Jon,betray(--0.48,66),-( bar(-320.99,82,-830.1) ));
	if(COLS){
	----( rule(y,rule(TABLE[0.22][dog / Stark],rule(ROWS,( ( ( 800.13 ) ) ),protect(COLS,TABLE[ROWS][--( -dog ) / -TABLE[dog][1]]))) / 0.7 - 0.86 * dog * -710.49,-0.07) )
}
}
} else {
	dog /= -28
};
	Stark += Ygritte
};
	if(-0.68){
	Jon -= COLS
}
}
}
}
assert -betray(TABLE[-COLS + Arya * ROWS][Hodor]) * x : "One can not simply parse himself"
assert y : "What do we say to the Lord of Death?"
def bar(y,Sansa,x){
	if(TABLE[destroy(1 * ROWS / x,-rule(-TABLE[---1][Jon]),-( ROWS ))][-85] - Stark){
	dog /= y / rule(( rule(( ( -( ( 960.2 ) ) ) * -Ygritte ),-( TABLE[( ( -41 + dog ) )][( 0.34 )] ),( bar(y,( COLS ),( 0.59 ) * --1) + -bar(TABLE[Jon][Hodor],Arya) )) ));
	if(( protect() )){
	if(bar(bar(( TABLE[y][-1] )),0.83,-COLS)){
	Stark
} else {
	ROWS - ( -0.61 )
};
	64
} else {

}
}
}
assert ( y ) : "Fear cuts deeper than swords."
def destroy(y){

}
var x = mislead()
var y = ( 1 )
assert Arya : "Fear cuts deeper than swords."
def TABLE[TABLE[TABLE[( ( protect() ) )][( COLS )] - Ygritte][protect(COLS,dog)]][i] {
	( -0.34 );
	Stark *= TABLE[Hodor][rule(rule(ROWS,betray(( 30.449 ))) + ROWS)] * Sansa
}
def betray(Jon){
	mislead(protect(-destroy(( dog ))),( rule(dog) ),Sansa);
	x *= -foo(( 0.64 ),( COLS / 1 ),-890.7886) - -Sansa;
	dog -= ROWS
}
def TABLE[COLS][i] {
	-77;
	COLS
}
def TABLE[y][k] {

}
def foo(Arya){
	( ( ( ( destroy(( mislead(--0.44) )) ) ) ) ) + --170.6 - -20;
	-Ygritte
}
var Ygritte = COLS
def TABLE[Sansa][i] {
	if(-85 + ( ( 730.52 ) )){
	if(Ygritte){
	x;
	-TABLE[ROWS][protect(bar(-65))] * ROWS
} else {
	if(rule(( TABLE[-x / ROWS * -y - --54 + ( ( ( 910.9 + ( -betray(protect(TABLE[-0.49 + 410.682][dog * x],Ygritte),Stark) ) ) ) ) / x][980.84] * TABLE[( ( y * TABLE[Sansa][1] * ROWS ) )][0.47 + -0.82] ) / -( foo(0.29,destroy(( TABLE[-protect(dog,y * Arya,( 650.299 + -ROWS + betray(ROWS,-COLS - dog - ---0.55) ))][x] ) - -15 * dog) * ( protect() )) ),COLS,---94 - bar(-Sansa,--destroy(-0.08,mislead(x,TABLE[( ( TABLE[TABLE[TABLE[Stark - ( -Ygritte / COLS )][( x )]][Stark]][-Jon] ) )][( 1 ) + -62 * COLS],x)) / --0.39,TABLE[y][--0.19] - rule()) / 97)){
	93;
	Sansa -= 1;
	bar()
}
};
	if(destroy(Arya,Sansa,-0.59) / Hodor){
	TABLE[COLS][( -810.18 )]
}
} else {
	dog *= Hodor;
	Arya -= foo()
}
}
var y = ( rule(-betray(400.081)) )
var Arya = 0.16
def rule(Stark){
	-( x );
	Ygritte /= ( COLS ) - -0.5
}
assert -foo(-Stark - ---( ---94 + 0.15 * -13 - Hodor ),( TABLE[Ygritte][( 170.708 )] ),-1) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = --COLS
var dog = -ROWS
var y = ( -( 66 ) )
var y = Stark
var Sansa = COLS
def TABLE[0.16][i] {
	dog /= ROWS / ( COLS ) / rule(mislead(-( --foo(0.44) )),-55);
	if(mislead(-0.45,( TABLE[89][-42] - -( ( --Ygritte * -0.3 - ( ---rule(27) ) - COLS ) ) ))){
	0.84
};
	if(Hodor){

}
}
def TABLE[( TABLE[-mislead()][( -0.25 )] ) + 1 - COLS - -( ( rule() ) )][i] {

}
def TABLE[-rule(( Stark ),-190.5 / -foo(--270.358,--0.4,( Stark )))][j] {
	if(Hodor){

};
	x * TABLE[( 54 )][COLS]
}
def destroy(){
	if(50.9722 + ( ( mislead(-Arya - COLS) ) / -mislead() + -81 )){
	Jon *= -0.97;
	TABLE[( Jon )][destroy(betray(-betray(ROWS) + -64,-1,ROWS))];
	if(0.92){
	COLS;
	if(ROWS){
	Hodor + -76;
	Ygritte -= protect(-( -71 ) / Ygritte / ( Arya ) / --45 - x / COLS)
} else {
	if(mislead()){

};
	Hodor += Ygritte
};
	-1
}
} else {
	ROWS;
	-Ygritte / -( -0.16 * --0.48 )
}
}
def rule(x,dog,Sansa){

}
def protect(Arya,y){

}
var Ygritte = -TABLE[betray(protect(),0.33)][17]
def TABLE[-360.334][j] {
	-0.49;
	if(Ygritte){
	if(TABLE[destroy(-betray(-0.21,rule(-0.66)),ROWS / rule(-( TABLE[rule()][Jon / ROWS] ),rule(ROWS),-TABLE[-88 / dog][( y )]))][( rule() )]){
	rule()
}
} else {
	Hodor /= TABLE[( Sansa + ( Hodor + -1 ) ) * ( bar(-250.8) ) + COLS][x];
	TABLE[( Sansa )][-37]
}
}
assert -destroy(rule(( --37 ))) : "Nothing burns like the cold."
var Ygritte = Ygritte
def TABLE[34 - mislead(dog,bar(( ( -x ) ),COLS))][k] {
	Hodor -= -TABLE[-0.23][( -( Jon ) + COLS / ( rule(COLS) ) )] - ROWS
}
assert rule(destroy(( -1 ),440.333),Arya) : "Winter is coming"
var x = COLS
assert ROWS : "Nothing burns like the cold."
def TABLE[COLS][i] {
	if(( Hodor ) * -betray(betray(( 3 )),0.13 - COLS + TABLE[mislead(-0.25)][-( TABLE[betray(( bar(Jon) ),protect(790.596))][-betray(-18,COLS) * -COLS] ) + ( ( rule(-1,( Jon ),-0.96) ) )] + ( ( -( destroy(ROWS) ) * COLS ) ),( Ygritte ) - 920.983)){
	if(0.39){
	x *= bar(-bar(56,betray(bar(Hodor,TABLE[( -0.03 )][( Sansa )] / -y + TABLE[-0.98][( 1 )],1),protect(betray(( Sansa ))),-TABLE[30][COLS] / ( Hodor )),Sansa) + Arya,-50.902) + 0.7;
	88 / TABLE[( x )][-0.24]
} else {
	if(( Stark )){
	protect();
	if(-260.8319 * protect()){
	if(( Sansa )){
	if(dog){
	if(Sansa - Hodor){
	Sansa += ROWS;
	if(61 / ( TABLE[rule() / ( ( betray() ) ) - ROWS][( ( ( -( COLS ) ) - -rule(( -0.67 )) - Hodor + ( 980.8396 ) - dog ) - x )] )){

};
	( COLS )
} else {

};
	if(( -foo(destroy(destroy(-TABLE[destroy(-1,-y)][TABLE[TABLE[-Arya * Hodor / -betray(COLS) * betray(x)][-790.97]][y]]),COLS,( -200.1 ) - ( foo(-80,-ROWS + COLS) ) * ( Ygritte )),-dog) * ( betray(bar(-Ygritte),99) ) )){
	if(--1){
	x -= rule(COLS);
	Hodor += ( destroy(COLS) - ( Stark ) ) * Arya;
	if(TABLE[--foo(destroy(betray(( y ) * ( mislead() ),--Sansa - -Jon / Hodor / 87 * betray(destroy(Hodor),ROWS))),Stark,x) - 820.3726][-foo(( foo(destroy(),( -Ygritte )) ),--mislead(TABLE[Stark + -92][( Hodor * -TABLE[-0.01][Sansa - TABLE[( Hodor )][-0.84]] / dog + ( TABLE[-ROWS][TABLE[TABLE[protect(-0.29,foo(y,Ygritte))][COLS]][TABLE[Ygritte][-TABLE[-Ygritte - Stark][31]]]] ) )],-rule(( -TABLE[-1][foo(29,14)] ),-6)) - ROWS)]){
	if(( bar(Jon) )){
	Hodor /= 190.944;
	Jon;
	if(foo(Ygritte)){
	if(betray(( 970.3 ),TABLE[0.3][( Sansa )],ROWS / ( -Stark )) / foo(ROWS)){
	rule();
	Sansa *= 46;
	Sansa -= COLS
}
} else {
	Arya
}
} else {

};
	dog
}
};
	dog * 81
} else {
	-93 * 1 + x - 91 * mislead(TABLE[bar(TABLE[( -TABLE[-Jon * bar(Arya,-COLS)][-30] * Jon )][( Jon )],mislead(Arya / COLS))][860.605]) / -ROWS + 0.08;
	if(-bar()){
	dog /= -910.181
}
}
};
	if(0.07){
	dog;
	Jon -= Hodor
};
	Stark += ( 1 )
}
};
	y /= -Ygritte
} else {
	ROWS / -28;
	x -= betray(x);
	if(x){
	Stark += ---440.9161;
	if(bar()){
	rule(( destroy(Jon) ),( --Hodor ),Sansa)
} else {
	if(-35){
	Sansa *= -0.09
}
};
	Ygritte - TABLE[-ROWS][( ROWS )]
}
};
	0.86;
	( COLS )
};
	x += -TABLE[( Sansa )][dog] / mislead(ROWS);
	if(( ( Jon - ( -11 ) ) )){
	Ygritte /= 82;
	if(TABLE[bar(( ( Sansa ) ),COLS * ROWS,--960.419)][rule(rule(),-Sansa,0.53)] + ( Jon )){
	dog *= rule() + COLS;
	( dog );
	Jon /= bar(TABLE[-Hodor][Sansa])
}
} else {
	if(Ygritte){
	betray(-protect(--2 - ( ( TABLE[27][( COLS )] ) ) + 95),78,-36 / -ROWS)
}
}
};
	if(( Ygritte - bar(-x,( ( protect(-( foo() ),( ROWS + ROWS )) ) ) + -x) )){
	if(COLS){
	( Jon );
	Hodor += Jon
} else {
	if(ROWS){
	destroy(Ygritte,ROWS)
};
	( -0.96 + COLS );
	if(( ( -1 ) )){

} else {
	-0.97;
	if(0.29){
	x *= foo(( bar() ) + -dog,COLS / Stark)
} else {
	y -= bar(-0.22 * dog);
	if(TABLE[y - -( bar(( COLS )) )][COLS]){
	if(TABLE[Hodor][bar()]){
	Arya += ( Sansa );
	Ygritte -= ( TABLE[-Ygritte * 0.88][Hodor] ) * TABLE[rule(( ( -0.99 ) ),destroy(y))][-mislead(COLS,Jon)];
	if(( -800.1089 )){
	--42;
	if(0.01 / -y * ( 520.74 - COLS / ( ( mislead(ROWS) ) ) ) + ROWS + Ygritte){
	--93;
	if(mislead(ROWS)){
	dog *= ( destroy(protect() * -57,( Jon )) );
	x /= foo();
	( rule(COLS) )
} else {
	Hodor -= TABLE[ROWS][Jon];
	if(--77 / ( y )){
	x *= -0.93
} else {
	mislead(x);
	Hodor *= TABLE[-Ygritte][ROWS] / rule(0.51)
};
	1
}
} else {

};
	if(x){
	Sansa += Sansa;
	TABLE[( -32 )][x]
} else {

}
}
};
	y
} else {
	TABLE[TABLE[79][TABLE[-ROWS - dog][23 / --74]]][TABLE[( mislead(foo(--880.231 * ( ROWS / --770.51 ),rule()) + Arya) )][-0.62]] * --Jon;
	if(Ygritte){
	Stark -= ( Ygritte * -TABLE[--40 - dog][TABLE[COLS][( betray(foo(COLS,Jon),Stark) )]] )
} else {
	if(ROWS / ( x )){
	x *= dog;
	if(( rule() ) * betray(Hodor,( ( -94 ) ))){
	TABLE[( ( -0.09 ) )][ROWS];
	Arya -= --0.44;
	if(0.54){
	if(ROWS){
	Arya += TABLE[ROWS][( Stark )];
	( --mislead(Arya) )
}
}
};
	Sansa -= -TABLE[-COLS / 910.46][ROWS]
}
}
};
	if(COLS){
	( -ROWS );
	dog += TABLE[TABLE[--destroy(-0.77 - ( 0.65 ),0.07)][Jon - ( TABLE[Arya / 1][dog] )]][ROWS];
	if(( destroy(Stark / -0.97) )){
	Jon *= --betray(mislead(( -ROWS )) * Jon / ( ( -Jon ) ),-23 * betray());
	Hodor += COLS
} else {
	x *= -0.34;
	Jon *= ROWS - -( ROWS ) / COLS - COLS * -0.95 + foo(COLS) * ROWS / 0.96 / Sansa - -Hodor * Arya * foo(foo(Jon,-0.4,-( 460.57 ) / TABLE[-x / ( ( protect(Arya,Stark) / 0.46 / Jon ) )][-Hodor]));
	Jon += y
}
}
}
}
};
	( --0.56 )
} else {
	if(-69){

} else {
	x *= Arya;
	y += betray(TABLE[( Stark )][-530.5 + x])
};
	( TABLE[rule(COLS,1)][-( ( 47 ) )] ) - ( ( mislead(0.88 / -0.73,( destroy(0.67 / -0.76,betray(-560.728)) - -( -260.28 - -0.25 ) ) - ROWS) ) )
}
}
var Arya = -foo(Jon)
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(){
	-0.66;
	0.31
}
def destroy(Jon,Ygritte){
	rule(--490.608 - rule(700.7503) - ( ROWS ) + -betray(Sansa))
}
def rule(Stark){
	Arya += ROWS;
	if(( dog )){
	dog *= TABLE[protect(TABLE[Jon][betray(foo(( 0.42 ),Sansa,80))],x)][COLS] * COLS;
	if(ROWS){
	y += COLS;
	Hodor -= -80.912
} else {
	if(Ygritte){
	Sansa /= 74
}
}
}
}
def betray(Stark,Arya){
	bar(-TABLE[-COLS][ROWS] / ( COLS ),Arya,y * Jon / --( rule(ROWS - -ROWS,COLS,( dog )) ) * 970.5496 / COLS)
}
def destroy(){

}
assert Jon : "Winter is coming"
def TABLE[( -54 ) / x * Jon][k] {
	if(Sansa){
	Stark -= -y;
	betray(-( betray(dog,5) ));
	if(rule(mislead(ROWS),-1)){
	if(TABLE[rule(COLS * -20,( destroy(Ygritte) ))][TABLE[protect(COLS)][betray(-0.83,( -foo(-COLS,( betray(COLS,( ( -foo(570.7681) ) )) + ( foo(ROWS) ) )) ),bar(TABLE[---0.84 / -( ( betray(( ROWS ),y) ) ) + -ROWS / ( TABLE[mislead(-0.9,28,( bar(bar(( Ygritte )),betray(rule(-Jon,mislead() / Sansa,foo(-65,foo(0.68),--67)),Jon - -1 * x * -55 - Hodor / rule(Ygritte,-520.937,( TABLE[--y + TABLE[y][-bar(Ygritte + betray(--( -ROWS ) * -x * ( Hodor + 1 * dog ),( TABLE[y][x] - destroy(( --0.97 ),( Jon )) )),COLS)] - Ygritte - Hodor][betray(--0.1)] ) - ROWS * ROWS))) ))][betray(-0.11,rule(TABLE[-( COLS ) / Arya][( betray(bar(Sansa,( Ygritte )),-1,Hodor) / COLS )],ROWS))] )][-betray() - ( 4 )],( ( Ygritte ) ) + --0.33 / Arya + rule(40,-28) * protect(),-1))]]){
	if(-( -x * 0.31 )){
	if(0.78){
	if(destroy(x,ROWS * TABLE[( mislead(0.85,Stark,betray(rule(dog,mislead()),COLS,Hodor)) ) / dog][0.53],betray(COLS))){
	y += betray(COLS)
} else {
	if(mislead(ROWS,-foo(dog),( ( y ) ))){
	if(( -0.73 / -0.25 )){
	if(( ROWS )){
	if(( --0.83 )){
	Jon /= dog;
	if(bar(-COLS)){
	if(70.7812){
	if(destroy(COLS,dog)){
	if(protect(-ROWS,foo(bar(-TABLE[protect(COLS,----( ( TABLE[dog][mislead(protect(y + ( foo(destroy()) )) - foo(),( -dog ),( -0.58 ))] ) ))][( destroy(Jon * -510.2 - -( ( Sansa ) )) )] * -0.99,bar(-20),( Jon )),TABLE[-61][32]),-70.44)){
	if(COLS){
	Jon += COLS + -protect(protect(rule(( ( COLS ) ),foo(( rule(betray(x)) )))));
	y -= -160.01
} else {
	dog += dog
};
	if(destroy(bar(TABLE[COLS][rule(x)] - TABLE[bar(0.46 / -0.34) * TABLE[COLS][x]][Hodor]))){
	if(-COLS){
	-470.4;
	rule(( ( -84 ) ),betray(( 1 ),( bar(mislead(0.48,-0.34 - ( TABLE[destroy(Jon,( ( --630.9191 ) )) * Sansa][mislead(( ( ( --1 ) ) ),-380.135)] ),Sansa),-protect(--45 + TABLE[-0.94][( -31 )] - rule())) ))) + rule(-1)
} else {
	if(-1){

};
	Ygritte /= -0.63
}
};
	COLS
} else {
	if(Jon){
	Jon /= y
}
};
	Jon += rule() + -TABLE[( 0.25 - TABLE[( ( Sansa ) )][TABLE[-dog - destroy(COLS)][( mislead(-70,rule(( Jon ) / 1,0.19)) )] * ( --480.9066 )] )][-0.85];
	if(-0.55){
	-ROWS;
	bar(COLS,1)
} else {
	Arya
}
} else {
	Hodor /= x;
	if(1){
	if(690.3){

} else {
	if(-( -1 ) + ( 0.78 )){
	Hodor /= --( foo(( ROWS ),-18) );
	Ygritte
};
	if(( destroy() ) - Arya){
	if(-430.3489){
	Hodor -= Stark;
	Hodor -= COLS;
	ROWS
};
	if(COLS){
	if(COLS){
	protect(protect(0.82,Arya,Arya) / -x,TABLE[-bar(-x,1)][Jon]);
	protect(--foo(-destroy(betray(-42 * ROWS * COLS / rule(y),Arya,COLS))) / Ygritte / 1 / rule(( 780.334 )) + -( 0.16 ) * rule(dog,ROWS,ROWS),mislead(foo(Arya,foo(-( TABLE[TABLE[( 93 )][dog]][( ( Arya ) )] * destroy(--33) )),dog * ( TABLE[mislead()][bar(ROWS)] ))),-ROWS)
}
} else {
	if(--0.15){
	Arya /= -0.99;
	Hodor -= COLS
};
	Arya *= 870.61
}
} else {
	y += -( ( TABLE[-y][Jon] ) );
	( ( bar(( -y ),dog - 76,( rule(73) )) ) );
	x += ( ROWS )
};
	-0.71
};
	Stark /= bar(y + TABLE[mislead(destroy(-1,-1,( -8 / --COLS )))][-ROWS - protect(ROWS,---1 + x) + protect(rule(COLS,830.719,TABLE[1][Ygritte]),( Arya ))] + betray(( ---0.13 ),x))
}
}
} else {
	betray(dog) + mislead(bar(ROWS));
	-TABLE[y - ( COLS )][( x )]
};
	if(COLS){

} else {
	if(COLS){
	dog -= 0.05;
	if(-Sansa){
	betray();
	Hodor += foo(rule())
} else {

}
} else {
	Arya *= destroy(( x ));
	if(Hodor){
	Hodor /= Arya
}
};
	ROWS;
	Arya -= ROWS
}
} else {

};
	ROWS
};
	protect(destroy(( ( -( -1 ) ) ) / x),-dog)
} else {

};
	ROWS;
	( Hodor )
}
};
	if(TABLE[ROWS][Arya] / ROWS){
	if(Sansa){

} else {
	Arya -= ( Jon ) - -( protect(-1) )
}
}
};
	if(( Hodor )){
	( Sansa )
}
} else {
	if(betray(x,COLS)){
	Jon -= -74
} else {

};
	if(-COLS / ( ---740.7 )){
	y *= TABLE[protect()][-TABLE[COLS][( ROWS )]];
	if(COLS){
	x -= Hodor
}
}
}
}
} else {
	COLS;
	y += -y * TABLE[-1][COLS];
	if(( -x )){
	if(11){
	y *= x
} else {
	if(-0.82 - -1){
	mislead(( 61 ),COLS,-( bar(( -destroy(mislead(--130.64),dog) / rule(510.2,ROWS,ROWS) ) + -y) ));
	-( Jon )
} else {

};
	Jon;
	if(TABLE[( TABLE[ROWS][ROWS] * -( -TABLE[destroy(ROWS,-59)][TABLE[1 - -( bar() )][-58 + Sansa] + Stark] - ( y ) ) )][-530.2109]){
	if(( 0.62 - mislead() - mislead(-COLS / ( 550.54 ),Jon - 0.61) + Jon )){
	y;
	0.6
} else {

}
} else {
	--betray(y);
	( ----1 )
}
}
} else {

}
};
	if(19){

} else {
	ROWS
}
}
};
	x /= ROWS;
	x /= TABLE[TABLE[-ROWS][Arya] * ( Arya / -94 )][Jon * 1 * ( ( TABLE[( Sansa )][y - TABLE[mislead(-1)][x]] ) )]
}
assert bar() : "One can not simply parse himself"
def bar(){
	Arya += ( ROWS - TABLE[destroy(-TABLE[Stark][y]) - Sansa + COLS][-48] );
	y += ( --0.26 );
	1
}
def mislead(Sansa){

}
var x = ( -Hodor )
var Jon = ROWS - 98
assert -Arya : "One can not simply parse himself"
def destroy(y,y,Ygritte){
	Ygritte += 1;
	bar()
}
def betray(Hodor){
	Ygritte *= protect(Sansa / y);
	x /= -22
}
def betray(y,y){
	if(( Arya )){
	Sansa;
	19
} else {
	if(-0.19){
	500.332
} else {

};
	if(( --0.2 )){
	Arya *= protect(Jon * mislead(protect(Ygritte,Sansa + protect(43,0.71 * destroy(-ROWS * -880.62,-COLS))) + Arya),COLS,( Hodor ))
}
};
	if(Sansa){
	( destroy() );
	x += Hodor;
	if(-100.707){
	y -= Sansa;
	Arya += -1;
	mislead(betray(),-0.92)
} else {
	-0.88 + 1
}
} else {
	Jon += -( 0.66 )
}
}
def TABLE[Sansa][j] {
	if(( ( y ) )){

}
}
def betray(Jon){
	Arya - y / Hodor;
	--59
}
var y = -0.82
def TABLE[COLS][k] {
	y += Arya;
	y -= mislead(TABLE[betray()][-1],51)
}
def protect(Jon,Arya){
	y *= foo()
}
var Jon = ( -TABLE[-Hodor * -foo(ROWS,TABLE[( -1 )][TABLE[-( ( -86 ) )][TABLE[Stark][( mislead(Hodor,foo(( bar(destroy(Arya)) )),betray(ROWS / ( 1 ))) - Sansa / TABLE[--TABLE[( -COLS )][( Hodor ) + -( COLS - betray(betray(0.98) - ROWS) + -TABLE[( 66 )][ROWS] ) + ( Ygritte )] + Arya / destroy(( rule(( bar() )) ),-9)][0.15] )]]],Stark)][betray(700.5)] * ( TABLE[foo(foo(--( Jon ) - ( bar(TABLE[-0.89 / Sansa][Sansa],dog,( TABLE[1][COLS] * -43 )) )))][98] ) )
def rule(x,Stark){
	Ygritte /= 58 / Stark
}
def TABLE[y][k] {
	dog += ( 46 )
}
assert Arya : "Fear cuts deeper than swords."
def TABLE[x + ( ( mislead(( -( rule(TABLE[ROWS][ROWS],( ROWS )) ) )) ) )][k] {
	Stark *= x
}
def TABLE[( Jon )][j] {
	Hodor += Arya;
	Hodor /= -0.34
}
def bar(Sansa,Arya){
	if(-( rule(( 0.9 / Sansa * protect(43 / x,1 * -x,bar(-foo(-50,foo(( protect() ),-Jon),TABLE[( 530.706 )][-0.22]) / mislead(61),( 100 ))) * -destroy() - ( Ygritte ) + --ROWS )) * ( -Hodor - ( betray() ) ) / -( 120.5 ) )){
	-69;
	if(-1){
	if(y){
	if(98){
	Arya -= x
} else {

}
} else {
	if(( 0.42 )){
	dog += protect(( -0.85 ));
	Hodor += -2
};
	Hodor *= y;
	protect(-rule(( Arya )))
}
}
} else {
	Sansa *= COLS;
	mislead(( ROWS ),rule(),-( -( rule(-rule(--Arya,-( -820.02 )),-COLS) ) * -0.53 ) + COLS)
};
	if(-COLS){
	Sansa += --Sansa;
	Jon
} else {
	Ygritte /= 1;
	TABLE[TABLE[-foo()][Arya]][bar(COLS,COLS,-COLS)]
}
}
def TABLE[--betray(rule(COLS,TABLE[-Sansa * ( COLS ) * destroy(Stark) + COLS * Sansa][COLS]),x) * 0.32 * Jon][j] {

}
def mislead(Ygritte,Sansa){
	if(COLS){
	if(-1){
	if(---0.44){
	Stark *= -x + ( ( TABLE[( ( ( 22 ) ) )][rule(dog)] ) - 0.72 ) - destroy(Arya / -COLS,COLS,--0.61);
	if(-COLS - rule(-ROWS,780,0.26 + ( -1 )) - ( -( ( ( betray(destroy(-Arya) - Sansa / x,-0.85,ROWS + ( Hodor )) ) ) ) )){

}
}
};
	dog *= -1
} else {
	if(COLS){
	protect();
	TABLE[Hodor][---ROWS];
	Jon -= ( betray(Jon / 0.16,betray(--Hodor + Jon,TABLE[--TABLE[COLS][Ygritte] + dog][( Ygritte / ( TABLE[1][630.1365] - -0.53 / foo(65,-Jon,( -50 )) ) )]),-280.1648 / -0.45) )
};
	Hodor -= -Ygritte;
	Jon -= -14
};
	TABLE[( -( Arya ) )][rule(-dog)]
}
def bar(Hodor,Arya){

}
var Sansa = x - bar() - -1 - -( mislead(-0.54,( -foo(Hodor + -280.4) - 0.52 - ROWS + ( -protect(-( ( 100 ) )) * 0.99 ) + ( ( -dog ) ) )) ) - -0.74
assert protect(COLS,5,Stark) : "What do we say to the Lord of Death?"
var Stark = -Sansa
def TABLE[bar(TABLE[betray(Ygritte,rule(COLS,-520.3,( ------40.3 + COLS + dog )),betray())][bar(TABLE[-( -0.11 - foo(-TABLE[COLS][x]) + -0.08 )][bar(24,( protect(protect()) / -( -1 ) * 90 ))] + -76)],Arya)][i] {
	if(protect(dog,11 + 0.98 * Jon,Hodor)){
	if(-0.63){

};
	betray(( COLS ) - destroy(-( -rule(-( Arya ) - 1,TABLE[0.94][TABLE[mislead(COLS - mislead(destroy(),Stark),( ( ( ( ( 0.56 ) ) ) ) ))][Ygritte / -1] - ( Jon + TABLE[1][70 / ROWS / Arya - ( 48 ) * TABLE[1][Stark] + Jon - ROWS / rule(Sansa,TABLE[1 * ROWS * -( foo(-0.13) )][( TABLE[ROWS][rule(-1)] )]) / 330.66] ) + -protect(ROWS)] - x - ROWS) ) + -TABLE[protect(--Sansa,betray(-99,-( ( Jon ) ) / Ygritte),640.1853)][-0.73],-( ROWS )),COLS)
};
	if(COLS){

} else {
	betray(Ygritte + COLS,--betray(( rule(Hodor) ),( foo(( 1 )) )),-dog)
}
}
def TABLE[COLS][i] {
	( -bar(--710.69,( betray(rule(--( COLS ),( 93 / ( foo(protect(( --Arya ),-540.9),---dog - -0.79) ) ),dog),-96) )) );
	Stark *= --ROWS;
	if(dog){

} else {
	if(-( Sansa ) + ( destroy(protect(1)) )){
	Arya -= ( ( 0.04 ) + destroy(1 + ROWS,COLS) )
} else {
	if(Arya - -COLS - ROWS - ( bar() )){
	Ygritte /= -y;
	Sansa += x / ( ( Ygritte + 700.61 ) );
	y *= ROWS
} else {
	protect()
};
	Sansa += --( TABLE[ROWS][rule(Jon) + 45] ) - ( -0.37 ) + TABLE[destroy()][TABLE[0.87][destroy(-Arya,Stark)]]
}
}
}
assert Stark : "Fear cuts deeper than swords."
def TABLE[Jon + TABLE[Jon][( -Hodor + -Jon / ( -( ---mislead(foo(970.03,( rule(bar(( -0.76 ),( 1 )),-0.21) ) * -( destroy() + 1 ))) * ( Arya ) ) ) )]][k] {
	mislead(33,protect(( 0.52 ),bar(mislead(dog,Stark),-0.27,Stark) / foo(1)),( ( ( Sansa ) ) ))
}
def TABLE[TABLE[y][Stark] * -TABLE[( protect() )][ROWS]][k] {
	( foo(protect(-0.25,( mislead(-0.23 * -1 - 0.31,destroy(( dog ))) )),mislead(( rule(( Jon ),Jon,x) * protect(ROWS) + 0.49 ),Arya),ROWS) );
	if(TABLE[90][Ygritte]){
	if(x){
	Jon /= TABLE[Stark][6];
	if(( protect() + -0.4 * ROWS * destroy(--protect(-43,Stark)) / ROWS )){
	ROWS
}
};
	-betray(Ygritte);
	Ygritte
} else {

};
	if(( TABLE[( -TABLE[protect(bar(-1,68))][TABLE[-51 / -y][Arya]] )][Sansa] * -930.57 / TABLE[0.74][ROWS] + ( -0.24 ) )){
	1;
	if(Jon){
	Sansa -= Ygritte
} else {

}
} else {
	if(450.38){
	if(protect(TABLE[dog][bar(( ( Sansa ) ),( TABLE[Jon][TABLE[0.66][-y]] ),-0.26)],Stark,ROWS)){
	dog *= Jon * -ROWS * foo(-98 / ROWS)
} else {

}
}
}
}
assert COLS : "Nothing burns like the cold."
def destroy(Arya){
	if(( ( Stark - 0.3 ) )){
	if(y){

} else {
	x *= TABLE[( Stark - ( dog ) )][protect(Arya + y,foo(bar(( COLS ),-0.18),( -bar(Ygritte) ),( ( -dog * TABLE[--dog][-1] ) ) - -dog))];
	if(( COLS )){

};
	y += betray(-bar(--COLS) * destroy(mislead(foo(-20.46,0) - -TABLE[( COLS )][COLS] + Arya * ROWS * Arya,-ROWS),( ( TABLE[-520.61][-1 - TABLE[dog][-( -( TABLE[( Jon )][bar(Arya,COLS)] ) )]] ) ),-91) + betray(-0.35,99) * ROWS,30.26,TABLE[rule(COLS)][-440.51])
}
} else {
	if(-( mislead(-betray(ROWS,TABLE[-Sansa][( --y )] - protect(ROWS,rule()),-mislead()),TABLE[bar(Stark)][Arya / -protect(-ROWS,ROWS,--protect(( -5 ),betray() + Hodor) - -1)]) ) - protect(( Hodor ))){
	Ygritte -= bar() * ( ( mislead() - ( ( ( foo(( --0.4 ),COLS,Stark) - protect(COLS,Ygritte) ) ) ) ) )
} else {
	-( ( -dog ) )
};
	foo(destroy(-rule() / ( ( -ROWS ) ) + ( betray(TABLE[0.92][-430.3]) ) - COLS,-COLS) * -74);
	-24
}
}
var dog = ( ( Jon ) )
var dog = Sansa
var Ygritte = Hodor - TABLE[destroy(TABLE[destroy() + COLS][Jon] + ( -1 ))][( COLS )] * Ygritte
def TABLE[protect(rule(mislead(---0.92 * COLS,dog / ( Hodor )),foo(),( Hodor )) * ( TABLE[( -COLS ) / -( -rule(-COLS,-1,betray(-23)) ) / Hodor * 0.96 * Hodor - ( --1 * -1 * ( ( TABLE[y][x - 480.375] ) ) )][Arya] * Ygritte ) + COLS)][i] {

}
def TABLE[rule()][j] {
	if(ROWS){

} else {
	Arya
}
}
def betray(Hodor){

}
var x = -protect(-mislead(( 0.87 )),protect(TABLE[COLS][( -TABLE[TABLE[41][-1]][foo(( -COLS )) - dog - ( -TABLE[-54][53] ) * foo(--mislead(TABLE[Jon][( ROWS )] * dog + ROWS),TABLE[Jon][-( -x - TABLE[ROWS][bar(( -85 ) - --0.23) * COLS] * ( COLS ) ) / destroy(COLS + COLS)])] )],-( -0.34 ) - 600.854),ROWS)
assert 36 / -( -0.9 + y ) + -0.65 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[--( 0.98 ) - COLS / y][j] {
	( Jon );
	x -= bar(dog,-92 + ( -Stark - TABLE[( y + TABLE[-( -COLS * TABLE[-0.42][TABLE[bar(0.08 / COLS - Jon)][-Ygritte]] )][-mislead(( COLS ),destroy())] )][-Jon] ),-( 350.83 ))
}
def betray(){
	dog /= 52
}
var Stark = rule()
assert -( ( ( mislead(( protect(-0.82,-47,-protect() / ( TABLE[-Sansa - destroy(TABLE[-880.828][betray()] - TABLE[-TABLE[TABLE[( dog )][0.73]][( -0.56 )] - protect(destroy(foo(TABLE[--COLS - COLS / Sansa * betray(-52)][protect(( ROWS ))] + -COLS,y),( ROWS ) * COLS - 890.37),ROWS)][TABLE[-( -76 )][foo(betray(( -bar() ),( x ))) / ( -Ygritte )]],69 / -Stark,-15)][340.2] - -destroy(COLS,-900.22) ) - ROWS) / TABLE[ROWS][( y )] ),Jon + -1,COLS) ) ) ) * -y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert 77 - ( --5 ) : "Winter is coming"
def mislead(Stark,dog){
	x -= TABLE[ROWS][-( -( --Ygritte - TABLE[Sansa / -0.05][COLS / Hodor] ) ) * 33];
	if(foo(bar(Jon - ( -Hodor ) - 90,Arya),Stark)){
	Stark /= protect(y,-64);
	1
}
}
def TABLE[( TABLE[Arya][rule(( ( ( ( TABLE[Arya][( rule(COLS) )] ) ) ) ),( -7 ))] ) / 72][i] {

}
def betray(Sansa){
	Jon += ---Ygritte * y / ( -( -betray(790.12) ) * Arya ) - Arya;
	if(420.7753){
	if(betray(ROWS)){
	Arya -= -COLS;
	Ygritte -= -0.15
} else {
	-( ( TABLE[0.73][( ( ROWS ) )] ) ) * -0.89;
	if(-TABLE[-1][( -TABLE[48][-270.191] - ( ( -330.8 ) ) )]){

} else {
	Arya;
	if(mislead()){
	y += COLS
};
	-mislead(destroy(ROWS),-1,( -COLS + -foo(-( ROWS ) / ( 72 ),y) ))
};
	if(foo(TABLE[0.32][Ygritte],( ( ( y ) ) ))){
	if(TABLE[( Arya )][Hodor]){
	Jon /= ( COLS );
	protect(TABLE[Stark][Jon - ( ( betray(-Arya,1) ) )]) * Jon
} else {
	Arya /= ( -0.95 )
};
	-40.13 - betray(( TABLE[-COLS - --240.732][670.419] )) - COLS * Sansa
}
};
	-0.81
};
	COLS
}
def bar(x,dog,Ygritte){

}
assert -250.84 : "What do we say to the Lord of Death?"
var Arya = TABLE[Sansa - destroy(--Ygritte)][TABLE[--ROWS][-98 - mislead(betray(destroy(( destroy(protect(y,bar(( y * COLS ),35 / -29 * Jon)) * ( destroy(( ( Ygritte ) ),( ( y ) ),( ( ( 0.69 ) ) )) ),( ( mislead() + 79 ) + 0.35 ),Sansa) - protect(Arya / TABLE[Stark][( --120.43 )],1) + Jon ),ROWS,-520.0648 - ( foo() )),-910.8,-0.95))]]
def TABLE[-0.3][j] {

}
def mislead(Hodor,Arya,y){
	Ygritte += x
}
assert --6 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = protect(protect(( y + Sansa )),-COLS * ( ( Arya ) ))
var Jon = Jon
assert ROWS : "One can not simply parse himself"
var Ygritte = ( -0.99 )
def TABLE[bar(ROWS,betray(--dog,-66))][k] {
	y;
	-0.55
}
var y = dog
def foo(){
	if(Stark){

} else {

};
	if(ROWS){
	Jon;
	Arya /= Sansa
} else {
	if(( foo() )){
	if(( -820.6733 + protect(-0.06,TABLE[0.35 * protect()][ROWS]) )){
	if(--protect(mislead(-COLS,( destroy() ),241),( Jon ) - betray(COLS,-TABLE[TABLE[-68][betray(destroy(),Arya,TABLE[-23][-protect(-77,-y)])]][bar(0.266)] * TABLE[-450.68][bar(( ( Stark ) ))],Stark),Arya)){
	350.35;
	Jon
} else {
	if(ROWS){

} else {
	if(86){
	if(Arya * --( bar(-( COLS )) * -0.28 )){
	if(( -0.95 )){

} else {
	Ygritte
};
	y -= y
};
	if(Sansa){
	if(foo(mislead(( COLS ),( 77 )))){
	if(-180.08){
	--0.63
}
}
} else {
	if(Arya){

} else {

};
	x
}
};
	-COLS
};
	Hodor *= 0.51 - -( foo(63,betray(( -700.35 / ( 100 * COLS ) ))) );
	if(-0.47){
	Ygritte += ROWS;
	Arya *= protect(foo(-0.48,Hodor,COLS));
	rule(---0.74 * ( ( foo(-70) ) ) + -1,x)
}
};
	-( Hodor )
};
	if(ROWS - ( dog * y )){
	ROWS;
	if(-810.27){
	Sansa += -16;
	-TABLE[0.02][( --destroy(ROWS) * mislead(bar(( Ygritte ) / Ygritte,--y + -Arya * destroy(-0.54,Ygritte,ROWS),COLS),Hodor - destroy()) - ( TABLE[Ygritte - x * --0.63 + ROWS][Sansa] ) )]
}
}
}
}
}
assert Jon : "One can not simply parse himself"
def TABLE[-( ( rule(ROWS,71) ) ) / -0.31][i] {
	Stark;
	if(-93){
	if(betray(rule(-0.9 * -1,0.32,destroy(66,( ( -( TABLE[COLS][( -1 )] ) ) ))) / COLS) - Hodor / 76){
	0.6;
	Hodor -= -betray()
} else {

};
	Sansa -= -0.33
};
	Sansa -= betray(bar(160.2,-0.49),-82)
}
assert x * mislead(Hodor,( ( ( destroy(TABLE[destroy(-470.311) - foo(( ROWS ),TABLE[TABLE[( 11 )][-protect(destroy(( rule(ROWS) ))) / rule(84,-COLS,( mislead(( dog )) ))]][( --( -17 ) )] + Sansa) - dog][foo(65,TABLE[--53][destroy(0.18 / COLS)])]) ) / ROWS + -( Hodor ) ) ),-Stark) : "Fear cuts deeper than swords."
def mislead(Jon){
	Jon -= x;
	61
}
assert TABLE[protect(TABLE[-85][( mislead(( -destroy(mislead(-500.479 - -TABLE[--150.55][( TABLE[( COLS )][-56] )] - x + 0.77),1,TABLE[COLS][( ( rule(95) ) )]) / -destroy(-( COLS ),rule(y,0.63),y) * COLS )) )])][--protect(rule(COLS,x * betray(rule(y,betray(destroy(-0.29,TABLE[-Jon][TABLE[( -56 )][-0.39]] + dog))) - ( 0.37 ),protect(COLS,( -bar() )),( ( Stark ) ))),0.13) - 820.722 + y - ROWS] : "What do we say to the Lord of Death?"
def foo(y,Arya){

}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = ( COLS )
def bar(Arya){
	-COLS - -x
}
def rule(Stark){
	Ygritte *= -y
}
var Arya = ( 0.46 )
def protect(y){
	x;
	if(betray(0.57,-TABLE[Hodor][betray(( --790.3 ),--1,Hodor)] / TABLE[Ygritte][Sansa])){

}
}
var Hodor = TABLE[1][( COLS )]
def mislead(Hodor,Hodor){
	if(Sansa * rule(940.92,mislead(destroy()))){
	if(-mislead(protect(( --1 ),ROWS - 50 / -ROWS * --1 / -( Jon ) / rule(( ROWS ))))){
	( -1 )
} else {
	x;
	Hodor += dog
}
} else {
	Ygritte *= -1 + ----0.2
};
	Arya *= Ygritte;
	if(Ygritte){
	Sansa /= ( 0 ) - 0.22 / Jon / ( mislead(-0.07,TABLE[rule(-460.25,COLS)][( rule() )]) );
	if(0.36){
	( COLS );
	if(Stark){
	bar(( -1 ),x,61);
	if(( 0.3 )){
	y -= foo();
	( Stark ) + ( -Arya )
} else {
	---Sansa
};
	Sansa += x
}
}
}
}
var x = -ROWS * foo(ROWS + ( ( --( ROWS ) ) ))
def TABLE[-0.54][i] {
	ROWS;
	Sansa *= 0.37 / Stark
}
def destroy(){

}
def protect(Stark){
	Stark *= --( COLS );
	( ( -0.18 ) )
}
var Sansa = -protect(mislead(( TABLE[bar(-57)][betray(---950.67 + ( TABLE[Arya][( mislead(betray(TABLE[mislead(-y,mislead(COLS) / 1,( destroy(( -mislead(rule(-0.15,Stark),COLS,-88) ),mislead(1 + -bar(Arya / --Ygritte,0.19,betray(-1)) - rule(y,-85) - Hodor,-0.9),Sansa) ) / -( -TABLE[TABLE[dog][( -6 )]][44] ) + COLS - 0.7)][ROWS],rule()),88) ) * TABLE[betray(--betray(( COLS ),COLS),( ( Jon ) / Sansa )) - Sansa][60.14 * 6 / ( ( ( ( Sansa * ROWS ) ) / -91 ) - Hodor )]] ) / ( TABLE[Hodor * dog * ROWS - Hodor][1] ) / Stark,x + -x * Stark - y - 88 - destroy(COLS,-COLS,-780.6 - betray(bar(),ROWS)) - TABLE[( ( -( --COLS / TABLE[-420.3934][-( Ygritte )] * foo() ) ) )][( -0.36 + ( -1 ) )])] ),-Hodor - foo(-0.27,( -1 ))))
def foo(y,Arya){

}
var x = ROWS
var y = ( Sansa )
def TABLE[-( dog )][j] {
	if(-( ( protect(Stark,betray(),--destroy() + ROWS) ) - --1 )){

} else {

}
}
assert ROWS + -44 : "Winter is coming"
def TABLE[-490.507][i] {
	( ( COLS ) );
	if(( 55 )){

};
	62
}
var Stark = betray(ROWS,-dog)
var Stark = TABLE[1 * ( TABLE[( 73 / TABLE[ROWS][1] )][Jon] )][y]
def bar(Jon,Sansa){
	dog += ( -( -0.39 ) )
}
def mislead(Sansa){
	if(( Hodor )){
	if(-ROWS){
	( -bar(-TABLE[Arya][-Hodor * 450.84]) - betray(destroy(( -COLS ),-( -0.56 - Jon ) + foo(-bar(foo(( -0.92 ),-38,TABLE[0.42][-160.9414])),650.95,-x))) );
	-( ROWS )
}
} else {
	x;
	-TABLE[-y][( 67 * foo(Sansa,-( -Sansa * -mislead(( --25 - -y / bar(Sansa,-0.53) + ( TABLE[x][1] ) ),75,-840.9667) ) - protect(TABLE[Ygritte + 52][betray(( -0.69 + -betray(COLS,0.38 + COLS * ( -( -80.2979 ) / destroy(COLS + Sansa) )) / ROWS ),( -3 * ROWS - -0.61 ))])) + destroy() )]
}
}
var Sansa = Jon
def TABLE[COLS][k] {
	-( -1 );
	Sansa -= Sansa
}
assert -COLS : "Winter is coming"
def TABLE[( x )][i] {

}
def foo(y){
	if(Sansa){
	Ygritte += 15 - destroy(foo(Jon,( Sansa )) * destroy() * ROWS + -0.55 - 27);
	if(( ROWS )){
	57;
	dog -= --490.253 - ( -Arya * dog )
};
	y -= -0.85
} else {
	if(-destroy(-0.8,ROWS)){
	if(TABLE[betray(COLS / ( -mislead(--COLS,TABLE[-y][-x]) ) * 510.56,Jon - -49) + ( dog )][-foo(Stark,Jon,dog) / 76]){
	-Stark / rule() * y;
	Hodor /= -1
} else {
	Stark += -( -10.2771 )
}
} else {
	if(-Hodor){
	-Arya;
	-TABLE[-( ( ( ROWS ) + -0.33 / TABLE[Arya][x] ) )][--ROWS]
};
	if(dog){

}
};
	x *= -( ( Arya ) )
};
	y /= -( TABLE[-( Stark * ( ROWS ) - COLS - betray(COLS - 0.87) + rule(( -220.79 ),1 * -y,rule()) + -mislead() - -1 / ( -1 ) )][1] )
}
var y = ( -1 )
def destroy(){

}
var Sansa = -ROWS
assert ROWS : "What do we say to the Lord of Death?"
def TABLE[37][i] {
	if(-740.6956){
	y *= -bar(Stark,( ( -0.37 ) ),--1);
	-ROWS
} else {
	COLS
};
	--( Arya ) / x;
	dog -= dog
}
assert 0.39 + betray(destroy(Arya,-ROWS),foo(bar(foo(-0.62,0.42,y))),betray(destroy(-rule(--50.124,---0.98,-( TABLE[betray(( ROWS ) * 19 - ( protect() ),protect(Ygritte,( ( Ygritte ) ) - --0.88))][rule(ROWS) / -Stark] ))))) : "Nothing burns like the cold."
def TABLE[Hodor][i] {
	ROWS
}
var Jon = -64
assert -52 : "What do we say to the Lord of Death?"
def mislead(x,Jon){
	-TABLE[TABLE[dog][Jon]][protect(( destroy(protect(0.13,-0.09),0.12,Arya) - COLS ))] / mislead(( 49 ) / -protect(-1))
}
def mislead(x,y){
	if(betray(Arya,ROWS,-0.26) / -69){
	if(Stark){
	if(y){

}
} else {
	( --1 - y );
	if(-Ygritte * ( -( ( ( 89 ) ) ) )){
	Jon /= 63
} else {
	-0.88
}
};
	if(rule(betray() - ( 370.92 )) / -( ( -0.01 - 39 ) )){
	670.57;
	bar()
}
} else {
	( -( ( -mislead(TABLE[foo(---mislead(Arya),( COLS ))][( protect() )],-0.08 + TABLE[-Jon][38],Ygritte) ) ) - Stark * 0.75 / ( bar(-x * -Ygritte,COLS) ) );
	if(y / 64){

}
};
	-ROWS;
	ROWS
}
def foo(Sansa){
	--( ( -bar(betray(( -1 ) * Stark)) ) ) + COLS * ( destroy(( -59 ) * ROWS,mislead(-1 * -59 + destroy(mislead(Arya,-0.08),( ( ( Sansa ) ) )) + 960.86)) );
	Hodor *= y - -TABLE[Arya][rule(destroy(-0.5 + betray() * ( -70.4 )))] * dog;
	Arya *= Sansa / -1
}
def rule(y){
	if(950.422){
	Stark -= ( betray() );
	Ygritte += Ygritte
} else {
	Stark -= dog;
	if(COLS){
	x;
	Hodor += ( TABLE[0.66 - Hodor][( Arya )] - ROWS )
}
};
	if(mislead(protect(( -17 ),-ROWS * ( rule() ),Sansa) - -89 / TABLE[( rule(rule(Stark,( mislead() ) * Sansa * ( -1 ),Stark)) )][-1 / ( TABLE[dog][Ygritte] )],-1)){
	if(rule(-59,x)){
	Arya -= betray(foo(( -TABLE[( ( 0.78 ) )][-0.64] / foo() - ( -y ) ),-ROWS + --ROWS),--1 / TABLE[-ROWS / bar(Hodor * ( Hodor ),TABLE[-Ygritte][( -( -ROWS ) ) * foo(Hodor)]) + -1 - -Ygritte][Hodor] / bar(-dog + destroy(( -x ) * protect(COLS) + -betray() + Jon),TABLE[( rule(betray(),COLS) )][TABLE[-ROWS - ( ( 0.82 / -30 ) )][COLS]] / betray() - 0.22) / ( TABLE[Sansa][Ygritte] ) - -Arya,-( COLS ));
	if(Jon / x){
	y /= -Ygritte
} else {
	Arya;
	rule(59,( -Jon * protect(( y ),-TABLE[-Ygritte][protect(x,ROWS,74 * -TABLE[--dog][-1 + x])],ROWS / dog) ));
	if(1 / Hodor){
	28
} else {
	Jon += x;
	if(( 480.3 )){
	if(( 100 )){
	--bar();
	if(-75){
	( Ygritte / Arya );
	if(( ( -TABLE[Arya][COLS + -COLS] ) )){
	if(-COLS){

}
} else {
	if(x){
	if(59){
	if(770.847){

} else {

}
};
	if(--bar(( ( -0.89 ) ),-COLS) - -foo(-( -Ygritte / -0.12 ),Ygritte)){
	Arya *= Sansa;
	Ygritte /= ROWS
} else {
	if(rule(-( Hodor ) / COLS,( -rule(TABLE[--12][-( ( COLS ) / -( ( Hodor ) ) )],1,rule()) / 78 )) - -1 - -90){
	( foo(TABLE[Stark + Hodor][Sansa],destroy(( COLS )) + ( ( ( TABLE[( protect(--Stark,COLS) )][( protect(COLS,Arya) )] ) ) ),rule(Hodor,dog - Ygritte / Arya)) );
	-1
}
}
} else {
	Sansa += foo(betray()) + rule(-37,Jon,COLS) + -0.11;
	if(--COLS){
	if(ROWS){
	--rule(( y ),-47 * Hodor);
	Jon -= ROWS
} else {

};
	Arya *= --0.81 * ( COLS );
	( ( ( COLS ) ) / Arya )
}
};
	Hodor /= -58
}
} else {
	0.32;
	if(-betray(0.93 * -TABLE[( -( ROWS + dog ) + Hodor )][protect(( -betray(-( ( ( -25 ) ) ) + TABLE[mislead(TABLE[-67][Hodor / ( mislead(-( -ROWS )) - destroy(-TABLE[bar(-( protect(--y) ) + 0.95 / ROWS * COLS / TABLE[-0.09 * y][destroy(Arya + COLS,betray(-64))],45)][-betray(( 62 - dog ))] * Sansa,Hodor,-COLS) ) + x / -destroy(Hodor + 550.47)],( -( -Jon ) ))][( 880.559 )]) / -1 ))],protect(y,ROWS),-( betray(ROWS) ))){
	TABLE[ROWS][-protect(Hodor) * -10 / ( -23 )]
}
}
} else {
	if(COLS + ( TABLE[TABLE[dog][Ygritte]][destroy()] )){
	Sansa += TABLE[-420.52 / -dog * --1 / COLS / Sansa][x] + ROWS;
	Ygritte /= --bar();
	-rule(980.6 / y,bar(foo(( bar(x) * --0.24 )),57) + TABLE[--10.531][bar(rule(( ROWS )))])
} else {
	( -y );
	Arya
};
	( --120 / protect(x,betray(TABLE[COLS][( 0.55 )] / ( ( 59 ) ))) );
	if(Hodor){
	53
} else {
	Arya += betray(rule(),-dog + ( Hodor ));
	-4 - COLS - mislead(ROWS)
}
};
	if(( -COLS )){
	if(( bar(TABLE[-1][--71],--97 - rule(-destroy(COLS))) )){
	3 / ( Ygritte ) / -destroy(-Jon * rule(( bar(-1,Stark) )));
	46
} else {

};
	-1;
	if(( rule(Sansa * Jon * ( COLS + destroy(x,Ygritte) ) + ( -( ( 0.33 ) * --Hodor ) )) - TABLE[-1][TABLE[( 840.3 )][bar()]] * Sansa )){
	( ( dog ) + -( ( y ) ) ) / foo() + COLS * ( ( --TABLE[( COLS ) / betray(Stark) * ( -Jon - ( Jon ) ) - protect(TABLE[destroy(( Hodor ),TABLE[( -foo(Ygritte,COLS) )][68])][-( bar(mislead(ROWS / 1,ROWS,-COLS + mislead(COLS,( -( ROWS ) - Ygritte )) * 0.68 + y),-( -76 )) ) - -Ygritte] / ( betray(0.59,mislead(Arya),-13) ),destroy(( -0.38 ),bar(foo(-1,-57),-( ( -Ygritte ) ) / y,ROWS) * -rule(x,( -y )),COLS),x)][0.87] ) ) - betray(y,( 0.02 ) + y - -y)
} else {
	if(730.683){
	Arya *= -0.45 + 1
} else {
	if(x){

}
};
	if(Arya){
	Ygritte += betray(TABLE[COLS][( --98 )] - rule(ROWS,Ygritte + ROWS,ROWS) + protect())
};
	if(destroy(COLS,--TABLE[protect(( 0.01 ))][----1],-COLS)){
	Sansa += ( foo(-TABLE[-1 / ( destroy(Stark,Arya,( ( ( -980.2888 - -Jon + 63 ) ) + ( ( -70.018 ) ) )) )][-0.6],ROWS) )
}
}
}
} else {

};
	Jon *= Jon
}
};
	( -COLS )
};
	-2
} else {
	x += -25
};
	( dog )
}
assert ( ( TABLE[ROWS][-( Ygritte )] + -rule(-rule(-( 20.767 ),-1),0.96) ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Stark][k] {
	if(COLS){
	if(Arya - -0.01 / -64 - 590.07){
	y += Hodor
};
	y += -Ygritte / 0.92;
	rule(-COLS - Arya,dog)
} else {
	Sansa += COLS;
	Arya *= y
}
}
assert TABLE[-0.06][-880.234] : "One can not simply parse himself"
var Jon = -( -0.89 ) - ---( -COLS ) + -1
def foo(Sansa){
	-480.68 / --dog;
	( Jon + foo(x,--TABLE[( ( -( TABLE[dog][( protect() + 51 )] ) ) ) - betray(COLS)][y] * -0.65) - -57 )
}
def betray(){

}
var Sansa = -( 120.56 )
assert -( destroy(-( y ) + bar(--1,--59 / -64 + destroy() - betray(( COLS ),ROWS) / TABLE[-1][Stark] / TABLE[mislead(mislead(y,betray(TABLE[-TABLE[--( betray(( dog ),Sansa) )][COLS]][0.38],( ( COLS ) )),( Sansa / betray(-( -50 )) )),ROWS)][COLS])) ) / -0.74 * ROWS : "One can not simply parse himself"
def rule(Hodor,Jon){
	Sansa /= rule(rule(Sansa),rule(mislead(),Arya,-ROWS) * Hodor / rule(),-0.89);
	Sansa *= 47
}
var Ygritte = -( Hodor + foo(Sansa,x - TABLE[mislead(rule(1,270.5303) + ROWS,mislead(ROWS),1)][Jon]) + COLS )
def bar(Hodor){

}
def foo(Ygritte,Jon){
	-destroy(COLS)
}
var Arya = ( -( ( ( -0.27 / TABLE[( dog )][-Hodor] ) ) ) )
var y = ( 0.97 ) + ( Sansa )
var x = -dog
def destroy(Sansa,Ygritte){
	if(-( x )){
	bar(Stark);
	Ygritte -= -TABLE[Stark][betray()]
};
	x -= -54
}
var Arya = ROWS
assert -17 + bar(-( TABLE[TABLE[Stark][Jon]][0.49 + ( ( ( destroy(TABLE[y][( Arya + Hodor )],-5) ) ) + COLS ) / mislead(( ( -69 ) )) / dog - ( -x - -0.1 / ( destroy(-0.88,( Stark ),COLS / ( Ygritte )) ) )] + x + 0.58 ) / 970.808 / Arya,Ygritte) / Jon : "Nothing burns like the cold."
def TABLE[ROWS][j] {
	Hodor *= ( -rule(-ROWS,7) )
}
def rule(Ygritte){
	if(mislead(-destroy(),Jon,rule(bar(TABLE[--1 + protect()][-0.16] * Hodor) + -( -34 ) * x / rule(Jon) - dog + -TABLE[--0.75 - ( ( ( foo(0.15) ) ) * -Stark )][Sansa],-0.62) - -0.67 * foo(Sansa,-TABLE[y - -TABLE[( TABLE[( x )][-0.42] )][( 5 )] / 1][Jon - destroy()]))){
	dog += -54
};
	Ygritte *= COLS
}
def bar(dog,Stark,Stark){
	Jon /= -920.36 - Stark;
	Sansa += COLS;
	Stark /= COLS
}
def destroy(Arya){
	Stark /= -69;
	if(foo(-0.09,-500.189,( -ROWS + Ygritte )) + COLS){
	-bar(COLS,ROWS)
} else {
	Arya /= COLS
};
	y *= rule(Hodor) + ( dog - 0.66 - Sansa * Arya / rule(foo(( y )),-0.74 + ( bar() * TABLE[foo(rule(COLS,( bar(-Hodor,COLS) )),1)][--rule(bar(( -1 * -protect() ),( -x )),( Sansa + x + -ROWS ),mislead(13,foo(protect(( Stark ),( Stark ),-COLS))))] )) )
}
def betray(){
	490.009 / foo(TABLE[ROWS][Arya] * Jon,-( ( 1 ) )) + x * COLS
}
def TABLE[-x][k] {
	if(Hodor / -ROWS){
	TABLE[protect(( destroy(-foo(Ygritte) / -( -COLS ) + -foo(COLS * TABLE[ROWS][--5] + 0.89,Sansa * 17 * -dog),x) ))][bar(COLS)];
	-95;
	Sansa += --TABLE[( protect() )][--rule()] * Arya / Arya * ROWS - protect(-1 + ROWS,-95,0.65) * 0.8 / mislead(bar(),destroy(Hodor / Sansa,( ( ROWS ) ) * -Hodor))
} else {
	if(( destroy(protect(85,COLS - bar(mislead(),Jon,betray(( Hodor ))) - TABLE[( Sansa )][Jon])) )){
	if(COLS * TABLE[( -15 ) + ROWS][Arya] * mislead() / dog - Hodor / -1 / ( COLS ) + TABLE[( 68 )][Arya / ( betray(y) )]){
	Jon *= ( destroy(-TABLE[foo(y)][bar()]) )
} else {
	dog *= foo(-63 + ( -TABLE[( 1 )][( -0.13 )] ),-35)
};
	if(-Ygritte){
	TABLE[-1 - 12][y];
	dog /= Sansa
}
};
	if(dog){
	-TABLE[( ( --Hodor ) ) * COLS - betray(Stark) * -ROWS][-65] + -1;
	if(( protect(foo(-Jon),( Stark )) + mislead(-betray(COLS,--protect(( Stark ),Stark / mislead(Jon)))) )){
	Jon /= Ygritte;
	COLS
};
	dog -= ( dog )
} else {
	if(COLS * --51){
	Hodor *= -27;
	if(Stark){
	if(-x){

}
}
};
	if(( ( -52 / ( ( 1 ) ) ) )){
	( ROWS ) * ROWS
} else {
	ROWS
};
	x *= ( ( ( --foo(betray(( betray(protect(COLS / y,protect(( COLS )) / -x) * -Ygritte,TABLE[protect(ROWS,--foo(),Arya)][COLS * -47 * TABLE[x][-0.14 - ( protect(-COLS) )]]) ) / rule(),protect(y,Ygritte * -1),53 * -53 * betray())) ) * -( bar(ROWS / -( ( COLS ) ),0.37) ) ) )
}
};
	if(( TABLE[protect(( -12 ) * rule(TABLE[( dog )][mislead(x,( ( -55 ) ))],( Stark ),rule(mislead(-520.18,-COLS * -dog + -ROWS),Jon,-1)),-0.25 - 1)][TABLE[-Ygritte / ( COLS )][0.84] - COLS * 30.7] * Arya )){

} else {
	Jon -= TABLE[betray(protect(COLS * -790.55 / protect(Ygritte,mislead(x - -COLS) - dog)))][-protect(--20,COLS)]
};
	--0.52
}
def TABLE[( TABLE[foo(( Sansa - ( ---protect(y) + 550.74 ) - -23 * y ),bar(-x))][0.6 / COLS / -97 / betray(-Jon,-protect())] )][j] {
	dog *= -490.83
}
def TABLE[-53][k] {
	x -= 25;
	Stark
}
def protect(Sansa){
	Sansa *= ( -810.4 );
	-0.54
}
def TABLE[TABLE[foo(( -destroy(--40,33,dog) ),TABLE[Sansa][( betray() )],-0.6)][x]][j] {

}
var Jon = -320.363
def TABLE[-10.912 + -0.79][k] {

}
def bar(Sansa){
	if(foo() + mislead(Ygritte,ROWS / COLS)){
	Stark -= dog
}
}
def betray(){
	x /= destroy(-4)
}
var Stark = -( -ROWS )
def TABLE[( ( TABLE[destroy(( -dog ),mislead())][bar(TABLE[ROWS][protect(-( Jon ) * mislead(0.05,( --96 )) / -mislead(--ROWS,-0.56) / TABLE[Sansa][-790.034 * Arya] + x,ROWS)])] ) )][j] {

}
assert Sansa : "Nothing burns like the cold."
def TABLE[-19][i] {
	-( betray(COLS * Stark,x + -0.31 - ( destroy() )) );
	dog -= mislead(Hodor,-Stark);
	( -x )
}
var Stark = -TABLE[TABLE[y][foo(foo())]][190.7] + -( bar(-( --bar(( -foo(-0.72,-0.22 - x / ( ROWS )) ),800.268) - -( -rule(ROWS,Ygritte + x) ) - TABLE[-270.1766][( bar(( ROWS ),y + Ygritte) )] ),-36 * -640.64 - ( ( TABLE[--0.77 * -ROWS][( bar(foo(Ygritte,-58),TABLE[COLS][ROWS * betray(COLS,ROWS,Hodor) - ( -x ) + Arya]) ) / -bar(0.32 * ROWS,COLS) - TABLE[TABLE[ROWS][( -0.02 )]][-destroy(ROWS * ROWS) * ROWS] * bar()] ) * foo(foo(Hodor)) - 0.9 )) )
def TABLE[-dog][k] {
	Sansa -= TABLE[( COLS ) + -34 + betray(-37,-Ygritte)][Ygritte];
	if(-betray()){
	if(Arya){

};
	if(COLS){

} else {
	x -= -( TABLE[Arya][( --20 )] );
	dog;
	Sansa / protect(ROWS) * bar(120.8)
};
	Stark -= betray(rule(( -COLS ),-COLS),-( TABLE[-55][-( -1 )] * mislead(ROWS,ROWS,( ( mislead(betray(dog)) ) + ( ( -0.54 ) / -5 ) / ROWS )) ),y) + mislead() * -betray(( rule(TABLE[0.76][TABLE[COLS][-0.28] - -700.44],-ROWS,-ROWS) ),bar())
}
}
def rule(Jon,Sansa,x){
	x *= -TABLE[TABLE[-( Sansa )][dog]][Sansa]
}
def TABLE[-1][k] {
	-Jon * ( Ygritte )
}
def TABLE[foo(y,Hodor)][j] {

}
assert mislead() : "One can not simply parse himself"
def protect(){
	if(y){
	destroy(( 1 ));
	Hodor += -1
} else {
	2;
	if(x * x + ( protect() )){
	TABLE[Stark][bar(mislead(Arya,x) * Jon)]
} else {
	y -= -mislead(( ( -61 ) ),TABLE[y][( -( -1 ) )],COLS) * -ROWS + ROWS + -0.32 + destroy(--16 + -( foo(bar(( 0.29 ),mislead(19,0.17,0.63 - -24 - y),COLS),dog) ),-TABLE[protect(Jon) * ( ( -mislead(COLS,betray(--10)) * ROWS + ( dog ) ) )][ROWS / Sansa] + -TABLE[-( -1 * Hodor )][protect(COLS,-Hodor,TABLE[Stark][destroy()])] / -120.46 + mislead() - x / 58 / 1 + ( ( ( -0.41 ) ) ) * 15);
	if(-17){
	if(Hodor){
	if(Stark * --ROWS + ( ( Jon ) )){

} else {
	if(--740.9){
	Stark /= -0.97
};
	Hodor
}
} else {
	if(-29){
	dog -= betray(destroy(( y ),protect(( Ygritte ),Stark / --( ( -ROWS ) ) + 62,ROWS)),--0.61 / -87);
	if(TABLE[--Stark - COLS][0.78]){
	-0.6
};
	--10.094
} else {
	destroy(78 * ( -( Stark + 0.01 ) ));
	if(protect(Jon)){
	if(bar(----1)){
	dog;
	Stark *= y + Hodor
};
	if(mislead(( -0.95 + -99 * y ) + -0.57 - Ygritte,-ROWS) - ROWS){
	-Jon;
	ROWS
} else {
	if(Stark){
	betray(Stark,rule(Arya),--Sansa);
	if(rule() / foo(dog,-TABLE[( ( ( ( 60 ) ) ) ) + 7][foo() / x] / 470.5767)){
	Hodor *= Sansa / dog;
	-betray(-foo(16,Hodor + bar(0.28,Jon,foo(71 - 11 * 55,-rule(-0.07 - destroy(-( y ),( ROWS )) + -mislead(-22,--93 + bar() * -1),Hodor))) * y * rule(--dog)),COLS)
} else {
	if(( rule(foo(-y,-mislead(( -( -650.1 * destroy(destroy(Jon)) ) * 1 )),1),Arya) )){
	x /= COLS
};
	if(Hodor){
	TABLE[( COLS )][---2 - ( -1 )];
	y *= TABLE[1][--810.9926 / ( 0.31 )];
	( ( ROWS ) )
} else {
	if(( protect(destroy(( COLS ))) )){

} else {

};
	if(--foo(COLS,COLS) / foo(Ygritte,ROWS)){
	dog + ( --Sansa );
	if(Arya){
	( foo(( ---( -y ) ),1) )
};
	Stark *= 1 + -( ( Arya ) ) * Jon
} else {
	if(( ( -0.56 ) ) - ( COLS )){
	Ygritte /= -Sansa
};
	( Stark - -470 * Arya * dog );
	-mislead(-540.8612) * -TABLE[( 640.6 )][foo()]
}
}
};
	rule(-0.69 / COLS)
};
	if(foo(-0.18,betray())){
	( 93 ) + ( COLS ) / Arya;
	if(-destroy(25,protect(dog,-ROWS / -42 / x,bar(( ROWS / ( ( foo(-ROWS + foo(foo(rule(dog,95))) * --490.51) - -68 ) ) - 63 ),COLS))) / TABLE[0.51][rule()]){

}
}
}
};
	if(TABLE[TABLE[ROWS][-( x )]][COLS]){
	if(dog){
	Ygritte *= ( ( TABLE[y + COLS][( ( 33 ) )] / ( ( betray(( 240.77 )) ) ) ) );
	Arya -= foo(TABLE[foo()][( ( betray() ) )]);
	Jon
};
	if(bar()){
	if(dog){

}
}
} else {
	if(-13){
	Hodor;
	--Jon
} else {
	if(( Sansa )){
	if(rule(( Arya ) / ( -67 ))){

} else {

}
}
};
	if(-46){
	0.34;
	mislead(0.74)
} else {
	if(( Jon )){
	if(-mislead(Ygritte,betray(TABLE[( rule(TABLE[Ygritte + 0.88][betray(-Jon,betray(COLS,--0.73),( x ))],rule(rule(y,COLS))) )][y],--ROWS))){

};
	x -= ROWS;
	dog -= 17
};
	dog += -79
};
	rule(Ygritte,-TABLE[bar(( -29 * destroy(-0.54) ) - -0.24)][( -betray(-470.29) ) * -0.27])
}
};
	Hodor
};
	if(y){
	dog -= -bar(TABLE[( ( ( ROWS ) ) )][( -1 ) + foo(COLS,-protect(COLS,ROWS,-( ( ROWS ) ) - ( dog )))],( betray(foo() / bar(( destroy(COLS + -1) ),Hodor)) ),mislead(-foo(foo(ROWS,( foo(foo(( ( dog ) ),-30.1,TABLE[-0.84][betray(ROWS - -670.95,Hodor)]),COLS,TABLE[x][( -0.28 / -foo() * ROWS - mislead() ) - rule()]) ),0.07),Ygritte,TABLE[( -21 )][Sansa]),x,destroy(protect(Hodor,-0.26))));
	if(destroy(--0.07 + -( COLS ),COLS)){
	if(( ROWS )){
	( Sansa )
} else {
	Arya -= 0.88
};
	Sansa /= ROWS
} else {
	if(Jon){

} else {
	if(--0.17 * -17){
	if(--500.981 / -( bar(-betray(( betray(ROWS,-1) ))) )){
	Arya *= -33;
	if(dog){

} else {
	Arya *= ROWS * -0.11
};
	( -foo(COLS,bar(-1)) )
} else {
	-Jon;
	if(x){
	( ( 0.97 ) );
	if(-0.13){
	mislead();
	if(( betray(Hodor,Sansa + ( 1 * protect(-0.95 / -0.39 / mislead(bar(( Sansa )),x) / ( ROWS )) - Sansa ) + 1 * Hodor * ( x )) )){
	if(( ( Hodor - y ) )){
	Stark *= -99
} else {
	Hodor -= x;
	Arya /= -ROWS - rule();
	Hodor *= -0.46
}
} else {
	if(ROWS){
	Jon /= foo(ROWS,COLS);
	if(COLS){
	Arya += dog;
	Stark
}
} else {
	COLS
}
}
};
	Stark *= Sansa
}
}
} else {
	if(Ygritte){
	-( ( -( -81 ) ) )
}
}
};
	-TABLE[TABLE[ROWS][( ROWS * y + 1 - -84 + -0.31 - -90 )]][mislead(y) + --1]
};
	bar(TABLE[COLS][y])
} else {
	-71;
	if(( -340.246 )){
	if(x - Jon){
	Arya *= 0.19;
	if(TABLE[y][x]){
	Jon;
	1;
	Ygritte /= -Ygritte
}
};
	if(Hodor){
	Sansa * ROWS;
	Ygritte
}
} else {
	if(betray(( --ROWS + Arya / 0.62 )) + ( TABLE[-73][-0.07] )){
	( --TABLE[ROWS][-( betray() )] ) * bar();
	TABLE[ROWS][y];
	Jon *= rule(-Ygritte,-50)
};
	Jon *= TABLE[-1][protect(ROWS,-foo(),-34)];
	Hodor *= ( COLS )
};
	dog *= -91
}
}
};
	if(32){

}
};
	y *= ( ROWS )
}
assert TABLE[580.5936 + ROWS][rule(mislead(y,betray(bar(rule(-TABLE[-bar(protect(COLS,COLS))][destroy(( ( -TABLE[-77 - dog][destroy(TABLE[23][Ygritte])] ) )) * ( -67 )],-Jon),rule(protect(x + rule(-( COLS ) - COLS,betray(-( ROWS ) / ( Jon - -( dog ) / COLS )))),---0.35),COLS)),ROWS * Arya),Stark,foo(---( ( -ROWS ) ) / mislead() - -29,protect(-( ( COLS * 52 ) )),ROWS * 440.1516))] : "What do we say to the Lord of Death?"
var y = ( ( x ) )
def TABLE[rule(protect(bar(),0.37),--1,540.76)][k] {

}
def bar(Sansa){
	if(ROWS){
	Hodor -= -y * ( ( ROWS ) )
}
}
var x = Jon / ROWS
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(Jon,y){
	if(0.07){
	if(40){
	( -890.06 );
	if(Ygritte){
	Arya /= ( ( TABLE[TABLE[y][-53]][-83] ) * 1 ) / Ygritte;
	Sansa /= y
} else {
	dog *= COLS;
	if(-0.32){

} else {
	x /= Arya;
	5
}
}
} else {
	if(( Ygritte )){
	TABLE[( ROWS )][ROWS];
	Jon
}
};
	if(COLS){
	Hodor *= destroy(TABLE[Hodor][-( TABLE[( -betray(TABLE[( ( 0.02 ) )][foo(Arya,( ROWS ))],( 570.1622 )) / destroy(1,--0.73,5 - Sansa) * -( ( ( COLS ) ) ) / dog + ( -760.7604 / -COLS ) )][--x] )]);
	dog -= ( ( ( COLS ) ) * --Jon * ( ( ( y ) ) ) + Ygritte )
} else {

}
} else {

};
	Jon += -35
}
def protect(){
	Stark += bar(( Arya ),-( ( -73 ) / 800.18 + Ygritte * Arya ) / -y,rule(y,-1 + --0.32) * COLS + -y);
	Sansa /= -0.04
}
assert rule(bar(-ROWS)) : "What do we say to the Lord of Death?"
assert TABLE[Ygritte][800.184] : "Nothing burns like the cold."
assert destroy(COLS,--52) : "Fear cuts deeper than swords."
def foo(Jon,Stark){
	---COLS;
	-protect(Arya)
}
assert 98 : "One can not simply parse himself"
def destroy(Hodor){
	if(--1){
	( bar() - TABLE[dog * ( -40 - dog ) / foo()][-bar()] );
	if(( 1 ) / ( -Jon ) / COLS){
	if(COLS){
	y -= ( --x );
	-8;
	if(TABLE[destroy(Hodor)][protect(rule(( -Hodor ) * bar(-40,-( ( Stark * ( -1 ) ) * -y ))),-betray(-bar(Jon,rule(TABLE[Jon / -0.64][TABLE[y][67]])),-protect()),betray(protect(( -0.5 ),protect(( TABLE[Jon][-rule(TABLE[Arya - --TABLE[protect(( ( -80 ) ) - Ygritte + dog,y,( -( -Ygritte - rule(TABLE[y][( 1 )] + Stark,-1) - -protect() - rule(( -rule() ) * foo(-( x ),( ( Arya ) + dog )) / ( COLS ) * ( x ),( Ygritte )) / ( rule(-( COLS )) + COLS ) ) ))][-0.89] + -Jon][0.63 - betray(bar(-Arya),-COLS / ( ( -mislead() - ( ( ( y ) * -( ( 0.12 - Ygritte ) ) / dog * TABLE[-57 - TABLE[x][83]][TABLE[( bar() )][protect()]] ) ) ) ) + betray(680.437,destroy(34),( ( ( ( --TABLE[0.02][0.36 * -bar(foo(59) * ( ( dog ) )) + TABLE[( 81 )][Stark]] ) ) ) + -ROWS )))],foo() / --( ( TABLE[-930.994][dog] ) ))] * --( betray(foo() - ( COLS ),0.95,-0.24 / ROWS * protect(( Jon ),rule())) ) + ROWS ) + --Arya * --87)),TABLE[( foo(( 1 )) )][COLS],Ygritte))] - -Stark){
	if(betray()){
	y -= bar(-( --rule(mislead(-990.2,Stark - -ROWS + ROWS,dog),betray(0.49,ROWS)) ) - -( Hodor ),COLS)
} else {
	y *= TABLE[-COLS - -1][( ROWS )]
};
	Stark /= x
}
} else {
	-110.29
};
	( ( -86 ) - ( ROWS ) ) * bar(foo(0.22,TABLE[0.8 / Stark][Hodor + ( 55 )]) / bar(y,Hodor * -90.5639),Stark)
}
};
	if(-65){
	Arya *= Jon;
	if(betray(x - ( bar(( rule(( protect() ) * ( betray(COLS) )) ) * -0.05 * Arya + -24) ),Arya,-16 + ( Arya ) + ( ( mislead(-rule(0.99)) ) ) * Jon)){
	Ygritte -= -Stark
};
	if(y){
	if(56){
	dog /= 72
} else {
	if(--TABLE[-( -bar(Arya,--0.82,destroy(rule(),-97 + -( destroy(mislead(-mislead(-betray(),-0.76) - Stark - ( ( bar(-0.11,ROWS,-70.981) ) )) / bar(destroy(),ROWS,670.744)) ))) ) - -( Arya ) * ( ROWS )][COLS]){
	( ( -( Hodor ) ) / Hodor - -0.88 );
	if(bar(-( -rule(( destroy(foo(betray(8,-y / ( ( COLS ) ) + -82),( ROWS - -destroy(-( ( mislead(Arya) ) ) - y,betray(Arya,Ygritte),x) )),600.342) ),-1,-Ygritte - COLS / Arya / Ygritte * 92 - ( 56 ) / protect(Jon,bar(1 / ROWS - bar(x,-0.74,protect(-93)),Arya)) / ( x + ROWS / mislead(--6,( -Arya )) ) - COLS + -TABLE[ROWS][rule(-dog) * -( bar(( rule(ROWS,destroy(-COLS / Stark * foo(Jon - x),-0.66)) ) / 1,-0.98,dog) - y / -( -0 + -( TABLE[-( -( ( rule(( 1 ),( --23 )) ) ) )][( -17 )] ) / dog * ( betray(( Stark ),COLS) ) ) ) + -( COLS )] - COLS) - protect() ),COLS / --28)){
	TABLE[bar(destroy()) * ( TABLE[( 93 )][-betray(( COLS ),-1) - 1 - Hodor] )][TABLE[COLS][TABLE[-( foo(rule(-COLS,foo(Hodor)),-x) )][bar(-53)]]]
} else {
	Sansa -= 56;
	Jon -= -dog
}
};
	( Arya )
}
} else {
	if(-1 - -rule(dog,1)){
	dog *= COLS / -1;
	if(Jon){
	Ygritte -= -foo(protect(mislead(---460.84 / 550.976)))
} else {
	-51
}
}
}
} else {
	-Jon;
	Hodor -= COLS;
	rule(1,( -48 ) * TABLE[( betray(-770.31) )][rule() + foo(Ygritte,TABLE[Jon][mislead(-0.44)],bar(-betray(280.348,x),Stark,( Hodor ))) * TABLE[( -( ROWS ) )][-( COLS + -( ( ( ( ROWS + ( -protect() - Stark ) ) + ( -Ygritte ) ) ) ) / TABLE[3][TABLE[( ( -Jon + destroy(destroy(( ( ( Hodor ) ) ),Sansa),Sansa) ) )][--0.46]] )]])
};
	if(-0.93){
	if(( -Jon + betray() )){
	-( rule(y,Hodor * COLS * betray()) )
} else {

};
	if(Ygritte){
	TABLE[betray(betray(Hodor,( TABLE[-73][--TABLE[-TABLE[-0.51][-0.99]][-1]] ) + ( ( Hodor ) * bar(( ( betray(( -( -protect(bar(( 71 ) / protect(( ROWS ) - rule(-81,COLS),0.06),( ( ( -y ) ) ))) ) - 0.57 / rule(Sansa,( COLS ),Sansa) )) ) * ( 0.48 ) )) - -0.07 )))][y / protect(Hodor,dog)];
	destroy(foo(-410.065),--1)
}
} else {
	ROWS / -0.46
}
}
def TABLE[-( destroy(( ( ( -0.23 ) ) ) - COLS,Ygritte) ) - -dog][i] {
	y
}
assert destroy() : "Nothing burns like the cold."
def TABLE[Stark][j] {
	Jon += ROWS;
	Stark /= -0.52;
	if(COLS){
	( -( bar(betray(x),ROWS) ) )
} else {
	betray();
	79
}
}
var x = dog
def mislead(Hodor,Sansa){
	Jon
}
var Jon = Sansa + -Ygritte
var Stark = ( TABLE[foo(TABLE[TABLE[TABLE[Sansa][ROWS]][( destroy(-570.035,ROWS,0.23) ) * TABLE[-rule(dog)][ROWS] / -x]][--rule(betray(-Hodor * ( x )))]) * ( -89 )][x] )
assert -1 : "Nothing burns like the cold."
var dog = foo(( --1 ))
assert ( Hodor ) : "What do we say to the Lord of Death?"
def TABLE[Arya - ( -0.39 ) - 0.9][i] {
	if(-0.41){
	Hodor *= dog
} else {
	if(Stark){

}
};
	if(--bar(Stark)){
	( ( ---y ) )
}
}
assert ( Sansa - -0.12 ) : "Nothing burns like the cold."
def TABLE[( -ROWS )][i] {
	0.09 + -mislead()
}
var x = --47
def foo(Sansa){
	y += TABLE[mislead(betray() - TABLE[770.6978][-1])][Ygritte] + foo(( 1 ),TABLE[( ROWS ) * 43][( -530.48 )] * TABLE[( dog )][TABLE[betray(mislead(-1,Hodor,ROWS),ROWS)][mislead(Ygritte + bar())] * ROWS] / x + destroy(-360.0032,x,0.29) + 0.16 * -COLS / y) - rule(0.25,-mislead(),COLS) / -65 + 75;
	Arya += -( 370.778 / ROWS * -rule() + Hodor * ( --ROWS * destroy(Stark) ) - betray() )
}
def TABLE[( COLS )][i] {
	ROWS
}
def destroy(Stark,y){
	dog -= rule(Stark);
	Ygritte
}
assert 58 : "Fear cuts deeper than swords."
def TABLE[-0.93][j] {
	y / 1 + -17
}
assert 59 + protect() : "Nothing burns like the cold."
var Sansa = ( 58 )
def mislead(Hodor){
	--Jon + bar(---( ( ( 71 ) ) ),( TABLE[destroy()][( betray(( foo(83,-68,Jon + 450.521) ),--( -26 ) / 27) )] ),destroy(ROWS,0.78,ROWS)) + -1;
	x /= x
}
assert -610.17 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = y
var Jon = ( TABLE[Jon][destroy(protect())] )
def TABLE[( foo(foo()) )][j] {
	Arya -= ( Sansa );
	Sansa;
	if(Stark){
	Sansa /= destroy(( -Stark ))
} else {
	Arya /= y;
	if(dog + foo(x) * ROWS){
	( 0.36 )
};
	Jon /= -190.5103
}
}
def TABLE[-( -y - -14 )][k] {
	if(--1){
	dog *= betray(ROWS)
};
	COLS
}
assert ( 1 ) : "Winter is coming"
assert COLS : "Fear cuts deeper than swords."
assert -TABLE[bar(-98)][-( -destroy(foo(-( ( COLS ) ) / -Hodor,mislead(bar(dog,-mislead(rule(foo(-20)))),( TABLE[( ( betray(( -COLS ),ROWS) ) )][TABLE[TABLE[-760.122][-Sansa / Sansa] / ( foo(COLS) )][y]] ))),-TABLE[( Sansa )][Stark],( Sansa )) )] : "Nothing burns like the cold."
def TABLE[mislead(mislead(( COLS ),TABLE[900.295][1]) / --580.649,-57,0.48 / 47 - -bar() - x)][i] {

}
var Hodor = ---76
def TABLE[-53][i] {
	if(-TABLE[0.02][0.53 - -1] / ( -TABLE[bar(-47)][610.1 - 0.44] )){
	x *= --rule(ROWS / ( COLS ));
	betray();
	Hodor -= ( ( -1 ) )
}
}
def TABLE[COLS][j] {
	Hodor += 200.8088
}
assert mislead(ROWS,( -1 ) - dog,--Arya * Jon - bar(0.65 / Hodor)) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(Stark){
	0.38 / betray(( COLS ),rule(Ygritte + foo()),COLS) / 0.3
}
def TABLE[-1][j] {
	Hodor += 1;
	---( Sansa )
}
def TABLE[y][i] {
	if(43 + 0.85 + ( ( Sansa ) )){
	if(( ( dog ) ) / Jon){
	-Jon
};
	y;
	Jon /= Stark
} else {
	bar(-1,-0.32,ROWS) / ROWS;
	Jon += -810.9 - Ygritte
};
	Hodor *= protect(betray(-Hodor),-50,Hodor)
}
assert -destroy() / COLS + ROWS + rule(Hodor,COLS) : "Nothing burns like the cold."
var Ygritte = 57
assert ( ROWS ) : "Fear cuts deeper than swords."
def mislead(Ygritte,Jon,Ygritte){
	if(COLS){

} else {
	if(-x){
	if(protect()){
	( Arya );
	( ( COLS ) )
}
}
};
	Hodor += ( mislead(88) );
	Ygritte /= destroy(x - 64 / ( bar(Hodor) ),destroy(---( 38 )),mislead(mislead(1,dog)))
}
var Arya = foo(-( 52 ),--COLS) + -30
def TABLE[mislead(x,Stark,( -0.59 ))][k] {
	if(Arya){
	mislead(Hodor,-15,( ( Ygritte ) ));
	ROWS / COLS;
	if(( y * COLS ) - ( bar(x,( dog )) ) - -Arya + dog){
	Hodor /= ( Hodor )
}
} else {
	if(-35){
	if(destroy(foo(( ( -1 ) ) * TABLE[( ( -COLS - ( ( ROWS / --1 ) ) + 0.47 ) )][( dog )] * Sansa,-( rule(( x ),--36) ) / ( ( ( COLS ) / ROWS * bar() ) ) - -y)) - protect(( ( ( ( Arya ) ) ) )) - y / destroy(--TABLE[( Arya )][( rule() )],( ROWS ),-ROWS)){
	( rule(( 31 )) ) / -protect(betray() + TABLE[Arya / --300.3 / mislead(betray(( ( -0.53 ) ),x,bar(-1,-TABLE[destroy(Hodor,28 + -0.3,Arya)][-Stark],dog)),30,bar(( Arya ),Hodor,17)) * betray(( -28 ) + -COLS,-( ROWS )) / -0.83][betray(destroy(y))]);
	if(ROWS - -660.199){
	if(0.95){
	Arya += y
} else {
	--ROWS - COLS - -1;
	if(COLS){
	if(TABLE[betray(( ( COLS + ( 48 ) ) ))][Ygritte]){
	y
} else {
	( --0.94 ) - ( ( TABLE[rule()][mislead(-( COLS ) + Arya)] ) ) - Sansa / dog;
	if(440.8){
	if(82){

};
	-( rule(mislead(foo(-0.2,-Stark + 16),-foo(foo(-0.62,0.76 + Sansa,1),( protect(( ( Stark ) * rule(destroy(mislead(-38,Sansa)),x,TABLE[( Arya )][ROWS]) ),Hodor) + mislead(Sansa,-270.0182,-19 * protect(--97 / ROWS,( ( --y ) - betray(1) ))) ),-1 + --Stark),foo(protect(( -1 ) / y),Ygritte)),mislead(),mislead(ROWS / -0.53)) );
	if(foo(ROWS)){
	if(Arya * y){
	if(mislead(-Arya) + ( Ygritte )){

} else {
	-bar(( -Stark ))
}
} else {

};
	y += -mislead(-betray(( betray(rule(Sansa)) ) / -9 * -50,destroy(COLS,-COLS + destroy(y,COLS,( -63 )),Sansa),TABLE[( foo(betray(-0.27 - -( -69 ) * ( -( --71 ) )),protect(( ( bar() ) ) * betray(-TABLE[( x )][COLS]),dog - -( destroy(COLS) + ( ROWS ) )),-COLS - -86 * rule(ROWS)) / -ROWS )][1])) * TABLE[-88 * Stark][rule(TABLE[Sansa][-( --( 0.31 - COLS ) )],ROWS)]
}
} else {
	y *= Arya - ROWS;
	dog += Hodor * -1
}
};
	protect(( TABLE[ROWS][protect(-( COLS ) + Stark,destroy(--0.8,-betray(COLS,-COLS),TABLE[destroy(-betray(mislead(-0.22),-foo(( Ygritte ) + TABLE[Jon][destroy(( COLS ))],protect(820.2516,( y ),-1))))][( 1 )]))] ),protect())
}
};
	( COLS )
} else {
	dog += Sansa;
	if(-80.843){
	if(--betray(-0.48 + -protect(0.32,COLS))){
	if(-0.02){
	Jon += ( Hodor / ( betray(( 0.4 ),-75 - ( -0.73 )) ) ) - Jon * 60 * 0.98;
	if(-( ( -Sansa * ROWS ) - TABLE[COLS * ( -4 )][31] ) - ROWS * ( dog ) * -0.77){
	if(mislead()){
	protect(( x - mislead(--0.89 / ( 0.54 * ( -y ) )) ));
	Stark -= -1 - foo(TABLE[COLS][foo(protect(Stark,ROWS),-640.02)],TABLE[protect(2 + betray(-COLS,-( -0.12 ) / ---0.25 / 0.28 + ( betray(betray(),-1) ))) / rule() + betray(( ROWS ))][( 0.91 )])
} else {
	if(foo(( -1 - Hodor ),-1)){
	if(( x )){
	betray(foo(0.98,rule(--betray(( ( COLS ) )),70.345 * dog) + ROWS / Jon / -0.09))
};
	-1
}
}
};
	Sansa /= Stark
} else {
	if(--bar(TABLE[0.54 * ROWS][( ( ( -1 ) ) )],COLS) * bar(0.51,( x ))){

} else {
	dog *= TABLE[0.16][Jon];
	( dog )
};
	Ygritte /= dog
}
} else {

};
	y += -Stark * bar() / COLS;
	if(destroy() * dog){
	x;
	if(dog){
	if(0.65 / -600.557){
	Sansa += foo(dog - ( ( TABLE[Jon / -1][x / -protect(( 0.36 ),x)] ) + x * -0.25 - Ygritte ),ROWS);
	if(( ( bar(-COLS,ROWS) ) )){
	dog += -protect(Arya);
	if(foo(( Sansa ),y)){
	y -= bar() / ( rule(x,1,-COLS - bar(( bar(-0.11,TABLE[-COLS][( 1 )],( -bar() )) ),( ( -Sansa ) * -TABLE[-13 / ROWS][Stark - -x] / -Arya / betray(COLS / 0.74) ),TABLE[-0.08][x])) );
	x -= ROWS
};
	( bar(0.96) )
}
}
} else {
	dog += 79
}
} else {
	--1;
	COLS
}
};
	-( ROWS ) * ROWS
}
}
} else {
	if(( Arya ) * --y){
	foo(Arya);
	if(COLS){
	if(COLS){
	-y;
	if(COLS){
	if(-80){
	if(-Sansa){

} else {
	dog += 0.22 * betray(-( 30 ));
	( -rule(COLS) )
}
} else {
	foo(ROWS);
	dog += ( protect(-1) );
	if(x + Arya){
	foo(TABLE[dog][-2])
}
};
	Jon
};
	Stark += -bar(1)
}
} else {
	-330.5;
	if(ROWS){

} else {

}
};
	Jon
};
	( ( COLS - ( Jon ) ) );
	Jon /= ROWS
}
};
	dog *= -1;
	( -Stark )
}
var Hodor = -TABLE[--protect(( y ),TABLE[dog][Jon],destroy(-( -0.85 ),( TABLE[Stark * ( -Stark ) - -( -bar(( -( mislead(-0.66) + -0.7 ) ),-1) )][x] / 690.24 / -0.67 ),Ygritte)) * COLS][dog]
var Hodor = destroy()
def TABLE[rule(-0.05)][k] {

}
def TABLE[COLS][j] {
	if(TABLE[TABLE[rule(-0.14)][-57]][dog]){
	destroy(x,1);
	if(foo(( COLS ),-Hodor / protect(),69) - ( Sansa ) / TABLE[-960.1][TABLE[--TABLE[Jon * dog][( 9 )]][46] - ROWS]){

} else {
	if(-46){
	Arya += dog;
	if(Stark){
	if(0.95 * 0.19){
	if(protect(foo(--Stark) * Arya,COLS,COLS)){

} else {
	y /= Ygritte;
	Jon -= ROWS;
	Jon /= ( 670.3 )
};
	if(protect()){

}
} else {
	-( COLS )
}
} else {
	mislead(Sansa);
	Jon;
	ROWS
};
	Stark += -1
};
	if(( -ROWS )){
	Sansa *= rule(--( -( 0.88 ) ) * COLS)
} else {
	COLS;
	-0.42
}
}
}
}
var Sansa = protect(( ROWS ) - ---rule(destroy(ROWS,540.5079)) * -foo(betray()),-Jon,ROWS / 940.4)
def TABLE[1 / Arya][j] {
	if(( -0.43 / --COLS / -TABLE[--1][ROWS + COLS] )){
	if(COLS){
	Sansa -= mislead(-93,( ( destroy() ) * -( ( -0.14 ) ) * -1 + -betray(COLS,-19) ));
	0.42 * -91 + -9 + -( -rule(Hodor) - betray(Hodor,360.589) )
}
} else {
	--( Arya );
	if(ROWS / rule(( Hodor ),-( TABLE[-ROWS + -0.45 * 520.876][x] )) * Stark){
	dog *= Arya;
	Arya *= ( COLS + COLS )
}
};
	Ygritte *= ( Stark + Stark );
	if(Ygritte){
	COLS;
	if(( COLS + y )){
	if(betray(( -TABLE[foo(foo(-TABLE[---0.74][( x )],-destroy(Ygritte,( Sansa ) * ( -ROWS ) / Ygritte),TABLE[-Sansa / -Ygritte][-dog]),foo(TABLE[foo(16)][protect()]))][Jon] ),1)){
	dog /= ( bar(1,( x )) );
	-67
};
	if(( ROWS ) - TABLE[Stark / TABLE[-( ( ( Jon + COLS ) ) ) / ROWS][( Stark )]][-destroy(--26)] + x){
	Hodor -= -1;
	Ygritte /= ( ( ( 1 ) ) )
} else {
	COLS;
	TABLE[( ( COLS ) )][-0.05 - x] + y
}
} else {
	if(( betray(foo(-0.62,--1 * Hodor)) / 0.17 - COLS * COLS )){

} else {
	if(Ygritte){
	y /= x;
	Stark += ROWS;
	x
} else {
	if(ROWS){
	ROWS;
	--destroy(200.9) * rule();
	-Sansa
} else {

}
}
};
	-mislead(-COLS / x) * Sansa;
	if(( foo(foo(protect() - Stark - -0.54,protect(( Sansa ),COLS))) )){
	-0.36
} else {
	if(-( bar() )){

} else {
	if(270.38){

} else {

};
	Sansa -= y
};
	Hodor *= Arya;
	940.601 * Hodor
}
}
} else {
	Sansa += Sansa
}
}
def betray(x){
	if(( -0.53 )){
	-52 / -rule(( y * -Stark ))
};
	if(Hodor){

}
}
def destroy(Arya){
	dog += ( COLS );
	if(( -COLS + 960.649 )){
	Ygritte += bar(dog,y)
};
	-96
}
assert Jon : "Winter is coming"
def protect(){
	Arya - 0.61;
	Jon *= ( ROWS );
	Stark += ( ( Hodor / -390.541 ) )
}
var Jon = -630.187
var Jon = ( TABLE[0.84 * ---530.3633][TABLE[ROWS][foo(--1 / ( 500.0302 ) / -20)]] * ( ( ( destroy() ) ) ) )
def TABLE[foo()][i] {
	mislead() / ( ( Ygritte ) );
	if(-( COLS )){
	dog *= ( 1 ) / -( Sansa );
	y;
	dog /= ROWS
}
}
assert ( Hodor ) : "One can not simply parse himself"
var Stark = ROWS
var Sansa = -0.17
def protect(Hodor,Jon){
	Stark
}
def bar(Stark,dog){
	1
}
def TABLE[( 65 )][j] {
	y /= ROWS
}
def mislead(Sansa){

}
def foo(y){

}
def TABLE[protect(-COLS)][j] {
	TABLE[-( ( -450.2456 ) * 0.93 )][-1];
	( Stark )
}
def mislead(dog){
	Ygritte /= -COLS - bar() - COLS
}
var y = betray(--0.17,--0.26)
def destroy(x,Ygritte){
	( -1 );
	if(Jon){
	( -0.59 );
	dog += ( -600.107 ) + rule(( 1 ))
} else {

};
	Hodor
}
var y = ROWS
assert COLS + betray() : "What do we say to the Lord of Death?"
def TABLE[Jon][k] {
	if(bar(1,-ROWS)){
	ROWS
}
}
assert -( COLS ) / Arya * ( ---( ROWS ) - foo(COLS,-Sansa * ( 0.21 )) ) : "Fear cuts deeper than swords."
assert ( COLS ) * ( TABLE[-ROWS * -bar(ROWS + --94)][-COLS / bar(mislead(-( -Jon - -1 )),-0.38,--89)] ) : "Nothing burns like the cold."
var Arya = ROWS
var Ygritte = -TABLE[( ( -betray(( TABLE[COLS][-18 + ROWS] ),foo(rule())) ) )][x - TABLE[ROWS][( bar(COLS) )] - ROWS]
assert bar(( -3 ) * TABLE[TABLE[--( ( -( ( x ) - Stark ) ) )][dog]][( TABLE[910.577][0.97] ) - destroy(COLS,( y ))] * TABLE[-0.92][Jon] + ROWS) : "Winter is coming"
var Ygritte = ( --33 )
def destroy(){
	if(dog){
	if(protect(TABLE[-810.093][( x ) * ( ROWS )],rule(TABLE[-61][( TABLE[( -320.7 )][Stark] )]))){
	( -0.63 )
};
	Hodor += Jon
}
}
def protect(){
	Ygritte -= COLS
}
def betray(x){
	if(rule()){
	if(protect(-betray(TABLE[TABLE[ROWS][-480.532] / ROWS][-( protect(-bar(-Arya)) )],-Ygritte,bar(COLS,( TABLE[ROWS][Jon + -42] ))) + COLS,ROWS)){
	if(Sansa){
	Stark *= -0.09
} else {
	Stark += ( protect(betray()) );
	if(-Sansa / -ROWS / 12){
	ROWS;
	if(TABLE[rule(-dog)][ROWS]){
	Jon;
	betray(( --( -80 ) ))
} else {
	dog -= betray(350.8,0.47)
}
} else {
	if(COLS - 0.18){
	if(( 0.33 )){
	if(-( bar(( -0.61 ) * betray(x / 750.15,Jon)) * betray(Hodor,--protect(-dog) * -ROWS) )){
	Arya;
	-ROWS
}
} else {
	-0.56;
	Ygritte -= 320.4;
	Arya *= 0.45
}
};
	Arya *= -87
}
};
	-0.07
} else {
	COLS;
	if(COLS){
	protect(Jon,-46 + TABLE[rule(mislead(),dog)][protect(dog)] / ROWS + Stark);
	COLS;
	if(-( Sansa )){
	if(( -71 )){
	( Ygritte );
	if(destroy(Stark,COLS)){
	Hodor *= -45 + 1 - ( -foo(foo(TABLE[-730.8][protect()])) ) * 41;
	COLS * x;
	( --1 )
} else {
	x += 66
}
};
	Sansa -= ROWS
} else {
	ROWS * betray(( 41 + Jon ),--( ROWS )) / Sansa;
	if(rule(-20,-8) * 92 + rule(-1,( Sansa ) + rule(ROWS,-520.44,( TABLE[Hodor][protect(ROWS)] )),0.86 * foo())){
	bar(betray(),dog,Ygritte + Ygritte + y / COLS)
} else {
	if(Arya){

} else {
	ROWS;
	if(( 1 - betray(-ROWS,-( -( -0.98 ) ),-23 - ( foo(( x )) )) )){
	if(-Arya - -TABLE[-( -foo(destroy(-TABLE[Jon][35] - -Stark)) )][Stark] + ( -0.94 )){
	Hodor -= ( 50.52 );
	if(-520.846 * mislead() + -75){
	( destroy(( ( Ygritte ) ),-0.58 / Stark,protect(foo(Jon,dog - ( -670.351 )) + 11)) / Hodor );
	if(( -destroy(-350.316,---Sansa - --1 / -x * destroy(-570.71,-ROWS)) * TABLE[bar(-440.2784,dog)][-0.84] )){
	ROWS
}
} else {

};
	y += ROWS
} else {
	if(ROWS){

} else {
	Arya -= Sansa * -destroy(COLS + ( mislead() ) * -destroy(x,Ygritte,( destroy(-TABLE[( -mislead(destroy(Ygritte + protect(ROWS,( -Sansa / --0.64 - ( ( ( Jon ) ) ) )))) )][-bar(bar(COLS,ROWS,--Sansa - ROWS))],( Jon )) ) - ( ROWS )) + ROWS)
};
	Stark;
	bar()
};
	ROWS * Arya
}
};
	Stark *= 0.43
}
}
} else {
	if(ROWS / Hodor){
	if(-0.56){

} else {
	if(480.266){
	if(-mislead(-( mislead(betray(TABLE[mislead()][mislead(----84 + -( Arya * mislead(-TABLE[-COLS][Stark - --670.7 + protect(Ygritte,COLS,( COLS ))],580.77) ) * bar(( betray(( Ygritte )) ) - -( TABLE[bar(Jon)][x] - x ),----protect(y,( -720.06 * foo() / -1 ),( COLS )) * ( -2 - COLS + --92 - bar() - y ) / ROWS + ROWS))]),Hodor) ),-37 - Stark) * ( TABLE[COLS][--19] ) * y){
	COLS;
	if(bar(0.06 / -( mislead(Stark) )) + ( TABLE[-0.99][-0.7] )){
	Ygritte -= Sansa;
	if(ROWS * bar(Jon)){
	Sansa /= Stark;
	y -= betray();
	Jon /= bar(( -Sansa ),destroy(ROWS,ROWS))
}
}
}
} else {
	Jon += -betray(destroy(0.16 / -bar(protect(-( TABLE[bar(COLS,COLS,( destroy(0.16) ))][TABLE[ROWS][0.2]] ),dog,-0.78),-x)) + TABLE[Ygritte][-Ygritte],protect()) - ( Sansa );
	Stark *= ( betray(Hodor,( ( COLS ) + ( ( -Jon ) ) - protect(---Arya + -( Ygritte ),( Arya + ( -800.2 ) ),Ygritte) + Stark ),ROWS) )
}
};
	x += betray()
}
}
};
	TABLE[TABLE[-( -( ( Arya ) ) ) * betray() * -70][ROWS]][0.69 / COLS + Sansa]
};
	if(Ygritte - ( TABLE[( protect(TABLE[( Hodor / rule(betray(dog,bar(( TABLE[COLS][x] ),TABLE[x + -betray(Stark)][ROWS]),( --20 + -2 ) - 21) * dog,Stark) + x )][-rule(1,protect(Arya),Stark) * -710.1304 / TABLE[( ( Hodor ) ) - TABLE[COLS][ROWS]][0.18]],betray(destroy(destroy(( Stark ),-0.44),betray(( ( ROWS ) ) + Jon + ( y ),Arya),( --30 )) + -( x + Hodor ),0.55)) )][Jon] ) * destroy(( TABLE[COLS][-85] - --mislead(-TABLE[rule(-90,-( 57 + Stark )) - ( Ygritte )][-( Arya )]) + ( --0.57 ) * -0.08 + rule() + dog ),destroy(COLS,1 + mislead(-TABLE[destroy(-( TABLE[-31][destroy()] ))][Jon] + ( -800.82 ),-88)) * --600.1)){

}
}
def betray(Stark,Ygritte){
	if(-Stark / -( -0.45 )){
	if(-( rule(( -0.8 * 0.77 ),( ROWS ),( mislead(TABLE[Stark][Jon]) )) )){
	y;
	if(TABLE[-protect()][ROWS]){
	Jon += -betray(-0.19);
	Hodor -= bar(foo(bar(rule(foo(( ROWS )),81,rule()),760.93,-( ROWS - Arya ))),-mislead(0.57 / COLS),( Hodor / --1 ))
};
	if(protect(protect(( --0.32 ),1))){
	if(-83){
	if(y + x){
	-46 * Stark - -0.75;
	620.8
}
};
	rule(y);
	( --540.354 ) * -( destroy(12) ) * -84
} else {
	Sansa *= ( -destroy() );
	if(1){
	Ygritte /= -87
}
}
};
	ROWS
}
}
def TABLE[TABLE[-Hodor][( -ROWS )] + ( foo(Stark) )][j] {
	Hodor += ROWS;
	Ygritte /= betray(COLS)
}
def TABLE[x][i] {
	Jon *= Sansa
}
def bar(){
	if(( -TABLE[Hodor][mislead(TABLE[foo(Stark,destroy(rule(protect(Jon,betray(Arya)))))][-( COLS )] - x * destroy(( Sansa )) * y,COLS)] )){
	Stark -= ( mislead(-( foo(COLS,mislead(ROWS,COLS,TABLE[COLS][Hodor]),350.6) ),( protect(-( ROWS )) ),bar(foo(-x,destroy(-rule(( bar(0) )),( 1 ))) * 0.7,-550.941 * COLS)) )
};
	Sansa /= -0.07;
	-( -( -Sansa ) / COLS )
}
var y = bar(protect(-0.81 / rule(COLS,--( ---( ( ( Stark ) ) ) ) * ( 1 ) - --1 / ( 1 / ( -0.22 ) * Jon )),Sansa),-TABLE[protect(-foo(Stark),TABLE[ROWS][( ROWS )])][bar(foo(betray(0.96,--28 / dog * TABLE[bar(TABLE[ROWS * 0.59][COLS])][( ( TABLE[-66][COLS] ) ) / 90.68],-1),mislead(-38,TABLE[59][betray(x)])),( -95 ))])
var Hodor = betray()
def betray(dog,Ygritte,x){
	if(-( -30 )){
	if(TABLE[( ROWS ) + ROWS * ROWS][protect()]){
	ROWS
} else {
	0.87 * bar(( 520.4544 ) + COLS,x)
}
} else {
	if(( ( -95 ) + COLS * ( Sansa ) )){
	ROWS
} else {
	if(COLS){
	if(0.3){
	Jon *= Sansa
};
	x += --x / destroy()
} else {
	dog -= Arya;
	-39
};
	y
};
	y /= ( -rule(protect(( TABLE[( ROWS * 1 )][foo(1) / ( 1 )] )),( -73 )) / dog )
};
	bar(-dog,( ( 530.71 ) )) * TABLE[bar(Arya,--0.04 - dog * ( ( -0.54 ) ))][betray(TABLE[24][COLS]) * COLS * -( COLS )]
}
def TABLE[-destroy(49,rule(( -rule(destroy(180.57,betray(Hodor))) )))][j] {
	if(ROWS){
	Stark += ( dog )
} else {
	-0.64;
	foo(-31,COLS,betray(( COLS ),rule(foo(mislead(betray(--Sansa / bar(TABLE[Stark][----630.7],COLS))) + 0.26,COLS))))
};
	bar(-0.65)
}
assert mislead(-Stark,betray(( -21 )),( Stark )) : "Fear cuts deeper than swords."
def TABLE[---( x ) * destroy(-580.6 / 820.722 + Hodor + ROWS - COLS / ( ( x ) ))][i] {
	if(--( ( --740.344 ) )){
	Ygritte /= -0.28
};
	destroy(-63,( -47 + ( destroy(-foo(-protect(( TABLE[-betray(TABLE[Hodor * ( y )][TABLE[83][x]],58)][Jon] )),18),betray(( ( -y ) ),Sansa)) ) * 410.25 ),( -( ( Stark ) ) ))
}
def TABLE[destroy(TABLE[-10][-0.32],COLS)][i] {

}
def betray(){
	if(( ( -0.8 ) )){
	ROWS
} else {
	Arya *= -( ( betray() ) );
	foo();
	COLS
};
	y /= ROWS
}
def TABLE[( x / betray() )][j] {

}
var Stark = -0.16
assert x : "One can not simply parse himself"
assert -77 : "What do we say to the Lord of Death?"
assert ( rule() ) + dog - Arya : "Winter is coming"
def destroy(Stark,x,dog){
	Sansa -= Arya;
	Sansa
}
def bar(x,Hodor,Jon){

}
assert ( -Ygritte ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(Jon){

}
def TABLE[-( COLS )][i] {
	Ygritte += ( -680.1265 )
}
def TABLE[( betray(Hodor,destroy(( ( foo() + y ) ),TABLE[-40][720.649])) )][j] {
	Hodor -= ( x );
	if(-760.89){
	Arya *= TABLE[protect(COLS)][Jon]
} else {
	-61 * -31
}
}
assert 10.131 : "One can not simply parse himself"
def foo(Hodor,x,dog){
	if(protect(-Sansa,( ( -( ( Ygritte ) ) / Sansa ) ))){
	Sansa -= ( protect(TABLE[-bar(( ROWS )) + ROWS * COLS][( -0.65 ) - x],-44,( mislead(Jon) / 30.96 )) )
} else {
	if(( TABLE[97][-1] ) / TABLE[--36 * Hodor][1] * protect(Jon,-0.41) - Arya){
	if(COLS){
	if(dog){
	-COLS;
	if(( -62 )){
	Sansa /= -66;
	if(ROWS + bar(-ROWS,-ROWS)){

}
}
}
} else {
	Arya -= mislead(-0.03)
};
	TABLE[protect(-Hodor,-22)][-1];
	Ygritte *= ( -0.04 )
};
	Jon *= 20
};
	( Ygritte )
}
def TABLE[( y + ( -( 71 - 1 ) ) )][k] {

}
def TABLE[( -( Hodor ) ) + foo()][i] {
	if(mislead(Jon,TABLE[-( -0.74 )][87],COLS) + ( 1 )){
	Sansa *= ROWS
} else {
	Sansa *= TABLE[-TABLE[( ( -0.23 ) )][-( bar(ROWS,Ygritte) - dog + x )]][-1];
	Jon
}
}
def TABLE[0.59][k] {
	Arya -= rule(-y * -100,Hodor);
	Arya += foo(-foo(bar(protect())),protect(Hodor - Jon,x - mislead(630.7529,ROWS))) / foo(betray()) + --0.32 - ROWS
}
def TABLE[37][i] {
	Arya /= --52;
	Sansa *= foo(Arya,protect(TABLE[COLS][77] + ( ( ROWS + -rule(protect(( bar(-Hodor,( -0.38 )) ),Ygritte),y) + ( TABLE[betray(( bar(dog - -4,destroy()) ),( Jon / betray() ),TABLE[bar(60.88,0.86) + mislead(foo(TABLE[destroy(( ( -0.74 ) )) / 62][TABLE[-37][( 20.742 )]]))][87 - ( mislead(( -75 ),COLS,foo(( TABLE[Ygritte][betray(( Ygritte ))] )) - TABLE[dog][y] * ( ( y ) )) )])][TABLE[--TABLE[( COLS )][-COLS]][0.13]] ) ) ),( y ),Ygritte))
}
def protect(Ygritte,x){

}
def TABLE[---0.58][k] {
	-1;
	Sansa += y - ROWS;
	TABLE[COLS][-mislead(rule(--640.4873)) + -89 + rule(1,foo(COLS),ROWS)]
}
def TABLE[Sansa][j] {

}
var Hodor = y + -28 / y
assert ( ( -TABLE[( ( ROWS ) * --63 / Ygritte - TABLE[rule(29,foo(-1,---39))][ROWS] )][ROWS] ) / -Arya ) : "One can not simply parse himself"
def foo(Jon,Ygritte){
	if(-4){
	Stark /= ( -( -foo() ) );
	190.2
}
}
def destroy(){
	-( -COLS )
}
def mislead(Sansa){
	Sansa /= 1
}
assert foo() : "One can not simply parse himself"
def protect(){
	if(x){

};
	0.89;
	Hodor /= COLS
}
def TABLE[( betray(0.06,betray(13),Hodor) )][k] {
	-y;
	if(0.19){
	Ygritte /= 87
} else {
	y -= TABLE[0.93 - Sansa * foo()][foo(Stark,-8 * COLS)]
};
	bar() - Stark
}
assert 0.76 : "Fear cuts deeper than swords."
var dog = ( COLS ) + betray(( x - ( -0.45 ) ),-0.69,Sansa)
def TABLE[TABLE[0.53][0.75]][i] {
	Hodor *= TABLE[0.73][( foo(-73) * --( --0.55 + protect(-rule(( -bar() ),TABLE[( -dog )][dog]),10) - TABLE[Arya][mislead(betray(TABLE[-ROWS][( ROWS )],dog),dog,TABLE[Arya][0.08])] ) )];
	Jon /= -19;
	Arya
}
assert destroy() : "Winter is coming"
def TABLE[COLS][k] {
	----COLS * COLS * --( rule(ROWS,ROWS) * -0.4 ) + 0.68 / 920.816 - Sansa
}
def TABLE[COLS][j] {
	Arya /= ( foo(Jon / ROWS + TABLE[-TABLE[( protect(COLS,( TABLE[Stark - Ygritte - ( COLS )][rule(Jon,foo(( ( -0.22 ) )))] ),COLS) )][( TABLE[Arya][-( mislead(-0.06,( -TABLE[0.95][-( bar() ) * ( ROWS )] )) )] )] * ( betray() )][ROWS] + -( -rule(-210.9871) ),( mislead() ),Sansa + -0.11) );
	if(( -rule(-( ( ( betray() ) ) ),-1,--TABLE[TABLE[-ROWS][y]][bar(Hodor)]) * betray(69) - --protect(-destroy(),-dog,foo(ROWS,-TABLE[( -1 )][Ygritte / x * -36])) + x - ( TABLE[-6][( ROWS )] - x ) )){
	Sansa -= -1;
	Jon /= -0.19
}
}
def protect(Arya){
	if(-1){
	if(( y )){

} else {
	Arya += 49;
	Jon += -0.38;
	y
};
	Sansa -= Stark;
	if(1 * COLS){
	Arya -= ROWS / rule(destroy(),mislead(-TABLE[bar(-Stark,Sansa)][-Ygritte] * Hodor,-720.519 / Jon),430.2)
} else {
	--0.21;
	ROWS
}
};
	Arya -= ( ROWS );
	Stark /= betray(foo(mislead()),-64 * Arya)
}
assert mislead(-Arya) : "Fear cuts deeper than swords."
assert COLS : "Fear cuts deeper than swords."
assert ( mislead() ) : "One can not simply parse himself"
def TABLE[960.9469][k] {

}
assert ( --1 ) : "What do we say to the Lord of Death?"
assert 100.1 : "Fear cuts deeper than swords."
def TABLE[COLS][k] {
	Jon
}
assert -( betray() ) : "One can not simply parse himself"
def betray(Sansa){
	TABLE[0.63][1];
	-bar(-y * -TABLE[-dog][ROWS])
}
def betray(dog,x,Hodor){
	-( mislead(Jon) ) + -rule(Arya);
	x *= COLS / Arya
}
var Sansa = ( -67 )
def TABLE[dog][i] {
	if(-rule(Stark / protect(( COLS ),-ROWS),TABLE[-16][( mislead(-120.359) )])){
	x -= -86
} else {
	if(1){

} else {
	-27;
	if(y){
	( --COLS );
	dog -= ( foo(protect(0.05,-0.64)) );
	( mislead(-TABLE[COLS][Stark],foo(1,rule(COLS - TABLE[( Jon )][protect(TABLE[Ygritte][COLS],mislead(mislead(-rule(( -1 ),( -foo(( -rule(( -TABLE[destroy(-0.62,( Arya ) - -( Arya ) + mislead(( Hodor ),rule(( COLS ))))][TABLE[TABLE[( -ROWS )][( ( --830.85 ) )]][ROWS]] * ( Arya ) ),destroy(-Stark) * -( rule(--32,0.87) ) * Arya,ROWS) ),-76) + 0.88 )) - 0.52,( ( Sansa ) ) - Jon - 160.844 / ( -120.322 ) * COLS * 140.7)))] / ( ROWS ),( --69 ),-ROWS + protect(COLS) / -460.29 + 45),-6),--TABLE[-destroy(COLS,y * rule(ROWS) + mislead(),-TABLE[--Sansa + ( ROWS ) / mislead(TABLE[betray(foo(( Ygritte ),Sansa,x))][ROWS])][TABLE[TABLE[Sansa][( COLS )] - TABLE[dog][mislead(TABLE[COLS][TABLE[TABLE[TABLE[protect(Arya - -0.45)][TABLE[-0.18][-400.24 + ( --betray(-0.16 - ( destroy(COLS / ( destroy(Stark,dog,COLS) ) - COLS) ) / -55,71) )] - TABLE[TABLE[( TABLE[( betray(0.6) )][protect(ROWS)] )][x + Sansa - 1]][--( -0.51 )]]][0.65 + Stark - ( -Hodor )] / betray(TABLE[bar(ROWS)][ROWS]) * -1 / ( bar() )][TABLE[-910.2936][rule()]]] * ( ( Hodor ) ) - ( COLS ))]][foo(COLS) + --( -( ( TABLE[0.07 + bar(( ROWS )) / -protect(--Arya + -COLS,( -1 - ( ( ROWS + -( COLS ) ) ) ),( destroy(( ROWS ),( -1 )) - --COLS + -( COLS / bar(COLS,destroy(-bar(),bar(rule(rule(Ygritte,dog) + -destroy() * -destroy(---Jon) + 1,-betray(-90.2,( ( Stark ) )),37 / ( ( -Stark ) ) * dog),bar()))) ) ))][bar(x,0.6)] ) ) - Sansa ) / TABLE[21 * Jon][--TABLE[foo()][-dog]] - -( -0.52 )] - ROWS]) - y - ( COLS - Arya )][Hodor]) )
} else {
	Arya -= ( -0.55 )
}
};
	( -( ---( foo() ) - ROWS ) + betray(bar(-0.62)) * Hodor ) / COLS
};
	Hodor -= mislead() + Arya;
	x -= -98
}
def destroy(Sansa,Sansa){
	dog *= destroy(( ( protect(( foo(( -0.54 )) )) ) ) / 660.8542,--Arya / -foo(TABLE[( mislead(foo(protect() + y),betray(Jon)) )][-( Ygritte )]) - ---0.35);
	if(mislead(Hodor)){

}
}
def rule(dog,y){

}
def TABLE[ROWS][i] {
	Stark /= ROWS;
	if(ROWS){
	if(y){
	Jon += rule(-0.38)
} else {
	Sansa /= -Ygritte - ( Ygritte )
};
	( 0.76 )
} else {
	Ygritte *= TABLE[destroy(-( -95 ) / bar(( betray(-0.03 + -TABLE[foo(x)][-1]) * x ) + protect(Hodor),Stark),-Hodor * -4 * x,Stark)][( 1 )];
	-COLS
};
	-y
}
def TABLE[( -94 )][k] {

}
assert destroy(TABLE[77 - -foo(COLS,Ygritte,foo()) * --( ( y ) )][TABLE[destroy()][y - -0.81]],COLS,( 750.3 )) : "Fear cuts deeper than swords."
def bar(dog,dog){

}
var Ygritte = ( -ROWS )
def TABLE[( dog * --86 )][j] {
	Sansa *= 1;
	COLS + COLS
}
assert COLS : "Fear cuts deeper than swords."
assert 0.23 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[mislead(Arya,( foo(Hodor) ),x)][i] {
	if(protect(44)){
	Hodor *= ( ( -COLS ) );
	Sansa
} else {
	( --destroy(bar(-871,-1,ROWS + protect(TABLE[-3][1 - ( ( Sansa ) )],-COLS) * ( protect(ROWS) )),51) - TABLE[x][TABLE[COLS][dog]] );
	-76
};
	Stark /= --COLS
}
def protect(Jon){
	x
}
def TABLE[( x )][j] {
	if(foo(-920.2)){
	if(25){
	if(TABLE[Hodor][Sansa]){
	if(foo(x,Stark)){

};
	Arya += COLS
};
	Jon -= ( -230.9576 );
	-Hodor
}
} else {
	if(Jon - y){
	Sansa -= Hodor;
	Stark += COLS
};
	if(( -91 - ( TABLE[Hodor / Arya - ROWS][-TABLE[-0.59][TABLE[-( COLS / TABLE[COLS][-780.084] )][-TABLE[Sansa / ( ( ( ( ( TABLE[protect(Stark,x) - Ygritte][-Jon + 0.17] ) * ( ( TABLE[Hodor][( TABLE[-44 / ( Sansa )][rule(bar(mislead(( Sansa ) - Ygritte,-TABLE[y * mislead(0.36,( ( ( -1 ) ) )) * Jon][Sansa - TABLE[dog - Sansa][-betray(foo(),bar(Stark) - -ROWS,Sansa * -480.2009)]]),ROWS)) + -0.69] )] ) + x ) ) + y - ROWS ) ) )][-24]]]] ) )){
	x /= Ygritte
} else {
	if(dog){
	Jon *= y / Jon * betray(ROWS,ROWS);
	COLS;
	Sansa -= Jon
} else {
	if(-0.61){

};
	destroy() - dog * betray(( -x ),Jon,foo(-( -380.8 )));
	Ygritte
};
	Jon *= COLS;
	Jon /= Jon
};
	-49
}
}
def TABLE[Arya][i] {
	if(-COLS){

};
	if(( -0.2 ) * x){

} else {
	if(( -0.96 ) + Arya){
	if(( COLS )){
	COLS + dog * ( 59 );
	if(COLS){
	bar(COLS);
	if(-0.79){
	if(---rule(ROWS,COLS) * Ygritte){
	if(mislead()){

} else {

};
	if(-COLS){

} else {
	Sansa /= Ygritte;
	if(Arya){
	Ygritte += 94;
	bar(27 - -20.412)
} else {
	Ygritte -= 990.2;
	Jon -= ROWS
};
	440.4133 + ( ( --y ) )
}
}
} else {
	Hodor;
	TABLE[130.715][27]
}
} else {
	150.6;
	if(ROWS){
	if(-210.2){
	-84
};
	if(y){
	dog;
	dog += TABLE[46][TABLE[COLS][TABLE[ROWS][foo(COLS,ROWS)]]];
	if(-Jon){
	if(( -----ROWS + Sansa )){
	Jon -= 88
} else {
	( ( -1 ) + --ROWS );
	Sansa /= 0.33
};
	if(( ROWS )){
	if(Stark){
	foo(-39 * -TABLE[-0.04][( ( ( foo(-TABLE[220.214][-rule(1,Hodor)],( ( ROWS + COLS + Ygritte ) / -0.23 )) ) ) )],TABLE[--500.77 / -1][( ROWS )])
};
	COLS
}
}
};
	if(0.46){
	dog += dog;
	( -170.64 );
	-bar(0.69) * -bar(foo(( 0.3 ),Ygritte) - TABLE[x][betray(betray(TABLE[--( TABLE[ROWS + 0.4 * betray(--1,Sansa,41)][TABLE[COLS][COLS]] )][Stark + -0.86 + ROWS],( -betray(COLS,( Jon )) ),( Hodor )))] / ( -( -340.394 ) ),-1) + protect(bar(TABLE[( 37 )][-ROWS],-1 / -1 + 0.46) + ROWS,-1) * COLS
}
} else {
	y *= ( protect(TABLE[-0.43][-62]) );
	if(---1 - ( dog )){

}
}
}
};
	if(-1){
	Arya - Stark;
	Arya += TABLE[( --0.16 )][mislead() * -4]
}
};
	x *= Sansa
};
	if(betray(Sansa) - ( ( -15 ) ) + COLS + ( Ygritte - ( COLS ) ) / Hodor){
	-1;
	Hodor
} else {
	if(bar(--( y ) * ( --0.76 ))){
	if(ROWS){

};
	y /= betray(( -31 ),ROWS,--TABLE[-rule(-24,( x ),COLS)][Jon + destroy()] * ( ( -ROWS ) ))
}
}
}
def bar(){
	if(( TABLE[rule(x + COLS,TABLE[( COLS )][rule(Sansa,-betray() - -Hodor * -44,Sansa)],( -( -96 ) ))][Arya] )){

};
	TABLE[ROWS][-0.44]
}
var Ygritte = Sansa
def mislead(Hodor,Arya,Sansa){
	if(rule(dog,( ( -ROWS ) / Jon ))){
	dog - 420.4;
	y *= --1
} else {
	if(betray()){

};
	if(1){
	destroy();
	y += ( ROWS ) / Hodor
}
};
	Stark /= -0.52
}
assert -86 : "Winter is coming"
var Arya = foo(TABLE[-0.86][foo(ROWS,ROWS,ROWS)],y * --y)
def TABLE[Jon][j] {
	-25
}
assert Jon : "Fear cuts deeper than swords."
def protect(x,Sansa){
	Sansa /= -ROWS;
	Arya += -83 / x;
	1
}
def TABLE[betray(( Jon ),-mislead() + TABLE[-1][bar(rule(ROWS,-( destroy() )))],betray())][k] {
	-Sansa;
	destroy(( COLS )) / rule(y / TABLE[protect(foo(40 / -310.369),70)][-( Stark )]) / -Sansa + foo(-0.75,ROWS / betray(-( -Sansa )))
}
assert ( Stark ) : "Winter is coming"
var dog = foo(( Ygritte ))
def TABLE[rule(ROWS,-57)][i] {
	if(-380.0098){
	y *= dog / ( COLS ) * betray();
	if(( ( rule(Hodor - ( ( -520.6 ) ) - mislead(-300.89,TABLE[( Hodor ) - ( destroy(Jon) * COLS )][( -Hodor + ( -bar(-mislead(--29) / destroy() - ( ROWS / 0.18 - -( -1 - ( COLS ) ) )) ) )]) - ( COLS ) - mislead(0.8),( y ) / ( protect(( ( -0.94 / --1 ) )) ),( protect(Sansa,mislead(39,-bar() - -Sansa * ROWS / -95)) + Ygritte )) ) )){

} else {
	if(20.0728){
	if(COLS){
	if(0.78){
	if(TABLE[foo(-0.92 - COLS / -mislead(ROWS,-rule()) / COLS,-y,--1)][-1]){
	if(( Ygritte )){
	x += 33
} else {

};
	Hodor /= ( mislead(-400.9827,rule(---( -0.43 )),0.19 + -TABLE[bar(1,-70)][( Jon + ( 940.5 ) )] + rule()) - ( 0.16 ) )
};
	( ROWS );
	Hodor /= ( ( Stark ) )
}
}
} else {
	( 1 )
};
	Arya -= --( dog ) / -0.07 / COLS / protect(foo()) * protect(mislead(COLS,30.0999),--( ( --COLS ) ) - 0.36,protect(COLS))
}
} else {
	Sansa -= -Stark;
	if(rule(71 * ( bar(( -TABLE[foo(----( destroy(bar(( ( bar() ) / protect() )) + -COLS,( ( ROWS + ( destroy(COLS,mislead()) ) - foo(COLS) ) ),TABLE[bar(-( ROWS ),dog)][Arya]) ))][0.69] / ( -rule(protect(( Hodor ),ROWS),COLS,( ( ROWS ) )) ) / ROWS / mislead(( --1 + -rule(-dog,y - ROWS,1) )) )) ) * -( TABLE[COLS][dog] ),Sansa)){
	760.711;
	-20.609;
	if(-COLS){
	-COLS * Stark
} else {
	if(( -Jon + -1 )){
	-1;
	if(TABLE[y][bar(-0.14)]){
	COLS;
	if(-Ygritte){

} else {
	Stark -= --32;
	if(( -0.92 )){
	Sansa += ( ( COLS ) );
	if(( foo() )){
	0.32;
	dog /= y
}
};
	Stark -= COLS
}
};
	Hodor -= COLS
} else {
	Hodor += 0.74;
	Hodor += ROWS
}
}
} else {
	ROWS
}
};
	0.8;
	if(foo(( -0.05 ),( -46 ),TABLE[-24][( ( COLS ) )] * destroy(ROWS,-79))){
	if(TABLE[-50][-( destroy() )]){
	if(COLS){
	if(COLS){
	if(( -TABLE[( protect() ) + ( -0.12 )][-TABLE[( dog )][TABLE[( --1 )][( foo(COLS) )]]] - ( 840.9 ) )){
	if(Arya){
	Sansa += -Stark + COLS
};
	if(mislead(y,Stark,Arya)){
	betray(( -6 ),700.31);
	Hodor -= ( COLS )
}
};
	if(--( bar(mislead(),-( destroy(Jon,ROWS) )) )){
	x -= ( -Arya );
	if(TABLE[-betray() + rule(-73)][0.82]){
	-protect(-660.742,-880.011)
} else {
	Hodor /= betray(destroy());
	if(0.7){

};
	if(( 66 )){
	( 41 )
} else {

}
}
}
};
	( -TABLE[TABLE[Jon / ( betray() * ( COLS ) )][--( ---TABLE[23][ROWS / rule(-destroy(-0.53,0.62,( COLS )))] - rule(-destroy(),ROWS,Arya) / 14 + COLS ) / foo(TABLE[( mislead(160.9533,TABLE[-y / -foo(0.57)][Arya / TABLE[( Ygritte )][( ( foo(-ROWS) ) )] / foo(--27 - foo(-Hodor,foo(-83 * -0.02,-( 31 ))),( TABLE[TABLE[-Ygritte][bar(( Ygritte / 1 ),foo(-1 + ROWS,-x),Sansa)]][ROWS] / foo(( -0.47 )) / --72 ))] / Jon - ( rule(1,( Jon / ROWS ),( x )) )) )][-770.639],-90) / Stark]][COLS + --( ( protect(-( 60 )) ) ) - -1 * Jon / Sansa / -0.26 - y + Sansa - 230.4405 / Arya * COLS] ) / y + -1 + ROWS + foo(-( 940.54 ),( --foo(---mislead()) ))
}
} else {
	if(COLS){

}
}
} else {
	Stark -= destroy(betray(),protect(6 - -0.21 * -( -760.47 ) / ROWS + -92,-980.74),( 0.45 + Stark / 1 )) - ( x );
	if(--69){
	( ROWS ) + ( COLS ) * ( 0.26 )
};
	Ygritte += Sansa - bar(ROWS,Sansa / Sansa * Ygritte - -rule(Sansa,TABLE[( destroy(ROWS / ROWS / Hodor,1) - -( 0.31 - dog ) ) * -COLS][( -betray(--640.741) )])) * 630.296
}
}
assert -72 : "Fear cuts deeper than swords."
var Stark = ROWS
def TABLE[0.31][i] {
	COLS
}
var dog = ( y - --Ygritte )
var Arya = rule(rule(Hodor,( ROWS / Jon ),( protect(COLS,x) )),-0.25)
var Stark = ROWS
var Sansa = -( rule() )
assert COLS : "What do we say to the Lord of Death?"
assert -( betray(26,ROWS) ) : "One can not simply parse himself"
assert Jon : "Nothing burns like the cold."
var Ygritte = --0.25 + betray(---COLS,( ROWS ),TABLE[-( -Sansa )][Stark]) + ROWS
var Arya = ( 430.18 * mislead() ) / Ygritte - -TABLE[COLS][( TABLE[rule(destroy(--7) - mislead(betray(),bar(COLS),29),-( TABLE[( 96 )][30] ))][destroy()] )] + foo(( ( -mislead(540.5842,destroy(COLS,Stark)) ) - ( TABLE[protect()][Sansa] + bar(-520.81,( ---0.32 )) ) / -( TABLE[--destroy(( ( -TABLE[COLS][-1] / 31 ) ),1)][destroy()] ) / TABLE[destroy(--45,Hodor)][---protect(x) * -Hodor] ),0.13 + ( TABLE[-( 0.04 )][-COLS] ))
var Ygritte = COLS
var Jon = ( mislead(-800.81,foo(( ( TABLE[59][protect(( Arya ),--rule(-300.394)) * -ROWS] ) ),82,COLS * foo(( ROWS )) + TABLE[TABLE[betray(TABLE[( bar(COLS,( ( -x ) )) )][Ygritte])][dog]][( ( -foo() ) )])) )
def TABLE[-rule(ROWS / ( ROWS ))][i] {
	TABLE[ROWS][Sansa]
}
assert bar() : "Winter is coming"
var y = Jon
def betray(Stark){
	Sansa *= destroy(( foo(( --800.12 )) ));
	if(51){
	Stark -= 0.4;
	mislead() + COLS / ( ROWS )
} else {
	Stark /= Arya
};
	if(-45){
	Stark /= ( -( TABLE[Hodor][-28] - Hodor - ( -3 ) * -0.45 ) );
	-bar(-1 - Sansa,COLS)
} else {
	Stark *= -5;
	Stark += Ygritte
}
}
assert Hodor : "One can not simply parse himself"
def TABLE[bar(( TABLE[44][-( -ROWS )] ))][j] {
	COLS;
	Hodor -= --mislead(Sansa,( betray() ));
	ROWS
}
def TABLE[TABLE[COLS][--betray(( 71 )) + dog + -0.42 + --COLS]][i] {
	bar(ROWS,y)
}
def TABLE[-ROWS][i] {

}
def rule(Arya,y,Sansa){

}
def bar(y){
	-92;
	Hodor
}
def TABLE[59][i] {
	Stark
}
def betray(Sansa,Jon){
	if(Stark){
	dog += COLS;
	if(44){
	if(COLS){
	Jon += 0.67;
	-Hodor;
	( -32 )
};
	x += -TABLE[ROWS * -( -55 + ( ( bar(COLS) ) ) * y )][Sansa]
} else {
	if(COLS / bar(foo(protect(foo(Sansa,COLS,ROWS),ROWS)))){

};
	if(rule(destroy(y,-0.93) + ( ( mislead() ) ))){

} else {
	-( ( -17 * --94 + COLS ) );
	Ygritte
}
};
	if(Hodor - dog){
	Arya += dog;
	x *= betray();
	if(-0.18){
	if(--1){
	-Sansa * 28 - Hodor;
	if(TABLE[bar(-( mislead(-66) ),protect(( TABLE[rule(COLS,x,mislead()) - ROWS + Sansa - Jon][TABLE[mislead(rule(-Stark - --10.2),TABLE[Ygritte][bar(TABLE[( -mislead(( Arya + ROWS ),( 0.58 ),-0.52) )][-99])],Stark / 34)][1]] * y ),Sansa),COLS * 490.509)][TABLE[( COLS )][betray(ROWS)] + foo()]){

} else {

};
	-( Sansa + -160.12 / ( 1 ) * dog - dog )
} else {
	if(( ROWS * ( TABLE[-( betray(foo(destroy(-TABLE[betray(---390.338)][Jon] + -53 + Hodor,rule(-0.73),Sansa)),Jon) ) / -0.06][0.9] ) / ( ( rule(Ygritte,TABLE[bar(rule(50 + -740.6071,( -0.32 )),-1)][protect(Hodor,--mislead(ROWS - betray(0.34) * y,Sansa))],-( 0.25 ) + mislead(mislead(--Hodor))) ) ) * ( ( ( ( dog ) * ( mislead(protect(destroy(TABLE[Stark][-49] - foo(-0.68,ROWS - x) - -Arya / -72 * rule(COLS) / -Sansa,COLS),y),-betray(foo(Ygritte),mislead(ROWS)),destroy()) ) - ( y ) * COLS ) ) ) / 0.98 ) / foo(-860.989,COLS)){
	if(-0.88){
	x += ( TABLE[Arya][-29] );
	dog /= bar(TABLE[0.04][78],protect());
	Jon *= destroy(( -0.45 ) + Sansa,-ROWS / -TABLE[Ygritte][( -ROWS )],-0.08)
} else {
	if(0.23){
	TABLE[foo(( foo() ) + y * 1)][rule(28) + TABLE[( ( -0.32 * ( ( Arya ) ) ) )][destroy(-( TABLE[-COLS / -0.49 + ROWS][84] ) - -0.18,-protect(--TABLE[Arya][y * ROWS] - bar(destroy(( ( destroy(( ( ( -protect() ) ) )) ) )) + ROWS / Arya + -y / -1 * betray(( Ygritte ),destroy(y) / ( ( Arya ) ),0.06),protect(( ( -( rule(dog,-0.75) ) ) ),( ( Arya ) ),TABLE[TABLE[ROWS][-destroy(protect(-57,foo(TABLE[ROWS][bar(-ROWS)],TABLE[-0.76][COLS],( 980.824 ))) + -ROWS / Jon,( ( bar() ) ))] - 0.33][-( mislead() )]) / destroy(350.162,Arya) / ( dog + betray(COLS,Jon) ) - -59,( --96 )) + ROWS,1),-( --x - 0.68 / -63 )) + Stark - 260.3]]
};
	if(( ( ROWS ) )){
	Ygritte += foo(rule(),bar(--46));
	Hodor
};
	--mislead()
}
} else {
	if(rule(-rule() * -1 / Stark - Sansa)){
	if(74){
	Jon *= protect(ROWS);
	dog += betray(TABLE[bar(210.5592,--0.17,Jon * ( -28 + ( ( COLS ) ) * 470.6 ))][COLS],-bar(foo(0.12),0.29) + -Arya)
};
	Arya += -1
} else {

};
	dog /= destroy(-COLS)
}
};
	dog -= COLS
}
}
};
	Ygritte *= Ygritte
}
assert ( ( Hodor ) * protect(( 94 ),bar(TABLE[-1][x],x * foo(betray(),--310.0363 * mislead(( mislead(0.68) ),destroy(COLS,-89 + TABLE[protect(destroy(-35 * Stark),-0.97)][protect(protect(),rule())]),0.02) / foo(TABLE[protect(-0.05)][-ROWS],bar(rule(-97,-1),720.6) / ( -Stark ) / y)) + COLS / -COLS),Jon) ) : "Nothing burns like the cold."
def protect(x){
	Hodor /= ( Jon )
}
def TABLE[dog][j] {
	rule(-( --180.89 / -180.92 - 1 - betray() ),bar(COLS,COLS))
}
def TABLE[-1][k] {
	( mislead(x + -1,24,0.55) ) + 1;
	if(COLS / -bar(x,betray(ROWS))){
	COLS;
	mislead(destroy(--TABLE[-Sansa + TABLE[Arya * -0.41 / Arya][dog] * ROWS][-destroy(bar(),-590.37 / destroy(-4,TABLE[( ( -betray(-ROWS,-70,ROWS) ) )][-0.66 / --betray(( ( Arya ) + -x )) * --mislead(( ( betray(( TABLE[( ROWS )][-670.13] )) ) ),bar(COLS,Hodor / dog) / -x,bar(( COLS / 100 ) + -destroy(ROWS),mislead(y,ROWS)) - betray(TABLE[protect(-36)][-Sansa],( COLS )))]))] + bar(TABLE[( -( Hodor ) )][betray(-Jon,TABLE[-ROWS][Jon - betray(x,-33)])] + -0.81,TABLE[protect(-0.71,ROWS)][COLS],( Sansa )))) / Jon;
	Sansa *= Arya
} else {
	if(COLS){
	foo(TABLE[ROWS][( rule(Stark,-480.97,-Jon) )]);
	( ( ROWS ) );
	Sansa
};
	if(-31){
	dog *= TABLE[dog][COLS];
	TABLE[( -COLS )][80] * -1;
	Sansa -= y
} else {
	if(destroy(TABLE[Sansa][-protect(-( ( -1 ) ) / ( ( protect() ) )) + COLS])){

};
	Arya -= mislead(destroy(),-y,mislead(ROWS,0.53 * mislead(foo(1,TABLE[ROWS / foo(-Arya)][-ROWS]),( ( ( TABLE[-Ygritte][( Sansa )] ) ) ),rule())));
	-0.87
}
};
	if(Ygritte){
	if(( 0.25 )){
	Stark /= y
}
} else {
	protect(Arya,-54,( -51 ))
}
}
assert -bar() : "Nothing burns like the cold."
def foo(Ygritte,Jon,y){
	if(ROWS){
	if(mislead(ROWS)){

}
};
	bar(-( ROWS ));
	if(ROWS){
	if(ROWS){
	-ROWS
};
	Jon -= ( --730.9 / --0.97 )
}
}
def rule(Sansa){
	y;
	protect(dog)
}
var y = -Ygritte
var Sansa = Arya
var dog = 48
def TABLE[-3][i] {
	Hodor -= Arya
}
def TABLE[Stark - TABLE[-dog * --0.71][-ROWS / ( -foo(--COLS) )]][k] {
	Arya;
	if(betray(Arya) / -ROWS){

} else {
	( ( -( ROWS ) ) );
	-mislead(bar(dog,dog,x),COLS)
}
}
var Jon = Sansa
def TABLE[--( -0.15 * ROWS )][i] {
	Ygritte *= Stark
}
assert -dog : "Fear cuts deeper than swords."
assert Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(Jon){
	Jon *= --Sansa;
	if(TABLE[( COLS )][betray(--dog + -0.08 * ROWS / -TABLE[TABLE[--TABLE[bar(-0.39,0.52)][( 83 )] + ROWS][-0.92]][( dog ) - dog / rule(-54,Jon,( ( betray(bar(Ygritte,ROWS),Hodor * betray(destroy() - 0.46 / ROWS * Stark + -( Ygritte ),-COLS,Jon * destroy(Arya,COLS))) ) ))] + ( Jon ))]){
	-72 - betray(TABLE[-1 / betray(54)][( 950.4 * protect() )]) * foo()
}
}
assert mislead(ROWS,foo(-1,ROWS - 0.57 * ( Stark ),( protect(-( ROWS + -Hodor ) / -y,( ( betray(( Stark ),-1) + 1 ) )) ))) : "Fear cuts deeper than swords."
def TABLE[foo()][i] {
	Arya += --0.15;
	ROWS;
	if(ROWS){
	TABLE[ROWS][( betray(-y,-0.14,( -99 )) )];
	if(Jon){
	if(destroy(---y,COLS)){
	Hodor -= 31;
	y;
	-580.94
}
}
}
}
var Sansa = bar(( COLS + COLS ),--71)
def TABLE[-110.661][j] {
	Sansa;
	y -= COLS;
	if(protect(( foo() ))){
	---COLS / Hodor
}
}
def TABLE[Sansa][i] {

}
var Jon = ( x )
def foo(y,Hodor){
	if(0.43 - ---ROWS - Stark){
	if(rule(-betray(( -750.618 / COLS )) * COLS / ROWS,ROWS,bar(-TABLE[( ( ( protect(Jon) ) ) )][-y]))){
	1
} else {
	dog;
	Arya += --0.4;
	Hodor += 0.93
}
} else {
	if(Sansa){
	Stark -= betray(( ( ( -87 ) ) ),( ( protect(-0.3,-bar(Arya,mislead()) / mislead(( Hodor ),x)) ) ))
} else {

}
};
	if(Jon){
	if(destroy()){
	Ygritte *= betray(destroy(),rule(destroy(TABLE[( Sansa )][TABLE[COLS / ROWS][betray(ROWS,( COLS ) - -foo())]],( destroy() )),0))
} else {

};
	Hodor *= ( -800.228 )
}
}
assert -130.9986 : "What do we say to the Lord of Death?"
def TABLE[( Ygritte )][k] {
	Jon -= betray(Sansa);
	-110
}
var dog = -y
var Sansa = x
def TABLE[-bar(-dog) * TABLE[( Sansa )][( ( ROWS ) )] / ( -betray(Sansa) ) / -protect(-COLS,( -( rule(Ygritte) - TABLE[0.58][Hodor] ) ) * -0.34,dog)][i] {
	dog -= -20
}
var Arya = Jon
var x = x + ( -580.4397 ) - 66 + ROWS
def protect(){
	Arya /= Ygritte;
	if(dog){
	dog /= -10
}
}
assert --( -TABLE[Sansa][ROWS] - 45 - TABLE[x * -( -( ( ( 260.82 ) ) - Sansa / Arya ) ) + ( mislead() )][( Hodor )] ) : "One can not simply parse himself"
assert Hodor : "One can not simply parse himself"
def protect(){
	if(ROWS){
	TABLE[betray()][-29];
	( ( destroy(-0.3,-( ( ( foo(mislead(bar(COLS),ROWS),---62 / TABLE[( TABLE[foo()][--betray(protect(( 160.6406 + 0.42 ) * ( -38 ),Ygritte,Stark),( y ) * ( -0.95 ),COLS) * betray(ROWS,---TABLE[-ROWS][-0.25] + ( -0.02 * ( ( ( 0.99 ) ) ) )) - -mislead(-50) / bar(( COLS ),protect(bar(COLS,COLS))) + foo(Ygritte)] )][COLS]) - betray() ) ) )) ) )
};
	( ROWS )
}
assert ( Ygritte ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(dog){
	if(COLS){

} else {
	y *= ---970.7144;
	if(Sansa){
	Stark += protect()
};
	y
}
}
var y = destroy()
var Arya = -68
def protect(x){
	Hodor + 0.38 / foo(0.71,-rule(TABLE[-0.7][y + Ygritte],-1) * -dog);
	Arya /= ( ( ROWS ) );
	x *= ( Stark )
}
assert 420.2853 : "One can not simply parse himself"
def TABLE[( destroy(( ( -0.99 ) ),y,rule(ROWS - destroy(ROWS,x),destroy(-protect(( ROWS ),-76 + -ROWS) + ---( dog ) + ( dog ),---COLS,mislead(--Sansa + Stark * COLS * ( rule() ) - ROWS - ( ( ROWS ) ) + 49 / -0.15 - ( -230.84 + COLS - ( 67 ) ) / Jon,bar(1,Jon) / Arya)) * Ygritte * ( betray(--0.03,x,( TABLE[( COLS )][COLS] )) ),protect(bar(destroy(Hodor,--TABLE[( bar(-0.78,( 1 )) )][--0.69] - ( Jon ))) / protect(y,( ( bar(TABLE[15][Jon],-mislead(destroy(( betray(-1,COLS) )),TABLE[mislead(Arya)][ROWS]),dog) ) - -dog ),mislead()),betray(rule(( ( 1 ) ),bar(COLS))))) + -260.891) / foo() )][j] {
	( ( COLS ) );
	dog;
	Ygritte *= ( COLS - ( ROWS ) )
}
var Stark = ROWS
def TABLE[( -destroy(( ( -foo(-46,-bar(ROWS,COLS + Stark,Stark)) * Hodor ) )) ) - foo(Sansa)][k] {
	if(Hodor / Jon){
	if(0.61){
	bar(ROWS,--0.93)
};
	if(( 46 )){
	if(( x )){
	y -= ( -Jon + -110.37 / -0.99 )
};
	if(-ROWS){
	Arya /= COLS;
	y += destroy(Sansa)
}
}
};
	if(-0.14){
	dog += -33;
	if(destroy(51,360.401)){
	if(betray(COLS,-27 * mislead() / y,COLS)){
	if(-1){
	Arya -= Stark
};
	Arya -= --foo(TABLE[1][--ROWS / TABLE[Hodor][( -x )] / COLS],( Hodor )) - ( x );
	( TABLE[betray(( rule() * Arya + y ))][-56] )
} else {
	if(-destroy() - ( ( 1 ) / -1 ) / ROWS){
	Hodor;
	-1
};
	( ( 28 ) )
};
	if(rule(rule(( Arya ),-( -54 )))){
	if(-rule(( --260.86 ),-( Ygritte ) - COLS / -COLS)){
	Hodor /= mislead() + -240.37 / ( bar(protect(( -x ),x,ROWS + TABLE[Stark][bar(Arya)] * -( Jon ) * ( -( --440.62 - ---1 ) ) + -Jon),( ( 0.73 ) ) / Sansa - --1) );
	if(Hodor){
	if(y){
	Sansa += mislead(-foo(rule()))
}
} else {
	Hodor += ( betray(( TABLE[-70][mislead()] ),-99) );
	if(rule(Stark,-440.7,Sansa)){
	if(rule(Hodor - -TABLE[Ygritte][TABLE[0.37][x]] - -0.56 + Stark) * Jon + ( 99 * COLS )){
	if(-Hodor * -0.38){
	y -= 62;
	if(-1){
	Hodor -= destroy(-Jon);
	betray(-0.01,( COLS ),Hodor * -( -TABLE[y][-betray(-( TABLE[Arya * 66 * ( protect(betray(Stark * TABLE[dog][TABLE[COLS][( Arya )]] / ( ( ROWS ) )) * ( dog )) ) * protect(x,0.81,--280.3 / ( ROWS ))][bar(-0.57,mislead(-88))] ))] ))
};
	( x * TABLE[TABLE[Stark][( rule(Hodor,ROWS,-52) / -61 )]][bar(-55,bar(destroy(( COLS ),-910.15 * Stark) - Arya))] )
} else {
	-6;
	if(x){

}
};
	TABLE[betray(-78,-TABLE[-Stark][-1] + Jon,930.477)][dog]
} else {
	if(( -( 0.74 ) )){
	TABLE[mislead()][y / Hodor];
	( 290.916 )
}
}
};
	if(x){
	500.0376;
	if(y){
	dog /= -bar()
}
} else {
	Stark -= ( Stark );
	if(-0.35){
	Sansa += x;
	Sansa += ( -TABLE[COLS][( destroy(COLS,ROWS,-Ygritte) ) * destroy()] ) / y;
	Hodor += rule(--1 / betray(Jon,( ( COLS ) ),x) - -0.59)
} else {
	-Stark
};
	Sansa *= x
}
}
} else {
	if(TABLE[( Sansa )][COLS]){
	x -= x
};
	Jon += betray(mislead(foo(),-( -97 )),ROWS)
}
} else {
	Sansa += 1
}
}
}
}
assert foo(betray(Hodor)) : "What do we say to the Lord of Death?"
def rule(Jon){
	if(Ygritte){
	-( ( ---x / 0.98 / -( -170.5 - TABLE[Sansa][( TABLE[0.15][----480.9] ) + rule(Hodor,TABLE[foo()][( foo(ROWS,destroy(--( ( Hodor ) )) * -destroy(protect(),Hodor)) ) + Ygritte] * rule(-94,protect(Ygritte)))] ) * -0.19 * y * COLS * Arya ) * -( Arya ) * rule(-x,foo(1 / -1 - 0.27,y)) + destroy(-TABLE[0.64 / ( -( -540.45 ) )][dog]) / x )
} else {
	y -= foo(COLS)
};
	if(( protect() )){

};
	bar(TABLE[-0.7][-0.72],Sansa)
}
def bar(dog,Stark){

}
def destroy(Arya,Sansa,Sansa){

}
def rule(x,x,Ygritte){
	( Hodor );
	Jon *= Hodor
}
def TABLE[-440.102][k] {
	-1 * 0.58;
	y += 0.57;
	Jon += foo(TABLE[rule(--COLS,-0.71 + ( 93 * ROWS ))][Jon])
}
def TABLE[TABLE[bar()][( 41 )]][i] {
	28;
	ROWS;
	Arya /= -( Ygritte ) * COLS
}
assert ( -1 ) + Sansa : "What do we say to the Lord of Death?"
def TABLE[Hodor][j] {
	if(TABLE[TABLE[ROWS][( ( destroy(-0.66) * -( Jon ) ) - ( -COLS ) )] + -0.07][betray(-ROWS)]){
	if(( Hodor )){
	Arya;
	if(Arya){
	if(-600.3){
	Arya += 1;
	( Sansa )
};
	-ROWS
} else {
	Arya -= -COLS
}
} else {
	y += Jon;
	-1
}
}
}
def destroy(){
	TABLE[x][( -TABLE[Ygritte * -610.9113][ROWS] )] / 0.63;
	( COLS - 0.94 ) + ( ( Jon ) );
	Sansa *= -foo()
}
assert -78 : "Fear cuts deeper than swords."
def TABLE[-protect(y,-dog + ROWS)][j] {
	Sansa /= 900.7;
	x
}
assert destroy(Jon) + COLS * ( -Jon ) : "Winter is coming"
var Stark = 15
assert Stark : "Nothing burns like the cold."
def TABLE[( protect(Ygritte,Sansa) )][j] {
	Jon += mislead(protect(COLS,y),370.638 - ( ( -76 ) ),ROWS);
	protect(( ( --destroy(0.38,( Arya )) ) ),--betray())
}
var Hodor = Arya
def TABLE[y][k] {
	if(bar() * -0.42){
	y += Sansa
} else {

}
}
def TABLE[dog][k] {

}
def bar(){

}
def TABLE[Sansa][j] {
	if(740.8){
	COLS;
	0.1
} else {
	x *= ( 98 );
	---foo(( -( rule(Sansa) ) / y / destroy(( -61 )) - destroy() ),( ( betray(protect(ROWS,protect(( betray() )))) * y ) ),COLS)
};
	( ( -foo(( destroy(Sansa) ) + -Jon) ) )
}
def protect(y,Jon){
	if(y){
	Jon /= -520.2 - rule(COLS,( ROWS ))
} else {
	78;
	if(Ygritte){
	Jon /= COLS;
	if(-destroy(Sansa)){

}
}
}
}
def betray(Hodor,Ygritte){

}
var Stark = x
def TABLE[-ROWS][j] {
	x += ROWS
}
def TABLE[-mislead(rule(mislead(( Ygritte )),COLS,( 810.0231 * ROWS ))) - dog][j] {
	Hodor += -TABLE[0.83][Sansa / ( rule(-destroy(--6),-( x )) )]
}
var Jon = dog
def TABLE[-TABLE[COLS][betray(TABLE[mislead(Ygritte,betray(-73,-x,y),destroy(ROWS))][TABLE[destroy(-35,ROWS)][Hodor]],( 1 ) / 420.132,( -( -52 + --mislead(0.44,Ygritte) ) ))]][i] {
	if(mislead() - -28 / ROWS - ( -1 )){
	x *= 10
};
	if(--mislead(( Sansa ))){
	( COLS ) - -74;
	mislead(( Arya ) * Stark);
	if(-420.1){
	Ygritte -= 1;
	y -= -ROWS;
	if(rule(( ( 0.31 ) + ( -Jon ) - 0.49 ))){
	Sansa
}
} else {
	y *= --Jon;
	if(rule(foo() * --1,4) * dog + Arya){
	( 23 );
	y /= Arya
} else {

}
}
} else {
	Sansa /= -( ( -rule() ) ) - -ROWS;
	( Sansa + Sansa );
	if(( betray(Arya / bar(ROWS,47,-( TABLE[Jon][foo(33,y,TABLE[COLS + -1 + TABLE[--( ( TABLE[rule(TABLE[-COLS + ( -betray(-Sansa) )][foo(--1,betray(-x))])][-protect() * ( foo(-680.9) / TABLE[COLS - y][( ( ( Arya ) ) )] )] / ( 20 ) ) ) - betray(betray(( --Stark / y )),( --1 ))][-( COLS ) - TABLE[foo(-0.54,( ROWS ))][39]] + TABLE[-( Stark )][destroy(COLS)]][( -720.83 )])] ))) ) / ( -0.5 / -0.03 )){
	dog -= ( Hodor );
	Stark += y + -( ( Sansa ) )
} else {
	if(COLS){
	Sansa /= -910.516;
	if(( 1 )){

} else {
	if(-0.68){
	Jon += dog;
	Stark /= bar(0.91,COLS)
};
	ROWS;
	if(TABLE[( bar(ROWS) )][-64]){
	y /= 0.99;
	TABLE[ROWS + -0.77 + y][( -0.54 ) + --x] + -( TABLE[--ROWS][-1] )
}
};
	if(-destroy(foo(-0.06,-1),Arya)){
	if(COLS){

};
	Arya *= COLS * ( Jon )
} else {

}
}
}
}
}
assert COLS : "Winter is coming"
var dog = y
def protect(dog){
	if(foo(--0.13,Ygritte)){
	rule(foo(ROWS,----COLS,0.09),rule(Stark),Stark);
	if(rule(COLS)){
	( --( bar() ) / ( Sansa ) ) / -16;
	Jon *= Sansa
}
}
}
def destroy(Stark){
	if(Ygritte){

};
	Jon *= -0.45
}
var Jon = TABLE[( ( Sansa ) )][( ( -Jon * 1 ) )]
def TABLE[y][i] {
	if(-0.69){
	x *= 0.55;
	Ygritte /= 1;
	Arya -= x * COLS
} else {
	Arya -= ROWS;
	-0.77 + Hodor;
	--COLS
}
}
def protect(y,y){
	64;
	mislead(( COLS ));
	Sansa *= 15
}
var y = ( ROWS )
def mislead(){
	x /= Jon
}
assert --( 650.488 * 98 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = Ygritte
assert ( mislead(200.08 - 0.97 - -Jon - -87,( y )) ) : "What do we say to the Lord of Death?"
var Sansa = TABLE[( ( 840.8974 ) )][-betray(bar(( foo(1,Ygritte,destroy(protect(Jon,( ( foo(COLS) ) ),-94),TABLE[-y][COLS])) ),16 * mislead(-0.45)),( dog ))]
def foo(dog,y){
	y -= bar(-Jon / COLS * -66)
}
var Sansa = 950.95
var Arya = COLS
var dog = -46
def TABLE[-COLS][j] {
	if(-COLS * ( dog )){
	Arya *= ( Arya * rule() - ( rule(COLS,-17) ) )
};
	( --0.19 + 290.084 )
}
var x = rule(COLS)
def rule(x,Ygritte,x){
	if(0.96){
	betray();
	if(0.74){
	if(ROWS){
	if(Arya + -Arya){
	0.34 * -480.855 + foo(ROWS,( -protect(( TABLE[( -1 )][destroy(--( ( bar(-COLS * ( betray(COLS,( -12 ) * ( ( -TABLE[Stark][( Arya )] ) )) + betray(0.63 + Arya * -500.44,-22) ),( Sansa ),TABLE[( TABLE[----foo(TABLE[COLS][-Arya]) / Hodor / Ygritte][89] ) + Hodor][---0.9]) ) ),560.55,--Ygritte)] ) * 10,COLS / COLS,-Ygritte) ) - TABLE[ROWS][-protect(( ROWS ),Jon) / bar(Stark) - ROWS * y] - destroy(protect(54,( ( COLS ) )) + ROWS - x,Sansa) / Sansa * -y,32)
};
	Arya;
	if(( ( -31 ) )){
	if(( ( -y + TABLE[Arya][ROWS] ) )){

};
	ROWS
} else {
	Hodor /= TABLE[COLS][x]
}
};
	if(-1 / Arya + bar() + ( destroy(x,protect(( rule() ))) )){
	if(ROWS){
	Hodor *= 1
} else {
	if(Jon){
	Sansa += ROWS;
	Stark
} else {
	Stark += dog;
	if(( --ROWS )){
	dog /= bar(Hodor * ( -31 ),y + Jon * ROWS,COLS);
	-85
}
}
};
	x -= --( betray(Arya - 1 * ROWS - TABLE[ROWS][y],-0.57,-600.59 * Hodor) )
};
	( destroy(ROWS,rule(TABLE[( ( Sansa ) )][-0.89])) )
}
} else {

}
}
var Arya = x
def foo(y,Sansa,Hodor){
	if(470.32){
	y
}
}
def TABLE[TABLE[COLS][--0.42]][j] {
	Stark /= protect(x,ROWS) / -x * foo(( mislead(-0.71,( -95 )) ),y);
	if(-( COLS ) / ( betray(-49) ) + 0.71){
	if(83){
	if(-mislead(( ( -37 ) ) + COLS,betray(protect(x + -1))) * ( y ) + x){
	if(( -Sansa )){
	if(COLS){
	-COLS;
	destroy()
}
} else {

};
	Hodor -= TABLE[y][destroy(-dog / COLS - -Sansa + ROWS / Arya)]
} else {
	dog += ( -96 );
	Arya /= ( 0.3 );
	if(( ( --Stark + Hodor - Hodor ) )){
	Stark -= y
}
};
	COLS
};
	if(( -mislead(TABLE[Hodor][x]) )){
	( y );
	if(TABLE[ROWS][TABLE[( ( --970.32 ) )][1]]){
	Sansa += destroy(-0.05,COLS);
	Arya *= protect(-13,Arya,( Stark ));
	COLS
} else {
	( rule() )
}
}
}
}
assert foo(0.78) : "One can not simply parse himself"
def bar(){
	x += dog;
	destroy(0.02 * Stark,protect(),-ROWS) + -Hodor
}
def protect(dog){

}
assert -85 : "Fear cuts deeper than swords."
var dog = 1
var dog = ( COLS )
var Ygritte = TABLE[x + -( ( ( -55 + destroy(( protect() ) * ( -( foo(0.27,COLS) * COLS ) )) - destroy(( foo(COLS,destroy()) ) / Jon,-dog) ) ) )][mislead()]
def TABLE[( ( --1 ) )][j] {
	Ygritte += mislead(rule(( ( ( -( ( TABLE[( ROWS )][COLS] ) ) ) ) )),-1 / -x);
	if(x){
	if(Stark){
	y += ( -1 );
	Jon += ( ( betray(980.78) ) );
	if(( Jon )){
	Jon -= mislead(foo())
} else {
	if(protect()){
	if(1){
	if(COLS){
	if(TABLE[--Arya * ( ----( ( Sansa ) ) ) / dog][TABLE[( ROWS ) / -Sansa][( -0.78 )]]){
	x *= x;
	if(( ( --( bar() + -530.493 / ( --protect(--1,( ( -0.58 ) ) * -Stark,TABLE[ROWS + ( betray(-Sansa,( ( ( ( -( ( -1 ) ) ) ) ) ) * -0.41) )][foo(--0.03,-( Jon ),33)] - x) ) - Sansa ) ) )){
	( destroy(TABLE[COLS][destroy()]) )
} else {

}
} else {
	mislead(-0.11);
	COLS;
	if(58){
	if(94){

} else {
	if(( 45 )){

};
	dog;
	y
};
	( ( TABLE[ROWS][0.88] ) )
}
};
	if(protect(dog) + -61 * -( ( 0.76 ) )){
	destroy(destroy(Jon,0.84,260.24) / COLS - ( 0.63 ));
	if(-0.52){
	630.1 / -83;
	Ygritte;
	( ( foo(COLS,( -100.552 ),-( x * -47 )) ) )
} else {

}
}
} else {
	TABLE[-dog][-x] + ( foo() )
};
	if(( 28 )){
	if(0.06){
	if(y){
	dog *= ( ( Sansa ) );
	Ygritte /= foo(-( -( -1 ) - Sansa + -960.91 ));
	x *= betray(( -82 ),1)
}
} else {
	y *= 20;
	y - Hodor;
	if(TABLE[COLS][( COLS )]){
	if(-foo(( Hodor ) * 93,ROWS)){

} else {

}
}
}
}
} else {
	if(Hodor){

};
	if(( TABLE[TABLE[x][y]][Stark] )){
	Ygritte /= destroy(COLS * ( ROWS ) - Arya,720.528,-COLS * ( TABLE[-0.8][-( -93 * betray(COLS,Arya) )] ))
} else {
	if(( bar(-ROWS * COLS) ) - ( foo() )){
	x -= destroy();
	dog /= ( ( ( ( Jon ) ) ) )
};
	Stark *= -1 * protect(TABLE[-650.042 - ( 0.74 )][TABLE[ROWS][-Sansa * -( Hodor )] * x]);
	if(Ygritte){
	Stark /= -( ( Stark ) )
}
};
	if(TABLE[970.02][-ROWS * 1 * Jon * ROWS]){

} else {
	if(39){

};
	if(Ygritte + betray(TABLE[( Stark )][( ( 0.72 ) + ( Stark ) + -COLS )],mislead(protect(ROWS,0.19 - ROWS * -( ( foo(73,( mislead(protect(( Hodor ))) ) * ( -ROWS )) ) ),protect(( Arya )))))){
	if(betray(Ygritte)){

}
};
	Ygritte += ( mislead(-63,-640.92) )
}
};
	if(-Jon){
	Jon
}
}
}
}
} else {
	if(--1){
	if(rule(( ( TABLE[-destroy(( ( bar(-96) ) ) + ( -1 ),-( 1 ))][1] ) ),-Hodor,----( bar(44 + Ygritte,Ygritte) ) + TABLE[destroy() + foo(-1 + --mislead(( ( -protect(rule(protect(protect(25)),COLS),-22,-( mislead(-( 0.76 ) * -0.9) / COLS - -1 )) ) )) + -ROWS) * -63][( COLS )] - Sansa * -ROWS / COLS + -( Jon ) / --Stark / Ygritte + -1 + COLS)){
	if(( Sansa )){
	ROWS;
	Stark
};
	-Jon;
	Jon /= Ygritte
};
	y /= ( ( 1 ) )
} else {

};
	Arya /= ( ( -Stark ) )
}
}
var Stark = Sansa
def foo(){
	Stark *= ROWS;
	Stark -= destroy(y,COLS,protect())
}
var Arya = Hodor / ( -mislead(rule(rule(protect(--0.21,( mislead() ) / y,( -1 ))),---Jon)) ) / ( y ) + ( Jon ) * ( -( ( COLS ) ) ) / betray(40.27,( COLS * -66 ))
var Stark = Sansa - -betray(protect() + -Stark + mislead(COLS,0.3,Jon)) + -0.52 + COLS / ( --( -ROWS / ( TABLE[Arya][( ROWS )] ) ) )
def rule(y,Hodor,Ygritte){

}
assert y : "What do we say to the Lord of Death?"
def betray(Sansa,Ygritte){
	TABLE[Sansa][ROWS * -26];
	Ygritte /= 860.068;
	Jon *= -0.03
}
def destroy(Sansa,Hodor,Arya){

}
def bar(Arya,Ygritte){
	COLS - COLS / ( ( COLS ) ) - -0.19 / --7 / 0.96;
	if(( -650.08 + ( -rule(Ygritte,Stark) ) - COLS )){
	-destroy()
}
}
var Arya = COLS
assert ( y ) : "Fear cuts deeper than swords."
def TABLE[--COLS][i] {
	Ygritte /= TABLE[-0.53][2];
	if(10){
	Arya;
	if(-430.58){
	ROWS;
	( dog );
	-( -82 )
}
}
}
def rule(){

}
var x = dog / ROWS
var dog = TABLE[170.6649][Stark]
var Arya = --18
def TABLE[-68][i] {

}
assert betray(-ROWS) : "Nothing burns like the cold."
var dog = ( -0.53 )
var dog = -0.82
assert ( Ygritte ) : "One can not simply parse himself"
var Jon = -0.59 / COLS / Hodor
assert ( ---protect(TABLE[-Arya][0.55 + Jon]) * -y ) * -0.58 / -0.12 : "One can not simply parse himself"
assert -130.43 : "Winter is coming"
def TABLE[Jon][i] {

}
def protect(Sansa){

}
def foo(){
	Stark *= ( -Stark )
}
def TABLE[rule(dog,TABLE[ROWS][0.71])][j] {

}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Arya,Hodor){
	if(betray(1,Sansa)){
	rule(Hodor);
	x *= ( ROWS );
	x += ( -mislead(COLS) )
} else {
	if(bar(Hodor + foo(rule(TABLE[( -7 ) - Hodor][Ygritte]),Stark - Ygritte),COLS)){
	Ygritte *= --0.38
};
	if(-y){
	dog += -dog
} else {
	if(foo(COLS + Hodor,( y ),----1 - x)){

};
	Hodor /= Ygritte
};
	Arya /= Ygritte
}
}
assert --5 / ROWS / 96 + betray(-Ygritte) : "Winter is coming"
var dog = -63
var Jon = -( -foo(COLS,-( ( -0.85 + protect() - -53 / -0.69 + betray(Hodor,TABLE[betray()][Stark],foo(-42 * rule(TABLE[TABLE[mislead(-betray() * bar(ROWS + -ROWS + -Arya,-9 / Jon) / 190.6538,--COLS + TABLE[--92][TABLE[Jon][foo(-Arya * protect(bar(y),-betray(----x,Stark,( protect() + Arya ))) - TABLE[ROWS][--Sansa] / ( 4 ),( Jon )) + -0.11]])][destroy(COLS,-12) + ( y + ( Arya ) ) * ---0.66 / Sansa]][( -25 )],( --TABLE[--71 * --87][-( bar(Hodor) )] - dog / x )),0.67)) ) )) + -1 )
def TABLE[-bar(( -( foo(-0.69,COLS,COLS) ) + -ROWS ))][k] {

}
def TABLE[1][j] {
	y *= rule(betray(-betray(mislead(bar(-( Stark + Stark ),destroy(TABLE[-( TABLE[1][Ygritte] * 48 )][--1],( ( ( Sansa - ( 32 ) ) ) ))),-Ygritte * mislead(TABLE[destroy()][ROWS],bar(75,0.08))),( 47 ))),protect(Stark,mislead(-COLS) - TABLE[( x )][-Jon] * 1,y))
}
var x = Stark
def bar(){
	ROWS;
	if(rule(-( Stark ))){
	Jon += COLS
} else {
	Stark += COLS
}
}
assert ( 0.26 ) : "What do we say to the Lord of Death?"
var y = -0.88
def destroy(Arya,Hodor,Hodor){
	Hodor;
	if(COLS){
	betray(( -COLS ),destroy(protect(TABLE[1 / -450.1 / -bar(-( TABLE[Stark * COLS][bar(( Ygritte ) + ( ( foo(dog,bar()) ) ) * -2 / mislead(ROWS,protect(( 930.2947 ),( -( -( 0.2 ) ) / ( protect(ROWS,x) ) * ( ( 0.8 ) ) ),-1 * -x)))] ),y,--Arya) * TABLE[660.41][protect(-85,( 0.58 ))]][x],-1),-0.33,-1))
} else {
	TABLE[( ROWS * COLS )][-mislead(-0.89)]
};
	Ygritte -= ( ---160.884 )
}
var dog = ( -440.4599 )
var Sansa = -( protect(protect(y) + ( dog )) ) * 820.533
assert ( protect(( -Stark )) + -1 / betray(-destroy(dog)) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -1 + Stark : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = Stark
var Hodor = destroy()
def betray(Jon){

}
var x = 1
assert Jon + -840.269 : "Nothing burns like the cold."
var x = ( ( ( destroy() ) ) )
def bar(Sansa,Jon,Ygritte){
	Stark -= dog
}
def destroy(Sansa,Jon,x){
	y += Arya
}
def betray(Arya){
	Ygritte -= ( COLS )
}
def TABLE[TABLE[( -22 )][ROWS]][k] {
	x -= y / ROWS
}
def bar(Hodor){
	dog *= Stark;
	x += ROWS
}
assert -COLS * COLS : "Fear cuts deeper than swords."
assert COLS : "Fear cuts deeper than swords."
def TABLE[Sansa - Hodor * protect()][k] {
	Stark += -ROWS
}
def rule(Jon,Ygritte){
	COLS;
	Stark *= 45;
	if(( --86 )){
	if(( ( ( -destroy() * betray(0.45) ) ) )){
	ROWS;
	x += bar(TABLE[ROWS][TABLE[( -2 )][Ygritte]])
} else {
	( -( COLS ) )
}
} else {

}
}
def TABLE[destroy()][i] {
	if(destroy(TABLE[--( x - Ygritte + -( protect(11 + ( -410.763 ),TABLE[Hodor][Arya]) ) ) + -protect(-( --( -foo(foo(-480.47,destroy(COLS),Sansa + -Sansa) - mislead(ROWS,bar(COLS)) + ( COLS )) ) + ( Sansa ) ),Arya) * ( -1 )][Stark],1)){
	Arya += COLS * ROWS
}
}
def TABLE[-8][i] {
	Jon *= x
}
def destroy(Ygritte){

}
def TABLE[destroy(( ( ( --0.26 ) ) ),TABLE[COLS][Hodor])][j] {
	Stark /= 390.59 - -( rule(rule(y,COLS,( TABLE[bar(86,x + -500.689)][Jon] )),foo(dog,COLS)) )
}
def TABLE[Arya][j] {
	mislead(TABLE[rule(0.47,TABLE[( 800.16 )][y],( -60.622 ))][bar(-COLS + 13,( ROWS ))] + 84,rule());
	betray()
}
var Stark = -Ygritte
var Arya = --11
def TABLE[destroy()][i] {
	Jon += -dog
}
var Jon = TABLE[ROWS][TABLE[Sansa][-95]]
def TABLE[TABLE[destroy()][( -0.65 ) + destroy(--0.66)]][j] {
	-( destroy(( bar(TABLE[rule(-0.83,Ygritte)][ROWS - Arya]) ),Sansa) )
}
def rule(x,Arya,Stark){
	-rule(( ( ( -x / ( ( y ) ) ) ) )) - destroy(Stark,( foo(destroy()) * mislead(-0.11) ) - COLS * --34,Arya);
	if(TABLE[-y + ROWS - 35 - COLS - ( 0.31 )][mislead(Stark,-( 0.67 ) * --protect(--930.14))]){
	Ygritte -= Ygritte;
	if(( ( -TABLE[( 70.758 / -destroy(( ( --67 ) )) )][-destroy(-ROWS + dog,x,-74)] ) )){
	if(TABLE[320.09][0.48]){
	if(ROWS){
	COLS
} else {
	if(( --( 0.47 ) / y )){
	Sansa *= 950.508;
	if(Arya){
	if(foo(destroy(-bar(x,( -0.16 )),COLS - mislead(Sansa,Hodor,--( ---59 - ( dog ) * Ygritte * rule(( ( ( ( -ROWS ) + TABLE[rule(foo(TABLE[-Arya][Jon],( TABLE[-Sansa + -0.57][y] ) / --( TABLE[TABLE[Ygritte][ROWS]][( COLS )] ),Arya))][TABLE[COLS][Ygritte]] ) ) ),-1,mislead()) )),( ROWS )))){
	Stark /= protect();
	if(0.65){
	rule(ROWS / COLS,dog,0.65);
	if(ROWS){
	y;
	if(( Stark )){
	( -( ROWS / COLS ) ) / TABLE[-TABLE[destroy(mislead())][COLS]][ROWS]
} else {
	Ygritte -= TABLE[( TABLE[Hodor][-91] )][160.183];
	if(mislead(foo(Sansa))){

};
	ROWS * y
};
	if(1){
	if(TABLE[( COLS / mislead(( Stark * COLS ),COLS) ) * Sansa][Ygritte]){
	if(Ygritte){
	-rule(( -46 ),foo(-( 15 / TABLE[( --1 + -x )][( 0.31 * Jon )] ) / -( Hodor )));
	Hodor /= y;
	ROWS
};
	if(Sansa - destroy(( Stark ),( ( COLS ) ))){
	Stark *= TABLE[ROWS][-( -( -( rule(COLS) ) ) )];
	if(( -0.61 )){
	x - dog;
	-6
} else {
	( TABLE[71][-Stark] ) - 0.04;
	Arya += ( Hodor ) - TABLE[bar(bar(11,( ( rule(1,protect(-18),TABLE[( COLS )][Arya + dog]) ) ) + -Stark + ( COLS )))][destroy(destroy(Hodor,bar(-320.14,150.8982 / ( -190.153 ))),TABLE[--TABLE[TABLE[-TABLE[TABLE[ROWS][TABLE[-1][COLS]]][Arya / ( ( -Sansa * ROWS * dog + ( 0.76 ) * -( protect(ROWS) * ( -ROWS + ( ( -0.39 ) + Sansa ) ) ) ) ) * -1 + Sansa]][( x )]][rule(-Jon / -Arya,-390.19) - protect(Ygritte)]][76 / ROWS]) * Ygritte]
};
	0.54 / COLS
} else {
	if(58){

};
	-( Ygritte )
}
} else {
	( destroy(-TABLE[-98 - COLS + ( -( -1 ) * Hodor )][rule(ROWS,TABLE[x][-( protect(bar(( -( -110.605 / Ygritte ) )) + ( betray(dog,--1 / COLS) / bar(( dog * COLS )) )) )])],--( -1 ) * ( -0.58 + Sansa )) );
	if(x + -( betray(-COLS) )){
	y
} else {
	Stark -= TABLE[( ( 0.74 ) )][betray(-foo(COLS))];
	if(( rule() / ( ROWS ) )){

}
}
};
	Stark -= ( -0.89 )
} else {

}
} else {
	Sansa /= foo(-COLS,( -( x ) ),-( ROWS / ( -0.15 ) ) - -TABLE[rule(( -78 ),( -0.21 ))][( destroy(ROWS) + -99 )])
}
} else {
	if(dog){
	-destroy()
};
	( bar(betray(( betray(COLS,dog) )),COLS,mislead(x,COLS)) )
};
	if(1){

} else {
	-mislead(-1,--1) - COLS;
	if(COLS){

} else {
	-rule(( betray(COLS) ) + 780.378,destroy(Sansa,( --Arya + ( -( -650.559 ) + -( ( 63 ) ) - Ygritte - ( 0.4 ) / ( -dog ) ) ),rule(( ROWS ))) * ROWS);
	Arya -= ROWS - -TABLE[-670.027 - destroy(-protect(-140.68 / Jon)) * Sansa][0.61];
	x -= foo(y - -( --0.28 / y ),---bar(rule(dog),Ygritte,-0.86),protect())
}
}
};
	Hodor *= -290.7278
};
	Stark /= TABLE[( Ygritte ) * -( -0.84 )][TABLE[-22][y]]
} else {

};
	( -Sansa );
	Jon -= Sansa
}
} else {
	if(mislead(( ( -mislead(foo(rule(x,-x / -12,-( ROWS ) / --0.81 / 0.11),-430.815 * rule(( dog - Jon ) * 48 - ( -mislead() / foo(COLS,mislead(dog,Ygritte) / y * dog) ),0.37) + 1,( COLS + COLS ))) ) ))){

};
	Ygritte /= Hodor;
	if(0.5){

} else {
	Arya -= ( -rule(TABLE[( 1 )][( -50.66 )]) );
	protect(COLS,82 * COLS / Stark)
}
}
}
}
}
assert -0.16 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = protect(( ( -0 ) )) * ( Arya )
def foo(x,y){
	if(Hodor){
	if(foo(Hodor,foo(rule()))){
	( Ygritte ) + -1;
	if(y){
	if(0.76){

} else {
	( Stark ) / dog;
	Stark /= foo()
};
	0.48
}
};
	if(TABLE[y][540.082]){
	( 280.131 );
	-ROWS + -Stark;
	--mislead(Ygritte / ( ( -TABLE[COLS][destroy(-1) + COLS] ) ))
}
} else {
	if(betray(ROWS,COLS)){
	Sansa /= -( ( TABLE[-80.8 * ROWS][y] ) / ROWS );
	if(---( ( mislead(ROWS,-0.59 + ROWS) / destroy(-0.92,-0.6) ) )){
	Arya *= -TABLE[x][TABLE[0.58][( y )]];
	y *= ( 88 );
	dog /= COLS / -0.8
};
	if(rule(-1,Hodor,-76 + betray(x)) * mislead(Stark / -0.86,Jon)){
	Hodor -= 0.9
}
};
	-rule(( --rule(x,COLS / ( TABLE[( -0.18 / --TABLE[( -Jon )][dog] )][( Jon ) * 67 - 6] )) ),bar(20,Arya)) - -58
};
	Hodor
}
def protect(Sansa){
	bar(( 1 ),--32,ROWS * ( TABLE[destroy(Jon,--23,( COLS ) - COLS)][-betray(53,TABLE[-18][protect(TABLE[x][( protect(55,( -( ( COLS ) ) )) ) + 0.07],-140.389,-( ROWS ))],-0.25)] ))
}
assert -890.7 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = ( --Stark )
assert Jon / ( Stark ) : "Nothing burns like the cold."
assert 10 : "Nothing burns like the cold."
def TABLE[( COLS - Jon ) + destroy(( -dog ),( ( -6 ) ) - --( Ygritte ),-0.52 + Sansa)][j] {
	dog *= ( mislead(( -0.77 ),betray(Jon)) )
}
assert dog : "One can not simply parse himself"
def TABLE[protect(Jon)][j] {
	if(COLS){
	Sansa -= ( Arya );
	Stark -= -42;
	Jon += 31
};
	( ROWS );
	Jon
}
def TABLE[31][k] {
	-Sansa - ROWS + TABLE[dog / bar(-protect(( ( ROWS ) )) / Arya + ( Jon ),ROWS,( Jon ) + foo(( -1 )) / -foo(ROWS,-0.2))][Ygritte] * Jon
}
assert ( rule(ROWS) ) : "Winter is coming"
var Ygritte = ( Hodor )
def destroy(dog,x){
	protect();
	if(bar(-Sansa - -ROWS + mislead(( Arya )),dog)){
	0.51;
	if(-Hodor){
	if(-( Sansa )){
	if(-betray(( TABLE[TABLE[Arya][-Ygritte * mislead(TABLE[-betray(58 * TABLE[( ( dog ) )][protect(-( -COLS ),-destroy()) / ( Ygritte )],( ( bar(-0.9,-42) ) ),betray(Arya,TABLE[protect(protect(ROWS))][-TABLE[COLS][( rule() )]],-destroy(45)))][-x / Jon * -Sansa] * ( 0.53 ))]][0.45] ))){
	( dog )
}
} else {
	if(-0.67){
	if(--35){
	--0.31
} else {
	Hodor *= ( ---bar(TABLE[( destroy(rule(ROWS,( --ROWS / ( Hodor ) ) - Sansa)) )][ROWS],COLS) * ROWS );
	if(Hodor){
	Stark *= protect(dog);
	if(( COLS ) - mislead(-53,COLS)){
	if(-1 - 0.31){
	betray(1 / x,protect(--Hodor,-COLS),--910.05);
	Sansa
};
	rule(Hodor,-( Arya ) / --240.919,COLS);
	if(-0.23){
	--y / ( Jon ) / 97
}
} else {
	COLS
}
}
};
	Stark -= rule(-0.39 * Sansa / betray(( ( protect() ) ),betray(COLS)),-44) / COLS
} else {
	if(( ROWS - Arya )){
	mislead(0.61,76);
	dog *= bar(-protect(TABLE[protect()][COLS],( Jon )));
	Ygritte *= ( ( COLS ) + --0.15 / ROWS )
}
}
};
	Sansa -= -0.61
} else {
	if(0.66 + ( Stark )){
	dog -= 1;
	Arya *= Hodor;
	Ygritte -= ( ( rule(-betray(betray(---( -1 / foo() )),rule(Arya,Sansa),-rule(rule(1,rule(Stark)),ROWS,-57)) + 340.679) ) )
};
	if(( Stark / -( Ygritte ) )){
	0.11;
	if(( ( -0.83 ) )){
	Jon *= ( -foo(-ROWS) )
} else {
	y;
	if(rule(-( -74 - --0.79 / -0.51 / TABLE[Sansa][rule(ROWS,710.1216)] ))){
	bar(-0.42)
} else {
	Jon *= ( -( -betray() / bar(Jon,-( ROWS ) / Jon,-ROWS - 1 + COLS - ( -rule(( ( TABLE[Stark][--0.3] - TABLE[-1][-Stark] ) )) * TABLE[( -0.87 )][Sansa] + mislead(Jon,-Hodor) + -TABLE[Jon - 0.55][Sansa] )) ) ) * ( -63 - betray(Sansa) );
	y
};
	if(( COLS * Sansa )){
	Ygritte /= COLS;
	COLS
} else {
	x += -( -( ( x ) ) );
	TABLE[( ( 1 ) )][COLS] / -( protect(( destroy(27 / ( ( --64 ) ) + -Jon + destroy(rule(-72),Ygritte,y) / COLS,( ( dog ) ),0.3) ),-protect(TABLE[Arya][Arya],Arya)) )
}
};
	Stark *= TABLE[-destroy(-destroy(protect(-ROWS * bar() - ( ( ( rule(( COLS ),COLS,dog) ) ) ),( TABLE[( Hodor )][1 / TABLE[betray(TABLE[COLS][-( -( 54 ) )])][COLS]] ),TABLE[rule()][y] + bar(Sansa))) / ROWS)][mislead(foo(1,-( COLS )),-0.76)]
} else {
	if(y){
	250.795
}
};
	Stark
}
} else {
	Ygritte += -62 * -31 / ( ROWS ) - 85 / ROWS;
	( COLS ) / ( Sansa )
}
}
def foo(Hodor,Arya){
	Arya *= rule(Ygritte,-( x ),COLS)
}
var Stark = ( ROWS )
var Stark = --8
var y = ( ( ( -36 / -45 ) ) )
def rule(Arya,Stark){
	y /= ( destroy() ) + -36
}
assert -ROWS - ( ( Arya ) ) * ( ( ---0.07 ) ) : "Fear cuts deeper than swords."
var Ygritte = mislead(Ygritte,( -870.45 / -Hodor ))
assert ( ( destroy(-Hodor) ) ) * Jon / ( Stark ) - Arya : "One can not simply parse himself"
def TABLE[-( -( 1 ) - ( COLS ) + ( COLS ) * 1 / ( Jon ) ) + dog - 0][j] {
	Sansa += 30;
	if(-550.89){
	Hodor *= ( ( x ) );
	Stark += ROWS
} else {
	-880.188
}
}
var Ygritte = --440
var Stark = mislead()
assert ( ( -COLS / 730.058 + Ygritte + ROWS ) ) : "Winter is coming"
def bar(){
	Jon += COLS
}
def protect(Jon){
	( Ygritte )
}
assert ( Stark ) : "What do we say to the Lord of Death?"
def TABLE[Hodor][k] {
	COLS;
	if(-93){
	if(Jon / Arya){
	protect(rule(-COLS,-70) + dog,-620.398,-COLS + betray(TABLE[-----780.571][-Arya / ( -mislead(0.39) )],0.94,660.2471));
	-58;
	-0.78
} else {
	( Arya ) * -71;
	x /= Sansa
}
};
	Hodor *= ( TABLE[--48 * TABLE[-0.38][COLS] - ( ROWS )][-19] )
}
var Ygritte = -0.15 * 1
def foo(x,Ygritte,Jon){
	Ygritte /= destroy(TABLE[Hodor][Ygritte / Arya],-92) * ( Hodor );
	if(-Sansa * -97){
	Arya
} else {
	Sansa -= TABLE[--( Arya )][-36]
}
}
def TABLE[-COLS][i] {
	--12;
	( TABLE[-0.71][--COLS] )
}
assert protect() : "Winter is coming"
var Sansa = ROWS
def TABLE[mislead(mislead(-mislead(--0.3 - -0.78,-( ( COLS ) ))))][i] {
	-( ( -1 ) );
	( -mislead() )
}
def rule(Hodor){
	y /= COLS;
	if(Jon){
	if(Sansa){
	Sansa -= -68
} else {
	destroy(Ygritte,-3,81) * -betray(-dog * ( y ))
}
} else {
	Jon -= -0.9;
	if(( -Jon + ( ROWS ) )){

} else {
	-rule(protect(),( -1 ),( Hodor ) / ROWS - foo(( rule(x * -82,ROWS,---0.7 + ( ( ( ( 850.07 ) ) / ( ( destroy(betray(betray(76,( COLS )),rule(( ROWS - Arya )),TABLE[mislead(betray(mislead(),-x),bar(1,Ygritte),-dog / x)][-Arya]),foo(-Arya,TABLE[Ygritte][protect()] + ( 8 )) + Stark / ( TABLE[mislead(protect(-( -( Stark ) ),bar(dog,-COLS)))][x] ),( ( 0.01 ) / ( Stark ) + COLS + bar(Sansa,-1) ) / Stark) ) ) ) ) + TABLE[Jon][-0.51]) )));
	Sansa += --( ( mislead(Ygritte) ) )
};
	y /= ROWS
}
}
def mislead(){
	if(-0.02){
	COLS;
	if(( -19 )){
	if(-protect(-0.41,mislead(-TABLE[0.08][0.3],-ROWS))){
	y += COLS
} else {
	if(mislead(55,COLS,ROWS - y)){
	Jon -= -0.01;
	bar(Stark)
};
	foo(COLS)
};
	( mislead(0.69,y) )
} else {
	TABLE[COLS][rule(foo(protect(),COLS),TABLE[( rule(-ROWS / ( 58 ) - --7) )][68])] * -0.41 + y - betray(( y ),protect(foo(),( dog ),-31),TABLE[( bar(( -( -protect(ROWS,protect(-( -mislead(-1) ),56)) + foo(foo(-betray(-foo(Ygritte,Stark - TABLE[( -x ) + TABLE[-1][x / ROWS]][betray(Jon,( 1 )) * COLS] - ---0.24),( mislead(--0.97 / rule(mislead() / dog - ROWS) / -( ( ROWS / 69 ) ) - ( x )) )),( -70 ),protect(---foo(y,( betray() ),mislead(-Sansa,0.14,( COLS ))) + ( x ) * COLS,foo(TABLE[( -y )][protect()] * -x,--1,-1))) / ( Sansa ),ROWS) ) )) )][TABLE[destroy(x,foo(COLS,TABLE[-1][Sansa]))][x]])
}
};
	Sansa -= Sansa / ROWS
}
var Jon = 180.62 - ROWS
assert Sansa : "Nothing burns like the cold."
def protect(Sansa,Stark){
	if(-Sansa){
	370.274
} else {
	Ygritte /= bar(( TABLE[betray(Sansa)][( Hodor ) + Stark] ))
};
	if(--ROWS){
	Jon += TABLE[COLS / -bar(TABLE[-TABLE[TABLE[bar(bar(-bar(-420.1)))][-87]][-44] + TABLE[destroy(--1)][-0.98] * ---0.63][Stark],-protect())][--0.34];
	Ygritte -= -1
};
	x *= rule(( Hodor + COLS ))
}
assert ROWS : "Nothing burns like the cold."
def betray(x,Stark){

}
assert Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Hodor : "What do we say to the Lord of Death?"
var Arya = mislead(670.47,72)
var x = ( rule(( -740.69 ),-mislead(-22 + ( -1 ),destroy(TABLE[y][destroy()])),x) )
assert ( ( 1 ) ) : "Fear cuts deeper than swords."
def rule(Jon){
	Hodor *= COLS
}
def foo(Stark,Arya){
	if(-( dog )){
	Hodor /= ( Jon );
	y;
	ROWS
} else {

};
	ROWS * Ygritte
}
assert Ygritte : "Nothing burns like the cold."
assert protect(y,( Sansa ),( -mislead(ROWS,betray(dog,y)) + -840.8 )) : "What do we say to the Lord of Death?"
assert 34 : "What do we say to the Lord of Death?"
var Sansa = ( ( foo() ) )
assert y : "Winter is coming"
def mislead(Jon){
	if(--0.61){
	if(ROWS){
	-( betray(TABLE[820.03][TABLE[80.7][-1 * -59]],foo(Sansa / bar(-0.34,--Stark,destroy(-( ROWS ),0.51) - COLS / TABLE[foo()][destroy(0.2,Stark)]),protect(),y)) );
	if(betray(x,-400.92)){
	y *= 0.72;
	y *= --0.07 / Sansa
}
}
} else {
	TABLE[betray(foo(bar(-0.71),Jon),bar(betray(TABLE[-0.65][-rule(( COLS ),betray(COLS,( ( Jon - 980.674 * mislead(ROWS) ) ) / ( betray(betray(TABLE[Jon - TABLE[TABLE[-( dog ) * mislead(ROWS,( -0.54 ) + -100.456)][protect()] * COLS][-23] * ( -16 * -ROWS * Jon )][y],rule(protect(Stark / -Sansa,COLS),mislead(y))),y) )))])))][-33]
};
	if(Sansa){
	-1;
	rule(dog)
}
}
def TABLE[x + betray(ROWS,( TABLE[x][0.82] ) - -20,Hodor)][i] {
	if(Hodor){

};
	dog *= -0.75
}
def bar(Arya,Jon,Stark){
	destroy(( -betray(-( rule(TABLE[foo(COLS,Jon)][-1],COLS) ),--( -0.45 / betray(0.5,Arya,ROWS) )) ),Jon);
	-7
}
def protect(Hodor){
	betray(( dog / foo(-0.85,ROWS) ))
}
def mislead(Stark){

}
assert -protect() : "Nothing burns like the cold."
def TABLE[1 + COLS][i] {
	if(0.08){
	if(ROWS){
	Stark += protect()
};
	Arya *= Jon
};
	0.17
}
assert ( -40 ) : "What do we say to the Lord of Death?"
assert --( ( destroy() ) ) * COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = 77 / -0.02
def bar(Hodor){

}
var Hodor = ( -1 )
var Sansa = ( -Arya )
def TABLE[( -0.85 )][k] {
	Jon -= COLS
}
def rule(Jon){
	Hodor -= -Jon;
	690.47;
	dog
}
def rule(y,Jon){
	Jon += betray(Stark) - -y;
	-Ygritte * ( 37 ) - -( --580.457 ) + COLS + -40
}
assert -COLS : "What do we say to the Lord of Death?"
def protect(Hodor,y){
	y -= -( -bar(--TABLE[COLS][bar(6,TABLE[COLS][-y])]) + Ygritte ) * 81;
	if(Stark){
	if(-foo(67 / foo(77,ROWS) - ROWS,protect(-TABLE[( ( y + ( bar(-0.06) ) ) )][ROWS],rule(TABLE[Hodor][-Hodor - Hodor])))){
	if(Arya){
	protect(-ROWS * ( Stark ));
	Sansa /= -betray(--TABLE[COLS][Hodor],TABLE[Hodor][---mislead(( Stark - -( COLS ) )) - rule(-TABLE[-( -y )][( ( foo(dog) ) )],Stark) - ROWS * protect(x)],COLS - -ROWS - ( -ROWS / bar(y) - -x )) + ( TABLE[x - Arya - ( TABLE[mislead(Stark)][mislead(Sansa)] )][-TABLE[-COLS * 0][protect(foo(( TABLE[mislead(betray(),ROWS)][TABLE[66][--ROWS]] ),( y - -350.2 ),( COLS ) + TABLE[( TABLE[COLS][--97] )][-Stark]),rule(( 100 )),-rule())]] )
}
}
}
}
def TABLE[destroy(( bar(-0.87,destroy(( Stark ),1)) ),( -160.23 ))][i] {

}
assert Sansa : "Nothing burns like the cold."
def TABLE[-1 + 1][i] {
	Arya;
	Sansa
}
var Hodor = TABLE[-0.33][rule(COLS)]
var x = betray(Ygritte)
var Stark = COLS
def TABLE[-( --42 ) * 1][j] {
	8
}
def TABLE[Ygritte][i] {
	y += ROWS
}
var Sansa = TABLE[Hodor][83] + rule(-0.15,-COLS) * -640.654
var Hodor = -( rule(1,( y / dog )) ) / 0.57
assert rule() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[COLS][i] {
	Sansa += -1;
	Jon
}
var Arya = -( Hodor )
assert 52 : "Fear cuts deeper than swords."
assert ( COLS ) : "What do we say to the Lord of Death?"
assert COLS : "Fear cuts deeper than swords."
def betray(Jon){
	Jon *= ROWS;
	Hodor /= -980.57;
	if(( -ROWS )){
	if(y * ( 520.82 - Ygritte )){
	Arya /= 64 * mislead(TABLE[( -destroy(-Ygritte) + 7 * ( --x * ( dog ) + ROWS * Jon ) ) + rule(y,( ( y + ROWS - ( TABLE[( -protect(mislead(y,260.916)) / ( -betray(betray(( ( -( -protect(-protect(1),ROWS) / COLS ) ) ))) ) )][y] ) ) )) * COLS][-( Stark )],-96);
	if(mislead(bar(),-Stark)){
	if(Sansa){
	if(-destroy()){
	if(COLS){

} else {

}
} else {
	Arya -= 0.36;
	if(bar(0.27,( Sansa ))){
	destroy(81)
}
}
} else {
	Hodor += ( ROWS ) / ---0.38
}
}
}
} else {

}
}
def betray(dog){

}
assert TABLE[betray(rule(( TABLE[( -0.99 )][( foo(-0.35 + 60,-( rule(ROWS,( -0.23 )) ) / ( Sansa ) * ( Ygritte * ( --53 / dog ) ),rule()) )] ) / ( mislead(( TABLE[0.2 / 0.89][y] ),17) / ( Stark ) ),( rule() ),-0.27) / ( foo(( destroy(Jon * COLS) / ROWS ),ROWS) ),ROWS,-0.91)][y] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = ROWS
def TABLE[-730.55][j] {

}
var Hodor = betray()
var dog = -mislead() + TABLE[Jon][Stark] * -rule()
def TABLE[-y][j] {
	Jon -= foo(mislead(Sansa),x,( destroy(y) ));
	if(Jon / 0.85 + TABLE[( COLS ) * TABLE[-TABLE[( -x )][Stark]][-( 0.24 + COLS )]][( ( TABLE[-70.57][COLS] ) )]){
	if(( ROWS )){
	Arya;
	if(dog){
	ROWS;
	Stark
};
	ROWS
}
} else {

}
}
var dog = ( -600.838 ) * destroy(270.3983,TABLE[( --98 )][-( 1 ) / mislead(63,foo(0.97) - TABLE[Arya][ROWS * 48 - Sansa],( -940.346 ))],Arya) / betray(foo(),( Stark )) + COLS
var Ygritte = TABLE[( destroy(-0.77) )][foo(Hodor,COLS,TABLE[ROWS * 75][TABLE[10][--0.81]])]
def rule(Sansa,x){
	if(1){
	if(COLS + --COLS / foo(TABLE[bar(70 / COLS - -8,rule(( ( ( -0.9 ) ) ),-0.8411 - -TABLE[1 * ROWS / ROWS / ( rule(Ygritte * COLS,Jon + Sansa) ) + Stark][protect(Jon,Ygritte,-1)] * 0.51 / COLS + protect(rule(foo(),0.06 - 0.67 - rule(( Jon ) - Arya / Hodor),TABLE[rule(TABLE[Stark][--Arya],( Arya / 1 ))][( ( COLS ) )]) * ( Sansa ) / mislead(-COLS,Jon,Ygritte) + -99,( ( -0.82 ) * ( ( 1 ) ) + -( ( bar(( ROWS )) ) ) * destroy(-( -Arya ),( mislead() )) )) + ( x ),-ROWS / ( COLS )) * 1)][ROWS - -TABLE[Arya][-Ygritte] / Ygritte])){

} else {
	--0.02;
	Stark -= ( TABLE[( rule(-( ( Sansa ) ) - ( rule(-bar(TABLE[---( 78 )][-52]),y,ROWS) + -1 ) - destroy() + Hodor / ( mislead(destroy(--COLS,betray(foo(-( -x + Sansa + ( ( bar(ROWS,ROWS) ) * -mislead() ) - -39 / ( Stark ) + ( betray(26,( COLS )) ) )))),dog,( Arya )) ),71) )][92] )
}
}
}
def destroy(){
	Jon /= y
}
var dog = -Jon
var Hodor = ( ROWS )
assert 62 : "What do we say to the Lord of Death?"
def protect(dog,Arya){
	Ygritte -= ( ( -340.17 ) );
	if(( -750.129 )){
	Hodor += y
}
}
def protect(x,Ygritte){
	Sansa -= y
}
var Sansa = 110.86
def foo(dog){
	if(-0.85){

};
	Hodor / TABLE[1][COLS];
	x -= x
}
assert Arya : "What do we say to the Lord of Death?"
def TABLE[( --Stark )][k] {
	if(ROWS){
	Arya += ROWS;
	31
} else {
	( --COLS * COLS * Jon )
}
}
var dog = ROWS
def TABLE[ROWS][k] {
	if(x){

}
}
def rule(Stark){
	( ( ( ( protect(Arya) ) ) ) )
}
assert mislead(-mislead(Stark,ROWS),0) : "One can not simply parse himself"
var dog = ( -TABLE[--15][destroy(( protect(-1,-340.075) ),-mislead(TABLE[( Sansa )][-COLS]))] )
def TABLE[( ( TABLE[( ( protect(-0.79 / protect(-0.28)) - -1 ) )][betray(Hodor / ROWS)] ) )][i] {
	Stark -= Ygritte
}
def betray(Sansa,Jon){
	Hodor /= -betray(rule(( ROWS ))) - ( destroy(Hodor) ) - Jon * --ROWS / --foo(bar(--580.9951 / Stark + -y * ( -98 ),COLS,protect(ROWS,TABLE[ROWS][protect()])),COLS,-mislead());
	mislead(-ROWS,( Ygritte ))
}
def TABLE[rule(-betray(bar()),( -40 ) * 0.18,Jon)][j] {

}
var Ygritte = destroy()
def betray(dog,Stark,Sansa){
	COLS;
	if(-1){
	if(-betray(ROWS - betray(-510.3,betray(Ygritte)),51,TABLE[( ( 0.09 ) )][( foo(( x ),( y + COLS - ROWS ) * mislead()) )]) / ( ( -mislead(--Arya - mislead(420.2085 / ROWS) + --77 - ( TABLE[( y )][Ygritte] ),TABLE[-62][Stark]) ) ) + Hodor){
	if(Hodor){
	if(( ( Ygritte ) )){

} else {
	Arya /= -COLS;
	Sansa /= -88
};
	rule(bar()) / COLS
} else {
	if(( x )){
	-72
} else {
	-880.3 + Hodor;
	bar(rule(-51))
};
	Stark -= -( TABLE[( ROWS )][1] ) + ( Jon )
};
	Arya -= ROWS - COLS - TABLE[--Sansa][destroy()]
};
	if(49){

} else {
	if(betray()){
	if(x){

} else {
	dog *= Stark / ( -1 );
	if(betray()){
	Ygritte *= foo(-92);
	Ygritte /= -1
}
};
	x *= 0.89;
	Arya *= dog
};
	TABLE[Jon][-( 0.32 )]
};
	if(ROWS){
	Stark
} else {
	bar(-0.07) - betray();
	Arya / x
}
}
}
assert ( ROWS / bar() - Hodor ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert protect(( Stark )) : "Winter is coming"
assert dog : "One can not simply parse himself"
def TABLE[-( destroy() * ( ROWS ) ) / -260.846 + ( 650.96 )][i] {
	Sansa /= -ROWS;
	y /= ROWS;
	dog += --COLS
}
def foo(dog,dog){

}
var Hodor = TABLE[79][Ygritte]
def protect(Stark,Jon){
	Ygritte += TABLE[Jon][-Stark];
	-0.83
}
def rule(x){
	Hodor;
	y *= rule() - -0.8
}
def TABLE[( ( ROWS + Arya ) )][i] {
	( COLS )
}
var Sansa = ( 860.751 )
def TABLE[dog][k] {
	Hodor *= rule(-x,-( TABLE[( -foo(TABLE[--ROWS][Hodor * -TABLE[( ROWS )][1] - Jon],COLS,Sansa) )][790.42] ),( -0.39 ));
	510.5048;
	-( ( -foo(-( betray(( protect(dog,x) )) - Sansa + -0.07 ),( Arya )) ) ) + Arya
}
var Hodor = 56 + ( ( -( ( Jon * ( ( --Jon ) ) ) ) ) ) + Stark
def protect(Sansa){
	Sansa += 0.39
}
assert dog : "What do we say to the Lord of Death?"
def TABLE[( ( bar(Ygritte,x) ) ) - ( ( foo(84 / -mislead(1,-890.1) / -TABLE[TABLE[( -18 * --0.73 )][ROWS]][TABLE[mislead(0.23,Arya,( ( Arya ) )) - -61 / dog][61]] * Ygritte / 44,0.79,mislead(46,( ---foo(destroy(COLS,0.02),dog) ),( 430.67 ))) ) )][j] {

}
var Ygritte = 0.45
assert 66 : "Fear cuts deeper than swords."
var Sansa = bar(-TABLE[-100.61][rule(( 0.98 ))],dog * -rule(--84 * ( y ) + Sansa * -( Jon ),TABLE[COLS][( -1 * mislead() )] - foo(-dog,-( Stark )),--94),-1 + --protect(y) - x - -betray(( ( -620.05 ) ),-dog))
var Jon = ( ( ( TABLE[-( 33 - Arya - Ygritte )][Arya] ) ) )
def TABLE[--COLS * Hodor][k] {

}
def mislead(dog){
	if(-ROWS){
	Jon -= Hodor
} else {
	Sansa *= -COLS;
	if(ROWS){
	( bar(9,foo(Hodor + ( ( 0.72 ) ),-( TABLE[Jon][COLS] ) / bar(-360,dog + ( Hodor ),-0.01) / -( -19 ) - TABLE[--0.02][x * Stark],-880.88),Sansa) );
	if(--ROWS){
	y *= 0.94;
	Hodor += -69 + 520.002
} else {
	dog *= ( ( TABLE[( ROWS )][( -ROWS )] / y - ( ( ( ( betray(94) ) * 410.4439 ) + ( -12 ) - rule(-79,-mislead(-COLS,81,Sansa),-COLS) ) ) * ( 17 ) ) );
	( -66 )
}
} else {
	destroy(( TABLE[COLS][-1] ))
}
}
}
def TABLE[-0.55][i] {

}
def destroy(Hodor,y){
	Sansa += destroy()
}
def TABLE[rule(ROWS,780.308)][k] {
	betray(Hodor * Hodor);
	dog -= -0.09 * ---0.34 / foo(--1000) * betray() + ( ROWS + Stark ) / -0.09;
	y /= -TABLE[protect(-18 * TABLE[( -1 )][--ROWS * ROWS / TABLE[COLS][COLS]],ROWS,-betray()) - -betray(bar(-0.31,Arya,y))][dog]
}
var Hodor = -mislead(protect(-0.55,Sansa,67),betray(0.22,rule(mislead(foo(betray(-0.74 * -mislead() * ( TABLE[-45 * TABLE[---0.67][-71 / ( -( -11 ) * --22 )] / ROWS / TABLE[-280.722 - TABLE[-0.21 + 1][-mislead(ROWS,---TABLE[Stark][--1] - TABLE[COLS][TABLE[rule(-( -COLS * ( -1 ) * COLS ),betray(),48)][mislead() / Sansa / ROWS / ( ( COLS ) )]],TABLE[430.888][-76])]][mislead(-COLS + y,Hodor - COLS,TABLE[-0.1][Hodor]) / -( -0.8 ) - --290.836 - -foo(TABLE[ROWS][-destroy(bar(-0.06,rule(COLS)),protect(0.9,rule(COLS)))],destroy(ROWS) / ROWS) / rule(( betray(-30) )) - COLS / ROWS]][-( Ygritte )] ),-mislead(COLS,( COLS )))),--rule(-1,Arya),-91) / 270.08)))
def bar(Arya,Stark){
	if(( --mislead(destroy(bar(-510.289,rule(ROWS,Sansa)),mislead(protect(bar(( -ROWS )),Arya),-68),-0.23 - ROWS)) )){
	Sansa -= foo();
	if(y){
	y += -( dog / Ygritte + mislead(( bar(foo(( destroy(bar(),TABLE[TABLE[( ( Jon ) )][-210.691] * Stark / ROWS][Ygritte]) ),dog,-0.45 * 0.88)) * ( TABLE[ROWS][( y )] ) + ( Stark ) ) - 72) ) * ---Jon - TABLE[x][0.81 + mislead(-0.21 / TABLE[-0.02][protect()],( 350.71 ))];
	( ( -mislead(-bar(---Arya * TABLE[foo(-TABLE[destroy(betray() + x - ROWS)][-0.22])][dog] / foo(bar(--COLS),Ygritte,TABLE[dog][0.36]) + mislead(y,0.91,-Ygritte),ROWS,foo(mislead())),dog) ) )
} else {

}
}
}
var x = ( COLS ) * -( protect(( destroy(--( ( Ygritte ) ) + -480.77 + Ygritte) ) + -COLS,TABLE[--0.69 * 1][( foo(( ROWS ),bar(betray(COLS * ( 110.6 ),0.01) - mislead(COLS,720.062,-140.2028)) + ---COLS) )]) ) * Arya - bar()
def TABLE[-( -( ( --rule(TABLE[ROWS][y]) - Ygritte + -( -71 ) * TABLE[1][Sansa] ) ) )][k] {

}
var Jon = -ROWS
var x = 660.39
def bar(Sansa){
	betray(--380.4,-dog)
}
def mislead(Hodor,dog){
	if(TABLE[protect(Jon / rule(Stark))][ROWS]){
	mislead(protect() - protect(-110.334 - ROWS,0.04))
} else {
	Stark *= 1
};
	betray();
	y *= --( y )
}
var Sansa = 24
def foo(dog,Stark){
	( 0.99 );
	if(COLS){
	if(betray(Jon)){
	Sansa /= x / -Sansa;
	if(Sansa - TABLE[0.64][Arya] / ROWS){
	( TABLE[0.78 / -Ygritte][9] ) / ( --20 / -protect() ) * COLS - ( -Hodor ) * ( bar(-COLS,( --( 480.04 ) ) - Hodor) * COLS ) - ---( COLS ) / bar(COLS);
	if(Sansa - --Ygritte - 75 - ( TABLE[mislead(-TABLE[-Sansa * ( -betray(( -ROWS )) ) - ( destroy(0.22,Sansa) )][rule(--( mislead(--ROWS + ( 49 ),( COLS / ( bar(ROWS,TABLE[-COLS][Stark],( ROWS * TABLE[( mislead(( Jon ),-Jon + COLS * ROWS,foo(ROWS,-( COLS ) + TABLE[( -ROWS )][--ROWS])) )][Arya] / ROWS / bar(rule(Stark)) )) ) ),x) ),ROWS) * -95],( ( -83 ) ))][dog] )){
	Sansa *= ( ( bar(( destroy(COLS,ROWS,-96) ),TABLE[Sansa][COLS] + betray(COLS * COLS,bar(x / ( foo(-1 + betray(-0.89 + ( COLS ),-70.131)) * dog ),0))) ) );
	Hodor /= --0.8
} else {
	Hodor;
	Arya /= -73 / 62
}
} else {
	x /= mislead(( Arya ),COLS);
	y;
	Hodor *= COLS * ROWS / destroy(COLS,-bar(( rule(foo(-0.87,destroy(-mislead(-Hodor,mislead(destroy(mislead(0.61,mislead(90.052,---0.09))),Jon,-( rule(Sansa,( -0.18 - -Stark * TABLE[Hodor][63] )) )),-69),-( dog ))),foo(TABLE[--( COLS )][-63])) / TABLE[protect(87,--y,61)][mislead(Hodor,bar(( -53 ))) - ( Stark )] ),63,Stark))
}
} else {
	dog -= --COLS;
	if(Stark){
	COLS * -rule(ROWS) / -rule(-0.76);
	y -= ( 860.54 ) + ( TABLE[rule(( -ROWS ),32 * Arya,( -mislead(Arya) )) + -Ygritte / betray(rule(( ( rule(Sansa * 730.03) ) )),42,Jon) / TABLE[TABLE[-0.77][1]][Jon + ROWS] + ( ROWS ) + ( -TABLE[( COLS )][( ( -foo(-ROWS,84) ) + Sansa )] ) + rule(destroy(),Jon) - --1][foo(-COLS,TABLE[rule() / ( -0.83 ) * protect(mislead(62),bar(( ( betray(bar(protect(COLS / 850.3,y,TABLE[Hodor + Sansa][Arya])),( -0.81 )) ) ),( 1 ),TABLE[Arya][32]),( bar(foo(-Sansa - -destroy(-( 0.23 ),-( ( -y ) )))) ))][-foo(( -COLS ),COLS) * ( COLS * Stark )] + --0.33,destroy())] ) - --38
}
};
	if(destroy(ROWS)){

};
	Stark *= x
};
	( Arya ) - x
}
def TABLE[1][j] {
	85;
	if(betray(-ROWS,rule(---( 11 ) + y,Ygritte)) + -destroy(-0.53)){
	x -= TABLE[-0.32][Arya]
}
}
def TABLE[1][j] {
	y;
	TABLE[-950.32][protect(Stark,54)] / --( mislead(( bar(COLS) + TABLE[-Ygritte + protect(-1,x,Hodor)][-Stark] - ROWS + ( --TABLE[COLS][rule() - COLS] ) ),---Arya - 20,( 1 )) * -0.68 ) - dog;
	if(destroy(TABLE[-( -destroy(destroy(( -protect() ),rule(-COLS)),dog) - rule() ) + -Hodor][TABLE[( -TABLE[40.321][Ygritte] )][foo(x + y + COLS)]] * betray(1,-TABLE[ROWS][Arya]),Ygritte)){
	rule(TABLE[-Ygritte][TABLE[Stark][TABLE[( -62 )][-TABLE[-28][-Jon]]] + -Sansa],98,500.026 * 82 / ( -93 ) / Hodor);
	if(betray(y)){
	y += Ygritte;
	if(77){
	if(foo(mislead(ROWS - ( bar(mislead(( -( mislead(-( foo(bar(25,( Sansa )),x,( -TABLE[-ROWS / x][-0.4] )) * bar(-rule(( ( Arya ) ),TABLE[-580.648][Arya])) ),-( ROWS - bar() / Sansa )) ) )),0.97) + -1 ),0.96),Sansa,x)){

} else {
	COLS
};
	dog *= dog;
	x -= betray(-26 / -TABLE[-100][-89] * betray(( ( -foo() ) ) - betray(( Ygritte ),-1),-destroy() + ---0.53 * ROWS,( TABLE[foo(-26,ROWS)][( ( -0.24 * ( ( Ygritte * ( betray(foo(Hodor,ROWS),( Sansa )) ) - betray(COLS,( bar(mislead(mislead(-( 0.1 ),1,betray(Arya)))) ),x) - ( TABLE[TABLE[1][mislead(( COLS ),16)] * Ygritte][-1] ) / 65 ) - TABLE[( ( betray(protect(( COLS ),Arya,bar(( Sansa - ( ROWS ) ),1,( 1 ))) / -1,-1) ) )][foo(( protect(0.79,-100) ),0.51)] ) ) / betray(--73,destroy(mislead())) + ( protect(( TABLE[rule(-43)][destroy()] ),x) ) / -betray(( ( bar(( foo(betray(Hodor,( -ROWS / 1 / destroy(( bar(y,betray(( ( protect(-32,-Ygritte,( --TABLE[0.33][-( COLS - 88 - ( -destroy(0.91,rule(TABLE[--0.71][540.9636],( bar(TABLE[-COLS][rule(TABLE[56][destroy(( Hodor - COLS ),( -Hodor ))])]) / -( ( 16 ) ) - --rule() ),-COLS),-Hodor) ) )] * bar(Hodor + TABLE[( ( ROWS ) ) / ( TABLE[( COLS ) - ( ( Ygritte ) )][0.03] )][( ( ( -betray() ) ) )]) )) ) ))) ),dog) * Arya ),Stark),x) ),destroy(-x) * 97 / ( ( 22 ) ),-mislead(( -COLS ),80.335)) ) )) + ( Stark ) + ROWS * ( TABLE[Ygritte][87] / 1 ) ) * mislead(Jon)] )) + ROWS / TABLE[1][TABLE[0.04 / ( destroy(Ygritte) ) - ( -1 )][-0.41]])
} else {
	if(-1){
	62;
	x += TABLE[( ( bar(TABLE[---mislead(TABLE[( ( -( Sansa ) ) )][rule(( ( bar(COLS,destroy(( -101 ))) ) ),-1)]) - 710.283 - ( -( Jon ) - ( -0.89 ) ) * Arya][0.8],Stark) ) )][-170.6888] + COLS * foo()
} else {
	ROWS;
	dog += COLS
};
	TABLE[17][( -dog )]
}
};
	Hodor - --40.7
} else {
	if(COLS - -betray(ROWS,-( -1 )) / ( -( betray(dog,( mislead() ),x) ) ) + -34 * -940.0066){

};
	Arya += bar(COLS,( ( Jon ) ))
}
}
def betray(){
	-0.78;
	COLS - TABLE[destroy(x,Stark)][-protect(TABLE[mislead(Arya)][0.2]) / -betray(Stark,TABLE[( COLS )][Stark / Ygritte])]
}
def betray(Jon){
	-COLS
}
var Jon = y
var dog = dog
assert betray() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( ( -35 ) ) + mislead(ROWS,-0.1)][k] {
	if(betray(TABLE[rule(foo(-Stark),dog)][-Arya],Ygritte,82)){
	if(( -( foo() ) * --86 - 0.65 )){
	y /= ( Ygritte );
	( ( COLS ) * protect(( -8 ),--1 - rule(dog)) )
}
} else {
	Jon *= foo();
	Stark /= ( 0.09 )
};
	if(-protect() - Hodor){
	if(Jon){
	Hodor += betray(( x ) - -Jon * rule(-0.49,-TABLE[( 48 ) + -0.81 / Sansa][-64]) - ( TABLE[-1][---63] ) + COLS,TABLE[Stark + COLS - ( foo(0.33) )][( ( ( -ROWS ) ) )],1);
	TABLE[betray(y - -( -dog * TABLE[( ( 0.31 * COLS ) )][-32] * ( -betray(ROWS,( -0.77 ) - Arya) - 8 ) - destroy(( -70 )) ))][-( ( ROWS * -860.44 ) / -mislead(--400.402) - mislead(COLS,protect(betray() - protect(( Ygritte )),0.14)) + ( TABLE[bar(-210.776,bar(-( Ygritte )))][Jon - 77] ) * TABLE[ROWS][( Hodor )] ) - ( COLS )];
	dog += ROWS
} else {
	( Stark );
	if(Hodor){
	y -= -Jon + destroy(-0.36,-( betray(Ygritte,( -1 )) ));
	if(78 / foo(betray(( ( mislead() ) ),-0.48)) + COLS){
	( ( Arya ) )
} else {
	Ygritte += -0.33 * -protect(ROWS * foo());
	0.62
}
}
};
	Ygritte /= TABLE[( ROWS )][COLS]
} else {
	if(--Sansa * Arya){

} else {
	Stark /= ( -( protect(-rule(-Sansa),dog,ROWS) ) );
	if(TABLE[TABLE[mislead(( -( 1 ) ))][-COLS + protect(Sansa,COLS,ROWS)]][bar(-Stark / Arya)]){
	if(( TABLE[betray(COLS * y,COLS)][-37 * 0.86 - -27 + 27 * ( mislead(-( Stark ),-96) )] )){
	Arya /= bar(( 0.11 / ( ( betray(-Stark,y) ) ) ));
	if(-0.11 - ROWS){
	Arya /= Arya
} else {
	if(( -Hodor - 0.69 - rule(12) ) * 0.04){

} else {
	if(-Ygritte){

}
};
	if(x){
	if(bar(Sansa)){
	Ygritte += ( -34 );
	0.97
}
} else {
	COLS;
	Sansa /= COLS + foo(protect() * ROWS,1)
}
}
} else {
	if(( COLS )){
	( -1 );
	if(ROWS){
	if(Arya){

};
	( destroy(-rule(( TABLE[-99][0.02] ))) ) * mislead(Ygritte,-90,--0.16)
} else {
	( ROWS );
	COLS;
	dog /= ( COLS )
};
	dog += --rule(Sansa)
};
	if(-Arya){
	( y );
	Jon *= -( -610.1 )
};
	Arya /= ( TABLE[-TABLE[Arya][protect(bar(( ROWS ),TABLE[Ygritte][( ( ( mislead(-1) ) ) ) - COLS]))] + -( COLS ) - mislead(COLS,Hodor) / -protect(ROWS)][Sansa - ( bar() * ( betray(destroy(( ROWS ),-770.683)) / -300.8 ) )] )
}
}
}
}
}
def mislead(){
	( Ygritte );
	if(rule(Jon)){
	ROWS;
	if(TABLE[protect()][ROWS]){
	Arya -= -bar(Jon);
	if(dog / COLS){
	Stark -= ( 1 )
} else {
	if(-COLS - ( rule(( dog ),15) )){
	Sansa -= -64;
	dog *= ( Stark );
	-betray() - Hodor
} else {
	Hodor -= -320.888;
	if(( -( ( ( ( ( ( COLS ) ) ) ) ) ) - Stark )){
	x *= -0.95
};
	y -= Arya
};
	if(( Arya )){
	if(Arya + -TABLE[x][( ROWS )]){

} else {
	x *= ( rule() * 0.37 );
	if(0.26){
	Arya += -( ( TABLE[dog * rule(--0.11,Jon,ROWS)][Ygritte] * -1 + bar(bar(( -( Arya + TABLE[Hodor / ( rule(mislead(-60.14) + -0.21) )][Sansa] ) + ( 0.27 ) * -950.9 )),-bar(ROWS,-940.1196,-ROWS + TABLE[ROWS][-dog * mislead(betray(),0.8,-0.18) + -21])) ) + -( -ROWS ) ) * -Jon / bar(x) + -Stark
}
};
	ROWS
}
};
	betray(0.66,TABLE[Stark][80])
}
} else {
	Ygritte -= Sansa;
	if(COLS){
	if(COLS){
	33;
	Ygritte *= -0.85
} else {
	destroy(TABLE[COLS][COLS],mislead(rule(TABLE[( x )][dog],Sansa),-70 / ( ( Ygritte ) ) + COLS / TABLE[-0.28 - TABLE[destroy(TABLE[mislead()][TABLE[Jon][bar(-Ygritte) / rule(y)]])][( 1 )] + -0.02][( ( destroy(Stark) ) )]),( ( Arya ) ));
	if(Sansa){
	x += Sansa;
	if(protect(Stark,TABLE[( protect() )][ROWS]) + COLS - 0.59){
	( -TABLE[--0.92][-( betray() )] );
	if(( --Arya ) - x + destroy(y,0.4,-( betray() * ROWS ) / ( ( mislead() ) )) + ( Ygritte ) - COLS / -protect(mislead(( ( bar(( -0.75 ),-COLS,TABLE[dog][destroy(Arya,( betray(mislead()) ))] * ( -COLS ) + ( -1 )) ) ),Ygritte),( Sansa ))){
	if(( -( Jon ) )){
	( ( -Arya + COLS ) )
} else {
	-ROWS * ----0.85 * ROWS
}
} else {
	if(1 - 0.18 / COLS + ( COLS )){
	if(-0.79){
	if(-COLS){
	if(rule(ROWS,y,Ygritte)){
	if(-0.41){
	-rule(TABLE[ROWS][( COLS )],destroy(protect(Hodor,10),0.34,betray(bar(-( COLS )))),dog);
	Hodor += 64
};
	Stark /= betray(foo(-bar(ROWS) * TABLE[82][31]),( --65 ))
} else {
	Sansa;
	TABLE[( dog )][mislead()];
	if(0.29){
	if(Jon){
	Jon *= --0.8;
	x /= --20
}
}
}
} else {
	y += TABLE[( mislead() )][( dog )]
}
};
	Sansa -= foo(TABLE[x * -ROWS + destroy(rule(),-1) / ROWS * ( ( TABLE[mislead(-1,( -1 ))][protect(bar(--( ROWS )),( -COLS ))] ) )][( ( TABLE[TABLE[--84][-810.102]][dog] ) )],bar(-79 * 1)) / -COLS
} else {
	y -= x;
	if(-920.293 + 59){
	( -destroy() + Sansa )
}
}
}
};
	Ygritte -= ROWS
} else {
	Stark
};
	x
}
}
}
}
var Arya = ROWS
def TABLE[-protect(mislead(( y * -( COLS ) / TABLE[x][-foo()] ),( ( -51 ) ),COLS),protect(dog,TABLE[y][0.81]))][k] {
	Arya -= Hodor;
	Arya *= -ROWS + -COLS / ( --( -( betray(rule(ROWS,Ygritte)) ) ) )
}
def protect(){
	if(COLS){

} else {

};
	if(TABLE[TABLE[TABLE[TABLE[610.665][Arya]][0.7]][TABLE[x + Sansa][450.88]]][-17]){
	if(y){
	if(COLS){
	dog
} else {
	if(dog * mislead(TABLE[TABLE[( bar(betray()) )][COLS]][-( TABLE[1][-( Sansa ) * y] ) - COLS],( ( Arya - ( -610.6 ) ) ),61)){
	Stark /= y;
	if(-70.89){
	ROWS
};
	if(Jon){
	if(ROWS / TABLE[protect(1,-foo(bar(-mislead(--0.74 / -21,( -protect(Arya,( ( 69 ) )) + -1 )) * mislead(COLS) / ( 0.75 ) - ( -COLS ))),---( y - --37 ))][ROWS]){

} else {
	Ygritte / -37;
	if(-rule(TABLE[Sansa][Ygritte])){
	if(protect(-( ( ( rule(COLS) ) ) ),Stark)){
	if(-760.57 / ( COLS )){
	if(COLS){
	if(mislead(protect(),Jon)){
	660.9;
	-( ( ROWS ) )
};
	Sansa -= -( rule(( destroy(betray(--COLS,( ( -( ( -COLS ) * -78 / -17 / betray(dog + destroy(( ( Jon ) ))) + COLS - Jon / 170.1 ) ) )),Stark - ( ( 1 ) ),y / -( Jon )) ),TABLE[Ygritte - foo(-64 + ROWS) * ( Arya )][340.058 * -protect(--69,-destroy(( ( ( rule() ) * bar(0.92) ) ),-0.27))]) ) + Sansa
} else {
	10
};
	Jon += Sansa
};
	-1;
	x -= 0.53
} else {
	if(destroy(COLS) * Stark){
	( COLS );
	Jon -= ROWS;
	-69 - Stark * -TABLE[-880.28][-foo()] / COLS + mislead(y) * -0.46
}
}
}
};
	betray(-betray(dog,-Jon),--0.66)
}
}
};
	if(mislead(foo(bar(dog,30.96),Sansa,-1),COLS)){
	ROWS;
	y -= -rule(ROWS - ( betray(-rule() * 0.15) + ( TABLE[COLS][Stark] ) ),( ( COLS ) ));
	if(foo(COLS)){
	Arya * -mislead()
} else {
	Stark /= ( COLS )
}
}
};
	dog -= ( -180.38 ) - Stark
}
}
def TABLE[TABLE[--ROWS * -TABLE[y][( 0.66 )] * bar(bar(--foo(COLS,Stark),destroy(-81,Jon) + -34))][dog]][j] {
	if(0.82 / Arya / Jon){
	if(0.98){
	Stark *= foo(rule(--betray(x - COLS / -( 21 ) / ( foo() ) - ( TABLE[destroy(TABLE[y + Hodor - ROWS][ROWS + -34])][dog] + protect(ROWS) * ( COLS ) ) + 150.9,-0.45 + -Sansa) * -( -( betray(0.69 * destroy(48,( ( -0.24 ) )),-( 81 )) ) * ( Ygritte ) ) * ( ( ( ( -Sansa / -betray(-TABLE[protect(bar()) - --1][Sansa],-( y ),( -betray(---( Hodor ) + ( foo(( ( -Stark ) ) / TABLE[310.5129][destroy(( ( -TABLE[TABLE[Arya][( -y ) - ( y )]][mislead(Jon,-0.4)] * 89 ) + TABLE[destroy(COLS - ( -380.333 + ( 85 + Arya + mislead(76) ) ) + 75)][----x * ROWS] ),y) - Hodor * betray(x)] / Stark / --0.56 - COLS,destroy(( ( -x / ( y ) ) ),0.64)) / 0.68 * protect(( ( ROWS ) ),-30 * TABLE[ROWS][-67],-990.11) - TABLE[betray()][( ( -destroy(Sansa,dog,y) ) )] ),Sansa,0.15) - TABLE[ROWS][-70] )) - ( dog ) ) ) ) ),ROWS),rule(),TABLE[-150.54][--( ROWS )]);
	ROWS;
	Stark -= TABLE[Hodor][-0.26]
} else {
	if(( ( 28 ) )){
	( -rule(( Hodor ),-mislead(( dog ),Sansa),( destroy(( ( betray(ROWS,( -0.95 )) ) - Stark )) )) );
	if(1){
	if(( foo(270.4) )){
	Sansa /= -0.79
}
}
} else {

};
	if(mislead(x,ROWS,bar(--0.78))){
	y -= ROWS;
	if(-ROWS){
	if(14){
	-370.9519
} else {
	COLS
};
	Hodor -= ( Stark )
}
};
	Ygritte -= --0.55 - ROWS * ---8
};
	Stark *= ( -0.17 / foo(--0.15,ROWS) * Hodor )
};
	dog += ROWS
}
def TABLE[( --17 )][j] {
	x *= -ROWS * COLS + rule(dog);
	Hodor *= -0.78
}
def TABLE[TABLE[( betray(Ygritte) )][Stark]][k] {
	Stark /= protect(ROWS * y)
}
def TABLE[80.84][j] {
	if(0.5){
	( COLS )
};
	dog *= -290.514 / TABLE[0.59][protect(-Ygritte)] + -37 - ( -ROWS ) - ( 0.39 ) - -ROWS;
	if(foo() * --590.7 / Arya / Ygritte){

}
}
assert y : "One can not simply parse himself"
def protect(y,Hodor){
	-TABLE[-TABLE[460.528][destroy(450.92)]][( TABLE[-1 / -betray(160.2411) * x - Ygritte][-70] ) + Jon];
	if(--( protect() )){
	if(ROWS){
	0.62
}
} else {
	Arya /= ROWS;
	Sansa += COLS
}
}
def TABLE[Ygritte][k] {
	if(COLS){
	ROWS;
	x += COLS
} else {

};
	90
}
var y = ( ( x ) )
def TABLE[( dog )][k] {

}
var Stark = ROWS
def TABLE[( ( ( ( ( ( -( 0.79 ) ) ) ) ) ) )][k] {
	if(betray(x,Ygritte,ROWS)){
	x /= -67
};
	Hodor /= ( Sansa )
}
def TABLE[ROWS / -0.49][i] {
	if(( y )){
	COLS
};
	Ygritte /= TABLE[protect(( ( -TABLE[-y][-dog] ) ))][-Hodor];
	dog
}
def TABLE[TABLE[-betray(-1,dog)][( betray(TABLE[1 + Jon][340.8],--( Jon ) - ( Ygritte )) )]][k] {
	rule(( TABLE[foo(COLS / Arya) - ( COLS )][( foo(rule(---( ( Stark ) )),-( -y + protect(Jon,( Hodor )) * ROWS )) )] ));
	-rule(-1,Ygritte,( ROWS ));
	protect(ROWS,rule(( ( 0.11 ) )),-0.51) - ROWS
}
def foo(Stark,dog){
	if(-( COLS )){
	x *= ( COLS );
	dog -= betray(-Ygritte,protect(mislead(( 510.4156 ) - COLS),( -Hodor )),( 66 ))
};
	dog /= 0.89;
	Stark *= --42
}
assert Hodor : "What do we say to the Lord of Death?"
def betray(Stark){
	-( 860.8 ) - 1 / COLS / ( 0.73 + ( ROWS ) )
}
def TABLE[-90 * foo(ROWS,TABLE[( -( -ROWS ) ) * foo(ROWS,( ( ROWS ) ))][( ( ( COLS / 0.04 ) ) )] - ROWS,TABLE[rule()][( Hodor + --rule(-COLS) )])][j] {
	x /= ( -61 );
	Hodor += Stark
}
def rule(Jon){
	if(( ( -( 1 ) ) )){
	-dog;
	mislead(x / ROWS + -y,bar() * ( y ))
}
}
def betray(){

}
assert Sansa : "One can not simply parse himself"
assert -protect(( destroy(-28) )) : "What do we say to the Lord of Death?"
def rule(Hodor){
	Stark -= -mislead(-Ygritte - mislead(),-betray(protect(( COLS + -Stark ),ROWS,( -TABLE[TABLE[0.45 / 28 / TABLE[TABLE[( TABLE[COLS][Arya] )][TABLE[( ROWS * ---20 )][47] + 0.12]][ROWS] * Ygritte][( 24 )]][Hodor] )),( ( COLS ) ),-Ygritte),41)
}
def mislead(Sansa){

}
var x = Ygritte
def TABLE[--550.88][i] {
	if(-COLS){
	Jon -= protect();
	Hodor /= -( ( 48 ) );
	-750.79
};
	y *= -510.05
}
var Hodor = destroy() + -ROWS + TABLE[-( 29 )][( ( ROWS ) )]
def protect(){
	if(-73){
	Stark *= ( 70 )
} else {
	if(x){
	destroy(foo(( -1 ),( TABLE[11][destroy(Stark)] * ---TABLE[-13][y] ),Hodor),Jon,( ( protect(protect(rule(Sansa,-mislead(x,TABLE[( -( Ygritte ) / x )][-0.24])))) ) ));
	if(980.662){
	if(( protect(ROWS,ROWS + COLS,( Arya )) )){
	if(ROWS){

} else {
	Jon /= Stark;
	Hodor -= ( foo(Sansa,x) ) + ROWS
};
	y *= foo(Stark)
};
	-TABLE[( 0.24 )][Stark];
	Arya *= 490.539
}
} else {
	if(Sansa){
	( ( TABLE[TABLE[Sansa][TABLE[destroy(75,Jon * mislead(( ( -0.1 + mislead(( -foo(rule(-48,x * -860.2,Arya),dog) + --64 ) * COLS * dog - -Stark,protect(bar(Ygritte),TABLE[----1][bar(---1 - betray(86),-Arya)] - COLS - ( COLS )),-0.69) ) ) - -570.579) * TABLE[520.8141][-ROWS / -0.1] / COLS - dog)][---ROWS]] + Jon][( 0.94 )] ) )
} else {
	( 51 - 0.93 - destroy() + 37 )
}
}
};
	bar(( ROWS ),-ROWS * -11);
	ROWS - foo(( ( --( Arya ) * mislead(-TABLE[TABLE[-1][y - COLS + betray(COLS / Ygritte,-( ( rule() ) - Sansa )) - dog / -1]][destroy(0.21,( ( Stark ) ))],-COLS) ) ),Ygritte)
}
assert -TABLE[Arya][-( 0.13 ) + ROWS] : "What do we say to the Lord of Death?"
assert ( --0.27 + ROWS ) : "One can not simply parse himself"
assert -1 / COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(Sansa){
	Sansa *= -0.66
}
assert 660.167 : "What do we say to the Lord of Death?"
def TABLE[dog][j] {
	if(ROWS - ( -46 )){
	Arya -= -0.02;
	if(rule(( ROWS ),protect(Ygritte,bar(COLS,( Ygritte )),rule(ROWS,betray())))){
	dog *= 58;
	--25
} else {

};
	if(ROWS){

}
};
	-Ygritte - ( foo() * Ygritte / y + rule() - ( -rule(--300.68 + 79 / ( Sansa ),dog,dog) * -39 ) + 0.87 ) * --0.37
}
def TABLE[-dog][j] {

}
var Jon = -destroy(170.761 + betray(TABLE[ROWS][( ( TABLE[TABLE[0.62][-rule()]][-70] ) )],Ygritte)) - ( TABLE[COLS - TABLE[mislead(Stark / ( -( COLS - betray(( betray(Hodor) )) / TABLE[rule(--1 - ( y ),-91)][TABLE[protect(y)][rule(150.57 + Ygritte + COLS + dog,Arya)]] / -48 ) ) - -Ygritte / 580.1 - ( ( 67 ) ) * 0.81 / destroy(-Arya - 0.31,mislead() - -1),-bar(COLS,0.64) / TABLE[-0.52][y])][-0.91]][ROWS] ) - dog + -dog
var Stark = COLS
def foo(Jon,y){
	-bar(destroy(--35,Ygritte,TABLE[-1][-Sansa]),( -Stark ));
	Sansa -= y;
	Hodor
}
def foo(Sansa){

}
assert COLS : "Winter is coming"
def TABLE[-( ( -COLS ) * 1 )][k] {
	730.5;
	( ( COLS ) );
	TABLE[-0.1][-220.5]
}
var Arya = 0.42 - -Ygritte
def TABLE[-TABLE[COLS][Stark]][k] {
	if(( ( -Jon * -940.585 ) * ( destroy(Arya) ) )){
	if(x){
	( ( TABLE[x][( ( ( 39 ) - ROWS ) * y ) * betray(1)] ) );
	if(COLS){

} else {

}
};
	if(0.1){
	Stark *= --23;
	if(protect(-1 / ( ( -Hodor ) ) / ROWS,----0.79 * ( mislead() ) - rule(x / COLS,-730.8),Jon)){
	if(-mislead(ROWS,destroy(COLS,ROWS,protect(( Hodor ) * ( ( -0.26 ) ),Sansa)))){
	if(rule(-ROWS + COLS,mislead(( ( -87 ) ),Ygritte),TABLE[-bar(-0.68,COLS)][Ygritte])){
	if(-0.98){
	Hodor += ( -57 - x );
	dog *= Stark
} else {

}
} else {
	Stark /= COLS * TABLE[Ygritte][dog]
}
};
	ROWS
} else {

}
};
	bar(52,x)
}
}
def TABLE[-COLS][j] {
	Sansa -= -0.16
}
var Arya = ( -4 - -ROWS + destroy(( rule(protect()) ) * 1 / --( -( -ROWS ) + dog ) - ROWS) )
assert ( Sansa ) : "One can not simply parse himself"
var Stark = x
var Arya = dog / x
def TABLE[( mislead(bar(-1,-foo(( -74 ) / ( TABLE[-0.42][-dog / -( -foo(x) ) - -0.71 - bar(-( -1 + Jon ) / ( foo() ),( ( ---0.39 ) ) / --240.24,x)] - mislead(Stark,protect(( Ygritte ),-( Arya ))) )) * --Ygritte / Stark + TABLE[-betray(-0.32,ROWS) * ( Jon )][mislead()],( 30 ) / rule(dog,( ( Hodor ) )))) )][j] {
	if(-( --foo(( ( -( x ) / -61 ) )) )){
	if(960.9){
	Stark *= ROWS;
	if(-COLS){

}
}
};
	38
}
assert COLS : "Winter is coming"
var dog = -79
assert protect(ROWS,bar(TABLE[TABLE[rule(TABLE[dog / betray(protect(Stark,COLS * --Hodor + foo(TABLE[mislead(COLS,( ROWS ))][ROWS / COLS],70.03),Jon),( betray(30,rule(0.34,TABLE[-42][Ygritte])) ),Jon)][x],Jon + -Arya / foo(-( COLS / -Jon )) + -0.6)][ROWS] - ( -1 ) + -ROWS - y][-COLS * Jon])) : "Winter is coming"
def TABLE[( TABLE[COLS][( TABLE[( -Stark ) - dog - ROWS][-( COLS ) / rule(mislead(1)) - COLS / 0.48 - Ygritte + Arya / -630.4] )] )][k] {
	y *= COLS * Jon
}
def TABLE[Ygritte][i] {
	dog /= -( -0 )
}
def TABLE[rule(( -20.643 + TABLE[-10.954][-0.22] ),0.09 * Arya - mislead(( TABLE[Jon / 0.82 + -Arya][COLS] ),-ROWS))][k] {
	Stark += ---( destroy(( rule(-73) ) / -92 * Sansa - betray(( -1 ),( -0.78 ) * ROWS - Stark) * ( -Sansa ) * -1,--rule(COLS) / 900.6) ) * Jon;
	( mislead(mislead(-COLS * ( ( ( -1 ) ) / TABLE[( ROWS - ( ( ROWS ) ) )][-Ygritte / ( -710.13 )] ) / TABLE[-69][--580.61] / Sansa) + COLS + -97) )
}
def rule(y,Ygritte){
	0.44
}
def betray(dog,dog){
	mislead() / mislead(foo(destroy(-( ( foo(ROWS) ) ),mislead())),( -x ));
	if(( Sansa )){
	ROWS - 7;
	if(y){
	Arya *= 0.04;
	destroy(( 0.42 )) - ( 610.75 )
}
} else {
	if(bar(-0.01)){
	TABLE[-0.23][ROWS]
};
	if(mislead(-Sansa - 25,foo(destroy()))){
	87 - -( protect(-( Ygritte / protect() ),( destroy(-29) ),-690.86) );
	-bar(COLS);
	if(-COLS - -ROWS){
	TABLE[mislead(COLS,bar(mislead(x,Sansa),rule(bar(-Stark,0.38,( ---rule(Ygritte,COLS) )),( COLS )),ROWS))][1 + mislead(-98,( 28 ) - protect(( ( bar(bar(destroy()),-0.76,COLS) ) )))];
	Ygritte /= foo()
}
};
	-1
};
	Arya /= --0.2
}
def TABLE[ROWS - dog][k] {
	( rule(COLS) )
}
def TABLE[-Ygritte][j] {
	if(-( Hodor / ( -COLS ) / Arya )){
	if(-protect(-53,TABLE[mislead(-690.16,TABLE[( dog )][COLS * -mislead(ROWS,TABLE[( -43 )][bar(dog)]) - -bar(( ( -( TABLE[-0.27 / -62][-89] * ( TABLE[Jon][Sansa] ) ) ) )) * -Jon * COLS * mislead(-98 + --34)])][( -21 )])){
	if(Ygritte){
	if(bar(( protect(-( Hodor ) * COLS,TABLE[bar(Ygritte,ROWS,COLS) / x][mislead(ROWS - ( ( Jon ) ) - ( Jon ),--47)],COLS - 0.94) ))){
	if(1){
	Sansa += 920.289
} else {
	y *= --380.37 / dog + bar(Hodor,-Jon / Ygritte,--0.27) / ( -Ygritte + ( Arya ) );
	-( COLS ) * -0.59 * ( --18 );
	Stark += -79
};
	ROWS
} else {
	if(0.28){

} else {
	if(86){
	Sansa /= -40;
	if(COLS){
	if(bar(y)){
	Ygritte += ( 490.8 );
	( -Sansa );
	( TABLE[betray(TABLE[--COLS][Jon],--betray(TABLE[ROWS][0.97],( Stark ),( -0.92 )) * -( y ) * betray(Arya,betray(protect(-COLS,Arya) / -dog,-destroy(( -1 ),-52)),( rule(x - ROWS * 1,betray(0.36,ROWS)) )))][( bar(foo()) )] )
} else {
	-ROWS;
	COLS
};
	protect(Hodor,Arya)
}
}
}
}
};
	Arya *= -70;
	x
};
	y += Stark + COLS + -mislead(rule(-TABLE[( -Ygritte )][ROWS - Sansa] + Ygritte)) * 89;
	if(bar(48) / Ygritte){
	( x );
	if(--470.181){

}
} else {

}
} else {
	y *= ROWS;
	Ygritte -= protect()
}
}
def destroy(x,x,dog){
	Jon -= destroy(foo(0.97,( 0.85 )))
}
def TABLE[destroy()][j] {
	COLS;
	ROWS;
	y -= mislead(Ygritte,85 + -( -( x ) ))
}
var x = ( --dog )
def TABLE[( ( ROWS ) )][i] {
	y *= 84
}
var Ygritte = betray(betray(COLS,( rule(destroy()) )))
assert dog : "One can not simply parse himself"
assert Arya : "Nothing burns like the cold."
def TABLE[( ROWS )][k] {
	if(--mislead(ROWS,mislead() - ROWS + -ROWS) - -Stark * ( ROWS ) - COLS){

};
	if(( ( ROWS ) )){
	Jon += -11
};
	destroy(x)
}
def TABLE[bar(-( ROWS ),--760.5 * ( Arya ) + Stark,Sansa)][i] {
	if(COLS){
	ROWS
} else {

};
	Hodor -= ROWS
}
def betray(Jon,Hodor){
	-Sansa
}
var Stark = ( Hodor )
assert ROWS : "Winter is coming"
def TABLE[( ROWS )][i] {
	bar(Sansa,( foo() ) - ROWS,x);
	ROWS;
	if(-0.76){
	( -rule(270.728,TABLE[( y )][rule(-1 - bar(( -y ) - Sansa * ( --( TABLE[COLS - -0.37 + ( betray(y,Ygritte,0.56) + rule(y,TABLE[TABLE[-0.68][---45] + ROWS][x + dog]) ) - -850.02][TABLE[( -Jon )][-1]] ) ),( 1 - Stark )) - betray() * ( ROWS ) + --x - 860.65 + ( --Sansa / -TABLE[-Arya - x][rule(Ygritte) * -74 * -protect(Arya,rule(( Arya ),betray()))] * --1 ) * ( ( Hodor ) ) * ROWS / ( -COLS ) - Ygritte)],protect(( -mislead(bar(-betray(-foo(),x))) + foo(Stark) ),COLS)) );
	if(Jon){
	x -= ( ( -ROWS / ROWS ) );
	-foo();
	x += ( --57 * 0.89 / -bar(( TABLE[betray(--36 / ROWS)][( -COLS )] ),x,COLS) )
};
	550.085
} else {
	if(-1){
	if(-12){
	x /= ROWS;
	0.98 + ( ROWS );
	y += -0.02
} else {
	-y - mislead(Stark) + Stark + ( 1 );
	if(0.32){
	( ROWS )
}
}
};
	if(( ( ROWS - ---( Sansa ) * 69 ) )){
	if(-75 / ( Stark )){
	foo(( -COLS - dog ),Jon);
	x += destroy()
} else {
	--0.14
}
} else {
	if(TABLE[-( ( -Ygritte ) ) / -( -foo() ) / y][-TABLE[( ROWS )][COLS] + TABLE[( dog )][Jon]]){
	COLS
} else {
	if(( -Hodor )){
	if(destroy()){
	if(ROWS){
	Jon -= ( ( COLS ) );
	if(--( ROWS )){
	Jon /= -betray(Stark / COLS)
} else {
	if(-81){
	Ygritte;
	if(14){
	Ygritte;
	Sansa -= ( -20.1261 + ROWS );
	Arya -= foo()
};
	Ygritte
} else {

}
}
};
	Hodor /= bar(protect(),COLS)
};
	if(-TABLE[COLS][protect(-COLS,ROWS)]){
	if(-Jon){

};
	ROWS
};
	Sansa *= -550.9
}
};
	Sansa /= ( -440.5 )
}
}
}
def TABLE[( ( Sansa ) )][j] {
	-1
}
def foo(Arya,Jon){
	Ygritte -= y;
	if(destroy(-30.76,ROWS,650.911)){
	if(( Ygritte )){
	y += protect(TABLE[( COLS )][0.06],dog,( -protect(-( -890.2844 )) ) * Ygritte);
	1
} else {
	if(( TABLE[-( foo() )][( Jon * -( --1 ) )] )){
	Jon /= -x
}
};
	Stark;
	dog
} else {
	if(Ygritte){
	COLS;
	TABLE[mislead(bar(destroy(Ygritte,-( -x )))) / ( ( --foo(-ROWS - foo(mislead(-betray(bar(72 - ( protect(( TABLE[Arya][dog * TABLE[-1][TABLE[-0.41][protect(( -0.02 ))]]] ) / 1) / -foo(COLS) )) + TABLE[TABLE[( betray(-dog) )][( betray(-Sansa + TABLE[( ( -Sansa ) )][TABLE[( -( ROWS ) / y * -dog )][---ROWS - ( 0.65 )] * Arya]) )] - ( ( ( bar(( ( -destroy() * destroy(-dog,y) ) ),-110.64,-( COLS ) * ( 620.38 ) / bar(destroy(Sansa,COLS) - -0.63,ROWS)) ) ) )][0.03]) - -1,( ( Stark ) ),betray()),-( -x )),destroy(( ( COLS - ( COLS ) ) ))) / -46 ) )][67 - protect(y,x,COLS) - -1];
	betray(Sansa)
};
	dog += --0.99
}
}
assert ROWS - -0.64 : "Fear cuts deeper than swords."
var Arya = ( Jon ) / bar(( betray() )) * Jon
var Hodor = 0.37
var Ygritte = dog
def TABLE[Stark][i] {

}
assert betray(0.89) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = TABLE[---1 + 60][foo(( Hodor )) * TABLE[TABLE[Ygritte][TABLE[Sansa][Stark]]][-Ygritte]]
def TABLE[COLS][j] {

}
def TABLE[1][i] {
	Stark -= COLS - Hodor / protect() * ( mislead(COLS * -580.688 + bar(),y) / -mislead(( Sansa )) * -( 0.18 ) ) / TABLE[-Jon - COLS][Sansa];
	if(COLS){
	if(ROWS){
	if(TABLE[protect(( COLS ))][( ( -COLS ) )]){

};
	if(mislead()){
	y * -TABLE[dog][destroy(( -0.84 ),Stark)]
} else {
	if(560.68){
	( -TABLE[-0.55][-y] / ROWS )
} else {
	if(-29 + foo(ROWS)){
	if(TABLE[Ygritte - -Ygritte * ( TABLE[-820.2][COLS] )][-1]){
	Stark *= 0.65;
	( -rule(x - COLS) + Jon );
	Arya /= betray(( dog ))
} else {

}
}
};
	Hodor -= -protect(Ygritte,mislead(Jon,--Sansa,-protect()));
	y
}
};
	if(Stark){

} else {
	if(8){
	Arya -= -( ( -0.18 ) )
} else {
	Ygritte /= --dog;
	betray(( 30 ))
};
	ROWS
}
} else {
	if(Ygritte){
	Jon *= Ygritte
}
}
}
var Jon = rule(-COLS - 0.35 * y,580.103)
def TABLE[-90][i] {
	if(x){
	Hodor -= foo(protect(--Arya));
	--protect(( TABLE[mislead(0.82,-( -64 ) - foo(-0.59,Sansa))][12] ),TABLE[COLS][mislead(Hodor,mislead(98))]);
	dog -= bar(ROWS)
} else {

}
}
var x = -1
var dog = 1 * ROWS
var Jon = ROWS
var Arya = ( ( Arya ) ) + --destroy() * Ygritte
assert ROWS : "One can not simply parse himself"
def TABLE[4][k] {
	Stark += rule(( ( ( -x ) ) ),x,Ygritte)
}
def bar(Sansa,dog,x){

}
assert ( Stark ) : "Winter is coming"
def foo(Hodor,Hodor){
	if(protect(0.24) / ROWS){
	dog /= TABLE[-1][dog]
}
}
assert COLS : "Fear cuts deeper than swords."
assert Hodor : "What do we say to the Lord of Death?"
def foo(){
	Hodor += -destroy(-0.71 / Arya);
	x /= betray(-1)
}
def protect(Ygritte,y,Jon){

}
def TABLE[bar(rule())][k] {

}
var Stark = -1
def TABLE[( Arya * ( ROWS ) )][i] {
	Arya -= ( -mislead(58) )
}
assert -0.53 : "Nothing burns like the cold."
def mislead(Hodor){
	( destroy(( TABLE[bar(( ( ROWS ) ),( 41 ) - -0.9,TABLE[---45][-ROWS])][( protect(--0.91,COLS) ) + ROWS] ),Jon) );
	Hodor /= -Arya
}
assert -0.02 - -destroy() : "Nothing burns like the cold."
def protect(y){
	if(Sansa){
	y /= ROWS + Hodor
}
}
def TABLE[-COLS][j] {

}
def TABLE[( -( Arya * 74 ) )][i] {
	Arya += ( x * Hodor + 310.89 )
}
assert destroy() : "Winter is coming"
def betray(Stark,Ygritte){

}
var Hodor = Hodor
assert 0.29 : "Fear cuts deeper than swords."
def TABLE[( ROWS / TABLE[-850.638][protect(0,Jon,( 0.15 ))] )][i] {
	COLS / -( Jon ) * ( -( ( 0.89 - 1 + ROWS ) ) ) / ( ( bar(( rule(COLS) / foo(COLS,y,bar()) ),( destroy(-bar(-protect(-34,foo()) - TABLE[-1][( Ygritte )]) * y,COLS) )) ) )
}
def TABLE[dog][i] {
	rule(COLS);
	( destroy(-490.3) )
}
def TABLE[-betray(protect(destroy()),ROWS)][i] {
	if(-73 * betray(betray(rule(-44,( ROWS ))) - ( ( TABLE[( --y + COLS * dog + TABLE[rule()][-( -1 )] )][dog] * dog ) * -( TABLE[Arya][( -0.27 )] / destroy(Stark,1 - -0.23,-( -10 )) ) ) - ( COLS )) * 0.14){
	if(-( destroy(--ROWS) ) / destroy(0.1 * 920.3727 - rule(COLS),-50.66)){
	x *= bar(betray(COLS) + ROWS,( rule(-270.116,-35,foo(( foo(dog,-( mislead(-0.53 + -( -( 2 ) ) * betray(betray(-35),mislead(-bar(Hodor),destroy(COLS),ROWS - rule(Hodor,rule(-1),-0.13 * 1))) * COLS,ROWS) )) ),Hodor)) ),COLS);
	if(( COLS )){

} else {
	Hodor += ( mislead(ROWS,--Stark + -4 / protect(TABLE[COLS][-0.68 * COLS + ( Arya ) / Stark] + ( ( TABLE[-1][TABLE[( rule() / ( TABLE[destroy(ROWS,destroy(TABLE[rule(( ROWS ) / ( foo(ROWS) ),-1,destroy(COLS * -TABLE[-( betray(( ( ( ( -rule(--0.57) ) ) / COLS ) )) )][Sansa] - --foo() - ( ( bar() - -67 ) ),COLS) - dog * -40.309)][-16],x + ( Arya )))][0.17] ) )][Jon + mislead(bar(Arya,( ( TABLE[( 0.79 )][dog] ) ) + -370.452) + betray(ROWS,bar(COLS + -( ( ROWS ) ),-dog,COLS + Ygritte * -230.796 + COLS)) * ( ROWS ) + Arya + -mislead(--TABLE[destroy(( Stark ),--Arya,Jon - ROWS - ( Sansa ))][-93],52) - ROWS / bar(TABLE[TABLE[ROWS][ROWS]][destroy(-17 * -1 * -foo(mislead()) + Jon / ( ( destroy(betray(ROWS - TABLE[21][( -11 )] - dog,COLS)) ) ) + -250.18 * --Jon,69,0.19) - -mislead(Jon) * -COLS],y) + COLS) * 33]] ) ),-TABLE[( -84 )][( dog ) + ROWS / ( COLS )])) );
	if(0.77 + -TABLE[1][-ROWS / ( destroy(COLS,betray(560.981,-Ygritte + rule(TABLE[bar(TABLE[-ROWS][-1],COLS)][( COLS )],( ROWS )))) - bar() * bar(protect(TABLE[COLS][rule()]),Ygritte) + ( 71 ) ) * 1] / COLS - -0.44){

}
}
};
	Sansa += y
};
	if(--47){

}
}
assert 180.74 : "Nothing burns like the cold."
assert -TABLE[-1][-0.4] : "Winter is coming"
assert 0.98 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Ygritte][i] {
	y /= -0.93;
	x += -0.11
}
def destroy(Arya,Arya){
	if(( -84 )){
	-0.26;
	Sansa += ( ( destroy(( 0.03 ),y / -62) ) )
} else {
	Ygritte
};
	COLS;
	y
}
assert Sansa : "Fear cuts deeper than swords."
assert bar(Jon,-betray(( 46 )) - Jon + mislead(--x,490.589)) : "Nothing burns like the cold."
def mislead(y){
	Arya -= -COLS
}
def foo(Jon,Ygritte){
	x *= ROWS
}
def TABLE[COLS][k] {
	Stark;
	TABLE[ROWS][Hodor];
	Jon += 0.12
}
def TABLE[ROWS][j] {

}
var dog = 33
def TABLE[protect(( x ))][i] {
	Ygritte /= -78
}
def foo(Hodor){

}
def TABLE[( dog )][i] {
	-( Hodor )
}
def TABLE[ROWS / 1][k] {

}
def TABLE[-ROWS][k] {
	Sansa += ( bar(( ( betray(( 0.63 )) ) )) );
	Sansa -= foo(-59 * x - destroy() + Sansa)
}
def TABLE[( ( ( 410.62 ) ) ) + Stark][j] {
	Arya /= 1;
	dog += 1
}
assert destroy(--0.52,Stark) : "Nothing burns like the cold."
def bar(Jon,Arya){
	---TABLE[( -( 41 ) )][( 0.33 )] + dog;
	if(-( mislead(y,-34) )){
	Ygritte /= Ygritte + 0.83 * ( -790.2576 );
	x *= ( ( ROWS ) )
} else {
	if(-( rule(TABLE[-Hodor][( y )],bar()) )){
	Arya += Hodor;
	1 / -0.69
} else {
	dog -= y - mislead(-2,Sansa) + -foo(foo(x,COLS),y)
}
};
	if(--foo(ROWS,Hodor,( x ))){
	if(( rule(ROWS,( ( COLS ) * ---1 )) )){
	Sansa *= destroy(-0.79 / 81 + --25,--0.91 - COLS - Stark - dog,betray(TABLE[Hodor][COLS],rule(ROWS),Hodor))
} else {
	if(Stark){
	( foo(TABLE[470.95][( --35 )]) );
	Jon -= ROWS
}
};
	if(--1){

} else {

}
} else {
	Arya += ( Stark )
}
}
assert --38 : "Nothing burns like the cold."
var x = bar(protect(-27),TABLE[( Hodor )][-ROWS / -Arya * 57],( -x ))
var Sansa = Hodor
var Sansa = -TABLE[-0.21][0.7 + ( TABLE[mislead(TABLE[( COLS )][TABLE[-dog * betray(( COLS ) * ( -0.64 ) / ( ROWS + -68 ),( x ),dog)][( Hodor ) * -mislead(mislead())]],0.11 * betray() * ---dog,-foo(rule(destroy())))][( 40.2 )] ) + 0.05 * foo(0.63,COLS)] * 27
var Stark = -0.44
var Sansa = x
var Stark = -( -mislead(( ( ( -dog ) ) )) ) * -Arya
def betray(){
	Jon += 0.41;
	TABLE[mislead(Sansa)][( dog )];
	TABLE[bar(-96 + -destroy(COLS) + -37 - ( foo() ) * Sansa / y,x) + -destroy(( COLS ),dog) * ROWS][( dog )] / COLS
}
def TABLE[Arya][j] {

}
assert ( Jon ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[TABLE[Arya * destroy(bar(),Sansa,TABLE[-0.57][protect()])][-0.16 + ( -1 )]][j] {
	Jon += ( betray(COLS - ( foo(( ( foo(Stark) ) ),rule(-67 - -0.71,0.41,mislead(-0.57 * -bar(Hodor) - ( ( Jon ) ))),-0.74) ),( ( 410.131 ) )) );
	if(Sansa + ( y - Sansa )){
	if(-TABLE[-0.67][Jon] - -protect(x) * ( mislead(TABLE[-( --TABLE[1][betray(TABLE[1][790.843],( Hodor ),---8)] / Jon - ROWS - ( -( Jon / COLS * COLS ) / ----0.44 ) )][TABLE[COLS][x]],-x) + TABLE[ROWS / ROWS][TABLE[-720.4796][( Arya )]] )){
	TABLE[-y][-79];
	Jon /= betray(bar(620.2,bar(-Jon - -Sansa) - -59 - ( mislead(rule(TABLE[rule(rule(bar() * --350.37,destroy(-( ( Hodor ) ),dog)),foo(protect(( rule(( COLS / ( -mislead(ROWS,( dog ) + protect(x) - -Arya) / -0.56 ) ),( destroy(COLS) / ( 85 ) ) / -1 / COLS) ),TABLE[COLS][foo(--( -Hodor - ROWS ),destroy() - ( protect(68 + 450.19 * ( -Jon ) - COLS / -COLS * 1) - -TABLE[destroy(ROWS / Stark + ( Arya * -61 * -Sansa ),( ( COLS ) ))][-0.4] ),bar())]),Sansa,-510.842 - x / ( Sansa )) / TABLE[ROWS][COLS * foo(protect(Sansa,-Stark))],TABLE[Ygritte][COLS])][COLS],Ygritte),Stark / Ygritte - dog,Hodor) ) + y));
	Sansa * mislead(( -( TABLE[ROWS][( -0.24 * COLS ) - dog] ) ) - ( ( COLS ) ))
}
}
}
def TABLE[( Sansa )][i] {
	( COLS );
	TABLE[( Sansa )][-COLS / --Ygritte + ( -Hodor )]
}
def destroy(Stark,Hodor){
	ROWS;
	rule(COLS)
}
assert Stark : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[ROWS][i] {
	Hodor;
	y *= -ROWS + ----840.4885 + ROWS / 56
}
def bar(){
	mislead(-foo(),foo(( TABLE[Sansa][destroy() * ( foo() )] ),0.94,( 26 )));
	rule(TABLE[10.45][foo()])
}
assert mislead(67) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(){
	y * TABLE[Arya - --0.63][ROWS]
}
def TABLE[COLS][j] {
	( ROWS - betray(Sansa + TABLE[COLS][foo(-Arya / ( -mislead(-TABLE[bar(--62 + 1,-1)][( 1 )],mislead()) ),-0.63)]) )
}
def foo(Hodor,y,Arya){
	Sansa *= betray(0.69,( -0.61 ) - ( 0.09 ),TABLE[foo()][foo(--Stark,( protect(( mislead(rule(( ( -1 ) ),( ( foo(Hodor,-1) ) )),COLS * y) ) * -0.5,COLS) ),-Jon)] * -( ROWS ));
	if(x){
	TABLE[Ygritte][1]
} else {
	if(-1){
	if(TABLE[-0.4][Hodor]){
	if(y){
	-200.294
} else {
	if(Ygritte){
	( bar(-89,Ygritte) );
	Sansa -= ( x )
} else {
	Ygritte;
	y += ( ROWS )
};
	-0.5
}
};
	-610.361
} else {
	if(( COLS )){

};
	if(COLS){
	if(protect(-67)){
	( Ygritte + -0.72 - 0.96 );
	if(COLS){
	Jon -= destroy(mislead(rule(( Ygritte )),foo(-1,COLS),( -58 - 44 )),Stark - -y + ( 0.23 ) - -Arya / -( ( mislead(( ( TABLE[-Ygritte + --37 + -70.89 - TABLE[dog][-Hodor]][( Hodor )] ) )) ) ) / dog / ( ( Ygritte ) ) / ( ( 0.64 ) ) / TABLE[--Jon - -TABLE[( 520.13 )][Ygritte]][0.94],TABLE[destroy(foo(ROWS,COLS))][( -92 )])
};
	if(-bar(Stark)){
	y *= Jon;
	Arya *= 1
} else {
	if(Ygritte){
	Stark
} else {
	Stark += -0.03
}
}
}
}
};
	Sansa /= -0.54
};
	Ygritte -= x
}
def TABLE[bar(-84,dog)][j] {
	Hodor /= ROWS + bar(( -230.7476 ))
}
var y = Ygritte
var dog = TABLE[rule()][-( ROWS )]
def bar(){
	if(mislead(-2 - ROWS - -( -( TABLE[-0.42][( Stark )] ) ))){
	Sansa *= -1;
	if(0.07){
	dog /= Sansa * ( ( ROWS - -COLS - -ROWS ) ) + COLS;
	if(Jon){
	dog + -y + protect(COLS);
	if(-0.54 + mislead() * TABLE[destroy(rule(TABLE[( ( mislead(ROWS) ) )][-( mislead(--ROWS + -1) )]) / ( betray(( ROWS ),betray()) ),-( protect(Hodor) ))][TABLE[2][mislead(ROWS + bar(Hodor / -0.51),ROWS / Arya + 57,dog)] - ( ( ( 0.99 ) ) ) / TABLE[-betray() + Hodor][destroy(( y ))] * ( y )]){
	51
};
	if(protect(-1,dog) * Hodor){
	x -= COLS
}
} else {
	TABLE[mislead(( ( mislead(ROWS,3) - Stark / -TABLE[destroy(--( TABLE[-0.44 + -190.32][protect(1,ROWS)] ) * ( ---1 ),protect(COLS,TABLE[( --1 )][Stark],-Jon) / ROWS * mislead(-0.18 - foo(mislead(Sansa - -( ( y ) ) + ROWS * -dog,( -0.19 ) * -COLS * protect()) + -Jon),foo(dog,TABLE[-COLS][--44 + --Sansa * mislead(-( -( Sansa ) ),( COLS ))],TABLE[( Hodor )][COLS] - -0.48)))][ROWS] * foo(890.32) ) ))][TABLE[foo(( x )) / -800.332][-540.58]];
	-COLS
}
}
};
	if(( ( ( 9 ) ) ) - --y * -780.6 * betray(( -Stark ),-0.88 * bar())){
	( Ygritte ) - -COLS + ( protect(( -( mislead(TABLE[COLS][( ( dog ) )]) * destroy(-COLS,-Stark) ) + protect(ROWS) ),-( -TABLE[betray()][betray(( -ROWS + -( ( Jon ) ) / dog / ( -71 ) ),--ROWS)] + ROWS )) ) * Sansa / bar(( bar(protect(0.82,-dog),Hodor) ));
	if(Hodor + betray(-( -77 / destroy(foo(TABLE[( mislead(--mislead(destroy(Sansa + 87,--1 - -rule(( -63 )),mislead(Sansa,-y) / ( ( --0.82 ) ))) - mislead(( --0.28 ),mislead(( ( y ) ),foo())),Hodor) )][0.6]) - betray(-780.1)) )) * -0.67 + -0.67 + ( ROWS )){
	-0.41
};
	COLS
} else {
	dog -= ( Arya );
	y /= -38;
	x -= ROWS
};
	COLS
}
def protect(Stark,dog,Hodor){
	if(ROWS){
	x
} else {

}
}
var Stark = Sansa
var dog = Sansa
var Hodor = betray(-x,-0.27)
assert destroy(-( COLS ),370.6) : "Winter is coming"
def betray(Stark,Jon){

}
def bar(){
	-( destroy(-TABLE[mislead(protect()) / 1][( ( 220.299 ) )] / ( Sansa ) + dog,-COLS) ) * ( -0.44 );
	dog
}
def TABLE[-860.196][k] {
	-1
}
assert -85 : "What do we say to the Lord of Death?"
def betray(y,y){
	-( --28 ) / betray(TABLE[ROWS][( TABLE[-foo(-58,-rule(( TABLE[( TABLE[COLS][-( -dog ) - rule()] )][Hodor] ))) + ( ( -0.98 ) )][mislead(( -rule(-bar()) ),Arya,Jon)] )],( -0.64 ))
}
var dog = 40.4579
assert protect(600.141) : "Winter is coming"
def foo(Stark){
	Hodor;
	if(0){
	y *= -39
} else {
	TABLE[1 - mislead(( -Ygritte ),0.34)][Jon];
	COLS
};
	if(COLS){
	if(TABLE[--98][destroy(( ( ( ( ( TABLE[foo(foo(TABLE[COLS][TABLE[0.05 - -1][-TABLE[bar(( ( ROWS ) ),ROWS)][-0.1]]] + 0.18),Jon + destroy(betray(rule(destroy(14 / Hodor,-0.35 - ( -80.604 ))) - ( rule(TABLE[--58][( -ROWS )],COLS) / TABLE[-COLS + ( Sansa * foo(Hodor) * rule(ROWS,Arya) / TABLE[protect(ROWS / 0.62 / -0.54 / COLS,rule(-destroy(ROWS * TABLE[-destroy(ROWS)][97],( 290.87 )),( 210.06 ))) + -bar(( 22 / 0.75 ),COLS,180.13)][protect(1,COLS * ROWS - ( -1 ))] / dog )][-Arya] ),-Stark),( ( Ygritte ) ),( TABLE[mislead(TABLE[TABLE[-0.3 + -destroy(1) / -180.6 - ROWS + ROWS][ROWS]][-39] + mislead(Stark,Sansa,COLS) - -0.28,destroy(-0.92,0.66))][dog / rule(40 * -64,-98 / foo(( ROWS ),ROWS - dog))] )))][y] - TABLE[--78 * Jon][--63] ) ) ) ) ),( --0.77 ) * TABLE[--x * ( Jon )][0.2],ROWS) + COLS]){
	if(-1){
	if(TABLE[COLS][0.6]){

};
	if(protect(mislead(dog,-betray(protect(COLS),-x)) - COLS)){
	Hodor *= --0.24;
	rule(TABLE[foo(-Sansa)][TABLE[( --ROWS ) * ( -( TABLE[63][rule(ROWS,--670.2,-TABLE[75][--0.63 + ROWS])] ) )][-61]],-520.14 / -400.55) * COLS;
	Sansa
}
};
	if(0.82){
	-75;
	if(-bar(bar(bar(( ( TABLE[( ROWS ) - --940.935][( 880.13 )] ) )),-740.505,COLS))){
	if(TABLE[Jon / ROWS / -650.5065 - ROWS * COLS][TABLE[ROWS][dog]]){
	betray()
}
} else {
	y;
	destroy(bar(Sansa,-60,-17 * -920.148));
	--65
}
} else {
	Stark;
	if(TABLE[ROWS][-0.36]){
	Jon *= betray(betray(( TABLE[-destroy(protect(COLS,-Jon) / Jon - -TABLE[-( ( -90.5 ) )][rule(--0.76 * COLS,Stark,--Stark - 110.7) * rule()])][0.8] )),--ROWS * ( Hodor ))
} else {

};
	Jon += ROWS
}
} else {
	Hodor;
	if(Hodor){
	if(destroy(TABLE[-1 / ( -destroy(ROWS,( ( ( ( COLS ) ) ) )) )][-( bar(foo(COLS,mislead()),destroy(( -14 ),protect(1,16))) )],-1,ROWS)){
	Ygritte += Stark
} else {
	Jon *= -23;
	if(COLS){
	( ( TABLE[-0.68][( -y )] ) );
	Arya /= protect(-56,( destroy(0.78,( betray(mislead(TABLE[mislead(TABLE[( 1 )][( COLS )],Hodor) / bar(mislead(--TABLE[dog][-( Ygritte )] + ROWS * ( Arya ),Arya,-rule(TABLE[COLS][( 140.38 )]))) + y][-( ROWS )],1)) )) ));
	if(--COLS){
	dog *= COLS
}
}
};
	COLS;
	mislead(-620.1 / -190.8433,( COLS * TABLE[x][-COLS] + 1 + foo(mislead(x / -0.43 * TABLE[y][Arya]),ROWS) ))
}
}
}
}
def TABLE[-( -200.903 + COLS - -protect(( foo(560.724,0.32 / ( -COLS ),-COLS - Stark * ( Ygritte )) ) * -( Stark ),54) ) * COLS * -0.88 * x][k] {
	Hodor /= ( 1 ) + COLS;
	dog /= -630.693
}
var y = ( -1 )
def TABLE[TABLE[Hodor][dog]][i] {

}
assert 790.8 : "Fear cuts deeper than swords."
def bar(Hodor){
	if(Hodor){
	Sansa /= --76;
	( ( -( COLS ) ) );
	if(foo(--0.68 + -rule(1,-Jon - Jon,COLS * COLS) * Sansa + TABLE[0.88][0.32],0.34)){

}
} else {
	dog;
	y += -( -( foo(--0.9 / -destroy()) * -ROWS ) ) + ( Hodor ) - ( y ) / rule(66 / --0.16,Jon,destroy(0.03,Arya,( 91 )));
	( bar(( -TABLE[-betray(protect(x / ( mislead(-( Ygritte ),rule(mislead(Hodor) - protect(),-1,( ( bar(-( Arya ),Hodor) ) * mislead(-( ( Stark ) ),-44,ROWS) ))) ),-Hodor))][( Ygritte )] )) )
};
	Ygritte -= ( ( Ygritte ) )
}
var Stark = -foo(ROWS) - -600.419 - ( betray(COLS,--0.41,1 / TABLE[--120.25][protect()]) )
def TABLE[( Hodor )][j] {
	rule(( 0.29 ))
}
def TABLE[COLS][j] {
	x -= ( COLS );
	if(( protect(( betray(22 + -1,TABLE[destroy(-COLS * -1)][( TABLE[( COLS ) / x - dog][0.18] / ROWS )]) )) )){
	( 1 * --Ygritte * 1 * TABLE[TABLE[COLS][( ( -0.95 ) )]][Arya] / Hodor ) * ROWS
}
}
def TABLE[mislead(( Ygritte / dog ) + --destroy(y,( foo(( rule() )) )) / mislead(x,Sansa) - destroy() / bar(),ROWS)][j] {
	Ygritte -= ROWS
}
assert -Hodor : "Fear cuts deeper than swords."
assert foo() : "Nothing burns like the cold."
def TABLE[-protect(--Stark / -COLS,( betray(TABLE[dog][TABLE[-650.922][( COLS )]]) - y / -( --bar(59,destroy(-Jon)) ) * Sansa )) + 380.956][i] {
	if(bar(COLS,dog + protect(foo()) * ROWS)){
	COLS;
	Ygritte
}
}
var Jon = -( -71 - TABLE[280.17][TABLE[COLS][( ( destroy(x,ROWS,--43) ) )]] ) / dog
def rule(dog){
	if(-( TABLE[--COLS][( x )] )){
	Hodor *= TABLE[Ygritte][-0.86];
	if(TABLE[-TABLE[-29][-ROWS]][destroy(( 1 ))]){
	betray(TABLE[-COLS][bar(( foo(-( COLS )) ))],1,---destroy(0.64 / TABLE[foo(TABLE[( ( COLS ) )][destroy(mislead(COLS + ( 51 ) - COLS,Ygritte),rule(foo(COLS,--bar(--mislead(( protect(COLS,( Sansa ),TABLE[-0.68][TABLE[710][26]]) )) * COLS * 0.81,-ROWS,protect(protect(( ( ( betray() ) ) ),COLS * Stark + -0.55),-( -Stark ) - COLS)) + TABLE[ROWS][mislead(x,Jon)],bar()),-780.418),-( ( ( -1 ) ) ))]) - -destroy(( --Hodor )) + bar(( -0.31 + 1 ),y)][mislead(( -540.88 ),Arya)],40.224));
	if(TABLE[( -( ( ( -73 - betray() / -86 ) ) ) )][Ygritte]){
	if(-( Arya )){
	-betray(( -0.84 ),30.55);
	TABLE[0.92][Sansa];
	( Hodor )
};
	( destroy(38) )
};
	dog += -14
} else {
	Jon += ( rule() );
	if(( betray(-( ( x - 1 ) ),Ygritte,-91 / ( mislead() )) )){
	x += -1;
	( -1 + Stark )
};
	if(--foo(-39,95)){
	if(0.2){
	dog -= Arya;
	-Jon
} else {
	protect(( ( dog / ROWS ) )) * foo(580.625,destroy(-COLS - --Hodor * dog,betray(ROWS,protect(9,ROWS,( betray(-ROWS,destroy(-foo(mislead(--0.28,Sansa,destroy(-( -bar(protect(( Ygritte ),-66 / ( ( 90 ) ),-TABLE[( betray(( Arya / 0.75 ) * TABLE[TABLE[TABLE[Hodor][-1 * 70]][dog]][-ROWS]) ) / Jon + -60][COLS]),betray(TABLE[TABLE[ROWS][-Sansa]][-43])) )))),betray(y,y))) )))),ROWS) + COLS - -26;
	-0.75
}
}
};
	if(COLS){
	if(dog / ROWS){

} else {
	Stark += ( ROWS );
	Arya += 0.25
}
}
} else {
	( ( foo() ) )
};
	Stark
}
def TABLE[-betray(TABLE[( ( ROWS ) )][foo(Arya - 0.04 * 580.85,( protect(1,( -ROWS + 0.12 )) ),bar(COLS,-68)) - ROWS + -ROWS])][j] {
	-y - 1 - protect(--0.17);
	dog -= Arya;
	y += 0.32
}
def betray(Arya){

}
def rule(){
	if(-TABLE[( Sansa / Arya )][-( ( COLS ) )]){

} else {
	COLS
};
	-Hodor
}
var Hodor = ( Ygritte )
assert --1 : "Nothing burns like the cold."
def TABLE[-( -10.74 )][j] {
	if(-COLS){
	( x ) + -0.41;
	Stark += ( Sansa )
} else {
	Jon /= -580.72;
	if(TABLE[rule(44,( Ygritte )) * ( x ) + --0.68][( mislead(ROWS,-600.3) / ROWS )]){
	destroy(( ( TABLE[0.16][-79] / TABLE[( ( ( -rule(betray(destroy(-mislead(-rule(( -( ROWS ) ) + 11,ROWS,destroy(( ( ( -betray(( -( ( Jon ) ) ),bar(( dog ),COLS),87) ) ) ) * COLS + betray(protect(),( -0.64 ) + -Hodor) / ( destroy(dog,( -630.29 )) ),mislead()) / Ygritte) / -( Arya ),( --49 ) * ( foo(ROWS + 1 / 0.74,-78) ) - 280.569 / Arya)),( destroy() ))) ) ) ) * COLS][Arya] ) ),ROWS,bar(y,0.21));
	-dog;
	x += -960.8397
} else {

}
}
}
def betray(Hodor,Hodor){

}
def TABLE[COLS][i] {
	y += -0.19;
	-21
}
def destroy(Ygritte){
	--rule(dog,-47,dog / dog + -destroy(Ygritte) * -0.84 / x)
}
assert -bar(( -( betray() ) ) / foo(Sansa) / Sansa,TABLE[--TABLE[TABLE[TABLE[( COLS ) + TABLE[protect(y,COLS,-bar() * mislead(y,COLS))][( dog )]][Sansa]][COLS]][-Ygritte * protect(betray(Hodor,y,ROWS) * Ygritte,-0.2 / dog)]][( Sansa )]) : "Winter is coming"
var dog = Stark
var Jon = COLS
assert Stark - destroy(( COLS )) : "What do we say to the Lord of Death?"
def mislead(y,Jon,y){

}
assert 94 : "One can not simply parse himself"
def destroy(y,dog){
	( -TABLE[-38 * protect(-protect(( ( y ) ),--COLS,x))][-0.12] )
}
def protect(Arya){
	if(Hodor){
	Jon += Arya
}
}
assert Arya : "Nothing burns like the cold."
def bar(Ygritte){
	if(foo(-COLS - bar(( TABLE[Jon][COLS / TABLE[destroy(COLS)][bar(670.81,Sansa)]] )),ROWS)){
	( ( Ygritte ) );
	-1
};
	if(( destroy(ROWS) )){
	x /= betray(-( TABLE[-( -mislead(80.4) + ( 1 ) ) - COLS][--( -Sansa + 9 + ( -x * ( Stark ) ) )] ));
	if(-ROWS + -46){
	Arya /= ( TABLE[destroy()][-77 * ( Ygritte )] ) * 890.89;
	if(( ( foo(Sansa,Arya,400.5 / ( Sansa )) ) )){
	dog /= 1;
	Ygritte *= TABLE[COLS][-destroy(TABLE[-0.37][0.26])];
	if(Sansa){
	-( -COLS * COLS / -1 + mislead() + mislead(-( ( -1 ) ) * ( ( ROWS - Hodor - destroy(( --Sansa ),dog,y - 32 + -( betray(( rule(-x,88) ),-Hodor) ) - ( bar(( 83 ) * 21,protect(),( ( -TABLE[1 + --COLS / -( -73 * y ) + y][( -0.04 )] ) )) )) ) )) );
	-rule(destroy());
	y *= foo(-bar(29) / ( ROWS * 76 ) + --0.18,81)
}
} else {
	ROWS
};
	if(0.89){
	Jon /= TABLE[mislead(TABLE[24][COLS])][-x] * rule(( bar(Ygritte) ));
	Ygritte += -680.658
} else {
	if(betray(-( x ),( -0.55 ),( -( TABLE[y][protect(y,dog - --x)] ) ))){
	if(( protect(-230.6419,ROWS,-COLS) )){

} else {
	Arya *= Sansa;
	( -betray(( destroy(-( Ygritte ),( ( bar(-TABLE[Sansa - foo(( dog ),protect(),TABLE[ROWS][-COLS])][TABLE[-( 70.74 )][TABLE[bar()][( -0.68 + -Jon )]]]) ) ),0.52) ),x,( --mislead() )) )
};
	( 860.6384 * Ygritte * destroy(COLS,( Ygritte )) );
	Stark *= ( COLS )
} else {

};
	Hodor *= ( ( rule(y,1 * ROWS) ) )
}
}
} else {
	if(TABLE[-1][betray() / COLS * COLS + foo(TABLE[( ( Jon ) )][ROWS] + -0.24,( protect(( betray(bar(betray(foo(),COLS,--( 0.83 ) * ( 910.5 )),31)) )) ) / -1)]){
	if(foo(TABLE[( -protect(( ( destroy() ) )) + Stark )][Sansa])){
	y /= Arya + COLS
};
	Hodor
} else {

};
	Hodor;
	x /= ( ( 0.32 ) )
}
}
def mislead(Stark,dog,Sansa){

}
assert -0.62 : "One can not simply parse himself"
assert dog : "Winter is coming"
def destroy(x){

}
var Arya = COLS
def foo(){

}
def betray(){

}
def mislead(Ygritte,Hodor){

}
assert ( Stark ) : "Fear cuts deeper than swords."
def TABLE[ROWS][k] {
	dog *= ( ( 550.893 ) ) - 62 / ROWS / Ygritte;
	if(COLS){
	if(-1){
	Ygritte
} else {
	if(rule(Stark,TABLE[COLS][COLS])){
	if(( dog )){
	Jon += -0.57;
	if(( Jon + TABLE[-COLS][Hodor] )){
	( Hodor );
	if(( -foo() ) - Ygritte){
	Arya -= 0.79;
	( -TABLE[1][5] )
} else {
	( ( rule(-Jon,betray(protect() / ( --660.51 ) * COLS + ( y / Ygritte ))) ) / bar(foo(0.24,-protect(350.9743,( x )) * 58 - destroy(Sansa,( destroy(foo(( -( -Sansa ) ),ROWS)) - ( ROWS ) )) + COLS * ( Stark - bar(-Jon,ROWS,ROWS) + COLS - -Hodor - ( -Stark ) ),( Jon )) / Arya + -790.8622,foo(betray(mislead(( Jon ),( ( ( ROWS * rule(bar(( foo(COLS,COLS) ))) ) / ( -310.616 ) ) ),TABLE[Arya][TABLE[mislead(( 0.38 ),Sansa)][COLS]]) / TABLE[0.43][350.603] - ( betray(TABLE[-250.1][ROWS],destroy(( COLS ))) ),destroy(COLS,49)),Jon / -mislead(-0.11,foo(mislead(foo(Sansa),Hodor,ROWS),-y),Sansa) / 68,--100)) ) * ROWS + -y / destroy(destroy(y,x,Jon));
	if(( Hodor )){
	if(COLS){
	if(COLS){
	( ( -0.93 + 1 ) ) - -360.53;
	if(dog * x){
	if(-TABLE[4][ROWS / rule(foo(),-210.9)] / COLS){
	y *= -0.23;
	if(-y + COLS){
	if(1 - 0.7 - 1){
	if(( ( foo(-( ( foo() ) )) ) )){
	if(destroy()){

} else {
	if(foo(-10) + -COLS - ( destroy(dog,-43) )){
	if(mislead(( ( ( ROWS ) ) ),ROWS)){
	if(( -0.41 )){
	TABLE[--dog][1];
	Sansa += -ROWS
};
	Hodor
};
	rule(Sansa,TABLE[COLS][( TABLE[betray(-1,bar(Arya,y,foo()))][COLS - Sansa] )]);
	( -betray(betray(COLS) - -protect(( -1 )),COLS) )
} else {

};
	if(-Sansa){
	if(-betray(( Arya ) + ROWS + ( dog ),destroy(720.351,( 0.29 ) / -0.51,TABLE[---( x ) / Stark * foo(ROWS) + x * 82 * -TABLE[rule(destroy(-( -foo(-COLS,TABLE[-0.61][ROWS],-protect(destroy() + ROWS + -1 / -COLS + -190.779 * COLS,TABLE[mislead()][--rule(49)])) ) + ( ( foo(COLS) ) / -51 ) - 0.2 * ---Stark - TABLE[destroy(TABLE[( 680.73 )][-46] * -1)][--( 0 )])) + ( -47 ) - ROWS][--bar() * -13 + ( ROWS ) + TABLE[17][ROWS + Hodor]] + 0.13][rule(Jon)]))){
	Ygritte /= -58;
	if(destroy(Jon)){
	0.69;
	bar(( dog ),-20.91,( ROWS ));
	0.35 - betray(64) * ( x )
};
	Ygritte /= mislead(--21 / ( TABLE[destroy(ROWS)][protect(-1)] ))
} else {
	-( Hodor ) - ( TABLE[ROWS][-1] ) / ( Hodor / ( 0.24 ) + y - ( -0.07 ) );
	1
};
	Arya *= ( betray(mislead(COLS + TABLE[Stark][COLS],protect(Ygritte,TABLE[ROWS - Sansa + -Ygritte][-0.49]),--0.38)) )
}
}
}
} else {
	Ygritte -= ( -TABLE[-( --56 )][--Hodor / ( -90.4 * Sansa )] - ( Stark ) );
	if(protect(( ROWS ),bar(( y ),( ( -Hodor ) )))){
	if(( ( Arya ) + -ROWS )){
	Ygritte *= x;
	--protect(COLS,COLS)
};
	COLS
}
};
	if(-mislead(--Arya,rule(-Stark * -( -protect(( Ygritte ),34) ) - COLS - 400.3627))){
	COLS / -rule(destroy(ROWS - x),-TABLE[-foo(-COLS)][bar(-ROWS + ( 0.59 + ( bar(Hodor) ) ) + mislead(),foo(rule(-Arya * rule(x))))] * ROWS * ---1 - y / rule(ROWS,-0.41 - Hodor * -( mislead(Stark,rule(----COLS + x + 1)) + rule(foo(Jon,79,Stark),( COLS ),y) / Arya )),( -protect(--( foo(COLS,-0.94,ROWS) ),-( ROWS ),Hodor) / -21 ) - x / COLS / rule(0.7)) - rule(( mislead(-870.83,destroy(),( rule(-betray()) ) * Hodor) ))
}
}
}
}
}
}
} else {
	if(TABLE[y][TABLE[1][dog]]){
	x -= destroy(y);
	( ( TABLE[ROWS][( foo(( -40.2 ),mislead(),( ROWS )) )] ) ) * -rule(-protect(ROWS),Arya) - ( -dog )
};
	betray(mislead(56) + foo())
}
};
	if(mislead()){
	if(( ( betray(mislead(bar(protect(-1,Stark,( Sansa - protect(TABLE[Ygritte][0.14]) ))),betray(TABLE[( -COLS - -60 * ( TABLE[betray(-mislead(rule(-( TABLE[-0.17][Ygritte] ),( rule(foo(---COLS,Sansa * ( -1 / destroy() )) + COLS,0.26) ),-Stark) - protect(Stark)),betray())][-1] / COLS ) )][mislead(( foo(ROWS,COLS) ))],foo(-mislead(x / ( x ) * x),mislead(Arya,x,( y ))),-150.2))) * protect(-0.48,1 - TABLE[Jon][x]) ) )){
	if(TABLE[11][--98] - --0.53){

}
};
	-920.08
} else {
	Sansa - 0.42
}
} else {
	if(( Sansa )){

}
}
} else {
	ROWS - -COLS;
	if(-8){
	if(ROWS){
	if(( ( Hodor ) )){
	if(( ( Sansa ) )){
	TABLE[bar(TABLE[foo(--foo(dog - 16,( destroy(Stark,bar() - Hodor / foo(-betray(rule(-0.16,COLS))) + betray(0.17 - ( --destroy() ) / 0.31,Ygritte),--( --Sansa ) - rule(69)) * foo(920.97,mislead(ROWS)) )))][Arya],Stark)][-protect(Arya,( COLS * ( Ygritte ) ))];
	--bar(( --y + Sansa ),--COLS)
}
} else {
	( -foo(x,( -95 ),-1) )
};
	Hodor += 67;
	y *= -73
} else {

}
};
	if(-25){
	Sansa -= ( -( TABLE[84][( COLS )] ) + ( bar(TABLE[y][mislead(ROWS)],( Stark )) ) );
	Stark *= -bar()
}
}
} else {
	0.32
};
	if(-1){
	Stark *= COLS;
	if(bar(ROWS)){
	91;
	if(bar(Sansa,-0.24,( mislead(-TABLE[destroy(-82)][-mislead(Ygritte,( x ),mislead(-310.92,120.15 + -1 / -1 - TABLE[ROWS][COLS],( ( mislead(-COLS,( -ROWS ),COLS) ) )))]) ))){
	COLS + ( Stark );
	-x
}
} else {
	betray(-( ( rule(-( ROWS )) ) ),ROWS);
	if(y - -destroy(Sansa,Hodor) / -destroy(y)){
	if(72){
	COLS
} else {
	TABLE[Jon][Stark];
	if(-0.44){
	if(mislead(( COLS ),mislead())){

} else {

}
};
	if(ROWS + ROWS){
	Sansa -= TABLE[--0.52][-33]
} else {
	if(( Jon )){
	-470.419
} else {
	ROWS + -( ( TABLE[TABLE[foo()][-ROWS]][bar(-0.34,( -0.53 ))] ) ) / 7;
	Stark -= bar();
	betray()
}
}
};
	Arya -= mislead();
	if(Sansa){
	Hodor += ROWS
}
} else {
	Arya /= ( Arya )
}
};
	-240.35
} else {
	Hodor += ( -mislead(betray(( x )),( ( Arya ) / -y + ROWS * ROWS )) )
}
}
};
	-1
}
def betray(Stark,Jon,y){
	if(destroy(ROWS)){
	( TABLE[( 0.89 * Hodor )][bar(-0.66)] );
	Hodor *= ROWS
}
}
def TABLE[destroy(-ROWS,y)][j] {
	-1;
	Stark /= -TABLE[Sansa][COLS]
}
assert destroy(TABLE[-1][TABLE[--( Ygritte )][Arya]],ROWS,--mislead(protect(( ( rule(( -Ygritte )) ) )))) + TABLE[-0.18][destroy(ROWS,betray(betray(),ROWS))] : "Winter is coming"
var Hodor = -TABLE[( COLS ) * -21][50]
assert foo() : "Winter is coming"
def TABLE[COLS][k] {
	Hodor;
	if(COLS + Hodor){
	-79
} else {
	if(bar(-710.36,-( bar(Hodor,-0.41) - -0.69 ),ROWS)){

}
}
}
def protect(Jon,Sansa){
	--destroy(COLS) - Arya / 0.51 * -15 + ( bar(( TABLE[COLS][ROWS] )) - 700.241 );
	-COLS;
	if(--dog * Jon){
	( ROWS );
	25 + COLS
} else {
	Sansa /= 1;
	if(COLS){
	Arya *= COLS;
	if(( ( Arya ) )){
	protect(protect(-y / -470.488))
}
}
}
}
var dog = protect()
def mislead(x,dog){
	Stark *= x;
	Jon
}
def destroy(Ygritte,Stark,dog){
	if(y){

};
	if(protect()){
	y *= ( -mislead(1,( ROWS ),mislead(foo(ROWS),destroy(COLS,COLS,( x ) / -0.65) / 9 / TABLE[TABLE[ROWS][Hodor]][7] / -foo(TABLE[( ( TABLE[protect(COLS * ROWS,( --rule(-COLS) ),mislead(0.83,( Ygritte ),bar())) - destroy(1 * rule(destroy(( ( x ) ),-ROWS,ROWS),Sansa,0.98),( ROWS ))][-1] ) )][--bar(TABLE[destroy(bar(),bar(-0.97)) + -( rule(Stark) )][rule(ROWS)] * ROWS,-( Jon )) + ROWS * Jon]) * COLS)) / Hodor );
	( --0.06 )
};
	if(-( ---0.52 )){
	x -= destroy(protect(rule(( COLS ),( betray() )) / Jon,-1));
	-betray(destroy(bar(COLS,Arya)) - TABLE[-Jon][-x]);
	if(-Sansa - destroy(betray(betray(-Ygritte),-( -0.22 )),-Sansa)){

}
} else {
	Hodor /= TABLE[-protect(protect() - bar(rule(-800.105 * 400.58),destroy(mislead(-Hodor,foo(betray(Jon,COLS),( COLS ),-0.27),---34 - ( 57 ))) * TABLE[y][rule(Stark)],ROWS) + dog)][( y )];
	if(-( ROWS ) * -protect(TABLE[( --( Arya ) )][Jon] / ( bar() + TABLE[TABLE[1][dog]][x / bar(foo(( y ),( -0.45 * ROWS ),0.38) - -ROWS + COLS * ( y ) * rule(---1) / ( ( 0.61 ) ),-ROWS,500.38)] * TABLE[TABLE[COLS - y][( protect(TABLE[COLS][ROWS],Jon) )]][bar(( -0.45 ),---371 + -( 95 ))] ),1) * ROWS){

};
	if(-1){
	( -COLS );
	( bar(rule()) )
}
}
}
var Jon = dog
var Jon = ( -Stark / COLS )
var Stark = bar()
assert destroy(TABLE[protect(ROWS)][-0.67]) : "What do we say to the Lord of Death?"
def TABLE[1][k] {
	Jon
}
var Sansa = y * ( destroy(( -x ),protect(( COLS ),--( -1 ) + --100),TABLE[-( dog )][-TABLE[Ygritte * ( ( betray(-840.4201) ) )][( ( ( ( -610.016 ) ) ) )] / Sansa]) )
var Ygritte = ( TABLE[rule()][-70.761] )
def TABLE[0.2][j] {
	dog += -protect(71,Stark)
}
var Sansa = 1
def mislead(y){
	Ygritte -= -mislead(-COLS,dog) + COLS * bar(bar(( ROWS ),ROWS))
}
var Arya = dog * bar(73 / -600.1575 - -32)
def protect(Arya,x){
	Sansa += Hodor;
	dog -= ( ( x - destroy(-COLS,ROWS,-0.65) ) )
}
assert y : "One can not simply parse himself"
def TABLE[-65][k] {
	betray(Jon / ( TABLE[COLS][-0.51] + COLS ));
	( -27 ) + Arya
}
def TABLE[-40.38][k] {
	if(mislead(-Arya - bar(( COLS ) + -310.55),-TABLE[-( -88 )][( foo(y,( COLS ),TABLE[--1 / ( ROWS )][( -betray(destroy(-bar(( bar(foo(1) + -Ygritte - 90.87 + Sansa) )),--95,Hodor * -Arya),bar(COLS),bar()) )]) ) * destroy(COLS) * Jon])){
	Ygritte /= betray(-( COLS ));
	Stark *= TABLE[-93][Ygritte / mislead(Arya,betray() * y)] - ROWS
} else {

};
	y += -1
}
var dog = mislead(-( bar() ),--Sansa * -1,( -Ygritte ))
def TABLE[TABLE[-ROWS / 1][( ( ( protect(rule(( COLS ))) ) ) ) / -1]][j] {
	Jon += betray() / ( -Stark )
}
assert x + -( mislead(rule(),bar(-ROWS,TABLE[-0.1][--Arya])) ) / dog : "What do we say to the Lord of Death?"
assert -880.614 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( foo(ROWS) )][j] {

}
var Arya = COLS
var y = Sansa
var Jon = -Arya
var y = Hodor
assert ( -1 ) : "Nothing burns like the cold."
assert y : "Fear cuts deeper than swords."
def TABLE[--y * --protect(-ROWS + ( -Jon ),( -0.53 )) - Ygritte][k] {

}
var x = -ROWS
assert -( -COLS ) * Jon : "Nothing burns like the cold."
var Hodor = ( ROWS )
var Sansa = -( TABLE[bar(-100)][dog] )
def TABLE[-ROWS * ( COLS )][i] {
	-ROWS;
	if(-1){
	if(0.32){
	COLS - rule(COLS,Hodor) / 0.26 - Arya * ( ( --0.84 ) );
	if(destroy(Stark - Arya,-0.84) + protect(bar(Arya * x),Arya,--Ygritte)){
	bar(--180.7048,bar(bar(x),y) + 0.76 / -( ROWS ),( ( TABLE[Sansa][bar(dog,TABLE[COLS][--970.8374],protect(( Arya + -Sansa - dog ),-30))] ) ))
} else {
	( ( betray() ) );
	y;
	Arya *= TABLE[--( 80 )][TABLE[-1][COLS / 1]]
}
} else {
	COLS;
	-destroy(rule(COLS,Hodor),ROWS);
	if(1){

} else {
	betray(Sansa) * -1 + betray(Jon);
	-foo(rule(-( rule(Sansa,COLS) )),Hodor) + bar(Arya,TABLE[y * ROWS + TABLE[mislead(Ygritte)][foo(betray(protect(( ( TABLE[Jon][mislead(( Hodor ))] ) ),TABLE[foo(COLS,-49,y)][COLS])) / foo(rule(dog))) - 900.277 - mislead(( ( -7 + Ygritte ) / -0.91 + --45 )) + ( y )] - 740.563 * COLS - Arya][x],bar()) * Arya
}
};
	betray(ROWS,0.58 / -0.58 + TABLE[-x][( -15 )] - ( y ),dog)
} else {
	COLS;
	y += 29
}
}
def TABLE[-330.13][k] {

}
assert TABLE[betray(rule(ROWS + -15,( ( ( Stark ) ) ),mislead(COLS * COLS + mislead())),( ROWS ) - -1)][( COLS ) + protect()] : "Fear cuts deeper than swords."
def TABLE[Sansa * -1][k] {
	-0.64;
	bar(520.6485);
	if(x){
	-( -0.24 )
}
}
assert betray(COLS,-( ( TABLE[Sansa][54] ) - 17 * -0.23 + x ) / betray(Sansa,25) / -foo() - ( -28 + foo() )) : "One can not simply parse himself"
assert 0.5 : "Fear cuts deeper than swords."
def TABLE[dog - x][i] {
	if(TABLE[foo(Stark + -( TABLE[( Jon )][-0.95] ),ROWS)][Jon]){
	TABLE[--0.33][COLS];
	if(destroy(mislead(ROWS + 45,( -rule(-0.97 - -0.14 - rule(ROWS,TABLE[TABLE[Stark][COLS]][-rule(Stark,-( ( ( Hodor ) ) ) * -( bar() ) * ( -mislead(COLS - -740.65 / rule(--destroy(-0.06,( Stark + mislead(-Sansa * -0.95,bar(dog) / -dog) - -1 - x / mislead(ROWS) / -( ( 9 ) ) )),1)) ) + mislead() * betray(),Ygritte)],TABLE[COLS][-Jon]) * ( -1 ) - protect(x + Hodor) * -670.95 / -1 * ( -mislead(-0.42,-ROWS) - destroy(Arya,foo(COLS,TABLE[Stark][Stark]),67 + -y) ),( -0.53 )) ),ROWS))){
	95
};
	Arya += ( ( -0.44 ) )
} else {
	if(-bar(-TABLE[-0.28][y],810.9) - -mislead(COLS)){
	if(( ( ( ( -0.1 ) ) ) )){
	Ygritte += -91
} else {
	TABLE[mislead()][( Sansa )]
}
} else {

}
};
	x /= ( ( -28 - ROWS ) );
	Arya
}
def TABLE[dog][i] {
	if(betray(x,foo(mislead(-Arya + ( ( -27 ) ) * Arya),( betray(1) )))){
	x -= TABLE[y][protect(dog,TABLE[ROWS][( -( ROWS ) )] + ( protect(-11,( -67 ) - protect(( ROWS / -Stark ),49)) * -43 / -0.82 * COLS + Sansa ) / -9) * ROWS]
}
}
def TABLE[COLS][k] {

}
assert ( ( ROWS ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -TABLE[( 26 )][( COLS ) + 68] / -29 : "Fear cuts deeper than swords."
assert 1 : "Winter is coming"
def TABLE[COLS][j] {
	Jon * TABLE[x][( -0.88 )]
}
def TABLE[x][i] {

}
def mislead(Hodor,y,Sansa){
	ROWS
}
def TABLE[protect(-880.36,( ----dog ) - ( dog ) / 1,-44)][k] {
	if(( -99 )){
	if(-0.67){

} else {
	Hodor *= -20.315;
	ROWS - -TABLE[foo(Arya,ROWS)][bar(-0.54 + 880.73 * ( ( ( 50.771 ) ) ),-1) * ( 22 / Arya )] / TABLE[Hodor][-( foo(-( Jon ),TABLE[COLS][-41]) - Jon )];
	Jon -= -0.33
};
	dog /= -Stark + TABLE[Stark][TABLE[foo(--COLS,( Stark ))][Sansa]]
}
}
def TABLE[-95][k] {

}
def TABLE[foo(ROWS)][i] {
	if(-ROWS * 0){

}
}
var Arya = -( -490.1 * ( 25 ) / TABLE[-0.41][rule(Sansa,TABLE[mislead()][1] - ( ROWS ))] + -39 / ROWS - 1 )
var Sansa = ROWS
def destroy(Hodor,Hodor){

}
var dog = --( Ygritte ) * ( 1 )
var x = Ygritte
def TABLE[y][k] {
	Stark *= foo(( Sansa ),betray(0.03,( ( rule(foo(( foo(( foo(( -rule(( Stark ),( --1 )) ) + COLS / 1 / y,x * TABLE[Jon][ROWS],Arya) / Sansa / --x )) ),TABLE[foo(COLS,COLS)][y],Sansa),Sansa / Hodor) ) - -0.66 + -ROWS )),Ygritte);
	x += foo(protect(-84,ROWS,Jon));
	if(( betray(140.2977 + -dog,--92 * -71) * Hodor )){

}
}
def TABLE[-( mislead(( TABLE[-1 * -0.52][mislead(COLS,( COLS ))] )) )][i] {
	--TABLE[Ygritte][mislead(-Ygritte,ROWS)]
}
var Stark = 780.854
def TABLE[TABLE[1][destroy(bar(Hodor * -Jon - ( ( 1 - ( Arya ) ) ) / -Stark * ( 92 ) * Sansa,0.1 / bar(490.7004),( mislead(( -1 * ROWS )) ))) + -TABLE[( -39 )][Ygritte]]][k] {
	-10;
	Stark /= TABLE[( COLS ) - protect(mislead(Sansa),-0.54 / COLS / COLS + ( Arya ) - -rule(1,protect(),Sansa)) / destroy(-0.24)][21]
}
var Jon = y
def TABLE[-( -COLS )][j] {
	if(betray(Jon,TABLE[y][ROWS - bar(( ( -( ROWS ) ) / rule(-COLS,( foo(( -betray(-( ROWS ),rule(ROWS)) ),( -mislead(( --y )) ),30) ),mislead(ROWS)) * ( betray(ROWS) ) - Hodor ),protect(TABLE[( -39 )][ROWS + TABLE[0.21][COLS] / -ROWS] * Sansa,destroy(Sansa),protect(Arya - ( y - -0.81 / Arya ) + TABLE[Sansa][-12])),ROWS)],-0.19)){
	y += Ygritte;
	Sansa *= -0.15
}
}
assert y + -ROWS : "Fear cuts deeper than swords."
def TABLE[-( ( ( -foo(bar(( -COLS ),Ygritte,( protect() )),COLS) ) / 1 ) ) + x + -betray(-rule())][i] {

}
assert betray(rule(),protect(TABLE[rule()][mislead(-83 + 1)])) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[dog][k] {
	if(ROWS){
	dog += -( -17 );
	( ( bar(--( -Jon * COLS + ( ( ( bar(-1) ) ) ) ) * -( -1 ),570.91) ) )
}
}
assert destroy(-64 - ROWS) / x : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( ( --0.29 * rule() ) )][i] {
	if(( rule(bar(),TABLE[betray(0.5,-ROWS / x)][Jon / foo(bar(),--( rule(destroy(TABLE[-0.01 * --1][protect(ROWS,COLS) + ( ( Ygritte / --destroy(mislead()) * Hodor - -77 / ROWS / -78 / -dog ) )],betray(( --y ) / dog,-COLS / Stark)) - COLS,rule(foo(),betray(Stark,-0.75 / Jon,foo(destroy(0.2 + Sansa,( ( foo(( ( Sansa ) ) - dog,( rule(-64 * -ROWS * ROWS / 0.21,Stark) )) ) )) / COLS - 0.87) + TABLE[bar(-15,-92,rule(-260.6878,( COLS )))][COLS]))) ) + Sansa + -17,-0.04)] / rule(-ROWS + ( -Ygritte ),-1,TABLE[1][-dog * ( TABLE[-0.14][( foo(Jon * 0.35) )] )]) + 540.4,betray(( COLS + rule() ) * 63,-( ( y ) ))) - dog )){
	destroy(TABLE[-Ygritte][-1])
}
}
assert ( -0.88 ) : "Winter is coming"
var Stark = 0.26
var Sansa = 73
var Sansa = foo(-foo(),Jon,TABLE[--22 + -( ( -COLS ) ) * -( rule() + Arya )][protect(-( mislead(protect(),-49) ) - --1 * -4 * ( COLS ) + ( ROWS ),0.81)])
assert -Sansa / ( -0.64 / ----( 0.65 + ( -bar(-0.96,-23,-bar()) - -protect(( ROWS - destroy(( -dog + COLS + y * ( -15 ) ),mislead(( 1 ),bar())) )) / -510.682 - --0.28 / 31 ) - -44 ) / ( TABLE[0.79][TABLE[bar(Hodor)][-0.16]] / protect(( -10.184 * -ROWS + ( 84 ) * 0.44 )) + -Jon * foo(( TABLE[rule(-Ygritte) / TABLE[( destroy(-y) )][-( Sansa )]][-0.97] ),-0.89) ) / Sansa ) - ( rule(Sansa,0) ) : "Fear cuts deeper than swords."
def protect(Stark,Jon,dog){
	if(x){
	if(0.67 * -0.14){
	if(COLS){
	if(Hodor){
	if(COLS){
	-COLS - Hodor / ( Hodor )
}
} else {
	rule(protect(( -TABLE[y][( ( COLS + x ) )] ),Ygritte,COLS));
	if(Jon){
	Arya
};
	if(ROWS){
	protect(y,y,260.546);
	if(rule(foo(250.779 * x,COLS * TABLE[-1][COLS])) / ( Sansa )){

}
} else {
	destroy();
	if(-TABLE[-COLS][protect(( 18 ),TABLE[ROWS][dog])]){
	Arya /= 10
} else {
	-( --( -bar(COLS,betray(bar(-COLS - protect(Ygritte,( -0.62 ),( -79 - ( -( -mislead(TABLE[COLS][betray(-rule(TABLE[( Arya - --20 )][-1]))] * -ROWS + -1 / -41 / ( ( ( bar(( foo(( ( betray(mislead(-TABLE[Stark * 1 * 66][destroy(590.17,( ROWS ))])) ) ),rule(COLS,Ygritte - Hodor)) )) ) ) ) / -COLS / -1) - COLS ) ) ) / 0.13 - ( ( dog ) )),Arya) + ( ROWS ) / --0.18,( -Stark ) / ( TABLE[-dog][-81] ),x * ( -TABLE[rule(--Arya + x * 0.76 * -( destroy(( ( ( bar(( 51 ),-59,67) ) ) ),--540.38,COLS) ) * mislead(240.55 / Stark) - -0.51 * 1,bar(--Hodor,protect(( -dog ) * ( ( TABLE[ROWS][rule(--0.56 / --TABLE[0.8][-0.09],Stark,-330.95)] ) ),TABLE[destroy(( --ROWS / ( Hodor ) )) * ROWS][Sansa]),Stark))][TABLE[Jon - mislead(0.02,900.1 * 78) / -Ygritte][-( ROWS )]] / -1 ) + COLS + ROWS * bar(ROWS + -ROWS) / -protect(betray(y,Hodor,foo(protect(),-COLS,-30.27)),( destroy(rule(TABLE[TABLE[-Stark][( -Sansa )]][COLS],rule(-68),Arya),Arya) / ---ROWS + bar(-TABLE[-62][-TABLE[-y - Sansa][460.94]],( mislead() )) - -92 )) + x)) ) / --rule(COLS) );
	protect(( destroy(TABLE[Sansa][ROWS]) ))
}
}
};
	if(COLS){
	if(betray(TABLE[-COLS][( -TABLE[0.38 * ROWS][foo(18,TABLE[1][( COLS )])] - TABLE[TABLE[betray(bar() - destroy(mislead(),Arya))][Sansa]][rule(-64)] )],COLS)){
	Ygritte += dog
};
	if(TABLE[-Jon * -0.45][-1]){
	1 - bar(ROWS);
	dog += -0.55 + ( COLS )
}
}
};
	Stark -= protect()
} else {
	Sansa += Stark
};
	Sansa /= Ygritte;
	if(betray(Hodor)){
	( ( -COLS ) ) - 41 + -0.59;
	x /= 0.76;
	if(( -1 ) + betray(( Stark )) * ROWS + Arya){
	if(TABLE[---72][-protect(-1)]){
	y /= -( Stark );
	if(( Ygritte )){
	if(betray()){

};
	x -= ROWS;
	dog += y
}
} else {
	Ygritte
};
	if(( destroy(ROWS) )){
	38;
	if(mislead(( foo(Ygritte,58,COLS) ))){

}
}
} else {

}
}
} else {
	if(Sansa){
	Sansa *= TABLE[500.724][TABLE[0.73][1]] - ( TABLE[mislead()][0.67] );
	if(( protect() )){
	if(Arya){
	if(( ( ( 0.28 ) ) )){
	Sansa *= COLS - -1 / ROWS - --ROWS;
	Stark += ( -COLS / mislead(ROWS,bar(Stark) - y / -0.48 - -38) / TABLE[( mislead(Arya,--0.81 / Stark / x * Hodor,-78) + bar(( -1 ),mislead(0.29)) )][0.86] )
};
	Stark /= COLS
} else {

}
} else {
	if(Ygritte){
	if(Stark){
	if(ROWS){
	if(Jon){
	ROWS
};
	dog /= betray()
} else {
	rule() * -x / 1 / TABLE[COLS][( Hodor * TABLE[( ( foo(destroy(( -0.94 ),y),rule(( Hodor + --COLS + dog ))) ) )][mislead(--0.94,( COLS ))] ) - Arya - 0.27 - Arya];
	Jon /= Hodor
};
	dog += --0.57 / -y
} else {
	betray(--65) + dog / rule(COLS) + dog * mislead(y)
}
};
	Jon /= COLS
};
	if(mislead(-52 / ( ( COLS ) ))){
	Sansa *= Ygritte;
	-0.98
} else {

}
}
}
}
var Sansa = COLS
def TABLE[foo(Sansa,-( mislead(-30,y) ))][i] {
	if(mislead(1 + protect(( 0.79 - -1 )),0.33)){
	if(-( -Arya + TABLE[-( x )][ROWS] - -mislead(betray(70,-540.09 + -TABLE[Jon * ( Arya - -foo(( ( Hodor ) ),ROWS) ) * ( ( ( ( TABLE[-0.23][-22] ) ) ) )][( ( mislead(46 - -COLS,y) ) )],Sansa),Sansa) )){
	if(--0.81){
	Arya + TABLE[COLS][-( dog )];
	Hodor -= Arya;
	if(( Hodor )){
	if(bar(-TABLE[protect(( -( --0.26 / ROWS ) ))][( betray(77) + ROWS ) / ROWS] + ROWS)){
	if(-48){
	0.72
}
} else {

};
	if(( Stark )){
	dog -= x;
	Stark /= -0.93;
	x
}
} else {
	y /= -0.22
}
};
	if(( -TABLE[( ( -0.06 ) )][-foo(mislead(TABLE[ROWS / ( COLS )][-y / x],destroy(protect(destroy(ROWS,1) / -0.26 - ROWS),TABLE[-1][--1 / --foo() + ( ( -dog ) ) - rule(-TABLE[( ( -0.43 ) )][destroy(-10,Hodor)],1)] - COLS * 49),Arya) - foo(Arya,COLS))] )){

}
};
	ROWS;
	x *= rule()
};
	-TABLE[-Sansa][( -0.05 )]
}
def TABLE[Ygritte][k] {

}
assert ( 70.812 ) : "Winter is coming"
def protect(Hodor){
	if(Ygritte / Ygritte){

};
	dog /= ( x );
	y *= -1
}
def TABLE[( y ) / -1 * -COLS][i] {
	if(-270.762){
	y;
	bar(1);
	COLS
} else {
	if(rule()){
	Jon *= TABLE[( destroy(-20.277 * ( protect(COLS,Stark + Stark) )) )][destroy(foo(( Sansa )))]
};
	if(( -69 )){
	-17
} else {

}
};
	Jon *= x;
	-0.82
}
def rule(dog){

}
def protect(Stark,Stark,y){
	rule(-840.8) - ( ( Ygritte ) )
}
def TABLE[( --( COLS ) )][i] {
	if(-0.46){
	if(( y ) * mislead(-betray(ROWS,TABLE[( ( bar(430.79,TABLE[rule(( ( -Sansa ) ),COLS * COLS)][-0.94]) ) )][( -0.9 )],-36),-bar(dog,protect(y),Jon) / bar(betray(-8,Hodor - protect(Ygritte)),( Stark + bar() / COLS )) * mislead(( -protect(( rule() )) * foo(ROWS,-90,mislead(ROWS,mislead(),Hodor)) )) * Arya,ROWS)){
	y += -1
} else {
	if(( ( ( -0.47 ) ) * 0.81 - Sansa * ( -Jon ) )){
	ROWS;
	if(( Stark )){

} else {
	y -= COLS
};
	if(( Hodor )){

}
} else {

}
}
} else {
	dog /= 840.237;
	if(Ygritte){
	mislead(destroy(-COLS),x);
	if(TABLE[24][protect(protect(COLS))]){
	dog += -37
};
	if(90){
	dog += 1;
	( Arya );
	Jon += Arya
}
} else {

}
};
	Hodor /= betray(-20.8347,TABLE[y][-COLS] * mislead(y),x)
}
def TABLE[rule(Sansa)][j] {
	Stark += -52 - -( ROWS );
	if(mislead()){
	if(( Arya ) / ( x )){
	Stark /= y;
	if(foo(-TABLE[destroy(ROWS) - ( Hodor )][( ROWS )] * TABLE[-protect(Arya,ROWS)][-( ---Sansa )] * -Jon,1)){

} else {
	betray(-bar());
	if(---390.5481){
	dog *= 0.12
};
	ROWS
}
} else {
	if(COLS){
	Ygritte
};
	Sansa -= ( COLS )
};
	y *= -35
}
}
def rule(){
	if(mislead(-( ( ( -120 ) / Arya ) / TABLE[y][bar(TABLE[940.91][-30])] ),Arya / COLS)){
	TABLE[ROWS][15]
}
}
def destroy(){
	if(( 91 )){
	Jon += -( y )
}
}
var dog = Hodor - -x + TABLE[mislead(protect(protect()),protect())][-30] + Sansa
var Jon = -( ( -0.09 ) ) - -1
def TABLE[x][i] {
	Ygritte
}
assert -TABLE[y * TABLE[betray()][destroy(80)]][-foo(--540.69,( ( mislead(( -48 ),Hodor,Sansa) ) ),TABLE[-( COLS )][COLS / y])] : "Nothing burns like the cold."
assert -destroy(destroy(betray(protect(Jon,Stark) / ( y )),Arya) / --Ygritte) / ( --betray(( 21 ),COLS) + 0.8 / -destroy(mislead(bar(( foo(foo(TABLE[( foo() )][COLS]),-destroy(rule())) )),Sansa),x,x) - -( ( ( -0.58 ) ) ) * protect(( --1 + x ) + TABLE[-( -COLS / foo(( y - Stark )) * -55 )][-bar(betray(y * ( -860.4653 ),( TABLE[-1][y + --69] + COLS ) * COLS,Jon) + ( --470.3683 ))] + protect(1) - --bar(protect()),-( ( Hodor ) )) * 81 ) * 20.04 - mislead(COLS) : "One can not simply parse himself"
def TABLE[Stark][i] {
	Arya /= -foo(-47,foo(1,ROWS),-0.87);
	dog -= ( mislead(foo(( ( rule(mislead(-1),( ROWS )) ) ),( -( ( ROWS ) ) / bar(( TABLE[destroy() + foo(630.7017,-bar(( Stark ),foo(dog,Jon)),-0.27)][--TABLE[-( 0.13 )][Hodor + 68]] ),-ROWS) ))) )
}
def foo(Hodor,Stark,y){
	if(-0.75){
	Arya *= 910.1;
	if(( TABLE[Sansa][TABLE[foo(( -0.46 ))][destroy(45,Jon)]] )){
	if(protect(1)){
	if(y * TABLE[( TABLE[( Arya )][Jon] )][-bar(82)]){
	if(Sansa){
	if(( -0.77 * -y )){
	Jon -= Sansa;
	Arya += 0.61
};
	if(y){

}
} else {
	Jon *= ( -( protect(COLS) ) )
};
	Sansa -= TABLE[protect(80 / ( COLS ),TABLE[-1][620.453 - betray(-betray(-protect(Ygritte) - ( betray() ),rule(foo(bar(ROWS,( 0.68 ),x)) - ( ( ROWS ) ),y)) * ( -1 ))])][Hodor * bar(70.13)] - Arya
};
	if(( -15 )){
	x *= Ygritte;
	if(COLS){
	protect()
} else {
	Ygritte += ( -protect() * bar(880.174,-dog) - -78 );
	TABLE[y + 46][-( -0.55 )]
}
} else {

}
};
	-0.9
} else {
	Stark += ( bar() - foo(510.3908,Jon / Stark) ) - 970.57;
	Sansa -= --( ( mislead(300.058 * protect(-( -( COLS ) ) - foo())) ) + --Jon );
	if(-( -( -Sansa ) + ( --TABLE[ROWS][-dog] ) + -53 )){
	if(dog){
	TABLE[Ygritte][COLS];
	Arya += -ROWS
};
	y;
	x
} else {
	if(TABLE[x][ROWS]){
	if(-1){
	if(--( -1 )){
	0.75 + betray(-Stark)
}
};
	Arya *= -dog
} else {
	if(-COLS){
	mislead();
	if(-TABLE[y][0.04 / ROWS]){
	if(( ( bar(Hodor) ) )){
	dog /= 450.63;
	if(Jon){
	-740.43;
	y -= mislead(TABLE[betray(( -54 ),Stark) * bar(betray(( ROWS )),ROWS) + ( COLS ) / --COLS][-Sansa * ( -( ( ( -Sansa ) ) ) )]) + Stark
} else {
	( Jon ) + bar(( ROWS + 0.18 ),( ROWS )) * betray(-910.14 / ( ( 0.7 ) + ( -540.59 ) ),TABLE[ROWS][protect(Hodor)],Arya) - ( -0.67 )
};
	Ygritte -= ROWS
} else {
	if(bar(0.99)){
	bar(( Ygritte ));
	Stark
} else {
	-COLS
};
	Arya += Jon
};
	y -= -TABLE[-destroy(protect(ROWS + Stark,y))][Hodor / --92] * COLS + -bar(( -63 ),64,ROWS) + TABLE[( x - --0.09 - -60 )][33]
}
}
}
}
};
	Stark += 69
} else {

};
	if(-( -protect(dog,destroy(-( Jon - -0.39 ),foo(Arya,34)) - -( -y )) - ROWS * y )){
	( 340.512 )
}
}
assert protect() + Arya : "Fear cuts deeper than swords."
def TABLE[-1 + --890.029][j] {
	if(( ROWS )){
	COLS;
	Stark /= COLS
};
	if(( -700.645 )){
	Jon -= -betray(destroy(mislead(--( -protect(TABLE[ROWS][-180.289],x) - -170.8847 * 0.55 - ROWS + ( ( protect(TABLE[0.1][bar(( 420.5 ))]) + -( ( 0.76 ) * ( betray(( x ),destroy(Stark,( mislead() ) / -22,-0.94)) - betray(0.35 - --( ( -120.948 / -bar(( Sansa )) ) ) + COLS,foo(-rule(Ygritte,x),bar(-COLS))) ) ) + Arya + 0.48 ) ) * protect(1 - ( 68 )) + 0.73 ) + 60)),Sansa + -( ( destroy(-( -1 ),Hodor,betray(0.46,0.57) / -( -foo(19,Sansa) + COLS ) * Stark * 1) ) ) - COLS / Arya + Jon - -560.7);
	Ygritte += 0.37
} else {
	y;
	Sansa /= ( Jon )
};
	if(( 89 )){

}
}
assert Jon : "One can not simply parse himself"
def bar(){
	if(( COLS )){

} else {
	if(TABLE[ROWS][destroy(ROWS,COLS,dog) - Jon]){
	if(-0.82){
	810.7451;
	58
} else {
	TABLE[mislead(-0.49 + Ygritte - ( y ) / ROWS + dog,foo(bar()))][bar(-880.33)]
}
} else {

};
	if(destroy(( COLS - ( 0.89 ) )) * ( -foo(-dog / ROWS * -mislead(mislead(rule(( ( x + ( Ygritte ) ) ),( -2 ),protect(( 0.23 - ---0.29 * Hodor )))),( ROWS ),Sansa),-0.2) )){
	if(ROWS){

} else {
	y *= ( betray(y) );
	if(dog){
	dog *= Hodor;
	if(protect(-0.6)){

} else {
	x -= y;
	if(TABLE[-destroy() - ROWS][-90]){
	Arya -= protect(foo(COLS,940.76),Ygritte,TABLE[-560.89 + ( -840.3 )][( 1 ) / -220.1771 / -74 / TABLE[( ( destroy(protect(rule(-( -Hodor - ( bar(-31,( -rule() )) ) ) * -( x ) + Arya,( 1 ) / --1 / rule(x) * bar(880.955)) + ( ( -0.56 ) ),bar(Arya))) / Stark ) )][930.9 - ROWS]])
} else {
	( -protect(( destroy(x) )) - -Sansa + -( Stark ) );
	x += COLS
}
};
	Stark -= 1
};
	Jon *= Ygritte
};
	if(( foo(rule(protect(-Arya,Sansa,-( betray(220.78) )) * ROWS + Sansa,rule()) + dog,29 + 35) )){
	if(---0.46){
	if(protect(77,COLS + destroy(0.98,destroy(rule(y * --620.3),COLS)),x)){

} else {
	x += TABLE[Arya][bar(--600,0.49 - protect(ROWS))]
}
} else {
	COLS / TABLE[( y )][bar(11,ROWS) * ROWS - COLS] - betray(bar(0.89) * -1)
};
	if(-COLS){
	dog *= foo(( TABLE[( rule() )][-0.19] ),ROWS)
};
	-destroy() - Ygritte
} else {
	x /= TABLE[( COLS )][foo(0.03)];
	if(Hodor){
	if(--0.02){
	TABLE[Ygritte][x];
	Arya
};
	dog -= destroy(rule(( -( Ygritte ) ),( destroy() )))
}
}
} else {
	-( ( 98 ) )
}
};
	if(0.1){
	if(COLS){

};
	if(COLS){
	( TABLE[( rule(rule(( 3 )),dog) )][0.39] - dog );
	x /= protect(0.13,( ROWS ),-foo(-64,-0.58 + -630.37 + ( Arya ) / ( Hodor ),-290.03) - mislead(( bar(Sansa / -( betray(COLS * -( Ygritte ) - ( y ) / -mislead(Stark,destroy(-dog)),TABLE[destroy(Ygritte,COLS,COLS / protect(rule(( 0.78 ),-200.93),( ( y ) )))][ROWS],mislead(( TABLE[COLS][destroy(( ( ( rule(-0.12,bar(( ( foo(23) ) ) * protect(-( bar(( -TABLE[( COLS )][( Stark ) + ROWS] - ( --COLS / 91 ) * Stark ),Sansa,----870.2 - ( ( -ROWS ) )) ) - -TABLE[mislead(rule(Arya)) + ( -0.84 )][Sansa],-protect(-1)))) ) ) ),( ( 56 ) ),foo(( ( -20 ) )) - --destroy(( Jon * TABLE[-( -0.69 )][destroy(760.931)] + protect(-0.46,Stark) ) - bar() + y / -( 960.5 ) / ( -COLS ) / TABLE[0][Jon] / 160.791 * ( x )))] ) - -TABLE[Jon][-600.468 * -1] + destroy() + bar(COLS,-12,--rule(protect(destroy(-65)),( ( ( 0.92 ) ) )) + Sansa),-0.19)) )) )) + destroy(-5,( ROWS )))
};
	if(COLS){
	--0.87 * destroy(dog) - destroy(( TABLE[protect(TABLE[x][COLS - -980.3479 + 0.77 + -mislead(( 11 ) / ( y ),x)],( 1 / bar() ))][Ygritte] ),dog,foo(-( -50 )));
	if(-ROWS){
	foo(Arya * COLS / -0.41 * Hodor * -COLS,( dog ),Hodor)
};
	if(dog){

}
}
} else {
	( -( ROWS ) );
	TABLE[( COLS )][270.26]
}
}
assert protect(( Arya + x )) : "One can not simply parse himself"
def TABLE[destroy(( -protect(-76 / protect() + ---1000.835) ),mislead(destroy(Ygritte)),ROWS) / destroy(protect(TABLE[1][TABLE[( Arya )][-COLS]] / COLS),foo(--Ygritte - -64))][i] {
	if(y){
	if(mislead(TABLE[mislead(dog * TABLE[-52][--330.94 - TABLE[y][TABLE[0.76 - COLS * 910.49][( mislead(( -0.91 ),-44,440.82) )]]],Jon,COLS * --42) + 0.96][( Arya ) - mislead(61,bar()) - x - 53 / COLS],Arya,( --Ygritte ))){
	if(( -140.106 )){
	TABLE[1][0.11 / Stark] - y * dog;
	Jon *= ( ( ( ---y * -Sansa + -Hodor ) ) );
	betray(( -betray(( -mislead(-0.03 / ( TABLE[520.3][rule(ROWS,--70 * -TABLE[-rule(TABLE[-( foo(( --92 ),TABLE[( destroy(x - 19,( Sansa )) )][betray(( -800.764 ),610.7)]) ) * protect(-12,-Stark) * foo(ROWS / x,--( Sansa ),COLS)][protect(destroy(--0.17)) / -foo(destroy(-protect(x,rule(-Ygritte)),destroy(protect(Arya / destroy(protect(--TABLE[--protect(TABLE[Ygritte][ROWS],x,bar(( betray(( ROWS )) ) / foo()) / -TABLE[foo(-0.2,( TABLE[COLS][foo()] ))][y - ( -Jon ) + ( Arya )]) * mislead()][( ( -( ( -600.796 + -ROWS ) ) - -9 ) )] * 0.12 / mislead(-COLS),( --ROWS )),dog,TABLE[( -COLS )][dog]))),Jon))],0.22 - ( TABLE[Sansa][Sansa] ) - -x * Jon * Arya,( -mislead(rule(Stark,1,Jon),-Hodor) ))][-betray() - ( rule(Stark,mislead(-1) - bar(-mislead(-TABLE[-1][-0.86])),COLS) )],Sansa)] )) - -Arya )) * bar(TABLE[-( 74 )][foo(ROWS,( betray(-8) ))],COLS) / --TABLE[destroy(foo(( rule(-( -( Sansa ) ) * ROWS) )) - mislead(-1),Jon + ROWS,-170.953)][( -0.64 - protect(TABLE[protect(14,COLS) * 26 + ( -bar() )][( protect(y) )],betray(-x,-destroy(( ( ( -mislead(( TABLE[TABLE[-160.19][( 1 - COLS )]][Sansa] )) ) ) ) / rule()) - COLS),( ( rule() ) + mislead(-mislead(COLS,COLS,COLS / protect() - ( COLS )),TABLE[-750.057][Stark]) )) )] )) / -690.38
};
	if(x){
	Stark *= Arya;
	if(-Hodor){

}
};
	if(TABLE[mislead(-540.2,-Stark)][-protect() - COLS]){
	Sansa += --0.46 - Jon;
	dog
} else {
	Arya /= bar(1,Hodor);
	Sansa;
	if(-TABLE[Ygritte][( -( ( ( -mislead(bar(( TABLE[rule()][Sansa + y] ),( ---x + 0.16 ))) ) ) ) )]){
	if(-ROWS){
	TABLE[Stark + COLS][ROWS + ( -31 )];
	if(( destroy(-0.71 - ---260.56,-COLS) )){
	-82 - TABLE[( -1 + ( ( -( dog ) ) ) / -COLS - COLS / Ygritte )][COLS];
	if(-1){

} else {
	if(TABLE[0.76][ROWS]){
	Hodor += betray(( foo(protect(--86,COLS)) ),destroy(37))
};
	protect()
}
};
	y
} else {
	dog -= -95;
	( Arya );
	if(dog){

} else {
	Jon -= COLS;
	dog
}
};
	betray()
} else {

}
}
} else {
	if(COLS){
	Jon *= ROWS;
	if(rule(-3)){

}
};
	y -= --0.14 / 52
}
} else {
	Ygritte;
	--60 - ---1 * ( -COLS ) * -( protect(Jon,-63,COLS) ) - ( ROWS + TABLE[rule(( ( 1 + -COLS + COLS ) ))][protect()] ) / ( COLS ) / 1 / bar(Arya,foo(670.8697,mislead(foo(-COLS,-0.18 - -61,0.08)),0.6) * -0.79) / betray(protect(ROWS,COLS)) + --0.23 + ( TABLE[y][COLS] )
};
	Arya *= -40
}
def TABLE[( COLS )][j] {
	betray(25);
	Jon
}
def TABLE[--COLS][i] {
	Stark
}
assert ( Ygritte ) : "Fear cuts deeper than swords."
assert protect() : "What do we say to the Lord of Death?"
def TABLE[( dog )][i] {
	if(rule(( mislead(COLS,dog) ),( -660.685 ))){
	if(ROWS - foo(Arya)){
	x *= protect(x,x) / ROWS
} else {
	COLS;
	destroy(foo(),y) / Hodor
};
	-Ygritte;
	( ( ( ROWS ) ) )
} else {
	( betray(-740.85,Stark / 950.7721,( TABLE[foo(betray(( -0.6 )) + Hodor,bar(ROWS,( ( ( -710.085 ) ) )))][Hodor - Hodor] )) );
	if(Sansa){
	y += -0.73;
	( ( -Arya ) ) * TABLE[-COLS][( ( ( -bar(destroy(rule(41,ROWS,Jon) + -mislead(),-0.05),( ( betray(( bar(-1 * -660.072 - 0.11 / 0.72) * TABLE[300.06][ROWS] )) ) / -1 )) ) ) )]
}
}
}
var Ygritte = dog
var Ygritte = Hodor
def TABLE[-protect(( protect(-0.67) ))][k] {
	y
}
assert ROWS : "One can not simply parse himself"
def TABLE[destroy(dog / 470.055)][k] {
	y -= ( COLS )
}
var x = -49
assert -COLS * rule(0.17) + -foo(Sansa,Jon,COLS) + x : "Fear cuts deeper than swords."
def TABLE[( mislead(COLS / mislead(0.54)) ) * ( y )][i] {

}
assert -240.474 : "One can not simply parse himself"
var y = rule()
def TABLE[COLS][k] {

}
var dog = x + Sansa
def TABLE[71][k] {
	TABLE[42][--Sansa / TABLE[Ygritte][protect(( foo(--56,COLS / destroy(ROWS,89)) * COLS + ( Arya ) ),( 0.46 ) / betray(-0.87,x),TABLE[COLS][COLS])] / ( bar() ) / TABLE[-140.28][y]];
	COLS
}
def TABLE[1][i] {
	Stark -= 0.6 * TABLE[---0.86][1] / dog
}
def TABLE[-rule(-COLS * -530.8,y / ( x ))][j] {
	ROWS;
	-50.7 * -( mislead() / -180.8435 + ( TABLE[-protect()][ROWS] ) ) - COLS
}
assert -0.52 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(){
	if(-0.47){
	dog /= 1;
	if(-rule(-0)){
	Sansa /= protect();
	if(( ----560.57 / --betray(( ( betray() * ROWS * 0.04 ) ) + ( ( -0.16 ) ),( -420.24 ),-rule(( --35 * betray(destroy(-rule(( rule(Ygritte,-1) ),mislead(Jon,Arya) * -0.96),betray())) ),( mislead(Arya,rule(( -91 ),betray(( -65 * TABLE[-68][-28 + ( destroy(betray(( foo(destroy(Hodor,protect(),protect(-1 + ( bar(87) - ( 18 ) ),COLS * ROWS + Jon)),-dog,900.389) ),0.76 / ( TABLE[dog][dog] ) * ( mislead(Hodor,Sansa / ( -( ( ( ROWS ) ) ) * x )) ))) )] - 0.85 - x ) / ( bar() )))) ),( -710.7 ))) - -( TABLE[rule(y)][Sansa] ) / ( 0.67 ) + Arya ) / Sansa){
	if(70.855){
	if(( ( ( -TABLE[-0.81][-0.78] ) ) )){
	if(protect(destroy(-1 - ( -destroy(---80.9803,y * -( foo(bar(),destroy(( -Stark ),bar(protect(Jon)))) ) + -0.96 - mislead(( y ),--30),59) - -15 )),-Stark * ROWS + TABLE[-0.99][1 * -( -1 )])){
	Stark -= ( betray(Hodor,( ( 1 ) - Sansa )) ) / 0.7;
	Sansa /= mislead(( ROWS ),-( -48 ),-23 / Arya)
} else {
	mislead();
	--40
}
} else {
	if(( -39 )){
	( ROWS );
	if(--5){
	TABLE[ROWS][dog]
}
};
	-0.38 + destroy(-COLS)
};
	x /= -Ygritte
} else {
	if(Jon){
	if(-610.866){
	y / ( ( --0.7 ) )
};
	if(-0.69){
	if(destroy(-protect(-Ygritte) * --protect(TABLE[( ROWS )][( COLS )]))){
	ROWS;
	( TABLE[-( -( 290.2 - ROWS ) * Hodor * ( TABLE[dog][-Stark - -Hodor / TABLE[Stark * --TABLE[TABLE[ROWS][-440.643]][( 69 )]][COLS]] ) )][-660.3] );
	-190.15
};
	if(( 1 )){

} else {
	if(ROWS){
	if(--betray()){
	if(y){
	Jon += ( y )
};
	46;
	( -500.078 ) / COLS
}
};
	( ( COLS ) / TABLE[74][bar(-( --1 ),( Arya ),ROWS) / mislead()] ) * protect(rule(-COLS))
}
} else {
	if(Ygritte){

};
	if(-ROWS){
	( TABLE[COLS][foo()] )
};
	if(0.67){
	TABLE[-ROWS][mislead(COLS)];
	if(COLS){
	Jon /= TABLE[ROWS][( Hodor )] + ---50 / ROWS / x;
	TABLE[y][-Hodor] * --protect(1 + x)
};
	if(destroy(y)){
	x /= ( --1 - x * ( --( --1 - foo(( ( ( --0.69 ) ) ),betray(destroy(Arya) / --destroy() - TABLE[55][Hodor] - -( bar(TABLE[ROWS - TABLE[-0.52 - x][Hodor] + ( 1 / ROWS + Arya )][( foo(0.15) )],Ygritte,42) ) - ( y ) / 90) + ( COLS )) ) ) + Arya * 0.26 - -x );
	Jon += ROWS
}
} else {
	if(0.49){
	( Arya - y );
	Stark *= TABLE[-43][COLS];
	Jon += ROWS
} else {
	( COLS );
	Hodor -= ( --COLS + TABLE[-9][-( foo() + bar(destroy(TABLE[destroy(-3,Hodor,( Sansa ))][-TABLE[-0.45][ROWS]],-20.12,Hodor)) / TABLE[foo(Arya / -1)][( Stark )] ) - COLS / destroy(--550.6,650.66,-mislead(-protect(mislead(890.1,( ( TABLE[COLS][COLS] ) * betray() - Sansa * Arya / ( y ) )),( x )),Jon))] )
}
}
}
} else {
	x -= 0.45
};
	x -= COLS - foo();
	if(y){
	COLS
} else {
	if(--COLS * -bar(-27,180.129) + Sansa * mislead(dog,x,Arya)){
	-COLS
};
	Arya *= ( ( 0.05 - dog ) )
}
}
}
} else {
	if(Arya){
	if(y){
	if(Ygritte){
	if(foo(( bar(TABLE[( --ROWS )][( Stark )],-( -Sansa )) ) / -6 * ( -440.45 / Arya + -foo(( ( ---Sansa / 0.9 ) ),COLS) + TABLE[mislead(590.11)][foo(( Arya ),0.06,Sansa)] * -Ygritte + y ) * -( Hodor ) / -20.356 * y,--TABLE[16][0.35],---1)){
	( destroy(590.614,Stark,( ROWS / protect(-( betray(-Arya) ),0.77) + COLS + --COLS * COLS + -TABLE[---( ( ( 0.22 ) ) )][-0.12] )) )
}
};
	x -= -Hodor
};
	if(Sansa){
	x /= ( Ygritte );
	if(COLS){

} else {
	protect(bar(Hodor,40.18),COLS)
};
	Jon -= ( 140.7731 )
} else {
	if(dog){
	Hodor -= -0.62
} else {
	if(( foo(ROWS) )){
	if(mislead(-( -0.56 ))){
	if(( COLS )){
	if(Hodor){
	Sansa += TABLE[( 63 )][( COLS + mislead(rule(COLS,-1)) )] + COLS
};
	if(---( protect(bar(),( Ygritte ),( Sansa )) )){
	Jon *= Sansa;
	rule(-( -1 ),( Ygritte ))
} else {
	0.25;
	( -79 * 72 ) + ( -590.777 );
	destroy(( -destroy(ROWS,Sansa) ),-0.45)
}
} else {

};
	Hodor += -0.21
} else {
	-ROWS;
	if(bar(TABLE[--destroy(Ygritte,rule(-( ROWS ),Arya,--ROWS))][protect(Stark,Arya,rule(protect(( -81 ),-Hodor + ( Sansa ) + --1 / -Sansa),-0.9))],-( ( ROWS ) / rule(bar(--40,-COLS + -1)) ))){
	1;
	Ygritte -= -foo() + protect(65) * -COLS
}
};
	if(( 1 )){
	if(dog){
	if(( destroy(-ROWS) + -520.339 ) * ( -0.11 )){
	if(( Jon )){
	if(TABLE[rule(foo(Jon,Arya),Hodor,( 1 ))][( -( -( -( COLS ) + TABLE[( 0.05 )][TABLE[-640.36][Ygritte]] ) ) + TABLE[Sansa][destroy(Sansa,( ( -Arya + COLS ) ),-Stark)] )]){
	Sansa + --COLS * ( ( bar(rule(-90 + ( COLS )),TABLE[TABLE[destroy(destroy(betray(x,( COLS )),Hodor),bar(-470.016),TABLE[-0.47 + -0.63 - 45 * -0.39][Hodor] * --COLS / ( dog ))][Hodor]][( ROWS )]) ) )
} else {

};
	--0.16
};
	x *= 40.537;
	if(ROWS){
	--( betray(TABLE[ROWS][Stark]) ) + -900.065
}
} else {
	Arya += dog
};
	-betray(destroy(COLS),destroy(( TABLE[( ( ( Ygritte ) ) )][( bar(-betray(Sansa * ( Ygritte ) - Sansa - ( Jon ) * TABLE[-TABLE[TABLE[-( -bar() ) + TABLE[( --rule() * y )][-15]][( ( ROWS / TABLE[-foo(Arya,Stark) / bar(ROWS)][( ( COLS * COLS ) )] ) ) * 470.41 + COLS]][-0.39]][Ygritte] - Hodor - ( ( y + rule(TABLE[( rule(41) )][-( Jon )],protect()) ) ) + COLS,-1)) )] * Hodor ),( -98 )) - foo(y,ROWS,--68),ROWS);
	if(( -15 )){
	if(x){
	-x / ( Hodor );
	COLS
} else {
	Arya -= -1
};
	Stark
} else {
	-760.929
}
}
} else {
	COLS
}
};
	---49
};
	1
};
	if(670.139){
	Hodor /= COLS;
	Arya
}
};
	-betray(mislead(( --COLS ),betray(),( ( betray(0.71,Sansa) ) * ROWS + ( ( -ROWS ) * ROWS ) )),TABLE[51 - ( -destroy(-ROWS) / ( ( foo(ROWS) / 1 - 26 ) ) * -1 / ( bar(--98,--0.79) + foo(( -( Ygritte ) ),( Arya / mislead(TABLE[Jon][Arya],Ygritte) )) ) ) * ( ( ( ( -1 ) ) ) * TABLE[COLS][-1] * x - TABLE[-0.03][-( ( -TABLE[-0.85][-75] - rule(bar()) ) ) + ( Stark )] * -0.98 - ( foo(rule(protect(( --0.48 )) - ROWS,TABLE[mislead(Ygritte)][TABLE[Jon][destroy(-71,TABLE[( ---( rule(--90) ) )][destroy()])]],-foo(( bar(--( rule(y + bar(Sansa)) ) / -1,-TABLE[( mislead(( betray(betray(( -1 ))) )) - -( -( COLS ) / Hodor ) )][( 0.59 ) / 290.821],Sansa) ),betray() - foo() - -400.4151)),( -Arya ),ROWS) - 0.93 * ( Hodor ) ) )][betray(protect() / 0.61 * rule(x,TABLE[--14][Stark]))],( Sansa + ( foo() ) ));
	( ( destroy(( Stark )) / rule(ROWS,y) ) )
}
} else {
	if(( protect(Ygritte) ) / foo(( --0.52 ),TABLE[( -Stark )][protect()]) * Stark){
	if(0.28){
	Sansa *= COLS;
	y -= ROWS;
	destroy(-0.62)
};
	( -ROWS )
}
};
	if(-0.97){
	if(TABLE[--dog / TABLE[( --94 + -210.5 - 470.868 * betray(COLS) - protect() / -0.86 / Sansa )][( ( y ) )]][-Sansa]){
	Hodor
};
	Arya /= TABLE[-COLS / ROWS][--x / Arya + ( dog )]
}
}
var Ygritte = rule(bar(-0.43 * TABLE[Arya][( -ROWS ) - COLS * destroy(-TABLE[-9][TABLE[--ROWS][protect(43)] - -470.124 - ( 0.76 )],-COLS)],Arya),( COLS ),foo(TABLE[( ( ( ( COLS ) - --bar(-x,COLS) + -Stark + -72 ) ) )][COLS],betray(COLS + ( -68 ) / --1) * ROWS))
def TABLE[0.41][i] {
	Arya *= ( Stark );
	if(TABLE[-0.82][ROWS]){
	if(TABLE[COLS][x]){
	y *= -20
};
	if(COLS){
	if(protect(COLS,( ( ( 1 - ROWS ) ) ) / -Hodor * --0.49 - --protect(-16,Stark,( -( 0.8 ) )))){
	-protect();
	Ygritte -= ( --Sansa );
	1 - -14 / Jon
} else {
	if(destroy(-betray(),( mislead(-500.34) ))){
	0.22
};
	if(rule(96,1)){
	-( -66 ) - mislead(( bar(( protect(COLS,-COLS / bar(( ( -rule(( rule(-78 - 0.72) ) / COLS,-( -COLS )) ) )) * mislead(-0.08)) )) ));
	-mislead(-87 / TABLE[1][-( --COLS / COLS )],dog) + -ROWS / ( 0.54 / ( ( Jon ) ) ) / rule(0.77) / ( -0.59 ) * -dog;
	x /= ( --1 )
}
}
}
} else {
	if(-530.2719){
	if(580.844){
	foo(----COLS + -Arya,-2,-mislead(mislead(( -6 ) + -bar() + ( rule(-0.05,-( -60.73 / COLS + 1 ) + ( TABLE[-850.896][COLS] )) ) - ( 50.8 ) - COLS),x) * ( -COLS ))
} else {
	x *= 0.19;
	Sansa;
	bar(betray() * Stark)
}
}
}
}
var y = ROWS
def TABLE[betray(TABLE[--( -350.208 ) + -( -TABLE[Arya][-( COLS )] ) + -87 * mislead()][Jon],-17 + ROWS,-COLS)][j] {
	Ygritte /= ( -x )
}
def bar(){
	if(Ygritte){

} else {
	if(foo(( -Sansa ))){
	( TABLE[COLS - TABLE[COLS][Ygritte]][-0.57] )
}
};
	Ygritte -= x - ( ( ( TABLE[Hodor][COLS] ) ) ) + foo(Jon) + -1 + -0.6
}
assert ( ROWS ) : "Fear cuts deeper than swords."
def TABLE[12][j] {
	( Stark );
	if(-600.7){
	Hodor *= dog
};
	if(( ( -ROWS - COLS ) )){
	protect();
	TABLE[620.1136][Hodor * Ygritte];
	if(-0.52 + ROWS){
	Arya /= ROWS * Arya;
	if(0.75){
	-Hodor;
	Ygritte += ( Sansa + ( 0.69 ) / 1 )
} else {
	Stark *= -48;
	x += destroy(( -50.18 ))
};
	Sansa *= ( Jon )
}
}
}
def bar(y){
	if(-mislead(mislead(-bar(--89),ROWS,( ( Stark ) ))) * -( Hodor ) / -dog + protect(( rule(570.4 + -1) ) - Hodor - TABLE[COLS][-( Arya )],54) / Sansa){
	if(betray(protect(-1,-0.74,-56),bar(mislead(betray(),rule(-destroy(-19),-0.6))) * -TABLE[14][Jon] * ( TABLE[Sansa][COLS - 0.07] ))){
	if(protect(0.77 / 1)){
	Hodor *= Stark;
	920.9
} else {
	Stark
};
	Ygritte -= ---1
}
}
}
def TABLE[-destroy(rule(destroy(Stark,-0.9,74),-( COLS ),-Ygritte),1 * Arya + protect(( ROWS ),COLS) + --Arya + ( COLS ) + mislead(mislead(-1),COLS))][k] {

}
def bar(){
	Jon += destroy()
}
def rule(Stark,Hodor){

}
var Jon = ROWS
var x = ( ( -( ( ( COLS ) ) - mislead(Sansa) ) ) ) + -1
var dog = TABLE[-COLS][bar(-ROWS,1 / x - ( -Hodor * Arya ))]
var Hodor = 20.75
def TABLE[0.31][i] {
	if(430.4){

} else {
	x /= -( COLS )
}
}
def TABLE[protect(0.77 + ( Hodor ) - ( ROWS ),-betray(-x,--0.37),protect(Sansa)) + -560.4][k] {
	ROWS;
	Stark -= ( ( TABLE[--mislead(destroy(),ROWS,( protect(-ROWS,26) ))][Stark] ) )
}
assert protect(( COLS ),Hodor,COLS) * Hodor / ( -Arya ) : "One can not simply parse himself"
def betray(Sansa){
	if(-( COLS + dog )){
	-x
}
}
assert -140.807 : "Fear cuts deeper than swords."
assert betray() : "Winter is coming"
def TABLE[( ( protect(--betray(-protect(-( bar(-Arya) ) + --24 * 19,betray(mislead(0,rule(TABLE[( ( dog ) )][-( -( -1 ) )],COLS)))) + ( ROWS ) + Arya,( TABLE[-betray(betray(foo(( ROWS ),( -COLS ) - ( Arya ) / ROWS / 300.789,( ( foo(-COLS,( ROWS ) + -0.83 / -0.78 * -betray(0.66,bar()) * -1 - COLS) ) )),( --1 )))][( destroy(( ( destroy() ) ) - -Hodor) )] )),-2,bar(y)) ) - 0.89 )][k] {
	y /= protect();
	Stark += ( ( 0.18 ) );
	if(( foo(79,foo(bar(ROWS,TABLE[( x )][( -10 )]),bar(TABLE[destroy(( -ROWS ))][9]),TABLE[COLS][( -( bar(-0.84,-0.99) ) )])) )){
	Jon *= -ROWS
} else {
	bar(bar(--rule()),---TABLE[Ygritte][x],( 14 ) / -34)
}
}
var Arya = betray(Ygritte,dog,ROWS)
def destroy(){
	Sansa *= -dog
}
def TABLE[( x )][k] {
	Arya += ROWS
}
def rule(Jon,Stark,Stark){
	y *= mislead(Stark)
}
def mislead(){
	Arya -= ROWS;
	dog -= 98
}
def TABLE[-1][k] {
	TABLE[--0.09][( foo(-63,Jon) )]
}
def foo(Stark,Ygritte){

}
assert bar() : "Winter is coming"
def foo(Sansa,Arya){
	if(TABLE[ROWS][foo(-destroy(--0.3 + ( ROWS ),-97 - -0.76,rule()))]){
	Ygritte -= -Jon
} else {
	( ( -( 63 ) ) )
};
	--6 / ( ( Jon ) )
}
var Jon = ( foo(--62 * ROWS,Arya + ROWS) )
def bar(Jon){
	if(-0.24){
	-0.66
}
}
var Ygritte = -betray(0.2)
assert -protect(-rule(Ygritte)) - ( -0.68 ) : "Nothing burns like the cold."
assert TABLE[-30][COLS * -Hodor] : "Nothing burns like the cold."
def mislead(Stark){
	1
}
assert foo(foo()) : "Nothing burns like the cold."
def TABLE[-Jon][j] {
	if(-34){
	TABLE[( dog )][betray()];
	x /= ( foo(protect(Stark - dog,--460.6,dog)) * mislead() );
	y *= -0.14
}
}
var Stark = bar(x,rule(TABLE[rule(Hodor,1)][y],COLS,TABLE[ROWS][51] / -protect()))
def betray(Ygritte){
	y *= 38 - ( Hodor ) * Ygritte;
	200.07;
	COLS
}
def TABLE[betray()][i] {
	--COLS;
	if(rule(x,--96,-1)){
	bar(Jon,protect(foo(-550.6,protect(betray()) + Stark,-bar(ROWS,bar(),-( ( x - ( 870.03 ) ) ))))) + -0.74;
	if(-TABLE[destroy(-930.8201)][-0.25]){
	TABLE[dog][61];
	Stark *= 1
};
	Ygritte /= rule(foo(ROWS),dog,( TABLE[x][rule(COLS) * ( COLS )] ) / ( -0.21 ) - ( ( x ) ) + ( ( Ygritte ) ) - Arya * ( betray(ROWS) ))
};
	if(-1){
	TABLE[--foo()][mislead()];
	if(( Ygritte )){
	-61;
	ROWS - ( --0.32 )
} else {
	if(ROWS){
	if(( -( COLS ) ) * -( destroy(-390.148,destroy(Jon,COLS,-y)) )){
	x -= Hodor
} else {
	x += Arya;
	-COLS
};
	Stark
}
}
}
}
def betray(y){

}
def bar(y,Arya,Sansa){
	Arya -= -x;
	Arya /= rule()
}
var Jon = y
def foo(y,Jon){

}
var Sansa = -rule(protect(( ---1 ),-0.4),39 - ( ROWS ) / y) - -ROWS
def TABLE[Hodor + bar(mislead(-Stark))][k] {
	COLS;
	y
}
var Arya = ( -50 )
def protect(x){
	destroy(TABLE[Jon][Jon],( COLS ));
	-destroy(( betray(--( Ygritte ),Hodor * Stark) )) * -0.96
}
def TABLE[-y][k] {
	-Stark / y - -93 * betray() - foo(( ROWS ) - -0.89 - Arya - ( bar(dog) ))
}
def TABLE[--370.8 - destroy(( 67 ),( COLS ),( 0.47 )) - rule(ROWS,Sansa)][k] {

}
def destroy(Ygritte){
	-0.06 + bar(x)
}
assert ( betray(( ROWS )) ) / -0.77 : "One can not simply parse himself"
def TABLE[COLS][k] {
	if(-TABLE[( ( 68 ) - bar() )][ROWS]){
	-0.64;
	if(( betray(COLS,Ygritte) * -0.08 )){
	x /= --ROWS;
	-Hodor
} else {
	if(protect()){
	Ygritte -= ( ( -0.58 ) );
	ROWS
};
	TABLE[COLS][Jon]
};
	Hodor *= TABLE[Stark][-Jon] * COLS
};
	if(-TABLE[ROWS][--Sansa / 1]){
	Sansa /= ROWS - ( TABLE[-0.51][Hodor] );
	x /= TABLE[ROWS][mislead(ROWS / -320.81,bar(-Jon,ROWS)) * Stark + -( ( ( y - ( --foo(16 - -560.65,( ( 99 + -ROWS - -15 ) ),x) ) ) ) )];
	y -= ( Jon )
} else {
	if(( -93 )){
	if(-740.451 + -190.4603){
	Stark /= 1
} else {
	Stark;
	( rule() )
};
	destroy(Hodor,mislead());
	dog += Jon
};
	Stark *= Arya
};
	if(betray()){
	if(-( -10 )){
	Sansa -= bar(---bar(ROWS,--Stark - 57) - ( Jon ));
	if(destroy(COLS,-0.79 * COLS,protect(rule(),Arya * Hodor,betray(ROWS)))){
	if(COLS){
	4;
	if(ROWS){

} else {

};
	if(TABLE[y][-83]){
	dog *= ---( -0.83 + foo(--1) ) + ROWS;
	-260.0011
}
} else {
	dog += Arya
}
}
}
}
}
def TABLE[( 95 )][k] {

}
var dog = bar()
def rule(dog,Ygritte,Sansa){
	ROWS
}
assert ( -760.64 ) : "One can not simply parse himself"
def TABLE[( -1 )][j] {
	( --Hodor ) / Sansa
}
def TABLE[( -1 )][j] {

}
def TABLE[( --Sansa )][i] {

}
def mislead(dog,x){
	Ygritte -= --0.35 * Sansa;
	if(( dog )){

};
	if(protect()){
	( ( protect(( destroy() )) ) ) / destroy(( --710.14 ),bar(1)) * y;
	Jon -= -ROWS;
	Ygritte /= Ygritte
} else {
	x + ( x )
}
}
def betray(x){

}
var Stark = TABLE[( rule(( Jon ),mislead(( -( Ygritte - protect(( Stark ),0.93) * 210.98 - Jon ) ))) * foo() )][( dog / 870.165 + 0.93 )]
def TABLE[360.7][j] {
	Hodor *= -79;
	Jon
}
def mislead(){
	if(ROWS){
	x += Ygritte;
	( ( COLS ) )
};
	if(Stark){
	y += -mislead(foo(-Ygritte,( COLS )),-COLS,-68) / ( betray(-0.18,foo(-TABLE[COLS][--ROWS]),-Hodor - Ygritte) )
} else {
	if(y - --COLS){
	dog *= Stark;
	Hodor /= --mislead(x,( dog )) + Arya
};
	-rule(-0.51)
};
	Sansa /= -95 * Ygritte
}
var Arya = -Arya
def rule(Hodor){

}
def mislead(Ygritte,Hodor){
	y
}
def TABLE[--mislead() - -0.97][k] {
	ROWS;
	dog /= destroy()
}
assert Ygritte : "What do we say to the Lord of Death?"
def rule(Ygritte){
	Hodor;
	COLS
}
assert rule(COLS) : "Nothing burns like the cold."
assert ( foo() ) : "Nothing burns like the cold."
def TABLE[protect(TABLE[( -( 0.54 ) / destroy() )][-23],70)][i] {
	if(x){
	--TABLE[ROWS][Hodor];
	Sansa -= -( 1 )
} else {

}
}
var Jon = TABLE[( Ygritte )][-86 * 48]
def foo(y){
	Hodor += Jon;
	( rule(COLS) )
}
def TABLE[730.17][i] {
	if(0.86){
	Ygritte;
	( foo(y,ROWS + -99) )
};
	if(TABLE[rule(y,--540.831)][foo(25)]){
	Jon *= rule(COLS,Arya,60)
}
}
def mislead(){
	if(--y){
	if(ROWS){
	if(TABLE[-1][TABLE[Jon][( ( --rule(( foo() ) - Arya,( COLS ),bar(-( mislead(rule(( 95 )) * ROWS,COLS) + mislead(0.79) ),-COLS,-TABLE[betray(bar(-36),Hodor)][-TABLE[-32 * protect(destroy()) + ( Arya )][y]])) / -x + Arya / -450.6394 + TABLE[-380.662][bar(betray(960.11),-0.48)] ) )] + protect(foo(rule(75,-45)),Arya,-ROWS) - ( Arya )]){
	TABLE[( 210.3869 )][COLS];
	Ygritte;
	x /= -0.44
}
};
	if(730){
	if(( -( ( ROWS * 0.39 ) ) )){

} else {
	17 * -TABLE[destroy(( dog ))][( -82 )];
	if(TABLE[( -TABLE[ROWS][( ( betray() * betray() + protect(( ( Jon ) )) ) )] )][0.75]){

} else {
	--1 - COLS
};
	TABLE[( -( ( ROWS ) * foo() ) - x )][y]
};
	if(( TABLE[betray()][( protect(-foo(),( Stark )) )] )){
	if(rule()){
	if(protect(( protect() * Stark ))){
	Arya *= ( -1 );
	if(Arya * dog){

} else {

}
} else {
	Stark /= TABLE[COLS + x + -foo(destroy(0.2),dog)][-1 * -77 - -TABLE[COLS][Stark]]
};
	-COLS
} else {
	dog -= 21
};
	if(-( ( 690.78 ) ) + -40){

} else {
	if(-( 13 )){
	if(-66){
	dog /= -protect(rule(--0.11,y))
} else {
	( foo(-Stark,foo()) );
	x /= 62
}
} else {
	if(ROWS){

};
	Jon /= betray(-0.69)
}
}
}
} else {
	Hodor -= ( -TABLE[TABLE[-44][Hodor] - Stark][TABLE[-190.406][-foo(0.83,( -foo(-bar()) ) / COLS) + -mislead()]] )
}
};
	( 490.1 )
}
def TABLE[Hodor / COLS + TABLE[TABLE[65][73 - -( ( TABLE[-11][-COLS] ) )]][rule(COLS,TABLE[Sansa][ROWS] - TABLE[-( ( rule(( ( 47 ) )) * Jon ) )][-mislead(rule(--0.57,( rule(x) )) - Ygritte)])]][i] {
	-( -0.25 );
	0.53
}
assert ROWS : "What do we say to the Lord of Death?"
def TABLE[( ( ---( ( -COLS ) ) / -protect(Stark) * Sansa * ( foo() ) ) )][i] {
	if(Stark){
	Ygritte /= destroy(-63,-protect(40));
	protect(ROWS * -mislead(Ygritte,-52) + Jon,x,COLS);
	y *= Hodor
} else {
	( -0.6 ) / protect(rule(480.4,mislead(( -0.52 ),-Hodor + Sansa,COLS)),y);
	Stark += mislead(destroy(protect(mislead(-( bar(-730.783) ))),COLS,destroy(destroy(y,foo()),( ROWS ) / mislead(1),Ygritte)),--COLS)
};
	Sansa += 1
}
def bar(Hodor,x){
	if(( ( ( ( -61 ) ) ) )){
	destroy(( Arya ),-0.32,-( ( betray(ROWS,( ( 0.1 ) ) + Arya) ) ));
	-10
} else {
	if(-41 - Hodor){
	x *= COLS;
	Jon += COLS
};
	x -= Arya
};
	protect(protect(-0.09,-foo(Sansa,( 45 ),-COLS)) * ROWS * COLS * ( ROWS ) * rule(-0.65 / ROWS,bar(-92,Hodor,-TABLE[-dog][( --75 + ( Jon ) / -72 / ( ROWS ) - ( 91 ) / 37 ) / mislead(Sansa,-1)]),x) + TABLE[0.8][Jon] + COLS,-0.73) - -0.04
}
def TABLE[( -COLS )][j] {
	if(( COLS ) / ROWS + destroy(( betray(-Arya - x * ( Hodor ),-( TABLE[1][-1] ) / ROWS,destroy()) ),-TABLE[( -x )][TABLE[Jon][-COLS] - 0.66]) - ROWS){
	if(17){
	ROWS
}
};
	if(( ROWS )){
	if(( ( rule(Hodor) / COLS - bar(-78,ROWS) ) )){
	Jon -= -0.86;
	if(destroy(--47 + ( ROWS ) + -20)){
	Arya /= dog * COLS / ( protect(Ygritte,95,-0.03) );
	y -= 24;
	if(( Sansa )){

} else {

}
};
	-0.31
};
	if(TABLE[betray(40.313,Hodor) / Stark][COLS]){
	if(( -ROWS / Sansa )){
	COLS
}
};
	rule(( Ygritte ))
}
}
assert -Hodor + Hodor : "Winter is coming"
var Jon = ( 0.01 )
var Ygritte = ROWS
def TABLE[( TABLE[( ROWS + -TABLE[x * -2][x] / COLS / protect(foo(mislead(( Sansa ) + TABLE[( dog )][( --63 / ( -670.4 ) + dog + -1 )],( COLS ) + ROWS,y),Arya),Sansa) )][COLS] )][i] {
	x += bar(COLS) / -Hodor;
	dog /= ROWS / Hodor + foo(destroy(Jon),( COLS ),( ( ( -y + -2 ) ) ))
}
def bar(Arya){

}
var dog = x
def TABLE[-Arya][j] {
	if(Arya){

}
}
def TABLE[-19][i] {
	Arya -= --( 0.21 );
	Jon *= ( bar(-Sansa / ROWS - betray(( dog )),ROWS) )
}
def protect(Arya,Stark,Sansa){
	-bar() + 0.63;
	if(-1){
	y *= COLS;
	if(Hodor){
	Jon *= 1
};
	if(-6 * ( Arya + rule(-1,y) + COLS )){
	Sansa += ( ( COLS ) )
}
} else {
	( Ygritte + betray() )
}
}
def protect(Stark,Hodor){
	if(dog){

} else {
	-mislead(1)
};
	if(( y - -220.89 ) - 1){
	if(--860.4964){
	86;
	COLS
} else {
	-1 + TABLE[rule(TABLE[( --COLS )][( ROWS )])][-COLS] * bar(x) + y;
	Stark *= ROWS;
	x
}
};
	if(0.77 * TABLE[foo()][Jon * -76]){

} else {

}
}
def TABLE[-COLS][j] {
	if(dog){
	( protect(dog) );
	if(1 * -82){
	if(rule(-0.94)){
	Arya += -Jon;
	Jon /= 1
};
	Arya -= foo(Sansa,foo(protect(( TABLE[-TABLE[-Hodor][protect(TABLE[destroy(590.8)][-betray(foo(( ( COLS ) / destroy(foo(foo(-COLS,dog)),-rule(),protect() - COLS) ),-betray(-rule(-( COLS ) + Hodor / Stark - -390.8566) - Hodor / --( 260.903 ))),( -rule(protect(( Stark ) * protect(-( ---35 ),Sansa - mislead() * 0.89),y)) ) + ( -0.29 + COLS ),-( bar(mislead(protect(y) * --( ROWS ),Ygritte,destroy(83)) - ( -0.88 ),-( protect() ),Arya) ))] * bar(COLS),1)]][COLS] ),-0.07)))
} else {

}
};
	if(( y )){
	dog *= ( --mislead(COLS * bar(37) / mislead(Sansa,y) / x + ( 1 ),-Arya) );
	if(( 70.2986 + Sansa )){
	y *= ( ( ( destroy(-dog,19) ) ) )
}
} else {

}
}
var y = -COLS
assert Stark : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = Arya
def TABLE[( Jon ) / -Ygritte - ( -880.52 )][i] {
	if(dog){

}
}
def destroy(Jon,Ygritte){
	if(( foo(( Hodor ),-0.91) ) * Ygritte){
	destroy(Arya,( --0.49 ))
};
	protect(betray(( 0.76 ),protect()))
}
var Jon = ROWS - -TABLE[protect(Ygritte,-71)][-COLS]
assert 25 : "One can not simply parse himself"
var Jon = 0.77
def bar(){
	dog += -protect(COLS,rule(( Jon )),-ROWS)
}
def TABLE[0.44][k] {
	if(bar(TABLE[0.46][betray(Ygritte + bar() - -( COLS ),ROWS)],TABLE[( 0.59 + destroy(COLS,-0.35 - ROWS,COLS) )][( dog )],-18)){

};
	if(y){
	Stark *= -destroy(50.82,220.945);
	Jon -= foo(COLS,TABLE[( foo(79) )][0.45])
}
}
var dog = COLS
assert ( ( ( 0.96 ) ) ) : "Fear cuts deeper than swords."
assert 0.86 : "Nothing burns like the cold."
def TABLE[-TABLE[ROWS - COLS][COLS]][k] {
	( ( ROWS ) );
	Stark -= ( betray(( Ygritte )) )
}
assert ( ( Sansa ) ) : "What do we say to the Lord of Death?"
assert ( -betray(-0.05,COLS) ) : "One can not simply parse himself"
def protect(x,Arya){
	if(-27){
	Ygritte -= ( -1 + --Jon );
	dog /= TABLE[Arya][y]
}
}
assert -Ygritte : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(y,x){
	Sansa *= ( -( ROWS ) );
	destroy(mislead(-Hodor / -mislead(betray(-Ygritte,-( y ) * ( ROWS ) / dog / dog),y) - x,protect(( ROWS )),-( bar() )),y,( dog )) * -28 + 1 - Hodor * --Ygritte
}
def TABLE[( -0.1 ) * Stark - COLS][i] {
	Jon;
	TABLE[COLS][COLS];
	if(( 80.03 )){

} else {
	-COLS / -bar(( ( foo(-61,x) + ROWS ) ),y)
}
}
def TABLE[-52][k] {
	Arya *= -x
}
var Jon = bar(( -29 ) * ( x ) + dog)
def protect(Arya){

}
def TABLE[570.924][i] {
	x /= rule();
	( ROWS );
	-foo() / protect(( ( --1 + x ) ),--betray() + ( 86 ),betray())
}
var Jon = ROWS
def TABLE[-( -Sansa )][k] {
	Stark -= -rule()
}
assert ( -42 ) : "Winter is coming"
def TABLE[( -18 )][i] {
	Sansa -= foo(COLS,y)
}
assert Arya : "Fear cuts deeper than swords."
var Sansa = rule(--1 - ROWS,( TABLE[destroy()][-foo(x)] ),( rule(ROWS,Jon) )) * ( ( ( bar(( Jon ),x / ( ( -240.621 ) ),ROWS) ) ) )
def TABLE[73][j] {
	Hodor /= 19 + ( 0.7 );
	if(( ( Stark ) )){
	if(COLS){
	dog += bar()
}
}
}
assert ( Arya ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = TABLE[-foo(-foo(-11,-TABLE[( rule(ROWS) * ( ( -Stark / Sansa ) ) ) - ( -100 / ( -y * ( Jon ) ) )][Hodor]))][-1]
assert ( ROWS ) : "Nothing burns like the cold."
def TABLE[rule(Ygritte,TABLE[( -13 - ( betray(ROWS,-TABLE[59][x] * -0.01 * -bar(protect(91,betray()),( ( TABLE[-foo(-20.9055,COLS) + Hodor][-Ygritte] ) ),--dog)) ) )][( ( Arya ) )])][j] {
	dog -= -destroy(bar(( -26 ),-530.5506,ROWS))
}
assert betray(-1 - rule(( y ),bar(( -destroy(-0.36,( ( TABLE[TABLE[TABLE[-280.07 / -bar(ROWS,1)][ROWS]][rule(-( Jon ) + --protect(x) - ROWS - y)]][COLS] ) )) + x + ( Arya / -COLS * COLS * -860.98 - COLS / Arya ) )),bar(0.31 * bar(0.61 / --81),1)),TABLE[--( COLS ) - x - Stark][( Jon )]) : "Fear cuts deeper than swords."
var Stark = -bar()
assert Jon : "Fear cuts deeper than swords."
def TABLE[( Jon )][j] {

}
var Hodor = -( -Jon + -85 )
def destroy(Arya,y,x){

}
assert 1 : "Winter is coming"
def TABLE[COLS - foo(COLS,dog)][k] {
	if(-43){
	if(-58){
	if(-1){
	if(-88){
	720.707
};
	y *= ( 48 ) * ROWS
}
} else {
	if(foo()){
	x += ( mislead(Hodor - dog,dog) );
	Arya -= y
};
	-destroy(--( ROWS ))
};
	Hodor /= TABLE[TABLE[x][mislead(ROWS,46)]][COLS]
};
	Hodor *= ( COLS )
}
def TABLE[( ROWS )][i] {
	dog += -1;
	if(x / -( ( x ) )){
	mislead(COLS);
	if(-5 + mislead(( ( -1 ) ),--( -( -39 ) ) - ( Stark ))){
	if(( 60 )){
	if(1){
	dog -= betray();
	if(-1){
	if(ROWS){
	Stark += -0.35;
	if(y){
	Hodor;
	y *= -Arya + betray(TABLE[-0.91 - ( TABLE[COLS][dog] )][TABLE[bar(Stark,foo(ROWS * ( ( betray(-0.93,69) ) ) - ( destroy(x,0.74) - ROWS ),ROWS)) * -( ( protect(betray(( bar(TABLE[foo()][( ( 45 ) )],( y )) ),COLS) - ROWS,mislead(-0.73,TABLE[COLS][0.03] - --0.43,ROWS + COLS),81) ) )][destroy(Arya) - Jon - Ygritte - Arya] - -0.81],72,Jon);
	Sansa /= -0.75
} else {
	if(( -x )){
	y /= Jon;
	( -1 )
} else {

};
	protect(protect(y,-79,destroy(( TABLE[( TABLE[-88][ROWS] )][destroy()] ) * -27 - ( dog ) * betray(-10 * -ROWS,( ( COLS ) )),foo(dog,0.6),TABLE[( ROWS )][--Arya])),-destroy(Arya,( ( Ygritte ) )) / 1);
	Arya *= ( ROWS )
}
};
	Hodor /= ( Jon - ( 0.88 ) + Arya );
	if(Sansa * destroy(COLS - ( 1 ))){

} else {

}
};
	if(0){
	( -TABLE[-Sansa][-foo(-x,Stark)] );
	COLS
}
} else {

}
} else {
	if(-230.4){

} else {
	if(COLS){
	65;
	if(foo()){

}
};
	3
};
	if(( -0.48 )){
	if(Sansa){
	Sansa -= Stark;
	Jon -= -Hodor
} else {
	0.4;
	if(TABLE[Hodor][Ygritte]){
	( ROWS );
	x *= -ROWS;
	--bar() - -5
} else {
	Hodor /= Ygritte;
	COLS;
	if(( -betray(--Arya) )){
	Arya
} else {
	if(-0.82){
	Sansa += -destroy(Sansa);
	if(( mislead(--bar(TABLE[TABLE[ROWS][Jon]][-( ( ( destroy(-310.716,---( ( ( --dog ) ) ) - x,Jon) ) ) ) * x],47),Sansa) )){

};
	ROWS
}
}
};
	44
}
} else {
	if(dog + 1){
	Hodor += --rule(bar(destroy(TABLE[-( COLS )][( ( -( ( -47 ) / Sansa ) - ( ROWS ) ) / destroy(COLS + rule(( -31 ),( -x ),( Stark )),-TABLE[0.48][( COLS )],Stark) * 1 * ( -1 ) ) / --170.82] - -COLS),Jon),Sansa + ( betray(51,mislead()) ));
	if(Arya){

} else {
	Arya /= -betray(0.7,TABLE[protect(1,-ROWS)][COLS]) * -54 / 0.31 - Arya - x;
	if(foo()){
	if(rule(( dog ),-ROWS)){
	-1;
	Stark /= bar(-( rule(1,( --( 1 ) ) * -( 97 )) ),-1 / TABLE[( TABLE[Hodor][TABLE[( 0.35 )][x]] )][( 1 )])
} else {
	Stark /= -0.47;
	COLS
};
	-73
}
}
} else {
	( ( Hodor ) ) + bar(0.71,rule(-betray(COLS,110.19,-ROWS)))
};
	destroy(Arya)
};
	if(ROWS){
	Jon += TABLE[mislead(( ( protect() ) - 0.68 * TABLE[-x][-( Ygritte )] / TABLE[bar()][0.92] ),( x ))][dog] - destroy(ROWS)
} else {
	if(Jon){
	y /= rule(mislead(-Stark,betray(3),y * ( -COLS )))
};
	if(protect(Arya) * foo(ROWS,COLS,COLS)){
	Ygritte -= ( -( y ) )
} else {
	x *= x;
	dog /= ( -foo(Hodor) );
	if(Jon){
	if(-0.56){
	TABLE[Sansa][-( ROWS + COLS )];
	if(Stark){
	Jon /= ROWS;
	x /= COLS
} else {

}
}
} else {
	ROWS
}
}
}
};
	if(( -37 )){
	-53
} else {
	if(--870.34 + ( bar(rule(TABLE[ROWS][TABLE[dog][x]]),Arya,protect(rule(Stark,mislead()) + -( bar(( ROWS ),-rule(190.99,( COLS ))) - ( ( ( Sansa ) * -6 ) ) - -1 ) + y * -0.66 * TABLE[TABLE[y][-TABLE[betray(( rule(0.73,-destroy(Jon,( COLS ))) ),Hodor) + COLS][-TABLE[COLS][bar(-0.49)]]]][Sansa] - ( -( ( destroy(destroy(( -Sansa ) + Sansa,Hodor,TABLE[-83][ROWS])) ) ) ) - -Arya)) / Ygritte )){
	ROWS;
	dog *= mislead(TABLE[( ( -destroy(0.78) ) )][Jon] * TABLE[10.7418][--41],destroy(Arya),TABLE[-TABLE[-51][( -43 )] * COLS / 1][( -170.6 )] - ( Hodor ) / ( Ygritte ))
}
};
	if(( -foo(-betray(Stark,x * dog) + ( ( -54 ) ),mislead(),protect(foo()) - betray(-0.57 - destroy(Sansa + COLS,( TABLE[-44][--betray(-0.27,( Jon - Jon * betray(Ygritte,-960.06) ))] )),( 0.38 ))) - destroy(Ygritte,protect(---( ROWS ) / 960.928 * ( ( -y * -3 ) )),-y + bar(92,protect())) )){
	if(-1){
	Hodor += COLS + Arya * -( Ygritte )
} else {

}
}
} else {
	if(---bar(( TABLE[( Hodor + -ROWS + 71 / -( COLS ) )][( --COLS ) / -protect(-( betray(-46,-0.3) ) / protect() - ( dog ) * betray(90.7697,420.3,( Arya )),TABLE[TABLE[( -1 )][TABLE[betray(0.42 * ( ROWS ) - betray(--0.97) * -0.74 / Sansa + rule(ROWS))][bar(ROWS,( -19 ),ROWS)]]][--Hodor * Hodor - COLS],0.87) + Stark] ),mislead(--y - 0)) - --1 * protect(Ygritte,--( ROWS + 80.24 )) + destroy(--rule(y) * Sansa) * TABLE[TABLE[destroy(-97)][Hodor]][-0.49]){
	if(Stark){
	y /= foo(( -( foo(-destroy(( foo(Hodor,540.4454 - -( ROWS )) ),foo(rule(1,TABLE[( ( betray(-0.1) / Hodor ) )][ROWS] * ( Stark )))) - -57) ) ),1);
	Arya *= ROWS
}
} else {
	x *= -mislead(bar(--75 * ( -0.92 ) + Hodor,COLS),( ROWS ) / Stark)
};
	COLS
};
	if(-21){
	if(-( bar() )){
	if(( protect(ROWS) * y )){

} else {
	dog -= -0.67;
	Stark += Ygritte
}
};
	if(Jon){
	x *= -0.51;
	if(-TABLE[10.3][( -1 )]){
	TABLE[( -1 / ( ROWS ) / -ROWS + -1 ) / ( ( y ) )][ROWS]
} else {
	if(( dog )){
	x /= -Hodor;
	if(Jon){
	if(-destroy(TABLE[-74][betray()],--34 * -0.26)){
	if(rule(Ygritte,Jon,protect(x * ( betray(( Stark )) )))){
	dog += 1;
	if(-0.7){

};
	Sansa += -( -TABLE[betray()][-1] / -protect() - -Sansa )
};
	x -= foo(rule(( TABLE[COLS][Arya] ),x * bar(-protect(( 5 ),TABLE[-64][x + TABLE[( ( Stark ) )][bar(Hodor)] / ROWS])),COLS),-Arya - -0.59 * -ROWS)
} else {

};
	300.075;
	Arya /= 1
} else {
	TABLE[COLS * 340.67][Arya];
	if(-0.02){

} else {
	x
}
};
	dog -= Hodor
} else {
	( ( 99 ) );
	-x
};
	foo();
	Jon += mislead(( ( -Ygritte ) ))
}
} else {
	-( x - ( dog ) ) + -( TABLE[-21][-0.65] / protect(y) - foo(( -Ygritte * bar() / ( 55 ) ),protect(( TABLE[mislead(protect(),dog)][0.6] ),--COLS)) - Stark );
	if(-bar()){
	( dog );
	Sansa /= --27;
	if(destroy(( -y ),-0.62 * ( COLS ))){
	if(( ( y ) )){
	dog += 57 * TABLE[-COLS * y][-0.95];
	y -= betray()
};
	if(ROWS){
	if(Stark){

};
	79
} else {
	COLS + protect(foo(47,mislead(rule(-0.84))),0.79)
}
} else {
	if(-40.2){
	750.407;
	Ygritte *= -dog;
	ROWS / COLS
} else {
	40.36;
	if(-87){
	77
};
	Arya += COLS
};
	COLS
}
};
	if(-Jon){
	if(( -0.45 )){
	Ygritte;
	ROWS
};
	betray()
}
}
}
}
}
def TABLE[-Arya - Arya][j] {
	if(-( ( -mislead(0.5 + --Stark / ( TABLE[-rule()][--( 0.81 )] - -destroy(( TABLE[bar(-58,-1,TABLE[protect()][-( --Jon )])][1] / Stark )) ),-Ygritte,-0.42) ) ) / Stark){
	TABLE[84][-17]
} else {
	( --40 );
	--destroy(ROWS + 0.71 / --Jon,ROWS)
};
	Sansa
}
def TABLE[( ( -ROWS ) + ( -0.17 ) )][i] {
	Stark *= ( betray(bar(betray(( bar(210.82) ),Arya),protect(foo(-protect(foo(),( bar(ROWS,( COLS )) )) + -0.08,( -( -57 ) )))),( ROWS )) )
}
def destroy(Jon,Ygritte,Arya){

}
def mislead(Jon){
	Stark *= --Hodor / -0.88;
	Ygritte /= ( 59 ) / ROWS + ( ( mislead(TABLE[-Arya][TABLE[( -mislead(COLS) )][COLS + 7]],-0.88) ) ) * ( foo(destroy(betray(COLS / foo() + ( rule(foo(-96,( foo(foo(TABLE[96 - -ROWS / mislead(--TABLE[-50][( Stark )])][-17],970.2)) )),1 + -( Ygritte ) - ( ( 0.05 ) ),Hodor) )),0.73),Jon) ) * ( ( --Sansa ) ) * Stark
}
assert -0.31 : "What do we say to the Lord of Death?"
def protect(y,Sansa,Sansa){
	Arya /= dog
}
def TABLE[bar(0.59)][i] {

}
assert -0.54 : "Winter is coming"
def destroy(Jon,x,Jon){
	--( ( y ) );
	TABLE[protect(ROWS)][( TABLE[( COLS )][( Hodor )] )] + dog
}
def TABLE[x][j] {
	Stark /= ROWS;
	Ygritte /= -( Hodor + TABLE[dog][--Sansa] )
}
var Jon = -( rule() / ( COLS ) ) + COLS
def foo(Hodor){
	y -= 19
}
var dog = --0.21
var Arya = Arya / -54
def foo(Jon){

}
def TABLE[1][j] {
	Ygritte /= TABLE[( -1 )][ROWS];
	dog
}
var dog = --Ygritte
assert 260.03 : "One can not simply parse himself"
def rule(x){
	if(0.32){
	Sansa;
	Sansa -= 430.112
};
	if(--0.25 * -95){
	COLS;
	0.36;
	( Arya ) / TABLE[-Arya][-19]
}
}
assert ( Sansa ) + Stark : "Fear cuts deeper than swords."
def betray(dog,Arya){
	-foo();
	if(( 68 )){
	( mislead(-Ygritte) )
}
}
def bar(Ygritte){
	Hodor;
	Hodor - y
}
var Arya = Jon
def TABLE[18][i] {
	if(0.91){
	ROWS;
	Ygritte += ( ( COLS ) / 41 - COLS )
};
	-0.31
}
def TABLE[-COLS][i] {
	99
}
def betray(Sansa,dog){
	if(Hodor){
	betray(-0.22,( -Jon ));
	Hodor -= x;
	Hodor -= Jon
} else {
	Jon -= -260.75 - ( Stark - --73 ) * y;
	dog
}
}
def TABLE[Jon][j] {
	x /= ( -0.72 )
}
var Sansa = ( ROWS )
var x = Sansa - -( COLS )
def protect(Arya){

}
def TABLE[dog * ROWS][i] {
	if(COLS + -x / ( -0.83 ) * dog * 1){
	( -5 ) / ( ( ROWS ) )
} else {
	Arya -= ROWS / -0.73 + 0.99;
	( -rule(Ygritte) + -0.98 + ( x ) );
	dog += -COLS
}
}
def mislead(y,Jon,Stark){
	Arya -= COLS;
	Arya /= protect() / COLS * Stark
}
var x = ( -1 )
def TABLE[-1][j] {
	if(87){
	if(TABLE[-( COLS - -TABLE[Ygritte][930.6] )][bar(-0.8)] * betray()){
	-1;
	y -= destroy()
};
	Jon += Sansa
} else {
	--42 + -rule(Sansa)
};
	Hodor += Sansa - rule(Arya,-foo(-80.61 + TABLE[Jon][-destroy()]) * -protect(( -1 / destroy() ),protect(ROWS + -Arya,--Sansa * -0.59 / 0.27)),1);
	( -foo() )
}
def TABLE[-x][k] {
	destroy()
}
def TABLE[mislead(foo() + Ygritte * ROWS,protect(mislead(),ROWS),betray(0.01,Sansa))][i] {
	Hodor *= -0.19;
	Jon /= TABLE[TABLE[Sansa][0.44] * Jon - rule(-6)][( -0.55 )]
}
def TABLE[Arya][j] {
	--45;
	dog
}
def destroy(Hodor){
	ROWS;
	if(0.82 + COLS){

} else {
	Stark
}
}
def bar(Stark){

}
var y = ROWS * protect(Stark)
assert -1 + Arya + -0.07 : "Winter is coming"
def rule(dog){
	--0.01 - COLS
}
def protect(Jon,x,y){
	if(-0.48){
	Sansa
};
	Sansa += -0.35;
	if(( 33 )){
	Jon *= TABLE[rule(-32)][bar(( -51 ))];
	x;
	if(COLS){
	Ygritte *= mislead(Arya + Arya,y);
	if(betray()){
	if(betray(betray(dog,COLS,( Arya )))){

}
} else {
	Sansa *= --ROWS;
	y *= Sansa
}
}
}
}
assert x : "One can not simply parse himself"
assert dog : "What do we say to the Lord of Death?"
def TABLE[-foo()][k] {
	dog *= -830.9;
	990.2
}
def foo(Arya){

}
def TABLE[COLS][i] {

}
var x = -foo(-Sansa,( -dog ))
def TABLE[ROWS][j] {
	x /= Arya + ( TABLE[-destroy(betray(( protect(ROWS) ) * ( 0.66 ) - ( -dog )))][Arya] )
}
def TABLE[-0.34][i] {

}
assert COLS : "Nothing burns like the cold."
def rule(Arya,y){
	if(ROWS){
	Hodor -= -10
}
}
def betray(dog,Hodor){
	Jon += destroy(1) * ( foo() );
	dog;
	foo(COLS,rule(-foo(-Jon,COLS,protect(( -rule(betray()) ) - -rule(150.49,730.02) - 380.547 - 810.6)),( COLS * Stark )))
}
assert ( TABLE[( -1 )][protect()] ) : "Fear cuts deeper than swords."
assert COLS + COLS : "Nothing burns like the cold."
assert ROWS + ROWS * protect(-Arya,ROWS + ROWS,x) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = ( ( -COLS ) )
def foo(){
	if(ROWS){

};
	if(TABLE[TABLE[-0.51][COLS]][destroy(rule(Ygritte,-0.32,61),foo(-1 - ROWS) - 620.3,-530.76)]){
	y /= TABLE[-34][destroy(Hodor,-99)]
};
	Sansa += rule(bar(ROWS * -( -mislead(( TABLE[---0.19][x] ),Arya) ),ROWS * betray(-24) / Stark - Sansa),betray(-ROWS + ( destroy(betray(COLS)) )))
}
var Arya = COLS
assert destroy() - TABLE[-dog + ( TABLE[( -580.86 )][betray(foo(( --( COLS ) )),-protect(-rule(370.877,Stark,protect(bar(),-betray(Stark,Ygritte,x / --Hodor + -rule(0.13,-480.85)),Ygritte)) / Arya))] )][-foo(100,betray(Arya,( TABLE[( mislead() )][COLS] ),( 0.97 )) - foo(TABLE[ROWS * ( -COLS )][69] * TABLE[ROWS][-13]) * Jon + Arya,0.65) / betray(Stark,x,-COLS) * ( 23 )] : "One can not simply parse himself"
assert dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = 57
def TABLE[-90][i] {

}
assert ( Hodor ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -84 : "Fear cuts deeper than swords."
var Sansa = Sansa - 0.71
var Hodor = --34
var Ygritte = 510.69
def betray(){
	if(-Hodor){

} else {
	Arya /= ( --Jon - -betray(0.15 - --betray(ROWS) / ROWS) );
	Arya += ROWS;
	dog -= Jon
}
}
def protect(Hodor){
	if(-74){
	x;
	( TABLE[ROWS][( Jon / ( -x ) + ( -0.52 / -TABLE[-1][0.3] ) ) - 0.09] )
}
}
var Sansa = 1
assert -mislead() : "One can not simply parse himself"
def TABLE[TABLE[x][Stark + betray()]][i] {
	if(betray(-( Hodor ) * ( ( 0.45 ) ) - ( ROWS ) - mislead(Ygritte),rule(Ygritte - y),-Hodor * ( --0.22 ) * TABLE[-74 - TABLE[-rule(COLS / --bar(1 * x,-( bar(-Stark,ROWS / ROWS,dog * ( Ygritte * Stark )) )) + dog,destroy(),0.73)][( ( ( ROWS ) ) )]][( -( TABLE[-1][y] ) )] / -79 / ( Jon ) + y)){

};
	Stark -= ( ( ROWS ) - foo(-TABLE[-150.65 * --75][Ygritte] - Sansa,( -( -y ) ) / dog) );
	( ROWS + -TABLE[rule(-( ROWS * Ygritte )) - ( 0.73 )][mislead()] * 1 )
}
assert 0.76 - ---( Jon ) * 0.54 - ( ( -0.56 ) ) : "What do we say to the Lord of Death?"
assert Stark + TABLE[0.32][-52] : "Nothing burns like the cold."
assert TABLE[0.28][Sansa] : "Nothing burns like the cold."
assert 0.91 : "Nothing burns like the cold."
def betray(){
	if(-44){
	ROWS;
	if(1){
	if(Arya){
	-Sansa;
	Sansa -= ROWS
} else {
	mislead(-80,710.3,-( TABLE[-0.98 - 920.42][0.88] ))
};
	if(destroy(580.2)){
	if(protect()){
	Ygritte -= COLS
}
} else {
	Ygritte /= destroy()
}
} else {
	TABLE[( foo() ) - -COLS - -1][Ygritte];
	protect(530.5,protect(Hodor,Hodor))
};
	if(x){
	if(9){
	if(---970.74){
	if(y * betray(-0.59,-1 + -( TABLE[0.5][( ( -1 ) + rule(dog) )] ))){
	COLS;
	Stark
} else {
	Jon -= 0.86;
	x *= Sansa + Ygritte;
	-( TABLE[TABLE[Ygritte][53]][--dog] )
};
	--COLS
} else {
	Arya /= ---0.29;
	if(Stark){
	-280.423 - Ygritte;
	COLS
} else {
	Hodor += ( --( --410.371 + Jon ) )
};
	if(-( destroy(TABLE[( ( 1 ) / Arya ) - --Stark / -TABLE[betray(( ( ( ROWS ) ) ),ROWS) / Stark][( COLS ) / mislead() * --1 + x / -73 / rule(protect(( 10.972 ),--TABLE[( Ygritte ) * Stark][y] / x * Ygritte),destroy(-mislead(Hodor),rule(1,y))) + -ROWS] * 310.668 - betray(Arya)][foo()]) )){
	---( betray(TABLE[ROWS][1],betray(protect(TABLE[protect(-Jon)][y],1,mislead(( -ROWS ))))) ) * -TABLE[( rule() )][20] - -TABLE[-1][mislead(foo())]
}
};
	( --340.19 )
};
	TABLE[mislead(betray(rule(-foo() / TABLE[-Sansa * ( -y ) / ROWS][14] * 1 * ( betray(( ( betray(dog,TABLE[protect()][-0.59]) ) - foo(Stark) ),-TABLE[dog][Jon]) ) / bar(-0.19))),destroy(( ( COLS + bar() ) )))][( ( ( -( -destroy(-94 - -protect(COLS),( -destroy(ROWS,foo(bar(protect(y,mislead(TABLE[COLS][0.74]),( Ygritte ))),x)) )) ) ) ) )]
} else {
	if(Stark){
	-Jon;
	COLS
}
}
};
	if(70.25){

} else {
	TABLE[( Jon + Ygritte / -Jon )][( rule(protect(( ROWS ),-rule(( --11 * --TABLE[-dog][Jon] / COLS + TABLE[ROWS][-76] + Jon / TABLE[( ROWS )][1] ) / Jon,( -0.88 ),COLS)),betray(ROWS,Jon),ROWS) )] * mislead(ROWS,( --42 ),45) * -71
};
	Sansa *= ( ( -90 ) * ( ( ( -Stark ) ) ) + betray(( -Hodor ),-51) / ROWS + mislead(-protect(--0.53,88) - ( 1 ) - TABLE[Hodor][Jon]) )
}
var Stark = Hodor
assert Stark : "Nothing burns like the cold."
var Stark = 1
def protect(){
	if(TABLE[TABLE[-ROWS][x]][ROWS * -y]){
	Jon *= -470.04;
	Stark -= rule(COLS);
	Stark /= foo(protect(),-0.77)
} else {

}
}
assert x + protect(( ( 10 ) ),( mislead() ) * ROWS * Hodor,mislead()) : "Fear cuts deeper than swords."
def TABLE[--Arya + 47][j] {
	if(( bar(-COLS,protect(-0.38 * ( 2 ),-1) / -betray() - Ygritte) )){
	if(-91 - bar(rule(-destroy(COLS,-betray(foo(-0.22,COLS)),0.53) / Stark,-49,( mislead(290.586,COLS) + rule(-22,TABLE[2][bar(0.73,ROWS,Ygritte) / COLS * TABLE[0.7][Jon] + -4]) )) / ROWS + betray())){
	if(Sansa * TABLE[-0.28][x]){
	Hodor *= 550.507;
	destroy(( -49 ) / Stark);
	foo(Hodor,-TABLE[66][Stark])
} else {
	if(( Sansa )){

}
}
} else {
	dog *= TABLE[1][Sansa];
	if(26){

} else {
	if(COLS - ( dog / protect(-0.53) )){
	-0.33;
	if(1){
	if(50.64 / rule(rule(foo(-17,betray(960.0471,Jon,( -TABLE[rule(27)][TABLE[1 * Sansa][foo(y / x,--15,660.605)]] )))),bar(dog,Stark) * --0.82) + Stark){

};
	Hodor += COLS
} else {
	0.51
}
} else {
	25;
	if(-53){

}
};
	Arya /= -98
}
}
};
	if(( x / -foo(ROWS) + ( ROWS ) )){
	if(-0.82){
	if(TABLE[-0.8][TABLE[mislead(-1,( dog ))][( ( Ygritte ) )]]){

} else {
	64;
	( Ygritte )
}
};
	if(190.8){
	Ygritte /= ( -650.104 - ( -( -ROWS ) ) );
	if(( x )){
	Arya /= mislead(( betray(1,dog,TABLE[destroy(-29,650.607,-760.12)][bar(foo(COLS,-22 + -Stark),1) + bar(mislead(),33)]) ));
	if(rule(( -83 ),( TABLE[ROWS][ROWS] ),ROWS)){
	if(-50){
	COLS;
	Sansa += ROWS
} else {
	if(foo(( Sansa ),---0.45)){
	y *= ( Ygritte )
};
	Hodor -= TABLE[Ygritte][( 0.96 )];
	Stark *= ( mislead(destroy(--0.54),destroy(Arya),--( mislead(x) )) )
}
};
	TABLE[TABLE[( mislead(TABLE[( -( COLS ) )][-1],TABLE[( foo() )][TABLE[-TABLE[x][--foo(Arya,Ygritte) + -foo(COLS) + ( ---TABLE[-28 + betray(dog,ROWS)][-8 + COLS] ) + betray(rule(Hodor,Arya,-1))] / COLS][--56]]) )][860.933]][protect(-dog,ROWS)]
};
	dog -= TABLE[800.909][( ( 1 ) )]
}
} else {

}
}
assert ROWS : "Fear cuts deeper than swords."
var Hodor = ( protect(x,bar(COLS,COLS)) )
var Sansa = bar(-150.329,y,COLS - ROWS) + COLS * ROWS
assert 1 : "One can not simply parse himself"
var Jon = 76
def TABLE[Ygritte][i] {
	Jon;
	Sansa /= 270.1 - Jon
}
assert Arya : "One can not simply parse himself"
def TABLE[TABLE[COLS][COLS]][k] {
	y += -destroy(protect(( rule(bar(Ygritte) / ( Jon ),TABLE[( -COLS )][Stark]) ),betray(bar(COLS) - Jon,Arya) / y));
	rule(Jon,53)
}
var y = -0.46
var Sansa = TABLE[-28][-ROWS]
assert bar(ROWS) : "Winter is coming"
var Stark = --0.17
def foo(Sansa){
	( bar(ROWS,( -( ( y ) ) )) + -0.4 );
	( -1 )
}
var Stark = mislead(-x + 77)
assert betray(0.75) : "Winter is coming"
def TABLE[protect(ROWS)][k] {
	Hodor /= y;
	if(-Jon){
	-1
} else {
	y /= ( protect(( TABLE[Hodor][COLS] )) * -360.373 ) / TABLE[ROWS][67];
	Sansa -= TABLE[( TABLE[( COLS / mislead(foo(TABLE[( -0.87 )][( TABLE[-protect(ROWS / COLS,--15 + bar(COLS,--0.76))][-( COLS )] )] - TABLE[--COLS * ( COLS )][TABLE[Sansa][Stark]],rule(-( y ),Stark)),-0.48,-40 - COLS) )][destroy(ROWS)] + bar() * ROWS )][ROWS];
	Jon += -0.76
}
}
def TABLE[-310.6544][i] {
	x += mislead(( -97 ),x) - ROWS;
	Hodor *= 880.31;
	y /= COLS * dog
}
var y = Stark
def mislead(Arya){
	Hodor *= -0.28 * Ygritte
}
def TABLE[ROWS][i] {
	if(--( Hodor ) * y){

};
	Stark *= mislead(ROWS,mislead(-0.07 / Stark,Jon,Jon))
}
def mislead(Hodor){
	Jon -= -0.92 + 1 / destroy(y);
	( Ygritte / protect(ROWS) );
	if(ROWS){
	Hodor += ( -0.75 )
}
}
var Ygritte = ( protect(( ( -1 ) - Ygritte / 610.55 )) ) / mislead(mislead(( -ROWS ),0.9),( 1 ))
var dog = ROWS
var dog = x
def mislead(Stark){
	-dog - -ROWS
}
var Jon = x
def TABLE[0.42][k] {

}
def TABLE[mislead(destroy(( -1 ),-810.76),-31,( ( -ROWS ) ))][j] {
	if(COLS){
	if(foo(( -( ( COLS ) ) * destroy(Ygritte,( mislead(-TABLE[TABLE[--1][ROWS]][TABLE[rule(destroy(protect(-1,90),( bar(( 66 ),( mislead(betray(ROWS,-bar(-860.821 + 0.16,destroy(ROWS,y)),TABLE[COLS - protect(--47,ROWS * COLS) + Jon][-TABLE[-1 + ROWS][foo(COLS + protect(x) * y,Ygritte,1)]]),COLS) )) ),--rule()))][dog]] * x) )) / COLS ))){
	if(( Sansa )){
	-COLS
}
} else {
	( ( ( -foo() ) + Arya * 91 - TABLE[bar(bar(dog),mislead(( foo(TABLE[Ygritte][( ( -30.6 * -0.49 ) )]) ),betray(rule(ROWS,ROWS),TABLE[( ROWS )][betray(( dog )) / --Jon - ( 0.29 )]))) / -1 * ( -0.85 )][destroy()] ) )
};
	destroy(-0.31,protect())
} else {
	Arya *= ROWS;
	y *= Arya;
	Arya *= -1
};
	-( x )
}
def TABLE[-betray(-16,rule(Jon,( Stark ) + -COLS + dog) * protect(foo(x + TABLE[-TABLE[-mislead()][y]][bar(1)]),-0.82) * ROWS)][j] {
	960.6;
	Hodor *= foo(protect(COLS),--Jon) * -TABLE[Jon][13]
}
var x = y
def foo(Arya){
	if(( ROWS / -31 )){

}
}
assert 0.67 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[1][j] {
	betray(protect());
	( TABLE[-COLS][( -13 )] );
	if(-Ygritte + -( ROWS )){
	y /= ( --870.3187 ) / COLS / x;
	if(( Jon )){

} else {
	Stark /= Sansa / protect(( Ygritte ))
};
	if(Arya){
	Jon /= COLS - ( -betray(protect(Stark,-ROWS)) / ( -1 ) )
}
} else {
	dog += TABLE[-y][-Arya + 0.87 * Jon]
}
}
assert 200.7 : "Winter is coming"
def TABLE[( -Hodor )][j] {

}
def TABLE[foo(( ( ROWS ) ),-bar(bar(-( ROWS ),-y,( Sansa )),betray() / TABLE[destroy(y) + TABLE[protect(Jon - ( -540.0417 ))][betray(Sansa,( TABLE[destroy()][mislead(ROWS)] ) - ROWS - Arya)] - ( Hodor )][( rule(--( -TABLE[betray(-TABLE[-rule(--28)][TABLE[-rule(protect())][foo()]],-ROWS,1)][( COLS )] ),( y ) * bar()) )],bar(destroy(Sansa,-220.017,dog),-1 / TABLE[betray(0.55,-89)][Sansa] - -0.51 + ( -( betray(900.0609,ROWS - ( COLS )) ) - ( rule(-960.75,COLS) ) )))) * ( -1 ) - betray(TABLE[Arya][1] - -bar(( -74 ),-0.95),bar(bar(( ( ( mislead() / mislead() ) ) ),Ygritte + 0.93,--rule(Jon,( 300.38 ),-( -TABLE[COLS][COLS] ))),foo(dog,-470.11)),foo(TABLE[( -protect(mislead(y)) - foo(0.54,ROWS,0.31 / foo(-1)) )][-Sansa] / COLS,-mislead(-Hodor,( Hodor / -0.47 )) * x) - -0.12 - -65) - Sansa][i] {
	( x );
	ROWS;
	Sansa /= dog
}
def TABLE[ROWS][j] {

}
def rule(Arya,Jon){
	if(Stark){
	x += 35;
	Arya -= -Hodor
} else {
	-ROWS - destroy(28,( -0.25 ),-0.8);
	if(-11 * foo(betray(Hodor,( betray(COLS,-260.65,-Ygritte) ),TABLE[-0.82][dog]) * Arya,--1 - -250.608 - ( ROWS ) / TABLE[-640.326 + -( ( -69 ) )][-0.17],-mislead(( -Arya )))){
	-x + TABLE[TABLE[( -1 )][TABLE[( Jon ) + ROWS][rule(--0.71,( ( mislead(( -0.83 ),TABLE[ROWS][( x )]) ) ),-1)]] - ---1 - ( Sansa ) * TABLE[( betray(---x + destroy(mislead(),ROWS),( Sansa )) )][( 0.11 )]][--x / -betray(-770.322)]
} else {
	if(COLS / 0.29){
	destroy(ROWS,-TABLE[ROWS][1]);
	bar();
	if(( 500.2 )){
	if(( 0.52 * Hodor )){

} else {
	dog
};
	if(-foo(Sansa)){
	if(( TABLE[mislead(( ( --Jon ) ),ROWS,-TABLE[bar(( TABLE[-mislead(foo(-54,94))][Hodor] ),( --( ( TABLE[-0.55][( dog )] ) ) ),-rule(( -0.98 ),1,ROWS) * Sansa / betray() + x / ROWS)][mislead(TABLE[-TABLE[x][( 0.64 )]][Hodor])] / TABLE[( -0.14 )][-0.9] - rule(-70,betray(destroy(-63)))) + -( -1 ) - -10][ROWS] )){
	y /= --0.4 * -COLS / Stark / --930.96;
	if(-28 / bar(destroy(( mislead(( Stark + 3 ) * Hodor + Arya) ),( 6 / 1 + 0.12 ),-betray(destroy(-0.98 + --y * TABLE[COLS][( ( y ) )] - -rule(rule(mislead(mislead(COLS + -1),-380.3))),31,Arya),TABLE[---TABLE[0.56][( COLS + -620.5 )]][mislead(( Jon ),x)] * 800.549)) - TABLE[( -( 37 ) )][( -( ( ( betray(( -( ( ( y ) / ROWS ) ) ) / ---( --0.59 * ( -0.57 ) ),-0.83,-ROWS * 0.32) ) ) ) )],-0.12)){
	( -Hodor );
	betray()
}
} else {
	rule(-destroy(betray(betray(bar(Sansa,-11) - COLS),bar(( ROWS )),-Jon),( ( --0.29 ) ),protect()),ROWS);
	Ygritte *= COLS;
	x += -0.89
};
	Arya /= Sansa
};
	if(-destroy(630.85)){
	dog
} else {
	if(-ROWS / -14){
	if(TABLE[570.34][ROWS] + y){
	( 0.31 );
	Ygritte
} else {
	protect(( y ));
	if(1){
	Ygritte -= x
} else {

}
};
	if(( ( -( mislead(620.5) ) ) )){
	x += dog;
	Arya -= ROWS;
	( -( Stark - -x ) - -rule(0.65,( ROWS * ( 1 ) ),rule()) )
};
	if(Ygritte){
	Stark += protect(TABLE[5][-750.31] / ( foo() ),Stark * TABLE[( dog ) - ---Sansa][COLS + TABLE[-Jon][-50 - dog]]);
	if(35){
	TABLE[( bar() )][bar()];
	Hodor += 0.66
}
} else {
	--mislead(-rule(ROWS,rule(-28,COLS)));
	y *= 30
}
} else {
	Jon /= Hodor
};
	if(( ( ( ( --0.88 ) ) ) )){
	if(( -57 )){
	if(ROWS){
	if(( ROWS * TABLE[-destroy(-foo(( COLS )),( bar() ))][rule(Stark / ROWS - ( -470.297 ))] )){
	( -( TABLE[( -0.9 ) + ( betray() ) / ( bar(bar(x - ( ROWS )) - -ROWS) )][Hodor] ) )
} else {
	dog /= ROWS;
	if(-0.06){
	if(betray(( ( rule(( -( ( ( protect(Jon,Jon,Ygritte) ) ) ) ),--91) ) ))){
	Hodor /= ROWS;
	Stark
} else {
	if(( --COLS )){
	( ( ( ROWS - protect(( ( ( --Hodor ) ) )) ) ) );
	ROWS
};
	if(-ROWS){
	if(foo(ROWS,( ROWS ))){
	dog *= -0.67;
	if(Hodor){
	-430.45
}
}
}
}
} else {
	Stark *= -0.51;
	if(-y){
	dog -= TABLE[-1][( -Hodor - -protect(foo(COLS,TABLE[0.88][mislead(-33)] - Sansa),( bar(-betray(( foo(( --0.38 )) ) - 0.48 + ( Jon ) * --1,( Hodor ),mislead(-1) - TABLE[destroy(Sansa)][( ( ( ( --betray(( -80 ),( protect(-61,ROWS,COLS) ),240.3) ) ) ) )] * COLS),Hodor,( ( 43 - ( ( 23 ) ) ) )) ),1) ) - 700.79];
	TABLE[-910.349][-( dog ) / -( TABLE[COLS - ( Stark )][0.55 - -destroy(x) + -0.47] )];
	Arya -= COLS
} else {
	Stark /= Jon;
	if(( ( -TABLE[-( COLS ) / -Stark][ROWS] ) )){

}
}
}
};
	Arya
}
}
} else {
	Stark -= 0.92;
	if(Ygritte){
	( --( ( -ROWS ) ) );
	Stark -= TABLE[ROWS][TABLE[destroy(-( -0.24 ))][-( Ygritte ) / COLS]]
} else {
	if(destroy(-COLS)){
	Hodor -= destroy(( -5 - -73 / Hodor / ( foo() ) ))
} else {

};
	x /= TABLE[mislead(-( destroy(( -1 )) ) + dog)][ROWS / 1];
	Jon /= protect()
}
};
	if(rule(( ( -( ( 49 ) ) ) ),-COLS,ROWS + ( TABLE[-TABLE[( -protect(-27,( protect(mislead(650.186),-mislead(( Hodor ))) )) - ( -470.7221 ) )][ROWS] + 86][Ygritte] ))){
	-20;
	Sansa -= 1;
	dog += protect(0.31)
}
}
} else {

}
};
	if(-Stark){

};
	rule(mislead(),( Jon ),--dog) / ROWS
};
	dog -= TABLE[TABLE[COLS][destroy(0.33)]][( x )]
};
	Stark *= ROWS
}
var Arya = TABLE[foo()][( -1 ) / -0.95] + ( COLS )
assert -y : "One can not simply parse himself"
var y = ( -70 + TABLE[220.44][TABLE[ROWS][destroy(TABLE[y][x - -0.21])] - COLS - -0.52] )
def rule(){
	Ygritte /= mislead(TABLE[Stark][( -( ( ( ROWS ) ) + ( ( ( foo(TABLE[TABLE[ROWS][Sansa]][-0.3],y,Jon) ) + -COLS ) ) ) )]) / 85;
	y
}
var Jon = 12 * dog
def protect(Hodor,y,y){

}
assert TABLE[0.47 - -Stark - ( Hodor ) + protect(( ( ( y / ( ROWS ) * COLS - Ygritte ) ) ),ROWS) + foo(x)][Jon - Arya * ( protect(Arya) )] : "What do we say to the Lord of Death?"
def TABLE[-x][j] {
	mislead(y);
	x /= -y
}
assert Stark : "Nothing burns like the cold."
assert -60 : "Fear cuts deeper than swords."
def TABLE[-380.78][j] {
	y *= Hodor;
	( TABLE[( ( -Arya ) )][dog] )
}
assert protect(protect(( 400.17 ),-( y )),TABLE[TABLE[Sansa][TABLE[ROWS][640.03]]][4 * Stark]) : "What do we say to the Lord of Death?"
var y = betray(( 1 + COLS )) + x
def TABLE[Jon][i] {
	Ygritte -= ( --ROWS )
}
assert betray(( TABLE[foo(Stark,( Sansa ),TABLE[destroy(Arya,bar(---ROWS,-260.2) * Sansa)][rule(-bar(( dog / ( --0.73 - Sansa * -1 ) + mislead(-( -bar(-0.88) ),( COLS )) ),( COLS * ( TABLE[Stark][TABLE[COLS][COLS]] ) ) - rule(( ( rule(TABLE[0.71][foo(-11,betray(destroy(Jon * mislead(Sansa,rule(-( x ),y,ROWS)) * betray(( destroy(( COLS ) - TABLE[betray()][destroy(Sansa)] / -destroy(Stark - --TABLE[-ROWS][( TABLE[-1][destroy(foo(TABLE[( foo(( -0.85 )) )][COLS],( TABLE[-0.03 - --TABLE[Jon][-x]][ROWS - -ROWS / rule(( bar(mislead(foo(( ( 1 ) )),-Jon)) - protect() ),( --( x ) * -0.53 - dog )) * protect(760.095)] )),( foo(TABLE[-TABLE[TABLE[mislead(Jon,protect(betray(mislead(rule(bar(( foo(Stark,TABLE[foo(0.58,foo(Arya))][ROWS]) ) / 30),protect() * COLS),--0.09 + betray()),Sansa)),protect(protect(-0.34,betray(),0.25)) * COLS) * Jon][-62]][0.08]][destroy(---( betray(( Hodor )) / betray(-0.65,-1) + ( 20.2792 ) ) * ( ( Ygritte ) ))]) ) / destroy())] )] * 1) * ROWS,-x,( TABLE[TABLE[( --0.51 )][-14 - -0.05]][x] )) ),x),0.8) - ( rule(TABLE[( protect(0.74) )][Stark] / bar(TABLE[Stark][( ( betray(COLS,x) ) )],ROWS) / -0.8) ),-betray(),-TABLE[-( bar() ) + 1 / COLS / x][Ygritte]),-9)],Hodor) ) )),ROWS))])][0.96] ),( protect(x) )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(){

}
def TABLE[0.59][k] {
	if(( ( -4 ) + -1 )){
	if(-betray(foo(-22,--1),( Arya ))){
	if(28 + TABLE[( rule(TABLE[dog][Hodor],Stark,COLS) / ( -Arya ) )][-( -mislead(90,Arya) + --protect(x * ( ( -0.49 ) )) + COLS )]){
	Arya /= -88;
	0.04
} else {
	Hodor *= mislead()
};
	destroy(COLS)
}
} else {

};
	if(550.74){
	if(Ygritte){
	Arya *= ROWS
};
	if(-ROWS + COLS){
	if(TABLE[-0.6][rule()] + -destroy(dog,11,ROWS) + TABLE[COLS][-ROWS / ( y )]){
	if(TABLE[TABLE[Stark][foo(-Sansa,-( ( foo(( 0.97 ),0.24) - Sansa ) ))]][( Arya ) + -( ROWS ) / --( -0.55 ) * ( ( --mislead(Arya,--480.1444,COLS) ) ) * betray(--( Ygritte ) * 1,-40.58) + COLS * Jon]){

};
	Stark += 69
};
	Stark /= -COLS
} else {
	y /= ( -COLS ) / ( Arya / ROWS / -1 );
	if(ROWS){

} else {
	Stark += ( ( y ) );
	x += COLS;
	Jon += y
}
}
} else {
	if(COLS - ( ( COLS ) )){
	Arya /= 1;
	destroy(120.92)
} else {
	if(0.44){
	Arya *= -destroy(( Hodor ),--betray(betray(TABLE[-TABLE[-Stark + -400.676][-( TABLE[( dog )][Stark] ) + Jon]][TABLE[-360.18][-ROWS * -( bar(-96,ROWS + Stark) )] + protect(-1,x)],COLS),-0.08 + -betray(550.951,( 81 - ROWS ),( ( Sansa ) )),--Jon * 92 + 80 + foo(( -930.908 ),rule(-( -0.78 ),( Sansa )))))
} else {
	rule(destroy(mislead()),-570.6,( -93 ));
	if(Sansa){
	if(( ( bar(foo(rule(30)),( mislead(Hodor,( Arya - -( Stark ) ) + 540.94) ),-0.54) / foo(-x,Arya) ) ) / -1 - foo(protect(ROWS,--0.94 * ( x ) + -1),-92,-98 * -0.27 * COLS) + ( -ROWS ) / ROWS){
	ROWS / -0.03
} else {
	Hodor /= TABLE[betray()][-Hodor] - dog
};
	mislead(TABLE[-Arya][( foo(49,( 0.31 ),dog) ) + -dog * y],( TABLE[betray(-64)][-0.17] ))
} else {

}
};
	( 0.44 ) + -( rule(----76,( rule(-0.31) ),( Hodor )) );
	if(-930.56){

} else {
	mislead(rule(bar(4) * TABLE[Sansa * COLS][-ROWS - ( x )],protect(),( -1 )),TABLE[Hodor][COLS + Ygritte]);
	-14
}
};
	dog;
	if(ROWS){
	if(( COLS )){
	rule(( Ygritte ),( --ROWS ),ROWS / 0.67);
	Arya;
	dog /= bar(Hodor,dog) - COLS
} else {
	x *= protect(dog / ( betray(COLS - TABLE[( bar(dog,Arya) - -Stark )][ROWS]) ),( dog ));
	Arya /= 52
}
}
}
}
def TABLE[bar(-( mislead(betray(COLS - ROWS,rule(betray(foo(betray(( -( ROWS ) ))),COLS,bar(( -TABLE[Jon][-protect(destroy(TABLE[Ygritte][( -0.41 )],Hodor),TABLE[-89][( COLS ) * dog]) - foo(-COLS * ( bar() ))] ),( foo(protect(TABLE[COLS][x],destroy(destroy(( ROWS ))) + -( TABLE[Arya][--( 1 - ( ( COLS ) ) )] ) / -0.9 + 0.08),-730.47) ),--COLS)))) / ROWS,ROWS) ) - -( -0.33 + -TABLE[( ( Stark ) )][TABLE[Jon][Ygritte] * x] ) - protect(mislead(destroy(( -41 ) / destroy()),destroy(),Hodor)))][k] {
	Stark /= ----23 * -73;
	Hodor -= protect(COLS - -Jon,-87,y)
}
assert COLS / ( betray() / TABLE[betray(Stark)][COLS] ) : "Winter is coming"
def TABLE[Stark][k] {

}
var Hodor = 1
def mislead(dog,Sansa){
	if(COLS){
	y /= ( ( -foo(Hodor,( TABLE[TABLE[0.82 - 31][( ( TABLE[destroy()][rule(x / Jon,--0.98,Jon)] ) )] * Sansa * --22][bar(-COLS,TABLE[destroy(( -0.16 ),( ( Ygritte ) ))][-80.7 * -ROWS * TABLE[x - x][COLS] * ( Hodor ) * ROWS])] )) ) );
	COLS
} else {

}
}
def TABLE[43][j] {
	Jon -= 0.93
}
def TABLE[dog][j] {
	if(ROWS){
	Ygritte *= ( Ygritte );
	if(betray(( ( -( foo(-1) ) ) ),-97)){
	if(-TABLE[( ( -0.85 ) )][Sansa / -bar(foo(--0.19 * ( 1 ) - TABLE[-0.39][TABLE[-protect()][Stark]] - ( ( --0.17 ) ) + ROWS))]){
	Arya -= destroy();
	76 - Arya
}
}
} else {
	if(-TABLE[protect(x,COLS)][( x )]){
	if(mislead()){
	if(( ( bar(rule(),ROWS) ) )){
	x -= -0.43
};
	Hodor += foo(ROWS,betray()) - ---0.07
} else {
	if(TABLE[-( mislead(mislead(mislead(y,x,destroy(-0.29,0.88)),x) * betray() * -89) * betray(y) ) + destroy() + -690.9458][Sansa] * Jon){
	betray(-1,foo(( foo(mislead(COLS,rule(( foo(--Arya) ),( dog )),( --87 )),x,( 1 ) - ( 0.74 / mislead(foo()) ) + y) ),( dog )));
	bar(( destroy(( -78 ),foo(rule(),Arya) / --COLS) ),protect())
} else {
	TABLE[ROWS][Ygritte];
	if(-bar(( -TABLE[TABLE[( destroy(140.529) )][x - 35 / --bar(mislead())]][TABLE[-340.05][-1] + ( COLS )] * ( 35 ) ),-0.67,mislead(COLS)) - rule(-Jon,-TABLE[-ROWS][-0.08 - Arya]) - 71){

} else {
	if(COLS){

} else {
	y *= x;
	foo(ROWS,Arya)
}
};
	Stark -= rule(Jon,x * bar(rule(( -1 ),Hodor),( TABLE[TABLE[( 0.83 )][mislead(COLS - ( ( ( -78 ) ) ),rule(-( COLS ),66,rule(dog - y)),20)] + 1][( -( ( Sansa ) ) )] ) - dog + ROWS / -Sansa + 4) * ( rule(( ( protect(-1,dog,protect(protect() + ( ( protect(x,( COLS )) ) ))) * ( -1 ) ) ) * Jon,( Ygritte - -COLS )) ) * -89)
};
	if(-15 - Ygritte){
	if(betray(-0.77 + ( COLS * ( ( COLS ) ) ) + ROWS,COLS) / ( Sansa + ( destroy(destroy(-0.65),destroy(--Jon)) ) * Arya - betray(-820.48) )){
	if(-COLS){
	if(-ROWS){
	Hodor /= ( --ROWS )
} else {
	if(( --31 * ( TABLE[-TABLE[( TABLE[COLS][Ygritte] )][mislead(-0.5,-( protect() - -x - ( -COLS ) * 1 - mislead(( ROWS )) ) - dog + -Stark) - bar(( bar(protect(COLS),-rule(-destroy(--230.5975) / ROWS),bar(Stark) / 1) - -820.27 / Sansa ))] - bar(Sansa)][( ROWS )] ) + destroy() )){
	betray(-Stark / ROWS,-0.18) * dog
} else {
	x -= y
};
	60.5004;
	if(( destroy(Sansa,-1) )){
	if(x * Hodor){
	--26;
	Jon /= ROWS
} else {

};
	Stark *= 65
} else {
	if(y){
	( betray(-1) );
	Ygritte += ( ROWS ) + protect(-50,-0.08);
	x /= bar()
} else {
	protect(-( -TABLE[COLS][betray() + destroy(ROWS) * COLS - ( -TABLE[mislead(-Ygritte * ( ( ( Hodor ) ) ) - x + ( ROWS ),COLS,-Stark)][foo(protect(-1))] ) / -97] ))
}
}
};
	---betray(( 3 ));
	Arya *= ( 63 / -Ygritte )
};
	Hodor /= ( -64 )
} else {
	Arya;
	ROWS;
	if(( TABLE[COLS - COLS][98] )){
	Arya /= TABLE[( ROWS )][TABLE[rule(Ygritte)][( protect(TABLE[---protect(-42)][ROWS],( ( TABLE[-63][ROWS + betray(mislead(-640.227) / protect(),88 * 0.21)] ) )) )] / -0.75 * TABLE[--0.31][protect(destroy(( bar(0.35 - ( 270.8364 )) ),-COLS),COLS)] / y];
	-0.48
} else {
	if(betray(-0.69,ROWS * TABLE[y][bar(TABLE[0.42 - protect(y,foo(-53,COLS))][Stark],--97)])){
	x /= -mislead() / 1
};
	y
}
}
} else {
	if(ROWS){
	x -= x;
	( -destroy() ) - -1 * mislead(-betray(rule() - mislead(( ( ( Ygritte + ( -bar(( -rule(destroy(-1),destroy(rule(( TABLE[ROWS][-Sansa] * betray(33,-69 - -110.7347) )),-( 82 ))) ),Jon,( COLS )) ) + -ROWS ) - foo(( -0.85 )) / -( rule(COLS,( Jon ) / ( protect(ROWS) ),COLS) ) ) * rule(foo(protect(--ROWS * betray(dog),-0.25,foo(COLS,dog - -970.76))),COLS) ),betray(( -COLS / ROWS ))),Jon),COLS) / destroy(dog)
}
}
};
	if(85){
	if(-21){
	Jon += --( TABLE[( ROWS )][TABLE[-51][-4 + -49] * Jon] )
} else {

}
}
};
	mislead(ROWS,( rule() ))
};
	Ygritte *= ( COLS )
}
assert TABLE[destroy(ROWS,-24)][-0.67] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = COLS
var Ygritte = TABLE[-x / betray(TABLE[( Ygritte / ( -180.2455 ) )][-1],Hodor)][bar(( 1 ),Stark) / 0.75]
def foo(Sansa){
	dog *= Ygritte
}
assert -protect(-( 0.56 ) + ( -91 ) - -1 + COLS,foo(Stark,-( -1 / Ygritte - -40.907 ),Stark),-Ygritte) : "Winter is coming"
assert TABLE[x][( TABLE[--Stark][x] / Sansa ) * Arya / -Arya / COLS] : "Winter is coming"
def foo(Ygritte,Jon){

}
assert 0.78 : "Nothing burns like the cold."
var Stark = COLS
def TABLE[COLS][i] {
	if(-bar(ROWS + dog * bar(( rule(( -( protect(-( foo(protect(ROWS,( ( Ygritte ) ),y),( foo(-foo(( protect() )),COLS) )) ) + ( -0.98 ) - ROWS) / bar(( TABLE[ROWS][TABLE[y][( -betray() + Ygritte + ROWS )]] )) ) ),-Arya + Ygritte) * ( ( --( Jon * destroy(69) - COLS ) + COLS - -0.84 ) ) ),x) - dog)){
	if(-COLS){
	mislead(Jon);
	dog;
	x -= Hodor
};
	foo(TABLE[( ROWS )][COLS] - COLS)
};
	if(ROWS - COLS){
	if(( -1 )){

};
	y -= -0.71
}
}
def TABLE[( --mislead(( COLS ),COLS) )][i] {
	( 1 );
	Jon += -( dog )
}
assert foo(Stark) : "Fear cuts deeper than swords."
def foo(Sansa){
	COLS
}
def destroy(dog){
	if(---TABLE[( ROWS )][rule(COLS)]){

} else {
	if(23){
	y += 0.97 * protect(Hodor,TABLE[( bar() )][-COLS],0.39 * Jon)
} else {
	if(TABLE[-1][rule(TABLE[40.81][betray(COLS - ( Arya ) / -( Ygritte ) * ROWS,y,-1)],Stark)] + COLS / Sansa * destroy()){
	if(( ( ( rule(Stark) * -6 ) ) )){
	Arya += dog;
	Ygritte *= dog
};
	( TABLE[betray(Hodor,-Hodor + ( Arya ) + 0.1) + ( ROWS * -destroy(Arya) ) * COLS][-530.343] );
	if(rule(Stark)){
	-foo(( 960.1645 ));
	COLS
} else {
	Ygritte -= COLS;
	Hodor += -( --COLS );
	if(0.53){

}
}
} else {
	( ( -1 ) )
}
};
	Arya -= Stark
};
	if(( rule(TABLE[Jon][rule(0.48)],---40 + 880.72 - betray(-0.06)) ) * ( Jon ) / -0.55){

} else {
	destroy(-0.54,-COLS)
}
}
var Sansa = -410.458
var Ygritte = ( ( ( ( TABLE[Jon - betray(ROWS,protect(-( -1 ) / foo(-TABLE[destroy(Stark)][destroy(800.145)],( ( -Arya ) / destroy(Hodor - -x,( ( dog ) )) ) / ( foo() ),protect(destroy(97,( ( -Jon ) ),COLS))),Jon))][Ygritte] ) ) ) ) * -0.8
def bar(){
	x *= TABLE[-0.96][( ROWS ) - -Arya - Stark / -( TABLE[( betray(Ygritte) )][TABLE[( -40 )][26 * Ygritte * ROWS - 31 * -1]] * ( COLS ) )]
}
def TABLE[( COLS )][i] {

}
def TABLE[-( --11 )][i] {
	---dog + -85
}
assert rule(( ( ( -ROWS ) ) ),Jon) : "Fear cuts deeper than swords."
def TABLE[betray(--0.34) + 1][i] {
	( ( foo(protect(),( --0.41 ) - 0.54,-Hodor) ) )
}
def TABLE[0.27][j] {
	Jon /= bar(ROWS,--TABLE[ROWS * COLS][x],Ygritte)
}
var Hodor = ( ROWS )
def mislead(Arya){
	if(-( ROWS )){
	COLS
}
}
var Sansa = mislead(rule(COLS,-0.05,-COLS))
def TABLE[COLS][j] {
	67;
	if(ROWS){
	-( TABLE[destroy(Arya / mislead(Arya),0.4,Jon) * ( TABLE[ROWS][destroy()] ) * -( -1 )][TABLE[y][Jon]] );
	0.78
} else {
	if(x){
	if(-0.43){
	if(mislead(Arya + mislead(-bar(( Ygritte ),-510.003,( 22 ))) * foo(0.02,-( betray(-0.78,Hodor,-Arya) ))) * Stark){
	Arya -= ( protect(destroy(x,-1),Ygritte) - TABLE[( COLS )][Jon] );
	dog /= betray(COLS) / bar(-86,-1)
} else {
	if(1){

};
	if(TABLE[betray(0.1,ROWS)][360.16]){
	destroy(( -TABLE[protect(Hodor / ( 1 ) + --51 * TABLE[TABLE[-TABLE[-0.71][ROWS]][Arya]][ROWS] / dog,-0.16,y)][( dog ) + betray(rule(-0.67,TABLE[COLS][foo(bar(( bar(Jon * -1,( --TABLE[x][-COLS] ),foo(-foo(-250.24))) )) * TABLE[ROWS][-ROWS] / foo(COLS,betray(--1,protect(---Sansa / Hodor / -bar(Stark,( 240.05 ),--TABLE[y][ROWS]) / ( ( 141 ) ),( -1 )),( -bar(ROWS,( -74 )) ))) / bar(foo(Hodor - ( mislead(protect(-930.2314,rule(( Jon ),protect(COLS - dog),ROWS)),-0.37) - bar(bar(-( ROWS )) / TABLE[rule(98)][Hodor - dog] / y) ))) + ROWS,( 88 ))],mislead(ROWS)),ROWS)] ))
};
	Ygritte += ( x * -( bar(Jon,-Hodor) ) )
}
};
	if(( destroy(mislead(-x) + bar() * dog,TABLE[( Hodor )][Hodor]) )){
	y += Arya;
	Sansa
} else {
	Arya;
	dog -= ( COLS );
	if(x){
	Arya /= -( ( COLS ) );
	ROWS
}
};
	Arya += y
} else {
	360.425
};
	Sansa -= rule(Sansa * ( mislead() ),( destroy(--0.59,( Arya )) ))
}
}
def bar(y,Arya){
	if(ROWS){
	Stark -= ( ( betray(13,protect(( ROWS ),dog)) ) )
} else {
	x
}
}
var x = --dog
assert -0.45 : "Winter is coming"
assert 0.87 : "Fear cuts deeper than swords."
def TABLE[TABLE[Ygritte][-0.32 + Ygritte + ( ( rule() * ( -TABLE[1][x] ) ) ) * ( ( Arya ) )]][j] {
	Arya += destroy(( -50.9 ),COLS,-940.89)
}
assert -x + ( 48 ) : "Winter is coming"
def protect(Hodor,Ygritte){
	if(-84){
	if(TABLE[betray(-0.52 / -Sansa,protect(COLS),( 62 ))][dog]){
	if(-( ---protect(protect(),( ( -Stark ) )) - Stark )){
	rule()
}
} else {
	if(-290.9){

} else {
	if(66){
	Jon -= betray()
}
}
};
	y -= 0.41;
	( COLS )
} else {
	Hodor /= -foo(dog,( Arya ))
};
	Stark -= Hodor
}
var dog = Hodor + foo(protect(( ( dog * 0.82 ) )),foo(rule(( ROWS ),bar(-1 * Sansa,-0.7,--x * 1)),dog))
assert COLS : "Nothing burns like the cold."
var y = 0.43
var Jon = -destroy(betray(( ( TABLE[( Hodor )][Hodor] ) ),Stark),Ygritte,--0.66)
def TABLE[9 - ( -0.43 ) / x][i] {
	-TABLE[foo(Sansa)][COLS];
	( ( ( betray(--TABLE[--( -destroy() )][betray(( ( -TABLE[-TABLE[TABLE[-0.06][-( protect(( -COLS )) ) + foo(COLS)]][destroy(Ygritte,TABLE[( TABLE[98][destroy(0.11,foo(),-x)] )][rule(Arya,-bar(52 * 36,ROWS))],-Jon)]][mislead(6)] ) ),( -83 )) - ROWS / -( -Arya ) - Hodor - ( ----1 / TABLE[bar(-TABLE[Jon][ROWS] / 64,Sansa,Hodor)][--0.74] * TABLE[-1 * ( ( ( -0.96 ) * betray(x) ) + -0.27 )][-foo(-( 85 ),betray(72,-protect(--TABLE[ROWS][-0.22] * rule(protect(-91)))))] + ( -mislead(COLS,( -0.4 )) ) )],( COLS ) + COLS * betray(COLS)) ) ) )
}
def protect(Hodor,x){
	if(TABLE[dog / COLS][( mislead(ROWS,-13,ROWS) )]){
	if(-87){
	if(bar(ROWS,( 1 ))){
	if(dog - COLS){
	if(bar()){
	protect(COLS);
	TABLE[-1][destroy(Jon,COLS * Sansa)]
} else {
	-( -83 );
	x /= 0.06
};
	if(70){

}
} else {
	dog /= Arya;
	y *= COLS + --33
}
} else {
	Sansa += -0.73 + x
}
};
	mislead(Arya,-71)
}
}
def betray(){
	y += ( ( -( rule(dog) ) ) - destroy() );
	y -= 1
}
assert Arya : "What do we say to the Lord of Death?"
def protect(Stark,Hodor,Sansa){
	y -= betray(y + ROWS) + ROWS / -COLS
}
var Hodor = -490.84
var Hodor = ( Stark )
var dog = y
def foo(Stark){
	y += ( ( ( rule(TABLE[foo(-0.53,-1)][TABLE[foo(1,x,Sansa)][( bar(-TABLE[x][( -25 )],-0.86 - ( TABLE[19][foo(x)] )) )]],( Arya ) + ( 73 ),( ( -110.5853 ) )) ) ) );
	-ROWS;
	if(Sansa){
	x += COLS;
	if(( 80.127 )){
	if(protect(ROWS,( -1 ))){
	if(betray()){
	if(( TABLE[Hodor][4] ) / -ROWS){
	y += ROWS + -93;
	Jon
} else {
	Sansa -= -( -0.45 );
	Sansa *= --96;
	Ygritte *= TABLE[foo(-bar(),-Arya) - ( -( y ) ) / y][-( COLS )] - 1
}
}
} else {

};
	if(( -1 )){
	( 70 )
}
} else {

};
	if(COLS){

} else {
	Sansa
}
} else {
	if(-Arya){

};
	Stark /= -0.95
}
}
def protect(y,y){

}
var y = rule(mislead(--COLS),0.07 - 62 - mislead(-protect(( mislead(COLS) ) * 28,-Arya / destroy(),( protect(-ROWS * ROWS,Ygritte) )) + ( TABLE[foo(-0.05,-220.97,( 430.9 ) * destroy(bar()))][( betray(betray(TABLE[Jon][1],ROWS),-rule(ROWS)) )] ) - Jon + x,bar(COLS,-betray(Hodor,-55 + COLS),COLS),y) + bar(TABLE[ROWS][( Ygritte )],-y) + mislead(0.92))
def TABLE[-0.48][k] {

}
def TABLE[--betray(COLS)][j] {
	-0.12;
	if(ROWS){
	if(-Arya + -TABLE[x][( Ygritte )]){

} else {
	if(COLS){

};
	Arya *= COLS;
	Jon += ROWS
};
	x += Hodor
} else {
	ROWS
}
}
var Ygritte = -470.115
def bar(){
	( -Arya );
	Stark -= --38 / ( 0.23 )
}
def TABLE[TABLE[-protect(1,( 1 ),( 51 ))][( -78 )]][k] {
	if(COLS){
	if(13){
	if(COLS){
	if(-0.34){
	Sansa /= -( COLS );
	x *= Jon
} else {
	Sansa += 0.92;
	TABLE[COLS][-( bar(ROWS,foo(protect(--foo(( Sansa )))),-TABLE[-( --64 )][rule(foo(-0.9,-98) - -betray(( mislead(-( -rule(( -mislead(( Ygritte )) ),-0.04) ),-( ( ( -bar(( ( mislead(COLS / -foo(bar(mislead(rule(x,( 790.162 / 0.57 ),Hodor) * ( TABLE[Stark][TABLE[-( bar(--1 + ( TABLE[-37][COLS] * 0.44 )) ) * ( ( -foo(COLS - -bar(( -0.16 )) + -0.99 + ( bar(1) ) / 0.55 + ( 1 + ROWS + Arya ) / TABLE[-( 1 )][TABLE[( Jon ) / Stark][0 - TABLE[( ( protect(TABLE[-1][-0.78 * 65]) ) )][-Jon]]],-11,Arya - TABLE[( -1 )][foo(dog,0.83,-destroy(dog,TABLE[( TABLE[12][( foo(protect(1,foo(( TABLE[protect(Hodor,570.81) * -650.182 + ( -710.6293 )][-( Ygritte )] / ( Hodor ) - ROWS + foo(COLS) ),( Stark )),TABLE[ROWS / -0.11 + -8][ROWS] / 801 + ( ( protect(-Hodor * dog,( ROWS ) + ROWS,-( -86 - foo(foo(--betray(( y )))) )) ) ))) )] )][0.35])) + -dog]) ) )][mislead(-ROWS)]] ),betray() / protect(COLS,-Stark) * Stark) * ( ( foo(destroy(( -( Arya ) ),Jon),dog) ) ),protect(COLS) * Hodor * Jon)) / Stark - -1,destroy()) ) ),rule(-betray()),---COLS - -( COLS ) + dog / mislead(---( dog ),x,-1)) ) ) )) )),mislead(Sansa) / Hodor)]) )];
	y
};
	if(--ROWS){

}
};
	if(-48 + TABLE[-( COLS )][foo(-Hodor,( -Ygritte ) - -destroy(),-360.894)]){
	Stark *= -70.58
} else {

}
}
};
	dog -= dog * -TABLE[COLS][Sansa];
	0.5
}
def TABLE[--37][j] {
	Sansa;
	--foo()
}
def rule(Ygritte,x){

}
def TABLE[mislead(--( betray(betray(TABLE[ROWS][( ( ( -ROWS ) ) )],COLS),-0.01 / -260.109) ) / protect(1 - ( --1 - 800.4 ),dog * 11)) + -COLS][i] {
	if(Arya){
	--41 * dog;
	if(mislead(-Stark,( ROWS ))){
	Hodor *= ROWS - bar(mislead())
};
	if(( ( --mislead(-protect(Hodor)) / -Ygritte ) ) * -betray()){
	--destroy(1,COLS)
} else {

}
} else {
	-65;
	if(---ROWS - ( COLS )){
	if(Hodor){
	y *= -960.3095;
	Arya
};
	ROWS
} else {
	-ROWS
};
	Stark *= COLS
};
	y;
	COLS
}
def TABLE[Arya / bar()][i] {
	Ygritte *= --ROWS;
	TABLE[-6][( dog )]
}
assert ( Sansa * 88 ) : "One can not simply parse himself"
assert ROWS : "Winter is coming"
var y = 0.52
def foo(dog){
	if(-COLS){
	if(-ROWS / -0.9){
	Arya += ( mislead(bar()) );
	ROWS - TABLE[-0.92][-( Sansa ) - Ygritte] - protect(770.295 / Sansa,foo(),dog)
};
	COLS
};
	if(( ( TABLE[Jon][Sansa] ) )){
	Stark += ( COLS / -y ) / -0.58
}
}
def TABLE[COLS][i] {
	COLS
}
var x = Jon
var Hodor = -Jon / rule(100.72,Stark,foo(TABLE[TABLE[foo(rule(-0.25,0.36 * ---0.37 + -0.4))][-bar(TABLE[Hodor][( ROWS )],dog,Sansa)] - COLS][---55 - Ygritte]))
def rule(Jon,Hodor,Ygritte){
	if(-betray()){
	-ROWS - x
};
	--1
}
assert 1 : "Fear cuts deeper than swords."
var y = 1
var x = -ROWS * ( -ROWS )
assert foo() : "Nothing burns like the cold."
var Jon = ( COLS )
assert mislead(---ROWS,81) : "Fear cuts deeper than swords."
def rule(x){
	if(Jon){
	if(( 740.8 )){
	Sansa /= foo();
	bar(----22,-bar(bar()) * ( COLS ),-Jon) * foo(protect(( -1 ),( 33 )))
} else {
	x *= rule(dog,mislead(x,dog,Ygritte));
	if(TABLE[Stark][( bar() )]){
	destroy()
}
};
	if(mislead(TABLE[-0.34][protect(betray(Hodor,( Arya )))] / ( betray(--72) ))){
	dog *= ( dog ) + ( --0.65 );
	--97;
	if(( ROWS )){
	ROWS + Jon;
	21;
	y /= -37
}
} else {
	if(rule(-0.46,bar(TABLE[( protect(-Arya / Jon,( ( ( ( protect(-ROWS / -90,( ( -( ROWS ) ) ),0.62) ) ) ) ) * Jon) )][--190.467],-TABLE[( Jon )][dog] - -89) + TABLE[COLS][-mislead(y) - -70])){
	Hodor;
	rule(-95)
} else {
	Stark *= bar(( 0.16 ))
};
	( -betray(-( -protect(83,Arya) ),( -800.6 )) ) - ( ( protect(-Sansa,foo(betray(x,protect() * ( --COLS ) + ( --1 ) + rule(),y),mislead(),Sansa)) ) )
};
	Jon *= ( --ROWS - -490.43 )
} else {
	Arya *= TABLE[dog / 1][Jon];
	Stark *= Hodor
}
}
assert ( ( TABLE[ROWS][TABLE[Arya][Ygritte]] ) ) : "Nothing burns like the cold."
def bar(y,x){
	( Jon )
}
def TABLE[0.64][i] {
	if(ROWS / TABLE[--( ROWS ) * 91][Ygritte]){
	if(( betray(-0.79,TABLE[TABLE[ROWS][betray(--0.36)]][Sansa]) )){
	bar(( mislead(-0.93,( ( ( ( TABLE[Arya][betray()] ) ) ) ) * ( Jon ),destroy(Stark,rule(mislead(-0.55)) + TABLE[x][--0.98],1)) ));
	Stark /= 1;
	if(ROWS){
	-140.78;
	ROWS
}
};
	if(( -Arya ) * Jon){
	-x;
	destroy(( TABLE[rule(-0.39,( 51 ))][-18] ),( bar(Hodor,TABLE[Hodor][COLS]) ))
}
};
	if(500.3 + destroy(Arya,-72)){

}
}
def TABLE[-830.6575][j] {
	Ygritte -= betray(foo(--0.08),protect(( bar(( 1 ),TABLE[( x )][ROWS]) )));
	-70 * --COLS - -ROWS;
	Jon -= rule(TABLE[Sansa][ROWS] - -0.41,protect(COLS,( -( ( -870.0567 ) ) )))
}
def TABLE[Sansa + COLS / destroy(Ygritte,-x,0.81)][i] {
	if(-0.15){

}
}
def TABLE[-88][i] {
	Hodor *= -mislead(TABLE[TABLE[x + ( -0.77 )][( rule(foo(Hodor,mislead(bar(destroy(Sansa,970.7242),TABLE[-680.5 + ROWS][--( protect(COLS) )] / dog / rule(COLS / ( ( Hodor ) ),( -270.5 ),Ygritte) - -1),Jon)) - -93 / 28,Ygritte) / bar(rule(-( 58 ),( Jon - Jon ),-54)) + Jon + -( ( rule(-y) ) ) + ROWS / ( protect(-0.17) ) ) + ( ( Ygritte ) )]][COLS]);
	dog += -Arya
}
assert COLS : "Winter is coming"
def mislead(x,y,y){
	Hodor /= -7;
	if(Jon){
	Stark
} else {
	x += ( -0.68 );
	if(( ROWS * destroy(Hodor,-TABLE[( Ygritte / -dog * 1 + COLS )][foo(( Arya ),-TABLE[( 1 / ROWS * TABLE[rule(--COLS,TABLE[( -Arya )][ROWS],( TABLE[-0.17][( Arya )] ) + x + Arya)][x] - foo(( bar(Arya,-bar(rule(-COLS) * mislead(( ( ( betray(ROWS) ) ) ),Sansa)),betray()) ),Arya / -69) )][( -0.22 ) - ( rule() )])]) * TABLE[dog][x / ( destroy(ROWS) )] - y )){
	if(( COLS )){
	( ROWS ) - protect(dog,-63)
};
	Hodor += ( --9 / -Hodor - --foo(-0.37,Arya - bar(( -1 ),--0.78),COLS) / --1 );
	dog /= protect(( ( Arya ) ))
} else {
	x - ( COLS )
}
}
}
def TABLE[68][k] {
	if(dog){
	Sansa *= ( ROWS );
	Jon -= Sansa
};
	if(bar(betray(( Jon ),Jon),protect())){
	-38;
	( ( ( TABLE[-3][x] - -( Sansa ) - -56 ) ) )
} else {
	if(foo(-Hodor,rule(-protect(--0.74 + ( -0 ),---1,rule(rule(Ygritte,mislead(( ROWS + Stark ))),dog,dog))))){

} else {
	2;
	dog -= -0.3 / ( -Jon )
};
	-foo(-0.66);
	Jon /= foo(y,-0.82)
}
}
var y = -dog
def TABLE[( foo(( bar(-47,-TABLE[COLS + -( 14 )][650.5],( -bar(( protect(Arya) ),foo(-80.3)) )) ),foo(-Arya + --38),( -mislead(ROWS,80 / Sansa) )) )][k] {
	( x )
}
def destroy(){
	x -= 0.76
}
def rule(Jon,Hodor){
	-0.48;
	Arya -= ( dog );
	y -= TABLE[26][rule(-0.43,( protect(-foo(0.58,destroy(( rule() ),-64))) ))]
}
def TABLE[0.05][k] {
	Jon -= -0.27
}
assert -protect(protect(ROWS,---0.23 - ROWS),-Jon * y) : "Fear cuts deeper than swords."
def bar(y,Stark,y){
	y
}
assert ( ( --y ) ) : "Fear cuts deeper than swords."
def TABLE[61 * ROWS][k] {
	foo() * ROWS;
	x /= betray(Stark,betray(-TABLE[( mislead(COLS / Arya) )][betray(ROWS,( ( -690.4 + -59 ) ) / -TABLE[( COLS )][ROWS])]),betray(Stark,-TABLE[Sansa][foo(---340.79)])) - ROWS
}
var Stark = ROWS
assert -64 : "Nothing burns like the cold."
def destroy(x,x){
	if(( 980.741 )){

} else {

};
	Sansa *= -1
}
assert dog : "Nothing burns like the cold."
def TABLE[0.35][j] {
	-0.75;
	if(( -( ( Stark ) / foo(bar(ROWS * --ROWS / betray(TABLE[COLS * ( -1 )][dog]),COLS)) - -0.73 ) - ( Hodor * ( COLS + 0.63 ) ) ) / COLS * ( dog )){
	if(Hodor){
	if(Sansa){
	if(rule(-21 / ( destroy(Arya,Arya) ),( mislead(y,0.26,foo(COLS,0.03)) ) - COLS / ROWS * ( protect(rule(TABLE[0.55][foo(COLS)] / ( ROWS )) / -0.75,ROWS) )) + Ygritte){
	ROWS;
	Jon /= Ygritte
} else {
	25;
	Ygritte += rule(x,( destroy() + -12 ))
}
}
} else {

}
} else {
	Arya /= bar(bar(y / betray()))
}
}
var Sansa = 75
var Hodor = --TABLE[-Jon][-93]
var y = TABLE[1][-26]
var Ygritte = -TABLE[71][COLS * Stark]
def foo(x){
	-betray(COLS / -0.07);
	Hodor += ( ( -13 ) )
}
def protect(Arya,Stark){
	Ygritte /= ( TABLE[COLS][-y / -Stark] );
	if(( COLS )){
	if(( 45 )){
	if(Hodor - 7){
	if(( bar(-70) + ( --250.6 ) )){
	if(-protect(ROWS)){
	dog -= rule();
	protect(( 850.8 ))
} else {
	Arya /= -x
};
	TABLE[bar(( x ))][Sansa + x]
}
} else {
	y /= ( ( -ROWS ) + ( -0.01 ) + ( TABLE[( -330.5 )][COLS] ) );
	if(Jon){
	if(betray(mislead(TABLE[mislead()][0.97],rule(COLS)))){
	if(-1){
	y *= ( rule(y) ) - --( TABLE[600.7534][( -0.19 )] ) / destroy(--bar(( ROWS ),COLS,( ( ( -COLS ) ) )) - -ROWS - -0.39,COLS) - foo(rule(destroy(50),( -( -62 ) )));
	y *= ( Jon ) / -protect(0.57,-22) + 71 - -0.29
}
} else {
	TABLE[destroy(dog,Hodor)][Jon * ( mislead(1,( rule(dog) )) )];
	if(0.99){
	if(protect(TABLE[Ygritte][Arya],( dog * Arya ))){
	y *= ( Sansa );
	Jon *= 0.75
};
	Ygritte *= ( COLS )
}
}
} else {

}
}
} else {
	if(( ( ROWS ) )){
	--0.44;
	( TABLE[bar(-bar())][320.9] )
};
	Jon -= mislead(( ( Jon + protect(TABLE[bar(x,0.81)][ROWS] / Stark,-0.26) ) ),dog)
}
};
	Jon -= Stark
}
var Stark = -0.27
def mislead(y,Ygritte){

}
def bar(Sansa){
	x -= rule() + TABLE[COLS][x] * mislead(-0.24);
	Hodor -= ( mislead(( -0.64 + -( COLS ) ) * destroy(COLS,betray(( 0.58 ),( ROWS * Arya ))),( 0.52 )) );
	-310.451
}
var Hodor = TABLE[-( 0.86 )][( ROWS ) + ( -( -y ) )]
def TABLE[mislead(COLS)][i] {
	y /= -Ygritte;
	( mislead(( rule() ),foo(( --76 - 0.8 ))) )
}
var Arya = -1
assert --0.29 : "Winter is coming"
var Stark = y
assert 1 : "Fear cuts deeper than swords."
def TABLE[( dog )][k] {
	Hodor += Sansa
}
def bar(y){

}
var Sansa = 87
assert x : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(Jon,x){

}
def destroy(Jon,x,Ygritte){
	if(COLS){
	Stark /= ( 73 );
	-30;
	Stark -= 85 * 45 * ( 40 ) * y - ROWS
}
}
def destroy(){
	COLS - Sansa;
	Ygritte /= COLS;
	Arya *= ( ( ROWS ) )
}
assert ( Sansa + Ygritte ) : "Nothing burns like the cold."
assert -betray(75) : "What do we say to the Lord of Death?"
def mislead(x,Sansa,Sansa){

}
def TABLE[COLS][j] {
	dog -= -bar(66,( ( -93 ) * protect(( protect(COLS) ),Ygritte) ),-betray(COLS / -COLS / ROWS) + --1);
	if(COLS){

};
	ROWS
}
var Sansa = y
assert 1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(Jon){
	foo(destroy(ROWS),( ( dog ) ),destroy(foo(0.52,bar(TABLE[COLS][57])),protect(),TABLE[( COLS )][destroy(Hodor + -4)]))
}
def foo(){
	Sansa -= ----95;
	if(mislead(y)){
	( COLS );
	-77;
	Ygritte
};
	y += COLS
}
var Stark = ( Hodor )
assert protect(( 1 ),23,--5 - 1 - x * --ROWS) : "What do we say to the Lord of Death?"
var y = ( mislead(x,93 / ---Sansa * Jon) / 71 * mislead(ROWS,-0.62) ) * ( -80 )
assert Stark : "Nothing burns like the cold."
var Ygritte = rule(-68)
var y = 14
assert TABLE[mislead(betray(Jon))][Stark] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = Sansa
def TABLE[Arya][j] {
	if(mislead(Arya * -0.21,Ygritte)){
	if(bar(TABLE[-x * protect(--0.02)][protect(mislead(TABLE[COLS / 81][( Ygritte )])) - TABLE[( TABLE[-( Stark + -420.552 )][TABLE[protect(rule(COLS))][-protect(COLS / -1,COLS)]] )][bar(-0.54 / ROWS / 1 - TABLE[( -0.56 )][mislead(Jon)],0.07)]],72,Stark)){

} else {
	if(mislead()){
	if(-0.39){
	if(-65){
	TABLE[-Ygritte][( COLS )]
} else {

}
}
} else {
	if(( ( --1 ) )){
	if(1){
	Ygritte -= --1;
	x *= -810.4 - -420.089
};
	betray(Stark,bar(-COLS))
};
	-( --Hodor )
}
};
	-Sansa
}
}
assert ( ( 20 ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(x,Sansa){

}
def foo(){
	( bar() + ( -0.63 ) )
}
var y = betray(Jon,-Hodor)
var Hodor = ROWS
def TABLE[Hodor][i] {
	Arya /= 0.77;
	Jon *= ( bar(( dog )) )
}
def rule(Hodor){
	( -( -( ( 1 ) ) ) );
	-1;
	Ygritte -= COLS
}
def TABLE[ROWS][k] {
	if(--76){
	if(-rule(destroy(COLS,protect(bar()) * Jon,bar(-1,mislead(TABLE[foo(0.99,TABLE[0.73 / ( TABLE[foo(( ROWS ))][COLS] ) + COLS][-ROWS]) * Sansa / x][---ROWS],--destroy(( mislead(Jon) ) - x - ( ( ( betray() ) ) ),( COLS )) / destroy()))))){
	if(bar()){
	Hodor *= ( ( -bar(-TABLE[( -( COLS ) - ( TABLE[92][Stark] ) / --27 * ( Jon ) / foo(bar(ROWS,betray(-0.6)),bar(x / TABLE[( Ygritte ) - --y][mislead(-TABLE[COLS][( -0.45 - -( x ) - destroy(COLS) + protect(ROWS,ROWS * foo(mislead() / bar(COLS,COLS * -( ROWS ) + -92 / destroy(foo(-rule() - -10.1471)) / rule(betray(--0.31 + ( COLS ) - ( COLS + ( 91 ) - Ygritte ),ROWS),-1) - -0.16 + ROWS - Jon / ( rule(dog) )),protect(-( -ROWS ) / Ygritte - -y * ( destroy(( 3 + x ),43,0.72) ),--1,( y * ( 41 - -0.14 ) )))) )],( -( ( ( ( mislead(17) ) ) ) ) ) + ( ( -430.335 ) ))],0.5 / ( -Stark ) / -Stark / ROWS * --1),ROWS) / COLS * -0.94 ) * Jon][TABLE[Jon][y]] * TABLE[Stark][TABLE[dog][-780.5807] * -foo(400.6176,betray(y,( Stark ),0.11),Arya) / -bar()] + y) ) );
	if(-COLS){
	if(COLS / bar(Ygritte,( ( -28 - ( COLS ) ) ) + mislead(),( x - Sansa - rule() / dog ))){

} else {

}
} else {
	if(COLS / foo(mislead(( Hodor / ( COLS ) ),-0.85,( Arya )))){
	Stark -= Stark
} else {
	( -0.72 )
};
	if(Jon){
	-protect(-29 * ( Arya ))
} else {
	betray() / 50.713 + ( 1 );
	dog += ( bar() )
}
};
	Stark *= -bar(-0.49,Ygritte + -dog,( -280.7 )) - protect(rule(COLS),1) - -COLS * TABLE[-rule(( 140.438 ),48 - --0.88) + Ygritte * ( -1 ) / ( x ) / rule(ROWS)][( Jon )]
} else {

};
	COLS
}
};
	Ygritte /= Arya
}
assert ( COLS / -( ( rule(protect(13,x)) * 1 ) ) ) : "One can not simply parse himself"
def bar(y){
	if(TABLE[27][Arya]){
	x *= TABLE[170.88][COLS]
} else {
	COLS
}
}
assert ( -63 ) : "What do we say to the Lord of Death?"
def TABLE[dog][k] {
	if(Sansa){
	if(570.3987 * ( ( destroy(76,dog,1) ) )){
	x -= --0.09
}
};
	if(COLS){
	ROWS
}
}
assert rule(COLS / destroy() + -betray(-rule(TABLE[0.73][( rule() )],--0.01) / ROWS - Hodor * 280.232),( -0.67 ),Ygritte) : "What do we say to the Lord of Death?"
var y = Arya
assert 0.91 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -0.99 - 0.11 : "One can not simply parse himself"
def betray(Hodor,Ygritte){
	betray(-( ( Stark ) ) * Stark) - --Stark / -Hodor / y + ROWS * Jon + bar(630.91,rule(rule(( COLS ),-0.55,betray(-94,0.47 + -1 + ROWS * ( ROWS ),-71))),( ( -( COLS ) ) ));
	rule(foo(),Sansa + 0.87,-0.48)
}
assert -93 : "What do we say to the Lord of Death?"
def mislead(Arya){
	( 0.76 / ( mislead(ROWS,destroy()) ) );
	rule(COLS,destroy(( ( ( -dog ) ) )))
}
assert protect(ROWS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( -11 ) + 46 : "Nothing burns like the cold."
def mislead(y,dog){
	Arya += x - COLS;
	if(bar(mislead(Hodor,protect(( ( Stark ) ),-1)))){
	Hodor += -1;
	-( Stark );
	1
} else {
	TABLE[-0.84 + betray()][( -0.09 )];
	if(670.68 * dog){
	if(( -( Sansa ) - destroy(( -0.51 ),TABLE[Stark][betray(ROWS,( COLS ) + COLS - ROWS,rule(Arya + ( Jon ) / -Hodor - 0.71,destroy()))]) )){

}
} else {

}
}
}
def mislead(Stark,dog){
	( x )
}
def bar(){
	if(ROWS){
	if(-( -dog ) + destroy(y)){

};
	if(COLS){
	if(0.79){
	0.46 - COLS;
	if(-11){
	Hodor += 0.44;
	ROWS
};
	Jon += TABLE[( mislead(--1,Sansa * ---970.504 - COLS * ( TABLE[Stark][-COLS] ) + -21 / mislead() * Sansa / ( ( mislead(-1 / Jon,---0.23 - Jon) ) ),-36) )][( ROWS )]
}
}
};
	-( --foo(ROWS,-490.41) );
	x -= TABLE[-12][protect(( -1 ))]
}
var Arya = foo(mislead() - 0.66)
def betray(dog,dog){

}
def TABLE[( ROWS )][j] {
	Arya;
	x -= TABLE[TABLE[COLS][betray(( -1 ),( Hodor ))]][COLS]
}
assert ROWS : "One can not simply parse himself"
def betray(){
	if(32){

};
	-Sansa
}
var Arya = -( 0.83 * TABLE[-1][ROWS] - Ygritte - COLS * ( -ROWS ) )
def destroy(Stark,Arya){

}
var Stark = destroy()
var Stark = betray()
def TABLE[-Sansa][i] {

}
var dog = ( ROWS )
def mislead(Arya,dog){
	if(ROWS){
	--Jon
} else {

};
	Stark += ( protect(( TABLE[COLS][TABLE[TABLE[-( ( ( bar(COLS,TABLE[( TABLE[-y][( TABLE[--( -83 )][0.18] )] )][mislead()]) ) ) )][( -Ygritte )] * ROWS / ROWS][( ( Stark ) )]] )) )
}
def TABLE[( ( mislead(mislead(Stark,( bar() )),Sansa,-53) ) )][k] {
	destroy(( -0.14 ) * Arya,( -0.78 ) + -( --31 ),84);
	-350.82
}
def TABLE[--( -( ( ( protect() ) ) * COLS ) )][i] {
	x += Sansa
}
var Hodor = dog
assert ROWS : "What do we say to the Lord of Death?"
def foo(Hodor,x){
	y;
	if(( Hodor )){
	if(rule(--Stark,-TABLE[rule(-Arya,-1,foo(-( Stark ),-16))][COLS],--( destroy(Jon,dog / ( ( 0.9 ) ) + ROWS / rule()) ))){
	-( mislead(1,mislead(Jon,( ( Stark ) ),COLS + ROWS / Jon)) )
} else {
	if(COLS){
	( -COLS );
	-920.28;
	y
}
}
} else {

}
}
var x = ( -( Ygritte ) - ROWS )
var Ygritte = -1
var Stark = ( ROWS )
var Hodor = foo(y,( -920 ),( ROWS ))
def bar(Arya){
	x -= -destroy(ROWS,-( 23 ) + -41);
	destroy(32 * ( betray(COLS,dog) )) - Hodor;
	protect(-59 / ( -0.29 ),--( COLS - y ) - Arya - ---Jon * ROWS)
}
def TABLE[TABLE[( --0.89 )][-470.63]][k] {
	if(Jon){
	if(-COLS){
	Arya += rule(rule(protect(COLS,0.3),x,TABLE[dog][( protect(-TABLE[-1][bar(Stark)],betray(y,-0.46)) )]),ROWS)
} else {
	-6;
	if(--Hodor){
	Jon -= bar();
	dog /= COLS
} else {
	-77;
	Ygritte *= ( 74 * --0.94 * ( Jon ) * Sansa )
};
	Ygritte *= 0.58
}
}
}
def foo(y,Stark){
	dog += betray(bar(),Stark,rule(Ygritte,betray(( -98 )) + ( protect(dog / Jon * -COLS / betray(),-( COLS )) )))
}
def betray(dog){
	Sansa /= ROWS
}
assert ( x ) : "Nothing burns like the cold."
assert --0.58 : "Winter is coming"
assert ( bar() ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-71][j] {

}
def TABLE[-27][j] {
	if(Sansa){
	--( -ROWS );
	if(-0.62 * 720.3437){
	Sansa -= -31
} else {
	x += x
}
} else {
	if(1000.799 + bar(COLS,-( -ROWS ) - 80.4)){
	if(200.27){
	Ygritte *= foo(-40,COLS);
	-TABLE[( foo() )][foo(foo(( destroy(Jon,Hodor - y) )),mislead(( Arya / betray(( ROWS - 0.58 )) * dog ),ROWS,foo(x,( Arya ))))] + ( -COLS ) / TABLE[x][-ROWS]
} else {
	dog /= ROWS
}
}
}
}
var Ygritte = 0.3
def TABLE[Jon][k] {
	if(x){

} else {
	( ( ROWS / Ygritte ) * 1 );
	-320.338;
	Stark - -12 - ---bar(-50) - -( ( -58 ) ) * bar(( TABLE[( ( -Ygritte ) ) + dog][-( ( --1 ) )] ) + TABLE[680.1][( TABLE[Sansa][--bar(foo(destroy(1),TABLE[ROWS][-betray(ROWS,COLS)] / ( -TABLE[40.75 + 71][840.135] * destroy(bar(--0.38,( ( Jon ) + 1 ) + mislead() - protect(),( Jon ))) + destroy(betray(-ROWS),Ygritte,Jon) )),Hodor)] )],Stark * 1 + ROWS,460.5) - TABLE[TABLE[betray() / mislead(( 580.47 * ( mislead(( COLS )) ) ),-600.2)][0.12]][--1] / mislead(--( -0.08 ) / ROWS,x / ( 1 ),x - rule(ROWS)) - COLS
};
	-980.6
}
def destroy(){
	if(destroy(( ( -81 * 1 ) )) / ( ROWS - ROWS )){
	if(betray(( -y ),-foo(-y) - Arya)){
	if(Jon){
	rule(bar(Ygritte,45),( bar(-betray(ROWS,TABLE[( -50 )][( ( destroy(( TABLE[y][( ( ( ( betray(-Ygritte) ) - y ) ) )] ),mislead(0.43,Stark),( Stark )) * 24 ) ) * Arya],ROWS),ROWS,( -TABLE[COLS][protect(ROWS)] )) ))
} else {
	73
};
	Jon *= --Stark
};
	x *= Ygritte * y
};
	if(Hodor / Jon){
	-protect(dog,-( Ygritte - COLS * ( ( ( dog ) * Jon ) ) ));
	-1
} else {
	if(TABLE[-46][TABLE[ROWS][-9]] - ( betray(x,ROWS) )){
	x += TABLE[--86][-( y ) * 77]
}
};
	mislead()
}
def TABLE[ROWS][i] {

}
def betray(x,Arya){
	COLS;
	Jon
}
assert destroy(-50.4864) : "Winter is coming"
assert ( ( TABLE[Hodor][bar(bar(140.4616 + destroy(( ( ( destroy() * ( -protect(destroy(TABLE[Arya][Ygritte - ---( mislead(( --0.51 )) ) / 1],( 440.2 ))) ) ) + Jon ) ))),-1)] ) ) / Arya : "Nothing burns like the cold."
var Stark = ( 54 )
def TABLE[ROWS][k] {
	Sansa /= ( COLS );
	( foo(Ygritte,TABLE[( -( TABLE[1][Stark] ) )][( foo() )],--( Hodor )) );
	if(-Ygritte){
	if(( destroy(-230.06,ROWS) )){
	if(y){
	dog *= ROWS
} else {

}
}
}
}
var x = -51 + TABLE[Jon][Ygritte]
assert 200.0393 : "What do we say to the Lord of Death?"
def protect(){
	x /= TABLE[TABLE[( ( ( foo(betray(mislead(90.82),--0.26),-62) - ( dog ) ) / ROWS - rule(( rule(-COLS) ),betray(-64)) * destroy(betray(80.15 * ----Jon / 0.74 * -51 / -54,-0.83)) ) )][Jon]][---( --TABLE[bar(bar(( Jon ) - -1),ROWS,x)][-38] ) / -1];
	Jon /= ROWS
}
def destroy(Stark){
	( ( ( 66 ) - ( ( Jon ) ) ) );
	if(( COLS ) * mislead(-62 + -Hodor)){
	Jon -= -79;
	if(x){
	if(destroy(ROWS,dog)){
	Arya -= -Ygritte;
	-80.6;
	if(--13){
	if(-( ( ( COLS ) ) )){
	if(-0.49){

} else {
	Stark -= ---25;
	Sansa -= Ygritte
};
	Stark += Stark
}
}
} else {
	TABLE[foo(protect(( Jon )),( ( bar() ) ),Sansa)][TABLE[-( bar(-21 - destroy(foo()) - -1) ) / COLS][-( foo(-0.88,( Stark )) )]]
}
}
} else {
	ROWS / -ROWS;
	if(-0.25){
	Sansa *= TABLE[( Stark * -1 * ( --foo(98,610.8312) ) )][-0.36]
} else {
	if(protect(-0.54,dog)){
	Stark += rule(betray(-Sansa / 89),ROWS);
	if(ROWS){
	TABLE[-10.9][( COLS )];
	Ygritte /= betray(COLS)
} else {
	if(--Jon){
	( TABLE[-Ygritte][destroy()] );
	dog *= 0.16
};
	if(TABLE[x][-betray(dog,ROWS)]){
	if(( Jon - ( -rule(TABLE[( COLS )][TABLE[( 39 + COLS )][0.27] * -( -( bar(( destroy(betray(Arya,90) / --0.43 - y,( --bar(COLS) * -0.03 )) )) ) ) / -ROWS]) ) )){
	if(rule()){
	if(( y )){
	if(dog){
	Ygritte *= mislead(Jon,160.8)
};
	Ygritte /= 0.3
};
	y * protect(Stark,Stark) * ( mislead(-750.37) )
} else {
	if(( ROWS )){
	foo(COLS,TABLE[-Ygritte][bar(betray(),ROWS)],COLS);
	rule(( 0.5 ) + --0.05 - bar(( x ),ROWS) - 68)
}
};
	----bar(ROWS);
	if(mislead(Hodor)){
	if(ROWS){
	COLS;
	protect(Ygritte,-0.29)
};
	Sansa
}
} else {
	Ygritte /= ROWS
};
	COLS * ROWS
} else {
	Sansa /= 93
}
};
	Arya
};
	dog *= ( ( -430.819 ) );
	Jon -= -0.79
};
	Stark -= -790.068
}
}
def rule(x,Sansa){

}
def TABLE[( -26 )][j] {
	if(x){
	if(-bar(( --protect(COLS) )) - COLS + betray(foo(foo(),betray(140.79),( -Sansa - mislead(mislead(1),Ygritte,protect(TABLE[-TABLE[0.03][x]][protect(-270.74,33 + dog) - Ygritte],betray(protect(y,Stark),Jon))) )))){

}
};
	if(foo(rule(mislead(betray(-mislead(-protect())))),( x ))){
	Arya += 48;
	Arya += Stark
}
}
def bar(Hodor){
	Jon -= -0.54;
	dog *= -COLS + ( ( ( Arya ) ) ) / -1
}
def rule(Jon){
	( Stark ) - ( COLS );
	TABLE[TABLE[dog][Ygritte]][COLS]
}
def foo(Stark){
	if(-( 0.83 )){

};
	Sansa /= foo(14 * destroy() / protect(-destroy(( COLS ),( 0.12 ),y) - ( ( -0.81 ) ) * Stark,TABLE[COLS][1] / ROWS * --8))
}
def foo(){
	Hodor *= Arya;
	dog;
	if(27){
	-0.12;
	18
} else {
	-Arya;
	TABLE[0.72][x * betray(dog,Arya) / Arya]
}
}
assert -2 - Ygritte : "Fear cuts deeper than swords."
var Sansa = dog
def foo(x){
	if(ROWS){

}
}
assert COLS - bar(COLS - ( ROWS )) : "What do we say to the Lord of Death?"
assert -destroy(COLS) : "Nothing burns like the cold."
def destroy(){
	if(ROWS){
	Stark /= ( ROWS )
};
	if(( -480.04 )){
	Ygritte += 650.442 / 0.72;
	if(-Sansa){
	Arya;
	dog += betray(protect(),( Hodor ) - y - x * COLS)
} else {
	Arya += ( Ygritte / ( -protect(310.8,150.88) ) );
	Jon *= --ROWS / ( --46 ) + ROWS
}
}
}
var dog = -0.52
var Ygritte = --8 / ( ( ( ( -Arya ) ) ) )
def protect(Jon){
	Arya += ( -0.58 ) - ( COLS );
	Stark /= 0.61
}
assert Ygritte : "What do we say to the Lord of Death?"
def destroy(Hodor){
	Ygritte / destroy(bar(---x,betray(-TABLE[Hodor][( betray(( ( rule() ) )) )]) / 560.87,betray(Jon)),y)
}
assert -( ( -49 ) ) : "Nothing burns like the cold."
def TABLE[1 - ( TABLE[( ( destroy() ) )][-950.017] )][j] {
	Stark *= -( -0.74 );
	x /= Jon
}
assert -mislead(Hodor,rule()) - -Sansa + ROWS - -( ( dog ) ) : "Fear cuts deeper than swords."
var Jon = -0.38 / -Arya
var Jon = x
def bar(y){

}
def TABLE[-58][i] {
	if(Hodor){
	Ygritte -= ( ( COLS * TABLE[( COLS )][-mislead(( -( --COLS * -1 ) ) * -( 30 ),( Stark ),-x)] ) ) - COLS - ( -1 );
	x -= ( ROWS )
} else {
	Jon += dog * TABLE[-44][ROWS + -850.091 / rule(TABLE[-0.28][x],foo(0.32 - ( Ygritte ))) - ( rule(-0.17,Jon * -0.85,1) )];
	if(( -41 )){
	-Hodor
} else {
	Stark
}
}
}
assert ( ROWS ) : "Winter is coming"
def mislead(Stark){
	( -10.11 - Sansa );
	Stark
}
var Hodor = TABLE[0.04][TABLE[dog][0.42]]
var Ygritte = COLS
var Sansa = -0.19
var dog = ROWS
def rule(Stark){

}
def TABLE[rule(foo(( x )),-0.06)][k] {
	if(-betray(dog,betray(COLS))){
	y += protect(-0.05 * protect(( ( --( ROWS ) ) ),-77));
	y * ( betray(dog,bar(( Arya ),TABLE[--COLS - Hodor * COLS][( -( Stark ) / COLS )],( COLS ))) + ( protect(( -TABLE[Hodor][97 + --1] ),ROWS,TABLE[-Arya][foo(( 1 ),-11)]) / 24 + -550.6 ) + ( -Jon ) );
	-bar(-TABLE[Hodor][-Stark + -destroy()],Stark,mislead())
};
	-mislead(Stark,-Arya)
}
def TABLE[0.65][k] {
	COLS
}
def TABLE[( Hodor )][j] {
	Sansa -= betray(Ygritte);
	dog
}
assert Jon : "Fear cuts deeper than swords."
assert 1 : "Nothing burns like the cold."
def mislead(Sansa){
	if(-0.32){
	if(( foo(( 0.31 ),( Hodor )) )){
	if(( 0.76 )){
	TABLE[Sansa + Sansa][--( x ) * ROWS - -0.44];
	Sansa *= COLS - ( -Ygritte )
} else {
	0.34;
	-360.5343
};
	COLS;
	x -= ( ( mislead(-1,ROWS) ) )
};
	destroy()
} else {
	Ygritte *= ( protect(foo(y * protect(dog,-680.136,( destroy(( ( foo(dog,0.16) + ( -ROWS ) ) * --Arya / ( ( destroy(TABLE[( -72 )][x] - Sansa / ( ( ( ROWS ) ) ),( ( ( x / mislead() - Jon ) ) )) ) + Stark ) / bar() ),( 0.48 )) - --280.263 ) - ROWS),TABLE[ROWS + mislead(-170.06)][mislead(-1,destroy(( mislead(ROWS - destroy(ROWS),protect(TABLE[( protect(betray(TABLE[( ( betray(y) ) )][TABLE[-( ( Sansa ) ) * --1 - TABLE[0.96][--44]][Ygritte]],Hodor),bar(-( ( --( 94 ) ) / TABLE[( ( ROWS ) )][COLS] ),1,( rule() )),y) )][( Jon )],Hodor) + -80) ),Jon,( Arya )))])) );
	Stark /= -44 + betray() - 0.33
};
	( 260.1774 - ( Hodor ) * -0.71 );
	---0.66 * mislead(ROWS,betray(-destroy(COLS * foo(-490.293,TABLE[0.16][Stark] - TABLE[-51][1 / -0.39] + x) + -Jon + COLS)),Stark - ( ( Stark ) * TABLE[( -foo(destroy(ROWS)) / Arya )][( ( TABLE[Sansa][( COLS )] ) )] )) * ( ROWS )
}
def TABLE[57][k] {
	foo(destroy(mislead(),TABLE[170.38][ROWS]))
}
assert ( destroy(COLS + -600.09,-0.49 / Ygritte) ) : "Winter is coming"
assert 0.36 + betray(COLS) : "What do we say to the Lord of Death?"
var Ygritte = -Sansa * TABLE[-TABLE[5][-y * Stark]][-COLS]
def TABLE[150.2 - ( y ) + -bar(Ygritte,740.09)][j] {
	protect(rule(protect(destroy(bar(--COLS * 820.7,rule(dog,COLS,-( -69 ) * ( rule() )) + ( -foo(mislead(),-0.91) )),--( ( destroy() * foo(-0.96) * foo(-0.1) ) ),Sansa),TABLE[520.4][betray(670.881,dog,TABLE[ROWS][bar(COLS)] - -630.4) - ( TABLE[( TABLE[-0.06][-foo(( Jon )) * Hodor / TABLE[Hodor][150.7] / -protect()] )][Jon] )],( Jon ))),( ( mislead(--65 - ( TABLE[-Sansa][-x] )) ) ));
	Sansa += y
}
def bar(x,Arya){
	if(foo()){
	COLS;
	Hodor *= ( ( Ygritte ) )
};
	Hodor /= y;
	( rule(COLS) * -0.06 ) + -mislead(( Sansa )) + --( -Jon ) + rule()
}
var Stark = -Ygritte
assert ( -TABLE[100][x] ) + ( -380.881 - TABLE[-Ygritte][Sansa / 1] ) / ( TABLE[-610.78][dog] ) : "Fear cuts deeper than swords."
var Hodor = ( -30 )
def TABLE[bar()][i] {
	-97;
	( --42 );
	if(betray(600.88,0.48)){
	Arya *= COLS;
	if(-1){

} else {
	x /= ( 1 )
};
	if(( x + ( rule(Hodor) ) )){

}
} else {
	( 0.28 );
	( COLS );
	( -( betray(-rule(( ROWS + TABLE[foo()][( 0.57 )] ))) ) - COLS + Ygritte ) - Arya
}
}
def mislead(){
	0.23
}
assert 0.36 : "Nothing burns like the cold."
assert -0.04 : "Fear cuts deeper than swords."
def TABLE[--1 + ( -TABLE[-1][dog + protect(mislead(( 81 ),48))] ) + Arya][i] {

}
assert Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert mislead(-0.73) : "What do we say to the Lord of Death?"
def TABLE[0.24 * betray(betray(TABLE[Stark][foo(destroy(( --50 ) / ( 100 / Arya ),0.65))],foo(Arya,42 - betray(TABLE[TABLE[0.93][-Stark]][( TABLE[-protect(x,-0.91)][destroy(( mislead(foo(60.18,-0.52)) + TABLE[0.63][-1] ) / 0.16)] - betray(-79,TABLE[y / ROWS - rule(-( -ROWS ),( -ROWS ),---Hodor + mislead(betray(mislead(dog,COLS * Hodor + -0.93 / -ROWS)) / --mislead(0.98) / COLS + ROWS,0.35 + 390.1501 + -ROWS)) - COLS / dog / betray(rule(COLS,760.314),45 - -1) - betray(ROWS - y) * -1][bar(( ( 0.13 ) / --( ROWS ) - -TABLE[( mislead() )][Jon] ),betray(Hodor,6) - -COLS * ( ( rule(bar(( 92 ) / y,y)) ) ) / rule(--20,ROWS,( -57 )) / destroy(700.84,-Hodor * ROWS * Stark) * -foo(-0.62 + -( Arya ),ROWS,foo(rule(y,bar(),( Hodor )) - ( -1 ),mislead())) + ( ( 0.31 ) ))] / mislead(740.5507,Stark) - COLS + ( -510.9092 )) * ROWS - -0.5 )],COLS),destroy()),dog) / COLS * rule(x + mislead(--( bar(( ( -2 ) ),-x - betray(TABLE[24][-( Hodor )],( ( ( ( y ) ) ) ),( destroy(Hodor) )),-destroy(ROWS,1,-rule(foo(TABLE[Sansa / COLS][-COLS],foo()),ROWS))) / y / Jon + -( ( ( -( Stark + betray(( COLS ),destroy()) ) * 0.86 + ( ( TABLE[0.83][( -0.41 )] ) ) ) ) ) ),Arya) / ( COLS * foo() * ( mislead(COLS,19 / ( 32 )) ) * Ygritte ) + ( ( destroy(( ( Stark ) / ( --destroy() - -TABLE[0.45 / -1][0.09 / ( mislead(-0.78,( --2 ) - --1) )] / ROWS ) ),Stark,x) ) )))][k] {
	Ygritte -= ( ( Hodor / -95 ) )
}
var Arya = ( y )
def protect(Hodor){
	Hodor *= -Hodor;
	Sansa += ( ( ( 52 ) ) )
}
def TABLE[( foo() )][j] {
	( ( ( COLS ) ) + -Sansa ) * -75;
	if(7){
	if(( -50 )){
	( Sansa )
}
}
}
var Arya = mislead() / Sansa
var Jon = Sansa
def rule(Ygritte,Stark){
	Jon /= dog
}
assert -TABLE[( mislead(ROWS,-0.62) )][-TABLE[rule(ROWS)][-0.07]] : "Fear cuts deeper than swords."
def bar(Hodor){
	Jon /= TABLE[betray(Jon)][destroy(TABLE[Sansa][TABLE[( TABLE[( betray(( destroy(-Sansa) ),--1) )][0.27] )][TABLE[ROWS][TABLE[-TABLE[41][TABLE[-destroy(1)][( COLS )]]][ROWS]]]],-bar(-ROWS,Hodor))];
	Sansa += ( 1 );
	if(-380.811 + -730.218){
	Arya -= 0.7;
	dog /= -Hodor
}
}
var y = ROWS
assert 1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = ( 32 )
assert bar(-TABLE[-0.18][Stark]) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[ROWS * protect(ROWS)][i] {
	Stark /= -( ( ( 86 ) + ( ROWS ) * -200.12 ) );
	if(--mislead(TABLE[Stark][TABLE[( x + ROWS - 730.4565 )][--destroy(rule(TABLE[Arya][( --0.6 )],-0.1,mislead(-21,ROWS)),-( 0.48 ),1) * COLS + TABLE[ROWS][---( x )]]],( ( dog ) ))){
	Arya += -rule(( bar(-( ( -78 ) )) ),-x,( Sansa )) + Ygritte - ( ( --foo(27,( dog + TABLE[COLS][-ROWS] - ROWS - Stark + ROWS )) + 39 ) ) * 60
}
}
assert bar(( ( ( TABLE[( ( -0.14 ) )][dog] ) / -bar(foo(--( ( ( ROWS ) ) )),mislead(),y) - protect(( Jon ) + 1 * Jon) ) ),-700.14 + destroy(ROWS,( ( y ) ))) : "One can not simply parse himself"
def destroy(){
	Jon += COLS / -Jon;
	if(-rule(COLS,-68) / TABLE[TABLE[mislead(0.7,( Jon ),1)][-0.3]][-( Hodor )]){
	dog *= ( 0.3 );
	Stark -= ROWS;
	x /= --TABLE[Jon][protect()] - foo(mislead(protect(),-rule(1,rule(( mislead(( 0.12 )) ),( 78 ),( COLS + protect() )),--1),--bar(dog,-0.28)))
} else {
	dog += Ygritte
};
	-TABLE[( -72 )][COLS]
}
var Sansa = -rule(-TABLE[Ygritte][( ( bar(Stark * ( 360.324 ),TABLE[rule(( Stark ) / bar(protect(Stark,COLS),dog + ROWS,mislead()),-x)][rule(bar(-10,-( Hodor ) - Ygritte),ROWS)]) ) )],mislead(--( foo(foo()) ),Sansa) / ( ( ( -70.8089 - betray(x * Arya) + -41 / rule(rule(),-Ygritte) / -0.85 - COLS * 5 ) / rule(-foo(( foo(0.4,Stark * y) ))) ) )) * Sansa
assert Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(Arya,Hodor){

}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = y
def TABLE[-31][k] {
	Stark -= Sansa;
	if(Jon){
	Jon *= rule()
}
}
def bar(Hodor){
	Hodor *= -0.18;
	if(( COLS )){

}
}
def protect(x,x){
	if(( foo(( --0.28 ),ROWS) )){
	ROWS
} else {
	if(( x / Stark )){
	if(( Jon )){
	x += Arya
} else {
	( Jon ) / -foo() + COLS * ( dog ) * ( ( -580.58 ) );
	0.09
}
} else {
	if(-protect(( ( ( ( COLS ) ) - betray(-( y ),0.81,-bar(-12)) + -0.67 / foo(Arya,-1 / 0.37 - -foo(ROWS,0.25,TABLE[betray(1) + protect(-0.35,TABLE[--( -78 )][( 1 )])][71])) / -( Ygritte ) + 24 * --( ( -dog ) ) ) ),-( 0.16 ),rule())){
	if(-0.3 - bar(TABLE[COLS][-Sansa - foo(-830.676 - Stark,rule(44,( --dog ) * Sansa,ROWS))],-1) + Jon){
	if(( -78 ) * -1 - rule(-ROWS,TABLE[ROWS][protect(TABLE[y][( ROWS )])] + foo(COLS,Jon - ( ( Arya ) - foo() ))) - 86){
	-0.87 - -84;
	if(destroy(-Jon,160.042)){
	Jon
} else {
	if(y){
	if(TABLE[bar(-ROWS)][Stark] - -COLS){
	Ygritte *= ( ( COLS ) );
	( dog )
} else {

};
	Arya *= Stark
} else {
	Ygritte -= -5
}
};
	Ygritte /= Stark
};
	if(Stark / ( -0.91 ) * ( foo(Arya - COLS,x) - destroy(--dog) )){

} else {
	Sansa;
	Ygritte /= ( -0.29 )
};
	Ygritte /= 1
} else {
	if(-Arya){
	Stark -= TABLE[-1 / ( ( ( betray(--720.41) ) ) )][COLS] + ( bar() )
} else {

}
};
	ROWS / COLS
}
};
	Jon /= -640.727;
	x -= -( ( Jon ) )
}
}
var Arya = ( bar() )
def TABLE[COLS][j] {
	if(Stark){
	-0.37;
	-1;
	if(mislead()){

}
} else {

};
	Hodor += dog
}
def foo(dog,Stark,dog){

}
def foo(){
	if(58){

}
}
def TABLE[-( 94 )][j] {
	Arya += -7
}
assert -0.96 : "Winter is coming"
var Jon = -x
def destroy(Jon,Jon,Stark){
	-mislead(-Stark - ( -TABLE[Jon][( mislead() ) + -370.55 / TABLE[( 0.27 * foo(Ygritte,-0.009) )][-COLS]] ) - -rule(dog,betray(protect(-COLS * COLS * 90.36 - -26,betray(-Ygritte,-1) / 94 - ( -780.329 )),TABLE[( --580.8 ) / -22 + ( -99 )][-42])) - Sansa)
}
assert -1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert 6 / ( -60 ) : "One can not simply parse himself"
assert bar() : "Winter is coming"
var Arya = COLS
assert -63 : "Fear cuts deeper than swords."
def TABLE[-1 - -( Stark )][k] {

}
def TABLE[-960.48][k] {
	if(ROWS){
	y /= --( betray(470.2856) ) / -0.59
};
	if(-1){
	foo(( ROWS ),( ( -( -( y * y ) ) ) * Arya ))
} else {

};
	if(Jon * ( Jon )){
	0.69;
	Ygritte /= ( Stark * 1 )
}
}
assert ( x ) : "One can not simply parse himself"
def TABLE[( COLS - rule(( TABLE[foo(( -Sansa + ( betray(COLS * -68 / TABLE[rule(Stark,( 0.41 * Stark * ---43 )) / 5][betray(-destroy(rule(TABLE[-ROWS][( mislead(---0.31 / TABLE[TABLE[-560.515 * -( ---0.81 )][COLS]][x] + destroy(Sansa / -0.97,rule(( COLS ),( -0.85 )))) ) - COLS] * ( -Stark )) - y,( -protect(COLS * ROWS) )))] - COLS - ( -foo(COLS) ),foo(-1,--1)) ) ))][9] ) + protect(Hodor - TABLE[mislead(( ROWS ),Arya,( -( ROWS ) + COLS ))][bar(-0.41)],-TABLE[x][-0.9])) )][i] {
	dog += TABLE[ROWS][destroy(( x )) + --1 - -Hodor + ( ( ( --( -TABLE[-bar(Jon)][ROWS] ) ) ) )]
}
def TABLE[-( -( -( 0.53 ) + -0.63 ) )][i] {
	( TABLE[COLS][Ygritte] )
}
def TABLE[( -TABLE[TABLE[( --( -( -0.37 / bar(x,betray(Arya)) * ( COLS ) + betray(-58) ) + ( -Ygritte ) + ( rule(ROWS,280.808) ) ) + Jon - ( dog ) ) - ( Ygritte ) - foo() - destroy(-ROWS * ROWS,Hodor)][( bar(--92,-dog) )]][betray(-ROWS)] / Hodor )][j] {
	if(---COLS / ( ( Arya ) )){
	foo(bar(x,-0.76,-( dog )));
	if(1){
	( 940.3036 );
	x -= -0.19;
	if(( 0.32 )){
	betray(( Arya ) / -( -38 ) + Arya);
	if(foo(-1)){
	dog;
	if(( foo(ROWS) )){
	if(bar()){
	if(rule() - foo(621)){
	Hodor += ( ROWS )
}
}
} else {
	ROWS
}
} else {
	Arya -= destroy(TABLE[mislead(( mislead(-Hodor) * Hodor ))][-betray(TABLE[( protect(--ROWS - betray(ROWS,( destroy(rule(),-15,foo(( TABLE[Stark][( -Stark * -TABLE[COLS][( y )] * 34 )] ) / TABLE[ROWS][Sansa - COLS] - Arya) / COLS) )),-( -ROWS / destroy(COLS) - -COLS + COLS * 56 ) / 990.308,-100.829) )][betray(-0.98,mislead(--1,-Jon / ( Jon )))])],( 46 / Hodor ));
	COLS
};
	x += -( ( TABLE[-foo(----1)][dog] ) )
} else {
	x += TABLE[-1][x]
}
}
} else {
	Hodor += 880.6
};
	if(( Ygritte )){
	if(( protect(( -TABLE[-340.2129 / foo(mislead(),ROWS)][-Jon] ),730.1216) )){
	if(mislead()){
	protect(( -120.28 * bar(x) ));
	if(0.05){

};
	1 * COLS
} else {
	x;
	Ygritte *= -protect(-0.81 / ROWS,-( 0.85 ) + ( y - COLS ));
	Ygritte
};
	if(( Arya )){

} else {
	dog;
	Hodor + Ygritte
}
} else {
	rule(0.29,-bar(mislead(( ( ( -y / --Arya ) ) )),--Jon,-( 80.311 ))) + ROWS / mislead()
};
	if(ROWS){
	Sansa *= -mislead(( Arya ));
	Hodor += 0.59
} else {
	if(Jon){

};
	( TABLE[ROWS][( COLS )] )
}
} else {
	Ygritte /= -TABLE[foo(y,ROWS)][rule(( foo(-1,-TABLE[-18][80.7091] * ( TABLE[( -bar() )][ROWS] / 95 ) - Hodor) - -ROWS ) * Jon * ( TABLE[bar(bar(x),Ygritte)][ROWS] ),-TABLE[( Sansa )][-( 730.8244 )])] / -1;
	if(ROWS){

} else {
	if(-bar(( ( 0.14 ) ),COLS) * -11){

} else {
	Stark += Stark
}
}
}
}
def TABLE[-0.79][j] {
	if(ROWS){
	if(52 * -Hodor){
	COLS
};
	if(TABLE[-( -mislead(destroy(COLS,ROWS)) + -430.158 )][ROWS + TABLE[Ygritte][rule(TABLE[TABLE[mislead(-0.33)][Hodor]][-440.272]) - destroy()]]){
	( 0.97 ) * -Jon / Stark;
	if(TABLE[destroy(TABLE[-1][-0.66])][Jon] + foo(( TABLE[mislead(Arya,-1) + rule(-( -betray() ),( ( TABLE[( Ygritte )][( foo(COLS,ROWS,--0.91 + --TABLE[foo(Hodor) * dog][74] - --ROWS) )] * ( Hodor ) ) ))][-Sansa] * ROWS ),protect(0.78,rule(-TABLE[COLS][COLS]))) / x - ( protect(TABLE[( -COLS )][mislead(x) * -0.44],-COLS) )){
	-0.94
} else {
	Arya /= -0.94;
	if(TABLE[Stark][( ( 1 ) )]){
	if(x){
	ROWS;
	dog -= ( y )
} else {
	ROWS
}
} else {
	rule(protect(rule(COLS,TABLE[TABLE[( COLS * Sansa )][COLS]][foo(destroy(x))]),--y / 36),Hodor,-720.965);
	if(( foo() + --0.23 / 34 )){
	rule(ROWS,0.83,0.52);
	if(-( ( TABLE[( bar(Sansa * ( -14 ) * ( ( ( -( Ygritte ) ) ) ),--ROWS - ROWS,-betray()) ) * --destroy(betray(( Sansa )),-37) - bar(dog,COLS)][-Arya + Sansa] ) )){

} else {
	bar()
};
	if(1){
	if(55){
	if(1){
	y += -Hodor + COLS * ( betray(mislead(ROWS,Arya)) ) - bar(610,-bar(-1 + -0.67 * ( COLS - TABLE[-dog][ROWS] ),TABLE[Jon][COLS],dog) / ( -0.02 ) * TABLE[Arya][-Sansa]);
	0.78
} else {
	-destroy()
};
	COLS;
	Ygritte *= --bar(Sansa - ( ( mislead(-( TABLE[( COLS + foo(protect(foo(COLS + Sansa,y,Hodor),dog,rule(y))) )][COLS] )) ) / -0.3 ),18)
};
	if(( Hodor )){
	if(protect(y,Ygritte,betray(foo()))){
	if(TABLE[Ygritte][COLS]){
	if(-78){
	destroy(-TABLE[-TABLE[-( 0.37 )][-81]][protect(1)] * Jon);
	Hodor /= --rule(ROWS)
} else {
	-Sansa;
	ROWS;
	Ygritte += -ROWS
};
	dog /= ( mislead(-TABLE[Hodor + ( COLS )][( --Hodor )],1) );
	TABLE[( -22 - ( ROWS ) * TABLE[-mislead(( 0.44 ))][( 0.76 )] )][-y]
}
} else {
	y *= -( 40 );
	( 940.4854 )
}
}
}
} else {
	if(mislead(Ygritte)){
	if(( y )){
	x -= TABLE[-0.99][-destroy(mislead(-930.796,foo(rule(-( 0.12 ) + ROWS - ( -86 )),x),-430.579))] + COLS
}
} else {
	if(-( destroy(y,ROWS) )){
	dog
} else {
	if(( ( -21 ) )){
	Hodor *= ROWS;
	if(mislead(COLS,( 73 ))){

}
}
}
}
}
}
}
}
} else {
	-0.87;
	if(Hodor / ROWS){
	if(protect(Hodor)){
	( -7 )
} else {
	if(( -900.85 )){
	dog += ( betray(( -1 * y ),Sansa,( COLS )) );
	if(-0.22){
	-( ( ( 620.9 ) ) * ( ( ( mislead(-x / Hodor) ) ) ) * protect(Arya,Hodor,Sansa - ( 0.01 )) );
	if(-COLS){
	-Ygritte;
	-18;
	y -= -( -Ygritte )
}
} else {
	if(COLS){
	if(( ( ---betray(-ROWS) * ( bar() ) ) )){
	Arya -= -1;
	if(COLS){
	y
}
} else {
	betray(mislead(protect(( betray(x,Sansa) )),TABLE[-1][( betray(-( 72 )) )],( COLS )));
	Hodor -= protect();
	if(-1){
	if(-0.27){
	Arya /= y;
	if(mislead(( y - -( ROWS - Arya ) ),Hodor)){
	-1
} else {

};
	if(( -( bar(Arya,ROWS - ( COLS ),-Hodor) ) )){
	TABLE[-ROWS * mislead(21,rule(),mislead())][TABLE[0.7 - COLS][1]];
	y -= foo(protect());
	if(COLS * ( ( -0.37 ) )){
	y;
	if(Hodor){
	y *= bar(dog,( -79 / ( ROWS ) + -58 ),850.931)
} else {
	if(-ROWS / -25){

} else {
	if(( ( ROWS ) + mislead(TABLE[TABLE[bar(rule(COLS),Hodor * destroy(betray(Sansa),-490.333),TABLE[Jon + ( -( TABLE[Ygritte][betray(COLS,-0.35) - Jon] ) )][TABLE[-1][-TABLE[destroy(Arya) + ( -dog ) / --dog + Arya * ROWS][Jon * -290.14]]] / y - betray(Hodor - TABLE[-91][84] - TABLE[80][Sansa],Sansa))][-TABLE[-betray(-TABLE[-680.1][x],ROWS - ( TABLE[-y][Ygritte / ( COLS )] ))][TABLE[800.491][Hodor]]] + -destroy(Ygritte,Jon)][ROWS]) * mislead() )){
	mislead(betray(( ( x ) ),foo(COLS,( ROWS )),( bar(--Jon,protect(TABLE[-protect(bar(ROWS * Sansa,( -Arya ),rule(-bar(ROWS,--bar(Jon,---( ( -47 ) ) - COLS - Sansa))) - 0.09),dog,0.93) * bar(TABLE[( -900.9 )][y]) - -( COLS )][COLS - COLS]) * rule(( 7 ),dog + rule(x,y),( y ) - protect(( ROWS ),99) / ( ( ( -860.79 ) ) ))) ))) / -11 * ( ROWS )
} else {
	Stark *= 0.24;
	( destroy(foo(bar(destroy(),COLS)),( mislead() ) / bar(-0.35,Ygritte,rule()),0.43) )
};
	if(Ygritte + rule(-( ROWS ) - foo(-55,foo(( 40 ))),( -1 ) + TABLE[56][--22 / bar(ROWS,-75 / destroy(Stark),ROWS)],-0.52) / x * -COLS){
	if(mislead(foo(Jon,-1,protect()),--0.77)){
	( Arya )
} else {

};
	( ( Jon ) );
	if(Jon){
	-1
} else {
	-Ygritte;
	Hodor /= ( ( --58 - ( ( ( -97 ) ) ) ) )
}
}
};
	if(( bar(Arya - -mislead(COLS,--1)) )){
	Stark *= --43 / 75;
	destroy(mislead(x))
}
}
}
} else {
	ROWS / -0.93;
	ROWS
}
} else {
	if(COLS){

};
	y /= mislead()
};
	--Arya
} else {
	x /= -TABLE[COLS + mislead(11 * -protect(Jon) * destroy(TABLE[--1 - ( -y + -330.9 )][0.46 / Jon],ROWS),TABLE[rule(-TABLE[11][0.16],-0.61)][Ygritte])][bar()];
	COLS
}
};
	TABLE[-130.332][-78]
} else {

};
	if(-0.52){
	y -= Jon / y;
	Sansa /= ROWS;
	if(6){
	if(-0.93 + ROWS * ( ( y ) )){
	Ygritte /= TABLE[-destroy(( -dog ),x)][0.35] * rule(foo(TABLE[( -790.5 )][Hodor],( -( 1 ) ) - rule(dog)),( foo() ));
	COLS;
	if(-Arya){

}
} else {

};
	if(-Hodor){
	y *= COLS;
	Arya -= -12
}
} else {
	if(Sansa){

} else {
	x -= y - COLS;
	-betray(ROWS,1,( Stark )) / Arya;
	Arya /= -0.05
};
	if(ROWS + mislead(-foo(-Ygritte,mislead(53,---( -1 ) * dog)),0.59) - -y + -77){

} else {
	( TABLE[Ygritte][betray(Hodor)] )
}
}
}
};
	if(1){
	Stark -= rule();
	if(foo(-COLS,TABLE[Jon][Ygritte])){
	foo(TABLE[Ygritte][-0.36]);
	betray()
} else {
	if(Stark){
	Sansa;
	if(bar(ROWS,Stark,mislead(34,Hodor))){

}
} else {

};
	if(COLS){
	0.77
} else {

}
};
	if(( ( TABLE[( mislead() )][mislead(Ygritte,mislead(-1))] ) + y * Ygritte / ROWS + -( ( ROWS ) + destroy(rule()) ) - TABLE[( 70 )][TABLE[0.24][y]] * ( 0.13 ) )){
	--TABLE[( ROWS )][dog]
} else {
	if(62){
	if(0.26 + bar(-mislead(0.9),530.62)){
	Sansa;
	if(-( -33 ) * -50.36){

} else {
	dog /= -COLS + -460.7077;
	x += ROWS
}
} else {

};
	x -= Hodor - -1
}
}
}
} else {

}
};
	Sansa += TABLE[ROWS][-ROWS];
	-destroy(-rule(( Arya ),-bar(ROWS,( mislead() ))),y,COLS)
}
};
	if(COLS){
	if(( -rule(mislead(-COLS),foo(( ( ( Jon ) / y ) - dog ) * Ygritte,Sansa,bar(-COLS,betray(COLS) - ( TABLE[Stark][destroy()] ),COLS * x)),( betray(destroy(( ( ROWS ) + x )),( 1 )) ) / -COLS) )){
	if(Jon + COLS * Stark - Ygritte + ( COLS )){
	Arya -= Hodor;
	Sansa -= dog;
	Arya
} else {
	Stark *= ROWS
}
} else {
	Arya *= -y
};
	if(-0.27){
	if(Sansa * -destroy(25,( Jon ),-58)){

} else {
	TABLE[COLS][COLS];
	if(Hodor){
	1;
	dog += ( 400.326 )
} else {
	dog += ROWS
}
};
	-0.89 + ( -( rule(y,-0.05 / -47) ) ) - ( 740.5384 ) - ( TABLE[79][--10] )
}
}
}
def TABLE[TABLE[COLS][-ROWS]][j] {
	Arya += x / -0.8 - -0.23 * Stark;
	1
}
var Sansa = --ROWS - 200.3
assert ( -0.06 + -49 * bar(Sansa + Ygritte,-TABLE[Sansa][foo(COLS,Hodor) * foo() + ( Hodor )],-( -600.5 ) - ( mislead(( 75 ),-1,Sansa / x) )) + ( foo(0.01,Sansa) + destroy(1,( mislead(( rule(COLS) ),-12 + -Jon) ),protect(( Arya ))) ) + ROWS ) : "Nothing burns like the cold."
def TABLE[-rule(-930.9)][i] {
	if(( 0.77 )){
	-COLS;
	Stark += ( ( destroy(-( --0.99 + COLS ),TABLE[TABLE[-Ygritte][( destroy(foo(mislead(29),bar()) / Hodor,Hodor / ( ( 610.984 ) )) )] / 1][Ygritte]) ) ) / x;
	Arya *= -foo(ROWS,x) / -Sansa
};
	mislead(Jon)
}
assert 0.83 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Arya,Sansa){

}
def betray(){
	if(( ROWS )){
	if(0){
	Hodor /= ( Ygritte ) / 0.99 * TABLE[---( -ROWS * TABLE[1][destroy(-x - mislead(-15) / Hodor + -bar(-foo(( x ),ROWS,dog) * ROWS - 0.52,TABLE[( Ygritte )][ROWS] - -protect(-0.1,-71)) * ROWS / -0.49,-x / 1)] )][-Jon * mislead(COLS,ROWS)];
	( betray() - Stark );
	dog += --0.61
} else {
	if(--0.87){
	if(mislead()){
	TABLE[Stark][-COLS]
} else {
	if(Stark){
	Hodor /= Stark;
	--1
};
	--74
};
	Hodor -= -( -ROWS )
} else {
	if(-ROWS){
	28 / x;
	-0.66
} else {
	Jon *= COLS;
	( -0.39 )
}
};
	if(Sansa){
	-20
} else {
	Arya += Jon
}
};
	Ygritte -= TABLE[-( -Ygritte )][COLS] / ( ROWS * destroy(destroy(),( Arya )) * -19 )
} else {
	Ygritte -= TABLE[TABLE[Stark][ROWS]][42]
}
}
def bar(Stark){
	if(Ygritte){
	Jon += TABLE[( ( 0.42 ) )][COLS]
}
}
def betray(Stark){

}
def betray(Arya,y){
	dog -= mislead(( -91 ),21)
}
var Sansa = ( --400.447 )
def rule(x){
	--Stark;
	if(Sansa){
	if(ROWS - protect(Ygritte,-COLS)){
	87;
	if(ROWS){
	foo(-( rule(Stark,0.02) ));
	dog += ( ( Ygritte ) ) + -( bar() ) / mislead() - ( betray() ) / ( ( foo(rule(-0.58,Hodor,--0.73),( destroy(protect(-Sansa,( -0.21 * ROWS ),protect(Stark,( -( TABLE[rule()][98 + protect()] ) ),Jon))) + -1 )) ) ) * ( ( ( ( COLS ) ) ) ) + betray(ROWS / ---x) - protect(Sansa)
} else {
	1;
	Sansa -= x
}
};
	( --bar(betray() / TABLE[--95][-100] * -5,-120.944) )
} else {
	if(62 * -0.04){
	Hodor
};
	if(-ROWS){
	TABLE[( mislead(( Sansa )) )][dog]
}
}
}
def TABLE[rule(Arya,-0.13,Arya)][j] {
	if(( protect(-TABLE[-bar(bar(-( --( betray(( --COLS * 22 ),( -76 ),--0.35) ) / COLS - 880.44 - -TABLE[mislead(ROWS,protect(( betray() ),( dog )))][-0.03] ),COLS,( bar() ) * 0.26) + 550.96)][-60.39],Sansa,TABLE[ROWS][-0.71]) - mislead(( y / TABLE[--1][Arya / ROWS] + -( 76 ) / Ygritte ),foo(COLS)) )){
	( x )
};
	Stark *= ( ( ( bar(Arya - -1,( TABLE[( protect(x,( -TABLE[46][mislead(TABLE[mislead(-51,( ( 1 ) + rule(foo(( ( ROWS ) ) + protect(0.08,foo()) + COLS,COLS - -x,-( protect(( x )) ) / -0.16),0.21) )) - x - destroy(x - TABLE[TABLE[-47][( ( 950.8917 ) )]][Ygritte],-( -( betray(-1,1 / dog) ) ))][--TABLE[ROWS][protect(TABLE[destroy() / -foo(( -48 * 610.8387 ),50,( -11 ))][foo(-Ygritte,ROWS,-Ygritte)],x)]],rule(( ( 1 ) + 53 / mislead(y,TABLE[( 371 )][( mislead() / ( betray(COLS,( ( destroy(( -( ( COLS ) ) ),-68) ) )) / -ROWS / protect(( TABLE[-1][COLS / Hodor] )) ) - ( rule(--Arya,-0.94) ) )]) ),mislead(--90) / Sansa / -dog + dog * ( ROWS ) + -( mislead(Ygritte) ) * bar(COLS,rule(( ROWS ),y,COLS))))] / -COLS + TABLE[TABLE[COLS][betray(rule(),--16) - -80.4459 * ( -0.7 )]][( -49 )] )) )][TABLE[rule(--430.771 * Ygritte / ( protect(Ygritte) ) + ( -TABLE[24][-ROWS] ) * mislead(y),( COLS ))][-810.64 / y]] / TABLE[betray(COLS,-ROWS) + 0.56 / ROWS][destroy(0.69,( TABLE[mislead(-0.32,( ROWS ))][( y )] ),-630.013 - ( ( ( -820.71 ) ) )) - 52] ),--Sansa + ( ( -1 * Sansa ) ) * ( -1 ) * bar(( ( mislead(COLS) / -1 ) ),destroy(0.31,foo(ROWS,COLS,COLS)),( -rule(COLS) )) * 0.78 + Hodor + Hodor - ( Sansa )) - protect(Ygritte,22,COLS / 0.23) ) ) ) * ROWS;
	if(destroy(mislead())){
	ROWS;
	( Ygritte )
} else {
	x /= destroy(TABLE[-Stark * COLS / COLS * 80.5192][Hodor],22,COLS);
	dog -= TABLE[49 * 1 / bar(( COLS ),ROWS,mislead(0.66,Stark,0.91))][ROWS]
}
}
def TABLE[TABLE[foo(-0.35)][COLS]][k] {
	if(bar(( dog ))){
	Stark -= 270.059;
	dog /= ROWS
};
	TABLE[protect(rule(Stark,protect(-( ( -dog ) ))),mislead(Jon))][( -0.5 * ( COLS + ROWS ) )]
}
assert Jon : "What do we say to the Lord of Death?"
assert ROWS : "Winter is coming"
def TABLE[-TABLE[TABLE[Hodor][( foo(Ygritte,Arya - 92) )]][Ygritte]][i] {
	if(( COLS )){
	Sansa /= 0.77 + ( Ygritte )
} else {
	Sansa *= -0.29
};
	-mislead(--120.2117)
}
def TABLE[-510.4][j] {
	if(-destroy(( ( --( foo(( COLS ),foo(( ROWS ))) ) ) ),-COLS,( -0.87 ))){
	x /= ( COLS );
	ROWS
} else {
	if(810.5582){

};
	Hodor += rule(Arya)
};
	Ygritte /= 0.75
}
assert ( foo(--( Arya ),-mislead(--COLS,( --0.56 ),dog)) ) : "Nothing burns like the cold."
assert x : "Winter is coming"
var Sansa = Hodor
def TABLE[ROWS][k] {
	Sansa - ROWS;
	Sansa /= ( ---32 / ( -Ygritte ) );
	if(x){
	--84;
	1 + -0.47
}
}
def TABLE[( ( mislead(( -0.91 ) + -0.38 / --bar(( ( -foo(ROWS,( ( -0.6 ) )) ) ),COLS) / --TABLE[TABLE[( ROWS + ROWS )][( -60 )]][-48],-( -0.35 ),( -1 * 41 + Sansa / 40 + -35 )) * -34 ) )][k] {
	Hodor += betray();
	if(-84){
	Arya -= Jon;
	Ygritte -= COLS
};
	0.63
}
def TABLE[foo(-Sansa * ( -33 ),( betray(destroy(Jon,Jon,-( -Jon * 840.8793 ))) ))][j] {
	if(( ( TABLE[( ( y ) )][Stark] * destroy(-8 + protect(-( dog - -1 ))) ) )){
	820.3;
	if(x){
	COLS + ( ( 430 ) - COLS * -870.2 );
	( -27 + COLS + 0.62 )
}
};
	Sansa -= ( Arya );
	-Stark
}
def TABLE[0.92][i] {
	-x
}
var Sansa = 59 * 70
def protect(Ygritte,x,Ygritte){

}
def rule(Jon,Arya){
	( -51 );
	rule(bar(COLS,destroy(ROWS,COLS,-690.774)),protect(Hodor,1));
	if(-bar(COLS)){
	dog
}
}
def mislead(Stark,Sansa){
	if(COLS - -Hodor){
	if(-0.02){

};
	y -= protect(-0.13) + ( ( -510.8 ) )
};
	y /= COLS
}
var Sansa = -1
def TABLE[-92][k] {
	-( betray(COLS,Jon) );
	if(---( -30.6 )){
	if(ROWS){
	y += 4;
	bar(protect(foo(bar(( ( 86 ) ),-rule(COLS,--x)) - mislead(-70) / -( --62 / bar(-1,-( -320.68 )) ) - -y,bar(-1)),Arya,37),-protect(( destroy(Arya) * ( rule(foo(-71,protect(190.299)) - foo(Ygritte),( ROWS ),-1) ) )))
}
}
}
def betray(){
	if(betray(( protect(( betray(-1,( 370.93 ),55) )) ))){
	--1 - Ygritte * COLS + -1
}
}
def TABLE[COLS][j] {
	( COLS );
	Stark *= protect(Stark)
}
def rule(y,Sansa,Stark){

}
var x = --0.01
def TABLE[Stark][j] {
	Hodor;
	if(y){
	( -( --20.157 ) * dog )
}
}
def TABLE[rule(0.24 * ( -x * -( ROWS ) ))][j] {
	Jon /= COLS - -480.93
}
assert -0.22 * TABLE[( dog )][-Arya] : "One can not simply parse himself"
assert Sansa - Sansa : "Winter is coming"
var Jon = -( -dog )
def TABLE[( Sansa )][k] {
	( Sansa ) - ---360.034 + x
}
assert rule() : "What do we say to the Lord of Death?"
def mislead(Arya,Jon){
	--71;
	dog -= TABLE[dog][Ygritte];
	if(( ( protect(TABLE[Ygritte][foo(1) / 50.3637]) ) )){
	Hodor -= 1;
	if(ROWS * -0.86){
	if(Jon){
	1;
	---0.85;
	if(--1){
	if(-( ( ROWS ) )){
	Jon;
	y *= ( -0.95 * 270.434 ) / foo(( -foo(0.95) ),-COLS / ( bar(ROWS) ) + dog)
};
	bar(Stark,bar());
	if(destroy()){
	Jon += COLS;
	if(-6){
	Stark *= foo(( y ))
} else {
	Jon -= ( dog );
	if(-94 * betray(-1 - 930.683 / y,-0.15,25) / bar(-92) - 0.25){
	Jon += bar(rule(-1),-0.74);
	--ROWS - -0.02
} else {
	-0.02
}
}
}
}
};
	if(bar(COLS + rule(Jon,Stark,-980.6876))){

} else {
	Stark
}
}
}
}
var Jon = ROWS
var dog = TABLE[foo(mislead(bar(x),Jon,-76),destroy(ROWS / Arya,rule(ROWS)))][( Stark ) * -0.77]
var dog = Sansa
var x = ( --ROWS / x + mislead(Ygritte,bar(--89 + -39),-77) + ( dog ) )
var Ygritte = ( 99 )
def bar(Stark,Jon){
	Ygritte -= --dog + rule(( ROWS ));
	bar() + ROWS + ( ( Sansa ) + ROWS / Stark ) / 29;
	dog -= Arya
}
def TABLE[rule()][i] {
	( COLS )
}
assert dog : "Nothing burns like the cold."
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = 53
def TABLE[Sansa][i] {
	Arya
}
def TABLE[-Jon][i] {
	if(( -0 )){

}
}
assert ( -Jon ) : "What do we say to the Lord of Death?"
var x = ( ( y ) * Hodor )
var Ygritte = ---60
def TABLE[ROWS][i] {
	if(foo(( ROWS ))){

} else {
	9;
	( Ygritte )
};
	( 1 ) + Stark
}
var Ygritte = ( ( -COLS ) )
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = 37
def bar(Jon){
	if(-mislead(ROWS)){
	if(protect(Arya,protect(rule(-protect(mislead(dog),foo(Hodor)),betray(Stark,-COLS * ROWS - -ROWS / TABLE[0.98][destroy(ROWS,foo(COLS - ( 190.6 ) + ( ( ROWS * mislead(-protect(mislead(Arya,Sansa + --ROWS),Ygritte - COLS / ( TABLE[( ---0.32 )][mislead(( rule(destroy(-42,-370.164),-mislead()) ),370.711)] ),COLS) - -1) / destroy() - -79 - x ) * destroy(--1) ),-COLS * Jon))],( 1 * rule() )) * ( bar(foo(0.35 * -Jon),x) )),Hodor,( ( -y ) ) / COLS) - ROWS)){
	Stark /= betray(Sansa,-mislead(Stark,-540.09,Ygritte) / Sansa)
} else {

}
} else {
	ROWS;
	Arya /= mislead(COLS,bar(betray(32,69,Arya) - 0.36,foo(-ROWS)),--protect(Sansa,Sansa));
	if(-foo()){
	dog /= COLS;
	rule() * betray(COLS,Sansa) - ROWS
} else {
	( rule(betray(-85)) );
	mislead(foo(-ROWS) - Jon,COLS)
}
}
}
def TABLE[betray()][j] {
	Hodor += -Ygritte * -0.34;
	COLS
}
assert 35 : "Nothing burns like the cold."
var y = ---bar(ROWS,destroy(0.18) + -Arya * ( destroy(( destroy(rule(),ROWS) )) ) * x,-bar()) / bar(Arya * --1,mislead(TABLE[TABLE[( Ygritte )][ROWS] - rule(( 77 + -0.85 ),0.72)][Hodor]) - TABLE[-TABLE[-33][-70]][destroy(-betray())]) - -23
def mislead(Sansa,Hodor,Arya){
	x -= -58
}
assert Ygritte : "Winter is coming"
assert destroy(betray(( y )),( Jon )) * -foo(29,COLS,( ROWS ) * -betray(98,---COLS,protect(rule(betray() / Sansa / rule(Stark) + COLS) - ( ( 44 ) / -( ( foo(ROWS) ) ) ) / y + betray(( mislead() ))))) : "One can not simply parse himself"
var Hodor = foo(( COLS ))
var y = ( ( -34 / ( x ) ) )
def betray(Hodor){

}
var Hodor = 88
assert ROWS : "Fear cuts deeper than swords."
def mislead(Ygritte){
	if(0.17){
	Jon /= Hodor
}
}
var x = TABLE[( ROWS + protect(ROWS) )][( Arya )]
def betray(Jon,Hodor,Hodor){
	Jon += protect(Arya,-Arya)
}
def TABLE[( Ygritte )][k] {
	if(y){
	Jon
};
	( ROWS );
	Sansa /= ( COLS )
}
def destroy(y,y){
	dog
}
def TABLE[-0.98 / -rule(-x) / -( bar(foo(COLS,foo(COLS,0.12),mislead(ROWS)),---x) )][j] {
	if(ROWS){
	Arya += -0.14 - dog;
	if(destroy()){

} else {
	Stark /= foo(foo(--Sansa + foo() * ( COLS ) / TABLE[bar(COLS,-0.98)][( bar() )] * Ygritte,Hodor),Stark + Hodor,( ROWS ));
	TABLE[x - ( x )][destroy(protect(foo(destroy(),protect(rule()))),destroy(-0.82,betray(( Ygritte ) / -COLS,betray(TABLE[TABLE[-rule(( TABLE[( foo(( 7 + TABLE[ROWS][ROWS] / -Stark ),protect(Ygritte)) ) * -95][ROWS] ),x) / y][rule(destroy(( -500.08 ) + COLS / TABLE[--0.09][81] / ROWS + betray() / Hodor,( -98 - ( betray(rule(( ROWS ),1),x) ) ) + ROWS,x),( ( COLS ) - ( mislead() / COLS ) ) * Ygritte) / bar(0.61)]][0.14]))),y) / 94 * COLS]
}
};
	protect(-630.2,x)
}
def betray(){
	if(ROWS){
	if(Hodor){
	Arya -= ( TABLE[-COLS][-ROWS] * bar(dog,COLS) * -790.598 );
	if(x){

} else {
	if(97){
	if(COLS / -0.94 * ( 0.84 ) / ROWS){
	if(protect(( TABLE[foo() / ( protect(-( -betray(betray(TABLE[-( -TABLE[Sansa][( -Arya ) / 89] )][-3],-bar() * ( -( rule() ) )) + -ROWS + ROWS) + 0.18 ) / -COLS) ) * ( TABLE[( -530.274 )][COLS] )][mislead(foo(( ( -54 ) ),TABLE[-1][( Arya )] * Sansa),( ( y ) ))] ))){
	Stark /= Stark
} else {
	if(TABLE[protect(-betray(COLS) - -0.07)][( --1 )]){
	dog;
	protect(protect(Hodor),COLS);
	y += COLS
} else {
	if(COLS){
	if(1){

};
	Stark -= Hodor
};
	if(( COLS ) - 1 - ( TABLE[59][mislead(( betray(--( ( TABLE[Ygritte][ROWS] ) ),COLS) ))] ) - ---570.6){
	Ygritte *= COLS - -mislead(TABLE[-mislead(-foo(-1),-mislead(-ROWS,( ( 0.74 ) )),-0.41) - -18 / ROWS + -destroy(bar(COLS,ROWS))][-0.26] + dog)
}
};
	if(( ROWS / rule(TABLE[17][bar(-0.53)]) - y - ROWS )){
	Stark *= TABLE[destroy(y,betray(mislead(x,-0.79),x / TABLE[COLS][-TABLE[82][x]],ROWS),-0.09)][( TABLE[( --38 )][-( ( ROWS ) + Jon )] )];
	Hodor /= 230.94
}
}
} else {
	Jon *= -( Sansa );
	( ( destroy() ) )
}
}
}
};
	56
} else {
	TABLE[-COLS][Jon]
}
}
def TABLE[Stark][j] {
	-Sansa
}
var Stark = x
def TABLE[COLS][k] {

}
var Arya = -( 0.58 )
def TABLE[1][k] {
	Ygritte -= ROWS
}
def destroy(Jon){
	y += 431 - ( COLS )
}
assert 100.683 : "Fear cuts deeper than swords."
var Arya = TABLE[x][Jon]
def betray(Ygritte){

}
assert x : "What do we say to the Lord of Death?"
assert -310.58 - ( COLS ) : "One can not simply parse himself"
def TABLE[( -0.57 )][k] {

}
def rule(Jon,Stark){
	if(( -Arya * --0.73 / x - y ) - -bar(foo(-destroy(60.641,ROWS) + -COLS,-350.846) + dog / mislead(( dog )) + -1 / -0.49 + ( ROWS ),TABLE[destroy(-dog,--TABLE[( TABLE[mislead(( TABLE[y][protect(-1,TABLE[Ygritte][ROWS],betray(bar(-( COLS ) - ROWS),( rule(foo(( ( ROWS ) )) * 730.2 + Stark,( Stark )) ),-0.37)) * Sansa] )) - ( 31 )][dog] ) / destroy(destroy(Jon,-59),290.608)][( -ROWS ) * ( COLS )],COLS)][TABLE[( -( Arya ) )][Stark]])){
	x /= COLS
};
	if(( -COLS - Jon / TABLE[--86][1] + -0.97 )){
	Stark /= Jon - -1 * ( foo() );
	dog /= mislead(x * COLS / 8)
} else {
	destroy();
	Ygritte
}
}
assert protect() : "Nothing burns like the cold."
def rule(x){

}
assert ( COLS ) : "Nothing burns like the cold."
assert TABLE[( foo(0.92) )][-0.96] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = protect(--72)
def TABLE[x / x][k] {
	if(( 50 ) + ROWS){
	--ROWS + ROWS + ( TABLE[-TABLE[( mislead(( -280.49 ) - 1,mislead(TABLE[ROWS][destroy(Jon,( -TABLE[destroy(TABLE[Ygritte][TABLE[-rule(COLS,ROWS,Sansa / Arya)][mislead(( rule() ),Sansa)]])][Hodor * foo()] ) + rule(-660.156 * -Ygritte,-bar(TABLE[-Hodor * --( rule(-0.56,-0.6) - ( -Jon ) ) * --protect(protect(Arya))][rule(TABLE[( mislead() )][0.15])],-54)),0.48) - -0.15],Ygritte,Stark)) )][Sansa]][-destroy(-ROWS / COLS * ( ( COLS ) + -betray(0.94 * ( ---0.84 ),--dog) + ROWS ) / COLS)] ) / TABLE[-0.45][COLS] + rule(--dog) / ROWS
} else {
	dog -= Stark;
	if(Arya){
	( ( y ) / ( ( -1 ) ) );
	y *= ( TABLE[destroy(y,-( COLS ) * ( ( -0.21 ) ) + Arya - ( ( Jon ) ),( Sansa ))][( -130.4 * ( ( 320.2 ) ) )] );
	if(COLS){

} else {
	if(TABLE[--Hodor][10.77]){
	Stark *= 0.72;
	if(( -45 )){
	Hodor += mislead(-( TABLE[( 67 )][x] ))
} else {
	Stark *= 69;
	( -TABLE[COLS][-Ygritte + Ygritte] ) * foo(betray());
	Stark /= Stark
};
	if(rule(dog) * 0.92){

}
}
}
}
}
}
assert -990.87 * -ROWS : "One can not simply parse himself"
def TABLE[protect(-170.8482,bar(-0.6 * dog,( ROWS )))][k] {

}
def TABLE[ROWS + ---0.86][j] {
	if(Hodor){

}
}
def TABLE[Jon][k] {
	if(( ROWS )){
	if(-bar(mislead(mislead(rule(),Stark / --Stark) * bar(( TABLE[-Arya + dog][-Sansa] ),1,-0.18),-34,TABLE[--110.291][750.54]),TABLE[( --0.28 )][TABLE[foo(TABLE[TABLE[x][( -Hodor ) * x * betray(( foo(-0.67) ) * Hodor * bar(protect(),dog) / COLS,ROWS,x)]][-destroy(TABLE[protect(COLS)][-48],ROWS,Arya / x)])][TABLE[betray(--0.06)][( 0.32 )] - COLS]],Ygritte) / dog){
	rule(( Stark ) / ROWS)
};
	if(( ( ( Stark ) ) )){
	-1 - 80
} else {
	if(1){
	Hodor *= -0.48
};
	-0.98;
	if(Jon){
	Ygritte += foo(mislead(-y,-0.67),-47)
}
};
	Jon
}
}
def TABLE[dog + TABLE[COLS][TABLE[-Ygritte][-65]]][i] {
	Sansa *= dog
}
def TABLE[( 680.3 * ROWS - Arya )][i] {
	-3 * ( ( COLS ) );
	( TABLE[-x][-destroy()] )
}
def TABLE[y][i] {
	dog /= ROWS;
	if(-y){
	if(TABLE[y][destroy()]){
	dog -= bar(Ygritte)
};
	if(-860.52){
	Sansa += TABLE[ROWS][TABLE[COLS][-TABLE[dog][bar(rule(-0.15,0.97))] - ROWS]] * ( ROWS )
};
	-mislead(--ROWS,--( foo(( foo(mislead(Arya,-( -TABLE[-ROWS][990.4651] ),( 34 )) - TABLE[COLS][-1]) ),Sansa,ROWS) ) / ( -y ))
} else {
	-foo()
}
}
var Stark = -5
var Arya = protect(ROWS,-ROWS)
def betray(y,Ygritte){

}
assert dog : "What do we say to the Lord of Death?"
var y = bar(mislead(Jon,foo(betray(),6 / ROWS / ( mislead(0.29 - bar(TABLE[-( TABLE[y][-73] )][COLS]),( -530.5 ) * bar(protect(---90 + ( destroy(( ( betray(-Arya / 1,TABLE[ROWS][( bar(1,TABLE[( ( TABLE[-76][( foo(( -COLS )) )] ) )][betray(ROWS) + foo(protect(),-330.79,-Sansa) - 1],-y) )],( TABLE[TABLE[( --1 )][-mislead(( 0.09 ) * 0.82,0.33 + protect(-0.27,ROWS,COLS) * -Hodor - betray(foo(( ( ( -0.03 / ( -0.53 ) / -0.43 ) ) ))))]][rule()] * TABLE[-( TABLE[COLS][COLS] ) - --foo(( ( TABLE[protect(ROWS,( destroy(( -( betray() ) )) ))][ROWS] ) ) - protect(ROWS - foo(dog + -( ---Ygritte ) * 0.65 * -mislead(y) + ( ( -0.52 ) )),ROWS),Stark)][--ROWS] )) ) ),COLS,( --85 + 0.19 * ( x / -20 - -0.91 ) )) ) - -destroy() - -84 - 1),64) + -0.14) )),( -1 )),destroy(-( destroy(Stark,TABLE[protect(COLS)][betray(Sansa,Stark,---COLS)] - protect(COLS)) ),dog) / -ROWS)
def TABLE[( ROWS / ( Stark ) )][i] {
	if(( ( y ) )){
	--( ( -0.42 ) ) + -COLS - ( --1000.4 );
	Jon -= dog * betray(x,ROWS,Sansa)
} else {
	-93;
	if(TABLE[( --12 - ROWS )][betray()] / Jon){
	if(ROWS){
	Hodor -= Stark;
	mislead(TABLE[( -0.33 )][ROWS] * ( ( ( -12 ) ) ),betray(bar(-ROWS)));
	x /= foo(Sansa)
} else {
	-9;
	y -= -1
};
	y
} else {
	if(0.69){
	97;
	if(( destroy() )){
	COLS;
	if(COLS){
	if(-0.04){
	if(-53 + y){
	foo(( ( TABLE[-7 - COLS][ROWS] ) ))
}
} else {
	if(Hodor){
	TABLE[( ( ( ( ( -Jon * -24 ) + dog - TABLE[dog][( mislead() ) / ( --( ( rule(260.3) ) * -92 ) * Sansa - -ROWS - TABLE[-mislead(TABLE[( ( Ygritte ) ) - TABLE[-Jon][destroy(-COLS + protect(830.169),-0.27)]][ROWS],( mislead(( -( -23 ) ),protect()) ))][Hodor] )] ) ) ) )][Stark]
} else {

};
	if(rule(( bar() )) / foo(rule(Arya * betray(COLS),TABLE[--0.25][( -Arya )]),bar() + bar(destroy(-290.4 * TABLE[bar() + -foo(Sansa,( ( -32 ) )) * 0.15][TABLE[( 1 )][-320.696]])))){
	y *= protect();
	betray(Sansa)
};
	destroy(( -0.41 / betray(0.89) ) - -58,Arya + -Arya,Jon)
};
	dog -= -12
}
}
} else {
	( ROWS + ( betray(-40.99) ) / protect() );
	Sansa += ( bar(( -Sansa / 0.42 ) / destroy()) )
}
}
};
	Arya /= foo()
}
var Hodor = ROWS
assert 64 : "Nothing burns like the cold."
assert Jon : "What do we say to the Lord of Death?"
var dog = 1
assert -y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert 0.52 : "One can not simply parse himself"
def mislead(Ygritte,Sansa){

}
assert 0.61 : "Nothing burns like the cold."
def rule(Jon){
	if(0.17){
	x /= ( ( -( -betray(-0.22,--( 260.38 ) * Jon) * --ROWS + --y ) ) );
	Stark /= -1 - -COLS;
	x /= --66 / --77
}
}
var Ygritte = 50.2025
def TABLE[Ygritte][i] {
	dog -= protect(rule(betray(TABLE[x][TABLE[-0.3 + dog][-( bar(foo(1,( betray(-( COLS ),rule(( ( ( -13 ) ) ),( 69 )) * ( 0.45 ),ROWS) )),y) - Sansa )]],89)))
}
var dog = ROWS
def TABLE[Arya + -foo(ROWS,-88)][j] {
	ROWS;
	Hodor /= Jon
}
def TABLE[-COLS][k] {

}
def TABLE[-mislead(-0.93)][i] {
	if(destroy(-1)){

} else {
	bar(---85 + foo(TABLE[-Hodor][Ygritte + ROWS]),mislead(Jon,Stark,destroy(Sansa))) + ( -44 );
	Hodor -= ( ( ( mislead(destroy(-Jon,ROWS) / protect(( COLS ),-bar(destroy(Arya,( ( ( TABLE[( ( destroy(0.5,-Hodor - ( Sansa ) / 41,240.138) * -( TABLE[ROWS][ROWS] ) ) )][Sansa] + TABLE[--( -1 )][( protect(mislead(-( ( -1 ) ) * --ROWS * destroy() + COLS / -bar(),TABLE[betray(Ygritte)][-31]) - TABLE[Jon][TABLE[-ROWS][ROWS]],-betray(( -rule() ))) )] ) ) )),COLS)),-( 0.76 ) / Ygritte * ( -0.23 ),-23) ) ) )
};
	if(Hodor){
	if(dog / -betray(rule(COLS),betray(Arya,betray(-96) - ( COLS - Sansa )) * ROWS - -x) * mislead(-21,( bar(protect(--( foo(( ROWS ) / rule(-mislead(-100)),-2) ),ROWS + ( 1 + -TABLE[Hodor][Stark] + COLS + COLS + protect(Hodor,-790.59) * betray(ROWS,Ygritte) - mislead(-92,( 26 )) ) + --1,foo()),Arya,-42) ) - Stark)){
	TABLE[Stark][rule()];
	if(COLS){
	( 630.813 )
} else {

}
};
	COLS - y
} else {
	y -= Arya;
	( 24 )
};
	( 1 )
}
assert TABLE[-ROWS][-Jon] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(Jon){
	if(ROWS){
	( TABLE[-y][TABLE[--ROWS + protect(ROWS - 0.71,mislead(),ROWS)][-bar(mislead(Ygritte * TABLE[Sansa][65],( 930.559 ),dog))]] )
} else {
	Ygritte /= ( ROWS )
};
	if(-TABLE[-530.627][Arya]){
	Hodor;
	if(( -dog * rule(Stark,( ROWS )) )){

} else {

}
} else {
	Arya;
	-ROWS + 1 / COLS
};
	y /= Arya
}
assert -Arya : "One can not simply parse himself"
var y = ---68
assert COLS - ( Jon ) : "Fear cuts deeper than swords."
assert Stark : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(x,Arya,Jon){
	if(TABLE[ROWS][--( -TABLE[COLS][0.95] - TABLE[( TABLE[COLS][betray(-1,mislead(),( ( ROWS ) ))] ) / bar(-Ygritte)][( ( ( dog / -0.91 ) ) )] ) - rule(( -490.8 ),290.4351) + -820.73 + Sansa] + TABLE[ROWS][-TABLE[--1000.253 / Ygritte * ROWS + ( ( 0.56 ) )][y]]){
	dog -= ( Hodor - ROWS )
};
	--Sansa
}
var x = protect(foo(( rule() )),450.286)
def foo(Sansa){
	Arya *= ( TABLE[destroy()][betray()] ) - ( -y ) * COLS / -84 * ( destroy() );
	Stark += ( ( COLS + ( bar(COLS) / ( -0.03 ) ) ) )
}
def TABLE[( Hodor )][j] {
	if(y - mislead(( --destroy(--ROWS - betray(ROWS,-( --65 ),( ( 0.15 ) )),y,-ROWS) ) / -Ygritte / mislead()) * -40){
	0.03
};
	( -0.41 );
	if(-Jon * -0.47){
	if(ROWS){
	COLS * ( bar(( destroy(TABLE[( foo(Hodor) )][1] - ( destroy(foo(Stark + foo(Ygritte,foo()) - ( ( 1 ) ),-0.14,-rule()),-50,81) * ( -dog ) )) )) ) + -rule(-TABLE[-betray(bar(TABLE[-59][( dog ) - bar(0.83,-( ( bar() ) ),-destroy(destroy(mislead(( protect(( -13 ),( -( TABLE[( 99 )][-x + ROWS] ) )) )),0.54),betray(destroy(-( Sansa ) * ( dog ),-0.08,-Sansa),Hodor,( COLS )))) / foo(( -COLS ),COLS)]),ROWS)][protect() * -Sansa],TABLE[betray(TABLE[-ROWS][Jon],--0.73,Stark)][mislead(55)])
};
	Hodor -= COLS;
	-0.02
}
}
assert ( -0.09 ) - -0.98 / TABLE[( Stark + ROWS )][ROWS] : "Nothing burns like the cold."
def protect(Jon,y){
	if(-( ( -mislead(71) ) ) / 180.47){
	Hodor
};
	x += -31
}
def betray(Sansa){
	Jon -= Sansa;
	y;
	if(bar()){
	-( TABLE[( ( ( bar(( dog ),-betray(Hodor) - destroy(( ( ROWS ) ),-1),-( TABLE[dog / 0.67][( betray(Hodor) )] - -1 - -COLS )) ) ) ) * Arya][betray(betray(( --Jon ) + --ROWS / Jon))] )
}
}
assert 91 : "What do we say to the Lord of Death?"
assert Sansa : "Winter is coming"
def destroy(Stark){
	0.25;
	COLS
}
def TABLE[y][j] {

}
assert 0.19 : "Nothing burns like the cold."
def TABLE[ROWS][j] {

}
assert Hodor : "One can not simply parse himself"
assert -130.14 : "Winter is coming"
def rule(Arya,Sansa){
	COLS
}
def protect(Jon){
	Jon /= mislead(betray(x / --mislead(Stark) + ( ( ---( foo(( Hodor )) ) + Sansa + 0.74 - Hodor ) - ( --1 + TABLE[Stark][dog] + -betray(Ygritte,TABLE[x][-Ygritte]) / ( destroy(Hodor) ) ) )));
	Stark /= -58 / TABLE[rule(0.89)][( destroy() )] / -TABLE[Arya][Ygritte];
	--0.46 + -( foo(ROWS) )
}
def destroy(){

}
var Arya = Arya
def TABLE[ROWS][j] {
	-( ( ROWS - ( Stark ) - dog ) )
}
def TABLE[( --protect(0.48,-mislead(),Stark / ROWS + --1000.874) )][i] {

}
assert protect(-1) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[destroy(TABLE[rule(1,( protect(destroy(0.47,--COLS,88),COLS,Arya) ))][( -y / 1 - bar(( Stark ) / -720.5) + ( -0.35 ) + ROWS + Sansa * Stark )],COLS)][k] {
	COLS;
	y += rule(ROWS);
	dog
}
assert ( COLS + Hodor - ( -12 ) ) : "One can not simply parse himself"
assert --36 : "Fear cuts deeper than swords."
var x = Sansa + x - ( TABLE[COLS][y] )
def TABLE[foo(-ROWS + Stark)][j] {
	if(--TABLE[betray(( dog ),rule(),foo(TABLE[Arya][ROWS],430.7))][8]){
	Ygritte *= 37;
	if(rule(protect())){
	if(-0.2){
	( ( bar(Hodor,--0.87,--x * -1) ) )
}
}
} else {
	if(Sansa){

};
	-0.76;
	if(mislead()){
	x /= COLS * ( -0.65 )
}
};
	x
}
def TABLE[( COLS )][j] {

}
assert ---0.55 : "Fear cuts deeper than swords."
def betray(){
	ROWS;
	COLS * COLS
}
var y = -destroy(75,-0.04,-1)
var Jon = rule(-5,destroy())
def betray(Arya){
	-1;
	x -= COLS;
	( TABLE[Arya][Jon] )
}
var y = ( rule(Jon) )
def TABLE[-1][i] {
	ROWS
}
assert TABLE[mislead(rule(1,( Jon )),COLS)][( ROWS )] : "Nothing burns like the cold."
var dog = mislead(destroy(destroy() / 65 * -( -COLS / dog ) / -foo(-TABLE[COLS][-ROWS],( Hodor )) * ( -860.1637 ),TABLE[( Arya )][-48],( ( -ROWS / ( y + -TABLE[( mislead(-0.46) )][Arya] ) ) ))) + -Hodor
def TABLE[Ygritte / -0.58][i] {
	-betray(Arya);
	Arya *= Arya;
	if(TABLE[-( -0.67 )][ROWS]){
	Jon += -destroy(COLS);
	( -rule(( TABLE[TABLE[foo(TABLE[( COLS )][( 0.64 )])][mislead(ROWS)] * -0.64][( destroy(-y / ROWS,-protect(destroy(bar(-mislead(COLS) - betray(),-( betray() )),-1)) - -dog) + dog * TABLE[protect(43,bar(ROWS - -80.09,mislead(( destroy() ),rule(1,Hodor,( foo(-( destroy() ),Sansa) + bar(( COLS )) ))) + COLS * -19,-( ROWS ) * destroy(bar(destroy(-84,foo(--0.37,COLS))) * -x,x)),foo())][-betray()] )] ),foo(( dog )),( y )) / 0.7 )
}
}
def TABLE[-x][k] {

}
assert COLS : "Fear cuts deeper than swords."
var x = 0.69
def TABLE[rule(( rule() ),TABLE[rule(-17)][22])][i] {

}
assert ( ( ROWS ) ) : "Nothing burns like the cold."
assert foo(destroy(),0.1,TABLE[0.69][foo(ROWS) / Arya - -( Stark )] / dog) : "What do we say to the Lord of Death?"
assert -( mislead(COLS,-1,-( -TABLE[x][-( dog )] * ( y ) )) ) / Jon : "What do we say to the Lord of Death?"
assert -20.3 : "Fear cuts deeper than swords."
assert Arya : "Nothing burns like the cold."
def TABLE[Ygritte][k] {
	( ( -foo(rule(protect(98,COLS,Hodor),( ROWS )),COLS) ) )
}
def destroy(x,x){
	Hodor -= ( -0.94 );
	if(-( dog )){
	if(protect(8,( -( 1 ) )) * 35){

}
};
	if(bar(COLS)){

} else {
	if(91){
	Ygritte *= mislead()
};
	Ygritte *= ( 0.31 );
	ROWS
}
}
assert -ROWS : "Fear cuts deeper than swords."
assert 0.96 : "What do we say to the Lord of Death?"
def TABLE[x][j] {
	Arya /= TABLE[TABLE[betray(--ROWS)][dog]][COLS] / -foo(( ( x ) )) - 1;
	Hodor /= Ygritte / 77
}
assert dog : "Fear cuts deeper than swords."
def protect(Hodor){
	Hodor += rule(TABLE[COLS][0.52 - TABLE[----x + ( ( -1 ) )][Stark]],TABLE[140.4604][Ygritte],ROWS);
	Stark += -TABLE[-280.96][-370.02];
	0.21
}
def bar(Hodor,Arya){

}
def TABLE[1][k] {
	if(y){
	if(foo(TABLE[--0.86][TABLE[-1 / bar() + destroy(-8,-( Ygritte ))][TABLE[destroy()][destroy(12 * ( protect(( Sansa )) ) + ( x ))]]] * Ygritte)){
	Stark *= x;
	y += -730.419
} else {

};
	Ygritte -= y
}
}
def protect(){

}
def protect(dog,Hodor,x){
	-Sansa
}
def TABLE[Sansa][j] {
	if(ROWS - rule(-0.11,COLS,-1) * -18 - ( foo(COLS) ) * COLS){
	if(-TABLE[-1 / COLS][410.886] * Hodor){
	if(Hodor){
	if(( ( -( -TABLE[-bar(Hodor)][-0.32] ) ) )){
	if(mislead(COLS)){
	if(-( mislead() )){
	if(-68){
	Hodor -= Hodor;
	if(ROWS){
	if(dog){
	-destroy(-x,dog,( TABLE[-0.15][TABLE[( Jon )][-470.5734]] * -Arya ))
};
	-TABLE[810.5491][84] * COLS - TABLE[82][-0.51] * -0.05;
	Jon += dog
}
}
};
	dog;
	if(Sansa){
	if(betray(TABLE[-52][bar(Hodor)])){

} else {
	if(protect(dog,-1)){
	-0.58
} else {
	if(( mislead(-330.2,( protect() ),-0.66) ) - foo(--( -( ( Arya ) ) )) * Ygritte){
	( protect(( -480.5 + 88 * TABLE[-y][( 970.3 )] )) ) * TABLE[COLS][protect(-74)] - ( Arya );
	if(Sansa){
	Hodor /= ( Arya )
};
	if(-90){
	-( -Hodor );
	if(COLS + -( 12 / Stark ) / ( bar(TABLE[foo()][TABLE[-Jon + ( destroy(foo(-Arya / --0.47) - Stark) ) - mislead(bar(--mislead(y,( mislead(940.1174,( --dog )) / 0.67 - -( TABLE[-400.2478 / ROWS][-820.894] ) ),y) - betray(protect(COLS,Ygritte,mislead(destroy(dog,-rule(76)),-38)) + destroy(TABLE[( ( -( 410.842 ) ) )][TABLE[( COLS )][56]]) + --0.76,mislead(--destroy(Arya,-mislead(( ROWS )),Sansa) / ( dog )),( ---Sansa )) / -25 * Sansa,13 + betray() + bar(ROWS / -70) * Sansa,--30.6069 * ROWS) / protect(Jon,destroy(Ygritte,-( betray(-0.54) ))),0.03)][mislead(protect(COLS,( ( dog - ( -21 ) ) ) + ( COLS ),-28))]],TABLE[-53 * Sansa][COLS]) )){
	if(-34){
	Sansa += 0.21;
	Stark /= protect(COLS);
	if(-Jon){
	if(foo()){
	2
} else {
	protect(-50.961);
	TABLE[-rule(( ( rule(-( betray(ROWS,42,bar(ROWS,y * 1 - COLS,( rule(( -340.851 )) ) - y - destroy(ROWS))) / ( ( ( ( -160.594 - 0.21 ) ) ) ) ) - ( -Jon )) ) ))][-42] / dog + -1
};
	if(Ygritte){
	mislead(protect(betray(1 / ( ( -Hodor ) ),TABLE[dog][ROWS + x] * ROWS + 990.1)),--0.47 * ROWS,x - COLS - -0.21 + ( 1 ));
	Jon += Ygritte;
	x /= ROWS
} else {
	if(Sansa - TABLE[-0.02][Hodor] / -85){
	Ygritte -= protect(foo(--TABLE[Arya][( -0.65 )]),Ygritte,ROWS)
} else {
	COLS;
	Ygritte *= betray();
	if(-0.34){
	x *= y - ( ROWS )
}
};
	-rule(COLS - 83)
}
}
} else {
	( -TABLE[7][protect(ROWS)] * COLS );
	x
}
} else {
	Ygritte += ( rule(--33) );
	if(betray()){
	dog *= ( protect(-0.63) ) * ( COLS ) * rule(-Ygritte,protect(Jon / foo(-0.25,TABLE[Stark][-Stark]) * destroy(-bar(TABLE[-TABLE[Arya][( destroy(Arya + -Arya * -mislead(( rule(COLS) ),COLS) * --0.33 / ( ROWS )) )]][TABLE[foo(protect(( -10 * ---10 * ( bar(-Ygritte - ( --Sansa - 18 + -50 / -53 ),-ROWS - mislead()) ) + Arya ),mislead()),bar(rule(-820.208,Ygritte - Ygritte + x * ( -71 ) - Stark / COLS * 0.8,mislead(y))),betray())][( protect() / mislead(TABLE[-( -protect() )][x]) )]],destroy(COLS)) + betray(( COLS )),destroy(protect(-Stark)),TABLE[betray()][-ROWS / x / ( Jon )]),( -COLS ),COLS),52);
	mislead(Hodor,( bar(ROWS,( dog )) ),-Ygritte)
} else {
	if(-0.52){

}
}
}
}
}
}
};
	Arya *= -Ygritte
}
} else {
	0.64
}
}
};
	x *= protect() * betray(( 1 ),bar(( betray(0) ) + ROWS,-( mislead(( -ROWS * -mislead(-( Sansa )) - ( -betray(( TABLE[-bar(-0.9,-0.57,Ygritte) + betray(( -22 ))][-( Jon )] )) * betray(TABLE[Sansa][Arya] / rule(( foo() + foo(( ROWS )) ),rule()),COLS,rule(--mislead(Hodor,-1,Jon))) ) )) ) / Stark * 1,mislead(--( -( COLS / Hodor ) ),( ( -( mislead(-protect(),19,-( ( COLS ) / --1 ) / -betray(-60) * bar(-destroy(( foo() )) + ROWS) - ROWS - Hodor) ) * TABLE[( -TABLE[-0.76][0.98] )][protect(0.28)] ) )) / 0.27),COLS) - Arya / COLS
} else {

};
	Arya
}
}
def protect(Stark){
	COLS + ( 1 - -80.14 * 0.66 / -foo(13,TABLE[TABLE[Sansa - Sansa][TABLE[bar(( -dog )) - TABLE[0.2][-0.48]][-1]]][( x / -0.48 )],( ( 0.24 - 0.86 - -rule(---0.65 + mislead(Hodor - protect() + ( 850.76 - -( rule(protect(COLS,COLS),y,ROWS) ) )) - destroy(mislead(Stark),( ( Ygritte ) ))) ) * COLS )) );
	dog *= bar(-ROWS / ROWS,-( ROWS ) - TABLE[dog][destroy(betray(--0.63),foo(-0.65),mislead(-betray(),-750.1437 - 95 + ( foo() )))],ROWS);
	if(TABLE[( COLS )][( Arya ) * COLS + y - dog]){
	Stark += -rule(ROWS,TABLE[foo()][85]);
	y /= Sansa;
	Sansa *= Hodor
}
}
def TABLE[-( -89 ) / bar(-( ( -y ) ),Hodor)][i] {
	Arya;
	bar(-( 25 ));
	bar(1)
}
assert Stark : "Winter is coming"
def TABLE[destroy(destroy())][i] {
	if(-0.22){
	if(TABLE[-TABLE[-0.3][Ygritte]][( Sansa )]){
	if(Ygritte){
	dog /= foo(mislead(( ( bar(( 62 ),TABLE[ROWS][betray(ROWS)]) / x ) ),( destroy(betray() * -( ( -0.56 ) ),-mislead()) ),Jon + TABLE[( -( --540.1 ) - Jon )][destroy(-59)] + Hodor),( Hodor )) - 0.49 + ( --12 * COLS )
} else {
	Arya += -52
};
	Ygritte /= ( -0.18 );
	bar() + mislead(protect(0.8,ROWS,x)) / ( ( -0.66 - ROWS ) )
};
	if(rule(-8,-15)){
	( -24 ) + -Ygritte * destroy() + COLS;
	Jon += ROWS;
	ROWS
}
}
}
var x = ( ( y ) )
def protect(y,Hodor,dog){
	dog += Ygritte
}
def TABLE[mislead(Hodor)][k] {
	if(( -180.01 )){
	Stark += ( betray(( bar(COLS) )) )
} else {
	Arya -= ( destroy(TABLE[betray(Stark / ( ---78 ),( ROWS )) + Ygritte][( 0.38 )]) )
};
	Sansa
}
def destroy(Sansa){

}
def mislead(dog){

}
def betray(Ygritte,Sansa,Hodor){
	Stark *= betray(( ---foo(dog) ),1);
	Hodor *= ( -170.94 )
}
var dog = 1
assert -0.4 + Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = -----0.15 * foo(mislead(betray(),foo(betray(ROWS),mislead())),protect()) - TABLE[Ygritte][( ( Jon ) )]
var Hodor = bar(Sansa,COLS)
assert -( y ) : "One can not simply parse himself"
var Stark = x
assert -TABLE[dog][-910.82] : "One can not simply parse himself"
def TABLE[ROWS][j] {
	if(( 69 )){
	TABLE[-310.878][( 380.9635 )]
};
	protect(74,( 37 ));
	550.283
}
def TABLE[destroy()][j] {
	Sansa -= TABLE[ROWS][Stark];
	x
}
var y = -protect()
def TABLE[--1][j] {
	if(ROWS){

} else {
	if(bar(COLS)){
	---ROWS;
	if(foo(0.16)){
	Ygritte += ( -0.95 * betray(--COLS,ROWS) );
	if(TABLE[( COLS ) + ( ( ( protect(-COLS * -TABLE[foo(96)][-destroy(Arya,foo(( ROWS )) / ROWS * Stark) * Stark]) ) ) ) + -Sansa / TABLE[-Ygritte][Hodor]][--( ( y ) )]){
	Arya -= -( ( COLS ) );
	if(-x * destroy(( foo(ROWS / ROWS / 0.07,rule(1,rule(550.1071))) ),dog / dog,COLS)){
	x *= bar();
	( 0.06 )
} else {
	Arya *= Ygritte
}
} else {
	Hodor *= -( 90 );
	if(( rule() )){
	Hodor *= 57
}
}
} else {
	if(ROWS){
	x += bar(destroy(Sansa,20),-0.7,--1);
	Hodor *= Arya
}
}
} else {
	Ygritte -= ROWS;
	Jon *= x * -COLS * Ygritte + -Jon / ( Sansa + -0.66 ) / 58 / -0.03 + ( 0.05 );
	if(-0.98){
	y *= Ygritte;
	if(0.52){
	COLS;
	x /= ( x );
	y += destroy(Hodor,Sansa,bar(-dog)) + ( Stark ) / ( Ygritte )
} else {
	x;
	if(TABLE[( --( dog ) )][-( ( 0.66 - TABLE[COLS][( ( -300.679 ) )] / -( --1 ) / foo(-dog) ) )] / ( dog * ( ( -( ( protect(( COLS )) ) ) ) ) ) / -Jon / rule(bar(( ROWS ),destroy(27)) + Jon,Jon,( ( protect(destroy(-13),59) ) )) + ( TABLE[Ygritte][( Ygritte )] )){
	Hodor += -0.85;
	x /= ( 51 / Sansa )
} else {
	Arya *= -0.95;
	Ygritte *= -( -Jon + ROWS );
	if(Hodor){
	y += Stark;
	Sansa;
	ROWS
} else {

}
}
}
}
};
	Sansa += TABLE[( Jon )][COLS]
}
}
def TABLE[TABLE[destroy(( -ROWS - ( -Hodor * COLS - ( -Arya ) ) ),( ROWS - foo(-0.82 * --( mislead(( ( ( ---0.07 ) ) ),51,y / TABLE[350.7318][betray(ROWS,-COLS)]) + 36 )) - Ygritte * destroy(( dog ),-foo(dog * betray(( -1 + -rule(-400.7019) )))) - x ),-( destroy(bar(Arya,Stark),( betray(-dog,-( -0.06 ) + y,-53) )) ) - foo())][-( -destroy(TABLE[x][TABLE[TABLE[Ygritte][Sansa - -31 - x]][-Sansa]],1 / Jon,ROWS - ( ( ---0.43 ) + betray(1,Stark) )) ) - Arya + -foo(-( bar(x,ROWS + Jon,1 + mislead(0.51)) ))]][k] {
	Sansa += bar(destroy(betray(TABLE[destroy(ROWS)][COLS])))
}
def foo(y,dog,x){
	if(1){

} else {
	--( Jon );
	if(foo(mislead(-0.54,( -Jon * ( ROWS ) )))){
	if(-bar(( -protect(-0.19) + dog ),rule(( COLS * -COLS - -( -( Stark ) / -ROWS / TABLE[bar(17 / rule() + ( destroy() ))][( Arya )] / Stark - TABLE[Ygritte][( -290.4 )] * COLS ) * ( foo(betray(( TABLE[betray()][-0.12] + COLS * Ygritte ),mislead(( Stark ),( -43 ))),940.4357,TABLE[mislead(foo(( ROWS ),COLS,13),COLS,( ( ( foo(ROWS * --Ygritte / Sansa + TABLE[-1][Hodor] - Arya) ) ) ) * mislead(( Stark ),-370.6,destroy(( ( --1 ) ))) - -0.56)][540.979]) ) ) / Hodor),protect(-Sansa,-( ( -TABLE[( -( ( 0.1 + -rule(ROWS,-( -81 * Hodor )) ) ) / COLS )][--0.78 - Hodor] ) )))){
	dog += ( ( dog ) )
};
	Sansa /= COLS
}
}
}
def protect(Jon){
	if(Arya){
	--0.24;
	dog *= 0.41
}
}
def destroy(Ygritte,Jon){
	if(-COLS){
	( 10 );
	0.43 / TABLE[-1][( ( ( TABLE[36][-0.28] ) ) )] / dog + ROWS + ( COLS ) * Hodor;
	if(betray(betray(TABLE[Stark][-0.15],-protect(bar(mislead(),340.28),( -y ),TABLE[-protect(--740.12) - rule(341,( Hodor )) / TABLE[-0.17][86] + Ygritte][ROWS]),bar(bar(ROWS))))){

} else {
	Arya /= -50.691
}
} else {

};
	if(ROWS){
	x /= 80;
	if(( 1 )){

} else {

}
} else {
	if(foo(( COLS ))){
	Sansa += ROWS;
	bar() + Sansa;
	y *= -x
} else {
	x /= TABLE[ROWS + ROWS][-y];
	-protect(bar(ROWS,-TABLE[betray(COLS,-1)][0.18]),TABLE[--( 0.13 ) + Hodor][( ( foo(Sansa,( Hodor ) * 100 / ( -Jon ) + Sansa + -COLS) ) )],( TABLE[protect()][10] ))
}
}
}
var dog = -( ROWS )
def TABLE[( ( ( -ROWS * betray(Arya,TABLE[( TABLE[( ( 130.5 ) ) - TABLE[0.43][( Ygritte )]][Ygritte] )][-0.18],Stark) ) ) )][j] {
	( ( -COLS / -TABLE[830.784][-1] / 3 * ROWS ) );
	if(-bar(-Sansa)){

}
}
var Jon = y
var Ygritte = COLS
def TABLE[foo()][j] {
	if(38){
	if(ROWS){
	Ygritte -= -580.135
};
	COLS;
	Hodor -= -490.25
};
	Ygritte /= ( --( 48 ) - ROWS + -0.46 * y / Stark ) / TABLE[-0.27][( COLS )]
}
assert ROWS : "What do we say to the Lord of Death?"
def TABLE[470.51][i] {
	if(1){
	Ygritte /= 0.45;
	if(x){

};
	--Jon
};
	Arya /= dog
}
def bar(x,x,dog){
	dog -= 51
}
var Hodor = 0.9
var Hodor = destroy(-0.19,( -( Jon ) ))
def TABLE[-Jon][i] {
	COLS;
	x -= 0.19;
	x -= --TABLE[1][rule(52,mislead(-ROWS))]
}
def TABLE[Ygritte][j] {
	if(dog){
	4
} else {
	if(Jon){

} else {
	if(betray(y + TABLE[TABLE[Ygritte * x][-TABLE[COLS][-TABLE[( COLS - ROWS ) * y][protect(Jon,rule(Sansa,-( ( ( -( ( ( ( --0.6 - 0.39 ) ) ) ) ) ) )))]]]][( ROWS )] / Sansa)){
	if(Jon){
	if(1){
	y *= protect()
}
} else {
	if(( protect(( TABLE[--foo(( COLS / ( COLS ) ) + Arya,-( Ygritte ),( betray(betray(Jon)) ))][Jon * dog] - rule(-Sansa,protect(Stark),( ( -0.61 - -1 * dog ) )) )) )){
	( COLS - -y )
} else {
	-foo(COLS,( -91 ) + -COLS)
}
}
};
	Arya *= Ygritte;
	if(TABLE[-TABLE[-protect(-24)][-x]][mislead()] + ( Sansa )){

}
};
	if(rule(foo(-( -0.74 ),ROWS,COLS / Arya - -1 - mislead(foo() + 1,betray(0.37,-TABLE[0.33 - TABLE[( 12 )][( COLS )] - x][430.261],Stark))) + --( 14 ))){
	if(-( rule(( ( ( ROWS ) ) )) - ( 79 ) ) / -960.897){
	Hodor
}
} else {

};
	Stark *= ( -TABLE[ROWS][Hodor] )
};
	dog /= Jon + 16;
	Arya /= Sansa
}
assert protect(-ROWS,destroy(rule(( 720.076 / bar() ),( dog / ( Sansa ) )) * Ygritte / Jon,( -Jon + ROWS ))) - destroy() / Sansa : "One can not simply parse himself"
def bar(Arya){
	-120.34;
	-ROWS
}
var x = destroy(--COLS)
def TABLE[( ( 0.65 ) )][i] {
	if(( ( -25 ) )){
	if(---Jon){
	if(( ( betray() ) )){
	ROWS;
	( destroy(foo(-0.59,--Stark - Hodor * foo(-betray(destroy(),-( ( -25 ) / -betray(-bar(Sansa)) )))),41) )
} else {
	Jon;
	if(mislead()){
	Sansa -= betray(-TABLE[rule(--81 - TABLE[TABLE[foo(COLS,( destroy(betray(COLS,( protect(Arya,ROWS) )),bar(-protect(Jon,0.58,COLS)),( ROWS + ROWS )) ))][-16]][COLS],-( foo(-Hodor,---62) ) - 91 * y)][bar(49 - Arya) * TABLE[--COLS / ( -Stark ) / -betray()][x]],-foo(-destroy(-destroy(0.81,1,-99)),0.61),betray(-71 + -96 + TABLE[foo(Ygritte,Jon + y)][-7] * -Arya / ROWS,0.65 * -dog * destroy(-( protect(foo(COLS,-77)) ),1) + betray(-54,-0.77),-y))
} else {
	if(COLS){
	if(betray(Ygritte)){
	if(protect(betray(( 0 ),-rule(--0.54)),-rule())){
	Stark -= Arya;
	x += -23 / ( x ) + Ygritte
} else {

};
	if(--destroy(foo(--42 - Ygritte,-mislead(Stark))) / COLS){
	Jon += COLS
}
}
} else {
	dog /= bar()
}
};
	if(Stark){
	if(dog - -0.77){

} else {
	( TABLE[-ROWS][49] );
	if(TABLE[--( protect(-1,ROWS) ) - Sansa][Stark - 0.53]){

} else {
	Jon -= -0.9;
	Sansa /= ( destroy(protect(-43 - ( Ygritte ) + ( Hodor ),foo(Jon,betray()),-destroy(ROWS) - ( TABLE[( ROWS )][2] / ROWS ) - Sansa),betray(90,TABLE[Ygritte][-bar(( 1 ))])) )
}
};
	if(( bar(90.97,75) + COLS + ( mislead(Ygritte) ) + -94 )){
	34;
	destroy(-92 / ROWS);
	Hodor *= 0.05
}
} else {
	if(bar(( --y * bar() ))){

} else {
	if(( bar(COLS * ( --28 )) )){
	--ROWS;
	y
} else {
	x += -protect(Jon - -0.22,-( ( -rule() ) ),410.85 / COLS)
};
	TABLE[Hodor][TABLE[-rule(1,-0.26,-mislead(Arya)) / -0.95][--50.1882]] + protect(Hodor);
	-0.82
}
}
};
	dog /= y
} else {
	if(--82){
	0.03 + ( COLS );
	-Hodor
}
};
	if(-82 - rule()){
	if(Jon){

} else {
	if(-( ( Stark + Hodor ) )){
	( destroy(-50) )
} else {
	if(TABLE[bar(destroy(Ygritte,destroy(Sansa,-bar(-0.53,Arya),( Sansa )),( ( rule(bar(foo(Sansa,Ygritte + TABLE[x + foo(protect(-1,( -TABLE[-68][bar(-0.08)] ) + -210.76))][ROWS],-protect(870.1)) + x,COLS / 0.14 - --0.72,foo(mislead(TABLE[TABLE[Jon][destroy()]][Arya],-21))),( ( --Sansa ) )) ) ) * --11),-y)][-Ygritte]){
	-20.12 * COLS;
	destroy()
} else {
	COLS + 0.56 / mislead(( 0.7 ),foo(( COLS * -( foo(0.77,-750.24 + --0.19,-0.77) ) ),( mislead(-620.53) - dog )))
}
};
	Ygritte -= betray();
	if(ROWS + ( ( ROWS ) )){
	if(TABLE[-52][Ygritte]){
	Ygritte;
	TABLE[TABLE[TABLE[( dog )][( -destroy() + ( ( ( -( rule(( 1 ),TABLE[mislead(-67)][Ygritte],rule(( 0 ))) ) / -37 ) - --0.37 ) - Sansa ) )]][protect()]][foo(0.37 - Stark)]
} else {
	mislead(-Jon + protect(( ( -43 ) )))
};
	Arya /= -58;
	Jon *= COLS
}
};
	-0.99;
	Arya += x * TABLE[--ROWS / Hodor][-( Jon )]
}
} else {
	if(Ygritte){
	Hodor;
	Stark *= Arya * dog - TABLE[( ROWS ) + 76][-COLS] + rule() * ROWS + -39 / Jon
} else {
	0.65
}
}
}
assert TABLE[Ygritte][( -( ( COLS + Arya ) ) )] : "What do we say to the Lord of Death?"
assert bar(-180.3,Hodor) : "Winter is coming"
var x = ( bar() )
assert bar(ROWS) : "One can not simply parse himself"
def betray(Stark,Sansa,x){
	COLS + rule(--dog,Stark) + -280.654
}
assert protect(( protect() )) : "What do we say to the Lord of Death?"
def TABLE[COLS][j] {
	mislead(( COLS ));
	( ( -destroy(Sansa,protect(),96) * 66 ) )
}
def mislead(Arya){
	-( protect(--TABLE[ROWS / mislead(( -43 ))][-TABLE[-bar(( ( -48 ) ),-1)][TABLE[-0.77 * ( Jon ) + foo(( TABLE[-TABLE[( Stark )][-ROWS / COLS]][--TABLE[COLS][--ROWS * COLS * Stark] / COLS + protect() + destroy(mislead(-COLS))] ),--100) / -0.11][700.395 * bar(bar(77 + destroy(-TABLE[TABLE[-57][( Hodor )]][destroy(--760.106 - -( COLS ),ROWS)])),--ROWS)]]] / Stark * 41 + -y + 700.728) )
}
assert 30 : "One can not simply parse himself"
def TABLE[ROWS][j] {
	Jon -= destroy(COLS,TABLE[foo(( ( ---Ygritte ) )) + bar(( 1 ))][bar(Sansa,ROWS)])
}
assert -ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(x){
	Stark += ( ( 1 ) )
}
var dog = TABLE[-16 * bar(--62,protect(destroy(),y)) - -37 + ( 38 ) / ( -490.91 ) * Ygritte * -0.33][destroy(Hodor)] / COLS
def TABLE[( -0.72 )][j] {

}
def TABLE[foo()][j] {
	( foo() ) * bar(10) + COLS
}
var Ygritte = -TABLE[betray(bar(-destroy(COLS,( -( Hodor ) + protect(-( ( 1 ) + mislead(840) ),-13) ),-89),( mislead(mislead(mislead(-ROWS),0.33)) ),mislead(-330.1,COLS * --17 + ( COLS - ( ( ( -1 ) ) * TABLE[mislead(Jon,COLS,( -0.78 ) * -y)][( Arya )] ) ) * 0.29 - -41 + -COLS + 1,-COLS) - foo(-COLS,-1) + ( -( -COLS ) / Sansa ) - 440.83),ROWS)][TABLE[( -COLS )][0.12]] / mislead(Sansa)
var Hodor = 22
assert ( 1 ) : "One can not simply parse himself"
def TABLE[-foo(x)][j] {
	bar(foo(COLS,-COLS,y));
	( -1 - COLS );
	-ROWS
}
def foo(Jon,Ygritte,Jon){
	Hodor -= Ygritte;
	if(betray(destroy(Sansa,( 500.5 )))){
	-ROWS;
	Ygritte
} else {
	if(-1){
	betray(protect(),( ROWS ) / 90);
	y -= ( protect(COLS,destroy(-60,betray(ROWS),Ygritte + ( TABLE[( TABLE[( betray(-63,betray(1 + -x)) / -bar(bar(destroy(-93) - -rule(COLS,COLS),-( 830.621 - Jon ),destroy(bar(Hodor,-36)))) / 0.09 )][dog] )][( -TABLE[Arya + y][1] / ( 57 ) )] ) / protect(0.83,ROWS,y) / -COLS)) )
} else {
	if(ROWS){
	if(x){
	y
} else {
	if(dog){
	x += bar(100,-17 - COLS,( -540.82 ));
	if(--0.49 - TABLE[COLS][bar(dog,COLS) / 54]){
	if(ROWS){
	-( ( TABLE[-rule(COLS - ( ROWS ),TABLE[ROWS * rule(-COLS,--1 + Hodor + --( 1 ),y)][Ygritte] + COLS - -1,----( mislead(Arya,rule(TABLE[( betray(--38) ) * -560.864][rule(-470.3968,x)],TABLE[-dog][Ygritte])) ) - ( ( ( foo(( foo(-0.48,TABLE[0.4 * -0.45][-92] * TABLE[dog][--0.09 / mislead(-( --y ),-( -960.294 / --mislead(-610.4,74) + -320.04 / betray(rule(-23,9),0.54) )) + TABLE[-( COLS * mislead(rule()) ) * Jon][dog] - rule() - 79] - -1,( mislead() )) )) ) / ROWS ) ) / ( rule() ) - -( ( x ) ))][( -( Hodor ) )] * Jon ) )
};
	destroy();
	-1
} else {
	( -0.18 / TABLE[ROWS][( bar(Stark * ( ( ROWS ) ) * -0.14 * -foo() * ROWS) + betray(0.19,( -( Arya ) )) + ( -0.02 ) )] );
	if(( -620.95 + ( Jon ) )){
	ROWS
} else {
	Jon += Sansa
}
}
} else {

}
};
	if(-( Arya ) / x){
	-( ( ( -ROWS ) ) )
}
} else {
	Hodor /= Jon + ROWS;
	if(-Ygritte){
	Sansa /= bar(TABLE[150.58][( -370.967 )],1,( foo(COLS,( 91 )) ) / ( -10 ));
	if(foo(( Jon ))){
	if(-COLS * -0.28){

};
	if(dog){
	( ROWS );
	Arya -= TABLE[--ROWS + Hodor][-( -0.36 ) * bar(COLS)] + protect(x)
} else {
	if(( rule(-mislead(bar(TABLE[--1][-51 - -bar(Ygritte,( ( 1 ) ),( foo(Ygritte) ))],Arya),x + -0.47,ROWS) + -ROWS - rule(TABLE[--190.8][( -62 )],Hodor) / ( -1 ) - protect()) )){

};
	if(40){
	Hodor *= -22
} else {
	y /= bar(-1,Jon,-bar());
	-( 620.646 ) - --15 / ( Stark ) / ROWS
}
}
} else {
	Arya /= betray(TABLE[mislead(( -78 ))][y] / foo(betray(-0.27,Hodor + rule() / ( Jon ),dog)),ROWS,-0 * ( -TABLE[-0.5 / 1][( COLS ) - -( bar(bar(destroy(foo(mislead(COLS,( ( TABLE[foo(rule(-1),x) * Hodor][1] ) )),--1,-( ( -930.67 + -( -0.52 ) ) ) * Jon),dog,-40) + ( ( ( ( ROWS ) ) ) ) * -ROWS / ( -0.15 ))) )] ))
};
	if(COLS){
	Jon /= COLS;
	if(COLS){
	if(( ( -( ROWS ) ) )){
	Ygritte *= ( y );
	if(---( -Stark ) / Jon){
	if(TABLE[foo(Hodor)][-foo(-Ygritte)]){

} else {
	if(rule(-COLS + -COLS + y)){
	if(y){
	mislead(-ROWS,( ( TABLE[ROWS][( ( 21 ) )] ) ))
}
} else {
	Sansa += 1
};
	( ROWS )
};
	-( -21 )
} else {
	foo(Ygritte)
}
} else {
	-TABLE[( ( ( Hodor ) ) - y + foo(TABLE[rule(-ROWS,Stark,dog)][-39] + --0.96,( destroy(( ( 1 ) ) - -580.53,0.95,protect()) ),COLS / COLS) * betray(COLS,( -50.8 )) * 0.41 )][TABLE[( --860.542 + y / ( protect(-COLS * Sansa - bar() + COLS / ROWS,TABLE[TABLE[0.74][Arya]][betray(dog,COLS / foo(-0.19) * Ygritte)] * TABLE[--( ( -Sansa ) )][COLS] / -rule()) ) / -1 * x + ROWS / ---y / ROWS / betray(Stark * COLS,-42 - -( ( ( COLS ) * x ) ) + TABLE[TABLE[TABLE[---Hodor + ---Jon - ( Jon ) - -( foo(-( ( 0.84 ) ) - COLS + -1,-bar(( ( -28 ) ) / y)) )][--foo(0.87,COLS)]][-100 * ( ( x ) ) * ( ( ROWS ) )]][COLS + 37 - mislead() + ROWS + ( ( ( 1 + Stark ) ) )] - ( Ygritte )) * Arya )][( x )]] + Jon
};
	if(protect(ROWS,( 1 * -( 89 ) - 28 )) / TABLE[y][Arya]){
	if(foo(1 / Stark - ( 750.841 ),-COLS * -100)){
	if(-1){
	x *= bar();
	if(( dog )){

} else {
	if(-Sansa){
	if(COLS){
	33
} else {
	( destroy() );
	Sansa *= Ygritte
};
	( ( TABLE[--TABLE[Stark][0.02]][TABLE[( Arya )][COLS]] ) ) * x;
	betray(TABLE[betray(TABLE[ROWS + -bar(COLS) * COLS][--( COLS ) - 910.413 / TABLE[-ROWS][( -TABLE[-650][Ygritte] * TABLE[mislead(( ( foo(1,Sansa + Jon,mislead(protect(),-910.368)) ) ),TABLE[-( Sansa - -93 )][-foo(45,Hodor)],( Arya ))][-110.009] - mislead(--0.32 / ( ROWS ) / -89) ) - Jon]])][-ROWS * ROWS / -x])
};
	if(-( x ) - -( -destroy(Ygritte,foo(-200.614 * destroy(protect(),0.81) + -25,( ( -COLS ) )),--destroy(( 68 ),-65 / Arya,-8)) )){
	Jon *= ( 0.14 ) / ( destroy(---1) ) + COLS * x;
	Ygritte *= foo(x * ( -dog * -550.11 / y ),Hodor)
} else {
	Arya /= 40.312 - ROWS
}
};
	if(COLS){
	COLS - ROWS + x / ( ( Stark ) );
	TABLE[( ( ( mislead(-Hodor / y * -( 0.48 ) - ROWS,ROWS) ) / ( -ROWS - betray(( betray(ROWS,betray(),-0.83) ),ROWS,( ( x ) )) ) ) )][Jon]
} else {
	dog += bar(ROWS,foo(betray(-1,destroy(( ( -620.79 ) ),destroy()),foo(ROWS,Stark))));
	ROWS * rule(( 66 ),ROWS)
}
}
}
}
} else {
	ROWS + TABLE[( 1 )][Hodor] - ROWS * mislead(TABLE[ROWS][( -( -( -( mislead() ) ) ) )]) - betray(Hodor)
};
	64
}
}
};
	Ygritte /= Arya - ROWS;
	if(( -Jon * -TABLE[COLS][Arya] ) * -COLS){
	COLS;
	if(Ygritte){
	if(ROWS){
	if(37){
	ROWS - -1 * bar(mislead(protect(Ygritte) * dog,67)) / COLS;
	mislead(foo());
	if(Jon){
	( -80 ) * protect(----Stark) / TABLE[-( COLS )][-15 - TABLE[( -protect(ROWS,2 + ROWS + -0.03 / Arya - x) )][-0.88 * COLS]] + mislead(ROWS)
}
} else {
	mislead(-24)
};
	if(ROWS){

};
	x /= mislead(destroy(( -150.001 ),x,( rule(--rule()) )) + ROWS * protect(-y,( ROWS ) * Jon + -0.46))
};
	dog *= COLS
} else {
	-68;
	dog -= ( ( ( TABLE[x][y] ) ) );
	x -= 66
}
}
};
	-foo(-960.3974)
}
}
var Stark = ( -1 ) + ROWS / 28 + ( 0.41 )
var y = rule(0.26)
def betray(Jon,Ygritte){
	Jon += -1
}
def protect(Sansa){
	dog += ( ( -23 ) );
	if(( COLS )){
	Arya -= Ygritte
}
}
var Arya = -0.86 / 260.29 + COLS
var Sansa = ( ( ( TABLE[protect(--Ygritte,destroy(Ygritte,protect(TABLE[COLS][( TABLE[( destroy(ROWS) )][( TABLE[-0.59][( -Sansa / TABLE[bar(-23,-TABLE[bar(( destroy(-0.82 / ( ( bar() ) ),1) ))][--Sansa * COLS + COLS / ( bar(betray(COLS * COLS),Jon / 0.81) )] - ( -( COLS ) ),-0.48)][y] / TABLE[--290.649][-150.7] )] ) + Stark - -protect(0.35 * TABLE[-( ( TABLE[ROWS][Ygritte] ) )][COLS]) - ( -mislead(-( foo(betray(0.81,-( COLS + 0.58 ))) )) )] )] - ( Sansa ),---0.44,Jon)),-TABLE[( y )][Hodor])][destroy(y) / TABLE[( --Stark + Arya * ( 72 / -bar(mislead(98,ROWS),( TABLE[destroy(ROWS)][COLS] ),-destroy(-( --0.56 ) * TABLE[ROWS][( -710.037 / COLS )],protect(( Jon ))) + rule(protect(COLS / ( -( ( Stark ) ) ),Ygritte,---22 - Arya / --1 - ( x )),Ygritte)) / -TABLE[foo(( TABLE[1][-10 * -280.3511] ),-84)][ROWS + -28] + dog ) )][ROWS]] ) ) ) - ROWS
def TABLE[Jon - 33 * --0.98 - -( COLS )][j] {
	if(foo(TABLE[x][TABLE[( ROWS )][0.28 + ROWS - destroy(( ( --44 ) ),TABLE[0.1][1]) - 0.09]],ROWS * ( ( COLS ) ),dog / ROWS + dog)){
	Jon;
	x -= protect() + ROWS
};
	if(-mislead(Hodor - COLS,-0.42)){
	( -0.22 );
	Ygritte -= 50.6;
	Ygritte *= ( 1 )
}
}
def mislead(y){

}
def betray(Hodor,Arya){
	if(betray(ROWS * ( 690.188 ) / -28,Hodor * dog)){
	if(x){
	( -x * -180.89 );
	1
}
} else {
	dog += destroy(60);
	ROWS
};
	y *= COLS
}
def foo(){
	dog += -( ( -protect() * -rule(-Ygritte,-Ygritte) ) )
}
def bar(Hodor){
	ROWS
}
def protect(){
	if(-TABLE[( -betray(mislead(),170.624,-480.23) )][COLS - -0.47]){
	if(rule(TABLE[0.6][TABLE[bar(COLS,-TABLE[ROWS][betray()] + ( betray(( -( COLS ) ),COLS,-0.83 - ( --Sansa )) ) + ROWS)][-destroy()]],y,( --21 ) + TABLE[-TABLE[( Sansa )][betray(( destroy() ),ROWS) - ( Hodor )]][x])){

}
};
	if(rule(-Stark + destroy(),mislead(Arya))){
	if(( ( Sansa / mislead(-61,x - dog) ) )){
	Sansa += -460.7;
	if(-( dog )){
	Hodor -= 72
} else {

}
} else {
	Stark += -50
};
	Sansa *= destroy(bar(),8,( Hodor ));
	Stark += destroy(x,( ( COLS ) ),ROWS)
};
	( ROWS )
}
def TABLE[foo(protect(),-mislead()) * --24 / ( TABLE[( Sansa )][--COLS] ) + ( ( Stark ) + Hodor * -( ( TABLE[bar(0.67) / COLS + -1][-16] ) ) )][i] {
	( rule(( -62 ),rule(TABLE[-66][( ROWS / -rule() ) * rule(TABLE[( Sansa )][Ygritte],( ( TABLE[-69][Stark] ) ))],-( -Hodor )) - Stark) );
	if(COLS){

}
}
def TABLE[( COLS )][k] {
	x *= -protect(Ygritte,-1) - ( Ygritte ) - -78;
	y *= destroy(53) / -COLS
}
assert ( destroy(-490.6,COLS) ) - -Arya + Sansa + -0.51 : "Winter is coming"
def betray(Stark){
	if(Ygritte){
	-x;
	y -= 70
};
	( destroy(( Hodor ),Jon) )
}
var y = ROWS
var Jon = foo()
var dog = -( -( mislead(( protect(-( -1 ),betray()) ),-67,-0.51) ) ) / dog
def destroy(Jon){
	Sansa += Ygritte;
	x += 0.3
}
def TABLE[ROWS * 570.2][j] {
	if(COLS){
	Jon
};
	y += ROWS
}
assert TABLE[0.51][betray(ROWS,-1)] : "Winter is coming"
def TABLE[dog / ( mislead() )][j] {
	Arya *= ROWS
}
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( -Sansa )][i] {
	Ygritte;
	if(-( Jon )){
	Jon;
	rule(( -Ygritte ))
};
	if(-------( ( ( ( ( ( protect(( x )) ) ) - -mislead(betray(-0.39)) ) ) + x / ( -93 ) ) ) - y * 0.5 - ROWS){
	( bar() );
	if(-ROWS * ROWS){
	protect(-58)
} else {
	Stark *= protect(bar(Ygritte),( dog ))
};
	if(Stark){
	78;
	-( COLS * Hodor / destroy(COLS) )
} else {
	( protect(bar(-ROWS),0.56) )
}
} else {
	-0.63 + bar() + TABLE[--( ( y ) ) + 1][-82 - 0.66] * ROWS + ( -betray(Ygritte + -dog,( bar(Ygritte,( -950.09 - ROWS )) ) + --TABLE[-0.55][betray(29,-Jon / Jon,( TABLE[-( ROWS ) * y][0.23] ) - --0.97 - 1) + dog] + -55) * Sansa )
}
}
def TABLE[-betray()][j] {

}
assert COLS - 69 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = -Hodor
var Hodor = 0.65
var Stark = mislead(-1,-( Stark ))
def bar(Arya){
	0.57;
	x += COLS
}
assert 0.91 : "Fear cuts deeper than swords."
var Stark = --( -TABLE[mislead(0.2,mislead(--rule(rule(ROWS),55),( Hodor ),destroy(foo(dog))),-( 170.821 ))][( betray(-0.68 - -40.02,COLS,protect()) )] ) + -0.88 + dog
assert bar(-1) : "One can not simply parse himself"
def protect(x){
	if(betray(foo(protect(),COLS))){
	if(-mislead()){
	if(ROWS){
	-73;
	x
};
	if(bar(-30.3,foo(y))){
	x += ( betray(mislead(( ( Sansa ) )),COLS) );
	dog
} else {

};
	Hodor /= --COLS / -Stark
} else {
	( 53 );
	x /= destroy(TABLE[dog][( Stark * -COLS + 0.89 )],COLS);
	if(Stark){
	Arya -= COLS;
	dog *= Ygritte
}
}
};
	y -= Hodor - -ROWS
}
var Sansa = ( betray() ) / -99
def TABLE[-( x )][k] {
	x -= 94;
	if(rule(foo(mislead(Ygritte),( COLS )),COLS)){
	Jon /= COLS;
	if(-0.87){
	-1
} else {
	if(COLS){
	if(TABLE[Hodor][1]){

} else {
	if(ROWS){
	if(-880.44){
	( ( ( ( --rule(destroy(mislead(0.62),--16)) ) ) - ROWS ) );
	x *= ROWS
};
	if(0.9){
	y += ( ( bar(betray(TABLE[rule(destroy(TABLE[protect(-20,TABLE[( -42 )][0.04])][betray(rule(1) - 0.67)],protect(-Jon,( ---14 - ( ROWS ) ),-0.79)))][-1] / 1 - protect(( 29 ),Arya,ROWS) - TABLE[x][-Stark / ( ( Ygritte ) / 29 )],COLS,TABLE[ROWS][-57]),Arya) ) );
	if(-46){
	x;
	Ygritte -= ( Stark + ROWS ) * TABLE[COLS][COLS] + -46
} else {
	if(-TABLE[-0.46 / Stark][--( -( --0.83 ) + ROWS ) - 920.004]){
	Arya += -1;
	Sansa += TABLE[( TABLE[( 460.01 )][1] )][y]
} else {
	if(dog){
	Stark;
	( ROWS );
	if(( COLS ) + ( TABLE[( ( destroy(Ygritte) + 0.22 ) )][Ygritte] ) * COLS){
	Hodor *= -1;
	TABLE[0.34][mislead(( TABLE[COLS][mislead(-0.75)] * 1 ))]
} else {

}
} else {

};
	if(( Sansa )){

}
};
	Sansa
}
} else {
	foo(ROWS);
	Stark += COLS;
	Arya
}
}
};
	if(protect(-Hodor)){

} else {

}
};
	dog;
	if(foo(( --220.8227 ),betray(),-( x - TABLE[--0.91 + Ygritte][destroy()] ))){
	-( rule(--ROWS) );
	if(Stark){
	if(Hodor){

}
} else {
	if(Jon){
	dog *= -53 * --bar(ROWS) - -0.42;
	if(-4){
	if(--0.32 / -51 + 99 - ( Sansa )){
	x += -Ygritte;
	if(( ( betray() ) )){
	Arya;
	dog
} else {
	Hodor -= ROWS;
	if(COLS){
	rule()
};
	Arya += ( protect() + COLS )
};
	Stark
};
	bar(1,-35,( ----Hodor - dog / ROWS / 62 ))
} else {
	-protect(foo(COLS));
	if(( COLS ) * ( -94 )){
	if(Arya){
	Stark += protect()
}
}
}
} else {
	if(-ROWS){
	x += bar(( ( ( rule(TABLE[( destroy() ) + destroy() - ROWS - ROWS][-750.452] * ROWS) ) ) ) * --34);
	y /= foo(12);
	if(-( ( ( 1 ) ) )){
	if(0.49){
	dog -= y
}
}
} else {
	if(Sansa){
	y *= ( 40 );
	if(ROWS){
	Ygritte /= TABLE[TABLE[( ( ( -0.53 ) ) )][-560.822]][Arya + destroy(foo(TABLE[COLS][bar(protect(-COLS,-( ROWS )),-0.89)],( -ROWS )),Arya,Jon)]
} else {
	if(-y){
	if(-y * protect(1,ROWS)){
	if(Stark){
	dog += -y
} else {

}
}
};
	if(--bar(-90,destroy()) - TABLE[-3][-Jon]){
	if(protect(Jon,( ( ---ROWS ) ))){
	if(-13 - foo(( x ),( 490.121 ) + ( foo(-( mislead() ),-ROWS + Jon + ( -( Stark / 0.3 - ( ROWS ) - COLS / 22 / -( TABLE[rule(Hodor)][Hodor] ) * -480.9 ) * -y + -bar(( ( 1 ) ),TABLE[( -dog )][Stark],-72 * Hodor) )) ),TABLE[ROWS][Arya]) - ROWS){
	Jon -= protect(Jon);
	destroy(( COLS / ( ( -( COLS ) / betray(-ROWS + Ygritte / --TABLE[-56][TABLE[destroy(830.2)][bar(Arya)]],Hodor) ) - 520.716 ) ),Arya * ( protect(-0.85,( ( ( 53 ) ) )) ))
} else {
	if(COLS){
	COLS - ( TABLE[ROWS][ROWS - -200.108] )
} else {
	Hodor -= ( -650.0951 - Ygritte );
	Hodor *= ( -Arya + -ROWS / --( -x ) - dog + ROWS ) / ( -87 )
}
};
	Ygritte *= -0.58
};
	foo(--81) + --160.822 * ( Ygritte )
} else {
	Ygritte += COLS;
	( -y - -( ( 71 ) ) + destroy() * COLS );
	-destroy()
}
}
} else {

};
	y /= 860.9515
}
};
	if(( ROWS )){
	x /= -foo(COLS,Sansa);
	-58
};
	Arya *= 62 / -protect(0.43)
};
	x += COLS + TABLE[-( y )][-850.4603 + bar() / Ygritte]
}
}
}
}
var Arya = ROWS
assert Jon * 0.18 : "Winter is coming"
def betray(y,Sansa,x){
	( ROWS );
	if(51 / ( foo(TABLE[TABLE[betray(COLS,TABLE[( x * 1 )][-0.6])][Arya]][TABLE[bar(-Hodor,protect(-( -( Ygritte ) - ----1 * ( foo(-betray() + rule(),x) ) - Hodor / -( Hodor ) + ( -0.87 ) * Ygritte ) / ( TABLE[rule(ROWS,( --COLS ) - Sansa)][-betray(--Hodor,ROWS)] ),COLS))][TABLE[0.6 * ( ( foo() + -1 * -0.31 + -Arya + protect(( -ROWS ) + 760.5,-130.1) - ( Arya ) ) + ( ROWS ) )][38] + -COLS] * ( ( mislead(dog,-17,-( ( 40 - Arya - Jon ) - ( ROWS ) )) ) )]) )){

} else {
	COLS;
	Stark;
	-240.36 - Sansa
};
	dog -= 95
}
var y = Hodor
def TABLE[-1][k] {
	if(( ( ( 0.88 ) ) ) - protect()){
	betray();
	x /= --( --610.989 + -Stark )
} else {
	bar(( dog ));
	Arya
};
	if(--1){

}
}
def TABLE[0.91][k] {

}
def TABLE[-Hodor][j] {
	-130.427
}
assert -60.535 + ( y ) : "What do we say to the Lord of Death?"
var Ygritte = -0.29
def TABLE[( -y )][i] {
	Arya += ( Jon )
}
def TABLE[--y][j] {
	COLS;
	if(-( Hodor + COLS - protect(( destroy(ROWS - -63 / --COLS + TABLE[dog][bar(TABLE[dog][TABLE[x][Stark]] + 0.04,( foo(bar(y) - ( destroy(-1) ) / mislead(),Ygritte) ),Jon * TABLE[-betray(( -Sansa ),destroy())][Stark])] / COLS) ),-0.91) / COLS / TABLE[COLS][Jon] / -foo(-1) / x )){
	if(( betray(foo(betray(( y )) + -1,COLS),COLS) )){
	destroy(betray(TABLE[( ( bar() ) )][Jon])) + protect(rule(-0.56,-0.81)) - -28;
	Stark *= 62;
	if(Hodor){
	Ygritte /= COLS;
	-bar(COLS,( ( -0.26 ) ));
	if(foo(Jon)){
	if(Arya){
	Sansa /= Stark;
	if(bar(COLS,ROWS / TABLE[-59][Stark])){
	betray();
	-( COLS )
}
} else {
	rule(COLS,280.06,( destroy(( TABLE[COLS][ROWS] )) ));
	--58
};
	if(rule(Arya,Hodor * -0.1)){
	if(( -Jon - foo(-( 1 - destroy(Ygritte) * -23 ),( -0.18 )) / dog + Sansa )){
	y -= protect(TABLE[( betray(destroy(TABLE[foo(( --990.79 ),( Stark ) / -destroy(bar(-TABLE[mislead(--530.43)][1] - ROWS,-53),0.44))][-0.3],-0.33),COLS) - 75 / TABLE[protect(TABLE[TABLE[--( 58 )][TABLE[rule(-660.3 * ROWS)][-( Hodor )]]][( bar(TABLE[dog + -Sansa][Jon],620.816) )],---( Sansa ))][protect(( 0.67 ))] + 18 * Sansa )][destroy(( -Arya ),TABLE[-ROWS][Stark])],Ygritte);
	if(Arya){
	if(( -45 )){
	if(-x){
	if(-mislead(-1) - -36){
	if(Ygritte){
	x -= foo(Hodor);
	if(1){

}
} else {
	-( ROWS );
	ROWS;
	y += mislead(-0.96,mislead(ROWS,-foo(-41) + TABLE[x][74]))
}
};
	if(--x - foo(-( bar() ) / -ROWS,-foo(COLS + bar(( -( ( COLS * Arya - rule(--0.68 * rule(Ygritte * --220.2869 / ( Stark * Arya - destroy(COLS,TABLE[TABLE[( ( ROWS ) )][-7]][--62 / -0.6 - ( ( ( -ROWS ) ) ) - Sansa]) + rule(betray(TABLE[protect(--betray(--( ( foo(ROWS) ) ),-520.836) + -( Sansa ),( COLS ))][TABLE[( COLS * ( -Sansa ) )][ROWS]],ROWS * Stark) - 0.31 * destroy(89,rule()),ROWS) ),19),Arya,1) * 1 ) + COLS ) )),TABLE[rule(x,-870.5927,Hodor)][0.66 * ( TABLE[dog][protect(( bar(-TABLE[betray()][bar(-( dog ),protect(bar(ROWS,mislead(TABLE[( -destroy(betray(),rule()) )][TABLE[COLS / -ROWS + COLS][-destroy(31)] * 0.34] * --ROWS + 0.38,Stark,( COLS / COLS / Sansa ))) + ( x )),x + Sansa)],bar(( ( betray(Hodor,-destroy(( 50 + -destroy(( COLS ) + TABLE[-bar(COLS,( rule(( Ygritte - mislead() ) - ( protect(-68,ROWS) )) ) / 1 / COLS)][foo(( -44 ) + 53)]) )),-( ( -Arya ) - Jon )) ) ),0.95)) + -ROWS ),y) * ( y - ( Stark ) )] - -Sansa )]))){
	Jon += Ygritte;
	Arya *= -0.04
}
}
}
};
	( y )
};
	if(mislead(--31 + -COLS,23)){

} else {
	if(1){
	Stark -= ( -0.69 ) / rule(0.21,Jon);
	TABLE[-y - -0.21][rule(0.46)] + ( Stark - COLS );
	-75
};
	if(COLS){
	if(--74){

} else {
	( -destroy(ROWS,( destroy(-( ( -bar(( -Hodor ),rule(-destroy(),y)) ) ),Hodor) ),--46) )
};
	Stark -= ( bar(( -Sansa ),-410.1,( -( x ) )) );
	Hodor *= --0.51 - TABLE[-mislead(-destroy(destroy(foo(),x - ROWS * 0.59) + COLS,( Ygritte * protect() )),betray(COLS,( betray(( ( TABLE[-( -54 )][Hodor] ) ) - x * 63 * Sansa) ) / rule(( ROWS ),-0.01 - 690.9,-1),-foo(-destroy(--y - ( x ),COLS,-destroy()),-0.38) * -0.71))][mislead(bar())]
}
}
} else {
	( Jon );
	if(Sansa * TABLE[mislead(destroy(-protect() * -0.24,rule()),rule(protect()))][( 1 ) * ROWS] + destroy(-0.08 + x,ROWS,( ( rule(1) ) )) / -1){
	-( Jon ) - -COLS / foo();
	Ygritte /= ROWS + Hodor / -0.54
} else {
	if(TABLE[foo(betray(53 + -0.32,protect(( x ))) / protect(-( ( Hodor ) )),( Stark ))][-( ( ( betray() ) ) ) * ( -rule(-0.16,21) + 15 ) + bar(--x,---foo() - Sansa)]){
	protect(rule(6,( ( ( dog ) ) )) + -( COLS ) + -Hodor,bar(ROWS) * -770.14);
	Sansa *= 52 + Jon / -39;
	if(y){
	x /= destroy() - ( y ) - betray(( ( COLS ) ),destroy(Stark,COLS,--COLS));
	protect(protect(TABLE[--( -1 )][-0.16]))
}
}
};
	dog *= 530.7194
}
}
} else {
	if(destroy(-Jon,( ROWS - ( Arya ) / protect(betray(-COLS) / -1,( -97 )) - -ROWS / ( y ) * 240.66 / TABLE[x][-Jon] ))){
	( ( ( ROWS ) ) );
	if(Arya){
	( -230.255 );
	Hodor += ROWS;
	if(--( mislead(( COLS ) * -780.4,-ROWS,COLS) ) + -( rule(dog,COLS) ) + -0.2){
	dog += foo(COLS,( -( TABLE[-( Ygritte )][-COLS - ( -( destroy() ) )] - destroy(( ( 0.11 ) / --100.3097 )) ) ))
}
};
	Sansa *= Hodor
} else {
	Stark += -Jon
}
}
};
	--Stark
} else {
	dog *= destroy() - TABLE[( Arya )][Jon];
	( ( ( ( ROWS ) ) ) )
};
	foo(Jon,-( Arya ))
}
def TABLE[( protect(foo(dog)) )][i] {
	if(--0.51 * ROWS){
	if(-rule(COLS,TABLE[protect(rule(( dog ) + -0.82),dog)][( Sansa )],-( Jon ) / Sansa)){
	Ygritte *= -( Jon );
	Arya -= Jon
}
} else {

}
}
def destroy(Arya){

}
def foo(Arya){
	if(bar(-1) - Hodor * COLS){
	if(TABLE[( mislead(ROWS) )][( 75 )]){
	Hodor /= 650.11;
	-protect(Stark)
};
	Arya
} else {

};
	y /= 0.38 / x
}
def TABLE[ROWS][i] {
	x -= TABLE[1][( Stark )] - rule(ROWS,( ( TABLE[-ROWS][( betray(dog,( COLS )) )] ) ));
	betray(ROWS,ROWS + ( -1 ));
	Ygritte -= -( ROWS - ( -320.977 + -( Sansa ) ) )
}
def foo(Hodor,Hodor){
	if(protect(( ROWS - mislead(840.459,betray()) ),Sansa / COLS)){
	if(---0.72 / ( ( -( destroy(mislead(COLS - x - Hodor,Arya / 1,betray(-5,( -Ygritte ),-Hodor))) ) / --( Stark ) + rule(Hodor,ROWS) ) - TABLE[-38][foo(( Hodor ))] ) - ( -( ROWS ) + ( TABLE[ROWS - mislead(ROWS,mislead(TABLE[COLS][-220.523]),( protect(Jon,destroy(-( ROWS ),-1 / x * ROWS / -Jon,( rule(( mislead(-0.55,-1,Jon) ),TABLE[( TABLE[destroy() / 85][43] / Arya - rule(( -100 ) / Sansa) * --mislead() + -24 )][-( 68 )]) ))) / TABLE[Stark - -x][0.67] ) * -betray(Arya * ( ( protect(TABLE[-dog][( ( x ) )] / ( mislead(( -COLS * ( bar(foo(COLS,Sansa + --Ygritte - ( mislead(-Sansa,-COLS) - Sansa / -0.97 ) / Arya * -1),( --Stark )) ) ),Hodor,( -ROWS )) ),-0.7,Jon) ) )) * ---1 * x / --bar())][( Sansa )] ) )){

} else {

}
};
	Ygritte -= -38;
	protect()
}
var dog = betray(-1)
assert -Jon : "Fear cuts deeper than swords."
def destroy(Stark,Sansa,Ygritte){
	if(( betray(( y ),-( protect() ) - ( -( bar() ) )) )){
	rule(Sansa)
} else {
	if(-( TABLE[betray()][( -protect(ROWS,--y + -protect() / ROWS,( --0.99 )) - --27 - ( ( ( 0.81 ) ) ) )] )){

}
}
}
def rule(Jon){
	if(-TABLE[foo(protect(),Stark)][bar(-64)]){
	12
} else {

};
	Sansa
}
var Stark = bar(( -46 ),x,Hodor)
def TABLE[( Arya + ( 76 ) ) * -27 - -( 0.37 )][k] {
	if(Ygritte){
	Stark -= -920.07;
	if(50.69 / y - 0.02 / -20){
	y -= -0.29 * Arya - destroy(dog);
	-72 + ROWS;
	if(-0.28){
	Ygritte += ROWS
}
} else {

}
}
}
assert ( -Jon ) : "Fear cuts deeper than swords."
var Sansa = -destroy(ROWS + Arya)
def TABLE[-1][i] {

}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = Stark * Arya
assert -71 : "Winter is coming"
def TABLE[y][i] {
	Jon -= ( TABLE[Sansa][--780.2] + 70 )
}
var Arya = Sansa
var x = COLS
def rule(){
	x += Hodor;
	Ygritte -= bar(COLS,( foo(Arya) ) + ROWS / ROWS)
}
assert y : "What do we say to the Lord of Death?"
def TABLE[COLS][k] {
	Arya += -COLS;
	if(Sansa){
	Jon += ( ROWS );
	ROWS
}
}
def bar(dog){
	COLS;
	x += TABLE[dog][Jon]
}
def bar(dog){

}
assert ( 1 ) / ROWS / --TABLE[( destroy(630.49) ) + destroy(( ( COLS * ( Ygritte - destroy(protect(mislead(ROWS)),Hodor) ) ) + 0.09 ),y)][( -32 )] : "Fear cuts deeper than swords."
assert foo(-destroy(( mislead() )) / mislead(-95) / -1 - ( ( TABLE[foo()][foo() / Arya] ) ),Arya / Stark) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( rule(( -30.081 ),Sansa) / mislead() ) : "Winter is coming"
assert foo() : "Fear cuts deeper than swords."
var y = -0.72
def destroy(x){
	if(x){
	if(1){
	Ygritte *= ROWS;
	if(0.26){
	if(x){
	if(( ( -1 ) ) * COLS){
	Hodor /= ( ROWS )
} else {
	if(ROWS){
	bar(y + TABLE[-0.93][ROWS]) + Ygritte;
	if(bar(--1 - ( ( Hodor ) ))){
	if(--( ( dog ) / -76 ) - mislead(betray(1,mislead(ROWS,y)))){
	if(1){
	protect()
};
	y;
	mislead(-0.71,bar(ROWS,mislead(( --1 - bar(( COLS ) + foo()) * ROWS ) + --ROWS + ROWS),4 + --0.17 * -( 290.62 * ( betray(( -foo(( foo() ),ROWS,--1) ),COLS,-3) ) )))
} else {

}
} else {
	protect(( ( -( ROWS ) ) ),( Sansa - ROWS ));
	if(0.99){

}
}
};
	Ygritte /= Stark;
	x /= Sansa
};
	if(mislead(betray(Hodor,-( -y ) + bar(rule(-betray() / bar(1,( protect(Arya,protect()) ))),y)) + Hodor - ( Jon / -( ( ROWS * x ) ) ))){
	Jon *= TABLE[rule(-0.37,destroy(( betray(-Ygritte) ),COLS,COLS))][---rule(-protect(rule(bar(-TABLE[--200][y] - -protect(ROWS) * ( COLS ) / -( -75 )),-880.5)),ROWS,-240.778)]
}
} else {
	Hodor -= betray();
	if(rule()){
	if(--0.25){
	if(-Ygritte){
	--9;
	( ( Ygritte ) )
} else {

};
	Stark /= ( 1 )
} else {
	Ygritte
};
	y *= -730.42
} else {
	( 830.409 );
	x += ( destroy() )
};
	if(1 + Arya){
	bar(-91);
	Ygritte += TABLE[mislead(-x)][-0.08] * -0.68
}
}
} else {

}
};
	Jon /= -0.97
} else {
	TABLE[dog][betray(Sansa,-1,Arya)] + ROWS - ( y ) - -( -TABLE[x][( ROWS - Stark )] ) * Ygritte;
	0.14;
	if(-( --0.05 )){

}
};
	x -= foo(-370.533);
	dog += -TABLE[ROWS][( ( ROWS ) - 98 * -mislead() )]
}
def TABLE[COLS][i] {
	x -= COLS
}
def TABLE[-protect(Jon,destroy(-foo(( 0.44 ),( -0.35 ),---420.458 / -73 - -710.427 * TABLE[--0.19 / destroy(( x ),Hodor)][foo(( mislead(-Arya) ),betray(( COLS )),betray(mislead(-3),-foo(),y) - ( foo(Hodor,-0.91) / mislead() ))]) - ( -Jon ) * Jon,Stark,ROWS))][i] {

}
def TABLE[ROWS * ( COLS ) + 1][k] {

}
def TABLE[-2 + ROWS][k] {
	Stark /= Arya;
	Arya -= --dog
}
def TABLE[-0.62][j] {
	Sansa -= mislead(( ( ( y ) ) ),( COLS )) - ( ( ( COLS ) ) ) + 0.8
}
def protect(Jon){
	if(ROWS){

};
	if(betray(COLS)){

} else {
	ROWS
}
}
var Arya = ( --1 + mislead(( ROWS ) / protect() / dog / ( ( --99 ) * rule(Ygritte,foo(COLS)) )) )
def destroy(){
	mislead(( Stark ) * ( 12 ) * mislead(1) + ROWS);
	-56
}
def TABLE[--foo(COLS) - 27 - TABLE[Sansa][-Ygritte * 260.992]][j] {
	dog /= -710.4369
}
assert Jon : "Nothing burns like the cold."
def protect(){
	if(-Sansa){
	dog;
	if(( -foo(protect(( -1 ),Stark)) * Arya + COLS * -420.3 ) * ( -1 )){

} else {
	Ygritte *= ROWS;
	y /= --130.1
};
	if(foo(TABLE[betray(Ygritte)][( -betray(ROWS * COLS * Ygritte,protect(dog,-0.95,mislead(-0.49,COLS))) )] - ( ROWS ),-0.55)){
	if(-770.86){
	x -= Hodor;
	y /= Ygritte * -TABLE[COLS][Ygritte] / COLS + -55
} else {
	-0.78 * 0.4
}
}
}
}
def rule(Sansa){
	if(-82){
	if(betray(COLS)){
	rule()
} else {
	Hodor -= ROWS;
	COLS + ( -COLS )
};
	if(x){
	ROWS;
	if(-COLS){
	y += TABLE[Hodor][COLS]
}
}
} else {

};
	-0.03 - -y - COLS
}
def TABLE[COLS][k] {
	if(dog * ( -Jon )){
	if(y){
	if(( -TABLE[Stark][( COLS ) * 470.33 - TABLE[COLS][ROWS] / TABLE[TABLE[-TABLE[-TABLE[ROWS][1] / 0.71][( -( ( -y / ( -1 / COLS ) + Stark ) ) )]][Hodor - mislead(betray(--ROWS - ROWS,Hodor) / ROWS,--ROWS / protect(-----bar(y),betray() + 240.36) - destroy(y / COLS,( Sansa ))) * TABLE[COLS][( --52 )]]][mislead(Arya,-1) / Hodor]] ) + Arya * COLS / mislead(ROWS,( ( 78 ) ))){
	COLS
};
	if(-92 / ( destroy() )){
	Jon;
	dog *= rule(ROWS,TABLE[( TABLE[80.71 / TABLE[dog][95] * destroy(( ( -TABLE[Sansa + -0.02][ROWS] ) )) - TABLE[betray(( ROWS ),70,TABLE[COLS][ROWS])][Hodor * ( TABLE[( --( Sansa ) )][TABLE[--1][TABLE[( -( -mislead(COLS,-0.83 / --61) ) / rule(--Jon,-protect(1,-mislead(foo(-130.7),( Stark )),--93)) )][bar(( x ),-ROWS)]]] )]][-( -foo(TABLE[Jon - mislead(dog / Hodor) * ( ( mislead(40.7) ) )][x],( ( -( ( ( x ) ) ) ) )) )] )][-y] * TABLE[Hodor][Hodor])
}
} else {
	Hodor *= ( -1 );
	if(510.759){
	-ROWS;
	x;
	Jon += Jon
}
};
	--ROWS;
	dog -= COLS
};
	if(Stark){
	0.63;
	if(TABLE[-TABLE[-0.93][Hodor]][-( COLS ) * ( protect(mislead(ROWS) - -( COLS ) - COLS,foo(( 15 ),destroy(-1))) )]){
	dog /= ( destroy(( Arya ),Jon,-420.41) * Stark );
	if(-1){
	dog -= Hodor;
	Jon *= -foo(( ( ( COLS ) - COLS ) - TABLE[Arya][TABLE[dog][Sansa]] * rule(TABLE[destroy(bar(bar(ROWS,foo(( COLS ) / -rule(TABLE[Stark][-COLS])),-foo(( ( Hodor ) * ( 0.95 ) - ( ( Hodor ) ) ) - dog / y,COLS,TABLE[-dog][820.309 / -390.1244])),TABLE[-Hodor + bar(--( 0.25 / --Stark ),--TABLE[( ( ( 0.2 ) ) )][( -9 )]) / -y][--45 - -0.7],-ROWS - -Hodor + rule(COLS)) * -Ygritte,110.853 + ROWS)][COLS],TABLE[COLS][TABLE[TABLE[protect()][-1]][foo(ROWS)]]) ),( ( --0.55 + -bar(-0.26) ) ),Stark)
};
	--720.7649
} else {
	if(-( Ygritte )){
	Jon *= Sansa
} else {
	( ROWS + betray(-Ygritte,Arya + TABLE[TABLE[destroy(( ( ( COLS ) ) ),dog,( betray(ROWS,-COLS) ))][Jon] / -10.8455][-y] + ROWS) )
};
	Ygritte
}
} else {

}
}
assert -19 : "What do we say to the Lord of Death?"
var y = ( Sansa )
assert --64 : "One can not simply parse himself"
def foo(Arya,dog){
	if(( Hodor ) * -( COLS )){
	if(foo(-dog,mislead(dog,36),ROWS)){
	-630.623 + ( ROWS ) / ROWS - bar(-1) * Hodor
};
	rule(betray(-43)) / ( ROWS )
} else {
	x /= Arya;
	if(rule(0.83 + Ygritte + mislead(-foo(Jon),ROWS) / TABLE[Ygritte][( Sansa )])){
	Arya -= TABLE[-Jon * -6][destroy(( destroy(-Sansa,rule(COLS),x) ),-Arya,Jon)];
	Stark += TABLE[COLS][mislead(COLS) - COLS]
} else {
	y /= -570.904
};
	protect(620.941,--150.5639,--Ygritte)
}
}
var y = 210.852
def mislead(Jon){
	Sansa += mislead(0.88,( -0.34 ))
}
def bar(){
	Arya /= destroy(-( x ) + rule(bar(Hodor,foo(( ( ROWS ) + -COLS + -Jon ) / ( Jon ),-( ( Stark ) ) / -bar(ROWS * COLS,0.13)),-0.28),-( Jon )))
}
def TABLE[( ( Hodor ) )][i] {
	if(( -720.3515 )){
	if(Arya){
	if(--20 + dog / ---0.64){
	-TABLE[Ygritte + bar(-86,( ( ( rule(-rule(COLS,ROWS),ROWS) ) ) ))][( ( Ygritte * ( -( -ROWS ) ) ) - dog )];
	dog *= ( -foo(protect(1)) );
	( ( -Stark ) )
}
};
	if(x){
	--58;
	if(( ROWS )){
	y += 30;
	if(x){
	if(Sansa){
	if(Arya + -12){
	Arya /= -37;
	dog -= COLS;
	if(( ROWS )){
	if(TABLE[-foo(( Stark )) + -protect() / --49 + TABLE[-76][ROWS]][rule(mislead())]){
	if(( Stark )){
	-TABLE[-ROWS][TABLE[bar(0.86,bar(bar(--45 / Hodor,rule(Arya,-Arya) + ( y ) - destroy(TABLE[betray(-0.81)][y]))))][mislead() - ROWS] - ( 0.89 )];
	if(rule(COLS,Sansa,ROWS)){

} else {
	Stark += Ygritte;
	Stark
};
	if(( 76 + 49 )){
	( rule(foo(( TABLE[--56][rule(COLS,-0.91)] * -y - ( TABLE[Stark][960] / Arya ) - -Sansa ),-destroy() - Stark - COLS),ROWS) )
} else {
	if(( ( -ROWS ) )){

};
	( -6 ) / 0.1;
	foo()
}
};
	mislead() + -( 930.2 / --Jon );
	-Sansa + 40
};
	Hodor -= ( ( --( -0.6 ) ) )
} else {
	if(ROWS + -95){
	if(( 1 )){
	Arya *= COLS / --63;
	ROWS + TABLE[Stark][dog]
};
	-86 + TABLE[-foo(( ( betray(betray()) ) ),--0.53 + ( -34 )) / ( -rule(Stark / bar(-610.36),dog,-foo(( x ))) * y )][x] + Ygritte;
	( --bar(x) )
}
}
}
};
	Arya /= ( -destroy(0.09,bar(-84,42)) )
} else {
	Jon *= destroy(( ( ( -( dog * -y ) / betray(0.89) ) ) - TABLE[protect(-14)][mislead(Ygritte,mislead(ROWS,( bar(( -0.29 ),betray(foo(-( Arya )))) )),foo(protect(Stark,dog,foo(-48))))] ))
}
}
} else {
	Arya;
	Hodor += Sansa + ( COLS ) + bar(COLS,foo())
}
} else {
	x;
	if(( betray(ROWS,--destroy(Stark),rule(--0.47 * -( ( -COLS + Sansa ) ) - Ygritte)) )){

} else {
	Hodor -= ( -TABLE[betray(Ygritte,-13) + ( -0.75 )][( ( betray(( ( ( Arya ) + -80.2 ) ),0.14) ) )] );
	if(10){
	if(( COLS )){
	if(-1){
	if(foo(( -( Hodor ) ),TABLE[dog][0.41])){
	dog /= ( destroy(mislead(( -0.29 ),-( ( --0.59 ) ),rule(93 * 0.74,( ROWS ))) / ( x ),destroy()) ) + --( destroy(Ygritte) ) / -COLS
} else {
	dog += mislead();
	x /= -rule(ROWS)
};
	Sansa -= Jon
};
	Ygritte *= ROWS;
	if(y){
	if(TABLE[ROWS][-COLS] / -Sansa * ( bar(COLS) )){

} else {
	destroy()
};
	if(( -0.74 )){
	Ygritte += TABLE[( COLS )][COLS]
} else {
	Arya *= ( -rule(betray(destroy(-0.43,Ygritte))) )
}
} else {

}
};
	Ygritte += -34
} else {

}
};
	Sansa += TABLE[protect(( -COLS ))][TABLE[mislead(-1,y + ROWS,dog)][( 660.9393 )]]
};
	Hodor *= protect(TABLE[COLS][TABLE[-COLS][destroy(43,( ( ( x ) ) ))]]);
	Sansa += -0.22
}
def TABLE[( ROWS )][i] {
	dog *= -( -34 )
}
def TABLE[betray(-ROWS) - -TABLE[mislead()][Stark]][i] {
	Jon /= ROWS
}
def TABLE[rule(foo(( Sansa ),0.13 - -0.7),rule(10) - -0.89,--( -( -destroy(-51 + ( ( TABLE[-0.62][( -Arya )] ) ),TABLE[rule(-rule(x,protect(rule(protect(Jon),TABLE[77][y / TABLE[COLS][-1 + -51] / betray(y,0.37)]))),( ( -bar(foo() + ( 54 )) + x + 0.35 ) - ( Jon ) ))][-ROWS / y]) ) ))][i] {
	Stark += -protect();
	Ygritte += --0.25;
	ROWS
}
def bar(Jon){
	if(( 67 )){

};
	if(( destroy(protect(dog,-0.55 - destroy(bar(),-COLS / Jon),ROWS) / -protect(Ygritte,mislead(COLS,rule(protect(destroy(Sansa,bar(-0.34),y),bar(--Stark + -0.95),TABLE[0.12][protect(COLS)])))),ROWS) )){
	if(--97){
	47
}
}
}
var Jon = 59
assert -340.49 : "Winter is coming"
def TABLE[( -76 )][j] {
	if(mislead(bar(),-0.84)){
	Stark += -( COLS * x );
	TABLE[57][-Hodor]
} else {

};
	0.3;
	y += --Sansa * TABLE[52][( ROWS - TABLE[destroy(Arya - Ygritte,( ( Ygritte ) ))][( bar(-91) )] * -500.63 )]
}
assert ( -43 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Stark : "What do we say to the Lord of Death?"
assert Stark : "Fear cuts deeper than swords."
var Ygritte = ROWS
def TABLE[-81][k] {
	Arya += ( protect(Jon) ) - betray(( ( Ygritte ) ) * 910.16,( -0.56 ));
	if(Stark){

}
}
def betray(Arya,x){
	if(dog){
	if(destroy(TABLE[COLS][-betray(Arya,destroy(Sansa,-50),betray(dog,( ( --COLS ) )))],Sansa + -foo(rule(ROWS,( -x * ( ( ( -1 ) ) ) )),---0.86 / betray(-38,-rule(TABLE[( destroy(protect(Hodor)) )][foo(COLS,( COLS ),mislead()) * 1]) / mislead()),0.96 * -0.05) * -COLS,-bar(betray(-ROWS + mislead(( -( Sansa ) )) - rule(bar(-COLS,1),y),---x * ROWS)))){
	if(ROWS){
	Stark += -0.42;
	( -710.75 );
	Stark -= ( -mislead(-dog,foo(Arya,-( -49 ) / ( ROWS ),betray(mislead(),0.62))) - 14 )
} else {
	dog /= Hodor;
	if(betray(( dog ),protect(-( ( -93 ) )))){
	-ROWS + 95 / -( x ) + foo(ROWS,0.15,( -Hodor )) / COLS * foo(ROWS);
	Hodor /= bar(dog)
} else {
	mislead(-0.41 / COLS,y,-COLS / 7 * mislead(( COLS ),mislead(ROWS,7)));
	dog
}
};
	if(-40 / betray(Ygritte,-1)){
	dog *= COLS;
	if(TABLE[Hodor][-destroy(-1,Jon)]){
	x - Ygritte
} else {
	( ROWS - -89 + -rule(mislead(14) / Stark / ( Stark ),-2,dog) );
	-0.05
};
	-COLS
} else {
	0.01;
	Hodor *= foo(dog)
}
} else {
	( Stark )
}
} else {
	Arya /= -1;
	COLS
};
	x *= 600.421;
	if(COLS){
	if(foo(TABLE[TABLE[foo(protect(0.32),( x ))][destroy(Jon,0.13)]][( 40 )])){
	if(protect(--COLS,--COLS,-601)){

}
};
	COLS
} else {
	if(Stark + COLS){
	if(Jon){
	if(destroy(( -1 ))){
	( 1 )
} else {
	Stark -= ( ROWS )
}
} else {

}
} else {
	if(mislead(( Sansa ),-620.91 / -75,-720.758 * TABLE[Hodor][0.13])){
	if(COLS){

} else {
	( TABLE[-59][rule(rule(-Ygritte))] )
};
	( 81 * Jon )
} else {
	dog -= COLS + Sansa
}
};
	x /= COLS;
	Hodor /= ( dog )
}
}
def protect(y,dog,x){

}
def protect(Ygritte,Ygritte,Ygritte){
	if(24){
	Hodor /= -0.86
} else {
	Hodor /= 490.99;
	-y
}
}
def TABLE[rule() + TABLE[TABLE[COLS][66]][COLS]][i] {
	if(-x){
	if(TABLE[COLS][-( -1 )] + Stark){

}
} else {

}
}
def bar(){

}
def TABLE[( --mislead(-Hodor * TABLE[-40 + -( betray(0.34,( ROWS ),( Jon ) / 1) )][foo(( destroy() ) - --0.41 * -1 + ( Arya ),( ROWS )) / -mislead(ROWS)],-y,Ygritte) )][i] {
	Ygritte /= foo(-COLS) + rule()
}
var y = ( protect(TABLE[( TABLE[-0.12][x] + 1 - ( ( TABLE[( mislead(-89,( -0.92 )) )][( dog )] ) ) )][mislead(Ygritte,-Stark,foo(ROWS,-38,-x / -( -Ygritte - destroy() * -320.982 * 0.46 ) / 1 - betray(--1 * -( ( y ) ))))],( Arya )) - bar(( ROWS ) - Sansa + ( foo(-rule(COLS,x) * --( -0.97 ) - 0.28) ),450.37,( 0.07 )) + -bar() )
var Arya = ( TABLE[--( TABLE[14][-TABLE[-( ( destroy(( mislead(-x) )) ) )][bar(betray())] + TABLE[--31][COLS]] * 10 )][( COLS )] - ( ( ( ROWS ) ) ) )
var Arya = -0.95
def TABLE[-( Ygritte )][i] {
	if(bar(-1)){

}
}
assert protect() - TABLE[protect(98)][( Sansa )] + x * -27 / COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert 93 : "Nothing burns like the cold."
var y = -ROWS
var y = 0.89
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(x,Sansa){
	Hodor *= 10.6;
	if(Stark){
	Ygritte += -93
} else {
	y *= ROWS / protect(81,-( TABLE[COLS][COLS] ))
}
}
assert 810.01 : "Nothing burns like the cold."
var y = -COLS
var dog = COLS
def foo(Ygritte,x){
	betray(Hodor,betray() * ( COLS ),( Jon ));
	Ygritte /= ROWS
}
def TABLE[TABLE[foo(Ygritte / -0.11,( y ),-ROWS + ( foo(COLS) ))][dog] * ( Ygritte )][k] {
	Stark += dog;
	Ygritte
}
def bar(Jon,x,Stark){
	if(protect(x,ROWS,Jon)){
	if(-( -( TABLE[COLS][destroy(bar())] ) )){
	Arya *= bar(ROWS)
};
	if(-( bar(Stark) )){

}
}
}
def TABLE[-290.8][i] {
	if(-mislead(( ( bar(( rule(( -( 0.81 ) ) - -y) ) * Hodor) ) ),( Hodor ),Hodor)){
	bar(Arya);
	Stark
} else {
	if(-( Sansa / ( Stark ) + rule(Stark) ) - foo(291,-0.28) - ( ---TABLE[---( TABLE[y][rule(1 - ( ( COLS ) ) / y,-0.23)] ) * Ygritte / ( -1 )][-44] )){
	if(destroy(Hodor,0.9)){

} else {
	dog *= -72 - ( ( ( 260.52 ) * bar(rule(0.55 * -( COLS )),-52) ) );
	y += bar(( foo(Jon) ),destroy(ROWS,Stark * 57));
	if(( -54 )){
	y *= ROWS;
	--1;
	if(7){
	dog -= ( -( -COLS * --Stark - 4 * Sansa ) )
}
}
}
};
	Stark /= -( COLS ) + ROWS
}
}
var y = COLS / ( ROWS ) + -y
var Stark = -rule(betray(( betray(-( y ),-( dog ) * ROWS) ) / -3,( betray(destroy(x,y,Ygritte + ( rule(-y) )),( destroy(mislead(ROWS,-foo(( ---0.09 + ( TABLE[( ( ROWS ) )][ROWS] - ROWS + -destroy(-Hodor) * --x / TABLE[ROWS][ROWS] ) ),TABLE[COLS][y]) + -45),TABLE[Jon][( Arya / 44 + ( -betray(-Stark,--0.48) ) - -( -0.05 ) )] - COLS) ),bar(mislead(( betray() ),Sansa),940.36) + TABLE[rule(protect(),-dog)][( 0.55 ) + COLS]) ) - Stark))
assert --530.79 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[x / ( -1 - -( ( Ygritte - rule(--Arya,( mislead(-49,420.97 - ( ROWS )) )) ) ) )][j] {
	( ( ( TABLE[620.472][-( -Arya * destroy(( dog ),COLS,0.32) )] / bar(foo(-ROWS,betray(( -foo() )),( -13 ))) ) ) );
	Jon /= -0.85
}
def foo(Jon,Sansa,Sansa){
	Sansa += ROWS
}
assert ( ( -protect(ROWS,( rule(COLS) )) ) / Ygritte ) : "One can not simply parse himself"
def TABLE[ROWS][i] {
	Jon /= -29;
	ROWS
}
assert ( ( ( -Ygritte ) ) + dog ) : "Nothing burns like the cold."
var x = Stark
assert foo() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(Hodor,x,Ygritte){

}
var dog = destroy() - bar(dog,ROWS / bar(ROWS,-0.01))
def destroy(Stark){
	Arya *= -Sansa;
	if(foo(Arya,-Jon)){
	ROWS;
	-0.99 / Sansa
} else {
	--810.162 - -180.321;
	dog + --0.67 + -( rule() ) * --12 * --0.76 - rule(( -rule(( -0.05 )) * ROWS ),protect(Stark,0.39,foo(Ygritte) + COLS))
}
}
def protect(Sansa,Sansa,Hodor){
	bar(-1 * rule(-dog,( 0.79 ) / COLS * -0.85,destroy(TABLE[( ( ( --( rule(-300.2403 * betray(-( bar(-ROWS - ( COLS - -( --0.59 * Jon + ( 0.06 - -dog ) ) )) ) * -ROWS / TABLE[( -TABLE[4][protect(Sansa)] )][-0.37 / ( TABLE[protect()][( betray(foo(1)) )] )] * Stark),( ROWS )) ) + y ) ) )][TABLE[---730.38][( ROWS ) + 45 / -y]],protect() * 0.04)),-Ygritte)
}
def rule(x,Hodor,Ygritte){
	TABLE[( ( --ROWS ) )][Ygritte];
	x /= ROWS;
	if(COLS){
	Stark -= 0.44;
	destroy(ROWS,TABLE[( Jon )][( betray(( ( ( Stark ) ) ) + Jon) ) * 0.3])
} else {
	if(-0.53){
	if(rule(---TABLE[rule(Sansa,Ygritte)][( -( -0.85 ) )],Ygritte - Hodor)){
	Stark *= ( ( ( -40.88 ) ) );
	TABLE[0.79][( -0.91 )];
	if(ROWS){
	-0.84
}
} else {

};
	protect(mislead(COLS) / rule(ROWS,-0.65))
};
	( -9 + ( COLS ) / COLS )
}
}
def TABLE[-COLS][k] {

}
assert -0.46 : "What do we say to the Lord of Death?"
var x = x
var Stark = COLS
assert ( COLS ) : "Winter is coming"
def TABLE[0.17][k] {
	protect()
}
var Hodor = ( -0.18 )
var y = ( ( ROWS ) )
var y = destroy(TABLE[1 / COLS][-1],( betray(( --0.78 ),-940.7,--( foo(-1) )) ))
var Jon = -0.88 + COLS
var Hodor = TABLE[COLS][Stark]
def mislead(Stark,Arya){
	if(( 21 )){
	Arya /= ( dog );
	Jon /= 720.97
} else {
	if(--TABLE[-Stark][Jon]){

} else {
	-( -y ) * ( mislead(( -90.3 ),( ( mislead() ) ),Sansa) );
	Jon /= ( protect() )
}
};
	if(300.7732){
	Ygritte -= 8
}
}
var dog = ( x )
assert -57 : "What do we say to the Lord of Death?"
def TABLE[( -( ROWS * -COLS ) )][k] {
	Arya *= ( Arya )
}
var dog = y
def TABLE[-1][k] {

}
assert Sansa : "Winter is coming"
assert -0.46 * y : "Fear cuts deeper than swords."
assert -250.2 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( ROWS ) / Jon : "Fear cuts deeper than swords."
def TABLE[protect(dog)][j] {
	dog += mislead() * -210.99 / 60 + --0.12 - ( Hodor );
	-bar(-0.42,( -ROWS ))
}
def betray(Arya,Sansa){
	Hodor;
	if(--1){
	if(dog){

} else {
	if(--0.81){
	Sansa += x;
	if(( 13 / TABLE[46][--Stark] - -x )){
	if(y){
	Jon /= x;
	if(Hodor){
	if(( 1 * Ygritte - ROWS - ( ( COLS ) ) * -350.419 / betray() )){
	Stark -= TABLE[-ROWS][( -Jon )]
};
	betray(COLS,( foo(destroy(-protect(( y / 0.14 ) + Ygritte - ( ROWS ) - --ROWS - bar(ROWS,x) * COLS - 53 * ( ( -0.58 ) )) - 120.71) + ( ( Sansa ) + -33 + 3 - -Sansa )) ),-850.6062)
}
}
} else {

};
	Sansa /= -210.93
} else {

}
}
}
}
def mislead(y,Ygritte,x){
	Jon /= ( mislead(-25,-72,-y) );
	Stark -= -( --1 ) - TABLE[--1][0.81];
	Jon
}
def destroy(Hodor,x){
	if(( Stark )){
	Hodor /= -protect(mislead(-COLS),foo(bar(( ( -protect(Jon) ) ),( destroy(TABLE[-( -Stark ) / mislead() - destroy(Sansa,--46,( Hodor ))][-y]) ),TABLE[y][TABLE[betray(650.04,ROWS,TABLE[mislead(Stark)][Hodor - Sansa])][Hodor * -Hodor]])) + ( protect(betray(ROWS,1)) ) - foo(----Stark,betray() / rule(-930.741))) * ( -7 );
	Hodor += -12;
	500.892
};
	if(foo(Sansa,COLS,-TABLE[Hodor][ROWS]) * Sansa){
	Sansa += -betray(-890.472)
} else {

}
}
assert destroy(( ( COLS ) ),-( Stark * -TABLE[-( ( -0.91 ) )][Hodor * ( TABLE[( x / Sansa ) - ( -COLS + ---1 ) * 0.28][destroy(mislead(Jon,( 470.9 )))] ) - 1] ),protect(( --30.528 ),740.518,Arya)) : "Fear cuts deeper than swords."
def TABLE[Ygritte][j] {
	Jon += x;
	Ygritte *= dog;
	Jon
}
var Arya = betray()
var x = protect(-( COLS ))
def TABLE[-12][j] {
	if(rule(ROWS,COLS)){
	if(destroy(-betray(1,-dog),( -Sansa ) * mislead(-0.06,y,COLS))){
	if(protect(TABLE[bar(-1,( Arya ))][mislead(rule(-rule(-foo(Stark + Ygritte,ROWS,--6) * TABLE[-Arya][foo(rule(ROWS + bar(),y,Sansa))]) / ( -350.32 )),Hodor,bar(( ( ( ( TABLE[y][-( 1 )] ) ) ) ),y,ROWS) / bar(destroy(),y,foo() / -890.5804))],-0.49,-1 * mislead())){
	Ygritte -= ( Jon )
};
	if(( -39 - TABLE[-( 0.92 )][( -TABLE[TABLE[TABLE[destroy(Sansa,rule(dog))][betray(( dog * COLS - ( Jon * 0.98 + -( --protect() ) - betray(( protect(COLS,protect(),0.6) ),1) ) ) - rule(-450.5,ROWS,-ROWS / ( Hodor )),-( ( ROWS ) ))]][( ( -0.97 * ( COLS ) ) )]][foo(ROWS / -0.58 - Jon) * TABLE[ROWS * --( -140.45 ) / 1 / ( ( -1 ) )][-0.62]] )] + 0.58 * betray(Arya / rule(ROWS,--( ( ( ( ( -y ) ) ) ) ) + x * COLS + -880.871 - Hodor),rule(ROWS,dog),COLS) ) * 1 - ( TABLE[( y ) - x][( y )] )){
	if(dog){
	x;
	rule(( ( -780.811 ) ) + ROWS);
	if(-Arya){
	y *= -1;
	if(( -0.82 )){
	Hodor -= -dog / rule(( ( ( betray(-0.96 / -Hodor,-23 * bar(TABLE[-0.13][y] + ( TABLE[-0.72][foo(protect(),rule(--TABLE[foo(( rule(-( 0.1821 ) - 58 + y,COLS) ),TABLE[-y][foo(-34,-y) - foo(1)],Hodor * ( ---( TABLE[destroy(-0.01 * ( Stark ) - 0.95)][--79] * COLS ) ))][--0.37],450.67,( Sansa )) + dog)] ) - -520.6321),0.33) ) ) ),-0.49,ROWS)
}
}
} else {
	0.94
};
	Ygritte -= Stark;
	COLS
} else {
	Ygritte *= -( ROWS / ( ( dog + ( ( -3 ) ) / Jon * Hodor / ( rule(TABLE[-( -0.9 ) - TABLE[-0.67][dog]][-ROWS],( protect(foo(TABLE[-10][Jon]) + betray(-foo(COLS) + Stark),Ygritte) ),-x) ) * ( ( -1 / -ROWS ) ) * ROWS * -( ( -1 ) ) ) ) );
	if(foo(0.29 / x,( y ))){
	Jon -= ( TABLE[-ROWS + ---dog * 1 + ROWS][Jon] );
	destroy(foo(),mislead(-0.95 - x,x,-0.83) / Hodor / ROWS,( protect() ))
}
}
} else {
	if(56 - ( Arya )){
	dog *= ( protect() );
	( Ygritte * -63 )
} else {

};
	Ygritte
};
	ROWS * 0.62
};
	( COLS );
	Arya
}
def bar(){
	Arya /= ( foo(COLS,destroy(( 0.35 ))) )
}
def foo(Jon){
	Jon -= TABLE[-0.7][( ( COLS ) )]
}
assert --1 / mislead(1,( -COLS )) : "One can not simply parse himself"
var y = ( ( -bar(mislead(-COLS + TABLE[betray(( Hodor ),-( -640.957 ))][ROWS]),Jon,Hodor) ) )
assert destroy() : "Winter is coming"
var Hodor = -( y )
def TABLE[Arya][k] {
	if(-( TABLE[( ( -( COLS ) ) / Sansa )][ROWS + --0.99 * -y] ) + Arya){
	Hodor /= ROWS
} else {
	dog += ROWS;
	if(( -protect() )){
	if(-25){
	if(foo(destroy(Sansa)) / ROWS){
	ROWS
} else {
	if(COLS){
	y -= ( --33 )
} else {

};
	y *= Jon
}
};
	Sansa /= TABLE[( -0.88 )][--TABLE[protect(TABLE[-0.68][Arya],-ROWS)][Sansa]] - -TABLE[TABLE[Hodor][ROWS] * 0.86][( -0.24 )]
};
	if(1){

} else {
	if(bar(( TABLE[-betray(-0.87,TABLE[( 1 - rule(bar()) )][betray()])][Stark] ),---0.58)){
	-1;
	mislead()
};
	x /= Ygritte
}
}
}
assert -13 / --0.71 : "Winter is coming"
var y = -ROWS
def foo(Arya,dog){
	if(( y )){
	if(-TABLE[Stark][rule(Arya)]){
	Ygritte /= -Arya
};
	y /= 12
} else {
	Stark
};
	if(Ygritte){
	protect(Jon);
	-Jon
} else {
	y -= -( ( ( betray() ) ) )
}
}
assert -0.21 : "One can not simply parse himself"
def foo(y){
	Arya / ( ( -TABLE[--Hodor][COLS] ) ) / 1
}
assert -TABLE[( -1 )][-0.77] : "Fear cuts deeper than swords."
def protect(y,dog){
	-1;
	if(( y )){
	-COLS - bar(rule(),-5 + ( ( Sansa ) ) / -39)
} else {
	if(---63 / --( rule(( ( protect() - mislead(34 - rule(ROWS) + 1,dog) ) ),ROWS,-COLS * protect(-Ygritte) - -COLS) ) * --0.66){
	Stark += Arya;
	Hodor *= -protect(y,--( 410.71 ),foo(( TABLE[destroy()][protect(-Sansa,-900.25 * ( COLS ) + ( 0.85 ) - Sansa,( protect(-betray(x + bar(foo(( -COLS ),--y),940.08 / Jon) * 0.8,TABLE[betray(ROWS)][-TABLE[bar(( foo(--mislead(),bar(-41,ROWS,ROWS) - ( rule(-( --86 ) * 990.17,protect() / foo(dog),( bar(rule(Sansa / --bar(),910.63)) )) * COLS ) * ROWS - ( ROWS )) ),1)][Ygritte]]) - ( -64 ),rule(ROWS,--32)) ))] - TABLE[-ROWS + ROWS][dog] ))) * ( COLS ) + betray(-bar(ROWS),Jon,TABLE[( Arya )][ROWS])
} else {
	dog;
	if(COLS){
	if(-80){
	if(( ROWS )){
	if(betray(Stark,-0.47)){
	Jon += ROWS - ( ROWS )
} else {

}
}
} else {

};
	y -= -TABLE[-0.15][-( protect(( ( Arya ) )) + 1 )];
	Hodor += Stark - --( -0.83 )
} else {
	COLS
}
};
	-11
}
}
var Arya = Hodor
def bar(Arya){
	Stark += ( -COLS + 41 - -0.8 );
	if(Arya){

} else {
	Stark;
	if(-0.62){
	if(Ygritte){
	Arya /= -( -destroy(dog,( ( ROWS ) / 1 / -52 )) ) + -25
} else {
	if(86){

};
	if(( COLS )){
	-( TABLE[-34][ROWS] );
	Jon *= ( Stark )
} else {
	if(-destroy(-0.33 * ( ROWS ),0.31) + TABLE[( -1 )][dog]){
	Jon *= -1
};
	( ( COLS ) )
}
};
	if(( x )){
	if(-mislead()){
	if(y * -mislead(foo(( -54 ),ROWS)) - -Jon){
	( ROWS )
};
	Arya;
	ROWS / -betray(( ( ( ROWS ) ) ))
} else {
	Arya;
	if(-mislead(( y ))){
	y -= ( betray(550.998,( Jon )) );
	if(--bar(ROWS,9) - ROWS){
	( Stark * Jon );
	if(-TABLE[1 / 61][ROWS]){
	x -= ( 66 )
} else {
	Jon /= protect(-0.82);
	Hodor *= foo(TABLE[0.35][-Sansa],( bar(Ygritte) ) + Arya)
}
}
}
}
} else {
	Sansa
};
	( -1 )
} else {
	rule()
}
};
	if(COLS){
	if(Jon){
	if(-ROWS){
	if(650.93){
	Stark;
	Sansa;
	if(Hodor){
	Stark;
	-1
} else {

}
};
	dog -= ( y )
} else {
	y *= Hodor
};
	if(betray(-1,foo(( 84 ),( x )))){
	Arya += -24;
	if(( ( ( -Arya ) ) )){
	Stark *= x
}
} else {
	if(-72 / ( Jon )){
	75;
	if(-( -10 )){
	68;
	Ygritte -= -1 / --0.65;
	Jon += COLS
}
} else {
	if(foo(ROWS) + Hodor){
	if(0.46){
	Stark *= ROWS
}
} else {
	if(-COLS){
	rule(-47 + -Sansa,COLS) + TABLE[-ROWS][--( ( ( betray(--82 + 0.9 + --( -destroy(-13,bar(destroy(TABLE[0.87][-1],dog,0.24)) / -51) )) ) - dog ) ) / TABLE[( rule(foo(mislead(-0.42 / destroy(Arya,( TABLE[TABLE[-0.15][ROWS]][mislead(93)] ))),( 580.636 ),bar(-Sansa,-Ygritte)) / ROWS,betray(0.53,-230.8073,-( ( COLS ) )),1) ) + destroy()][-COLS]] - TABLE[97][Jon] / COLS * -91 * -31 / Arya;
	if(( TABLE[-1][COLS] )){
	-COLS
};
	( 83 )
};
	y;
	-600.5934
}
};
	-92 * -71;
	Ygritte += COLS
}
}
} else {
	y /= ( ( COLS ) )
}
}
assert -COLS - protect(Jon) : "What do we say to the Lord of Death?"
assert ( Sansa ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-Arya - TABLE[dog * Arya][( 380.69 ) * -betray(34 * TABLE[ROWS][foo(COLS,rule(protect(-( -0.53 * -0.27 ),-0.98)))] - bar(56)) / bar(protect(COLS,COLS,mislead(protect() / Ygritte - ( destroy() ) * -0.2 * protect(( Ygritte * 0.93 ),bar(-480.1,dog,-0.4),COLS) * TABLE[betray(( mislead(Hodor,Ygritte,-COLS) ))][foo()],TABLE[-protect(destroy(COLS) / y,TABLE[ROWS][TABLE[-0.1][ROWS]])][930.397 / -Hodor + -dog + rule(ROWS,Hodor,-Stark + bar(Sansa,-TABLE[bar(77,( ( -TABLE[-0.25][( Hodor )] ) ),-rule())][rule(( COLS ) / -( betray(destroy(0.24),-bar(),( COLS + TABLE[( mislead(-protect(-0.64),( ( Jon * 990.43 - TABLE[( Ygritte ) - bar(ROWS) / -0.48][( -0.64 * COLS )] ) )) / bar(betray(-( -( mislead(destroy(-dog * ROWS,-( -760.98 ),Arya),-rule(destroy(--0.76,protect(Hodor,dog)))) ) - -ROWS ) - -COLS + TABLE[( foo() )][bar(x)] + 1),( -0.24 ) + ( -Jon ) + -Arya * COLS,protect(-46)) )][Arya - 7] )) ),rule(Sansa * ( ( ( dog - ( Sansa ) ) ) ) + bar(Hodor,bar(( bar(-110.8 - COLS - betray(91)) + -dog / mislead(( --bar() ) - Jon) ),-ROWS + Hodor,( ROWS - destroy(( ( ROWS ) )) ) + --0.04),-1)),ROWS)] / ( ---69 + betray(mislead(),-( ( -foo() / dog ) * -( ( rule(-47,-Stark) ) ) ) / -0.54) )) / Ygritte - bar(Stark,foo(Hodor,ROWS)))])) / -( dog ),COLS) / -( -88 / ROWS - 0.69 )]][k] {
	TABLE[bar(mislead(ROWS) - protect(( -bar(( ( TABLE[-foo(( Jon ),-96)][--COLS / -940.09] ) )) / destroy(--53,mislead(( -35 ))) ),-foo(-0.85 + y / ( ( x ) ) / TABLE[-Stark / TABLE[0.67][destroy()]][( Jon - Stark ) / 82]),( -31 )) - ( ( Hodor ) ))][COLS * -Ygritte * ROWS / Stark + -0.15 * Jon];
	Sansa += -22
}
assert -0.28 : "What do we say to the Lord of Death?"
def betray(Arya,x){
	-Jon
}
def TABLE[( Jon ) - TABLE[0.51][TABLE[--1][ROWS]] + ( --Ygritte )][k] {
	bar(52 * protect(Hodor,-65),-Sansa + -Sansa);
	if(-1 + TABLE[dog][--580.705 / -910.5 / ( ( -0.31 ) ) - foo(protect(Sansa * Arya,-87) * --280.9,COLS * 72)]){
	y;
	if(TABLE[-( -0.69 )][( ( ( -ROWS ) ) )]){
	dog /= ( Stark )
}
};
	( -0.27 )
}
def rule(Arya,x){
	foo() * Arya;
	Sansa /= ( TABLE[ROWS][-mislead(ROWS,bar(betray(),destroy(COLS,-( TABLE[( dog )][TABLE[TABLE[( -1 )][-1]][( -1 * -51 ) + dog] / -( --Ygritte ) / -70.413 * dog] ) - 93)) - -690.53,betray())] )
}
var dog = ( Sansa )
def foo(Hodor){
	-60
}
var Stark = -betray() / betray(( ROWS ),y)
var Hodor = -TABLE[mislead(betray(-bar(),destroy(Stark,-( 0.87 - -TABLE[---Jon * --48 / Stark / TABLE[Ygritte][ROWS - COLS]][-( ( COLS ) + -0.24 ) + rule()] ))))][foo(-0.13,0.78,( ( COLS ) ))]
assert -Arya : "Winter is coming"
def TABLE[-( mislead(rule(COLS,( TABLE[foo(( rule(TABLE[( Ygritte )][TABLE[( -1 - 0.09 )][Stark]]) )) - ( ( mislead(dog + ( -0.66 ),( bar(ROWS + dog,( mislead(mislead()) ),bar(( -0.4 ),--15)) * ( ROWS ) )) ) ) / TABLE[dog][Hodor] * ROWS][Jon] ),-49 / ROWS)) )][k] {
	foo(mislead(-1,TABLE[Sansa][TABLE[( ROWS )][Stark]] * -betray(Arya,-Arya) / COLS))
}
def TABLE[-1][j] {
	if(ROWS){
	1;
	x += 1
} else {
	ROWS
};
	Hodor *= COLS
}
def TABLE[TABLE[( ( protect(-( betray(COLS) ) * x,Arya) ) )][-y]][i] {
	-1 * ( 1 ) * --Hodor
}
def TABLE[COLS / --11][j] {
	Sansa *= -( -Hodor );
	x *= COLS;
	Stark -= ROWS
}
def bar(Sansa,Hodor){
	if(TABLE[COLS][( COLS )]){

} else {
	-( COLS / foo() );
	Hodor *= mislead(( -52 ),COLS)
};
	-protect(( 90 ),Ygritte,dog) * COLS;
	if(betray()){
	Hodor -= COLS;
	-18
} else {
	if(Jon){
	ROWS
}
}
}
assert rule(( -foo() ),ROWS) / ( bar() ) : "Fear cuts deeper than swords."
def TABLE[betray(-1)][i] {
	Jon -= foo(destroy(-1,x),( bar(COLS) + -protect(ROWS) + Jon ));
	dog /= ROWS;
	dog *= COLS
}
def TABLE[destroy(protect(TABLE[COLS][TABLE[-( y )][TABLE[Hodor][Arya]]],bar(COLS)) / Jon,Ygritte)][k] {
	0.4;
	x * ( TABLE[destroy(19,betray(1,0.02,( -290.456 )))][( Arya ) - Stark] ) - foo(Ygritte,-( --80.39 ),--970.0667) * x;
	dog += ( ( ( ( -1 ) ) + Hodor ) )
}
def TABLE[-87][k] {
	TABLE[1 / ( ( Ygritte ) )][rule(ROWS,betray(68,COLS,72))]
}
var Stark = ( -80 ) - ( -Jon )
var Ygritte = -47 * bar() * -0.95
assert ( 47 ) : "Fear cuts deeper than swords."
assert TABLE[--640.939][( Hodor / -9 )] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ROWS : "One can not simply parse himself"
assert ( betray(-( ( y ) )) ) : "What do we say to the Lord of Death?"
var Hodor = ( ( --87 ) )
assert mislead() : "Nothing burns like the cold."
var Hodor = -COLS + ( ( betray(18,COLS / 1) ) / TABLE[21][destroy(x) - --0.77] )
def protect(Stark){

}
def destroy(x,Ygritte,Jon){

}
def foo(){
	if(Stark - x){
	-82;
	if(betray(destroy(580.9,-78 - betray(-( ( ( COLS ) ) ),460.847) - COLS / protect(y)),0.23,-( ( Arya * foo(0.22) ) ))){
	--destroy();
	Arya -= TABLE[( foo() )][foo(-foo(-mislead(Ygritte,rule(0.81,-0.13)) + mislead(bar(-37,bar(--Arya / ( TABLE[--COLS * -880.65][bar(-0.89)] ) / --0.92 + ( COLS ) * ( bar(Hodor,betray(( destroy(protect(Stark - -92,protect(-90,destroy(COLS,( Jon )) / COLS),-0.52),ROWS,-0.87) ),( TABLE[27 + Sansa - TABLE[--0.59 + ( ROWS )][-( Arya )]][destroy(destroy(Stark * ( ( -10 ) ),--30 / 1 + -y)) * 29] )) - bar() / ( -5 )) ),-0.33)),ROWS),( -0.11 )),( ( -protect(1,-Jon / -230.8) ) ),-0.66) - -0.28]
};
	if(destroy()){
	betray(y,Hodor);
	ROWS
}
}
}
def TABLE[45][i] {
	if(0.13){
	if(Sansa){
	if(foo(COLS)){

} else {
	y *= -ROWS;
	Sansa += x
}
}
}
}
def foo(Jon){
	Arya -= x;
	0.43
}
var Arya = x
def foo(dog){
	if(Jon){
	if(foo(( ( y ) ) * -0.93)){
	ROWS
} else {
	Hodor /= x
}
} else {
	Jon *= -0.76;
	Ygritte *= ( ( y ) ) + -Stark;
	-ROWS * bar()
}
}
var dog = ( COLS )
def TABLE[--( x )][i] {
	if(Ygritte){
	Hodor *= ( Arya )
} else {
	Sansa -= ( -ROWS + -Arya ) - x
};
	Ygritte
}
assert mislead(TABLE[COLS][-y * ( -190.05 )],rule(),destroy(rule(TABLE[-destroy(( -310 * ( ( ROWS ) ) ),COLS)][dog],( 0.06 ),( --x + -1 * TABLE[mislead(COLS)][protect(x)] )))) : "Fear cuts deeper than swords."
assert x : "One can not simply parse himself"
var Ygritte = ( ( ROWS ) )
assert ROWS : "Winter is coming"
def TABLE[Arya][j] {
	if(-0.26 / TABLE[( ( ( --0.17 ) ) )][Sansa]){

} else {
	Sansa -= Sansa - COLS - COLS / TABLE[mislead()][1];
	x /= mislead(( -Sansa * bar(betray(-55) - -1,ROWS,betray(( foo() / ROWS ) * -( -TABLE[--1][TABLE[-( protect(( Stark - ( ---0.67 * protect(betray() - rule(( Arya )),destroy(y * -0.82 * ( 4 )) * ( ROWS )) ) ),-( -foo(ROWS,820.819) ),foo(0.55,dog,( -foo(destroy(-( ( rule(Jon,-COLS) ) )),0 / 40 + COLS,rule(Arya,ROWS - -65,-dog)) ))) )][Arya] - --TABLE[foo(dog)][-mislead()] / -0.06] ) - COLS / TABLE[0.63 + ( -COLS )][-mislead(( ( TABLE[( -betray(-TABLE[-1 / TABLE[TABLE[COLS][rule(-protect(( -Ygritte ),foo()),ROWS)]][ROWS] * Jon / TABLE[( ( destroy(y,TABLE[67][ROWS] - protect(( destroy(44,( rule() )) ),ROWS - betray(x),-dog - ( dog )) - Arya * 0.74,TABLE[( COLS )][mislead(TABLE[-ROWS][-( -0.36 ) - ( betray(( --dog ),-0.37 / --0.49) )],-0.03)]) ) )][750.698]][TABLE[( --( ( -( ( y ) ) / -42 ) ) )][ROWS]],bar(( destroy(x) ),Hodor,foo(betray(-( COLS ) / ROWS)))) )][-250.5 - -Hodor] ) ),( ROWS / --0.31 * dog ))] - ( Sansa - -COLS ))) )) / COLS + ( betray() )
};
	Jon /= mislead();
	if(TABLE[betray(protect(0.59,foo()) + -0.03)][protect(Hodor)]){

} else {
	Hodor -= dog;
	if(( ( -( ROWS ) ) )){
	( ROWS );
	TABLE[( 0.87 )][Hodor] - rule(-TABLE[( -( -mislead(200.49 * ( ROWS ),-( 0.7 )) / 220.55 ) )][( ( TABLE[( dog )][-80 - destroy(Hodor,( ( -80 ) ),TABLE[87][( TABLE[ROWS][-0.53] ) - 72])] - Sansa ) )]);
	destroy()
}
}
}
def betray(Sansa,y,Arya){
	if(0.37){

} else {
	( -600.59 );
	if(COLS){
	Jon /= -0.12;
	if(protect(mislead(ROWS,Ygritte * foo(ROWS) * -betray(( ( ( ( -( ( ( ROWS ) ) ) ) + ROWS ) ) ))),rule(-COLS + COLS),-1)){
	if(ROWS){
	Jon += ( destroy(( y ),-0.06) )
};
	x += COLS
}
}
};
	Ygritte /= -0.75;
	if(1){
	if(-670.48){
	x += COLS;
	if(Arya){
	Hodor;
	if(-81){

} else {
	ROWS
}
} else {
	if(-TABLE[ROWS][foo()] - ( bar(( -COLS / 0.23 ),( mislead(-95,( -8 + Arya * ( -Jon ) / 0.64 ),protect(ROWS)) )) )){
	if(-rule(-( Ygritte )) - TABLE[( COLS )][( -( Jon ) )]){
	dog *= Jon;
	x *= Hodor;
	( -ROWS )
};
	( ( -dog - protect(-Ygritte,60) - 820.8 ) );
	protect(COLS,0.93)
};
	if(-1){
	-0.51;
	--( 970.78 ) / ---81
} else {

}
}
} else {
	if(---9){
	Sansa /= y;
	Stark -= Arya
} else {
	Arya += ROWS
};
	if(--protect(--900.58,Stark,( Arya )) * Hodor + -0.96){
	Ygritte -= -0.64;
	--790.742
}
};
	-TABLE[betray(betray(Sansa,( 53 ) + protect(--protect(( Stark ),ROWS)) * TABLE[( Stark )][TABLE[( -0.91 )][( TABLE[( protect(COLS,Jon,( destroy(ROWS) )) )][-( -37 )] )]]),y)][TABLE[1][( ( -mislead(-0.72) ) )]];
	if(--COLS / rule(mislead(protect(),( ( COLS ) )),foo()) + ( ( ( --TABLE[destroy(-Hodor)][-Stark + foo(Stark / ( Sansa ),Sansa + TABLE[COLS][ROWS] + ( ( TABLE[COLS][( 38 )] ) ) / 81 * ( -0.83 ) + -( ( Sansa ) - Ygritte ) / ( --rule() + -( 0.84 ) * -TABLE[-( COLS )][( COLS ) - rule(-Arya,( ( COLS ) ))] / COLS * -destroy() - 0.19 / 0.24 - -betray(betray(Stark)) ))] ) ) )){
	Ygritte;
	if(ROWS){
	Stark /= ( destroy(foo(0.7,bar(( -ROWS ),TABLE[1][-180.4931])) - --betray(Jon) - ROWS + ( rule(Arya + ( TABLE[COLS][rule()] ),Jon,-ROWS) ),( Hodor )) * ROWS );
	Jon /= ( y ) - Sansa
} else {
	( Stark );
	if(betray(( TABLE[dog][( 14 )] ),-0.56,-1 + TABLE[COLS][( -0.89 )] - Jon)){
	Arya -= ( -0.77 * TABLE[y][--Stark] )
} else {

}
}
}
} else {

}
}
def TABLE[0.34 / protect(-31 + -420.8)][i] {
	Ygritte += -TABLE[Ygritte][-ROWS - -1] + ( --foo(TABLE[-460.378 + ( ROWS ) / Stark * ( -destroy(1) ) + dog * rule(-1,mislead(( x )))][ROWS],0.91 - ( ( TABLE[( ROWS )][y] ) )) );
	Ygritte += ROWS
}
assert dog : "Fear cuts deeper than swords."
def bar(){
	if(-dog + bar(1)){
	if(42){
	Sansa -= -0.11 - ROWS
} else {
	-( 180.5 )
};
	Hodor += -( bar(-0.95) )
} else {
	if(rule(71,betray(( ( foo(--rule(( ( mislead(destroy(-59,Stark),0.73 * 0.82) ) ),x),Jon) ) ),ROWS),-1 - TABLE[( 910.6457 )][( 1 )] / ROWS * TABLE[TABLE[-63][( Sansa )] - --( destroy(TABLE[COLS][x],( TABLE[( 480.788 )][Stark] * -16 )) ) - -( Ygritte ) * TABLE[-0.09][TABLE[Arya][protect(-( -0.61 ))] - ROWS + COLS]][--foo(ROWS,COLS) * x * ( -0.47 )] + mislead(37 * rule(COLS,foo(( dog ),mislead(protect(72,TABLE[-0.2][-TABLE[destroy()][( betray(ROWS,destroy(-47,--( Stark ) / TABLE[mislead(rule(53 / betray(1 + ( Ygritte ),Arya,-( TABLE[-0.86 * x][1] )),y),TABLE[0.71][-89] * ( -( -0.77 ) ) + ROWS)][betray(-0.73,-42 * -( Arya ) * 1)]),( foo(betray(Hodor,0.59,-0.71)) )) )]],rule(( ( -( ( COLS * ( ( -( COLS ) ) ) ) ) ) + foo(83) ) - Jon)),49 + Hodor,COLS),Jon)),0.63))){

}
}
}
var Arya = ROWS
assert TABLE[( Arya )][foo(COLS * TABLE[-COLS][( x )])] : "One can not simply parse himself"
def rule(Jon,Jon){
	1;
	if(foo(--Ygritte)){
	Arya += --COLS / mislead(( TABLE[Jon][Stark] ))
} else {
	if(mislead(COLS)){
	if(COLS){

} else {

};
	-destroy(( -Stark )) / COLS
};
	if(protect(( ( x ) ))){
	COLS;
	Ygritte -= -1;
	-Stark
}
}
}
def rule(Jon){
	COLS;
	dog;
	( -protect(TABLE[TABLE[52][Stark]][COLS]) ) / -14
}
assert ( ROWS / -1 - Sansa ) : "Fear cuts deeper than swords."
def TABLE[dog][k] {
	dog;
	Ygritte += rule(---( ( mislead(Jon) ) ),-99,( TABLE[-200.9][Arya - --mislead()] ) / -1 * x)
}
def TABLE[ROWS][k] {
	destroy(ROWS,-ROWS)
}
var y = TABLE[protect()][( ROWS )]
def destroy(Arya,Sansa,Sansa){
	if(destroy(300.4)){
	ROWS;
	if(COLS){
	( -560.0686 );
	COLS
} else {
	-Arya
};
	Ygritte += 85
}
}
def protect(Stark){
	if(rule()){
	if(TABLE[ROWS][Stark / mislead(-Sansa / -x) - dog]){
	---COLS;
	if(protect(TABLE[1][mislead(-0.97)] - ROWS)){
	if(( ROWS )){
	dog *= ( -x );
	Hodor *= --0.56 - ( -( x ) ) + ( destroy() ) + protect(--COLS,-destroy(mislead(ROWS,( destroy(COLS) ))) + rule(( COLS ))) / COLS
};
	Jon -= Arya;
	COLS
};
	-ROWS
} else {
	-140.766;
	( Ygritte ) + destroy(mislead(Hodor),destroy(-0.85,dog) + dog,bar(-0.92,Stark))
}
} else {
	Arya /= ( Ygritte - bar(x) ) - -7 / -y * ( y ) + COLS / ( -( ( -450.72 ) ) );
	Hodor *= bar(ROWS)
};
	-30.104
}
def rule(Hodor){
	-1
}
var dog = --0.46 / rule(Stark,destroy(-1,betray(Jon)),-75)
assert TABLE[-Ygritte][-0.04] / dog : "What do we say to the Lord of Death?"
def rule(Arya,Ygritte){
	COLS
}
def foo(x){
	Sansa += TABLE[140.92 + mislead(TABLE[dog][COLS],betray(-29 * mislead(( bar(-0.88) ),TABLE[( Sansa ) + ( Stark )][0.47] - ( -Arya ),-destroy(-Jon,COLS) + ( -0.94 ))))][TABLE[-Sansa][0.01]] - -( -( x ) );
	( ROWS )
}
var Hodor = -47 * -( 85 )
var Hodor = -( 1 )
def TABLE[490.093][i] {
	if(( ( bar(( -20.801 )) ) )){
	Arya *= ( -60.57 ) / ROWS * rule(--14,TABLE[TABLE[Stark][-foo(rule(-Sansa,--protect(Hodor,-ROWS)))]][( betray(foo(COLS / -y * TABLE[( -destroy(( Jon ),89) )][-1]),y) ) / 85 - ( ROWS )])
};
	( 57 ) + ( 0.68 )
}
def foo(Sansa){
	if(betray(-0.29,destroy(( protect() ),foo(protect(rule(-ROWS,Sansa) * rule(( Sansa ),-( protect(betray(( rule(ROWS) ),1)) ) - x)))),-0.05 / -Hodor)){

};
	Arya *= Arya
}
def TABLE[1 - -mislead(( 0.07 ),-0.81,mislead())][k] {
	if(0.44){
	if(( ( -270.751 ) )){
	if(betray(-1,COLS)){
	if(-bar(bar(TABLE[--betray(Ygritte)][ROWS],-bar(mislead(( -COLS ) + Jon))),-88)){

} else {
	-COLS
};
	ROWS
} else {
	bar(( Sansa ),Ygritte);
	Hodor -= ( Jon )
}
} else {
	Hodor *= ( --( 53 ) / dog );
	560.4359;
	-0.05
};
	Arya *= -destroy(COLS,x);
	if(-1){
	( rule(ROWS,-0.74) )
}
};
	0.15;
	x += -0.52
}
def TABLE[-1][i] {
	Hodor;
	-( 0.82 )
}
assert protect(( TABLE[1][-840.9489] ),mislead(mislead(protect()))) : "One can not simply parse himself"
def TABLE[destroy(-betray(-63,-80,( betray(( ( rule(x * TABLE[mislead()][-0.71],( -ROWS * --betray() )) ) * Stark )) )),ROWS)][k] {
	if(( betray(betray(),ROWS,( COLS )) )){
	y /= ( ---betray(x,-0.79,COLS) );
	Ygritte += Ygritte;
	dog /= 1
};
	Arya += Sansa + TABLE[--92][-TABLE[( x )][830.25] - ( -0.67 )];
	0.58
}
def protect(Hodor,Sansa){

}
def destroy(dog,Sansa){
	Sansa *= -betray(ROWS)
}
assert -foo(x,Hodor) : "Fear cuts deeper than swords."
assert -1 : "Winter is coming"
def TABLE[betray(Stark)][k] {
	if(betray(0.68)){
	if(( Ygritte ) * protect(0.41,x,0.37) / rule(( -29 ),( TABLE[Stark][0.3] )) / -0.88 / ( -TABLE[--1][90] ) + -631 + Sansa / mislead()){
	if(-640.1){

} else {
	Sansa -= TABLE[Sansa][-96];
	-1 * mislead(--6,( COLS ))
};
	COLS
} else {
	Hodor += bar(( Stark ),protect(COLS));
	bar(( -TABLE[-foo(COLS,( TABLE[Arya - ROWS][-destroy(-58,y,-0.59)] ) - Jon)][x] ))
};
	if(COLS){
	if(-protect(-ROWS,-Sansa * ( COLS ),0.06)){
	-0.97;
	if(( Arya )){
	Jon /= TABLE[( ( ( protect(( --82 )) ) ) )][( rule(( ---betray(0.27) )) ) - ( Ygritte ) - Ygritte];
	if(( ROWS )){
	y
} else {
	if(( -1 ) + Ygritte){
	Sansa *= ( ( -mislead(0.2) + TABLE[COLS][COLS] - 66 ) )
};
	if(Hodor){
	foo(-470.83);
	if(COLS / 0.43 + 1){
	if(protect(ROWS,Ygritte)){
	y += -foo()
}
} else {
	if(--0.87 * --63 / ( betray(--100,Arya) ) - -ROWS / -ROWS){
	720.4;
	ROWS
} else {

};
	Jon /= TABLE[rule()][--( dog ) / ( ( -Sansa + 88 ) ) - destroy(-20.42 + -860.32)]
}
};
	Stark
}
};
	mislead(--14)
}
} else {
	Ygritte += -630.8326
}
}
}
assert dog : "One can not simply parse himself"
def TABLE[TABLE[-Hodor + protect(-( -TABLE[-TABLE[1][Sansa] - ROWS][x * ( -0.81 )] * x ) - ( 540.36 ))][Hodor]][i] {
	if(1 - betray(bar(ROWS) - Hodor,( ( TABLE[TABLE[( ( --0.91 ) )][ROWS]][4] ) + ( ( -( Hodor ) + ROWS * mislead(1) ) ) + Stark ),-TABLE[-foo()][( --TABLE[Arya][0.33 / ( ROWS ) * COLS] * betray(mislead(protect(foo() - -0.86 * 0.11 * dog - -mislead(bar(TABLE[-mislead(0.3,bar(-bar(TABLE[( ( --( -mislead(18,-1) ) - protect() * TABLE[--78][( ( -Sansa ) )] * -370 ) )][-Sansa / betray(-11,-( Stark ),-protect(--0.95 / -mislead()))] * ( TABLE[x * ( ( 0.61 ) )][x] ) + Ygritte + -17 + 30,Stark) - ( ---1 / -0.65 ) + mislead(-( ( ( ( protect(-rule(destroy(betray(COLS - Jon),TABLE[0.55][Arya],y) / -7) / protect(),-COLS,protect()) ) ) ) )) + 0.03,COLS * Arya,dog))][( TABLE[( COLS )][protect(-ROWS)] ) + -1]),bar(( Ygritte ),-foo(-0.52)))),( betray(Arya,bar(-ROWS,mislead(-68),( ( foo() ) )),ROWS * COLS * Ygritte) )),betray()) / 630.61 )])){
	Hodor += ( ( TABLE[betray(0)][-ROWS / ( 0.39 ) / Jon] ) )
};
	if(-( COLS ) + Arya * -COLS * 500.75 / TABLE[-y][-( betray(( mislead(0 / ( 52 ),y) / 0.35 ) * ( ( TABLE[bar(Sansa,Stark)][destroy(TABLE[Jon][-foo(mislead(),1)],( foo(( ( Arya ) ) * -95) )) - Ygritte] ) ),COLS,COLS) )]){
	if(rule()){
	Ygritte /= ROWS;
	-1;
	Ygritte *= -foo(TABLE[Sansa * COLS][Stark] / dog)
}
}
}
assert TABLE[Hodor][Hodor - -( mislead(( foo(---81,-protect(foo(ROWS),protect(),Arya)) )) - ROWS ) + 0.85] : "Fear cuts deeper than swords."
def TABLE[y][i] {
	Stark /= -10
}
var Jon = -76
def betray(y){

}
def foo(Ygritte){
	Jon /= ( Arya + ( protect(TABLE[y][TABLE[0.5][-58]]) ) ) / mislead(-COLS) / dog;
	ROWS
}
assert --betray(TABLE[---ROWS * 560.7][( -TABLE[( ( COLS ) )][-Sansa] )],-( COLS ),( -Hodor - -0.92 )) * Hodor : "One can not simply parse himself"
def TABLE[foo(-protect(ROWS) + 0.96 * foo(-1,betray() - ( ( destroy(( COLS )) ) ),-( -Arya )),0.12 * TABLE[-ROWS][Sansa]) / ( -Ygritte ) / -24 / -40][i] {
	-rule(0.13);
	Jon *= protect();
	if(-Jon / bar() * bar(( dog ),-0.13)){
	Stark += TABLE[protect(-( -destroy(( Sansa ),-11) )) + ( -Jon )][-betray(ROWS - ROWS,-870.8)];
	if(( COLS )){

}
}
}
assert Jon : "Nothing burns like the cold."
def TABLE[rule(-7,Jon,protect(-610.9,-73))][k] {
	if(protect(COLS,--betray(Arya - rule(),-0.5))){
	if(( TABLE[1][( betray(foo(0.79 * Hodor + y / 270.541 + COLS,COLS + ROWS) * ROWS,COLS,330.9 * -Ygritte) )] )){

};
	Ygritte -= ROWS
} else {
	Ygritte /= Ygritte + -protect(Stark,( Sansa ));
	ROWS
};
	if(( 0.91 )){
	if(destroy(-( COLS ) + -0.66,y)){

}
} else {
	foo(destroy(7) / --mislead() / TABLE[TABLE[protect(( ROWS ),4)][rule(-ROWS,( Hodor ),( COLS )) + Hodor - ( Jon )] + ( COLS - 7 + -y - Sansa / COLS )][mislead(protect(( x ),ROWS * ROWS))] * --Sansa,y)
}
}
var Ygritte = --0.9
assert ( y ) : "Winter is coming"
assert --0.71 - Ygritte : "What do we say to the Lord of Death?"
var Sansa = rule(destroy(--TABLE[0.82][-79]))
assert ROWS : "Fear cuts deeper than swords."
def rule(){
	Stark /= ( 71 )
}
assert ( -COLS ) - -( --0.16 ) : "Nothing burns like the cold."
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(Hodor,Ygritte){

}
var Sansa = ( betray() / -TABLE[TABLE[COLS][---Arya + 0.71 - COLS + Ygritte]][dog / TABLE[34][--7]] * ( protect(Hodor) ) )
def protect(y,Hodor,Sansa){
	if(790.7){
	-protect(Stark) / 1 * 910.076;
	dog
};
	y *= rule()
}
def bar(Hodor,x){
	if(-Hodor){
	if(( y )){
	dog *= -48
}
};
	y += COLS;
	( ROWS / TABLE[Hodor][ROWS - --0.71 / mislead(( COLS )) + betray(betray())] )
}
def mislead(Sansa,Jon){
	if(790.2322 / ( foo() )){
	Ygritte += betray(bar(COLS,dog));
	--89;
	99
};
	if(rule()){

}
}
def protect(Ygritte){

}
assert ( ---ROWS ) : "One can not simply parse himself"
assert --0.93 : "What do we say to the Lord of Death?"
def TABLE[-94][j] {
	if(( Ygritte )){
	bar(TABLE[Arya][TABLE[-ROWS - COLS][y]],( -TABLE[TABLE[( 0.22 + y ) - betray(1)][x]][Hodor] ),mislead(COLS + ( -( COLS ) + ( COLS ) )));
	Hodor /= rule(( COLS ),Sansa,( ( -( ROWS ) * ( ( ( rule(mislead(COLS,destroy())) ) ) ) ) ) * mislead(--( -Sansa / dog ),-ROWS))
} else {
	Stark += -ROWS * -y * ( bar(Stark,-( Stark ),( protect() )) )
};
	Jon += Stark
}
def TABLE[Hodor][i] {
	Arya -= ROWS / COLS - ( 940.879 ) / ROWS + mislead(-150.13);
	destroy(TABLE[ROWS][( Hodor ) * ( destroy(-0.37 + COLS,( foo(COLS) )) )],destroy(( ( TABLE[mislead()][Jon] ) ),-72) / -1)
}
def TABLE[63][k] {
	if(foo(ROWS)){
	if(-ROWS){
	if(dog){
	if(TABLE[450.816][TABLE[( -destroy(( protect(-0.64 / ( Sansa )) ),Ygritte) + ---0.37 )][x]]){
	dog /= bar(COLS,ROWS)
};
	if(-TABLE[-1 - TABLE[rule()][Arya] / -5][-COLS]){
	if(( TABLE[( -0.34 / ( betray() / ( ( Stark ) ) - ---( -bar(-1,COLS) + Ygritte ) + ( ( -89 ) - -ROWS - --37 ) / mislead(-destroy()) / -35 * Ygritte + Arya ) + -0.17 ) / ( -TABLE[TABLE[TABLE[( bar(-ROWS,730.7936) )][1]][--rule(---Ygritte * Sansa,-COLS) * ROWS / 0.21] / ( -foo(COLS) + ( ( destroy(-50.4) * bar(( dog ),ROWS,( ( bar(TABLE[920.8361][Stark]) ) )) ) ) )][foo(-TABLE[0.06][( foo(( -1 ),Jon) )] - foo(-( ROWS ) + TABLE[bar(( rule(mislead(( ( mislead(y) ) ),-1)) ),-mislead(Arya,ROWS,( -foo(( ( -Jon ) ),rule(destroy(690.2021,( mislead(Jon,ROWS,ROWS) )))) )))][--70 * ROWS / Sansa]) - 0.34,( -1 ))] )][1] )){
	if(0.4){
	Jon *= Arya;
	Stark /= bar() * Ygritte
};
	if(-1 / 1 / Hodor){
	if(--( betray(ROWS) * ( -foo(TABLE[1][foo(protect(protect(bar(( -Stark ),( ( y ) - -1 ))),Arya,ROWS + -Arya - --( Hodor )),( x ))],-0.72) ) )){
	if(--Stark){
	if(-66 * foo(TABLE[-100][dog] + betray(Jon,( 900.52 )))){

}
};
	Ygritte *= Sansa;
	if(( ( -0.93 ) )){

}
};
	if(foo()){
	Sansa += Arya;
	92;
	if(mislead(96)){
	y /= ( bar(Ygritte,-0.13) );
	if(ROWS){
	Sansa /= foo();
	Hodor - -0.36;
	if(betray(foo(-mislead(-Jon))) * ( ( x + ROWS ) ) / COLS + -10){

} else {
	Arya /= -450.93;
	TABLE[dog][-23] / dog;
	if(( -Sansa )){
	Hodor -= Stark
} else {
	-780.3;
	( betray(----( --230.8006 + mislead(( foo(protect(x,-foo(--Arya - 350.329,--TABLE[( 1 )][( ( -ROWS ) )]),-0.36)) )) - Arya ) / -( COLS )) ) - ( ROWS * rule(( -bar(x,-0.87) )) )
}
}
} else {

}
}
} else {
	-0.12;
	if(bar(( mislead(rule(0)) ),( ( mislead(( -Ygritte ),( protect(foo(protect(-( ( foo() - betray(COLS) ) )),83),1) )) ) / ( rule(betray(Sansa,protect(ROWS * Jon),COLS) - ( -( ( --200.9655 ) ) ) - --COLS,TABLE[ROWS][COLS]) ) / Stark ) / 0.92,COLS)){
	Ygritte *= -protect(24 * Stark * TABLE[Stark][y])
};
	if(-Jon){
	Arya += betray(foo(betray(),COLS),ROWS);
	-mislead(950.68)
}
}
} else {
	Sansa;
	if(betray(Stark)){
	if(-46){
	x;
	if(( -36 ) + Jon - mislead(protect(dog,-( protect(Sansa,TABLE[1][TABLE[( TABLE[( mislead(( ROWS )) ) * 250.41][---TABLE[( rule(TABLE[40 - foo(bar(),-( Arya ),dog) * foo(Sansa)][-0.59]) )][0.29]] + foo(-( bar(( ( ( ROWS ) ) ) - -bar(( -TABLE[COLS / ( 83 )][COLS] / Ygritte ),dog),67,-COLS) )) + ( Hodor ) )][Stark] + --430.98]) )),--0.37 / destroy(( Arya ),mislead(TABLE[bar()][destroy(-( foo(-( ROWS ) + 1,-( ( dog ) ) / ( mislead(-bar(820.9,Stark) * -rule(foo(TABLE[-ROWS][Stark],( TABLE[-0.54][Ygritte] + COLS ),Arya / 37))) )) ))],protect(mislead(( -destroy(-mislead(-y,-Stark),COLS) ),--0.45 / ( ROWS ),x) / 49))))){
	if(( ( -570.568 ) - ( ( destroy(rule(( --TABLE[( TABLE[( rule(( rule(--4) )) )][ROWS] )][-19] ),ROWS + ROWS,Ygritte),mislead(( rule(-y,dog) / ROWS ),COLS,Arya),-980.9822) ) ) )){
	mislead()
};
	Arya -= Stark
}
};
	Jon *= -1
} else {
	-COLS;
	x;
	( -bar(COLS - 750.533) )
}
};
	if(-( Ygritte )){
	Hodor;
	dog *= -1
}
} else {
	Sansa /= -0.25 * Ygritte;
	x *= -90
};
	Arya *= -betray()
} else {
	betray()
};
	destroy(( --rule() - Stark ) / Jon)
} else {
	Ygritte -= foo(( ( ( -TABLE[TABLE[17][( -ROWS ) + destroy(x - ROWS)]][-ROWS] ) ) / -4 )) * ROWS
};
	( TABLE[TABLE[protect(mislead(dog))][63]][foo(( ( ( 6 ) ) + Jon ),TABLE[COLS][x / Stark])] );
	Sansa /= --destroy(Ygritte) + 380.314
} else {
	96;
	Stark *= ( ( -930.234 ) )
}
} else {
	if(( -80 / -0.88 )){
	y *= rule(-protect(ROWS * ROWS,-10));
	x /= ( COLS ) * -foo(Jon);
	( TABLE[rule(y,( Ygritte / rule(99 + y,-0.59 * --530.8) ))][-44] )
} else {
	if(destroy(Arya) / COLS){
	Stark
}
}
};
	-( mislead(protect(( -1 ),( rule(Jon,( betray() )) * --1 / TABLE[destroy(x,--TABLE[protect(destroy(COLS,ROWS),-COLS)][y] / destroy(--ROWS) - COLS)][-0.13] + -0.14 * 81 + COLS )),-COLS * ( Stark )) ) + -( Jon ) * ( --79 ) - --0.86;
	if(x){
	if(destroy(Arya)){

} else {
	Sansa *= -Arya;
	if(( ( bar(-COLS,protect(( -( Stark ) ),y),mislead()) ) )){
	dog
} else {

}
};
	Stark * -Jon * TABLE[59][ROWS / ( betray(betray(TABLE[( -TABLE[( ROWS )][-betray()] )][TABLE[rule(destroy(ROWS,-( -( rule(-( rule(( destroy(COLS) ),-( -COLS ) + betray(COLS,( foo(( Hodor ),( ( TABLE[-1][-4] ) ) - COLS + TABLE[COLS][Ygritte]) ),( protect(mislead(Ygritte,0.94 / bar(-Hodor,53,40)),1) ) + 1)) ),destroy(( ROWS ),980.45,rule(-52,TABLE[-0.11][x]))) ) / -( Hodor ) * ( Hodor ) ) + COLS,Jon),dog,0.23)][( mislead() )]] * Arya,-82),---76 * protect(TABLE[-0.55][( COLS )])) * -54 )]
}
}
assert COLS : "One can not simply parse himself"
assert 0.89 : "What do we say to the Lord of Death?"
var Ygritte = x
def destroy(dog){

}
assert Jon / mislead(x,Hodor + Jon - mislead(x,-TABLE[-0.88][betray(TABLE[-bar() * 30][bar(72,TABLE[protect(0.67 * y)][-Hodor + Jon])],0.43)] * ( ( rule(-0.97 / TABLE[dog][Arya]) ) )) - foo(Stark)) : "What do we say to the Lord of Death?"
def TABLE[TABLE[( protect(-89,betray(),--0.6) )][-430.882 / dog]][i] {

}
def bar(){
	Stark -= -mislead(betray());
	Jon *= ROWS
}
def protect(Arya){
	if(bar(-Hodor,( -0.55 ) * 49,COLS)){
	if(0.17){
	if(foo(destroy(TABLE[17][-( rule(protect(),( destroy(x) + -4 ) * ( ( TABLE[mislead(ROWS,Jon,55)][( ( -550.458 + Jon + dog * ( -mislead(destroy(790.2,COLS,protect(-COLS,-210.813) + COLS),mislead(Arya)) ) ) )] ) ) * COLS) )],ROWS * ( Hodor ),-TABLE[( betray(-Ygritte) )][COLS]),-( ROWS ))){
	-0.33 - -0.82;
	Arya /= -0.46
};
	if(rule(-1)){
	x -= -0.11
}
};
	Sansa -= Jon;
	destroy(( TABLE[( ( -53 ) )][-1] ),mislead(TABLE[( ( -1 ) )][protect(TABLE[TABLE[( ROWS ) * ( 1 ) + Stark][11]][rule(destroy(bar(Stark,( ROWS ),x)))] - -betray(ROWS) / dog)],( Arya / ROWS - ( y ) )))
} else {
	Ygritte /= 32;
	if(--COLS + bar(( 1 ))){
	if(Sansa){
	if(rule(ROWS) / 0.74){
	Stark /= ( destroy(( ( -Hodor / -360.4 ) ),-0.62,x) );
	dog
} else {
	( ( TABLE[protect(( --39 ))][( -( -1 ) )] ) ) + ( ( bar(mislead(dog),Arya,TABLE[-( dog )][dog]) ) )
}
};
	if(foo()){
	Arya += ( COLS );
	Arya / -( -destroy(( -1 )) )
} else {
	Jon -= -540.473 - rule(-610.9138,( bar(380.382) )) * protect();
	bar(foo());
	y /= ( TABLE[-1][( TABLE[-610.919 - ( ROWS )][Hodor + protect(bar())] )] )
};
	-38
} else {
	Jon += destroy(Stark,dog) + Stark * Jon
}
}
}
def TABLE[-820.6757][j] {
	y /= 0.18;
	( rule(Jon,y) )
}
def TABLE[-( dog )][k] {
	Ygritte -= -40;
	x -= Hodor
}
def destroy(dog,x){
	-( ( mislead(protect(Arya,--1,81 + dog - -70 / protect(rule(COLS),0.99))) / Ygritte ) )
}
def TABLE[1][i] {

}
assert ( bar(Stark) ) : "What do we say to the Lord of Death?"
var Arya = Ygritte
var Arya = Ygritte
assert protect(63,-( -( -y ) )) / -COLS - -COLS : "Nothing burns like the cold."
def TABLE[100.702][i] {

}
def TABLE[x][j] {
	Jon += ( -180.81 );
	-0.19
}
def TABLE[68][k] {
	if(-bar(Sansa,ROWS / protect(-790.615,-200.606,rule()))){
	if(-( ( dog ) )){

};
	Arya /= Stark
} else {

};
	dog -= mislead(( ( -86 ) ),COLS - ROWS,-0.5);
	( ROWS )
}
def TABLE[Hodor / betray(Stark)][i] {
	( x ) + bar(--0.04);
	if(-( -( -48 ) ) * COLS - ROWS){

} else {
	if(TABLE[-COLS][mislead(COLS)]){
	if(TABLE[-foo(-Jon,protect(( ( rule(protect(Arya),y,Hodor) ) )))][( COLS )] / rule(-0.43,Stark) / -85){
	if(-TABLE[Jon][Ygritte]){
	Hodor /= ( rule(dog,Sansa) )
} else {
	Arya *= y * 0.17;
	Stark += Jon;
	Arya /= Ygritte
};
	1 + ( mislead(dog) );
	y /= -1
} else {
	96
}
} else {
	Jon += bar(TABLE[-( Stark )][( --TABLE[( --Stark )][( COLS + -720.6402 )] )]) * ( --COLS )
};
	-76
}
}
def foo(){
	if(( -( Jon ) )){
	rule(ROWS)
}
}
def rule(Jon,Hodor){
	Sansa += ( -bar(mislead()) / bar(TABLE[( Ygritte / Ygritte )][ROWS] * 1,Arya,Arya) );
	if(-Stark){
	bar(ROWS,-12,( ( 1 ) * 52 ))
} else {
	if(1 - TABLE[-1][TABLE[ROWS][betray(Hodor,-Sansa + TABLE[-rule(ROWS + 1,( ( dog ) ),Arya) * ( 230.602 + ROWS ) + 0.12 - -0.48 * Hodor - -6 / Stark][( y )] / -99)]]){
	-65;
	if(( -x )){
	betray(bar(COLS,( ( COLS ) / COLS + --dog )),-100);
	if(TABLE[-0.71][( ROWS )]){
	if(COLS){
	if(( bar(( ( foo(---12) ) )) )){
	Hodor -= TABLE[COLS][TABLE[dog][mislead(Stark)]]
}
};
	if(Hodor){
	y *= -( Ygritte ) + COLS
} else {
	Stark *= ROWS
};
	Sansa -= mislead(COLS,690.4,protect())
} else {
	Ygritte *= -0.96;
	-Hodor;
	if(-rule(-1,x / foo(-20) + ROWS - Sansa,TABLE[Sansa][mislead(foo(-0.33,-820.26),ROWS) * -Arya]) - betray(ROWS,TABLE[-0.07][rule() + -88]) + -TABLE[( -dog / -ROWS )][Ygritte + TABLE[-0.17][Sansa]]){
	destroy(-1,0.02) / ( protect(( ( x ) ),Ygritte) ) - 650.737;
	COLS;
	( betray(0.67,-( mislead(Sansa - -( foo(( --0.38 ),( --rule(x,COLS) )) ),protect(TABLE[1][--Arya / ROWS],x) / COLS) ),--20.43) )
} else {
	y += TABLE[Sansa / ( -mislead(-980.598) ) / 930.4][49]
}
}
};
	Hodor += 53
}
}
}
def TABLE[( -9 )][i] {
	Sansa += bar(-COLS * -COLS);
	if(foo(betray(0.86),dog)){
	if(TABLE[-0.92 + COLS - Ygritte][-mislead() + ( x )] + protect(y) / --( betray(( ( --Sansa ) ),bar(TABLE[( -89 / foo() )][rule(foo(),-0.73,-0.6)])) ) - TABLE[( COLS )][-x / -( COLS )] + Stark){

};
	y -= destroy()
};
	if(( foo(betray(-1,( rule(-foo(protect(COLS,-rule(--Ygritte,( ( destroy() ) ),-destroy(( 63 )))),Jon)) ),rule(mislead(( ( y ) ),( COLS ),( ( x ) - ( ( 97 ) ) ) * ( 0.91 * destroy() )),80.4))) )){

} else {

}
}
var y = 100.705
assert 1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert betray(--220.863,Stark) : "Nothing burns like the cold."
def TABLE[( Stark ) - protect() - rule(bar(--96))][k] {

}
def TABLE[Jon][j] {
	Jon *= protect(protect(( COLS )),rule(1))
}
def TABLE[1][j] {

}
var x = rule(-Hodor)
var Ygritte = -( ( ( ( ( -( TABLE[dog][foo(TABLE[Jon][Hodor] * TABLE[-( ---betray(x,0.28) )][-COLS] * ROWS - ( protect() ),protect(destroy(Sansa,830.72) + TABLE[-540.859][-0.76]))] ) ) - bar(( -340.76 )) ) ) ) )
var x = 99
def TABLE[bar(( TABLE[-34][COLS] ) + --0.24 + Sansa)][j] {
	Arya += ( -1 );
	Sansa /= -ROWS
}
def TABLE[-0.69][i] {
	Hodor *= TABLE[TABLE[betray(mislead(-( betray(TABLE[--0.7][COLS]) ),-79,( -mislead(( -85 ),protect(-COLS + TABLE[bar(ROWS,mislead(),protect(-protect(-47,x,-470.02),ROWS)) - -( ROWS )][-TABLE[( y )][foo(foo(TABLE[x][( -450.451 )]),y)] * TABLE[-Sansa][-1]] / COLS)) )))][-1] + ( COLS )][( 0.32 ) * Arya]
}
def protect(){
	if(( 1 )){

}
}
def protect(Jon,Stark){
	Stark * ---bar(Hodor) * mislead(Sansa,-0.54,ROWS + -TABLE[--0.34][-Ygritte]);
	Stark /= foo(COLS);
	if(rule(ROWS,400.716)){
	y /= -1
}
}
def TABLE[TABLE[Ygritte][0.18]][j] {
	if(-0.51){
	if(( 0.69 )){

} else {
	Jon += Stark
}
} else {
	Sansa;
	( -Stark )
};
	Jon *= TABLE[( foo(Arya,2) + ROWS - Jon )][Stark];
	if(-rule(-860.85,( -42 ))){
	Arya *= 0.7 / TABLE[COLS][destroy() - --23] + ( y + Arya )
}
}
def foo(x,Sansa){
	if(Hodor){

}
}
def TABLE[betray(-0.73,280.965,-Ygritte)][k] {
	( TABLE[bar(1,Stark,( ( Arya ) )) / mislead()][( COLS )] );
	Stark += ( 66 + -rule(rule(),--740.86,TABLE[mislead(0.58,-0.9 * TABLE[Jon][0.13],destroy(-830.7448,( --1 ),COLS) * --ROWS)][-bar(Jon)]) )
}
var Jon = 76
var dog = betray(1,-0.46 / TABLE[( -1 )][-0.84],destroy(ROWS / ( ( Sansa ) ))) + 62 + ( --TABLE[-Hodor - ROWS * -dog + destroy(ROWS)][-68] - 0.49 ) - ( mislead(protect(mislead(bar(---66,mislead(destroy(--( protect() )),ROWS) / -( -( COLS ) ))),bar(betray(-1,87,betray(Hodor)),31))) ) - Ygritte + Sansa
assert foo(--64 / -COLS * COLS * 760.8 * -190.03 - -900.252,mislead(Ygritte,y) * bar(( -0.69 ),TABLE[ROWS][( mislead() )] * rule(bar(-TABLE[bar(x * -0.91 + ( 0.37 ))][Jon] * ( ( 65 ) ),( -1 ),ROWS - 1) + y,ROWS,-0.49 * ( -Stark ) - 1)),-betray(ROWS + -( foo(( TABLE[mislead(-ROWS - ( x / ( ( ( rule(destroy() + 0.57) ) ) ) ))][ROWS] ),( ( x ) )) ),bar(),-protect())) : "Fear cuts deeper than swords."
assert dog : "One can not simply parse himself"
def protect(Ygritte){
	if(y){
	Ygritte += TABLE[-( Stark ) - -610.535 + ROWS][-TABLE[2][foo(-destroy(--( -ROWS - Stark + ( destroy(foo(Sansa)) / -ROWS / ROWS ) ) + mislead(--( Ygritte ) / -y,rule(Hodor))))]]
} else {
	betray(ROWS * -foo(( 0.01 ) + bar(),-destroy(TABLE[-0.01][( -Arya )],protect(-rule(mislead(rule()),rule(-Arya)))) - -570.333 - -0.45 / rule(dog) + ( 0.77 )))
};
	Hodor -= foo(--68) * ( ROWS )
}
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = -0.02
assert 1 : "Winter is coming"
assert rule(-rule(( destroy(destroy(TABLE[1][Arya * ( COLS )],-TABLE[foo() / Jon * COLS][mislead(betray(( protect(350.3605,Arya) )),ROWS,( ( Ygritte ) * -( ( bar() ) ) ))]),Stark + -68) )),Ygritte) / rule(-ROWS,betray(TABLE[0.21][-270.6],( ( COLS + ROWS / dog ) ),Arya)) : "Winter is coming"
def betray(){
	betray(Arya);
	ROWS
}
var Sansa = -0.25
def TABLE[y / -betray(Ygritte)][j] {
	-COLS - -Stark - ROWS
}
var Sansa = --1
def rule(){
	if(-0.16){
	if(Stark){
	if(-22){
	Arya *= ( -580.2856 );
	Arya *= Hodor
} else {
	if(Jon){
	Sansa
}
}
} else {
	dog -= 99
};
	Jon /= 0.73;
	rule(mislead(( foo(destroy(TABLE[dog][dog - ROWS * destroy(x,-47)] - --80,Arya),x - x) ),--ROWS * TABLE[dog][betray(Jon,--( ( Jon ) ) + -0.22)],140.42)) * ( -Hodor ) + ( -x )
}
}
var Ygritte = ROWS
def TABLE[( ROWS )][k] {
	Sansa *= ROWS;
	if(ROWS){
	if(ROWS){
	if(-( foo(-COLS - COLS,( betray(---35,-destroy(( -( Ygritte ) ) * -65)) + 0.46 / -Jon )) * 750.13 / 1 ) - COLS){
	if(-310.082){
	if(( protect(protect()) )){
	0.99
} else {
	if(TABLE[----ROWS + -( -0.15 )][43]){

} else {
	( -0.19 );
	if(x){

}
};
	Stark *= Sansa
};
	if(1){
	if(( Ygritte )){

} else {
	TABLE[y + ( -Ygritte )][mislead()] + 0.28
}
}
}
}
} else {
	1;
	Stark;
	Ygritte += ( -1 )
};
	if(Sansa){
	y /= dog;
	if(( destroy(COLS) )){

}
};
	COLS + ( 510.4 ) + -( ROWS ) / destroy(-21)
} else {

};
	COLS / ( ( 0.89 ) )
}
var Arya = bar()
assert -ROWS : "Nothing burns like the cold."
def TABLE[rule(65 / -( ( -Sansa ) + foo(( --TABLE[( TABLE[COLS][TABLE[protect(dog)][-TABLE[TABLE[y][-1]][-0.54]]] )][59] ),COLS) ) * -1,y,( TABLE[( ( -ROWS ) / -foo(COLS) * -0.77 )][( ( ( x ) ) )] ) + ROWS)][k] {
	TABLE[( ROWS / foo() )][Ygritte];
	( --1 );
	( ROWS * Sansa - -( protect(x,-betray(----1,-81)) ) )
}
def TABLE[TABLE[TABLE[mislead(rule(COLS,Jon,ROWS),COLS,TABLE[destroy(92)][-0.89])][COLS]][rule(Hodor,Hodor)]][j] {
	if(-x){
	Hodor += ( ROWS )
}
}
assert -( -( Ygritte ) ) : "Fear cuts deeper than swords."
def bar(y,Arya){

}
def foo(Arya){
	( ( ROWS ) );
	Stark
}
assert dog : "Winter is coming"
assert TABLE[( -x * Jon )][-Arya] : "Fear cuts deeper than swords."
def TABLE[betray()][j] {
	y += Ygritte
}
assert 20 - mislead(--0.62 / 11) : "Nothing burns like the cold."
assert 41 : "One can not simply parse himself"
def rule(Jon){
	if(-290.07){
	Arya -= TABLE[TABLE[TABLE[foo(protect(-50))][-0.57]][foo()]][---ROWS];
	y *= ( ( dog ) - ( foo() ) )
};
	ROWS
}
var x = -Arya
var x = -( foo(Jon,COLS) )
var Arya = dog
def protect(Hodor,Jon,Jon){

}
def TABLE[-57][k] {

}
def TABLE[y + ROWS][i] {

}
var dog = 40
var Ygritte = protect(rule(-420.72),protect(Ygritte) / -TABLE[--0.98][TABLE[-( ( ( 68 ) ) )][---0.18 - Ygritte + -foo(TABLE[81][-TABLE[-8][bar(( destroy(-Stark,-0.76,-280.4) ),-TABLE[( protect() + -Stark )][protect(protect(( -( COLS ) ),TABLE[-dog][TABLE[--350.844 - ROWS][protect(betray(0.05 + -Arya))]],y / betray(mislead(1,Stark,TABLE[TABLE[COLS][1]][bar(x * ( ( --mislead() ) ))]))),COLS) - COLS])]],ROWS + Arya) * destroy(TABLE[destroy(COLS)][Stark])]])
assert y : "Fear cuts deeper than swords."
def betray(Jon){
	dog += -COLS;
	if(Stark){

} else {
	Ygritte;
	if(-ROWS){
	if(ROWS - -590.767){
	Sansa /= Hodor
} else {

};
	Ygritte /= 0.27 - destroy(( ( 20.8051 ) + TABLE[mislead()][betray(( Sansa ),-1)] ));
	if(1){
	dog -= -120.7 - -Hodor
}
}
}
}
var Sansa = dog
def betray(Sansa){
	0.59 - Arya * ( 0.5 ) - -( TABLE[protect(protect(0.12 + foo(COLS * 0.92 - ( ( -920.536 ) )) * y * y,( bar(( destroy() ) * COLS,COLS,Hodor) / bar(Hodor,--30 / bar(protect(dog / Ygritte,Arya),( --1 / -0.6 )),protect()) ),Jon / TABLE[32][( ( ---190.36 ) )]))][( -360.191 )] )
}
var dog = ( bar(bar(-TABLE[-ROWS / ( ROWS )][96 * TABLE[ROWS - COLS - protect(-0.06)][( mislead(( ( -1 ) ),0.82,( TABLE[TABLE[foo(0.25)][( ( -110.1 + -x ) )] - 0.71 / ( 0.48 ) - ROWS][Arya] )) )]] + destroy(mislead(ROWS,-87),0.12),ROWS)) )
assert -38 : "What do we say to the Lord of Death?"
def TABLE[Hodor][i] {
	Ygritte += 63;
	dog += protect(590.915 / 93,foo(mislead(( TABLE[( y )][Stark] / -( ( Hodor ) ) ))));
	if(-78){
	Jon += ( ( x ) + dog );
	if(--( x ) * Stark){

}
}
}
def rule(){

}
assert TABLE[( COLS )][Hodor] : "One can not simply parse himself"
var Ygritte = ROWS
assert -( -0.1 ) - bar(( 62 ),70,TABLE[COLS][dog]) : "Winter is coming"
def TABLE[betray(33,( ( ( ROWS ) ) ) + protect(COLS),TABLE[-ROWS][COLS])][i] {
	COLS;
	Stark *= COLS / -dog
}
assert Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(Ygritte){
	x
}
def TABLE[Arya][j] {
	-330.6219
}
def betray(Sansa,x,Ygritte){
	TABLE[Sansa + ( Stark )][ROWS];
	( ( 1 ) );
	580.67
}
def rule(y,y){

}
var Arya = -420.2
def TABLE[-( -Hodor + bar(TABLE[betray(-( betray(ROWS) * COLS ) + mislead(-1,-1,Ygritte))][-protect(-80,TABLE[( foo(88,810.661) )][Hodor]) + mislead() + ( ROWS ) * TABLE[bar(--COLS,ROWS)][1 / x]]) )][k] {
	Jon
}
def protect(){
	-47
}
var dog = mislead(36 + ROWS,TABLE[dog][-COLS])
def TABLE[-foo(y) * y][j] {
	betray(COLS);
	foo(( -TABLE[-90.792][80.7] ))
}
def TABLE[TABLE[-foo(( Jon ))][-1]][j] {
	rule(330.205,Hodor)
}
def TABLE[( -1 )][i] {
	x -= --1;
	if(-0.1){

}
}
assert protect(-( x ) * 0.48) : "Fear cuts deeper than swords."
def TABLE[( ( ROWS ) )][i] {

}
var x = --( y )
assert Sansa : "One can not simply parse himself"
def TABLE[0.61][i] {

}
var x = ( ( 37 ) )
def protect(Jon){
	x *= ROWS
}
def TABLE[rule(TABLE[-19][betray(-ROWS)],Jon,( dog ))][i] {

}
assert --( -0.34 ) : "Fear cuts deeper than swords."
var Arya = -0.4
def TABLE[foo(( Jon / 0.84 ))][j] {
	if(rule(--( -0.91 ),400.37)){
	if(( ( 44 ) )){
	if(TABLE[--1 - -Sansa - ( 1 + y )][-mislead()]){

};
	Arya /= COLS;
	x += -destroy(-730.359,ROWS)
} else {

}
}
}
def TABLE[TABLE[72][( TABLE[dog][betray(protect(COLS,x * Jon,ROWS))] )]][i] {

}
assert Stark - ROWS + -foo(ROWS,( dog )) + foo(mislead(1),( -4 )) / betray(foo(y,foo()),--ROWS + COLS - COLS) - -1 + -Stark : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = -protect(dog * 220.57,-( y ) / ( ROWS ) - betray(dog) / --rule(Hodor,( destroy(Hodor,( -( mislead(( ( destroy(Ygritte,foo(( dog ) - --70,( ( foo(destroy()) - ( COLS + ( --ROWS / -0.5 ) ) + protect() / mislead(destroy(TABLE[Hodor + --( ( Arya ) )][foo(-0.15,TABLE[betray(-( 43 ),( ---y * Sansa )) - ---mislead(-700.6958)][protect(Jon,ROWS) - ( --( y ) )])]),ROWS,mislead(1)) ) ))) ) ) - Sansa,rule(COLS),rule(mislead(-( -1 )),-y * -TABLE[destroy(-50,-ROWS)][COLS])) ) )) ),-destroy(( COLS + Sansa ),-( ROWS )) * 270.123)) + ( 1 ) + 0
def rule(dog){
	if(-destroy(-0.75)){
	Ygritte -= COLS
} else {
	( ROWS );
	if(protect(-( ( ( ( TABLE[TABLE[COLS][Hodor]][Hodor] ) ) ) ) + rule(0.65) + betray(-Hodor - -1) + ( --44 * dog ) - 1,-rule(( COLS ),( ROWS )),foo(-0.29,COLS,83))){

}
};
	y += ---COLS - foo(x);
	y
}
def TABLE[protect(COLS)][k] {
	if(-21){
	y -= 31
};
	if(600.56){
	dog /= ROWS
} else {
	x -= bar(foo(COLS,59) + Ygritte)
};
	--0.88
}
def TABLE[rule()][j] {
	( ( mislead(--ROWS) ) );
	COLS;
	if(( Stark )){

}
}
assert rule(-54) - ( 12 ) : "Winter is coming"
assert TABLE[Stark][( -TABLE[-( ROWS ) / rule(COLS,-foo(Arya - protect(Ygritte,Arya)) / 0.42,( -( Jon ) ))][47] + -rule(-57,betray(-mislead(41,ROWS,ROWS))) / COLS )] : "What do we say to the Lord of Death?"
assert -TABLE[( -Jon )][-( COLS )] - 47 : "What do we say to the Lord of Death?"
assert rule(-0.93,protect(Sansa,foo(),-0.93)) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Jon][k] {

}
var Stark = COLS
var Hodor = 490.341
def foo(Jon,Jon,x){
	( betray(-ROWS,ROWS) );
	if(74){
	betray(foo(1,COLS),dog,ROWS)
} else {
	Ygritte += -0.2 * ( -bar(-0.64,Sansa,-bar(dog,bar(y))) ) / ( x );
	Arya -= -930.5 + --ROWS
}
}
assert -rule(rule(Ygritte,( ( ROWS ) ),mislead(protect(betray(( 2 * ( dog ) + ROWS ) / -betray(( -( 0.42 ) / -mislead(400.8,Hodor) + 0.59 + TABLE[-8][-destroy(ROWS)] + -( -0.58 ) / rule(TABLE[TABLE[TABLE[ROWS][TABLE[protect()][230.37]]][-0.05]][bar(-1)],TABLE[( x )][620.149],-foo(( --0.82 ))) * 40 ),-1),x) + -1 / ---( Arya ) - TABLE[Arya][-Ygritte] / ROWS - ( ( -260.834 ) ) - ---TABLE[( -( bar(Ygritte) ) )][ROWS] - -170.36 * ( -TABLE[Arya][-0.12 / -Stark / -200.4 / -destroy(destroy()) - Hodor] ) - ( ( --16 ) * betray(( betray(( -( foo(-47,Stark) ) ),( ( ROWS ) ) / -mislead(y) * -( mislead(ROWS) ) / Stark,-0.84 / ROWS / mislead(( TABLE[ROWS][dog] ))) )) + ( -betray(COLS) ) ) * foo(-TABLE[1][COLS],betray(--Stark / destroy(dog + bar(foo(),dog),foo(Hodor)) - ( betray(rule(0.87,-Stark),betray(),Jon) ),ROWS)) * ( ( ( y ) ) ),mislead(Arya,dog * ROWS))) - Sansa * -43 * Hodor / --( ( -Jon / destroy(( -1 ),foo(( ( TABLE[-( -0.12 ) + ( Hodor - x )][1] ) ),protect(-29,COLS + Arya,-( Jon )),x),-0.32) / ( -COLS ) / ROWS ) ) + ( TABLE[-dog][dog] + ( bar(-( 1 )) / Ygritte ) ) - x),Sansa,( ( bar(-0.5 / ( bar(-COLS) ) * ( rule(protect(-0.13,rule(dog),-0.06)) / rule(Ygritte,mislead(-90.488),Jon) ),( -0.25 / Stark )) ) )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( foo(( bar(Arya,TABLE[Ygritte][Arya]) ),y) )][j] {
	y -= rule(Hodor,x * protect(-ROWS)) + Sansa / foo(--24,protect(Sansa,Arya),-ROWS / ( protect(ROWS,Stark,ROWS + TABLE[( Ygritte )][-61]) ));
	Stark *= -destroy(destroy(0.7,-55,bar() / -TABLE[ROWS][ROWS - ( --ROWS )]),-600.27)
}
var Jon = ( ( ROWS ) )
def TABLE[mislead(betray(TABLE[COLS][y]),rule(protect(-destroy(TABLE[ROWS][COLS]),TABLE[ROWS - TABLE[( -0.49 )][Ygritte]][( Jon )])))][j] {
	dog /= ROWS;
	dog * ( COLS );
	if(1){
	dog += 1
} else {
	dog += COLS + COLS;
	0.73;
	if(--68){
	if(( x )){
	if(-Jon * mislead()){
	dog += destroy(TABLE[dog][COLS]);
	if(( ( -foo(dog) ) )){
	if(0.95){

} else {
	if(-protect(( COLS ) + Sansa,bar(-42),Ygritte)){
	if(--foo(rule(( -900.4 )) - ROWS,15)){
	x += betray();
	y -= destroy(protect(COLS,Sansa,--0.11),-0.64,dog)
} else {
	Ygritte *= ( Arya )
};
	Jon -= y
};
	Sansa *= COLS;
	Ygritte /= TABLE[11][mislead() * --( 0.17 )]
}
} else {
	if(0.97 + ( ( 1 ) )){

} else {
	if(Jon * destroy(( protect(Stark,( ROWS )) ))){
	-foo(ROWS,-0.44,( TABLE[-69][destroy(-11,-51,COLS) - 1] ) * ( Ygritte ));
	Jon *= COLS
} else {
	dog *= Hodor;
	Ygritte -= mislead(-dog) / ( ( ROWS ) );
	if(( ( -COLS ) )){

} else {
	dog /= ( COLS );
	Arya *= ( ( Arya ) )
}
};
	-12
};
	if(TABLE[( ( TABLE[COLS][52] ) )][TABLE[ROWS][0.56]]){
	if(mislead(y,-ROWS,destroy(-TABLE[-foo()][Arya]))){
	Ygritte
} else {
	Stark += 0.16;
	x /= --dog
}
} else {
	Jon -= --110.4704
};
	if(TABLE[ROWS][-0.73]){

}
};
	( -670.411 )
} else {
	protect(( 32 ));
	Sansa += -0.55;
	Ygritte -= ( ROWS ) / -bar() + ROWS
};
	if(COLS){

}
};
	if(destroy(dog) / ( ( 240.36 - -( Jon ) - bar(1,dog * -1) / -( rule(bar(mislead(Jon) * -0.14) - betray(rule(TABLE[rule(-TABLE[( Stark )][COLS] + ( --610.2197 + 72 ))][protect(foo(COLS,-1),-0.5) - ( protect(-Sansa) )],0.38))) / y ) - 77 + bar(Stark - COLS + 29 + -5) * ( ( mislead() * COLS ) ) ) )){
	if(foo(( x ) * rule())){
	if(( -1 )){
	if(-----x / --360.16){
	Arya /= COLS
} else {
	if(Arya){
	Arya -= COLS / Stark
}
};
	if(COLS){
	55
} else {
	TABLE[-rule(protect(--destroy(--COLS) / --26 + ----230.297 * Ygritte / Jon,( -0.73 )))][-1];
	-70 + bar(betray(),TABLE[-0.26][( TABLE[-Hodor * -Sansa][-1] )] / -( ( ( -15 ) ) ) / -( ( Sansa ) ) * TABLE[COLS][-ROWS]);
	Arya /= ( Arya )
}
} else {
	if(--Arya / rule(COLS,-Hodor - rule() * -x - x,( Arya ))){
	if(x){
	if(0.32){
	if(destroy(( bar(-( ( ( protect() - -0.85 ) ) )) )) * TABLE[( ROWS )][--ROWS]){

};
	Arya *= Arya
};
	if(TABLE[19][TABLE[TABLE[-0.69][840.8]][COLS]] / foo()){
	if(-0.74){
	y /= x;
	Hodor += --( ( 920.136 ) ) - -6
} else {
	Ygritte += destroy(y,TABLE[foo(bar(-30),Sansa,-160.287)][ROWS])
};
	if(-860.59){
	ROWS
};
	x *= Hodor
}
};
	destroy(---( 12 ))
} else {
	if(Jon){
	COLS
};
	mislead(( Sansa ),-99 / 1,( ( -COLS / --( 0.18 ) + -( TABLE[Sansa][--ROWS] ) * COLS ) )) + -52
};
	mislead(63);
	280.371
};
	Sansa /= ( -0.82 );
	if(TABLE[-TABLE[x][destroy(-x)]][bar(-0.41,( -Jon ))]){
	Sansa -= foo(---ROWS,ROWS)
}
} else {
	0.62;
	if(( --150.46 )){
	x *= -( Stark )
} else {
	( COLS )
};
	( TABLE[1][dog] )
};
	-ROWS
} else {

};
	if(Sansa){
	Stark -= ( ROWS ) - -( dog );
	-85
}
} else {
	y /= destroy(( rule(( mislead(ROWS,Ygritte) ),TABLE[y][-0.61],mislead(( 33 ),destroy(TABLE[5][( rule(rule(Jon,--1 - 0.93 * ROWS / ( -ROWS / COLS ),-Stark)) )],( betray(mislead(COLS,betray(( -mislead() )))) ) + ROWS),Arya)) ));
	if(mislead(-0.34 * -30.79,mislead(betray(-ROWS / protect(),( ( --100.579 ) )),-dog),mislead(Sansa - 0.28,-1 + dog - -0.77,dog))){

}
}
}
}
var Arya = --betray(520.424,Arya,Arya * protect(ROWS + -rule(),--bar(dog,28 + -Hodor,-670.859))) / TABLE[foo(-69,-COLS)][( ( -990.746 + -destroy(-Arya,protect(COLS / mislead(( bar() ))),rule()) * mislead(( -bar(ROWS,bar() + ( ROWS * y ) / -0.67) ),( ( ( -0.8 ) ) ) / TABLE[-mislead()][( 91 )]) + Arya ) )]
def rule(dog){

}
def foo(y,Stark){
	if(TABLE[-72][COLS] * ROWS){
	( dog )
} else {
	COLS;
	Hodor *= Hodor
};
	Sansa /= --( Sansa );
	Ygritte += foo()
}
assert foo(0.74,--0.95) : "Fear cuts deeper than swords."
def destroy(Sansa,Jon){
	Jon /= ROWS
}
var Arya = -640.9528
def TABLE[-COLS][k] {

}
def TABLE[TABLE[( 0.89 )][x / y]][j] {
	( -0.43 );
	if(-190.44){
	-COLS / ( ROWS ) / COLS;
	Stark /= mislead(rule(( --ROWS ),( mislead(-1 - COLS * TABLE[-TABLE[dog][dog] - bar(betray(-COLS))][COLS],44 - ( TABLE[( ( ( Stark ) ) )][dog] ),bar(Jon)) ),--Arya))
}
}
var Hodor = x
def TABLE[-TABLE[-TABLE[-7][32]][COLS]][j] {

}
assert Stark + ( ROWS ) : "One can not simply parse himself"
assert TABLE[( COLS )][x] : "What do we say to the Lord of Death?"
def protect(Jon){
	Sansa += -0.1
}
def destroy(Stark){
	if(ROWS){

} else {
	( ( betray(-foo(COLS,mislead(-rule(0.52,Jon,-620.62))) + foo(),TABLE[TABLE[dog][COLS] - --Stark / rule(destroy(TABLE[Arya][Arya],93,COLS))][protect(Stark) - -860.8909 * COLS]) ) );
	( -COLS - 0.01 )
}
}
def TABLE[Stark][k] {
	if(destroy(Hodor,protect(COLS,90),-TABLE[-0.81 / -( x )][rule(380.2)])){
	if(COLS){
	if(-1){
	y -= -( x )
} else {
	Sansa /= -0.25;
	Ygritte -= COLS;
	Stark
}
} else {
	y;
	Hodor += y
}
} else {
	bar(Sansa)
};
	--0.68 + destroy()
}
def TABLE[-Jon][k] {
	if(TABLE[Ygritte * -betray(Hodor)][mislead(-( -y / bar(y * COLS,foo(y)) - TABLE[( mislead(390.0171) ) / ( ( -COLS ) )][( -( betray(foo(x) / foo() * -Sansa - -1 * protect(-60,-bar(Stark,ROWS))) * ( betray(rule(ROWS,-0.89),--Sansa / betray(-Stark / ( COLS ),foo(rule(-1,( Stark ) - y),TABLE[ROWS * ( ( --Jon * --0.79 - protect(COLS) ) )][bar()],Stark),( bar(protect(dog,Ygritte,-rule(92))) )) / -Jon / foo(Ygritte)) ) ) - Stark )] + Stark * 26 - mislead() ) * -( -( -0.73 ) ))]){
	--( ROWS - ( -9 ) )
} else {
	( protect(mislead(betray(--1,TABLE[COLS][( dog )] * ROWS + ROWS + TABLE[betray(-44,Stark)][( protect(rule(( Stark ) - COLS),bar(Ygritte,destroy(Arya,( bar(rule(mislead(( ( bar() ) * -TABLE[--COLS - ( -320.7266 )][-x * y * -27 * 71 * ROWS] * ( betray(-64,-TABLE[COLS][--90]) ) ) / ROWS))) )),COLS),foo(rule(0.86),foo(-72,( -14 )))) )] + ( ( mislead(protect(Sansa,ROWS / ( COLS / 0.53 / x ),-0.24)) ) * ROWS + -56 ),( dog + ROWS ) * TABLE[bar(bar(( mislead(COLS * -( 36 )) )),-Stark + Arya) + ROWS][65]),COLS),0.92,1) );
	mislead()
}
}
var dog = 1
def destroy(Sansa,Arya,Ygritte){
	Arya -= dog;
	( protect(bar(ROWS,ROWS),foo(( ( ( ROWS + ( ( ( TABLE[-( -0.84 + Arya * -17 * 21 ) + TABLE[TABLE[-1 * 0.8][( -betray(protect(-Stark,-23),( COLS / -( betray(( Stark )) - -TABLE[protect(protect(-20.7341),ROWS / dog)][COLS] ) / mislead(Arya,41,Ygritte) )) + foo(COLS,0.4) + ( -TABLE[ROWS][91] ) )]][ROWS + x] / -Arya / COLS][( -590.2632 )] ) ) ) * ( -foo() ) ) ) ),-( 17 - COLS )) / COLS * Hodor + ( foo() ),-Ygritte) )
}
def TABLE[TABLE[dog][ROWS]][k] {
	-( mislead(0.98) ) + -28 - ( 53 ) / protect(-Stark) + ROWS;
	0.8
}
var dog = bar(Hodor,710.88,mislead(betray(( 0.91 ),x)))
assert -31 : "Fear cuts deeper than swords."
def bar(Sansa,y){
	if(Jon){
	mislead(Ygritte);
	Jon += Sansa;
	-54
}
}
assert ( x ) / ( -0.46 ) - ROWS * rule(COLS) : "One can not simply parse himself"
def TABLE[COLS][j] {
	x
}
assert ( 0.64 ) : "One can not simply parse himself"
var Arya = -rule(rule(-( rule(--73,bar(COLS)) ) * 0.44 * destroy(( ( rule(Stark) ) ),mislead(-Jon),-( protect(Sansa) ) / -0.5 * x / -destroy(-0.43) / COLS / 0 / destroy(( mislead() ) + --1 + ( ROWS ))) * Hodor * TABLE[protect(COLS)][bar(( Hodor ) / -( -ROWS ) / -0.69 - y)],COLS,ROWS),-( -850.74 ))
def TABLE[Jon][i] {
	-200.875 + rule() * protect(470.994,( betray(dog,-70) - y ),3 - x)
}
def TABLE[rule(Sansa,10)][i] {
	-( foo(( ( TABLE[destroy(( rule(--57,x) ),Ygritte) / TABLE[-1 / betray(-0.07) * ( 0.18 )][-Ygritte] - ( -58 )][x + -98] ) ) / x) ) - -760.14 + rule(betray(--1),0.31);
	Jon;
	rule(TABLE[-ROWS * ROWS][( 19 )] + -0.55,TABLE[COLS][Sansa])
}
def TABLE[Ygritte][j] {
	Ygritte + -940.06;
	if(COLS){
	dog -= bar(destroy(Ygritte,( mislead(ROWS,-1) )))
}
}
var Sansa = bar(46,( rule() )) + Sansa
assert ( -bar(--0.58) ) : "What do we say to the Lord of Death?"
var dog = destroy(TABLE[Jon][-ROWS],( -480.08 )) * protect(-( Stark - Hodor )) - -( -0.71 )
def TABLE[( 1 ) + -COLS - -destroy(-mislead(( -foo() - -Hodor )) - rule(-( protect() ))) * protect(0.38)][i] {
	ROWS
}
def foo(Ygritte){
	1;
	-bar();
	if(protect(77,( ( -foo(-COLS) ) ))){
	if(Jon){

} else {
	Sansa -= bar(-120.1,Arya)
};
	if(-x){
	if(-COLS){
	dog -= 850.075;
	Jon
} else {
	( -71 );
	ROWS
};
	if(-dog){
	Sansa /= mislead(-78);
	( 0.06 ) - --1 - --0.34 / betray(Arya,10 - ( Arya )) * dog;
	Hodor /= --TABLE[730.519][x] * mislead(Ygritte) * COLS
} else {
	destroy(-rule(-betray(( -foo(mislead(),dog) ))),( mislead(TABLE[protect(TABLE[---Sansa][Arya])][240.93],600.59) ));
	protect(Arya,bar(COLS) + --Ygritte,ROWS)
};
	Hodor *= Sansa * 1
} else {
	ROWS;
	-( Arya )
};
	if(foo()){
	Hodor;
	Stark
} else {
	---( destroy(-210.33,( --TABLE[COLS][1] )) ) * rule(Stark,---830.2679) / -mislead(ROWS,( rule(-( protect(( dog ),foo(0.09,Jon)) )) ));
	Hodor -= 35
}
}
}
def TABLE[-( Arya )][k] {
	if(-95){
	if(destroy(( TABLE[Jon][COLS] ) * rule(dog - rule(( TABLE[COLS][-dog] ),-0.66 * -0.52 / foo(58,ROWS,y * 43),-dog) * Jon))){
	destroy(TABLE[( -Arya - Hodor )][Jon],ROWS);
	Stark *= TABLE[destroy(-230.36,destroy() / destroy(-rule(),( Sansa ),ROWS) - betray() + 21 / --TABLE[COLS][-destroy()])][Sansa]
};
	if(-( foo(-protect(-bar(-30.125,mislead(ROWS,( mislead(( -Hodor + ( COLS ) * 0.29 ) / -62,0.74,( -Stark / foo(Stark,-0.21) )) ),Arya),810.17),foo(Stark,-x))) )){
	if(-( 0.29 ) + -0.64 + 0.51){

} else {
	-560.53;
	mislead(Sansa,0.88)
}
}
} else {
	Stark -= ROWS
}
}
def destroy(x){
	if(( -bar(-0.74,ROWS,COLS) )){
	y += betray(-0.11)
};
	if(protect()){
	if(--1 / -1){
	if(-300.64){
	if(--0.06){
	if(destroy(y + ( ( rule(-ROWS,COLS,betray(mislead() * -ROWS / -75,COLS)) ) ) * --980.4717,dog,mislead(foo(TABLE[-( ( -0.97 ) )][0.83],Hodor),foo(-0.93,0.74),-Sansa))){
	if(TABLE[bar()][-protect(( -1 ),( rule(--1,destroy(-38,1 + ROWS,rule(( ROWS )))) / ( ROWS ) ))]){
	( -0.01 / -Ygritte )
};
	if(COLS * ROWS){
	20.57
}
}
};
	if(Sansa){
	if(COLS){
	Arya *= foo();
	Ygritte
} else {
	--64
}
} else {
	Jon;
	Stark -= 0.58
};
	( betray(TABLE[---0.77 - Arya][( ROWS )]) )
} else {
	COLS
};
	if(TABLE[-destroy(-270.1)][( -( TABLE[( 0.21 ) + bar(Ygritte,rule(( ROWS )))][rule(( --0.57 + TABLE[ROWS][mislead(TABLE[-360.984][--protect()])] ),dog,Hodor) + -( dog )] * protect() ) )] * ( bar(( y ) / betray(ROWS,foo(( -( Ygritte ) ),--190.34 / bar(Hodor,ROWS * rule(rule(TABLE[dog][COLS],( ROWS )),-0.49 * ( ( foo(dog) ) )) / COLS,Arya))),1) )){

}
}
} else {
	COLS
};
	Ygritte -= Stark
}
var dog = -TABLE[---26][Ygritte]
def bar(Stark){
	Sansa *= 0.19;
	( --destroy(ROWS) );
	Hodor
}
def protect(y){
	Stark -= -Sansa;
	1;
	Jon *= y
}
assert 680.03 - protect(Ygritte) : "Fear cuts deeper than swords."
def destroy(x,x,Jon){
	-mislead(destroy(bar(ROWS,ROWS),-Sansa,bar()));
	x
}
def TABLE[( ( -1 ) )][j] {

}
def TABLE[Jon][j] {
	x * -betray(bar(( y ),TABLE[rule(Jon)][-0.93]),ROWS,-1) * bar(( ROWS ));
	Sansa
}
def rule(Arya){
	x -= 0.46;
	Arya *= -Stark
}
def betray(Ygritte){
	COLS;
	ROWS
}
assert Hodor + y : "Winter is coming"
assert bar(38) : "Fear cuts deeper than swords."
def TABLE[-1][i] {
	( y );
	Jon;
	if(920.31){
	x /= --COLS * ROWS - TABLE[--( protect() ) / COLS][-foo(-75,mislead(),-50)];
	if(-bar(TABLE[protect(-450.521)][( 75 )],( Stark ))){
	Jon /= ROWS;
	TABLE[( Jon )][COLS]
} else {
	if(-60 - --18){
	mislead()
};
	if(-( x + -0.17 + Jon )){

} else {
	if(( -0.81 )){
	Sansa *= -1;
	Hodor -= -0.746;
	if(740.39){
	destroy(ROWS)
} else {
	y *= rule()
}
}
}
};
	x -= COLS
} else {
	if(-ROWS * -COLS - -TABLE[ROWS][TABLE[--0.27][dog] + 62 - TABLE[-COLS][( mislead(( TABLE[970.7267][-ROWS] ),----Stark) )] / -99 + --0.33] * ROWS){
	if(x){

} else {
	Stark += rule(dog,TABLE[( Sansa )][----ROWS - Sansa]);
	Ygritte /= -83
}
};
	if(ROWS){

} else {

};
	x -= ( ( ( -TABLE[bar(-y,ROWS,TABLE[( mislead(( COLS ),COLS) * 0 )][Stark])][Jon] ) / mislead(( ( mislead(-47) ) ),-Sansa / Ygritte,COLS) - COLS ) )
}
}
def TABLE[-destroy(mislead(TABLE[destroy(-0.54)][-ROWS]),( COLS * betray(-0.09,foo(-410.65 + ROWS)) ) + x)][i] {
	if(bar()){
	destroy(( ( -TABLE[x][0.2] ) ))
};
	Hodor -= ( Jon )
}
def protect(Jon,Jon){
	0.56;
	( 230.7 / dog ) + Sansa;
	y /= -( rule(Ygritte,protect(-1,x)) )
}
assert Jon : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-360.444][j] {
	-y;
	dog *= Jon
}
var y = TABLE[-430.5832][Sansa - -0.86]
assert ( ( -0.59 ) ) : "Nothing burns like the cold."
def TABLE[-TABLE[( Jon )][220.23]][k] {
	if(-0.97){
	if(mislead(rule(Arya - ( --600.152 )),0.71)){
	if(mislead()){
	( mislead(TABLE[( Arya - TABLE[--( protect(-0.42,( 0.59 )) )][bar(TABLE[( 40.61 )][-( destroy() )])] * protect(Sansa) )][mislead(--( TABLE[Jon][-( ROWS )] ),-( ROWS / Sansa ) + 0.84 + --5,--COLS * TABLE[( COLS )][destroy(TABLE[Stark][COLS] + COLS,-COLS,-1)]) - bar(--0.77,32)]) );
	Hodor /= -0.7 - TABLE[foo(Arya,Ygritte) - COLS][Sansa] - -0.15
} else {
	if(-0.63 + ROWS){
	if(0.86){

};
	if(Ygritte){
	( ---1 );
	Sansa += ( COLS );
	Ygritte
} else {
	Stark += dog
}
};
	Arya *= Sansa
};
	Hodor -= ROWS;
	if(rule(-27 + COLS,-15,ROWS - 41 / ROWS)){
	if(-mislead(x,destroy(89,( betray(-x) )) + -0.13 - ROWS)){
	if(( ( ( ( protect(protect(Stark,foo())) - -rule() ) ) ) )){
	Arya -= Sansa;
	-TABLE[bar(-400.896,COLS,( -Stark ))][ROWS];
	x * TABLE[-Ygritte][COLS]
};
	if(-270.1266 * COLS * 89){
	if(-ROWS){
	if(--protect(y)){
	rule(( COLS ));
	if(ROWS / ( ROWS )){
	110.1691 + 23;
	-y;
	dog -= 47
}
} else {
	if(Ygritte){
	if(Sansa){
	Sansa *= destroy(-COLS)
} else {
	Stark *= -630.51;
	-y;
	if(( -( -0.89 ) )){
	if(destroy()){

};
	if(ROWS){
	Jon *= ( Ygritte );
	if(( betray(betray(),Hodor) )){
	0.88;
	y *= -28;
	-TABLE[--0.77 * ( -1 + ( ( -950.83 ) * ( Stark ) ) / COLS ) + y][-28]
}
}
}
};
	Sansa += ROWS
}
};
	y += betray(mislead(-x / y,ROWS,betray(-0.45 * COLS)) - -( ( -550.58 ) ));
	if(Arya){
	( ( Sansa ) / -( dog ) );
	-54
}
} else {
	y -= ROWS
}
} else {

};
	dog *= Arya * TABLE[( Stark )][x]
};
	Hodor *= 39
}
} else {
	if(Hodor - ROWS){
	if(-betray(( 1 ) - protect(COLS - bar(-destroy(Stark,-1),( Stark )),mislead(-COLS)),80)){
	Jon *= mislead(-27,mislead(( ( 90 ) ),( 70 )));
	( -160.3972 )
};
	if(--0.28){
	Hodor /= y
} else {
	( ( bar() + dog ) )
}
}
};
	Stark *= dog + dog - -foo(destroy(-TABLE[COLS][ROWS],-Hodor),bar(--69,COLS,Sansa)) * -( -( ROWS + ( ( -bar() + ( Arya ) ) ) ) )
} else {
	( Ygritte );
	y *= -( COLS )
};
	Ygritte;
	if(--( ROWS )){
	if(rule(-dog,-130.37)){

} else {
	betray(COLS,1 + ( foo(( ( -1 ) ),bar(350.73 * COLS,foo(rule(ROWS),( -1 )))) ),( --ROWS / Jon * Sansa / -y - COLS ));
	if(x){
	Hodor -= destroy(COLS,COLS / ( Sansa ));
	Arya -= betray(( -0.24 ))
}
};
	-0.63 / TABLE[Sansa + --1][Arya - TABLE[-ROWS / mislead(rule(COLS) + betray(mislead(-Arya),COLS))][-y]]
}
}
def betray(Arya,Ygritte,Ygritte){
	if(TABLE[Stark][-destroy(( ROWS ),Arya * ---1)]){
	Stark -= Arya
};
	67
}
assert ( TABLE[-TABLE[( -x / TABLE[-28][-protect(foo(--21 / Stark),Arya,ROWS + Ygritte)] ) / -0.37][( -COLS )]][Ygritte - -( rule(-31) )] ) / ( COLS ) : "What do we say to the Lord of Death?"
var Jon = Ygritte
def destroy(Hodor){

}
assert bar(ROWS,-0.64) : "What do we say to the Lord of Death?"
var Arya = Arya
var Sansa = rule()
var Ygritte = ROWS
var y = bar(-42,COLS)
def protect(Sansa,Arya){

}
var Sansa = Hodor
def TABLE[Sansa][j] {

}
def destroy(dog){

}
def TABLE[Stark - rule(-0.55,-ROWS)][i] {

}
def TABLE[( 91 )][i] {
	bar(-Sansa);
	-88 / ROWS * -1
}
def TABLE[-y - x][i] {
	Stark /= 75;
	if(( ( -0.68 ) + 610.5 - -( bar(TABLE[( x )][ROWS]) - mislead(COLS,( -1 + ( ROWS ) ),ROWS * ( y * protect(( -Arya ),y,mislead(Ygritte)) )) ) + TABLE[( destroy(-0.53,ROWS) ) * ROWS][( betray() )] - COLS )){
	if(( ( -0.03 ) )){
	if(25){
	Arya -= ( TABLE[-1][-COLS] );
	if(bar()){
	Ygritte /= mislead(TABLE[-0.17][Ygritte],Sansa,( ROWS )) + --710.5895 - ROWS;
	x *= -47 * -rule(( rule(dog * 70 * -0.67 * 1 + ROWS) ),rule(---ROWS,( mislead(-dog) - -( TABLE[TABLE[-mislead(foo(( x ),mislead(( -Hodor ))),COLS)][-1]][-1] ) ),-920.403),bar());
	if(( TABLE[( Jon )][--( ROWS )] )){

} else {

}
} else {
	Ygritte -= ( Arya )
}
} else {

}
};
	-( 1 );
	if(( Stark )){

}
} else {
	Stark += foo(betray(),dog,0.95);
	if(-destroy(( ( dog ) ),( x )) / -51){
	490.71;
	y;
	x *= Hodor
} else {
	Sansa += 0.2;
	Arya /= destroy();
	Jon
}
}
}
def TABLE[-TABLE[( COLS )][1]][k] {
	Ygritte /= COLS;
	-( COLS )
}
def destroy(Hodor,Stark,Hodor){
	if(1){
	if(Ygritte){
	betray(Arya,bar(ROWS),x);
	if(---1 / protect(Ygritte,mislead()) - --Jon + ROWS){
	if(TABLE[( y )][-34]){
	---TABLE[860.585][--35];
	x += ROWS
} else {
	if(-0.4){

} else {
	x += 680.5426
};
	Ygritte
}
}
}
};
	x -= ( COLS )
}
def betray(Ygritte){
	dog;
	if(COLS){
	COLS;
	Ygritte += foo(-1)
} else {
	( -481 ) - Ygritte;
	Ygritte -= COLS - ROWS;
	( -TABLE[Jon][( 38 )] )
};
	COLS
}
var Ygritte = ROWS
def TABLE[( -( TABLE[betray(ROWS)][ROWS] ) / rule(-( Hodor ) * Ygritte,rule(--77,-61)) )][i] {
	Hodor += ( TABLE[dog / TABLE[--1][Arya]][foo(( Stark ),ROWS)] );
	( rule(protect(),-240.303) )
}
def betray(Arya){
	x += ROWS;
	if(0.63){
	-( COLS + -0.77 );
	TABLE[( ( -5 ) )][TABLE[-y - Sansa][dog]]
}
}
def betray(Ygritte){
	( ( y ) );
	if(Hodor){
	if(foo(-ROWS)){
	Sansa *= ( --( Jon ) * Sansa / dog )
} else {

};
	if(-COLS){

} else {
	-0.8;
	Arya *= TABLE[43][( protect(rule(0.96,protect(TABLE[( protect(destroy(foo(COLS),( Ygritte ) - TABLE[0][( ROWS )],Stark),mislead(rule())) )][( TABLE[Hodor][( -( -Arya ) )] )]),540.452 - ---65 / destroy(dog,30.4848 * Sansa * ROWS * Arya,( COLS + protect(TABLE[( 0.97 )][Arya - Stark],36) )))) )]
};
	if(ROWS){

} else {
	Jon /= -( -0.74 ) * ( 82 );
	if(-protect(-Stark,COLS + COLS / ( ROWS ))){
	if(COLS * 350.67){
	mislead(ROWS,COLS + rule(50,Sansa),( Jon ));
	if(bar(TABLE[dog][Stark])){
	--79
} else {
	if(-rule(-330.0267) * -0.93){
	x += COLS;
	if(--30 / mislead(-5 - -dog + protect(( COLS )),-destroy(ROWS + -dog)) / --foo(-( -x ))){
	if(12){
	y /= ( destroy(-ROWS,betray(x)) );
	foo(COLS,-ROWS)
} else {
	y /= destroy() - y;
	ROWS;
	if(( protect(ROWS,( y )) + x )){
	if(COLS * ( dog ) + TABLE[-Stark + TABLE[( Ygritte )][--Hodor]][Arya]){
	y *= -( -0.48 )
} else {
	dog *= COLS;
	if(Sansa){
	( dog - y - ( y ) );
	TABLE[64][bar()];
	Ygritte -= COLS
} else {
	if(destroy(-0.42)){
	if(-0.07){

};
	-( COLS )
} else {
	if(betray(foo(ROWS) / foo(Jon))){
	if(TABLE[( -0.16 )][protect(-( 1 ) + ( ( ( ( COLS ) ) ) ) - --Jon + ( -( -94 + -0.28 ) * rule(( -destroy() / TABLE[dog][TABLE[-1][Sansa]] * TABLE[Ygritte][Jon] ),( bar(foo(destroy(Ygritte / foo(),( ( Ygritte ) ) + foo(-ROWS)),TABLE[-Arya][1]),-x) )) * 0.18 ) - x / ( ( COLS ) ) * y,rule(--89 * -31),y)] / protect(( protect() ),foo(( destroy(-30,TABLE[Hodor][--COLS],Arya + mislead(COLS,Ygritte)) ),-ROWS,-580.699))){
	ROWS
} else {
	if(( ( Ygritte ) )){
	if(ROWS){

};
	Sansa -= Stark
};
	( -59 )
}
};
	ROWS
};
	Jon += ( Sansa )
}
};
	Arya -= COLS * ROWS;
	if(-35){
	Stark /= -bar();
	Sansa;
	Ygritte -= 0.37
}
} else {
	dog *= x
}
}
}
} else {
	Ygritte *= protect(TABLE[( x ) * Stark - ( Stark )][( ROWS )]) - ( COLS )
};
	Ygritte *= ( -rule(( ( Sansa ) )) )
}
} else {
	destroy(0.34 + -TABLE[( y ) - COLS][0.65],y);
	Jon += ( Arya ) - -Stark + -( Sansa * rule() )
}
} else {
	if(y){
	-COLS
} else {
	if(COLS + ROWS){
	if(bar(betray(( ( Sansa - TABLE[-Hodor][ROWS + Arya + ( -14 )] ) ) / ( ( COLS * ( y ) ) )))){
	if(betray(( ( COLS ) ),Jon)){
	if(( betray(COLS) / ( Hodor * TABLE[mislead(TABLE[mislead(betray(-( COLS )),-0.35 - TABLE[TABLE[940.296 * 99][TABLE[-1][destroy()]]][( ( Arya ) ) / ( Arya )])][( -11 )] + -0.7)][COLS] ) )){
	betray(( TABLE[( rule(bar(( rule() ))) )][ROWS] ),0.1,( ( ( mislead(( ( -0.8 ) - Sansa ) / ROWS / -( ( -COLS ) ),0.96 - ( destroy(-0.07,-1 - ( -TABLE[( x )][dog] )) )) ) ) ) - ( -0.91 ))
}
};
	Sansa *= Ygritte
};
	y /= y
}
}
}
}
} else {

}
}
def TABLE[( TABLE[Stark][-TABLE[x][-( ( COLS ) )]] )][i] {
	if(protect(Jon,( -ROWS - ( --660.4945 ) - 330.372 ))){
	dog -= betray() - -0.62;
	Arya += foo(Jon)
} else {
	if(x){
	if(( --5 + bar(-( protect(-0.83) )) )){

};
	if(Sansa){
	if(rule(-Sansa,ROWS + betray(x) * protect(--98,protect(-( ( ( -foo(TABLE[ROWS][foo(mislead(COLS),ROWS)]) * -0.23 - x / -1 ) ) ) - COLS,Arya)),rule())){
	-COLS - foo(Ygritte,1,y)
} else {
	if(14){
	y *= ROWS
} else {
	-0.1 + foo(-980.524,TABLE[--79 + ROWS][dog],Jon);
	Sansa /= -0.96;
	rule(450.6,Jon,betray(( foo(-( 52 ) - betray(( ( -51 ) )) - TABLE[( COLS / -0.25 / bar(-0.84,ROWS) ) + ( COLS ) / Ygritte][Jon],foo(-960.863,( COLS )),-( Ygritte )) )))
}
};
	-TABLE[TABLE[-Hodor][COLS] - -0.88][-21] + x
}
};
	-protect(-( ( --1 ) ))
};
	y;
	if(Ygritte){
	--ROWS + ( -bar(foo(-TABLE[ROWS][mislead(-1,( rule(-0.33,( 85 ) - ( 10 ),( -85 )) ))] * 910.14 + betray(bar(-0.11)),COLS),( destroy(--( 590.1 ) - dog,-1,-foo(( bar(0.25) )) + Sansa) )) * ( ROWS ) / --0.52 ) * ( Ygritte ) + 99 - Stark * Sansa * ( -rule(ROWS * Ygritte,betray(-rule(y) / ( ---dog + dog ),protect(TABLE[dog][-( destroy(Ygritte,Stark,( -mislead(( Jon ),( 1 - --Arya * 330.79 ) / -39 / ( -protect(-Hodor * TABLE[( y * betray(-0.93 + dog) )][x],COLS) ) - ROWS) )) )],( TABLE[-0.49 * foo(79,protect(TABLE[ROWS][TABLE[ROWS - --0.23 * mislead()][---ROWS]]))][( betray() )] ),-bar(protect(Hodor,betray(COLS),mislead(protect(( TABLE[y][-( -TABLE[--TABLE[TABLE[-530.029][--( mislead(Jon) )]][--rule(foo(betray(Hodor) * ( ( dog ) ) * -740.72,COLS - ( --0.34 )))] - ---14][-COLS] + ROWS )] )),-Sansa / 1)) / ROWS,bar(),COLS * foo()) / Arya + ROWS * ROWS)) + betray(( Stark ),Hodor)) );
	if(( --Stark )){
	if(-mislead(dog,( Arya * 0.53 ) / Stark)){
	--0.48
} else {
	COLS;
	if(betray(-betray(x,( ( -destroy(TABLE[( 74 )][-6] / -COLS) - ( destroy(( rule(y) ) / -rule(-530.7,protect(-ROWS - foo(),-680.5876)) - -( y ),COLS) ) - -740.7 - ( protect(--0.13,TABLE[--1 + 1][0.86],Hodor) ) ) ),0.37),COLS,( ( 0.08 ) - betray(ROWS,-92,destroy(Hodor)) ))){
	( -85 + ROWS / ( -( Jon ) / foo(( destroy(TABLE[-y][39 / Hodor - -1 - ( -1 ) - y]) )) ) ) / 1 + 0.95;
	if(( -( ( rule(rule(foo(( rule(bar()) / ( ROWS ) * ( -30.813 ) / Hodor + ( COLS ) )),-0.51)) ) ) ) - ROWS){
	if(rule(-ROWS + 1,ROWS)){
	if(mislead(rule(-0.16,ROWS,destroy()))){
	( ( -0.5 - -90.98 ) )
} else {
	if(destroy() / --80){
	y - -protect();
	( ( 1 ) )
}
};
	Hodor -= bar(ROWS);
	COLS
}
} else {
	if(TABLE[destroy(rule(COLS,TABLE[-COLS / protect(x,( destroy(-dog) / ( 1 / ---( -rule(Hodor - ROWS,-Arya) ) ) + x ))][mislead(( -( --20 ) * --mislead() ))] + destroy(),-bar(y) / mislead(Hodor) / foo() * y)) - destroy(( rule(( -betray(Ygritte) )) ),Hodor,-TABLE[dog][-13] / -Stark)][Jon / -0.68 / --0.11 - rule(( TABLE[( ---1 )][520.7456] ),0.28) - 36]){
	Jon -= -rule(( 0.91 ),( ROWS ));
	-1
} else {

}
}
} else {
	Jon /= bar(dog)
};
	Hodor *= --rule(rule(),rule()) / mislead(mislead(),( -1 )) - Arya - ( -960.621 )
}
} else {
	if(rule(-dog + COLS - 340.863,rule(0.17,--0.23 * TABLE[foo(-290.1)][510.1] + Sansa * 7,17),bar(Hodor,protect())) + -foo(( dog ),0.31,ROWS) - TABLE[x][Ygritte]){
	Jon *= ( TABLE[0.12][Sansa] )
}
}
} else {
	TABLE[TABLE[protect(-( mislead(ROWS,mislead(( TABLE[Arya + -0.88][-foo(Jon) + ( ( ( mislead(bar(rule(( foo(-700.5) ),x,1))) ) ) )] ) * ROWS / 0.06 + ( -0.17 ))) ))][dog]][-y];
	x += betray(( ROWS ))
}
}
def destroy(Hodor){
	if(TABLE[foo(--150.993)][( Jon )] / protect(TABLE[Stark][ROWS]) + COLS + x){
	y *= 51 * TABLE[mislead(39,TABLE[--x][mislead(betray(TABLE[COLS][-COLS]))])][COLS];
	rule(-protect(),rule(1,foo(COLS * ( -35 ),Stark)));
	if(-0.19){
	Sansa *= 66;
	if(( COLS )){
	-foo(protect(Sansa))
};
	x += -0.36
}
} else {
	if(771){

} else {

};
	dog -= 1
}
}
def mislead(y,Ygritte){
	COLS;
	if(Jon){
	if(TABLE[( COLS ) + -mislead(foo() * Stark,mislead(-36,-bar(-1,foo(COLS)) - destroy(( foo(TABLE[--1 / ( mislead(TABLE[Ygritte][-( ( destroy() ) )]) ) / -1 + COLS][0.03] - ROWS) )) - ( TABLE[TABLE[( COLS - destroy(protect(--1 * -0.34,-23)) - bar(-x,36) )][ROWS]][foo(-ROWS,Arya)] ) - TABLE[( COLS )][COLS] + Hodor))][TABLE[1][-620.1]]){
	y += betray()
}
};
	Sansa
}
var Jon = TABLE[Stark][COLS]
assert betray(betray(dog,-520.564),bar(( foo(Jon) ) + 46,TABLE[bar(-0.49)][-0.64],TABLE[1][foo(-destroy(--foo(protect(--0.68 * COLS,--0 - Ygritte + ROWS,COLS) * 0.3 - -31 / y,-Ygritte)))])) + 0.28 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert 0.48 : "Winter is coming"
def betray(Ygritte,Hodor,Hodor){
	if(rule(y,1 / -( protect() ))){

}
}
assert Stark : "Nothing burns like the cold."
def betray(x){
	if(bar(--730.4324,Sansa)){

} else {
	Sansa /= x
};
	Jon *= -12
}
assert TABLE[COLS][-Hodor] : "What do we say to the Lord of Death?"
var y = COLS
def rule(Ygritte){
	0.98;
	TABLE[bar(foo() - ( ROWS ),( protect(1,COLS) ) - bar(-rule(betray(-60,0.43)),( 1 )))][ROWS];
	Arya *= ROWS
}
def destroy(y,Stark){
	if(rule(-770.6,Hodor)){

}
}
def destroy(Stark){
	if(0.49){
	Stark *= ROWS;
	0.13
};
	if(TABLE[( 0.15 )][betray(protect() - TABLE[( -Jon )][-280.7] / Sansa)] * destroy(--( ( TABLE[( TABLE[foo()][COLS] )][( bar(destroy(--1,Jon)) )] ) + -COLS - ---250.1 * dog ),protect(),TABLE[---COLS][-TABLE[-Arya][destroy(ROWS) + -780.7554]]) - ( COLS )){
	Sansa;
	dog
}
}
var y = 560.233
def destroy(Ygritte,y,Sansa){
	Ygritte -= ( 16 ) - destroy(x);
	if(-0.92){
	if(-1){

} else {

};
	x *= ( -540.687 )
}
}
def TABLE[rule()][k] {
	y /= bar(y);
	if(--( -COLS )){
	x /= -720.2;
	-foo(Sansa) + COLS - 0.73
} else {
	bar(Jon) + Ygritte
};
	dog /= -ROWS
}
def TABLE[-74][k] {
	TABLE[-TABLE[( 0.79 )][( y + -32 * ( 52 ) ) - ( COLS )] * destroy(-0.89,-1) * protect(( ( Arya ) + -( -0.8 ) ) + y) + -TABLE[( ROWS ) + bar(-0.43) - -0.97 + rule(Sansa,Hodor,dog)][ROWS] / ( -Jon )][( COLS ) - Jon] - -ROWS;
	--300.0218;
	-COLS
}
var Ygritte = ( ROWS )
def betray(x,dog,y){
	COLS;
	destroy(( -COLS ),( ROWS ))
}
def mislead(Jon){
	protect(-1) + protect();
	if(0.12){
	if(-1){
	dog += y;
	if(( -Ygritte )){
	if(( --bar(1) * -ROWS - 0.73 )){
	Hodor -= ROWS;
	( destroy(Hodor) )
} else {
	COLS - -protect(( ( destroy(-1) ) )) - -( -7 );
	Hodor += 91;
	if(Sansa){
	Ygritte;
	Arya -= ( Jon )
} else {
	Sansa -= -( -0.51 ) + -910.0939 - ( 45 )
}
}
}
} else {
	Stark /= -( ( TABLE[( Sansa )][Sansa + bar()] ) )
};
	y += TABLE[-ROWS - ( TABLE[-COLS][1] )][dog]
} else {
	if(x){
	if(destroy()){
	-85
};
	if(( COLS )){
	Ygritte /= -TABLE[( TABLE[destroy(( Sansa ) / -1 / ( -34 ),-TABLE[0.42][rule(0.81 - ( -( -0.04 ) ),-1,Jon)] - -protect(TABLE[Ygritte][ROWS]) - ( -Ygritte ))][destroy(( -( -mislead(-foo(Sansa,280.2561)) ) ),ROWS) - ( ( ( destroy(-y) ) ) ) - ( rule(x,Hodor) )] )][y / Hodor];
	x += -81;
	if(--protect(bar(( bar() )))){
	Hodor += -6;
	( -1 )
}
}
} else {

};
	( -rule() )
}
}
def rule(Sansa,Sansa,dog){
	( ( rule(destroy(Arya,-0.02),rule(),y) ) )
}
def TABLE[COLS][j] {
	if(26){
	if(Ygritte){
	if(TABLE[( 30.58 )][Ygritte]){
	Sansa
}
} else {
	if(( -betray(ROWS) )){
	y *= ROWS;
	if(340.373){
	Jon += protect(ROWS);
	if(( bar(Sansa,foo(-1),y + x) )){
	if(-protect(-42,COLS,( ( -COLS ) ))){
	protect(betray(rule(-66) + foo()),-0.56) * ( TABLE[betray(Jon,( -8 ),Ygritte)][-protect()] )
}
} else {
	if(COLS * -( 98 )){
	Sansa += -0.07
};
	Sansa -= foo(-0.99)
}
};
	-99
};
	1
};
	if(-0.66){

};
	Ygritte += Ygritte
}
}
var y = foo(( -( protect(-bar(foo(---99,0.79,( -destroy(protect(( protect() ),mislead(bar(-( rule() ),TABLE[( y )][-dog] - ( -COLS )),950.714,COLS)),Arya) / TABLE[Ygritte][TABLE[destroy(-Jon * mislead() - -50 * dog)][1]] + Hodor )),Ygritte + Sansa,-1) + --0.4,( Arya ),COLS) ) / -( --( protect() ) ) ),-1) * ( destroy(ROWS - ( mislead(mislead(ROWS) - mislead(-TABLE[COLS][-0.83] + x * ( ROWS ) / -( -0.86 ) * dog + 0.71)) ),Sansa - -betray(75,x)) )
def betray(Ygritte){
	if(( Stark ) - -TABLE[-ROWS][--( Hodor )]){
	if(TABLE[protect(Jon,TABLE[( -1 )][COLS - ( ( -0.05 ) ) + -COLS + Hodor * mislead(destroy(destroy(),-Stark,( COLS )),--ROWS)])][690.6]){

} else {
	betray(14)
}
};
	TABLE[( Ygritte ) - Sansa][-TABLE[TABLE[( -1 )][COLS]][foo()]]
}
def bar(x,dog){
	if(y){
	if(COLS){

} else {
	Ygritte *= 1;
	dog += COLS
};
	rule(-1);
	dog += -100
} else {
	1
}
}
def TABLE[-bar()][i] {
	if(( ROWS )){
	Jon
};
	if(0.49 * Sansa){
	Sansa;
	0.1 / betray();
	if(ROWS){
	if(0.03 * ROWS){
	if(-COLS){
	dog += destroy(--foo(COLS,-280.987 + ( ROWS ),ROWS),0.09);
	if(mislead(protect(24))){
	Jon += ROWS;
	if(ROWS){
	if(TABLE[TABLE[-67][-betray()]][( ( ( Jon - rule(foo()) + 1 ) ) ) - Arya]){
	Ygritte;
	-( 0.91 - Arya ) * dog
} else {
	Sansa -= -foo(x,( -0.68 )) + ( 58 )
};
	Ygritte
} else {

}
};
	if(betray(bar(-( x ),Ygritte))){
	if(y * mislead(290.2482,-y)){
	-x
} else {
	if(( COLS )){
	Sansa -= -Hodor
} else {
	( -52 + ( foo(1 + --11,TABLE[-Ygritte / ( Ygritte ) / Arya][ROWS]) ) )
};
	bar()
};
	COLS;
	Hodor += Arya * ---8
}
}
};
	Jon += --COLS
} else {
	Arya *= y
}
} else {
	foo(90,( 70 ));
	Sansa / rule(( ( dog - bar() ) + -10 ));
	if(foo()){
	Hodor += ROWS;
	if(( mislead(-( COLS )) ) + -Jon / -0.68){
	if(ROWS - -96 * ( y - bar(rule(),Ygritte) )){
	if(---( -ROWS ) * 1 / ( -0.24 )){
	if(mislead(-protect(0.83,Ygritte))){
	ROWS
} else {
	if(( -rule(( ( TABLE[( 96 )][( Stark )] ) )) )){
	mislead()
}
};
	Stark *= protect(9,protect(Jon,COLS / ( ROWS - -49 )))
};
	0.54;
	-0.3
};
	-0.23
} else {

};
	if(Sansa){
	( x ) / TABLE[protect(-89,26)][TABLE[( 1 - -0.45 - -TABLE[TABLE[mislead()][foo() - ( ( -35 ) )]][COLS] )][Stark * Arya]]
} else {
	Hodor += TABLE[protect(y / -92 + -92)][COLS];
	if(-80){
	if(TABLE[COLS][protect(ROWS)]){
	protect()
} else {
	TABLE[x][ROWS]
};
	Ygritte /= -Hodor
} else {
	70;
	-74
}
}
}
}
}
var Sansa = TABLE[Sansa][COLS]
assert --0.55 : "Fear cuts deeper than swords."
def TABLE[COLS][j] {
	protect(COLS);
	Jon
}
assert ( ( 0.96 ) ) : "Winter is coming"
def TABLE[dog][j] {
	if(( 65 )){
	COLS - -1 - -80.533;
	Hodor *= TABLE[-( COLS )][ROWS]
};
	-0.99;
	if(Ygritte - Arya + betray(--830.4314) * foo()){
	if(-0.44){
	if(TABLE[Sansa][( protect(-Ygritte / 8 + protect(( Jon ),-0.04,Sansa),TABLE[( -1 * -TABLE[Hodor][bar(( -protect(TABLE[Jon][foo()]) ),-60.3,-0.55)] )][-ROWS + 11],foo(( -Sansa / ( foo(-TABLE[( ( TABLE[Stark][-COLS] ) )][TABLE[-0.55][TABLE[ROWS][( ( ROWS ) )]]],-65,-Hodor) ) ),-( Stark ))) )]){
	Arya /= -( 1 )
};
	( rule(mislead(Ygritte)) )
};
	if(--rule(Jon,ROWS,-COLS) + -betray(bar(),destroy()) * ( -Sansa )){
	if(-mislead()){
	y * -0.18;
	ROWS
}
} else {

}
} else {
	Ygritte
}
}
var Hodor = -150.6221
def TABLE[Ygritte][k] {
	Stark;
	if(( -COLS )){
	foo(--340.9,x);
	50;
	x *= ( x )
} else {

}
}
assert Hodor : "One can not simply parse himself"
var Hodor = TABLE[--550.1][( rule() - -dog )]
var Jon = ( --Arya )
def protect(Ygritte,Hodor){
	if(--72){

} else {
	ROWS
}
}
def betray(Stark,Ygritte){
	x += -0.28 * Hodor
}
assert bar(-( ( -rule() ) )) / ( dog ) : "What do we say to the Lord of Death?"
var x = --( ROWS ) + Stark
def foo(){

}
def TABLE[-Arya + foo(destroy(1))][k] {
	if(840.1){
	Sansa -= x
};
	y *= destroy(( ROWS ),-320.31 - -730.896 / protect());
	Sansa -= -890.03
}
def mislead(dog,x){
	if(-betray(bar(( -( -0.18 ) + ROWS ),-1,TABLE[betray(-1,bar(---1,-85) + ( foo(-1,( TABLE[y][--87] )) ) + -0.09) - ( Stark ) - dog / 190.024][destroy(0.04,protect(TABLE[destroy(( mislead(Hodor / -0.87,23) ))][COLS] * Ygritte,400.689))])) * protect(COLS)){
	if(rule() * ( rule() ) + -foo(( TABLE[mislead(x,-0.32,-59)][( x ) / -94 + 1] / -y / Hodor ) * -x,betray(Stark / TABLE[54][Sansa],-12 + -7)) * Hodor){
	if(( -protect(-( -destroy(ROWS,-TABLE[( --ROWS * x )][-( ROWS ) - -foo(( ( ( foo() ) ) ))]) ) + ROWS + -TABLE[( 0.83 )][( --0.66 )],ROWS - protect()) / COLS ) / ( Ygritte )){
	if(( -x )){

}
} else {
	y /= Sansa / Stark
}
};
	if(-Stark + betray(mislead(TABLE[-mislead(Jon,protect(COLS,-Sansa) / 1,ROWS - -( -destroy() ) + -( COLS ))][-foo() - 0.79 + --ROWS])) + ROWS){
	( --78 - x + dog ) / 26 + Stark
};
	x -= ---y
} else {
	if(--0.14 / COLS){
	betray(Ygritte,( -mislead(-0.18,x,ROWS) ) + betray(-0.07));
	Sansa += ROWS
} else {
	if(protect()){
	Hodor += 29
} else {

}
};
	rule() * ( TABLE[TABLE[( dog / -0.22 - mislead() )][dog]][5] ) / 1;
	Hodor *= ( TABLE[( TABLE[mislead(( dog ) + -0 * ROWS)][-TABLE[( rule(rule(Stark)) * TABLE[-( rule(destroy(( ( Arya ) )),( y )) )][Hodor] )][-1]] + -100.6 )][0.29] ) / ROWS
};
	-0.61;
	dog += mislead(( Sansa + -COLS ),-COLS)
}
var x = y
def TABLE[TABLE[ROWS][mislead(TABLE[--COLS][Ygritte + mislead(protect(( rule(foo(-0.35,COLS)) )))],dog * -720.6)] / ( Ygritte * -0.19 * ( ( ROWS ) ) )][k] {

}
def bar(y){
	Stark -= rule(-110.9,mislead(),-rule(Arya,COLS));
	x -= --0.93
}
def TABLE[-TABLE[TABLE[-39 / mislead(mislead(-( -0.66 ),780.323,-0.02),--1)][TABLE[protect(bar(-79))][protect(Ygritte)]]][( -1 )]][i] {
	ROWS;
	dog -= -TABLE[30][( rule(betray()) )];
	Arya -= Hodor
}
def TABLE[dog * TABLE[COLS / ( --( TABLE[bar()][ROWS] ) )][( 0.74 )]][j] {
	if(Jon){
	if(dog){
	if(370.2597){
	protect(( destroy(destroy(Arya,( mislead() )) - -mislead(44)) * ( Sansa / protect(( betray() ) - Sansa) ) ),TABLE[foo(0.87 + ( ( -destroy(bar(destroy(ROWS,y,( betray(-TABLE[COLS][-x * TABLE[---1][( ROWS ) * -Jon] - Hodor * x / Jon]) ) * Arya),-ROWS * bar() * COLS,-( 0.84 )),( ROWS )) ) + Hodor ))][( y )],-0.74);
	Arya += TABLE[-1][-0.67];
	x += y
} else {
	-TABLE[-84][( 78 ) / -0.02] - ( ( --COLS ) ) + destroy()
};
	Stark / ( dog );
	x -= -77
} else {
	Sansa -= Hodor
};
	dog += Arya + --protect(( 0.25 ),TABLE[( -( 38 ) )][72]) / ( -790.6 );
	if(ROWS){

}
};
	x;
	y -= ( 990.211 )
}
def betray(x){
	TABLE[-betray(ROWS,betray(TABLE[foo(-( -0.34 ) / -1,-Hodor,ROWS)][bar(Hodor)] - ROWS + Jon * Sansa))][destroy(-0.39,destroy(( foo(y / ( -0.7 )) ) * ( 79 ),( ( protect(-92,destroy() * ( mislead(0.75 - Ygritte) + COLS ),Jon) ) ),TABLE[( protect(-0.08,mislead(Arya)) )][foo()]),-betray(Jon) * COLS)];
	if(Arya){
	--76;
	Hodor -= --( -Jon / 0.26 )
} else {

};
	if(0.9){
	if(ROWS){

};
	if(COLS){
	-740.33 * 3;
	if(( ( bar(protect(( ( y ) ))) ) ) + -Jon){
	dog /= ROWS
} else {
	Stark += ( 0.27 );
	x *= -( TABLE[ROWS][foo(destroy(-rule(-foo(-93))))] * Hodor * bar(1,COLS,-1) + COLS - -Sansa );
	if(( ( --44 ) )){
	Stark += destroy(-13);
	COLS / Ygritte
} else {
	if(Hodor){
	if(Arya * foo(COLS,Stark)){
	if(COLS){

}
}
} else {
	if(mislead(-0.96 * ( -destroy() ),( 940.1083 ),-rule(betray(bar(( Stark ),betray())),-0))){
	Arya /= mislead(( TABLE[--840.7549 + y][-rule(( 19 ),ROWS) * mislead()] ));
	if(0.18){
	( 490.47 )
}
} else {
	1
}
};
	Stark /= ( ( --110.85 ) )
}
}
} else {
	protect(Sansa,Hodor);
	if(mislead(( -45 ),TABLE[ROWS][-550.0259])){
	if(-y){
	TABLE[79][betray(bar(( --Jon ),dog / bar(( Hodor ) * -ROWS / -1) / protect(destroy(protect(0.49,-ROWS),COLS),8,( ( ( Arya ) ) )) - ( ROWS ) * -1))]
} else {

};
	if(TABLE[( ( Sansa ) )][-0.37]){
	Stark;
	Jon /= -180.6301
} else {
	if(destroy(y,TABLE[( -bar(y,-( Hodor ) * 4) ) * rule(1,-( ( dog ) ),-860.501 / 33)][COLS]) / --1){

} else {
	Sansa
};
	if(-foo()){

};
	if(-0.67 + Hodor){
	530
} else {
	if(ROWS){
	Ygritte += ( -( -bar(x + TABLE[0.09][0.54]) ) )
};
	Sansa -= foo() * -0.27 / Sansa
}
}
} else {
	if(( ROWS )){
	dog += 0.51
};
	Hodor -= foo()
}
}
}
}
var Sansa = -mislead(Sansa,COLS + ( TABLE[foo(( --foo(mislead(46,Stark,-( Ygritte )),bar(Jon / rule(-y)) + rule(ROWS - --foo(-1,COLS) * -Hodor,( -foo(( -0.39 )) ),ROWS) - COLS) ),0.6) - 1][-( ( Ygritte ) + 480.8 )] ) * ( 0.81 ),destroy(0.72,TABLE[bar(450.74)][Hodor],( ( -97 ) )))
def destroy(){
	Arya *= Ygritte
}
var Stark = -1
def TABLE[-destroy(( -0.34 ))][i] {

}
def protect(Ygritte,Sansa){
	if(-94 + 0.08 - Stark){
	1;
	Jon *= Sansa;
	dog - ( Ygritte ) + ( protect(Jon,-ROWS,bar(ROWS)) )
};
	if(( betray(0.18 - ( Ygritte )) )){
	if(COLS){
	y += ( COLS )
}
}
}
var Hodor = 1
def TABLE[bar(( 10 ))][k] {
	if(( betray(-58,Stark / protect(-( ( ( ( ( ( protect(-ROWS + ROWS / ( 95 ),protect()) ) * rule(TABLE[0.77][Hodor]) ) ) ) ) * -63 ),1)) - protect(--Stark + bar(( TABLE[x + TABLE[( Arya )][1]][( ROWS ) - ( --COLS ) / -mislead(-1,( ROWS ) / COLS,Sansa) + betray(COLS) - -0.93 + -40.99] ),COLS)) )){
	if(Stark){
	if(Stark){
	if(COLS){
	Hodor /= ( y );
	x /= --( ( Hodor ) )
} else {
	( TABLE[COLS][bar(( Hodor ),-18)] ) + --( -2 ) + ( Sansa ) / destroy(-COLS - -COLS * TABLE[( -95 / ( TABLE[COLS][-( 95 ) - COLS - dog + TABLE[mislead(dog)][( x ) - ( Arya )] / -( y ) / 1] ) + Stark )][destroy(betray(( Jon ),-Jon),COLS,Arya - ( TABLE[Jon][Sansa + -dog] ) * -dog - TABLE[TABLE[-Arya][-x + COLS - COLS]][-bar(foo(( 0.12 ),( -foo() )),COLS)])],-0.13);
	x -= ROWS
};
	if(ROWS){
	Stark *= 14
}
} else {
	if(TABLE[foo() * -( Hodor )][Hodor]){
	Ygritte -= --( betray() ) * TABLE[destroy(-protect(dog,( betray(ROWS,-ROWS * ( 0.89 ) / bar(-0.72,COLS)) )))][( protect(Ygritte) * Arya )];
	if(( ( TABLE[destroy(-y,( protect(--0.19,dog) )) + COLS][( -260.2523 )] ) - -0.76 )){
	Hodor;
	TABLE[Arya][ROWS] - COLS
}
} else {
	Stark *= TABLE[-protect(Sansa,foo(TABLE[( 0.08 )][TABLE[COLS * dog][-TABLE[-0.27][TABLE[destroy(( ( TABLE[-27][-0.79] ) ),-190.509,Ygritte - TABLE[( Hodor )][( Stark )])][--TABLE[COLS + -COLS][foo(y) * -rule(protect(( ( 0.64 ) )),-COLS)] * betray(Stark,-Jon)]]]],TABLE[COLS][COLS]),rule()) - mislead() + -COLS - Arya][-ROWS - COLS];
	if(bar()){
	dog -= ROWS;
	-Sansa
};
	Jon
}
};
	Arya -= y
} else {
	0.68
};
	Stark /= destroy(Sansa,Stark)
}
}
def TABLE[( Ygritte )][j] {
	if(COLS){
	if(-y){
	y;
	( -0.83 )
} else {
	y /= ( rule(TABLE[Stark][bar(0.16,-ROWS)]) );
	if(rule() / Arya){

} else {
	Ygritte /= -68
}
};
	( y - -( y ) )
};
	if(( ( betray(( ROWS - ROWS ),betray(Ygritte)) ) )){
	ROWS - foo(---COLS / ( mislead(Arya,-1,protect()) ),1 * 1) * ROWS * y + COLS
} else {
	COLS;
	if(TABLE[-0.27][--TABLE[( TABLE[Sansa][TABLE[ROWS][Stark]] )][-COLS + ( 0.43 )]]){
	if(COLS - protect() * ( -( bar() ) ) + -80){

}
}
}
}
def foo(Jon){
	y /= -94
}
def TABLE[--dog + ROWS / COLS][k] {
	if(COLS / destroy(-1) - Jon){

}
}
var dog = Arya
var dog = ( 71 )
def bar(y,Sansa){
	( -rule() );
	-protect(foo(( 1 - ( ROWS ) )))
}
def rule(Stark){
	dog /= dog
}
def mislead(Hodor){

}
assert TABLE[-Stark * -0.34][ROWS] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert --970.88 : "Winter is coming"
var Hodor = protect(foo(x),y,1 + -0.39)
def bar(Sansa,Hodor){

}
def mislead(){
	if(y){
	if(440.1){

}
} else {

};
	y;
	if(0.72 + bar(TABLE[Ygritte][-( TABLE[( dog )][ROWS] )])){
	dog += --18 + ( -94 ) + Hodor
}
}
var Ygritte = -( ( ( ( ROWS ) ) ) )
assert COLS : "Winter is coming"
assert Sansa : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(y,Sansa){

}
def mislead(y){
	if(protect(rule(COLS,( ROWS ),-1),x,COLS) - COLS){
	Stark -= Sansa
} else {
	Ygritte *= destroy(0.82 * Arya,39,0.92)
};
	x /= --10
}
def mislead(){
	COLS;
	mislead() + ( ( 0.98 ) ) + betray(COLS,-( 50 * -( --29 ) - -80.186 * 95 ) / COLS * 22) * Stark - -( rule(y * ROWS,TABLE[-mislead(foo(Jon),( -790.86 ),ROWS) * ( -1 ) * ( Arya )][Sansa],Sansa) ) - 0.99 / Stark + -200.828 - protect(( -Arya + ( Hodor ) / ( x ) )) * Arya
}
def TABLE[mislead(( ROWS ),0.33)][k] {

}
def TABLE[x][j] {
	Stark -= ROWS
}
assert -( -1 ) : "Winter is coming"
assert TABLE[330.7491 + ( mislead(mislead(betray() + ROWS / ROWS + ( Sansa ),( -0.4 ))) )][mislead(0.46 * Arya,( -bar(( Stark )) * TABLE[-1][ROWS] ))] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = ( ( ROWS * 1 ) )
def TABLE[ROWS][k] {
	if(-TABLE[-bar(-380.696)][( ( Jon ) )]){
	Stark *= -16 - 1 / y + -x + -TABLE[TABLE[COLS][ROWS]][-Stark]
}
}
assert protect(Arya) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = ( protect(-19,TABLE[ROWS][mislead(bar(( rule(--ROWS,1,Stark / destroy(---1 * mislead(0,betray(( Ygritte ) * destroy(dog,--120.925),destroy(-COLS,y) * Arya,rule(foo(x) / 0.22,ROWS - rule(Jon)))))) )) + Sansa)]) * Stark )
var Arya = -1 - -COLS
def TABLE[bar(0.83)][j] {
	betray(-430.73,ROWS)
}
var Sansa = -69
assert --0.95 : "Nothing burns like the cold."
def mislead(x,Arya){

}
var Sansa = betray(ROWS)
assert COLS : "Fear cuts deeper than swords."
assert -TABLE[destroy()][-bar(-85,-ROWS) * destroy(-25)] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[betray(-x,--0.98)][k] {
	33
}
def TABLE[ROWS][k] {

}
def protect(){
	if(rule(( 600.37 ))){
	if(Stark){
	Ygritte /= -TABLE[COLS][1 * 58 - TABLE[rule()][COLS]];
	foo(1)
} else {
	if(COLS){
	TABLE[0.6][Stark];
	if(Jon){
	x -= x
} else {
	if(ROWS){
	Stark /= -Sansa;
	-Jon
};
	y
}
}
}
} else {
	destroy(y,-0.77 / Jon);
	--800.8684
};
	if(rule(COLS) / --protect(----COLS,Sansa,ROWS)){
	y - -( TABLE[( ROWS )][-COLS] ) * TABLE[-0.13][0.06]
}
}
def TABLE[-0.17][i] {

}
def TABLE[Jon][i] {
	y += Arya;
	if(COLS){

}
}
assert ( -( ROWS ) + ( -0.28 ) ) : "Nothing burns like the cold."
def bar(x,y,Arya){
	Sansa /= foo(ROWS,-betray(rule(-2,( --( dog ) ),bar(( ( Ygritte ) - y ),( COLS ),TABLE[0.45][foo(-( -0.64 ) - rule(destroy(x,-Sansa,Jon)) / y,foo(protect(0.8,Arya,-890.748),protect(),-180.8681))])) - Hodor) / ( Jon )) - Jon;
	-0.18
}
def betray(Ygritte){
	if(( --Hodor * -1 )){
	( -32 );
	if(rule(32)){
	Jon /= ( 1 );
	Ygritte += -85
}
};
	-0.87
}
assert -0.13 * 780.372 : "What do we say to the Lord of Death?"
def TABLE[53][j] {
	if(x){
	Arya -= betray()
} else {
	if(Arya * mislead(--ROWS,rule())){
	Stark -= Hodor * foo(TABLE[( ( Stark + ( foo(ROWS,betray(),88) ) ) )][( COLS )]);
	dog += ROWS
}
};
	if(( dog )){

};
	Sansa *= ( ( ( TABLE[-1][-1 / ( ( ( COLS * ( destroy(protect(Sansa),-ROWS + destroy() / bar(ROWS,-( --22 ) - Sansa,-7)) ) ) ) )] ) ) )
}
assert Ygritte : "What do we say to the Lord of Death?"
def rule(Stark){
	Stark /= 0.44;
	if(ROWS){

}
}
assert 0.11 * foo(Stark,( 1 / Arya )) : "One can not simply parse himself"
def TABLE[( Ygritte )][j] {
	Arya += TABLE[COLS * -( Jon )][y];
	Arya -= -foo(ROWS,( ( TABLE[( 87 )][( ( -0.97 ) * bar(-Hodor,COLS) * Sansa )] ) ));
	if(ROWS){
	Hodor -= x
} else {
	y += ( ( -Arya ) );
	-Stark / Arya + protect(destroy(-Stark,550.6155),TABLE[ROWS][-Hodor / ( ( dog - ROWS / destroy(-88,( TABLE[( -82 )][-x] ) + protect(1,COLS - ( COLS )) / TABLE[-betray()][( -0.54 )]) / ( Hodor ) / 0.6 + Ygritte - ( ( 430.1 ) ) * -rule(Arya,( -61 ) / ROWS + 0.36,-destroy(TABLE[bar(50)][x]) / 310.063 - ( -210.8903 )) / 610.633 / -1 * COLS / -( Jon ) / ROWS ) )]) - -( betray(( protect(--protect(ROWS,( -ROWS - foo(( -COLS ),COLS,protect(-52,bar(Jon,---dog * betray(Arya) - -x))) / Ygritte / 0.52 )),Sansa,protect(Hodor,COLS)) ) - rule(-Sansa,Stark * protect(( -( -TABLE[Jon][( ROWS )] - bar(-1,( COLS ),Sansa) / -55 ) ),COLS) + -1,-44),( Hodor ),dog) ) / Ygritte;
	if(15){
	Stark += 50 + betray()
} else {
	if(dog * COLS){

} else {
	dog
};
	rule(dog,dog,-foo(Hodor,mislead(0.39,( ---foo(-0.38,-0.5,betray(COLS,betray(TABLE[destroy(-( ROWS + betray(( ROWS )) + ROWS - COLS ),( --930.39 ) * TABLE[betray(-0.08)][COLS])][86 * bar(-COLS + betray(( bar(COLS,foo(-mislead(4,Arya),-3,1)) ),x - mislead(dog,TABLE[( ROWS )][( ( -rule(COLS,TABLE[COLS / ( bar(( Jon )) )][( -0.62 )],98) ) * ( 47 ) )])),Jon,Jon)],foo(bar(0.22) * dog)))) - rule(ROWS,-y,Hodor) / 32 / -30.869 ),( bar(TABLE[-mislead(-COLS,-1)][( TABLE[betray()][TABLE[y][36]] * ROWS )] + -22,TABLE[ROWS][Hodor]) ))))
}
}
}
assert Sansa * --( -foo(Sansa * Stark,rule(Sansa),bar(COLS,-44)) ) + --( -dog ) * x + Stark + -0.25 : "One can not simply parse himself"
var Ygritte = protect()
var Arya = betray()
def betray(){
	1;
	--74;
	if(Sansa){
	if(TABLE[-Sansa][-ROWS - -0.01] / betray(( mislead(COLS,( Jon - ( --TABLE[Jon][1] ) + ROWS )) ))){
	62
} else {
	y -= ( ( ( -200.72 ) ) ) / COLS;
	Arya /= ( -betray(-( Stark ),( dog )) ) * -0.32 - ROWS - ( -( y + rule(y,Jon) ) ) * y * dog;
	if(( ROWS ) / -360.5){
	( destroy(ROWS) ) / -( ( ( ROWS ) ) );
	( TABLE[( 0.51 )][( -( ( ( ROWS ) * ( rule(5) ) - TABLE[( dog )][rule(Sansa)] * -33 / Jon ) ) - destroy(dog,( ( ( foo() ) ) )) )] );
	-( ( -160.9 ) )
}
};
	Hodor += -40 / bar(--( -ROWS ),-82,COLS * y)
}
}
def bar(y){
	-36 - x;
	if(Jon){
	-220.6;
	if(ROWS){

};
	y *= x
} else {
	y *= -0.7;
	protect()
};
	Hodor /= --( COLS ) / -0.8
}
def TABLE[TABLE[-58][( -0.99 )] + ( betray(Arya,y) ) * 1 - ( mislead(3,Sansa - dog) )][j] {
	if(betray(COLS)){
	-destroy(y,-1)
} else {

}
}
var Hodor = ---betray()
def destroy(Sansa,y){
	Stark *= ROWS
}
assert Jon : "Fear cuts deeper than swords."
def TABLE[protect(-destroy(),-620.456,-bar(ROWS,-57)) / ROWS][k] {
	if(--rule(-Sansa * 62)){
	Ygritte;
	Stark *= TABLE[Jon][( COLS )]
} else {
	if(( -ROWS )){
	if(TABLE[betray(COLS,( ( ( COLS ) ) - 0.14 )) / -rule(-0.24,-( ( x ) ),dog) + -( -Arya ) * -0.76][x]){
	dog;
	--0.69
} else {
	Arya - destroy(destroy(bar(-620.511,betray(Hodor,( rule(( y ),( ( ( protect(( -ROWS - betray(( ( COLS ) / ROWS ),-Stark) ) / protect(y) * Jon + Stark,--0.31,destroy()) ) / betray(-foo(COLS,( ROWS )),-Stark) ) )) ),COLS),foo(COLS / ( 0.01 ) / COLS,ROWS)),---15 + -28 + Jon + ( COLS ) / Stark),ROWS);
	if(-68){
	ROWS
}
};
	if(bar(y,COLS * ( COLS ))){
	mislead(Ygritte / TABLE[Arya][-200.661]);
	if(rule(COLS)){
	if(COLS){
	ROWS;
	Arya /= ( ( mislead(Stark) ) )
} else {
	Ygritte /= 9
}
} else {

}
} else {
	( TABLE[x][( Jon + ( ( foo() + bar(betray(),( x ) / COLS) ) ) + dog )] );
	if(( x )){
	if(( dog )){
	Stark += COLS;
	( COLS - -ROWS ) * COLS;
	( -x )
}
} else {
	Ygritte += 97;
	dog -= 0.15;
	TABLE[( y )][-1]
}
}
} else {
	--destroy(0.1);
	Hodor
};
	dog *= ROWS;
	Jon -= ( TABLE[x][destroy(ROWS * TABLE[0.21][( TABLE[Hodor * destroy(( ROWS ),( -76 ))][-160.053] )] + 0.7,( -( ROWS ) + -dog ))] )
}
}
def TABLE[destroy(TABLE[( 1 )][170.2944] / ( Sansa ),bar(( -Hodor * betray(470.653) )) * COLS,dog)][j] {

}
def betray(y){
	x * Jon - -72
}
assert ROWS : "Nothing burns like the cold."
assert x : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[--dog - foo(--dog,( --x )) + betray(TABLE[Sansa][x])][i] {
	if(COLS){
	if(COLS){
	if(-Arya){
	dog;
	( 31 );
	-0.03
};
	Stark -= -x - -79;
	Jon -= TABLE[COLS][( ROWS )]
};
	--rule(x);
	if(rule(-TABLE[( foo(y * -68,protect()) )][( ( ( ( COLS ) ) ) )])){
	Sansa -= Sansa
} else {
	bar(Jon,foo(),foo(destroy(TABLE[-ROWS][Stark])))
}
} else {
	Jon /= 51;
	Jon += protect() / destroy(betray(( Stark )),( -53 ))
};
	if(COLS){

}
}
assert -( COLS ) : "What do we say to the Lord of Death?"
assert ROWS : "Nothing burns like the cold."
def rule(y,Stark){
	( -( -( foo(( Stark ),-( -1 )) ) ) )
}
assert TABLE[COLS][-68] * mislead() : "Nothing burns like the cold."
assert 72 : "One can not simply parse himself"
def mislead(Arya,dog){
	if(bar(TABLE[( -69 )][-16])){
	Arya /= x;
	if(0.27){
	Sansa - betray(protect(Stark / ROWS,Stark,( Arya + -TABLE[rule(-( -TABLE[0.69][( Stark )] * ( rule() ) ),( -35 ) - 76,Arya)][0.14] )));
	( 98 )
} else {
	betray(Ygritte,TABLE[Arya][destroy(( Ygritte ),--0.63)]);
	x *= -0.64
}
} else {
	if(Sansa){
	if(1){

} else {
	Hodor /= -( x );
	Stark /= Ygritte
};
	TABLE[--dog - ( -0.49 )][Ygritte]
} else {
	if(( COLS )){
	( Hodor );
	if(( Hodor ) + 0.43){
	( -( ( dog ) ) + TABLE[COLS][Arya / COLS + destroy(--( ( Sansa ) ))] );
	Stark;
	if(-TABLE[-COLS][TABLE[( -740.82 )][mislead(-0.89)]] * ROWS){
	dog += rule(mislead(Ygritte),--COLS);
	Ygritte -= TABLE[TABLE[destroy(COLS,TABLE[( bar(( protect() ),TABLE[-0.41][870.5219],TABLE[-1][foo(destroy(TABLE[foo()][Hodor * Arya],--dog + ( COLS ),-( TABLE[bar(mislead(63,--( 0.13 )))][ROWS + protect(---( ROWS ) - 22,( Ygritte )) * Ygritte] / --bar(Hodor,destroy() * -Jon + bar()) )),dog)]) ) + ROWS / destroy(rule(--( ( ---150.29 ) ) - -0.36),( Sansa ))][-dog])][foo()]][Ygritte]
}
}
} else {
	if(-26){
	if(Jon){
	x -= ( x + -TABLE[betray(( rule(foo(x),-TABLE[COLS - 0.08 / -66][Jon],destroy() - COLS - ROWS + -40.6 * COLS) ))][( Sansa )] + foo(-y,( 0.42 - ( TABLE[TABLE[( bar() )][dog]][mislead(Arya)] ) )) ) - COLS;
	betray();
	Ygritte /= TABLE[betray(Arya,-protect(( dog ),COLS),-0.03)][0.91] - -1 / Stark - foo()
};
	-0.7;
	if(COLS){
	1
} else {
	Ygritte += ROWS;
	( dog )
}
} else {
	Hodor *= mislead(--COLS,COLS);
	if(0.59 / -0.9){

} else {
	( -Ygritte );
	Arya *= ( ( y ) )
};
	if(( ( Hodor / mislead() ) )){
	if(-( Sansa ) / ( -COLS )){
	-1
};
	if(protect(Stark,( -x + -62 - TABLE[Stark][COLS] * -TABLE[TABLE[rule(TABLE[Stark][Hodor / mislead(-63 * betray(( ( -TABLE[foo(ROWS + ROWS,1 / -37)][-Ygritte] ) ) * -630.248 + -( 670.625 ) * ( ROWS ),Sansa,-1))],Stark,( ---( TABLE[910.571][-3] ) ))][y]][TABLE[( protect(0.06,-0.14) )][Hodor] / ROWS] ),( dog ) * bar(( mislead(-1,betray(TABLE[-86][--Arya],mislead(-840.583,-0.32,betray(-COLS,( ROWS )))),( -dog )) ) / 0.79))){
	Hodor -= TABLE[--480.05][-1];
	x += ROWS;
	-( y ) + rule(ROWS,protect(x) / COLS)
} else {

};
	if(-41){
	rule(ROWS,y)
}
}
}
};
	dog /= ( 0.33 );
	if(( -0.87 * ( -Ygritte ) + destroy() * protect(( dog / Sansa )) )){
	if(-( 8 )){
	if(TABLE[---1][Sansa]){
	Jon -= -( 4 )
} else {
	if(y){
	y *= y - -0.43
} else {
	dog -= -dog * ---100;
	mislead(0.06,Arya,--60);
	if(-ROWS){

}
}
};
	Hodor
}
}
}
};
	Stark
}
var x = protect()
def TABLE[rule(-65)][k] {
	( ROWS )
}
def TABLE[ROWS][j] {
	-y;
	if(-5){
	y /= ( -1 )
};
	y += Jon
}
var dog = ( Arya + -0.67 )
def mislead(){
	if(Hodor){
	Stark /= -33 * x - ROWS + Jon
} else {
	y += ( mislead(Stark) );
	Ygritte *= -0.25
};
	Stark *= -1;
	Jon /= ( Jon )
}
def betray(dog,y,dog){
	Hodor;
	if(( -TABLE[-Hodor][ROWS] )){
	( -0.32 );
	if(protect(-( Ygritte ) + ( Ygritte ),0.44)){

}
}
}
def protect(Ygritte){
	if(dog / mislead(mislead(( -destroy(bar(( TABLE[COLS][( bar(COLS * --0.61) ) * Sansa] ),-0.28) - rule(bar(mislead(protect(--1),---0.66,foo(( ( -mislead(Hodor / COLS) ) ),120.8,x)) + 0.361) - 350.66)) ),-Arya * ( x + -COLS ) - Hodor),ROWS,foo(( ( -0.65 ) ))) * COLS - -( destroy(( Ygritte ),foo(( ROWS ),ROWS,-Ygritte)) )){

}
}
def TABLE[( bar() / protect(foo(( -58 ),TABLE[-0.59][ROWS] * -8) / y) )][j] {
	if(Stark){
	Hodor *= foo(COLS,610.0615);
	--0.76;
	TABLE[48 + ( ( TABLE[protect(-0.77,dog)][-destroy()] * destroy() ) ) + ( -betray(bar(protect(),protect(x + foo(( Ygritte - -( Jon ) )))),-1) / -670.482 * ( protect(0.5) ) )][( betray(bar(TABLE[-destroy(--TABLE[foo(( -bar(12 / -86,-Stark) / betray() ) / 670.751,ROWS)][5 / ( Ygritte - 490.372 ) / COLS - -ROWS + ( Jon ) * -93] / -1,-TABLE[-destroy(( dog ))][-( TABLE[Arya][dog] )],-( x ) - 0.99 - -( TABLE[-35][-Sansa] ) - -( -( ( -0.5 ) ) ))][ROWS] * TABLE[dog][ROWS] - y + Hodor) / ( -( ( foo(COLS) * -Hodor ) ) ),foo(betray(Sansa))) )]
} else {
	-0.19;
	Ygritte -= ( --17 )
};
	if(-Sansa / rule(x - Sansa,-0.12,protect(( ( --1 ) ))) / -41){
	-dog * rule(( --( Jon ) ),( ( x ) ),Hodor) * ( ROWS )
}
}
var Sansa = destroy(foo(-680.331,-TABLE[-1][6]))
var Jon = Hodor - ROWS
assert Ygritte : "What do we say to the Lord of Death?"
def rule(Sansa){
	if(-120.3){
	ROWS;
	Stark += rule(-Arya);
	Stark * rule(-0.38,1)
};
	if(-rule()){
	x -= -( -1 ) * -( COLS ) * -COLS;
	y /= ( COLS );
	Sansa -= mislead(x,Sansa)
} else {
	-30
}
}
assert 840.2 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert 0.82 : "What do we say to the Lord of Death?"
assert 0.7 : "Nothing burns like the cold."
def mislead(Jon){

}
assert ROWS : "Nothing burns like the cold."
var dog = COLS
def TABLE[destroy(COLS - -0.55,mislead(80.3 + -Hodor * 21))][i] {
	rule(TABLE[-1][y],0.19);
	-0.96;
	if(Stark){
	Stark /= 1
} else {
	Arya *= Ygritte;
	y *= Hodor + ( -mislead(( TABLE[Ygritte][ROWS] + -36 ),rule(betray(( -11 ),( -0.34 + betray() * TABLE[( y )][1] ) - COLS),950.9 * --protect(protect(bar(ROWS,TABLE[( betray(( ( TABLE[bar(rule(-( Sansa ),TABLE[( ROWS )][Arya],-( --rule() )),-y)][ROWS] ) )) ) * TABLE[( -680.7 + Hodor - -rule(Arya,dog) )][TABLE[( COLS )][mislead()]]][--64 / -rule(8,betray(mislead() + ( -foo() - foo(( ( --190.037 ) ),-Stark - --y / ROWS + 0.2) ) + -( Hodor ) * rule(destroy(Stark,( Jon ),560.88)) / foo(foo(COLS - betray(-y,-( ( destroy() + Stark ) ),-Jon - 72),-TABLE[12][foo(Arya,--x)] / ROWS,COLS))),-( Stark )) + --32 * ( -ROWS ) / ( dog )] + 0.53,Jon))),( y ))) )
}
}
def TABLE[3][i] {
	if(foo(Jon)){
	-mislead(Ygritte,foo(bar(-( COLS ) - 1 * -42,-310.9),0.24),COLS) / -Ygritte;
	destroy(( 1 ) - ( -92 / -ROWS - -0.2 * Arya * bar(-56) / -dog ));
	TABLE[-dog][1]
} else {

};
	-y
}
assert -44 : "Nothing burns like the cold."
var dog = -0.09
var Sansa = ( x )
var Sansa = Sansa
def TABLE[rule(( COLS ))][i] {

}
assert x : "Winter is coming"
def destroy(dog){
	-dog;
	Jon -= ( COLS )
}
def protect(y){
	if(( COLS )){
	Hodor /= protect(dog,rule(Ygritte) + TABLE[( TABLE[-Stark][( COLS + TABLE[0.45][--70] )] )][-0.05] / -protect(COLS / -84,( -TABLE[y][foo(( ROWS ))] ))) + x
};
	if(ROWS){
	y /= -1;
	if(COLS){
	Stark
}
}
}
def foo(Arya){
	mislead(30);
	if(COLS){
	if(ROWS){
	Jon *= betray()
} else {
	y -= rule(( ( 50 ) / -( -protect(250.1404) ) / -TABLE[x][( 0.88 )] ));
	Sansa -= x;
	Arya
};
	x /= dog;
	Ygritte += Jon - ( protect(( dog ),Stark * -0.46) ) / -dog * -200.517
}
}
def TABLE[betray(-Stark,COLS)][j] {
	Jon -= Arya
}
def protect(){
	COLS;
	if(Hodor){
	Sansa /= 25;
	if(COLS + mislead(( rule(-Sansa / 0.67) ))){
	y
}
} else {
	Arya
}
}
def TABLE[TABLE[ROWS][Arya]][i] {
	Arya /= ROWS * x + TABLE[-( --protect(Sansa,Stark) ) - ROWS][y] + -47
}
assert ROWS - rule() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert --TABLE[( COLS )][( -39 * ( Ygritte ) )] * -( Arya - bar(-Hodor,( COLS ),-0.62) ) : "Fear cuts deeper than swords."
var Arya = -( y ) * foo(foo(Hodor,41,-0.17) - -0.85 * TABLE[5][( -650.9 )],Ygritte)
def destroy(Hodor,x){
	Arya += ( -19 )
}
var Sansa = ROWS
def TABLE[betray(-12)][i] {
	( ROWS )
}
def bar(){
	Hodor
}
def TABLE[0.41][i] {
	if(-( -( -1 ) )){
	if(--rule(Ygritte,68) - Sansa){
	--( 70 );
	if(COLS / -14){
	dog -= x * betray(( 2 ));
	-Stark;
	x += -( -200.905 ) * betray(( ---( y ) + -( -ROWS ) - -ROWS ))
}
} else {
	if(COLS){
	if(-COLS){
	COLS;
	if(-85){

} else {
	-Jon
}
}
};
	if(-TABLE[ROWS][-mislead(mislead(ROWS,0.98))]){
	( ( rule(Arya,foo()) ) )
} else {
	if(1){

};
	if(destroy(TABLE[( ( 0.64 ) ) - mislead(COLS,-310.11,rule(COLS,ROWS,TABLE[( ( ROWS ) * rule(83) )][Stark])) / ( -0.76 )][ROWS])){
	if(-rule(Ygritte / -TABLE[-48][( ( betray(( -( ( ( --dog ) ) ) )) ) ) - COLS],-50)){
	dog -= ( Hodor )
};
	-18;
	Ygritte += Sansa
};
	if(betray(foo(),rule(Ygritte) / -1)){
	( ( Stark ) );
	720.8732
} else {
	Hodor /= COLS
}
}
}
} else {
	Sansa -= ( rule(-TABLE[( Stark )][( ( protect(betray(ROWS,rule())) ) )],bar(-1 - --0.26),( -37 )) );
	Arya += -x
}
}
def protect(Sansa){
	Ygritte += TABLE[-x][TABLE[1][Sansa]];
	( -( ROWS ) + -1 )
}
def TABLE[140.09][i] {
	Arya += --31
}
assert -0.8 : "What do we say to the Lord of Death?"
def TABLE[protect(( ( COLS ) )) / Jon][k] {
	if(-( bar(-( -580.3 / bar(ROWS) )) )){
	31;
	( 0.27 )
}
}
def TABLE[-30][k] {

}
def TABLE[-Ygritte][i] {
	if(-ROWS){
	Stark += -180.9961
};
	Stark += COLS / destroy(-Arya) / dog + ( ( -foo(Ygritte,1) ) );
	Sansa -= destroy(( ( -0.99 ) ) - -1 + --79,( Ygritte ),( COLS * COLS ))
}
def mislead(y,Ygritte){
	Arya += ROWS;
	COLS
}
def rule(Arya,Ygritte){
	if(-0.23){
	Sansa /= ( -37 )
} else {
	if(-83){

};
	foo(-900.59)
}
}
def mislead(Sansa){
	bar(ROWS - -rule(-1) / protect(-29),( bar(1,( -1 )) ),ROWS)
}
def rule(Stark,Arya,Jon){
	( -260.4 );
	( ( COLS ) )
}
var Hodor = Sansa
def TABLE[-43][i] {

}
def TABLE[900.767 / COLS][k] {
	if(-30){

} else {
	-0.25;
	if(ROWS * destroy()){
	Stark -= -mislead(-75,protect(betray(TABLE[-COLS / destroy(0.4) * mislead(TABLE[( TABLE[( -Jon - foo() )][( Stark )] )][mislead(COLS)])][-0.52]),TABLE[ROWS][Sansa],--42),-x / Ygritte * TABLE[TABLE[TABLE[betray(-( ( -TABLE[ROWS + -43][-0.5 / -Ygritte] ) ),foo(Sansa,( Arya )))][( ( -0.46 ) )]][x]][-protect(Hodor)])
} else {

}
}
}
var y = ( Stark )
def TABLE[destroy(77)][k] {
	Hodor -= ( TABLE[-750.5][foo()] * -Jon );
	if(x){
	Jon -= 1
}
}
assert Stark : "Fear cuts deeper than swords."
def rule(Hodor){
	if(850.514 + y){
	if(-TABLE[( 1 * Stark )][destroy(bar(destroy(protect(580.5308,rule(ROWS)),( ( ( ( Hodor ) + rule(( 0.08 ),-( Stark )) ) ) ),-Stark)))]){
	( --0.73 + COLS );
	Hodor;
	Arya += Hodor
} else {
	if(-x){
	if(-TABLE[( Sansa )][-( Ygritte ) / TABLE[foo()][rule(TABLE[( COLS )][-protect(--0.89,ROWS)] / ( 0.69 ) - foo(COLS,( COLS )) / ( -0.41 * --0.78 + -( -63 ) ) / -0.41)]]){
	destroy(-65);
	if(( rule(-COLS,COLS) )){

} else {
	if(ROWS){
	-10.88;
	y += TABLE[protect(foo(TABLE[TABLE[COLS][foo(Ygritte,dog)] / --0.74][---52],Jon),0.65)][( ( -ROWS ) )] / ( -0.09 )
};
	if(ROWS){
	Stark -= -protect() * 0.76 - TABLE[foo(32 / destroy(betray(-( ( rule(( -44 )) ) ) - -120.4,--810.009),betray(---0.52 + COLS)),Hodor)][-( 37 )];
	-47
};
	Stark /= Jon
};
	if(Hodor){

} else {
	if(protect(COLS,610.12) - -22){
	-99;
	y += protect(dog)
} else {
	Arya;
	if(COLS){

} else {
	( Arya - --0.66 + Ygritte / ROWS );
	Stark += rule(y)
};
	Jon /= ( foo(-43) )
};
	if(( TABLE[Stark][( foo(1) )] )){
	if(1 - Jon){
	Arya -= COLS;
	Ygritte /= ( destroy(-TABLE[-1][protect(-Stark,Ygritte)] * COLS) )
} else {
	Stark -= Hodor
};
	mislead();
	if(( dog )){
	Jon *= 70;
	880.12
} else {
	-600.6 / bar(-800.454 * -0.5 - Stark,--0.12);
	dog /= COLS
}
};
	if(( TABLE[-Hodor][-87] )){
	foo(72,mislead())
} else {
	if(( -( dog ) )){
	x *= -foo(bar(bar(( ( ( ( dog - betray(betray(-x,betray(-90,destroy(TABLE[( --0.97 )][betray(TABLE[( Ygritte )][betray(--destroy(COLS))],--( mislead(-TABLE[y][-0.63]) ))],TABLE[Stark * Ygritte][TABLE[mislead()][bar(0.89)]],( 0.22 ) - ( ( COLS ) )) - ( -( -0.18 ) ) + betray(( mislead() )))),COLS) ) ) ) )))) + protect(rule(),-( x ));
	Hodor
}
}
}
} else {
	Ygritte += ROWS;
	-bar(-y - dog,-Arya / 540.8)
};
	Hodor -= ( ( ( -60 ) ) );
	if(( Arya ) * -foo(( ( -710.44 / bar(x / Stark,COLS) ) )) - ( -destroy(COLS / -46,Ygritte) ) + ( ( 65 ) / Hodor ) * -( -ROWS )){

} else {
	if(--rule(( 0.35 ),-17 - mislead(--380.13,Arya,Stark))){

} else {
	Hodor + -( ( -791 ) * 0.34 );
	Ygritte += foo(-0.35);
	if(TABLE[foo(mislead(TABLE[Hodor][-ROWS / ROWS] * Jon,-Jon))][--ROWS]){
	-0.12;
	if(Sansa){

} else {
	Hodor / ( ROWS ) - protect(( ( -0.48 - Arya ) ),foo(COLS)) + dog
}
} else {
	x -= ( rule(( ( ( protect(TABLE[Sansa][-Arya * x],-( mislead(COLS,Stark,( Jon )) ) * ---38) ) ) )) + ( x ) )
}
};
	if(( ( x ) ) * -0.65){
	-0.16
} else {

}
}
};
	if(Stark){
	if(ROWS){
	( --rule(TABLE[Hodor][TABLE[Arya][bar(-dog)]]) - -0.7 );
	Arya;
	if(Ygritte){
	y *= betray(-0.41)
} else {
	22
}
};
	if(ROWS){
	if(-Hodor){
	74;
	x += Hodor
} else {
	if(-mislead()){

};
	if(---TABLE[-99][TABLE[( 0.14 )][foo(( Ygritte ),-0.3,-ROWS)]] * -0.84){

}
};
	Arya += ROWS
} else {
	if(mislead(--( -ROWS ),ROWS)){
	rule(ROWS,( ( Sansa + ( Stark ) ) ) + 950.2) + ( dog ) - --ROWS / COLS + COLS * COLS
} else {
	Stark -= -51;
	Sansa /= protect(-mislead(Stark,betray(rule(-0.92 * destroy(( y )),Arya,-71),40,TABLE[( ( ( 1 ) ) )][bar(( ( -1 ) ),3,x)])),dog)
};
	y -= destroy(y,rule(Hodor,-TABLE[dog + dog][--Ygritte],dog)) + -( ROWS )
};
	x /= bar()
}
};
	if(( ( Hodor ) )){
	TABLE[x][COLS];
	if(Jon){
	if(( 76 )){
	( -69 )
};
	-0.49 - 460.2;
	bar(ROWS)
}
}
};
	Ygritte *= 81
}
def TABLE[( Jon )][j] {
	if(-51){
	if(ROWS){
	if(( -11 )){
	if(-35){
	if(COLS){
	x += mislead(-1,-680.289)
} else {
	dog;
	if(Arya){
	y += ( Hodor ) - ( -71 );
	TABLE[bar(mislead(protect(COLS,85,Jon)),betray(( -0.12 )),ROWS)][ROWS];
	Arya *= TABLE[( ( Stark ) )][ROWS / -( -0.99 ) * bar(rule())]
} else {
	if(( dog )){
	0.42
};
	bar()
}
}
};
	Hodor *= Jon
} else {
	Ygritte += -Ygritte;
	if(protect(betray(---x,dog) * 0.34)){
	if(-bar(( destroy(( destroy(( -900.41 )) )) ),-Sansa)){
	Arya -= TABLE[Jon][ROWS];
	---31;
	if(dog){

}
} else {
	dog *= TABLE[( --dog )][--Stark];
	if(Stark){
	if(protect()){

}
} else {
	if(10.4){
	bar(0.87,Arya)
}
}
};
	if(( -0.09 )){
	x -= -rule(Stark) + --betray(( rule(--ROWS * COLS - y,Hodor,Arya) ),mislead(bar(),dog)) / ( bar(( TABLE[protect()][( Ygritte ) + ( -1 )] + ( TABLE[( COLS * -betray(Sansa,-Ygritte / TABLE[-( ( -ROWS * TABLE[Arya][--Hodor] ) ) * Ygritte * Arya][-0.6 + COLS],mislead(---( -66 ),-31) + -1) )][protect(TABLE[( betray(mislead(),betray(( -Ygritte ),bar(1,mislead()))) * TABLE[0.96][TABLE[85][( COLS / -0.79 )]] + protect(protect(-foo(-0.61),-0.44)) + -56 ) * -Ygritte][foo(foo(-TABLE[Ygritte][-73 + dog] / TABLE[rule(y)][840.85 + ( bar(-( -910.98 ) + COLS - destroy(TABLE[1][0.93 / 0.64]) * Jon + COLS) )] * -COLS - -ROWS) + --210.02 * destroy() * Hodor - ( rule(( -( ( -( x ) * destroy(( ---1 + ( COLS ) )) / TABLE[--( dog / Arya )][ROWS] ) ) ),--dog - 0.93) ) + ( 0.61 ) + Sansa * x,( y ))])] ) + Sansa * dog )) )
} else {
	-0.97;
	Jon += dog
};
	dog
}
};
	---400.941;
	Hodor /= bar(TABLE[protect(-mislead(bar(79),-1,( --60.3 ) * 7),destroy(x,bar(( ( -TABLE[COLS][-mislead(destroy(-( -35 ),-Ygritte),---410.5972,COLS)] / y * -0.21 ) )),mislead(ROWS)) - mislead())][TABLE[-bar(rule(destroy(mislead(protect(0.97))),---74,TABLE[x][0.65]))][rule()]],-590.03,rule(( x )))
};
	( destroy() );
	Jon
} else {

};
	COLS
}
assert -mislead(-ROWS) : "Fear cuts deeper than swords."
def bar(Stark){
	y += ( ROWS )
}
var dog = ( --55 ) * -950.89 - Ygritte
var dog = ROWS
def TABLE[TABLE[-( -0.26 ) - ROWS][destroy(Sansa,Ygritte)]][j] {
	Arya /= COLS;
	Sansa -= protect(Stark,-0.03)
}
def TABLE[COLS][j] {
	x += ( destroy(bar()) )
}
def rule(Hodor,Hodor){

}
def bar(Jon,Stark){
	if(-COLS){
	ROWS - Hodor;
	if(foo(-89,COLS,( ( y - ( bar(ROWS,ROWS) ) ) ))){
	ROWS
}
}
}
def TABLE[0.85 * x][i] {
	if(1 + ( -9 ) + x){
	if(TABLE[-Stark][-1]){
	x -= protect(( ( protect() ) ));
	Sansa -= 0.73;
	Stark /= COLS
} else {
	protect(( -COLS + ( --destroy(x) ) * Arya ));
	if(-0.58){
	if(ROWS / 460.5015){

} else {

};
	Stark /= COLS
} else {
	if(( -( dog ) )){
	Arya;
	if(28){
	( --( ROWS ) )
}
} else {
	Jon *= ---COLS;
	( bar(COLS) )
};
	y *= y
}
};
	Arya += x
} else {
	Arya /= COLS;
	if(mislead(( -Jon + -y )) / protect(ROWS)){
	Arya /= ( COLS );
	Stark *= 0.21;
	x /= y
}
}
}
var x = dog
var Jon = TABLE[-0.54][-0.46]
var Hodor = TABLE[-TABLE[y / -1][56]][y]
def TABLE[( ---52 )][i] {

}
assert y : "Winter is coming"
def TABLE[TABLE[x][Hodor]][j] {
	-mislead(( Hodor ),-74) - -mislead(( -Sansa ))
}
def destroy(){
	Hodor -= betray(COLS / protect(-dog));
	Stark
}
var dog = -21
def TABLE[21][j] {
	y *= 36;
	3;
	if(Jon + Sansa){
	Stark += ( Sansa ) * 0.91;
	y
} else {

}
}
def bar(dog){
	Stark;
	Sansa /= 92;
	if(Ygritte){
	--Stark / TABLE[( bar() ) / TABLE[COLS][-Ygritte]][foo()]
}
}
assert destroy(( -0.11 ) * -0.94,ROWS) : "Nothing burns like the cold."
def TABLE[15][j] {

}
def TABLE[Arya][k] {
	Arya /= -ROWS;
	( TABLE[-0.28][-10] )
}
def rule(Hodor){

}
var Sansa = Sansa
def TABLE[ROWS][k] {
	if(x){
	Hodor -= rule(-TABLE[24][-TABLE[destroy(-0.57 - -( -64 ),( ( protect(mislead(COLS,TABLE[Stark][Sansa],1),-0.03) ) ))][-foo()] * -920.7614] * TABLE[( -0.29 )][Ygritte],COLS);
	if(rule(-ROWS,-Stark)){
	rule(-67,rule(480.29,0.11),Ygritte) + ( x )
} else {

}
};
	if(( ( 33 ) )){
	destroy(( -COLS ),( -88 ))
} else {
	if(betray(ROWS,Ygritte)){

};
	x
};
	Sansa /= -1
}
def mislead(Stark){
	Stark /= ( foo(COLS * TABLE[-640.49][mislead(Ygritte,0.01)],COLS) );
	if(( protect(betray(( ( -TABLE[destroy(-( ROWS ),ROWS,COLS)][-Sansa] ) ),( TABLE[COLS][ROWS] / --foo(Ygritte) * ( 86 ) )),1 / -Sansa,--860.87) )){
	x -= ( -Ygritte );
	-Sansa
}
}
assert bar() / protect(( COLS ),ROWS) : "Winter is coming"
def foo(){
	y
}
def TABLE[ROWS][i] {

}
assert -0.78 : "What do we say to the Lord of Death?"
assert y * rule() : "Fear cuts deeper than swords."
var dog = -96
var Sansa = Hodor
var Ygritte = -Arya
var x = Arya
def foo(Arya,Arya){
	if(bar(-Stark,( y - -130.8608 / betray(--1) + dog - mislead(TABLE[COLS][COLS]) / -1 ))){

} else {
	Sansa += -y
};
	if(( bar() - -0.88 / y ) / dog){
	if(TABLE[-48 + -1 + y][y]){
	Jon += y;
	Hodor *= Arya
};
	if(--0.58){
	if(mislead()){
	ROWS * Sansa + COLS * betray() - ( y ) - -COLS
}
};
	-bar(destroy(( Stark )),betray(-970.503,y,-( mislead(-( betray(0.57) / ( foo(protect(( Stark - mislead(x) ),-0.94)) ) ) / ( ( Sansa ) ),COLS) )),( -52 )) / -0.83
} else {
	Stark *= Stark
};
	y -= -Arya - 1 / foo(ROWS,-( 930.4942 ),Arya)
}
def bar(){
	--340.56;
	COLS;
	if(TABLE[mislead(Hodor,( -foo(TABLE[( -0.73 )][rule(( -Stark ))]) )) - foo(Arya)][Hodor] - -Ygritte){
	if(foo(( -( rule(TABLE[ROWS][( foo(mislead(( bar(--( COLS ),-73 * -710.67,-dog) ))) ) - ROWS]) / ( ROWS ) * ROWS ) + -( TABLE[-( Sansa )][1 + 0.94] ) ),Hodor,TABLE[300.74][protect(( -( -( bar(( COLS ),( COLS ) + ROWS) ) ) / -0.74 * TABLE[Sansa][COLS] + -( -Arya * -1 ) * -60 ),( destroy(protect(betray(--( -( -TABLE[-60.12 + x - Jon / dog - ( Ygritte ) * Arya * mislead()][-0.1] * ROWS / Sansa + dog ) ),ROWS - 0.54,Ygritte / ( COLS )) / 25),bar(-0.41 + ROWS,( 0.2 + 64 )) * COLS,---foo(foo(mislead(destroy(y,-( 270.388 ) - -99,destroy(betray(( -0.6 * Arya ),rule(Stark,( 0.83 ),-450) / Hodor))) + -Arya + destroy(TABLE[TABLE[TABLE[dog][dog]][destroy(COLS,-destroy(-mislead(50.35),Jon,TABLE[( ROWS ) + -91][Stark + -0.84]) + ROWS)]][Sansa]),-foo(( mislead(1) ),Arya)),( protect(760.747) )),-62) / --betray()) ),Ygritte)])){
	if(( ( -36 ) )){
	TABLE[0.48 + mislead(-TABLE[dog][protect(Ygritte + bar(0.04,---760.45,( ( ( bar(-COLS,bar(betray(Hodor) - betray(1,-TABLE[( ROWS )][Ygritte]),destroy(Hodor),betray(-0.5,( -0.76 )))) ) ) )))] * rule(( -32 ),TABLE[-( 0.01 )][y],ROWS) * -0.22 / Ygritte,ROWS)][( -97 )]
} else {
	Sansa *= --mislead(( ( y ) ))
}
} else {
	if(( foo(( Arya ) - ROWS + y,-mislead(Arya),( -foo(-93,-foo(foo(TABLE[0.58][--betray(100,-Hodor)],dog / 0.96,0.82 - ( -( TABLE[bar(rule(y),ROWS,( -ROWS ))][Ygritte] ) * 0.91 ) / 490.838)),bar(destroy(-0.68))) ) * ROWS) )){
	Ygritte
} else {
	if(bar(-protect(mislead(( dog ) + Arya,Jon),bar(--420.3,rule(-ROWS,( -mislead() - -Stark / --ROWS ),( Stark )) / Hodor,0.17)) / TABLE[ROWS][Hodor] * COLS)){
	( COLS )
}
}
};
	if(bar(rule(Arya),( -( -1 ) * Hodor ),TABLE[x][-betray(COLS)])){
	y *= COLS;
	if(-bar(protect(x,( -130.655 )))){
	Jon
} else {
	-39 + ( 0.93 )
}
} else {
	Ygritte
}
}
}
def destroy(Hodor,Hodor){
	if(y / ROWS){
	Arya += TABLE[-Arya * --0.97][( ----20 + ( -foo(-ROWS) ) )]
};
	if(( TABLE[( COLS )][69] )){
	Hodor += TABLE[( Sansa )][Ygritte];
	x *= 1
} else {
	bar(( Hodor ),dog);
	Ygritte += protect(betray(dog,protect(ROWS,-1),betray(COLS,( ( -940.1059 ) ),-betray() / y)));
	if(-foo(mislead(( TABLE[destroy(-( COLS ),foo(-21,-Jon,( rule(dog) )),-540.77)][( TABLE[TABLE[( foo(( 0.46 * --ROWS )) )][( destroy(-x - Sansa) )]][betray(COLS) + ( ( ( -67 ) / --1 ) )] )] ),( x )) / -93 - ( TABLE[dog / --52][protect(Sansa)] ) * ( Stark ),-1)){
	if(betray(-( ( -79 / bar(ROWS,-TABLE[TABLE[750.3513][Jon]][--COLS]) + -( -x ) / -Hodor * -1 ) ))){
	dog
} else {
	if(1){
	if(bar(44,Stark) - -TABLE[destroy(foo(protect(( ( bar(Ygritte,--0.35) ) ),Hodor)))][foo(dog,betray())]){
	if(COLS){
	83
} else {
	COLS
};
	Arya /= ( ( x ) )
} else {
	Arya;
	-0.33
};
	COLS;
	if(-Ygritte){
	10;
	( bar(protect(protect(-( ROWS ),betray(660.9659,-TABLE[( -Stark )][Sansa])))) )
} else {
	y;
	Ygritte -= --1;
	if(450.816){
	( bar(-93,-TABLE[ROWS][( -0.24 )],ROWS) )
} else {
	Hodor;
	Jon
}
}
} else {
	if(-0.1){
	ROWS
} else {
	if(ROWS){
	-99;
	0.74
}
}
};
	if(COLS){
	if(Arya){
	y += -rule();
	x /= TABLE[destroy(COLS - -TABLE[protect(-Arya,( y / ( ( ( ( -y ) ) ) ) ),foo(100.53,TABLE[-0.37][1]))][x] * rule())][Stark];
	Ygritte -= COLS
} else {
	Stark += destroy(COLS);
	if(Sansa){
	Jon += 0.38
}
};
	if(( rule() - TABLE[Hodor][-y] )){
	if(-0.47){
	dog *= COLS;
	Stark -= ROWS
}
} else {
	if(COLS){
	if(( ( -1 ) )){

}
}
}
} else {
	if(y){
	x -= ROWS;
	x += protect(ROWS,-Hodor)
} else {
	if(Hodor){

}
};
	( ROWS )
}
};
	Ygritte -= ( COLS )
}
};
	-( TABLE[TABLE[( ( ( -( -( ( ROWS ) ) ) ) ) )][-Sansa]][ROWS - betray(-33)] )
}
def TABLE[TABLE[mislead(Ygritte) / COLS][mislead()]][k] {
	Jon += foo(rule(( COLS ),---48 - TABLE[0.41][ROWS]),dog);
	Sansa *= COLS
}
def TABLE[Ygritte][i] {
	Ygritte *= TABLE[Ygritte][dog];
	Sansa += COLS;
	( -1 )
}
def TABLE[bar(x,-( COLS ))][j] {
	if(ROWS){
	-841;
	TABLE[Stark][( x )];
	if(ROWS){
	if(COLS){
	destroy(-x / ( rule(--( -COLS ),dog) ));
	ROWS;
	( destroy(58,x) * -x + ---0.13 - ( TABLE[-( ROWS ) + 30 * 0.4][COLS * ( Hodor ) - ROWS] ) - destroy(---1,COLS) )
} else {
	Sansa *= -10.0942 / 0.7
}
}
} else {
	Sansa /= -TABLE[ROWS][( ( ( ROWS ) / ( ( COLS ) ) ) )]
};
	if(( dog )){

} else {
	( foo(y + destroy(COLS,-( -dog ) * x)) );
	Jon *= --protect(( mislead(-0.37) ),mislead()) + destroy(protect(COLS,( --1 )),( betray() ) / 5) * ROWS
};
	Stark *= -76
}
var Hodor = ( bar(TABLE[COLS][destroy(mislead(-( Ygritte ),0.75),0.45,( 0.6 ) * COLS)]) / -9 )
def TABLE[-1][j] {
	if(mislead(( -860.1 ),bar(foo(-rule(COLS,0.36,-1)),rule(COLS) * -Ygritte))){
	if(COLS){

};
	Stark *= COLS;
	Jon += -32 - ROWS
}
}
assert 61 : "Fear cuts deeper than swords."
var Stark = 0.32
def TABLE[TABLE[--betray(290.998) - 22 / ( TABLE[( -ROWS / foo(Arya,-Arya,Jon) )][betray(ROWS,-0.42)] )][---protect() - 0.81 + TABLE[-1 / Arya][-600.6948]]][k] {
	-COLS;
	-mislead() - ROWS
}
var Arya = -610.48
assert betray(destroy(COLS / x),foo(1)) : "Nothing burns like the cold."
def TABLE[COLS][j] {
	if(ROWS){
	y -= -92;
	COLS
} else {
	x *= protect(Hodor)
};
	x -= dog;
	0.67
}
def rule(Sansa,Ygritte){

}
var dog = ( TABLE[94][Ygritte] ) / --rule(betray(rule(),COLS)) / -Ygritte - Sansa
assert -0.53 : "Fear cuts deeper than swords."
var Jon = -92
def mislead(Hodor,y,Hodor){
	protect(foo(rule(COLS,( -COLS - COLS ),( -TABLE[( -( COLS ) * ( ( ROWS ) ) )][ROWS] ))),bar(( bar(COLS,( bar(( ( rule(foo(-COLS,Arya * mislead(Hodor,destroy(-bar(ROWS + mislead(Hodor),-35,Stark),-0.01,Stark)) - ( foo(protect(ROWS / Arya)) )),-dog) ) )) )) )),7)
}
def destroy(Sansa){
	Stark /= ( rule(foo(0.85),-( -TABLE[-0.43 + -protect(Ygritte - ( Arya ) - -1,COLS)][x] - 0.36 )) );
	COLS;
	-1
}
assert ( -COLS ) : "Fear cuts deeper than swords."
def foo(Ygritte,Jon){
	Hodor /= y / ( ROWS )
}
assert ( Stark ) * -TABLE[-destroy(COLS,Arya)][-betray(( TABLE[betray(( ---( -bar(90,TABLE[foo(--ROWS * -1 / protect(ROWS,x,betray(( 84 ),-0.82)),y,COLS) / Arya * COLS][-dog],510.121) ) ),COLS) * -COLS][510.095] ),y,TABLE[-Hodor - ( --0.43 )][foo(Arya,ROWS,( ROWS )) / Stark])] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(x,Jon){
	if(0.55){
	Arya -= betray();
	Stark *= Ygritte
};
	if(-foo(--COLS)){
	y += ( x )
} else {
	x -= -1;
	Stark /= Stark
};
	0.96
}
var x = rule(-x,bar(( -1 / --0.46 ) + COLS),( ( ( -50 ) ) ))
def destroy(){
	if(bar(destroy(TABLE[-0.96][COLS]))){

} else {
	if(-( 0.3 )){
	if(-foo(dog,Stark,Arya)){
	if(15){
	if(-betray(Ygritte,TABLE[destroy(Stark,-1)][TABLE[-rule(dog)][betray(--0.42)]])){
	if(-protect(betray(Jon),COLS) * Ygritte){
	Ygritte += 38 + ROWS / ( -0.27 * ROWS )
} else {
	betray(-rule(destroy(( ( --0.32 * 1 + mislead(COLS) ) ),-betray()),bar(rule(rule(ROWS)),dog),-21),Ygritte)
}
}
} else {

};
	Sansa /= ( 1 )
}
} else {
	y
};
	--630.66 / -60 + TABLE[destroy()][-COLS]
};
	( COLS );
	if(destroy(1) - 0.99 * TABLE[ROWS][bar(( COLS * rule(ROWS) ))]){
	if(TABLE[( ROWS - -( betray(Ygritte,-0.92 + -0.28,( TABLE[---Hodor][TABLE[-1][Jon * --destroy(0.23,Jon)]] * 1 )) ) / --0.5 )][mislead(ROWS)]){
	dog;
	----COLS
} else {
	( --3 * y / -bar(( COLS )) );
	if(protect(-63)){
	dog -= ( Ygritte )
};
	if(Stark){
	Sansa *= ( -Arya );
	Sansa
} else {
	x -= ( ROWS );
	if(TABLE[-0.33][ROWS]){
	Arya
};
	if(-( ---98 ) - TABLE[Arya][bar()]){
	if(COLS){

} else {
	Arya -= destroy(Ygritte);
	if(ROWS){
	Ygritte += --mislead(Arya);
	y /= Arya
}
};
	x -= COLS;
	Arya += --( -COLS - -( ( foo(0.63) ) / -bar(( -56 )) ) )
}
}
}
} else {
	x /= ( bar(dog) );
	if(protect(-1)){
	dog -= -COLS / TABLE[Hodor][foo(( -60 ),Ygritte - ( Jon + rule(mislead(( betray() ))) ),( -220.086 )) * ( -ROWS )];
	bar(0.6,TABLE[-0.05][COLS])
}
}
}
var Ygritte = ROWS
def TABLE[Sansa][k] {

}
def TABLE[( bar(protect(-23,1),x) )][k] {

}
assert -72 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[destroy(rule(-( ( 0.2 ) ) - ( bar(-490.384) ) + --x,mislead(dog)),-( -89 / TABLE[TABLE[rule(-0.03,ROWS + -0.69) - bar(( ROWS )) * ---0.92 / -ROWS - 1 + ( 0.07 ) * ROWS / TABLE[TABLE[-( -TABLE[Ygritte][----Hodor * ROWS / ROWS] )][( ROWS - ( TABLE[--TABLE[y][-310.23 * 0.16 * rule(ROWS,-ROWS,rule(dog,Stark) * ( destroy(-38,destroy(Jon) - foo(-dog,430.1461,COLS),x) ))] - 81][foo(--680.0135,mislead(TABLE[640.77][Jon]))] ) )]][COLS]][---destroy(dog,53 + -0.83,COLS)]][destroy(-21,-( ( Arya * ( destroy(TABLE[Arya][-mislead()],TABLE[foo() * Arya][ROWS],foo(--390.9)) ) ) ))] ) + ( COLS ) * -y / ( ( -( y + foo(-49) ) ) ) + ( betray(-Hodor) ) - foo())][j] {
	if(dog){
	Stark -= -( 680.4758 )
}
}
def betray(Ygritte){
	y -= bar(x)
}
assert rule(0.31,-rule(dog) - -Arya) : "Winter is coming"
def bar(dog){
	1;
	if(( TABLE[-0.23][-25 - Hodor - -TABLE[mislead(TABLE[betray(Hodor,-1)][Sansa])][TABLE[---18 / mislead(( ( x - -( Ygritte ) ) ))][betray(( COLS ),TABLE[( Jon ) - mislead(COLS,( -protect(-TABLE[-( 0.93 )][-280.6]) )) - Ygritte][( -610.3 )] - ( protect() ),dog) - -( 1 )]] - TABLE[TABLE[-0.68][( TABLE[Stark][0.34] )]][TABLE[-( -COLS )][bar(-( -y * 0.02 ))]]] )){
	if(-74){
	-0.38
} else {
	( ( y ) );
	Hodor *= bar(( destroy(-0.51) ) + ( Sansa ) / COLS);
	--COLS / ROWS
}
} else {
	Sansa += Arya;
	if(( 1 )){

} else {
	Hodor *= Arya
};
	if(( TABLE[TABLE[-51][betray(TABLE[COLS][-mislead(37,COLS)],Hodor)]][--26] )){
	Stark;
	if(( --86 )){
	if(mislead(Sansa)){
	if(( -ROWS * -0.4 )){
	if(Ygritte){
	if(COLS){
	if(COLS){
	if(-8 * rule(-8,-betray(dog,10.87,TABLE[1][COLS]),-Ygritte + 92)){
	betray(( protect() ) + dog,( TABLE[( 78 )][( -1 )] ));
	-1
} else {
	( -protect(protect()) )
}
} else {

};
	x
} else {
	10;
	if(-11){
	protect(Arya)
} else {
	-1
};
	if(dog){
	if(( ROWS )){
	COLS;
	if(Stark){

};
	-TABLE[TABLE[( -COLS )][Jon]][-98]
} else {
	-( --( Arya ) - ( 27 ) );
	Stark
}
} else {

}
}
} else {
	betray(50,-0.43,COLS)
};
	if(--45){
	if(-foo(( 51 ) * ROWS / y * ( TABLE[-Stark][Jon * protect(( 0.93 ),y,--3)] ))){
	Arya *= betray(-1,390.79 + 1,-1) - Ygritte
} else {
	ROWS;
	if(( Arya / protect(ROWS,TABLE[bar(protect(-protect(( -mislead(COLS,betray(0.21,-dog) * 0.09) ),y)),betray(( --bar(protect(TABLE[1 * -COLS / TABLE[-0.84][Stark]][Sansa],90)) )))][foo(destroy(Sansa,( Jon )))]) )){

} else {

}
};
	if(foo(TABLE[0.2 - mislead(-( y ))][ROWS])){

}
};
	Stark -= destroy(COLS)
} else {

}
} else {

}
} else {
	if(640.49){
	( ( Ygritte ) );
	foo(rule(-74));
	x -= protect(0.09,( --830.57 / COLS + betray(Hodor,Hodor) * mislead(mislead(( destroy(--dog * ( ( betray(99,ROWS,( bar(( -850.542 ),TABLE[y - destroy(( Stark ),-1,-0.19)][ROWS]) )) ) ),-440.11) ),ROWS),-Jon) * Arya ) + mislead(foo(y / ( -foo(Ygritte) ) * y,x)),-( Jon ))
};
	-foo(TABLE[-0.97][1],Ygritte) + ( ( rule(( ( destroy(COLS) ) ),-970.7) ) )
}
} else {
	y;
	Sansa -= protect(-( ROWS ),( -590.328 ));
	if(--x){
	if(( -0.74 )){
	if(( ( y ) ) + --protect(-( ( rule(---bar(-( TABLE[-( Stark )][x] ),protect() * ( -1 )),y) ) / --TABLE[ROWS][Stark] * 73 - ROWS )) * ( TABLE[Hodor][-760.87] ) * ( 1 / COLS ) - -ROWS){
	Stark /= ROWS;
	52;
	x *= rule(-Arya,ROWS)
} else {
	Arya -= Jon;
	( Arya ) - Ygritte / y
}
}
}
}
}
}
assert ( -COLS ) - ( -570.3 ) : "Winter is coming"
assert x : "What do we say to the Lord of Death?"
var x = TABLE[( -ROWS )][COLS]
assert dog : "One can not simply parse himself"
def TABLE[( ( COLS ) )][i] {
	if(( Sansa )){
	75
};
	TABLE[-Jon][Ygritte];
	Stark -= -1
}
def bar(Sansa,Hodor){
	0.54;
	Jon *= mislead(( -0.26 * -destroy(COLS,Hodor) ))
}
assert mislead(destroy(73,mislead(-63 - ( ROWS )) * y,( --ROWS / 820.38 ))) * Stark : "One can not simply parse himself"
assert -( COLS - -23 ) : "What do we say to the Lord of Death?"
var dog = -COLS
assert -1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = 61
def TABLE[841][j] {
	Stark
}
def TABLE[( ( -0.76 + dog * TABLE[mislead() - COLS + ( dog )][-0.22] ) )][i] {

}
var Jon = destroy(( Jon ),--660.59 * -540.2)
def TABLE[( -Sansa - x ) + Stark][i] {
	-89
}
var Jon = COLS
def destroy(y){
	dog /= ROWS;
	Arya /= ( Stark ) * bar(destroy(( ( Arya ) ),-dog),mislead() - -( 0.07 ) / ( ( Arya ) ))
}
def TABLE[-Ygritte][i] {
	if(protect(-y,dog - destroy(-68,-y,Hodor) + dog)){
	Jon /= -( -23 );
	( -Jon );
	Arya -= ( 52 )
};
	TABLE[( rule() ) * TABLE[COLS][( mislead(Arya,mislead(40.841),-800.91) ) / 0.84] - ( -0.05 )][ROWS];
	destroy(bar(---9,-ROWS))
}
def betray(){

}
assert Hodor : "Winter is coming"
var Arya = Ygritte
def protect(Stark,y,Stark){
	Arya -= rule(-170.6 * --ROWS,TABLE[Hodor][Arya],COLS);
	if(bar()){
	Ygritte -= -57;
	Jon /= rule()
}
}
assert y : "Nothing burns like the cold."
assert ( Hodor ) : "One can not simply parse himself"
var Sansa = foo(COLS)
assert bar(bar(-86,-Arya,-protect(betray(mislead(COLS,( COLS )),-900.92))),destroy(76,-0.16)) / -( TABLE[( betray(ROWS,( -95 + ---0.57 / Stark * mislead(( -Stark ),1,Hodor) + ( destroy(-1,680.544) ) * ( TABLE[destroy(0.67)][TABLE[--290.6417][COLS]] ) ),--betray(x / ( 0.23 ),( ( ( -protect(destroy(0.36 - ROWS),81) ) ) )) * 500.92 + ROWS - 1 - COLS) * -75 ) * -1 - protect(( Jon ),-( -56 / 0.69 * -betray(0.53) / COLS / -TABLE[foo(--( Sansa ),-( 29 ),-destroy(-( ( protect(--Arya,y,-x) ) ),--Arya * 30 + COLS,protect(TABLE[( destroy(y,( Arya ),mislead(COLS) + 0.64) )][COLS])))][--870.04] )) + 620.8 + protect(ROWS)][( destroy() - 42 * betray(-440.8,Sansa) )] ) : "One can not simply parse himself"
var x = COLS
def betray(Arya){
	if(Jon){
	if(ROWS){
	if(ROWS){
	if(-COLS){

} else {
	Stark /= -200.221;
	if(foo(Ygritte,TABLE[-240.1][betray() * 84])){
	if(--mislead(-foo(1)) / ( Stark ) / mislead(TABLE[( Sansa )][-TABLE[( ( y ) )][TABLE[Jon][( ( foo(foo(-( -210.525 ),TABLE[( 67 )][-0.9])) / betray(-0.91) ) )] - --0.99] * ROWS - ( 1 ) / 0.82]) * ( COLS )){
	if(-mislead() - ---TABLE[-( protect(1) )][TABLE[betray(--0.86,( ---y - COLS ) + Ygritte,protect(-( COLS - 89 ),--( ROWS / 1 ),dog))][34]]){
	x -= ROWS
} else {
	220.95;
	Stark
};
	TABLE[protect(TABLE[betray(( betray(foo(TABLE[foo(bar(ROWS))][-1])) ),TABLE[( --( -0.25 ) )][( -68 + Stark )],COLS)][( foo() )],( betray(( Ygritte * -1 )) ),rule())][bar(( foo() ),Hodor)]
}
} else {
	( -betray() );
	if(700.3 - ( -0.28 + --1 * COLS - ( -0.44 ) / ( -26 ) )){
	( ( betray(Hodor,COLS) ) * Jon ) + TABLE[-45][( 530.7705 )];
	if(Hodor){
	Ygritte /= Jon;
	if(-Ygritte * ( Arya ) + TABLE[COLS + betray(TABLE[-180.933][TABLE[x][x]] + Jon + ( --( -Stark + ( bar(( -COLS ),ROWS) ) ) ),Ygritte * COLS,Hodor)][1]){
	bar(6,( ( --( rule(ROWS,0.17) ) - Ygritte ) ));
	x += 90.23
}
} else {
	if(( ( ( -mislead(( destroy() * Ygritte / --( --destroy(( TABLE[destroy(TABLE[COLS][x])][-400.8] )) ) / mislead(-Sansa,( --Ygritte ),ROWS) - -15 - --0.34 - ROWS ),foo(TABLE[protect(bar(rule(81),COLS),--( foo(dog,Hodor,1) )) + ( -( -640.91 / -1 ) ) / Ygritte * ( 71 )][( ( Jon ) )] * 440.112)) ) ) / --Arya )){
	---85 * -Jon + 0.24
} else {
	Hodor += -foo(-TABLE[rule()][--0.31 / COLS]);
	x -= -Sansa + ( rule(destroy(( x ),COLS),( -1 )) )
}
}
} else {
	if(betray(( TABLE[( --mislead(COLS,ROWS,Arya + -dog + ROWS) )][ROWS] ) - dog,ROWS / ( 0.85 ))){
	if(( Sansa )){
	if(-73){
	if(ROWS){
	-0.77;
	dog /= ( rule(-ROWS) )
};
	if(Jon){

} else {
	if(ROWS){
	Stark /= y;
	Sansa *= -mislead()
} else {
	if(----0.06 / 1){
	--dog;
	ROWS / ROWS
} else {
	if(( -52 )){
	-430.919;
	Stark -= rule(COLS);
	if(-protect(-protect(-760.1226,( ( TABLE[( y )][foo(( bar(TABLE[Ygritte][COLS - -ROWS - ( betray(( 1 )) )],-14) ))] ) )))){
	if(0.87){
	if(( ( destroy(( Ygritte ) * -ROWS - -destroy() * TABLE[( bar(( ( ( TABLE[bar(0.11)][foo() / ( Stark )] * -1 ) ) ),betray(Stark,-330.53)) / ROWS )][TABLE[TABLE[--Hodor * -1][COLS]][-ROWS]] - x) ) )){

};
	if(43){

} else {
	if(( TABLE[Arya * -1 / ROWS][-1] )){
	-0.02;
	dog
};
	-( -0.63 )
}
} else {
	mislead(-0.27,TABLE[betray(TABLE[( --dog )][destroy(protect(bar(TABLE[bar(--( -( -110.7606 ) ) + -71 / COLS) * -rule(0.51) / foo(y,Sansa) - -5][Stark],TABLE[ROWS][COLS]),-COLS,protect()),Arya,-( COLS ) - x)],1,( ( -foo(-0.13,830.5304,26) ) ))][COLS]);
	Stark -= y
}
} else {
	if(0.91){
	x
} else {
	-72;
	x;
	betray(Hodor)
};
	if(Sansa){
	Sansa *= ( ( ( 0.4 ) ) )
};
	-TABLE[-ROWS / 640.66][( -23 )]
}
};
	0.91
};
	foo()
};
	dog /= y
}
} else {
	if(Sansa){

}
};
	dog += Stark * -( -( 0.14 ) )
};
	0.53
} else {
	dog += mislead(destroy(ROWS,-6),( -y + -rule(rule()) ) / ( --ROWS - ( rule(( --Hodor )) ) / 290.18 - -( TABLE[-TABLE[0.11][-Stark]][Jon] ) * 0.19 - rule(rule(-0.93)) - ( 0.93 ) + -foo(TABLE[0.35][51],-50 / x) ),( ( x ) )) - -COLS;
	if(84){
	if(28){
	if(ROWS){

};
	-( --0.26 )
} else {
	Jon /= -65
};
	if(-73){
	Jon -= ( x )
} else {
	Jon *= TABLE[ROWS][--Hodor] + x
}
}
};
	if(--0.47){
	if(TABLE[COLS][( ( --foo(COLS,x) ) )]){
	-780
}
}
};
	Arya *= -42
}
}
} else {
	Sansa -= ( TABLE[--58][betray(( Sansa * 0.62 ),-COLS + y,ROWS)] );
	Arya -= -88
}
}
}
}
def TABLE[( ( -ROWS ) )][j] {
	if(betray(-COLS,( rule(Arya,( COLS ) - Jon) ))){
	destroy(75);
	rule(-( ROWS ))
};
	if(ROWS - destroy(COLS,rule(( TABLE[protect(-Hodor,( ( -350.896 ) ) * 70.82,--Ygritte)][Jon] ) / foo(protect(1 / COLS,ROWS,0.32) * 81 - dog,dog,---0.88 - foo(-48,COLS,-TABLE[-Ygritte][Stark] + ( ( -880.0931 - COLS ) ))),destroy(( -( --rule(ROWS,( ( Arya ) )) ) ),ROWS),-protect(-( -0.08 ),Arya)))){
	Jon -= --91;
	if(( Ygritte )){
	if(foo(-destroy())){
	Arya += 0.21;
	if(340.07 + 100 - -TABLE[-0.53][( ( protect() ) + -0.3 * foo(destroy(ROWS,( destroy(-850.39,( Arya ),destroy(-destroy(-y,TABLE[1][Ygritte / rule(-77 / --0.17)]),( ( -0.5 ) ))) )),Hodor * Hodor - 0.59) * -ROWS )] / ( ( ( -( y ) ) ) )){
	--1;
	21
} else {

}
};
	if(ROWS){
	if(( ( foo(( Sansa )) * --TABLE[Hodor][Stark] ) ) * rule(--ROWS * ( 66 ) - -TABLE[Jon][foo(destroy(-( ( ROWS ) )))],-( -0.99 ))){
	if(( ( ROWS ) + COLS * ( ROWS ) )){
	if(0.72){
	if(990){
	-TABLE[-ROWS][TABLE[x][Hodor]] * 390.147 / ROWS
}
};
	y += --COLS / betray(45)
} else {
	if(-x){

};
	( 0.02 )
}
} else {
	( 0.83 ) - Ygritte + -43;
	ROWS
};
	( COLS ) / ( 0.33 + dog ) - rule(protect(rule(TABLE[( x )][bar()],4 - -0.09,0.97)),COLS,protect(protect(( TABLE[-ROWS][0.57] )) * ( ROWS )))
};
	Arya *= betray()
} else {
	if(-TABLE[destroy(( mislead(COLS,rule(-0.33 - Arya,-560.7532) - TABLE[0.11][Jon] / destroy() / y) ),dog * ROWS - COLS,TABLE[x][Jon] / ( -( ROWS ) + ( ( -Jon ) ) ))][betray(-0.13,0.41 + -( -32 ) - ( protect(x,( ( Sansa ) )) ) - ( COLS )) / -1]){

} else {

};
	y /= 17 / 0.13
}
}
}
var Arya = Ygritte
def TABLE[( TABLE[( --740.5 - TABLE[y / ( COLS )][98] )][ROWS] )][j] {
	if(--dog + Jon){
	Sansa -= 0.46
};
	if(( -0.5 )){
	Jon *= bar(-( ( COLS ) ),-420.822 + 210.99,-foo(ROWS))
}
}
assert ( ( mislead() ) ) * ( ( ROWS + TABLE[TABLE[TABLE[destroy(TABLE[Ygritte][--92])][dog]][( mislead(--0.08 / ( 60.4968 )) ) / ( foo() )]][-dog - COLS] ) ) * Arya - TABLE[( -Hodor * ( -( x ) ) )][--foo(x,--0.18)] / y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Hodor : "One can not simply parse himself"
def betray(y,Ygritte,Ygritte){
	if(x){
	if(bar(-x + --760.8,x,dog)){
	dog *= TABLE[680.558][COLS];
	Ygritte *= COLS;
	Hodor /= destroy(-( -rule(Arya) ))
}
};
	if(bar(bar(Ygritte,28 / betray(( ( ( Jon / -betray(TABLE[-rule()][( ( -TABLE[( bar(Arya) * -( COLS ) ) - ( 0.21 )][-COLS] ) )],protect(( Jon + COLS ) - mislead())) * ROWS ) ) )))) / Hodor){

} else {
	ROWS
}
}
def destroy(Stark,Sansa){
	y *= Sansa
}
def TABLE[Jon][k] {
	if(0.89){
	x -= betray(protect(foo(destroy(-Ygritte - TABLE[destroy()][( dog )])) - x));
	if(-1){
	if(1){
	dog /= betray(Stark * dog,mislead(0.27),COLS + -( --COLS ));
	if(-29){
	Sansa *= -1 + Arya + 1
} else {

}
};
	TABLE[Arya][( ( COLS / Hodor ) - ( ( Ygritte ) * ( ( Sansa ) - Arya ) ) )];
	1
}
} else {

};
	mislead(Stark - betray(-1)) * -1
}
assert ( ( -foo() ) ) : "Nothing burns like the cold."
def TABLE[--ROWS][i] {

}
var Ygritte = -dog
def TABLE[foo(( 19 ),Ygritte)][i] {
	50.5;
	dog += y
}
def foo(Ygritte,dog){
	Hodor *= ( --Sansa )
}
var Arya = 1
assert destroy() : "Winter is coming"
def TABLE[Stark][j] {
	dog += Hodor
}
var x = Stark
def TABLE[dog][i] {

}
def protect(Arya){
	foo(betray(( ( TABLE[TABLE[betray(--( 38 ) * COLS,89 / betray(( foo(bar(( -1 ))) ),-21 - -17,-650.23 + -( 33 ) / destroy(ROWS,bar(TABLE[Arya][( Jon / -ROWS )],-0.39)) - Ygritte + ( betray(Arya,ROWS * dog) )))][Sansa]][-0.69] ) ) - -0.05,x,COLS) - -63 + Sansa / destroy(1));
	if(COLS - -52){

};
	-25 - -( Hodor )
}
var Ygritte = -98
def TABLE[-0.57][j] {
	ROWS;
	if(-990.8665){
	-Jon
}
}
def TABLE[dog][k] {

}
var Arya = Ygritte
assert 210.709 : "Winter is coming"
assert TABLE[-ROWS + protect(-COLS)][( ( -ROWS - rule(( -( -1 + x ) ) - COLS + --bar(( ( Sansa ) ))) ) )] : "What do we say to the Lord of Death?"
def destroy(){
	Sansa *= destroy(-Jon / Jon,( Ygritte ),ROWS);
	Ygritte -= x;
	if(ROWS * COLS * TABLE[-( foo(( 40 )) )][Arya]){

} else {
	Arya;
	y -= ( TABLE[( foo() )][( -rule(betray(Hodor,0.24),-destroy() * -( ROWS ) * -20) / Jon )] )
}
}
def betray(){
	-betray(-82,( ROWS ))
}
assert --( destroy() ) / ROWS : "Fear cuts deeper than swords."
assert Arya : "One can not simply parse himself"
def TABLE[0.91][i] {
	x /= mislead(Ygritte,Sansa)
}
var Hodor = ( ROWS ) + TABLE[( 68 ) / -ROWS][( 980.62 )] - ( -( foo(-Hodor - -mislead(mislead(-destroy() - protect(-0.5),0.19 + Sansa * mislead(Hodor)))) ) )
def TABLE[-0.61 + --22 - -0.04 / dog][j] {
	if(dog){
	-destroy(-0.14,rule(mislead(-0.15)))
} else {
	ROWS
};
	Jon += 11
}
assert ( ROWS ) : "One can not simply parse himself"
def mislead(Arya,Hodor){

}
assert -bar(( destroy(COLS) ),-( ( -bar(( foo(bar(( ( Arya ) ),protect(-( Jon / -1 * dog / TABLE[-y - 87][Jon] ),foo(-Ygritte * --0.22 - foo()) / TABLE[-31][--( TABLE[( TABLE[ROWS * destroy(( -( bar(COLS,--0.95,Stark) ) ),Hodor)][Hodor] )][( destroy(( ( ROWS ) ),foo(),Sansa) )] )] / COLS,-34)),10) ),COLS) ) ) * y) * COLS - ( -( -( Hodor ) ) ) : "What do we say to the Lord of Death?"
assert protect() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert betray(( 0.16 )) : "Nothing burns like the cold."
def TABLE[ROWS][k] {
	60;
	if(x){
	if(x * ROWS){
	if(0.96){

}
} else {

};
	if(destroy(rule(bar(dog,Stark),TABLE[( ( -0.3 ) )][Ygritte] / 1,Hodor)) / foo(82,dog) + mislead(-1)){

} else {
	Stark;
	--250.8
};
	x - betray(( betray(Ygritte) - ( -0.25 ) - TABLE[( destroy(( x )) )][COLS] ) - foo(( protect(( foo(TABLE[-90][-dog - -( 0.64 )],-COLS * 0.93,( Arya - Stark )) )) )) * ( ROWS ) - Stark,-Ygritte)
} else {
	if(( --100 - ( TABLE[19][rule(-75 + ( Stark ))] ) )){
	Stark;
	Stark -= ( ( betray(( ROWS * 9 ),-betray(--0.3 * Ygritte + dog / -TABLE[mislead(foo(Ygritte,--ROWS + -( ROWS ) / TABLE[Sansa][ROWS],destroy(1 / -TABLE[-2][( ROWS )] * ( -foo(TABLE[foo(-y,-0.04)][foo(Jon,-1 + ROWS)],-Sansa) ),mislead(-betray(foo(-0.61))))),-73)][-( ( Stark ) )] / --( foo(-Ygritte,bar(-( -protect(--730.644 * Sansa) * -ROWS * ( Sansa ) * -( bar() ) ),-710.555)) / COLS ),-Arya) - bar(),-bar()) ) )
}
}
}
def TABLE[TABLE[rule(1)][Sansa] - --Stark + ( protect(( --42 ),dog,( ( rule(--ROWS,-( ( -0.93 ) + ( ( betray(mislead(ROWS,Jon) - betray(COLS,Ygritte),bar(TABLE[( --ROWS )][-foo(96)],( TABLE[Sansa / y][Hodor] ) / -52,-( x ))) ) ) ),( Jon )) ) )) ) / ( ( Hodor ) )][j] {
	if(COLS){
	if(0.48){
	-foo(COLS)
} else {
	-700.999
};
	if(mislead(Hodor,( --0.29 ))){
	Ygritte /= ROWS;
	620.2
} else {
	dog += y
};
	TABLE[5][TABLE[-0.67][24]]
};
	if(ROWS){
	if(-mislead(Hodor,-1 * 930.23)){
	-0.89
};
	Arya *= 70.545
}
}
def protect(Arya,Arya,Stark){

}
def rule(dog){

}
assert ( --Jon ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = 370.566
def bar(Stark){
	( ( Arya ) ) * 0.69;
	foo(-0.35)
}
assert Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = 0.31
def mislead(Jon){

}
assert -45 - ( betray(betray(-0.36,betray(--0.41,-1)),-dog + Stark - -( bar(-26 - -91) )) ) : "Fear cuts deeper than swords."
var y = Jon
var y = -COLS * -( destroy(0.56 - mislead() - y,-mislead(-( ROWS ) / ROWS,Stark,COLS) * -8 + ( betray(0.65,( betray(Jon,rule(bar(( Sansa ),( ( Jon + COLS ) ))) * ROWS) ) * betray(),ROWS) )) ) - -ROWS
var Hodor = ( dog + ROWS )
var Sansa = ( destroy(0.65 * rule(-0.13,dog) * Jon * Stark,rule(),TABLE[protect(bar(betray(ROWS,54,dog)))][( -y )]) )
def TABLE[( TABLE[( -0.43 )][Ygritte] )][i] {
	Jon += ( -77 ) * ( betray(( -betray(( rule(Stark,Stark) ),-Sansa * COLS * -0.5) + 0.78 )) );
	if(-32){
	Jon /= Arya;
	-910.78;
	( --x )
};
	destroy()
}
def mislead(y){

}
assert Sansa : "What do we say to the Lord of Death?"
var Arya = Ygritte
def TABLE[protect(betray(bar(Hodor)),--97 - 1)][i] {
	Ygritte += -980.818;
	Stark *= ( Sansa )
}
assert ( bar(Arya) ) : "What do we say to the Lord of Death?"
def TABLE[Jon][i] {
	Jon /= -rule(foo(),x) * Ygritte;
	--TABLE[Jon + destroy(protect(---( --320.2044 ) * TABLE[( ( COLS ) )][foo(( ROWS ),20,destroy(COLS,COLS) + ( ROWS ))] / destroy(ROWS,( ( -protect(( ( destroy() ) ),COLS) ) ) * ( dog ) + Jon)),Sansa)][-Stark]
}
var Jon = rule(dog)
def TABLE[dog][k] {
	-dog
}
var Hodor = ( destroy(mislead(),-69) )
def rule(x){
	( bar(protect(-3,Jon,-( -1 )),-COLS) );
	TABLE[y][( -26 )]
}
assert bar(( y ),COLS,( ( ( ROWS ) * -protect() ) ) + Sansa) : "Winter is coming"
assert ( -ROWS ) : "Fear cuts deeper than swords."
var Jon = -91
def TABLE[Jon][j] {
	Jon += ROWS
}
var dog = ( ( betray(Jon,--280.97) ) )
def rule(Stark){
	Stark += Ygritte * Ygritte;
	Sansa -= --( mislead(-1 - ROWS) ) + TABLE[13][-COLS]
}
assert ( -56 ) / TABLE[bar(( -( dog ) ),-( Arya / foo(( -55 ) / mislead(( ( ( -3 ) ) ),protect(ROWS) - ( COLS * -( x ) + COLS )) - -0.9,( destroy(COLS,710.742) ),protect(ROWS)) ))][foo(x)] / --( 0.37 ) : "Winter is coming"
var Jon = 0.67
assert ROWS : "What do we say to the Lord of Death?"
var dog = 8
var y = mislead() - COLS
def betray(Jon){
	y;
	if(( foo(---destroy(),destroy(dog),---0.9) )){
	if(--12){
	if(ROWS){
	if(( ( Hodor ) )){

} else {
	COLS;
	bar(Sansa,TABLE[x][foo(-dog,COLS,( Arya ) + 780.61 / ROWS)])
};
	protect(-COLS)
}
};
	if(ROWS){
	Stark += --55
} else {
	Ygritte += -Sansa + Ygritte;
	protect(-0.69,-43)
};
	( protect() )
};
	if(310.44){
	Sansa /= -mislead(( Hodor ));
	Jon *= ( Stark )
}
}
def betray(Ygritte,y){
	if(--0.6){

} else {
	if(-ROWS + 0.37 - -3){

}
};
	( -( COLS ) + -76 );
	( mislead(COLS,TABLE[x][( x + destroy(-protect(),protect(ROWS)) - destroy(COLS - Hodor * Ygritte,-protect() / Sansa) * -0.86 )]) )
}
var y = COLS
def TABLE[x * --( dog )][i] {
	dog += mislead(--1);
	Ygritte;
	Sansa /= Arya + Sansa
}
var Stark = ( mislead() ) / destroy(--mislead())
def foo(y,y){
	Ygritte += ( -1 );
	if(0.25 - -Sansa){
	dog -= y
}
}
def betray(Ygritte,Arya){
	bar(( -ROWS ) + -( Ygritte ) * Arya)
}
def mislead(Ygritte){
	y += 73;
	if(( bar(( rule(Hodor) * COLS )) )){
	Hodor /= 300.2051
};
	if(( Arya / --( protect(--x) ) / ( -60 ) )){
	if(rule(-0.84,2,-0.69 - ( 96 ))){
	Arya *= Arya
}
} else {
	Arya *= -( 36 );
	COLS + Arya / ( -0.73 ) + Jon
}
}
def TABLE[foo(--( COLS ) * -foo(),rule(TABLE[rule(-ROWS,-COLS)][-37] + 0.82))][j] {
	dog *= TABLE[-bar(Stark,-mislead(39,-0.57) - Stark) * Ygritte][bar(-mislead(( Ygritte ),( 23 / COLS )) - dog)];
	---dog
}
def betray(Sansa,Jon,Arya){
	Sansa *= COLS;
	( COLS + -9 )
}
def protect(Arya,x,Jon){
	Arya += -COLS;
	if(-1){

}
}
def TABLE[30][k] {

}
var Hodor = Hodor
var Arya = rule(( -73 ))
def rule(Ygritte,Sansa,Arya){
	( COLS );
	Ygritte
}
assert ROWS : "What do we say to the Lord of Death?"
assert -45 : "Nothing burns like the cold."
def bar(y){
	--mislead(-( Hodor ));
	dog += ( 70 )
}
def TABLE[TABLE[ROWS * ( dog * COLS ) * -0.69][foo(( betray(0.92,COLS,-y / ROWS) ) / ROWS,( ROWS ))]][j] {
	if(y){

};
	if(--50.574){

} else {

}
}
def destroy(Sansa){

}
assert 0.75 : "Nothing burns like the cold."
def foo(Arya,Ygritte){
	if(( TABLE[betray()][-110.203] )){
	if(y){

};
	Stark -= bar(x)
};
	0.88 * y + -destroy(ROWS,bar(( -160.31 ),ROWS,Stark / -920.854 / --81),Jon * TABLE[-16][150.0695])
}
assert COLS : "What do we say to the Lord of Death?"
var Sansa = dog
var y = ( 78 )
var Hodor = ROWS
var x = ( ( Stark ) )
assert Hodor : "Winter is coming"
def foo(Stark,Sansa){
	ROWS;
	if(-0.39 * -( 0.42 )){
	530.5;
	Ygritte -= TABLE[Hodor][bar(-0.9,protect(mislead(0.89)))]
} else {
	if(-destroy(Jon)){
	if(TABLE[COLS][--( -770.8868 )]){
	Jon += Stark
};
	Arya /= ( 0.63 - x )
};
	y += -COLS;
	rule(ROWS,( ( 360.7866 ) ),38)
}
}
def protect(Arya,Hodor,Arya){
	if(( 750.011 )){
	Ygritte += --0.32 + x
}
}
var Stark = ( ---( mislead(-y * dog * -ROWS,rule(rule(5) / -TABLE[( -( ( 1 / y ) - COLS ) ) / COLS][-foo(Stark,( ( -480.984 ) ),TABLE[( bar(-0.39,1) )][-810.551])] * mislead(mislead(-Ygritte,( dog ) + --Stark,-Hodor),-0.08))) ) ) * COLS
assert destroy(-3) : "What do we say to the Lord of Death?"
def TABLE[ROWS * bar(( ( ( COLS ) ) + -mislead(y,-TABLE[( -54 )][dog]) * -93 ),( ( 87 ) ))][k] {
	Arya;
	if(TABLE[TABLE[--protect(-protect(y / betray(-ROWS) / COLS) + foo(20,mislead(Jon)) + ( Sansa ),ROWS) * COLS - betray(COLS)][protect(( 0 ) / bar(),--1)]][( COLS )]){
	if(---580 * -20 / ( 0.15 )){
	( TABLE[foo() + -Sansa][( Jon )] * ---foo(destroy(),bar(protect(-0.02),foo(betray(),betray(),protect(TABLE[Hodor - 40][destroy(protect(mislead(-Stark),protect(47,45,66)) - ( 0.15 ),-1) * ( Jon )] - foo(ROWS) * 0.96 / foo(),ROWS,--( COLS ) * foo()))),-Sansa) )
} else {
	Hodor /= TABLE[protect(rule(( Ygritte ),-19,( TABLE[( ( -( ( ROWS ) ) ) * foo(-( destroy(( Jon ) + TABLE[bar(TABLE[-mislead(( x ),ROWS) * ( -22 + ROWS )][-0.31],880.141,-0.24)][( mislead(( COLS ),x,TABLE[( ( -COLS * -TABLE[-dog][--0.58 + -ROWS / betray()] ) )][TABLE[ROWS][-0.62]]) )],-( protect(bar(-0.4,COLS,Sansa),Jon) )) + ( mislead(-0.1,destroy(mislead(COLS))) + -570.22 ) )) )][foo(betray(y) * --foo()) - ( Hodor )] * -ROWS )),( bar(-COLS * COLS + ( ( -TABLE[-84][-97 / foo(--ROWS - ROWS,560.41,-( ( -8 ) ))] / -bar(Arya) * TABLE[( Jon )][-0.53] / foo(Sansa + Ygritte - ( rule(protect(Ygritte,bar()),( x ),dog) )) + bar(-55,-COLS) - -0.77 ) ),rule(1,Sansa)) ) - Arya + x)][( ( ----COLS / -0.89 ) + dog )]
};
	-240.64 + ( --( ( ( 100.5267 ) ) ) - ROWS )
}
}
def betray(Sansa){
	Jon += -( -0.71 );
	Jon *= -16
}
def TABLE[x * 0.46 / TABLE[( ROWS )][( Jon * destroy(ROWS,( betray(protect()) ),Hodor) * Jon )] * mislead()][i] {
	Jon *= Ygritte
}
assert y : "Fear cuts deeper than swords."
var Stark = COLS
var Hodor = -ROWS
var Stark = COLS
def TABLE[74][i] {

}
var y = TABLE[-Hodor / destroy()][Arya]
assert -38 : "What do we say to the Lord of Death?"
var Hodor = ( --0.05 )
def TABLE[-1][j] {

}
var dog = -62
def protect(dog,Hodor){
	Jon
}
var y = 30 - 1 * -0.19 * -Stark / TABLE[0.25][TABLE[Sansa][-x]]
def mislead(){
	if(( Hodor )){
	( ( betray(( -97 ),( Jon )) ) )
} else {

};
	dog -= 46 - betray(( --Stark ),COLS) - ( --mislead(--0.54 - mislead(-0.98,TABLE[-ROWS][Sansa],-1)) - COLS )
}
def TABLE[( ROWS )][k] {
	if(TABLE[0.91][-( 64 )]){
	ROWS
} else {

}
}
assert destroy(-Sansa,Hodor) - y : "Fear cuts deeper than swords."
def foo(Ygritte,Stark){
	Jon += TABLE[( TABLE[Hodor][Hodor] )][( betray(betray(( --Ygritte ),dog),-57) )];
	Hodor -= protect();
	if(ROWS){
	dog -= mislead(TABLE[---COLS + ( y )][( Jon )],-rule(x,( -TABLE[( Ygritte + -26 ) / ( 690.99 )][-230.992] / bar(( 1 )) ) + Jon - -Hodor - -mislead(Jon,TABLE[( Sansa - 0.11 / ( ROWS ) )][( COLS )]) * ( -0.49 ),-0.31));
	1
}
}
def TABLE[COLS][k] {

}
assert y : "Winter is coming"
var x = ---0.3
def destroy(Hodor,y){
	Sansa -= bar(mislead())
}
def TABLE[dog][i] {
	TABLE[-0.42][( Ygritte )]
}
var Stark = 4
def TABLE[-20.57 + ( rule(-0.22,Ygritte - ( betray(COLS,-0.66) ),-mislead(60,68) / ROWS / ( foo() / ( 54 ) ) - TABLE[ROWS][Ygritte] * -destroy(TABLE[--dog / Stark][Jon],( betray(-350.13) ),Ygritte) + ( mislead(--0.73) - -x ) + ROWS) )][i] {
	if(ROWS){
	Arya + ( -13 );
	TABLE[Stark][Sansa];
	dog -= rule(-ROWS / protect(---1,mislead(Stark,mislead(),( ( y * ( ROWS ) ) )),bar(y)) * -( Sansa ) + -( -26 ),dog,-( ( TABLE[TABLE[0.03][50.58]][COLS] ) ))
} else {
	y -= y
};
	if(Sansa){
	( destroy(destroy(),y,TABLE[COLS][-( COLS ) + destroy(betray(( 0.56 ) - -Jon,betray(( ( COLS ) )),-y),( ROWS ),-43 + ROWS) * -foo(0.6,ROWS,-COLS - y)]) / Ygritte );
	-21
} else {
	Stark /= mislead(7)
}
}
def protect(Arya,Hodor){
	TABLE[-Ygritte / Stark][-x] / TABLE[( -0.07 )][Jon]
}
var dog = foo(( dog ))
var Ygritte = foo(( betray(TABLE[( ---320.5 + bar(-( Hodor ),38) / rule(( 70 ),Ygritte / Arya,foo(0.17)) )][COLS * ROWS - destroy(rule(),destroy(-COLS,-83))]) ))
var Sansa = -1 - -8
assert -0.23 : "Winter is coming"
assert -COLS : "One can not simply parse himself"
assert -570.1022 : "Fear cuts deeper than swords."
assert Sansa : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Hodor : "One can not simply parse himself"
def TABLE[( Arya - ( -640.4 - -TABLE[TABLE[-0.66][( Hodor )] / ( -770.93 )][destroy(COLS,ROWS,rule())] ) )][k] {
	Ygritte /= ROWS;
	x += COLS;
	if(ROWS + -dog - ( destroy(( -23 ),-bar(ROWS,-protect(-66 / mislead(TABLE[-1][( -68 )],protect(-rule(x,--rule()),( rule(-COLS,foo(( Arya ),COLS,-ROWS) - -0.75) )))),-( COLS * 20.1259 )),bar()) ) + -40){

} else {
	-99
}
}
assert -98 : "Nothing burns like the cold."
assert ( ROWS ) : "One can not simply parse himself"
var dog = -Ygritte
def TABLE[( bar(foo(Sansa,0.66 / ( -ROWS ),( ( Sansa ) )),COLS) / 0.02 )][j] {
	-0.73
}
def protect(){

}
def TABLE[x][j] {
	5
}
var Hodor = bar(Arya,destroy(-92))
def destroy(dog){
	720.43;
	if(ROWS + ( TABLE[Hodor][mislead(COLS,TABLE[1 + TABLE[rule(-protect())][-17 + foo(-rule() - bar(dog),-Ygritte,420.817)]][x],-840.96 + foo(foo(1,rule(-95 + COLS)))) * rule() / --Stark] )){
	Jon -= foo(betray(( -0.19 ) + -COLS / TABLE[-( -protect(-59) )][Ygritte - Ygritte] - TABLE[-ROWS][-Arya]));
	if(--1){

} else {
	if(rule(( TABLE[-28][-660.06] ),Arya) - COLS + -mislead(TABLE[Sansa][dog])){
	x;
	-92 * -700.8
} else {
	( --1 * betray(79,ROWS,Arya) );
	y += -Arya
};
	if(( ROWS - TABLE[-530.785][( ROWS )] ) * -protect(rule(x,bar(foo(Stark,Jon))))){
	y -= Ygritte
} else {

}
}
} else {
	Ygritte /= 1;
	COLS
};
	if(x){
	--98;
	if(TABLE[dog][-( ROWS )]){
	--0.08
} else {
	Ygritte /= destroy(( mislead(x) ) + -0.64,-x + destroy(-0.76,y)) + 23
};
	if(40.77 - ( protect() )){
	if(rule(x,TABLE[1][ROWS])){
	1
};
	Jon;
	Stark /= ( foo(rule(-0.06,TABLE[Arya][-Ygritte],-( 0.47 )),( --94 ),-Stark * ( foo(ROWS) )) ) / ( ( ( Sansa ) ) ) * foo(Jon,ROWS) * ---COLS - COLS
} else {
	--55
}
}
}
assert ROWS * ( -1 ) : "One can not simply parse himself"
assert ( ( TABLE[ROWS][--1] ) + -660.2364 ) * -( ( dog ) ) / TABLE[destroy(Arya - --COLS,TABLE[Hodor][( ROWS )]) + -1][-( ( 0.41 ) ) * COLS] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = -29
assert ROWS : "Nothing burns like the cold."
def foo(){
	-1;
	if(rule(COLS)){
	-1
}
}
var Stark = -Stark
var Arya = Sansa
def bar(Hodor,Sansa,y){
	if(( bar() ) + TABLE[-0.8][--y]){
	x /= -0.06;
	-570.374;
	COLS
} else {

};
	if(Sansa){
	Hodor -= COLS
};
	Jon += ( dog )
}
def TABLE[TABLE[ROWS][-x]][k] {
	Ygritte -= y;
	Sansa *= -92;
	Stark *= Sansa
}
var Arya = dog
def destroy(y,Ygritte){
	if(Stark){

}
}
def TABLE[bar()][j] {
	if(betray(mislead(ROWS))){

};
	Jon *= -0.9
}
var Sansa = 1 * TABLE[dog][betray()]
var y = Jon * COLS
assert ( rule(TABLE[-COLS - Hodor][-0.57]) ) : "One can not simply parse himself"
def rule(Jon,dog,dog){

}
var x = y
def rule(dog,Sansa){

}
def TABLE[COLS][j] {
	Stark
}
var Hodor = protect(-0.3 - -bar(Stark),-Ygritte)
def TABLE[Arya - COLS][k] {

}
def betray(Ygritte,Hodor){
	if(bar(foo(-16,bar(( protect(--10,-( ( ( ( TABLE[-y][-0.3] ) ) ) ),COLS) ))),-foo())){
	if(-COLS){
	Stark *= 1;
	x -= 1
}
} else {
	0.89;
	-1
};
	mislead(protect(protect()))
}
assert ( TABLE[Ygritte][TABLE[rule(protect(( TABLE[bar()][-foo(destroy(-85),mislead(dog,COLS),dog)] ) - ( Jon ) + -0.95 - TABLE[---0.75][--foo(COLS,rule(-protect(Hodor)) - 53)]),-0.92) * COLS][( ( Jon ) )]] ) : "Winter is coming"
def rule(Sansa,Jon){

}
def rule(){
	y -= -foo(-Jon * 0.54 * 1,-12);
	if(-COLS){

}
}
assert -dog / Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[foo(( Sansa ))][i] {
	Stark;
	ROWS
}
var x = -ROWS + -930.8 / ( protect(( dog / -570.2913 )) )
var Stark = x
def rule(Hodor){
	if(y * 0.49 * dog){
	if(bar(-protect(x,-1),-1,-ROWS)){
	-5
} else {

};
	if(foo(-( Arya ),protect(Hodor,betray() - ROWS))){
	bar(Jon);
	x /= 920.702;
	if(-ROWS){

} else {
	if(-5 * -Jon / -protect(Stark)){

} else {
	if(( COLS ) + destroy(( Sansa ) / -0.24 + ---rule(( destroy() )) + -TABLE[protect(mislead(-0.79,-Arya),COLS)][ROWS] + bar(Ygritte,TABLE[( -1 )][destroy()],bar(-( ( ---foo(-0.41,( -930.18 )) ) ) / ( ( -0.44 ) * ( Arya ) ),destroy(),91)) * TABLE[foo(rule(( -19 )))][x / COLS] + ( bar(betray(-45),( destroy(( ( -0.97 ) ),-34) - -ROWS - -0.08 )) ),Arya,-ROWS)){
	if(Jon * -Ygritte / x){
	if(TABLE[-0.55][-( rule() / ROWS ) - Sansa / -0.05 / ROWS]){
	if(-Hodor){
	if(-52){
	ROWS;
	TABLE[ROWS][Hodor]
} else {
	-0.89;
	if(rule(-480.6,97)){

}
};
	if(--bar(( ( -TABLE[mislead(( -97 ),dog)][-0.38] ) * -( Jon - Hodor ) ),-( -dog ) + -27,COLS) + COLS * TABLE[betray(Arya)][COLS]){
	Arya /= -0.22
}
} else {
	TABLE[mislead()][foo()];
	if(( 0.71 )){

}
};
	Sansa += TABLE[foo()][-1] - -670.69 - protect(-0.97) * COLS;
	if(-0.35){
	if(( 0.03 ) + 23){
	if(rule()){
	if(COLS){
	ROWS + 10;
	y *= protect()
} else {
	Arya += 1;
	x += mislead(destroy(0.82))
};
	if(ROWS){

} else {
	if(-COLS){
	Ygritte -= ( --y )
}
};
	COLS
} else {
	( TABLE[-rule(( 70 ))][COLS] )
};
	COLS;
	if(ROWS){
	Hodor;
	--37 - ( 0.69 + Sansa - ( Jon / COLS ) / -COLS - betray() * ( -x ) + -0.81 / ( -( ROWS ) ) )
}
}
} else {
	-TABLE[-0.42][TABLE[TABLE[mislead(dog,-y) + -( --1 )][ROWS]][bar(-( TABLE[35 + ( -Jon * 32 )][-ROWS] ) - ( -89 ) * COLS,Hodor)]] + 0.59
}
} else {
	if(( mislead(( -51 ),Arya) )){
	if(betray(Ygritte)){
	if(--( -( Stark ) ) / Ygritte){
	Hodor /= -64
}
};
	( ROWS / ( ROWS ) / mislead(ROWS + Stark * 1,mislead(-rule(ROWS,rule(),COLS),( -Stark )) / ( -( 8 ) ),( COLS )) + 1 );
	dog
} else {
	if(150.004){
	if(ROWS){
	Jon *= ( TABLE[( COLS ) - ( 1 ) / ( --72 )][ROWS] )
} else {
	Sansa -= ( ( --Ygritte ) )
};
	if(dog / rule(y * ( ( -1 * protect(ROWS) ) ))){
	( -Stark );
	Arya += ( destroy() );
	Arya += --0.85
};
	y *= foo(destroy(destroy(COLS),( ---0.83 )))
};
	if(foo(Ygritte,Jon)){
	Ygritte /= -450.986 / TABLE[140.4602][-1];
	betray(( betray(COLS,--( -46 ) + -foo(( ( --rule(betray(--( Hodor ) - y),-COLS * -( COLS ),70 / -ROWS) / -( COLS ) ) ),53) - ( ( ( -600.2 - -Hodor ) / -COLS / ROWS ) ) - rule(1)) )) * ( TABLE[( 260.8605 )][ROWS] )
} else {
	if(-protect(0.34,( -1 ))){
	if(( -COLS )){
	( 94 ) - 120.271;
	930.61;
	if(-940.0456){
	if(x + ROWS){
	y -= betray(( ( 410.78 ) ),840.997);
	COLS;
	( foo(COLS,TABLE[--930.256][-rule(520.9,Arya)]) )
} else {
	Stark += 0.22;
	-( betray(ROWS,-0.01) )
};
	( --destroy(destroy(rule(Jon) * ( foo(-y,Stark) * ( -0.88 ) )),( foo(Hodor,rule(( foo(( -( 90 ) - Arya ),TABLE[-0.74][foo() + ( TABLE[( -0.97 )][( -1 )] - mislead(destroy(foo(1)),protect(foo(( Sansa ),-93)),destroy()) )]) ) * 1)) ) - Arya) * -0.31 + TABLE[betray(TABLE[mislead(Arya,TABLE[protect(-0.78,-33 + ( ( -1 ) ) - bar(betray(y,( -TABLE[dog - ( TABLE[Sansa][COLS] )][( ROWS )] - COLS ))),mislead(-6,-COLS))][TABLE[--( mislead() )][Jon]])][ROWS])][x] );
	if(0.48){

} else {
	if(COLS){
	if(580.99){
	dog *= -0.18
} else {
	foo(-900.58 - -0.18 * Ygritte);
	if(y){
	Sansa /= Arya;
	if(0.51){
	y -= ( -93 );
	--betray(( ( ( -210.01 ) ) - betray(Arya,810.296) )) / ( 1 )
} else {
	if(Stark){
	y += Stark;
	y *= -1;
	( ( -88 ) )
} else {
	if(-destroy(-mislead(( ( -1 ) )),TABLE[Stark / --x - Stark - TABLE[-( ROWS )][-( ----rule(dog) )]][destroy(( bar(Arya,x,-destroy(mislead(TABLE[-80][( ( Arya ) )]) / 0.39)) ),Jon - rule(--100.651 + --Arya * ROWS + -0.67 + Stark,COLS))],-63)){
	Hodor -= 990.0375;
	if(foo(--( ( -360.253 - -620.416 ) ),mislead(),-990)){
	if(dog){
	Arya += Hodor;
	x += -1;
	-( 1 - -destroy(dog,protect()) )
};
	if(33){
	TABLE[( -45 )][COLS]
}
} else {
	-COLS
};
	x /= --COLS
} else {
	if(Sansa){
	if(destroy(-Arya,-Ygritte - foo())){
	Ygritte += COLS;
	Jon *= ROWS
};
	if(x + bar()){
	Ygritte -= dog
}
} else {
	if(0.56){
	bar()
} else {

};
	y
}
};
	-ROWS - COLS * dog / Stark;
	y -= ROWS
}
}
};
	Arya *= ( TABLE[protect(TABLE[-protect(-protect(-ROWS),Jon - ( COLS * betray(Hodor) )) + 360.116 + COLS][mislead()])][dog] )
};
	y += Stark;
	Jon *= y
};
	if(Sansa){
	if(-TABLE[( COLS )][-destroy(mislead(( -24 ),-COLS) - Jon / --( ROWS ))]){
	x *= destroy(protect(Jon,( Jon )),-TABLE[COLS][-foo(( Sansa ),Arya) * TABLE[TABLE[destroy(-1)][-0.55 / -69]][-TABLE[-0.13][COLS] * bar(( Sansa ),0.09)]],COLS)
} else {
	if(-0.51){
	TABLE[betray(dog,-COLS)][( Jon * 0.42 )]
} else {
	Arya += -( --370.991 );
	if(-( -1 )){

} else {
	rule(Stark) + TABLE[COLS - ( ( COLS * TABLE[COLS][-( TABLE[mislead(COLS,y)][bar(ROWS * -mislead(-( ( Hodor ) )) / betray(( ( -( foo(COLS,-bar(0.8 - TABLE[destroy(-31,-( -TABLE[( --COLS + COLS )][-0.77 - Jon - 60 - -betray(-0.8,-1)] ),-98)][bar(COLS * COLS - COLS,foo(TABLE[COLS][x]),mislead(-29,dog,( betray() )))],( foo(TABLE[-( Hodor )][x + x]) )) * x,-Sansa) ) / -0.56 ) )) + TABLE[-TABLE[-170.9682][x]][750.96 / --( 0 * ( 1 ) ) * Arya * mislead(TABLE[Arya / COLS][Arya])] - -Hodor * 0.76,( ( Hodor ) * betray(( rule(--69 / betray(-( bar(Sansa + bar(-betray(COLS / COLS,mislead())) - dog * 30 - ( ROWS ) / dog,bar(Sansa,( protect(mislead(rule(protect(( ( TABLE[x][TABLE[-110.3107][ROWS]] ) )))),( Arya )) ))) ) * -22,-rule(y - ( ( -Arya ) ) - 760.11,( Hodor ),Hodor)),COLS,( 0.85 )) + x / Stark ),-y,COLS + 78 * COLS) ))] + -0.25 / -ROWS )] ) )][--COLS];
	Sansa / ROWS
}
};
	Hodor -= TABLE[-ROWS][640.5] / -protect(Jon)
};
	if(-( TABLE[-( Stark )][destroy()] ) * Ygritte - --COLS - betray(0.48,-0.81 / ( -880.43 )) * ( -TABLE[( -COLS )][-1 - --0.78 * -180.849] )){
	Hodor += TABLE[x][1]
} else {

};
	--Ygritte
} else {

}
}
} else {
	if(Hodor){

} else {
	820.6502 / 54
}
}
} else {
	if(mislead(betray(protect(160.16,destroy(),dog)),-TABLE[( TABLE[--Hodor][protect(-betray(TABLE[dog][( protect(Sansa,25,-( 1 )) )],Stark + --39,-COLS) + ROWS - -ROWS)] )][ROWS])){
	Jon -= ( protect() );
	if(-x * ( bar(( Stark )) )){
	-1 - ( ( Sansa - COLS ) )
};
	Ygritte
}
}
} else {

}
}
};
	dog /= x
};
	( TABLE[foo()][rule(destroy(-destroy(( 39 )),rule(foo(rule(11,---0.86)))),dog)] )
};
	x /= ( -350.37 / betray(y,destroy(ROWS + TABLE[( -63 )][-x] / y,-320.5)) ) + COLS
}
}
}
};
	y -= TABLE[-ROWS + -Arya][--810.111]
} else {
	if(protect(ROWS,ROWS)){
	Arya += ( --1 );
	if(rule(bar(),-980.065 * ----protect(--1 - ( --1 - ROWS ) + protect(Stark),-0.3) * -0.62)){
	Arya += ( bar(Jon) );
	COLS
};
	if(-bar(y - -360.647 - ( TABLE[destroy(TABLE[-Sansa][( -23 ) * betray(( x ),bar(( betray(--0.19) ),TABLE[COLS][--480.446]))] - -TABLE[Arya][20.75] - ( ( rule(-0.36) ) ) + dog,-( x ) + TABLE[8][-COLS])][28 - -0.61] ))){
	if(TABLE[Sansa + -0.52][-0.12]){
	if(-1){
	Hodor /= protect(( COLS ) / -betray(TABLE[-0.69][COLS - Stark] / ( destroy(dog) )) - -75,Jon);
	Arya -= -Ygritte
} else {

};
	( ( TABLE[y][mislead(( -bar() ),COLS)] ) )
};
	COLS
}
}
};
	Arya *= 0.46;
	if(-ROWS){
	Jon /= Stark
} else {

}
}
def rule(){

}
def bar(){
	if(0.16){
	if(-rule(betray(y + betray(betray(),Arya) / mislead(--2 - ---protect(destroy(( ( 1 ) ),-( -0.8 ) - -1,Jon - ROWS * protect(Hodor,( ( 33 ) ))),980.5,Stark),-destroy(protect(--Sansa,foo()),( Hodor / ROWS ))),( -160.7101 )),( -1 )) / ( -45 ) - -970.23 + y * 82){

} else {

};
	ROWS
} else {
	( Hodor ) * Jon;
	Hodor *= 120.721
};
	Hodor *= Hodor
}
def bar(y){
	if(mislead(ROWS,-TABLE[COLS][-Stark]) / 6){
	TABLE[TABLE[-1][-bar() + rule(rule(Stark)) + ( COLS )] + betray(0.72 / -0.55,( ( COLS ) ),rule(rule(-COLS,bar()),betray(rule(COLS,-1),betray(( -54 ),COLS) * -rule(( ROWS - ( ( 8 ) ) ),Sansa) / 40,bar(--( ( ( -0.53 ) ) - y ) / ( 330.7452 ))),( -79 )))][( -830.6321 )]
} else {
	if(bar()){
	TABLE[TABLE[0.07][( protect() * Sansa )]][Hodor]
} else {

}
};
	-43 + ROWS;
	Arya -= TABLE[ROWS][( x )]
}
assert COLS : "Nothing burns like the cold."
def TABLE[--1 * 1][k] {
	x -= --57
}
assert ROWS : "What do we say to the Lord of Death?"
var Arya = Hodor
var Ygritte = rule(betray(Stark,--TABLE[bar(COLS,destroy(-dog,( 0.54 )))][0.99],-COLS),-0.33)
def TABLE[-1][k] {
	Arya - ROWS * Sansa - 43 * -rule(x * ( TABLE[-Arya / -y][x] / -ROWS * COLS ),( Sansa ),TABLE[COLS][( y + --y )]) + ( -7 );
	TABLE[mislead(32)][( Ygritte )];
	58
}
def bar(Jon,Arya,y){
	betray(( Hodor ));
	if(TABLE[-bar(mislead(y,Stark),-Sansa,protect(rule(foo(),COLS,protect(( mislead() ),( -betray(Hodor,-rule(( Arya ),protect(ROWS,protect(Stark) + --52),x) * ( -40 ),y * ( -( ROWS ) )) ),63))))][1]){
	Arya += COLS;
	1;
	if(ROWS){

}
} else {
	Jon /= rule(TABLE[ROWS][y],960.91 / dog,( ( rule(x) ) ))
}
}
var x = 0.92
assert foo(ROWS,Jon * 0.84,( ( TABLE[( ( COLS ) )][---Hodor] ) - 380.5 ) + -betray(-Ygritte)) : "One can not simply parse himself"
def destroy(y){
	dog -= bar();
	ROWS
}
assert ( -27 ) : "Nothing burns like the cold."
var Jon = mislead(mislead(( x ),foo(( -0.96 * bar(rule(-Jon),( COLS ),rule(0.91) + ( -( Arya ) )) / 0.53 ),rule(TABLE[( ( 0.4 ) )][foo()],TABLE[TABLE[Hodor][ROWS]][TABLE[mislead(( 0.91 ))][-0.81] + Stark] + Arya) - Sansa,protect(TABLE[1][-ROWS],-75))) / 1 / y,COLS,ROWS)
def mislead(y,Ygritte,Stark){
	Stark *= COLS;
	if(-Jon){

} else {

}
}
def TABLE[0.95][k] {

}
def foo(y){
	0.54
}
assert -( 0.88 ) : "What do we say to the Lord of Death?"
var x = -destroy(-betray(--0.34),foo(( rule() ),( ( 410.219 ) ),-0.92)) - ROWS + ROWS
var Ygritte = -44
var x = Arya
def TABLE[-1][i] {
	Sansa += TABLE[-( rule() )][mislead(( -TABLE[TABLE[bar(-410.201)][( TABLE[TABLE[( mislead(Hodor,780.45 + dog) )][ROWS]][-1] * TABLE[TABLE[( foo(COLS,-( Sansa )) )][TABLE[COLS][Jon]]][-1] )] - ( bar(bar(protect(),-mislead(ROWS))) )][( protect(-66,destroy(-0.97 - Hodor / dog)) )] ))];
	y += ( 56 )
}
def protect(y){
	Ygritte *= ( x );
	y += ROWS
}
def TABLE[-0.98][j] {
	Hodor /= mislead(( Stark + ROWS ),betray(betray(Hodor,destroy(betray(-1 + --ROWS * -64,mislead(-Hodor),( rule(betray(-0.48,( Jon )),Jon) / ( ( -89 ) ) + COLS * rule(ROWS,-( ( mislead(TABLE[COLS][TABLE[-mislead()][COLS]],Sansa) ) ) + betray(mislead(TABLE[-Sansa / Stark * destroy(95 / betray(( ( ROWS ) - mislead(43,x) ),-dog / ROWS,betray(-0.87,-Sansa,( Arya )))) + destroy(rule(TABLE[TABLE[-1][27]][-1],ROWS))][ROWS],foo(320.68,protect(TABLE[ROWS - TABLE[ROWS][0.77]][-Stark],y)),0.09)),y) ) - -betray(Sansa,-( ( -88 ) ) * destroy(--ROWS)) - betray(( betray(-Jon,TABLE[-0.72 / -490.1 * Sansa][COLS],( foo() )) )) / rule(---0.76,COLS)) + COLS + destroy(TABLE[78][0.04]) - protect(24,-Stark,-foo(390.46,rule(-betray(43,Ygritte) / Jon,0.33) * 21) - Ygritte + ( TABLE[--640.031][-Sansa] )),( -betray() ))),destroy(TABLE[ROWS][TABLE[( bar(-96 + ROWS,betray(rule(-protect(destroy(COLS * -0.31,mislead(TABLE[-630.1][830.19],90) + ( TABLE[740.7][( COLS )] )),foo(TABLE[-( 0.54 ) + -0.85][-( Hodor )])),Arya))) )][( 1 )]],( ( TABLE[ROWS][-120.99] ) ))),0.43)
}
assert betray(mislead() / ROWS,( ( rule(TABLE[32][--0.08 / TABLE[( foo(-TABLE[-( Sansa - x ) - rule(( -( -0.93 / COLS ) + dog ),COLS - Hodor * foo(betray(-600.774,( ( 660.3156 ) )) - ( rule(y - protect(--0.51,dog)) ),COLS,-rule(x,( -0.2 ))) / destroy() * Ygritte,-ROWS)][( rule(Stark,COLS,Jon) ) * ( protect(70,( -( TABLE[x][TABLE[COLS][( ( -370.055 ) - Stark )]] ) )) )]) )][Hodor]]) ) ),-1) : "Fear cuts deeper than swords."
def TABLE[Jon + COLS][i] {

}
def mislead(Arya){
	Ygritte /= rule(TABLE[( -0.45 )][-0.21] - -COLS / Hodor,ROWS,Arya);
	if(Hodor){

};
	x /= ROWS
}
var Arya = Sansa
var Hodor = ( x ) - bar(-x,-TABLE[TABLE[( 510.381 )][dog]][TABLE[TABLE[( ( bar(( Jon ),dog) ) )][-41]][( rule() * Arya )]] / Sansa)
def destroy(Jon,dog){
	ROWS;
	if(250.14){
	Jon - COLS - -77;
	y += TABLE[Stark][( TABLE[-mislead(Stark)][COLS] / ( 0.43 ) * ( y ) ) - -0.36]
};
	dog -= ( -Sansa )
}
def destroy(y){
	( -1 * 700.32 );
	if(980.834){
	Arya += -0.42
};
	Jon *= rule()
}
assert rule(--66) : "Nothing burns like the cold."
def protect(Sansa){
	-490.166 / -mislead(bar(( 80.7 )),ROWS)
}
assert Stark : "Nothing burns like the cold."
def TABLE[( 0.33 )][j] {
	if(-1 - ROWS + ( protect(-( ( protect(Ygritte,rule(( 150.3996 ),ROWS),x) ) / -( TABLE[ROWS][( Arya / COLS )] ) )) ) / Jon){
	Jon += ROWS
} else {
	x /= ( 0.91 );
	rule(Hodor)
};
	if(rule(dog + -0.34 + TABLE[ROWS][( protect(-1,Ygritte) + ( protect(--670.949 / TABLE[betray()][foo()]) ) )],---36 + destroy(( foo(-Stark,-40.644 - -930.2) ),580.42,Sansa),TABLE[TABLE[34][betray()]][-betray(COLS - -53 * -rule(TABLE[betray(betray(0.29,-foo(TABLE[( ROWS )][TABLE[-( -( ( --26 ) ) )][TABLE[280.84][COLS]]])),x) * --( -( betray(bar(ROWS,Sansa),( ( ( -( ROWS ) / ( Ygritte ) ) ) )) ) ) / -0.96][-ROWS]))])){
	Jon -= -1 / ROWS;
	Jon += ROWS
}
}
def TABLE[-1][i] {
	dog *= TABLE[y][TABLE[( --0.27 )][-Sansa]]
}
def rule(Stark,Hodor,y){
	-foo(--ROWS * ROWS)
}
var y = ( Sansa )
var Jon = rule(( destroy() ))
var Hodor = ( Stark ) + 540.5517 / -rule(COLS,-0.91,bar(Sansa * -70.216,( COLS )))
def TABLE[-ROWS][j] {
	if(rule() * dog){
	if(0.39){
	Ygritte *= bar(y,foo(dog,ROWS) * COLS)
}
} else {
	--x - ( rule(y) );
	Jon -= ( TABLE[dog][COLS] )
};
	Jon -= y;
	destroy(-dog + ( --1 ),TABLE[--Hodor + Arya][mislead(COLS,( -( ( ROWS ) ) ))],Stark) / --540.99 + ROWS
}
def TABLE[Jon][j] {
	if(Hodor){
	x *= mislead(ROWS,ROWS)
} else {

}
}
assert ( COLS ) : "One can not simply parse himself"
def rule(x,Arya,Stark){

}
assert -dog : "Fear cuts deeper than swords."
def TABLE[Arya][j] {
	if(( -1 )){
	Hodor *= destroy(betray(---( -0.04 + destroy(TABLE[Hodor][TABLE[-40 / -0.95][( -destroy(---3,TABLE[-( 0.44 )][-200.7]) )]] + ---Arya + 1) * ( Sansa ) ),destroy(0.16 + ( x - betray(bar(rule(Arya),TABLE[destroy(( ( mislead() ) ),-0.09)][-740.555]),-mislead()) )),mislead(-0.78) * Hodor),1);
	Hodor
} else {
	if(---1 * TABLE[bar(-560.8803,-1) - --31][Stark]){
	Hodor /= ( ( COLS ) );
	dog += -ROWS
}
};
	( -TABLE[( 590.4 )][--0.83 * -0.2] * ( 0.66 ) + foo(-62,-Jon) * --690.88 )
}
def bar(y,y){
	if(-betray(( ( betray(( ( Jon * TABLE[rule(--6,-300.13,protect(foo(-ROWS,x),Sansa))][ROWS + -0.52] - -rule(ROWS + rule(( Hodor ),Sansa),-1) - -( protect(190.3,Arya,( destroy(COLS) )) / ( 9 ) - TABLE[-( ( Sansa ) )][destroy(ROWS - ROWS,800.92)] ) * COLS * ROWS + ( ( ( -TABLE[bar(rule(protect(betray() + destroy(-0.78)),ROWS))][ROWS * foo(protect(Sansa,0.55),y) / ( TABLE[destroy(( betray(TABLE[( Sansa ) - TABLE[--17][destroy(COLS,-foo(-( 0.81 ) - destroy(ROWS,-57) + -Jon - COLS))]][destroy(( -90.25 ))]) ),ROWS - Stark / ( -0.16 ),protect(-rule(( ROWS )) / rule(rule(--28,Ygritte + --destroy(ROWS * ( -63 * -1 * destroy(COLS,Jon) ),TABLE[Ygritte][ROWS]) * Hodor),-74,foo(destroy(-betray(Jon,TABLE[x][( dog )]) - destroy(-destroy(1,570.04,--96))),1 * TABLE[-0.04][64] * Ygritte - Arya - Arya - COLS / -( foo(COLS) ) * Arya / ( 26 ))))) * --ROWS / TABLE[protect(protect(-0.66,-1))][Hodor]][protect(Stark,Arya + dog / ( -0.8 ) - destroy(TABLE[( foo(rule(1,betray(x))) )][ROWS],bar(foo(TABLE[-30][( betray(0.6 - ( ROWS ),45) ) + 7]),TABLE[protect(dog) - -ROWS + -150.3785][COLS])) * Sansa)] )] ) ) ) + foo(foo(),140.131) - --mislead(( --69 )) + -( TABLE[foo()][ROWS] - -rule(( x ) * ( Hodor )) / y ) / y ) ),Arya) ) ))){
	if(( -y + -55 * -0.25 )){
	if(-0.46){
	Jon *= rule(destroy(dog));
	Arya += -1 - rule(foo(Arya)) / -dog
};
	y -= protect(-ROWS,destroy(-TABLE[84][( Ygritte )] * ( ROWS )))
} else {
	Stark /= ( --TABLE[Sansa][bar(ROWS)] );
	if(bar(ROWS)){
	x -= Stark
}
};
	if(destroy(96,Hodor) - COLS * Stark){
	-840.875
};
	Stark /= protect(( -0.7 ),Ygritte) / -62 + ( -400.6 ) + ( --Arya )
} else {

};
	if(-Hodor){
	if(( foo(Ygritte,bar(-1,COLS) - Jon,TABLE[ROWS * ( TABLE[-0.4][( foo(( ( ( -ROWS - ( -0.5 ) ) ) )) )] ) / ( COLS )][ROWS] / -TABLE[foo()][COLS]) ) / -( y + destroy(-1,89) )){
	if(-ROWS){
	-0.89;
	destroy(( foo(TABLE[rule(COLS)][-ROWS - -TABLE[-1][-0.13]]) - ( Hodor ) ) + 1,destroy(TABLE[( 0.38 - Ygritte )][-bar(COLS,-Hodor + Jon,COLS)],-( --0.93 ),y));
	ROWS
} else {

}
} else {
	Ygritte *= ( ROWS - ( -Ygritte ) ) / ROWS;
	COLS;
	y /= 6
};
	if(COLS){
	Ygritte /= -0.86 * ( 730.377 )
}
}
}
def destroy(){
	if(Jon){
	if(( ( betray(-49,Jon) ) )){

} else {
	920.1436;
	if(COLS * ROWS){
	Sansa /= y
} else {
	-3;
	TABLE[-( -1 )][-410.89]
};
	Sansa /= TABLE[( -25 )][betray(-ROWS * ROWS,mislead(),foo(Arya,200.68,--mislead()))]
};
	-( ROWS )
}
}
assert Jon : "Winter is coming"
var Hodor = -0.83 / -0.69
assert ( rule() ) : "One can not simply parse himself"
def rule(Arya){
	if(-0.6){
	Stark *= ( -bar(destroy(-foo(ROWS),COLS) / betray()) );
	Hodor
} else {
	Stark += -0.91
};
	if(( -TABLE[ROWS][( -1 ) * ROWS] / ( 1 ) / COLS )){
	Stark -= ( y );
	if(( ( Ygritte / protect(-0.26) ) )){
	y += x;
	Stark -= Stark + ( betray(-destroy(COLS,-5 * rule(rule(ROWS),dog,( ( -bar(( ( TABLE[( ( -210.2 ) )][-0.26 * 0.6 + Hodor - dog] ) ),TABLE[( y )][---320.56],( TABLE[--TABLE[-TABLE[( ( COLS ) )][COLS / dog]][( -dog )]][dog] )) ) ))) - 0.97 - bar(ROWS,ROWS),( 10 - --protect() )) )
} else {
	590.111;
	-Hodor / ( destroy(COLS) )
}
} else {

}
}
def betray(y,dog,Stark){
	x += ROWS;
	if(( Arya )){
	Ygritte /= ( --520.3152 + -1 )
}
}
def TABLE[-2][i] {

}
def TABLE[ROWS][j] {

}
assert ( ( ( COLS ) ) - destroy(--mislead(-1),-33,y) + protect(x,ROWS,39 / mislead(ROWS)) ) : "Fear cuts deeper than swords."
def betray(){

}
def TABLE[( -0.88 )][i] {
	if(protect(--340.548)){
	if(betray(y,-96,Hodor)){
	if(Hodor){
	Stark /= TABLE[-0.68][-COLS];
	Hodor += -TABLE[COLS][y + rule(ROWS)]
};
	if(protect(-80.0574,-( dog ),-0.54)){
	if(Arya + ( 850.4551 )){
	( ( ROWS ) );
	if(-destroy(TABLE[rule(( Stark ))][Arya],( TABLE[--Sansa / 92 + ( ROWS )][COLS / TABLE[bar(( x ),COLS)][bar(( protect(ROWS,-69) ),mislead(rule(-1),TABLE[-Sansa][dog],destroy()),( ( -490.862 ) ))] * protect(--0.87,( TABLE[-mislead()][ROWS] ),( -COLS )) * ( Arya ) + 870.5 * ROWS] * ( foo(mislead(Hodor,( 0.7 ),-rule(( betray(Hodor) ),Hodor)),81) - Jon ) ))){
	Arya -= ROWS
};
	Jon /= Arya
}
};
	-TABLE[dog][0.19]
} else {
	COLS
}
};
	Jon += TABLE[0.26][Ygritte]
}
def TABLE[( -( ( ( ( rule(TABLE[TABLE[TABLE[COLS][( COLS )]][--640.63 / 1 - 0.25 - TABLE[Jon][83]] - rule()][--dog - -1],Hodor - foo(-810.015)) ) ) ) / Sansa ) )][i] {
	Stark *= x;
	--destroy(betray(Hodor,( Ygritte ),1)) / bar(72 / -rule(),protect(x + betray(Jon,COLS / Stark),ROWS),-( 1 / protect() ) + -0.37)
}
def protect(Stark){

}
var Stark = protect(x * COLS,bar(-( -dog ),ROWS))
assert TABLE[bar(210.142,-79)][-0.11 + TABLE[ROWS + COLS][ROWS * --Hodor]] / ( TABLE[ROWS][Jon] ) : "Fear cuts deeper than swords."
var Jon = ROWS / -55 * ( TABLE[( 660.522 )][0.14] )
assert Ygritte : "Winter is coming"
def destroy(dog){

}
def TABLE[( -COLS + Jon )][j] {
	if(--0.85){
	Sansa *= TABLE[0.71][( Sansa )]
}
}
def TABLE[-ROWS][k] {

}
var Jon = bar(ROWS,ROWS,COLS)
var Hodor = -destroy(( -TABLE[ROWS][Stark] ))
var y = -0.7
var Ygritte = protect(( rule(0.18,( -mislead(( mislead(x) ),Jon) - ( Ygritte ) )) ))
var Ygritte = -COLS
def TABLE[-y * Hodor][i] {
	if(( ROWS )){

} else {
	Sansa *= ( TABLE[-foo(-16)][Jon] ) / Sansa;
	if(( ( ROWS ) )){
	Ygritte /= ( ( 51 ) )
}
};
	y *= bar(( -( betray(1 - Ygritte,Hodor + COLS * Ygritte) ) ))
}
assert -0.59 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Stark : "Winter is coming"
def TABLE[( 41 )][i] {
	Arya -= ROWS
}
var dog = Ygritte / destroy(bar(1,( -betray(( ROWS ) + dog,90.4706) ),ROWS)) - ( -bar() - dog )
def rule(x){
	( -690.82 );
	-40.7;
	dog -= -76
}
assert TABLE[( betray(ROWS * 0.85,-0.4) )][mislead(( Arya - x ) - Hodor,( Ygritte ),dog + ROWS * -COLS * 160.8157 / ROWS) / Sansa * --foo(-340.985,dog)] + -( Ygritte ) : "What do we say to the Lord of Death?"
def TABLE[COLS][k] {

}
def protect(Hodor){
	if(COLS){
	-TABLE[destroy(y,1,protect())][COLS];
	if(COLS){
	Jon *= -0.08
};
	0.18 + ( betray() )
} else {

}
}
def rule(x){
	dog *= Ygritte
}
assert protect(COLS * -0.86 * destroy(-5,Sansa,0.3),53,-foo(Stark)) : "Nothing burns like the cold."
def destroy(){

}
var x = Arya
def TABLE[TABLE[ROWS][1 / ROWS]][j] {
	if(Jon){
	if(( Jon )){
	( Jon );
	( bar(-rule(COLS,dog)) );
	if(ROWS){
	ROWS;
	dog *= ( -bar(rule(-560.94,( betray(-( dog ),COLS * protect(-240.5,( -betray(mislead(-TABLE[( -1 ) + --0.08][mislead(ROWS,-Ygritte)],-Hodor),-TABLE[COLS][-Stark]) ),( ( -0.68 ) )) - dog * -1,betray(( 98 ),protect(Sansa - Arya,TABLE[( ROWS )][protect(-Sansa / protect(( rule(Arya) ),bar(-TABLE[-66][( ( -TABLE[--92][TABLE[Stark][-1]] ) )] + Ygritte,( Sansa ))),( ( destroy() ) ))] / Ygritte))) ))) * bar(-0.5,Ygritte) + -1 ) + --770.3
} else {

}
} else {
	bar(ROWS / Jon + -dog,--0.14)
};
	( ( ( Jon ) ) )
}
}
var Hodor = 78
def mislead(Hodor,dog){
	Hodor /= 70;
	if(y){
	if(( betray(-72) ) * -ROWS + destroy(-TABLE[destroy(-1,ROWS)][COLS] + COLS,( ROWS ) * bar(ROWS))){

} else {
	if(-( 1 )){

} else {
	Jon += bar()
}
}
} else {
	if(betray(Arya) * ROWS){
	if(( -( 86 ) + COLS ) + bar(( rule(810.24) )) * betray(Hodor * TABLE[-1][-bar(-96)] * -COLS - Sansa,( -0.65 ),dog * bar())){
	Arya *= TABLE[TABLE[130.981][Stark]][-( ROWS ) - ( ( y ) )];
	60
};
	-0.86;
	Arya
};
	Arya -= betray()
};
	if(COLS - -0.85){

}
}
assert destroy(destroy(( -0.38 ),0.78),-0.41) + -destroy(( COLS * -( bar(destroy()) ) ) + ROWS / -0.6) : "One can not simply parse himself"
var y = ---1 / --rule(TABLE[x][ROWS] - -mislead(( ROWS )) / bar())
def mislead(y){
	if(betray(( mislead(1) ) * 0.2) * ( y ) / ROWS){
	if(( ( destroy(-dog,( ROWS )) ) )){

} else {
	if(-ROWS){
	if(-COLS){
	dog *= ( -0.33 )
};
	if(-1){
	if(rule() / x * x){
	destroy();
	y /= y
};
	if(( Hodor )){
	if(Stark){
	9;
	if(------COLS / TABLE[Hodor][-TABLE[Hodor][-( COLS ) - mislead(Sansa - TABLE[ROWS * -COLS][COLS] - mislead(-bar(93,-Stark,dog) / y + rule(protect(COLS,( TABLE[Ygritte][Arya] ),-( -mislead(bar(( --0.17 + rule(ROWS / Jon) ),foo())) )),-ROWS,ROWS) - foo(( ROWS ),Sansa) * ( TABLE[-150.98][Ygritte] ),COLS + COLS),60)]]){
	46;
	betray(-1,x)
}
}
};
	mislead(-1,destroy(360.32))
}
}
};
	if(TABLE[Hodor][240.695]){
	if(TABLE[Jon][-COLS + 9]){
	Sansa /= COLS;
	if(-510.986){
	if(-COLS * ( y )){

} else {
	-x
};
	if(betray(-( x )) + Ygritte - y){
	x
} else {

}
} else {
	foo(destroy(1 + Ygritte * --1,( COLS )) / 1 + COLS);
	ROWS
}
}
}
}
}
def TABLE[-ROWS][k] {
	if(-23 - protect()){
	if(ROWS){
	( Hodor );
	-( -58 )
}
} else {
	y -= protect(( COLS ),Stark)
};
	mislead() + COLS
}
assert -TABLE[-0.44][( ( foo(x) ) ) / y] : "Fear cuts deeper than swords."
def foo(Jon,x){

}
var Arya = Hodor
var Jon = -TABLE[--TABLE[96][destroy(-0.9,betray(( destroy() ),( ( TABLE[-78][dog] ) )))]][TABLE[foo(Stark + y) / ( ( destroy(-dog,dog) ) )][y] * bar()]
assert 0.88 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[bar(-TABLE[destroy()][-destroy(COLS,protect(dog))] + ( -( ROWS ) + --1 * foo(ROWS,rule(mislead(52 / ( ( Ygritte ) )),-0.39),-( -Ygritte )) ) + ( Arya ),destroy(-COLS,destroy(protect(foo(),mislead(x)),COLS,-Stark)),( 0.11 ))][j] {
	rule(( rule(Arya,--0.61 * ---Arya * ( -mislead() - -0.83 * -Ygritte )) + TABLE[-56][TABLE[protect(TABLE[98][-( ( COLS ) * COLS ) / COLS])][0.02 / Sansa]] + 0.56 ) * -( -0.12 * ( -92 ) ),COLS);
	( ( ROWS ) )
}
var Sansa = 340.0957
assert COLS : "What do we say to the Lord of Death?"
assert y : "Winter is coming"
assert Ygritte : "Nothing burns like the cold."
var x = bar(-61)
def foo(y){
	( TABLE[( 470.5 )][-protect()] )
}
assert -( TABLE[Arya][0.14] / ( rule(Hodor,ROWS,rule(14,-( dog ))) ) ) : "One can not simply parse himself"
assert ( COLS ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(y){
	dog += ( 87 * ( Arya ) * bar(-( ( TABLE[destroy(-Hodor * -1 + ( COLS ),91)][TABLE[32 - 1][-TABLE[foo(foo(-1,( Arya )),ROWS)][TABLE[( foo(( COLS ) - -1,-640.91) )][-99]]]] + -0.82 ) ) - COLS,ROWS) - --28 * Hodor );
	Ygritte /= ---dog * Sansa - Ygritte;
	Ygritte -= dog
}
assert ( Sansa ) : "Winter is coming"
def betray(Sansa,y){
	( Ygritte );
	if(-530.0841){
	if(( ROWS * Sansa * -420.43 * bar(Sansa + ROWS * dog) )){

} else {
	Arya
}
} else {

};
	if(-0.69 - -630.947){
	Hodor /= --82
}
}
var y = destroy()
def mislead(){
	rule(-1,-destroy())
}
assert Stark : "Fear cuts deeper than swords."
def TABLE[mislead(destroy(),( Sansa ) * ( TABLE[Arya][Sansa] ),mislead())][i] {
	if(-340.7){

} else {
	dog += Ygritte;
	x *= ( ( TABLE[TABLE[-Stark][Sansa]][( COLS )] ) ) - Hodor
}
}
def bar(Hodor){
	-ROWS
}
def TABLE[( -Jon * protect(-1,( -68 )) - TABLE[betray(ROWS * 300.36,-COLS,( ( ( ---COLS / TABLE[--18 - protect(ROWS,Ygritte,bar(TABLE[COLS][84 * 1]))][ROWS / -ROWS] - -1 ) ) ))][Arya] / y )][j] {
	if(-220.945){
	Jon *= Jon;
	if(Ygritte){

}
};
	if(COLS){
	y *= ( protect(-( 200.9858 ) - ( --39 ),-( Jon )) );
	Hodor /= --0.42
};
	Jon /= -protect()
}
assert 220.76 - COLS - ( -510.7061 ) * 16 * ( y ) * foo(Arya,COLS) : "Nothing burns like the cold."
assert ( ( ( ( ROWS ) ) + bar(COLS) ) ) - Hodor : "Nothing burns like the cold."
def TABLE[-48 * -( ( Sansa / --COLS / -( Jon ) / -32 * -Ygritte / Jon - destroy() / ROWS ) ) + ROWS][i] {

}
assert -52 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Arya][j] {

}
var x = Jon
var Arya = ( rule(( foo() )) )
assert ( 0 ) : "One can not simply parse himself"
def mislead(){
	Arya -= ( -0.05 ) / Sansa + Sansa * ( ( Arya ) );
	y += Jon - 1
}
var Stark = -0.46
def TABLE[y][j] {
	Sansa *= ( mislead(( ( ROWS ) ),COLS,( TABLE[Sansa + Stark][Hodor - COLS] )) );
	Ygritte /= Stark;
	if(destroy(Arya,( -TABLE[-TABLE[-foo(TABLE[y][( foo(0.7) )] - Jon + COLS + destroy(Arya,( Arya ),ROWS),-TABLE[-Hodor - ROWS][protect()],( -( ( ROWS ) ) ) * -Ygritte) + ROWS][betray(( bar(0.11) ) * -91,foo()) - 0.9 * -mislead(-1 * --0.71 * TABLE[36][0.54]) * Stark] * y][-51] ))){
	( ( foo(bar(ROWS),foo()) ) );
	if(Ygritte){

} else {
	--85;
	Sansa += TABLE[dog][( ROWS )]
};
	Jon /= ROWS
} else {
	Hodor;
	if(-1){
	if(( -47 )){
	( ( ( destroy(rule(( ( Stark ) )),--66,TABLE[-62][Sansa]) ) ) )
} else {

}
} else {
	if(Ygritte){

} else {
	if(TABLE[destroy()][( 0.29 )] * ( -1 )){
	( destroy(TABLE[ROWS][( x + 280.6517 ) - rule(TABLE[ROWS * -0.22][ROWS],Hodor) - -rule(x)]) );
	180.622
} else {
	Sansa *= bar();
	Ygritte /= protect(( ( -( ROWS ) ) ),-13 + -foo(foo(( -45 + -( ( ( -1 ) ) ) ),( 550.31 )),betray(( foo() ),betray(-ROWS,--0.57 / protect(y)))),TABLE[COLS][1] / --Ygritte)
}
};
	Hodor *= Ygritte
}
}
}
assert Stark : "Winter is coming"
def betray(x,Arya,Ygritte){

}
assert ( protect(mislead(bar(--betray(900.251,( 19 )) / TABLE[( destroy() )][( -0.99 )] / rule(-730.19) - --48 - --( -( ( -TABLE[mislead(( TABLE[Sansa / -55][destroy(Ygritte)] ))][x] + ( Hodor ) + rule(betray(TABLE[( Ygritte )][protect(TABLE[-0.16][protect(-86,COLS,ROWS)])],TABLE[( betray(23,--dog / ROWS + dog + Stark) ) * TABLE[-98 * -69][-TABLE[bar(( y ))][-destroy(foo(0.09) - ( TABLE[x][--mislead()] ),( Ygritte * -( y ) ))]]][( -0.81 ) / -( -bar(( COLS ) + Stark - protect() / Jon) )] / ROWS),-TABLE[ROWS][TABLE[protect()][TABLE[Arya][--54 - ROWS]] + 0.13],-foo(COLS,( -( ROWS ) * COLS ) / -Hodor,1) - -1 * COLS - foo(--Stark,COLS)) ) ) ) - foo(-protect(-1)) * TABLE[y][ROWS] / ( 840.8699 ) + betray(1) / ---ROWS + -y / ( y ) + -0.25 * ROWS + -6 / -COLS)),0.4) ) : "Nothing burns like the cold."
assert 20 : "What do we say to the Lord of Death?"
def mislead(Jon){

}
var Hodor = 0.01
var dog = mislead(COLS)
var Arya = Hodor
def destroy(){

}
def bar(Ygritte,Stark){

}
def protect(y,Sansa){
	COLS + protect() - -ROWS + mislead(1 + y,-0.54) + Hodor;
	Sansa *= --Sansa
}
def protect(Jon,Hodor){
	Hodor *= destroy(-( betray(---81 + TABLE[-x - 60][--ROWS] + 670.27 - TABLE[( Arya ) / protect(ROWS,( ROWS + TABLE[betray(34)][-0.79] ))][y],ROWS) ) / -( ----Hodor + mislead(230.01) / --ROWS ) * Hodor * Sansa / ( ( 51 ) ),80,( ( ( ( TABLE[--( ROWS ) * 16 / ROWS - dog][-( -1 )] ) * 660.14 ) ) ) - --mislead(-protect(( TABLE[COLS][-protect()] ),x),Sansa,TABLE[COLS - mislead(-Hodor,TABLE[TABLE[580.123][ROWS + --foo(93,Jon) - -mislead(y)]][-ROWS],-ROWS * 0.14 + Arya / COLS)][( y )])) * -mislead(COLS) + 1;
	( ( -20 ) )
}
assert -0.25 : "What do we say to the Lord of Death?"
assert -( 97 ) : "Winter is coming"
var Stark = Hodor
var Ygritte = Sansa
def protect(x){
	if(-ROWS){
	Jon;
	if(-TABLE[Arya][COLS]){
	if(ROWS){
	destroy(-85);
	--0.47;
	if(( betray(foo(TABLE[destroy(Ygritte)][foo(32,-TABLE[Arya][Arya],--69)]),( --940.54 ),( TABLE[foo(TABLE[84 / Sansa][destroy(-1 + Sansa,ROWS)] + ( -0.07 ))][( Arya - Hodor )] )) ) - --COLS * -TABLE[ROWS][-470.332] + ( ROWS )){
	if(-( protect(( Hodor ),foo(mislead(( Hodor )),TABLE[Ygritte][foo()])) * dog + COLS ) - COLS){
	if(-betray()){
	dog *= ( -710.9 + betray(-Jon) - protect() )
} else {
	if(0.05){
	ROWS;
	mislead(( COLS * ( 80.75 ) ));
	Ygritte *= -96
} else {
	if(TABLE[protect(-dog,-0.94,dog)][( -y )] - Stark){
	foo();
	( dog );
	if(COLS + COLS){
	x *= 0.16;
	-ROWS
}
}
};
	--betray(-0.61,COLS) + ( ROWS * Hodor ) + Sansa * betray(( rule(-mislead(-( Hodor ) - protect(destroy(COLS,COLS)),foo(foo(COLS,destroy(Hodor),0.83))),Hodor) ),77)
}
};
	if(-0.61){
	if(-( -protect(betray(-0.64,Sansa),destroy(-320.131,-18 * ROWS)) + Ygritte )){
	-foo(bar(TABLE[TABLE[--89][COLS]][Sansa],mislead(TABLE[Hodor][( TABLE[Stark][( ROWS )] ) / -5],Hodor)),dog,-0.27 + -( -TABLE[-0.01][Sansa / -rule(COLS + ( -22 ) / Stark,94,COLS)] ));
	if(( bar(-650.1212 / ( rule(destroy(ROWS)) ),( foo(0.01 + destroy(( dog ) * rule() / COLS / -( ( x ) ) / -860.78,Jon,-240.521 * -0.82),mislead(Sansa + ----480.467,( destroy() ))) )) )){
	x;
	if(rule()){
	0.25
} else {
	Hodor /= -0.43;
	betray(-Ygritte,Ygritte,-( -( ( ROWS ) ) - ( -60.28 ) ))
};
	-0.81
}
}
} else {
	Arya -= Sansa
};
	Hodor -= rule()
}
} else {
	y *= ( 130.89 );
	( Jon - rule(( y ),( -500.8 )) )
}
} else {
	if(bar(( -ROWS ),rule(81,Sansa)) - -98){

};
	Arya /= ( 0.69 )
};
	if(x){
	Arya /= y;
	Stark /= -protect()
}
} else {
	if(rule(destroy())){

} else {
	y *= 0.06
};
	if(rule(( ROWS ) + ( TABLE[protect()][bar(1,-1 - x)] ))){
	destroy();
	1 + -48
} else {
	if(Sansa){
	y;
	( --ROWS )
}
}
}
}
var Ygritte = -x / betray(( -260.99 ),-0.56) - y
def TABLE[100][i] {
	if(-TABLE[--mislead(-1,( y )) / TABLE[destroy(( protect(20) ),-( protect(-0.26) ))][foo(-ROWS,31 * 300.7 / ( ( COLS ) / rule(-0.29 - ( -0.32 + Arya ),--0.13 / COLS * -ROWS) + protect(destroy()) ),-Ygritte - mislead() + 13)] / Arya][Ygritte + COLS]){
	-( -Hodor )
}
}
var Jon = ( TABLE[ROWS][rule(rule(84),0.52)] )
var Ygritte = x
def bar(Sansa,Ygritte){
	if(dog){
	mislead(880.232,COLS,( -protect(rule(( Jon ),betray(Jon + -( -0.69 ),rule())),x) + destroy(-69,foo(-1,--x * ( TABLE[--( ( Ygritte ) )][destroy(TABLE[ROWS][Ygritte],( protect(bar(foo(),Sansa)) ))] / ( -1 * Ygritte ) * rule(( protect(mislead(COLS)) )) )) / protect(0.28 - -130.56,170.55)) ) * TABLE[( --foo(dog,dog) + ROWS )][-39]) / -( dog ) * --0.91
} else {
	x
};
	-betray(betray(),mislead() * 1) - COLS - x - Jon / ( x )
}
def TABLE[Jon][k] {
	rule(( ( mislead(betray(21 / dog,mislead(bar(),TABLE[( COLS )][( y )]))) ) - bar(Stark,rule(Jon + 190.27,( -( protect(130.1572 * mislead(-( -85 ),rule(ROWS,-Jon,TABLE[ROWS][rule(Jon,( protect(COLS) ))])) * bar()) ) ))) ),( Jon ))
}
def destroy(Ygritte,x){
	ROWS
}
assert 0.58 : "Winter is coming"
var Stark = -TABLE[0.02][bar(( Stark ) - -protect(),( mislead(TABLE[betray(( -y ),TABLE[COLS][x],( TABLE[-90.388][-Ygritte] / ( foo(x) ) ))][dog] * Hodor) ))]
def TABLE[( ( ( -99 ) ) )][i] {
	( ( --( dog - destroy(COLS) ) - COLS / betray(Stark) ) )
}
var Stark = 0.16
assert ( -( 310.798 / -( ---86 ) ) ) : "Winter is coming"
var Arya = mislead(( foo(( destroy(betray(-( --1 / ( ( ( COLS ) ) ) ))) ),y) ))
def mislead(Arya){
	if(Sansa){
	Arya /= destroy(-0.71 - ( 0.35 ),-ROWS,TABLE[x][-910.38]);
	rule(dog)
}
}
assert dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(y,Arya){

}
var Arya = ROWS
assert betray(-0.37 + 1,ROWS,( -foo(( ROWS )) )) : "Winter is coming"
assert ROWS : "What do we say to the Lord of Death?"
def mislead(dog,Arya){
	Arya -= y;
	( ( betray(Arya,Jon) ) ) / betray(( ROWS ),TABLE[-( betray(-0.25 * betray(-38,protect()),--79 - ( Arya )) )][-bar()])
}
assert protect() : "Nothing burns like the cold."
def TABLE[( protect(-rule(y),5,-rule(ROWS)) )][j] {
	if(ROWS){
	COLS - TABLE[( bar(-94,1) )][ROWS] / -( ----25 - foo(( betray() )) ) / ( protect(-mislead(mislead() * COLS),foo() - TABLE[protect()][--0.97 - 0.62]) * -protect(Stark / -dog / Sansa,ROWS,0.93) )
}
}
var Stark = x
def bar(){
	Hodor *= COLS;
	if(( -51 )){
	if(x){

};
	Stark *= mislead();
	if(96 + COLS + COLS){
	Jon /= -COLS
} else {
	if(--0.14){
	y /= mislead(TABLE[-Ygritte][mislead(TABLE[-140.07 - -( -860.042 )][TABLE[73][protect(-550.5916,COLS) * rule(( -42 ),65)]],bar())],( ( ROWS ) )) + Ygritte
};
	x -= rule(mislead(TABLE[-foo()][TABLE[( COLS ) * 58][-TABLE[dog][TABLE[Ygritte][foo(ROWS / y)]]]],-mislead(Ygritte,-34)),Ygritte);
	-6
}
} else {
	if(-Arya * mislead(( 0.42 ),Arya,--x - ( -0.57 ))){
	if(betray(-1,Jon)){
	-29
} else {

}
};
	Jon -= Arya
}
}
def TABLE[Ygritte][i] {
	if(-mislead(( -0.46 )) - -betray(( TABLE[( ( --( destroy(bar(Stark)) ) ) )][COLS] ))){
	-69;
	Ygritte
} else {
	x += TABLE[dog][( destroy(( rule() ),( -COLS )) )];
	100.19
};
	Sansa /= --destroy(Hodor,mislead(-Sansa,-1),-x) / COLS / 0.49;
	( --protect() - COLS ) / -58 / -80.23
}
assert x : "Nothing burns like the cold."
def destroy(Jon,y,y){
	-Arya;
	if(( foo(mislead(),-betray(-0.23),-COLS) )){
	-12
}
}
var x = ( Arya )
var x = 46
def rule(Stark,Jon){
	TABLE[3][( COLS )];
	Jon += -( COLS )
}
assert bar(Hodor,( 0.19 ) / foo(-Hodor,foo(x)) - -Arya - mislead(destroy(-Arya - -0.63,-TABLE[--COLS + Ygritte * -Jon][--96] / 910.364 - ( ( -0.38 ) / ( dog ) ))),( Jon )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( -bar(-180.1,Hodor,--dog) )][j] {
	( -COLS );
	if(71){
	if(---0.95){
	Arya *= COLS;
	y += protect(y,destroy(COLS) * COLS)
};
	if(-destroy()){
	if(( bar(mislead(Arya),ROWS) )){
	Stark *= -480.806;
	x -= ( -Stark - -COLS + ROWS - --ROWS - Arya ) * bar(-TABLE[-mislead(-( ---Hodor / ( ( Arya ) ) )) / -0.65][mislead(bar())],( Hodor ))
};
	( x )
}
} else {
	TABLE[Stark][Ygritte];
	Stark -= COLS + -97
};
	Arya -= COLS
}
def betray(Arya,Ygritte,Hodor){
	-62;
	if(-----( ( mislead(Ygritte) ) - -( -0.29 - TABLE[77][x] ) )){
	protect(Stark) / dog;
	bar()
}
}
def destroy(Ygritte,Sansa){
	y *= -TABLE[66][bar(mislead(),( foo(( betray(TABLE[80][-0.02]) - mislead(-protect(),bar(( rule(( --( ( TABLE[Hodor / ( ( 580.28 ) )][y] ) - y ) ) - bar(( 1 ) / x / foo(),Sansa,TABLE[( -1 )][( Arya )] + ( Sansa )),dog) ),-0.13)) ),( ( TABLE[betray(COLS,Arya,TABLE[Sansa][TABLE[y * ---( COLS - ( protect(( --0.59 )) ) * -( ( ( protect(TABLE[( y )][( ( ROWS * destroy(destroy(),-foo()) ) ) / COLS],betray(-0.08)) ) ) ) ) * mislead(ROWS) * destroy(( Arya ),0.47,mislead(foo(--betray(-bar(rule(( -84 ),-Arya - TABLE[protect() * 1][betray(( -0.11 ),1,destroy(y) - ( TABLE[( foo(ROWS) )][COLS] ) * 35) / bar(ROWS / -protect(( -1 ) / -COLS,foo(),mislead()))]),-foo(0.19,rule(Arya,dog,protect(1))),Stark))),TABLE[Arya][TABLE[mislead(-( COLS ))][-0.21]],-200.8871 / -0.66))][ROWS]])][ROWS] ) ),-50) ),foo(-( ( --COLS ) ))) * -860.27];
	ROWS;
	x += ( -y )
}
var Ygritte = y
def TABLE[-790.31][k] {
	if(1){
	COLS;
	Ygritte += 0.27;
	-mislead(COLS,mislead(COLS)) - -bar(TABLE[( bar(1,-ROWS) )][-55])
};
	Arya *= ( ROWS )
}
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -0.88 : "One can not simply parse himself"
var Sansa = ( ROWS )
var y = -ROWS - Jon + COLS
assert 82 : "Winter is coming"
def destroy(x,y,dog){

}
var Stark = bar(protect(-ROWS + TABLE[( -Ygritte )][( TABLE[foo(( -59 + ( 340.7 ) ) * -( ( TABLE[x][bar() / COLS] ) ) - protect(protect(-190.4575),-( rule() ) + Jon,( -68 )),-0.37,COLS)][Jon] ) - ( 1 )]))
var Jon = ( -betray(destroy(TABLE[-0.41][76]),Arya) )
var Hodor = -( ROWS )
def TABLE[( -COLS )][j] {
	ROWS
}
def rule(Jon,Ygritte){
	Hodor /= betray(y) - Hodor;
	if(ROWS - -( ROWS )){

};
	-0.05
}
var dog = TABLE[y / -betray()][( ( ( ROWS ) ) )]
def TABLE[ROWS][i] {
	if(38){
	0.53;
	Arya -= 720.85
};
	dog /= mislead(Hodor)
}
def destroy(x){
	Jon += ---0.93;
	dog += foo(( ROWS ),COLS,-1)
}
def destroy(dog){

}
def TABLE[Jon][i] {
	if(Arya){

};
	Sansa /= Ygritte
}
var Sansa = foo(--ROWS,( rule(( --0.48 ),--1,( -67 )) ),-920.43)
assert COLS : "What do we say to the Lord of Death?"
def TABLE[1][j] {
	if(rule(x,betray())){
	Stark += mislead(( -( dog ) ) / ( destroy() ),Ygritte + -Arya * ( -COLS * protect(Ygritte) * TABLE[ROWS][Jon] ));
	x /= ( -1 + Arya )
} else {
	dog += ROWS;
	Ygritte *= 0.56
};
	dog /= COLS;
	bar(( ROWS ),betray(),x)
}
def TABLE[( Hodor )][j] {

}
assert 50 : "Nothing burns like the cold."
def TABLE[TABLE[mislead()][COLS]][j] {
	if(-4){
	COLS;
	Stark
} else {
	if(mislead(-70,( Stark / -( dog ) - -COLS ))){
	Arya;
	( -1 );
	( ( TABLE[Sansa][dog] * ( Ygritte ) ) )
};
	x - -( -80 );
	x += mislead(-Hodor)
}
}
def TABLE[( Ygritte )][j] {
	Arya *= ( -1 );
	foo(ROWS)
}
def bar(x,Ygritte){
	y *= -Hodor
}
def betray(Hodor,Hodor){

}
assert -TABLE[COLS][-84] : "What do we say to the Lord of Death?"
def foo(Stark){
	x
}
def TABLE[ROWS * TABLE[destroy()][-( -7 ) + ( COLS ) - foo(y,TABLE[foo(--740.5266,-0.36,-( ( Jon ) ) * COLS)][-81])]][j] {

}
def destroy(Arya){
	if(Hodor){
	Arya;
	-TABLE[-Sansa][foo()] + -destroy(Sansa + ( Hodor ),-0.83,1)
} else {
	if(--0.65){
	Arya /= --TABLE[3][TABLE[Stark][-betray(ROWS,Hodor)]] / y;
	-TABLE[ROWS * Hodor][-Jon]
};
	if(TABLE[-16][ROWS]){
	if(( protect(--destroy(mislead(1,-Arya,( -0.62 ))),-0.64) )){
	if(-( x )){

} else {
	if(( -destroy() / Jon )){

} else {
	Jon += ( -Sansa )
};
	if(Jon - 0.95){
	Hodor /= ROWS
}
};
	if(COLS){
	if(-x){

};
	( COLS )
}
}
}
};
	Ygritte
}
var Stark = mislead(Sansa,Jon + -27)
var Jon = -destroy(93,--0.46 - Stark + Hodor * betray(betray(),COLS),( dog )) + TABLE[-980.9][rule(rule(Ygritte,-1 * destroy(( -68 ))),Ygritte,protect(-mislead(( -32 ))))]
def TABLE[TABLE[( COLS )][protect(mislead(y,protect(Stark) - ( -1 )),--dog,( ( destroy(( Hodor ),---ROWS,1) ) ) * ( protect(ROWS,( ROWS ),-TABLE[ROWS][-ROWS]) ))]][i] {
	-0.98
}
var Sansa = Ygritte
assert y : "Fear cuts deeper than swords."
var Jon = Jon
def TABLE[( TABLE[Sansa][Stark] )][i] {
	COLS;
	( 1 / -destroy(COLS,( betray(( Hodor ),foo()) ),( -protect(x,Sansa) / rule(( TABLE[( bar(TABLE[740.821][mislead(dog,protect(( COLS )))]) )][y] ),x + COLS) + ROWS / y )) * COLS );
	if(COLS){
	x *= bar(dog)
}
}
def betray(Ygritte,Ygritte){

}
assert ( 470.6 / destroy() ) : "Winter is coming"
def mislead(dog,Stark){
	if(Hodor){

};
	if(protect(-y / ( foo(TABLE[betray(-1)][foo(COLS * -COLS,bar(( mislead(protect(-( -1 ) - TABLE[( ROWS )][( -25 )]) / -390.49 - Jon,Jon) ),-44 - --rule(betray(),300.223) / Ygritte - -( -( -0.92 ) ) - --0.76,( foo() )),mislead(--69 + -foo(bar(Arya,rule(-y,--0.49,( -mislead(x,( bar(x) ),-19 / dog + ( -( --58 + -0.47 + foo(-TABLE[( COLS + ( -0.92 ) )][( COLS ) + -90]) ) - COLS )) ) - mislead(-rule(rule() - -ROWS),ROWS)),mislead(TABLE[destroy(-Arya) - -( ROWS - mislead(( ( ( Hodor ) ) ),protect(96,-ROWS)) - ( Ygritte ) ) - -1][-TABLE[( protect(bar(bar(mislead(Ygritte / ( TABLE[ROWS][y * --COLS] ))) + 57)) ) + destroy(Jon) * -16][Hodor * -91 / 0.83 - -destroy(betray(dog) + ( -1 - COLS ),-1)]],Ygritte)),-x),Arya,( destroy(TABLE[destroy(-( ( -47 - TABLE[0.88][TABLE[-x][--26]] - foo() - betray(COLS,COLS) ) ))][rule(( -bar(x) + Sansa ),--1,-880.491)],( -Stark ),1) ))) * COLS / Jon],-1,-210.36) + ( 1 ) ),TABLE[betray(--760.24)][Stark] / COLS)){
	---0.12;
	y += ( --0.67 - -0.39 / betray(( COLS ),-79,COLS) )
} else {

};
	if(( dog )){
	if(-rule(ROWS,--1 / ( -COLS ) * TABLE[-1][y] - foo(x) + destroy(destroy(( ( ( ROWS ) + ( COLS ) ) )),Sansa,mislead(protect(dog,destroy(27)) - y)),-1)){
	if(TABLE[mislead()][betray()]){
	destroy(-86)
} else {

};
	if(destroy(destroy(( ( ( bar(1) ) ) * TABLE[COLS][protect(mislead(mislead(dog),betray(dog,COLS),ROWS),( betray(TABLE[-( 91 )][foo(-1,COLS,Ygritte)]) ))] ),-rule(y,( COLS )),( Jon )),-( Hodor ) / ROWS)){

} else {
	x;
	if(--( ( foo(COLS) ) ) + -30){
	if(y){
	0.27;
	Jon -= foo(bar(Jon / -0.42,TABLE[TABLE[-21][destroy(-160.341 / -480.484,( ( ( -( x ) ) ) * -betray(-TABLE[-0.41][-x]) ),-ROWS)] - ( -78 )][--( Arya / Stark ) / rule(-1)] * COLS / -TABLE[Stark][( Hodor )] - --ROWS),x) - ( TABLE[---ROWS / TABLE[y][y] + 68 - ( protect() )][( 400.8 )] )
};
	Stark *= TABLE[--Jon][dog]
} else {
	x *= protect(0.78,ROWS * -( ( -72 ) ) - ( ROWS ));
	if(y * Stark){
	if(( -5 )){
	Arya += x;
	if(TABLE[0.52][ROWS]){
	if(73){
	dog;
	if(--bar(-y,( ( y ) ),TABLE[foo(-rule(40,rule(-Stark + ( ( Ygritte ) ))),( -foo(-0.56,( ROWS )) ),COLS)][TABLE[COLS][protect(Jon,22)]])){
	if(Arya / ROWS){
	if(( destroy(ROWS) ) - ( ( ( ---0.22 ) ) )){

};
	Arya /= ( ROWS / COLS )
};
	Sansa += Stark;
	( --60 ) * 65
};
	Hodor /= ( mislead() )
}
};
	Ygritte /= -77
} else {
	if(--0.83){
	if(ROWS){
	if(x){
	Sansa /= -( Hodor ) + y * ( ( mislead(( -14 ),COLS,--( -59 - ( COLS + COLS ) ) * bar(ROWS,0.19 + y) * TABLE[( rule(-0.71) )][destroy(-( ROWS + ( TABLE[( ( ( 0.9 ) ) )][( ( -0.2 ) )] ) + -foo() ),x) - protect()] * ( dog )) - 920.4 / -dog ) )
} else {
	if(0.25 + COLS){
	TABLE[( 62 )][dog];
	Hodor *= -COLS * destroy(bar(Arya / mislead(protect(48,foo(510.169,x - 59,ROWS) - -foo(-Sansa),dog),dog) - -( dog ) / foo(1,mislead(betray(),( -78 )),-Jon),0.53,Jon),-0.3,mislead());
	0.34
};
	Jon += ( ( -bar() ) )
}
};
	( TABLE[betray(Jon - ROWS)][--27] )
};
	Jon -= TABLE[ROWS][TABLE[Stark][TABLE[bar(bar(ROWS) + Hodor,destroy(( Arya ),--( -59 )))][--1] / Sansa]]
};
	--( -COLS )
}
};
	ROWS
}
} else {
	bar();
	Ygritte /= betray(-mislead(---1 / -Sansa,-0.61,betray(-( ROWS )))) + Ygritte
}
} else {
	dog *= ( Sansa ) / TABLE[( Sansa )][Stark] + -1
}
}
def destroy(Stark,Ygritte,Sansa){
	if(ROWS){
	y -= TABLE[COLS][rule(0.78) - ( destroy(-( 78 ),-foo() / 0.38) )];
	foo(foo(Hodor,-( y ),foo(-( 0.11 ),y,ROWS)),mislead(ROWS,0.15))
} else {

}
}
assert mislead(ROWS) : "Winter is coming"
var Jon = mislead()
var dog = foo()
def TABLE[-destroy()][k] {
	Stark /= ( -ROWS );
	dog -= ROWS;
	if(-0.67){
	Stark -= COLS;
	rule()
}
}
def rule(){

}
var Hodor = -95
assert Hodor : "Fear cuts deeper than swords."
def betray(){
	56
}
def TABLE[mislead(Hodor,rule(-44,( -500.665 ),-19))][k] {
	Stark /= COLS
}
def TABLE[TABLE[--Sansa][-78] - y][i] {
	x *= -COLS / protect(COLS)
}
var Sansa = -0.45
assert COLS * -( -( ( 61 ) - Hodor ) ) : "One can not simply parse himself"
assert COLS : "Fear cuts deeper than swords."
def TABLE[--0.71][k] {
	( TABLE[TABLE[TABLE[betray(0.79,rule(COLS - ( ( -360.839 ) ) * Stark,-destroy(( Ygritte ),-510.165,Jon)))][0.93]][( x )] - ( 1 )][( 53 )] )
}
def TABLE[rule()][i] {

}
def rule(Jon,Stark){

}
def TABLE[COLS][j] {
	if(TABLE[--x][( --ROWS )]){
	if(Hodor){
	Arya *= ( rule(Jon,--( Sansa ),( dog )) ) * TABLE[( COLS ) / Stark + -Stark * COLS][ROWS]
}
}
}
assert 95 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Sansa : "Fear cuts deeper than swords."
def TABLE[-810.28][j] {
	y *= ( 0.14 );
	-x * ( -( -42 ) )
}
def destroy(){
	( -dog );
	if(-17){
	dog += COLS;
	COLS
};
	( 10 )
}
def destroy(Hodor){
	if(80 * ( ( betray(( -protect(ROWS,x + ( protect(Hodor) ),ROWS) / ( x ) - 0.71 )) ) )){
	if(-48){

};
	if(betray()){
	Hodor += -0.58
}
};
	-1;
	( TABLE[destroy(-TABLE[Jon][-( -0.05 / ( TABLE[COLS][x] - COLS ) - bar(TABLE[970.1987][92]) + --x )],-0.04,-foo(destroy(( rule(( 660.883 ),( TABLE[( -0.62 )][-x] )) ),--Stark + 0.13 / -( Sansa ) / ( ( ( protect(-3,--84) ) ) )),-1) * ( ( bar(foo(830.454,( bar() )),-270.66) ) ))][Sansa] )
}
def rule(y,x){

}
assert -betray() + -ROWS : "Winter is coming"
var dog = -690
assert rule(rule(( TABLE[-10][ROWS] ))) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -TABLE[foo(TABLE[0.62 + bar(-85,-protect(-ROWS,-0.5,TABLE[mislead(( --( --x ) ),( Arya ) / protect(bar(( mislead(ROWS - -1,( ( betray(-( ( ( 86 ) ) ),Stark) ) - -680.7992 * betray(rule(0.58,mislead())) * -Sansa ),--( protect() ) - protect(( Hodor ))) / ( rule(( -630.448 / foo(( protect(destroy(Jon)) * 60.858 - TABLE[( ( -Arya ) - -foo(-TABLE[TABLE[-Jon][-1]][( -0.36 ) + -43 - --0.61 * ( TABLE[Stark][-1] ) - Sansa],-TABLE[foo(-protect(TABLE[( TABLE[( 1 )][( -1 )] * betray(-( protect(rule(destroy(),0.59)) + ROWS ),rule(-0.83)) )][--COLS * destroy(Arya,( COLS )) + -betray() - ( Jon ) / ROWS],bar(COLS,x,( ( 0.85 ) )),( ( 70 + TABLE[-( 9 )][-foo(ROWS / Sansa,-( -640.7 ))] * COLS + ( ( ---0.17 * COLS ) ) ) + ( -36 ) )) / --rule(0.02,x))][( -rule() * -0.58 )]) )][( -660.39 ) - 0.15 / ( 35 ) + -0.79 / 40] * TABLE[dog][0.55] )) ),-39,-( -1 )) ) + betray(-0.52,( betray(Arya,ROWS) )) * ( -Hodor ) ),( -x ),COLS) * betray(-0.48,rule(Ygritte,y),( ( 1 ) )) - ( 0.42 ) - Ygritte,foo(--( bar() ) * -410.4947 + COLS,( -0.47 ),-1)) + mislead(-15,y))][Arya]),( ( TABLE[( ( ( rule(TABLE[ROWS][( -1 )],y) ) ) )][COLS] / betray(TABLE[-0.88][--25 / ROWS],Jon,y) + -( Sansa ) ) * Stark ))][x],mislead(-rule(-COLS),dog))][( -23 )] * rule(0.3,-38 - -1) : "One can not simply parse himself"
def TABLE[( --COLS )][k] {
	if(( ROWS )){
	dog += ( -Jon ) * dog
};
	Arya += Sansa;
	if(bar(Stark * -rule(( -( -y ) ) + COLS,bar(mislead(COLS),-Hodor))) / foo(( COLS ) + ( COLS ),( COLS ))){
	if(TABLE[TABLE[bar(( ( protect(( ROWS ),( ( TABLE[Jon][( ( mislead(TABLE[-mislead(COLS + -1,rule())][TABLE[-47 * foo(-ROWS) * bar(-( bar(COLS,1) ) - rule(mislead(destroy(-ROWS,--( ROWS ) + rule()),Sansa) / TABLE[-( --20 )][-rule(0.01)] - Stark / -bar(mislead(foo(( y ))),TABLE[COLS][ROWS]) - COLS,ROWS,( Arya )),ROWS,foo() + --( foo(( TABLE[ROWS][-rule(rule(( -dog ) * ( 330.91 ) / ROWS - TABLE[TABLE[COLS][( -78 )] / foo(19,ROWS,mislead() + Jon)][( foo(TABLE[rule(destroy(--1,betray(protect(0.72),TABLE[-rule(ROWS) - COLS][( ROWS )]),ROWS),Stark)][-0.95],-ROWS,bar(150.215,( Ygritte ))) )],( x )),0.62)] ),protect(( ROWS * ( ---ROWS + ROWS / -Hodor ) ),46,( bar() ))) ) - foo(ROWS))][Jon] * mislead(( 950.53 ),0.2) * -dog],COLS) ) )] ) )) ) ))][COLS]][( COLS )] / ROWS){
	Hodor *= 0.61;
	-89
} else {
	y += 0.89;
	if(72){
	if(( ROWS )){
	-TABLE[---220.9724][foo(COLS)] + mislead(-( ( -81 ) ));
	if(( TABLE[Sansa][TABLE[-( TABLE[-( dog + Ygritte * destroy(-890.4,( -94 )) )][ROWS] )][destroy(betray(dog))]] )){
	Sansa *= -0.17;
	dog
}
};
	if(0.51){
	ROWS / rule(-0.45) + ( ( -rule(TABLE[-Ygritte][x]) ) - mislead(-destroy(-1) - ( -89 )) + -( -( betray(-destroy(y),ROWS) ) / ( ( ROWS ) ) ) - Ygritte )
}
}
};
	Jon -= 68
}
}
def TABLE[-42][i] {

}
assert TABLE[TABLE[bar(TABLE[destroy(protect())][-1])][TABLE[( -0.66 )][Stark] + 1 / -Sansa / Stark]][-( -Jon )] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(Ygritte,Hodor){
	if(foo(protect(-320.975))){
	( Arya + betray() );
	COLS;
	dog *= ( rule(COLS - COLS,dog / -Stark * ( Sansa )) )
}
}
def betray(Ygritte,Hodor,dog){
	dog += ( Stark + destroy(protect(26)) * ( -( --4 * Sansa ) ) );
	Jon
}
var Jon = -65
def mislead(Sansa,Hodor,x){
	if(( ROWS )){
	-480.96;
	Stark *= Sansa
};
	0.6
}
def TABLE[-foo(---TABLE[COLS][Ygritte / -Ygritte],-COLS) / foo(Ygritte) * y][j] {
	foo(y + --Hodor);
	x /= betray(( x ))
}
def TABLE[dog][k] {
	if(foo(-x + TABLE[betray(-0.61,0.34)][ROWS],TABLE[x][( -ROWS )])){
	Jon *= -0.15
}
}
assert ROWS : "Fear cuts deeper than swords."
var Sansa = ( rule() )
assert ( 0.96 ) : "One can not simply parse himself"
def bar(Stark){
	if(Sansa){
	if(TABLE[rule(1) * -mislead(( ( 0.91 ) ),protect(( ( COLS * -38 ) )) * ( ROWS ))][Jon]){
	Stark -= ( ( destroy() ) )
};
	-( -1 )
};
	Sansa *= ROWS
}
def foo(){
	Sansa -= COLS;
	Arya += ( -rule(-0.28,0.04,61) )
}
def mislead(Hodor){
	mislead();
	bar(Arya,64);
	0.03 / --foo(TABLE[( -TABLE[( foo(ROWS + -TABLE[( -Sansa - -( COLS ) + COLS * Stark - -TABLE[Hodor][-( rule(-betray(rule(-0.87,-COLS),-79 - ( x ))) ) + ( bar() / ( -35 ) ) * ( Jon )] )][----76 * ( 17 )]) ) / COLS / -betray(( destroy() ),ROWS)][y] * ( COLS * TABLE[betray(-190.223,TABLE[-0.21][-ROWS])][( COLS ) / Ygritte / ( ( COLS ) ) * ( TABLE[Ygritte][x] ) + Ygritte / mislead(foo()) * betray(( Stark ),-92 - -ROWS) + -0.95] ) )][-( x )])
}
assert TABLE[( foo(-mislead(54,x,Stark),TABLE[( x )][mislead(( betray(Hodor,-Sansa) ),--0.33)]) ) - 1][-15] : "Fear cuts deeper than swords."
def TABLE[-dog][k] {
	Ygritte -= Jon
}
def foo(){
	if(y){
	-TABLE[foo(protect(Jon,-1,( COLS )))][COLS];
	if(( ( ( ( TABLE[mislead(protect())][-43] + betray(55) ) ) ) )){
	Ygritte;
	if(( -890.85 )){
	betray(-( 0.67 ),-73,ROWS)
} else {
	-COLS
}
}
} else {
	if(-0.34){
	if(-rule(54 - -0.74)){
	-COLS
};
	destroy(destroy(foo(81,ROWS,-bar(--dog / y,-0.77))),-75)
} else {
	Hodor -= Jon;
	Jon /= destroy();
	ROWS + ROWS
}
}
}
assert TABLE[--TABLE[-Stark - Arya][Jon] / Stark][( destroy() )] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[--ROWS][j] {
	x /= -0.55 / -0.19
}
def foo(y){
	if(44){
	ROWS;
	if(( TABLE[betray(destroy(( 23 ),( ( protect(Sansa) + -protect() - -17 / TABLE[( ( ROWS ) )][( foo(-77 + 1,( 0.85 )) )] ) )),-( -ROWS ) + ( Arya / ROWS )) * betray()][mislead(COLS,-0.99,Arya * mislead(dog,-50))] * -0.4 + -( -TABLE[ROWS][-38] ) + -0.6 - rule(x,Ygritte) / -1 - bar() )){
	if(ROWS){
	Sansa -= ( y );
	TABLE[( rule() )][( ( ROWS ) + -betray() )]
};
	betray(--TABLE[-ROWS / TABLE[( Stark )][COLS + 40] * -TABLE[-57][-71] / -94][0.38])
} else {
	-0.17
}
} else {
	if(98){
	0.28;
	if(Ygritte){

}
} else {
	Jon -= ( -y )
};
	Hodor
}
}
assert destroy() : "Fear cuts deeper than swords."
var Ygritte = mislead(y,--COLS)
var Hodor = -destroy(-ROWS,( mislead(rule(( -( ROWS ) ),COLS / Ygritte,COLS)) ))
var Ygritte = ( --protect(( Hodor ),Stark,1) )
def foo(Arya){

}
def destroy(dog){
	if(-18 - -1){
	Ygritte -= Jon;
	if(( -Sansa ) - x / -44){
	( 0.94 );
	Ygritte /= -30
} else {
	dog += 3;
	if(12){
	x /= ( -TABLE[-2][TABLE[12][( ( betray(Hodor * -3 - y) - ( Jon ) ) )] * mislead(mislead(-71,310.494,ROWS),rule())] )
} else {
	Sansa /= Jon;
	ROWS
}
}
} else {
	( y ) / Jon;
	dog += TABLE[( ROWS / destroy(( ( ( ( -COLS ) ) ) )) + foo(ROWS,( bar() )) )][75 - -580.286 - -Stark]
}
}
def protect(Stark){
	y -= -94
}
def protect(Hodor,Stark,Ygritte){
	if(( 0.66 )){
	Hodor -= ( bar(19,( ( Sansa ) / ( -33 ) )) );
	Stark -= 0.54 * -210.594
} else {
	-660.019
};
	Ygritte -= -48
}
def protect(Arya,Arya){
	if(( -0.69 )){
	betray(-79,( -ROWS ));
	if(-COLS){
	Hodor;
	dog /= ( ( -destroy() ) )
};
	if(ROWS){
	if(COLS){
	Arya /= Hodor;
	-Jon;
	Ygritte += ROWS
} else {
	Sansa /= COLS;
	0.64 - COLS;
	protect(--1)
}
} else {
	( 1 )
}
};
	y /= ROWS;
	Arya += destroy(dog) / -COLS
}
var y = ( destroy(Stark) )
assert ( y ) : "Winter is coming"
def bar(Jon,Sansa){

}
def TABLE[( ( mislead(COLS) * dog ) )][j] {
	ROWS;
	Arya -= Hodor
}
def TABLE[protect(-( ( ( -40 ) ) ) / ( COLS ) / ROWS / Arya,( ( ROWS * -COLS + 0.55 * -foo() ) ))][i] {
	TABLE[66 - 790.0927][-COLS]
}
var Ygritte = Ygritte
assert TABLE[protect()][rule(33)] : "Winter is coming"
def foo(){
	if(dog){
	if(--( -0.54 - destroy(Stark,bar(( TABLE[-rule(--protect(( 59 ),bar(),foo(bar(-28 - TABLE[Ygritte][-TABLE[-x][y] + TABLE[rule(dog)][y]],TABLE[95][( betray(Hodor) )]) + mislead(20.3033,--910.52,( dog )),1 / -x,TABLE[TABLE[--0.41 / TABLE[Sansa][Hodor]][y]][TABLE[betray()][-1]])),( ( dog ) * 49 + -90 ))][-Arya] / COLS ),-Hodor)) )){
	if(TABLE[foo(foo(x),COLS)][0.52]){

} else {
	Ygritte *= -bar(1);
	-x
};
	1
};
	if(betray(COLS,ROWS)){
	---ROWS;
	if(betray() + 470.5){
	if(-19){

};
	0.61
} else {
	Hodor /= ( Arya );
	Sansa *= ROWS;
	if(-0.86){
	Sansa *= bar(-betray(foo(-( Arya ),( -1 ) - ( ( COLS ) )),TABLE[-600.94][Hodor])) * -73
} else {
	dog -= bar(y,-85,COLS);
	if(ROWS){
	if(COLS){
	if(dog){
	if(-foo(( 580.7008 ))){
	ROWS * Arya
} else {
	ROWS
}
};
	if(( -1 )){

} else {
	Arya /= ( ( ( -( ( ( ---COLS ) ) - dog ) ) ) ) + -destroy(ROWS);
	if(( foo(protect(),TABLE[mislead(( Sansa ),-Stark - ROWS,-81)][-8]) ) + destroy(-13,ROWS)){
	if(mislead(680.8,mislead(y))){
	if(930.97 + COLS){
	if(y){
	if(( Ygritte ) * --( --COLS ) - TABLE[TABLE[rule(Ygritte,-rule(( x ),protect(COLS),mislead(Sansa)))][betray(COLS,--( foo(( TABLE[( -( ( ( destroy(-44,destroy()) ) ) ) * TABLE[Arya][( TABLE[( Stark )][-6] )] )][--Stark] ),841,--520.667 * x - ( COLS ) - ( ( -830.96 ) ) - rule(0.58 * -( ( -ROWS ) ) + Stark,destroy(Stark,mislead(protect(betray(( rule(protect()) ),--61)) - Hodor,( dog ))))) ),foo(-( ROWS ),-Sansa,-ROWS))] + Ygritte][63]){

} else {
	betray(( -260.86 ))
};
	dog / ROWS;
	1
} else {
	if(-foo(-rule(TABLE[-mislead(destroy(),1,0.1)][1],( -81 ))) / ROWS){
	Jon += -3;
	y *= COLS;
	Jon /= -Hodor
};
	y += ( -( 0.32 ) - -TABLE[rule(foo(foo(-670.57,ROWS - ( -Jon ),( Ygritte )),( 0.29 ))) + 44][Ygritte] )
}
}
};
	COLS
} else {
	if(-( Hodor )){

};
	COLS;
	( dog ) + COLS
};
	( protect(TABLE[--17][TABLE[-( ( TABLE[( rule(TABLE[Arya][1],Ygritte) )][mislead(1) / TABLE[COLS][-Hodor]] ) )][dog * bar(dog)]] / ( mislead(-0.95,protect(( COLS ) + TABLE[bar(dog)][Hodor],-1,ROWS)) ),bar() * -75,Sansa) * COLS + -0.21 )
};
	if(ROWS){
	if(COLS / COLS){
	if(TABLE[-64][mislead(foo(-ROWS + Ygritte) / protect(destroy(-0.11,bar(bar(),ROWS),mislead(( COLS ))) / --4,x,( TABLE[Sansa][foo()] )))]){
	if(-0.25){

};
	dog -= -1;
	Ygritte += -COLS
} else {

};
	if(-1){
	if(( Ygritte )){
	( ( 1 ) ) + foo() + TABLE[1][( TABLE[( Stark )][-0.66 - mislead(-280.4,TABLE[( ( x ) )][-dog])] )] * ( bar(-bar(),( COLS )) / TABLE[0.37][TABLE[TABLE[Stark][( rule(Stark,TABLE[COLS][bar(( COLS ) * betray(--1) + Sansa / TABLE[foo(y,ROWS)][foo(-Hodor * Hodor + ( ( 0.33 ) - 1 * COLS ) + x + ( bar(foo(bar(( 1 ),mislead(--( -65 ))) * destroy(-1),-Jon / TABLE[-0.698][-1])) ),1)],y + ( Sansa / Stark ),-( rule(rule(bar(-y,rule(89,( ( ROWS ) )),---COLS))) )) / rule(protect())]) )]][x]] ) / protect(rule(mislead(90,dog))) - mislead(rule(ROWS,-ROWS + ( protect(( ( ( -COLS - betray(-550.2) ) ) ),( -dog / 75 / -Hodor )) ),Arya),COLS) / dog
} else {
	-betray(TABLE[( ---( -Ygritte ) - Jon + COLS )][TABLE[( ROWS )][0.97 + dog]] * -( Sansa )) - Arya
}
}
}
}
} else {
	y;
	bar(-ROWS,COLS,-Ygritte)
};
	if(Hodor){
	Sansa -= COLS
} else {
	if(( 0.54 )){
	if(-510.1926){
	betray(-840.95,( 38 ) - foo(( Stark + ( ( 12 ) + Arya ) + foo(-( ( -0.13 ) )) ),--( Stark ) + betray(Arya,rule(),mislead(Hodor,Ygritte))));
	Jon -= y
} else {
	if(0.33){
	destroy(ROWS,--y,Hodor + dog + -1 * Ygritte);
	dog *= rule(-dog)
} else {
	x -= destroy(-0.6,Hodor,foo(foo(( bar(ROWS) ))));
	Stark *= Arya
};
	if(TABLE[( 0.4 * ROWS )][( Arya )]){
	destroy(ROWS,-( ( ( COLS + 92 ) - ( -ROWS + Hodor ) - TABLE[TABLE[-( Ygritte ) - ( bar(-230.73,x) )][( bar(-1,( -Arya / ROWS - -dog * --66 * ROWS )) )]][x] / -bar(Arya,-y,Ygritte) ) ) / -Stark + foo(( ( y ) ),-1));
	Arya /= 1
}
};
	x -= Sansa
} else {
	if(betray()){
	TABLE[-( ROWS * ROWS )][foo(foo(TABLE[( COLS )][--( mislead(( 1 ) * ( mislead(--Ygritte) )) )],-( -0.47 ),( ---ROWS + ( 23 ) )),bar()) + -COLS] / protect();
	if(rule(betray(-betray(ROWS,520.515) - ROWS,58,TABLE[0.86][Arya]),0.83,-1) * ( ( Arya ) )){
	Arya -= ( rule(16) )
};
	if(dog){
	Ygritte
} else {
	y *= ROWS;
	if(TABLE[mislead(630.22)][-97]){
	rule(Hodor);
	if(ROWS - ( -( betray(dog,--Jon * -betray(rule(Arya + 0.09 - --COLS * ( ROWS - 810.69 ) - mislead()) - 52 * -dog,0.93 / ROWS,( betray(ROWS + 1) + ( Hodor ) / COLS )) + x) ) * 1 - mislead(COLS,( COLS ),Jon) + Ygritte / -( -mislead(x + 72) - ROWS ) )){

}
}
}
};
	Ygritte *= 1
};
	( ---290.98 - bar(-0.37,mislead(Jon),-Stark) );
	Sansa -= -20
}
} else {
	if(ROWS){
	if(rule(TABLE[rule(( TABLE[ROWS][mislead(-y) - ( destroy(betray(( -( 910.3 ) ),--1),Hodor,rule(( 29 ),COLS,Ygritte)) )] ),Arya)][-( -betray(1,ROWS,mislead(-COLS)) ) - -50])){
	Hodor *= -94
};
	y /= ROWS;
	TABLE[--1][( 19 )]
} else {

}
};
	if(x){
	if(destroy(940.636)){
	Stark -= Arya
} else {
	Stark += ( protect(( ( ROWS ) ),( -0.62 ),-90) ) / ( bar(-0.6,-protect()) ) + -59
};
	if(--TABLE[-rule(( Jon ))][-0.96 + betray(0.32,--0.19 * -1)] * -protect(-dog * Stark,TABLE[-0.98][--TABLE[TABLE[foo(dog,--1)][y]][ROWS]])){
	Stark *= betray(( -COLS ));
	Stark *= 59
} else {
	Sansa / ( foo(ROWS,y,( Arya )) )
}
} else {
	ROWS;
	if(-40){
	ROWS;
	COLS
} else {
	y -= TABLE[( dog )][rule(( ( ( ( -Hodor ) ) + -90 ) ),-x,Stark / ( Jon ))];
	Sansa *= -0.39
}
}
}
}
} else {
	Sansa
};
	Sansa += protect()
};
	x += -1000.7
}
var y = -0.72 + foo(( -850.798 ) * ( foo(-betray()) )) + Ygritte
assert protect() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(x,dog){
	Arya += ROWS
}
def TABLE[mislead()][i] {
	if(( TABLE[Jon][( -0.84 )] )){
	ROWS / -COLS + -( COLS ) * ( --1 );
	Ygritte /= betray(-0.29 + destroy(25,bar() / TABLE[( -0.1 )][bar(Jon,ROWS)]));
	Ygritte /= betray(ROWS,( betray(Sansa,( dog ),( -( COLS ) )) * rule(-( ( -0.24 ) )) ))
} else {
	if(( TABLE[protect()][x] )){
	x *= ( TABLE[-41][dog] );
	if(TABLE[-160.06 - foo(betray(( Jon ),-dog / rule()),COLS,( COLS )) / Hodor][( -10 )] + -TABLE[( Jon )][-0.18] - -0.6){
	-COLS
}
};
	Hodor += rule(-( destroy() * TABLE[( ( COLS * -mislead(ROWS - Sansa,COLS,0.32) ) ) * Arya * -0.65][TABLE[-ROWS - protect(0.98,TABLE[( ROWS )][COLS] + ROWS * 690.772,rule(-1)) - foo()][960.866] - Ygritte * ( --( Jon ) ) * -360.873] ))
}
}
def TABLE[( -0.17 )][j] {

}
def betray(){
	x /= COLS
}
def TABLE[( -destroy(( TABLE[y][( Arya )] ),--mislead(( ROWS )) / -( ROWS )) )][j] {
	if(( ( protect(( 32 ) + TABLE[( protect() ) + ROWS][ROWS],ROWS,-Jon) ) * betray() )){
	-Hodor;
	--490.52 - Ygritte
}
}
def TABLE[COLS][i] {
	35;
	y *= betray(-Ygritte / -betray(bar(ROWS / -0.98,( COLS ),1 / ( Hodor ) - Stark + -79),---1,-0.87 + ( destroy(Arya) )) / x,( bar(-72,COLS) ),( -0.27 ) / -460.18)
}
assert betray(Jon,36) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[destroy(51)][i] {
	dog /= COLS * ( ( ( -50 ) * Stark ) );
	if(-86){
	x -= dog;
	if(foo(ROWS * protect(TABLE[protect(betray(ROWS),bar(( -x + -Sansa - ( 551 ) ),-Stark * 1)) - --1][-x],betray(-0.69)) - TABLE[destroy(--Stark,x,( -betray() - -0.02 ))][0.45 - -destroy(Stark,betray(( betray() )))],ROWS,-dog)){
	( COLS - ( x ) )
} else {
	if(Arya / -Stark){
	if(Hodor){
	dog -= ( TABLE[-( mislead(ROWS) * --180.573 * ( 83 ) )][-34] );
	if(Stark){
	if(( ( destroy(( -TABLE[( -dog + -15 )][x] * 0.82 ) / foo(TABLE[99][-Arya],foo(ROWS,--foo() / -1),betray(( dog ))) + ( 0.08 / -( 0.95 ) - 210.45 ),rule(-1,rule(betray(-1))) + ( Sansa ) * -COLS + dog - ( ROWS * ( 0.36 ) - -bar(COLS,x,( -mislead(ROWS) + COLS )) ) - betray(-0.94,y) / ( 0.85 ) + -( --1 * ( TABLE[ROWS - 740.03][Arya] ) ) * COLS) ) )){
	y *= Hodor
}
};
	if(1){
	-69
} else {
	x /= 71;
	TABLE[( ROWS )][0.47]
}
};
	x *= ( 15 )
};
	if(( Sansa )){
	0.25
}
};
	ROWS
} else {
	( Sansa );
	Stark;
	if(foo(( ROWS ),ROWS,( TABLE[( protect(Arya) )][betray(destroy(-( Ygritte / Stark ) + -Arya))] )) + Hodor){
	0.49;
	betray() - TABLE[ROWS][0.83]
} else {
	if(COLS){
	if(foo(( betray(foo(),-1,( -y )) ))){
	Sansa += ( COLS - -protect(foo(-90.027)) );
	foo(COLS) + ( ( ( ( ( betray(COLS) ) ) + rule(dog) ) / -60 ) );
	if(betray(( 1 ))){
	if(( 0.35 ) - ( Ygritte / 35 ) - destroy(COLS,-TABLE[( ( -0.72 ) )][Ygritte] + Stark,COLS) * ( Arya )){
	x -= Hodor + -320.54 * Sansa
} else {
	Ygritte *= -Ygritte;
	dog -= TABLE[protect(47)][( ( ROWS ) )];
	dog += -COLS - ( ROWS )
}
} else {
	if(-Jon + -( ( COLS ) ) - rule(Arya)){
	TABLE[Arya][bar()];
	--0.17;
	Sansa -= -ROWS / ROWS / ( ( ( dog ) ) ) * -ROWS
};
	Ygritte -= rule();
	-0.03
}
};
	Hodor += -20;
	if(( ( -0.23 ) ) * -( Ygritte * bar(ROWS,-( bar(protect(( ROWS ),COLS) + foo(Stark),TABLE[TABLE[( 0.08 )][betray(ROWS,0.25 / protect(COLS,( x ),ROWS),Hodor)]][ROWS]) ) - Jon,y) ) * ( -TABLE[( betray() )][Hodor + -1] )){
	if(x){
	dog -= -( ( y ) - dog );
	--( ( 0.46 ) )
}
} else {
	betray(( foo(-Arya) ) / -foo(( x ),( ( Jon ) )));
	Hodor *= ( ( 79 ) )
}
} else {
	Jon += mislead(Jon);
	-490.22
};
	if(TABLE[( ROWS )][rule(Stark,--rule() * -( -270.9 ),destroy(TABLE[0.59][-ROWS] / -( TABLE[protect(1,bar())][-dog] ) / ( destroy(foo(mislead(( 1 ),rule()) + Jon,dog,bar(( ---0.2 * ROWS )))) ),rule()))]){
	Sansa /= bar(y - COLS);
	Stark += COLS
} else {
	( ---bar(TABLE[-1][ROWS * ROWS]) ) / Jon;
	( 670.8 / Jon ) * ( -COLS + ( Stark ) ) / Ygritte
}
}
};
	if(( x )){
	-1;
	( -( betray(0.43 - ( betray() ),820.34) ) )
} else {
	if(Stark){

} else {
	ROWS;
	Jon /= Arya
}
}
}
assert TABLE[betray(--( bar(( -ROWS ),( TABLE[---1][-( x )] ),( ROWS )) * dog ))][---TABLE[TABLE[Stark][( COLS ) / ( -TABLE[x][COLS] ) + COLS]][-TABLE[protect(ROWS,-240.268,( -x ) + 0.64 + ( ( ROWS + ( 1 ) - y ) ))][foo(-550.213,bar(( TABLE[destroy(destroy(( ( -Jon ) - -( y ) ),x),ROWS - 0.2)][-78] ),bar(ROWS) + TABLE[TABLE[( COLS )][bar(( ( TABLE[-88][-( foo(Stark,COLS) )] * -betray(Sansa,-Ygritte) ) ),1,Sansa)]][( -Jon )]))]]] : "One can not simply parse himself"
def destroy(Arya){
	( ( 0.4 ) )
}
def foo(y){

}
def TABLE[-1][i] {

}
var Sansa = dog
def TABLE[x][j] {
	dog *= -93
}
def rule(Sansa){
	if(dog){
	0.65;
	if(( destroy(ROWS,-( Hodor ) - ( -Ygritte ),y) - betray(--33,ROWS) )){
	Ygritte += Stark;
	bar() + -0.05;
	if(Hodor){
	if(mislead(0.77)){
	Ygritte += ( Jon * ROWS )
} else {
	Jon;
	betray(Jon,dog)
};
	64;
	Hodor *= betray()
}
} else {
	-dog;
	Sansa += TABLE[bar(TABLE[( Hodor )][TABLE[rule(( -110.28 ))][ROWS]],dog + mislead() / -820.06 + betray(0.17),-0.26)][( bar(Stark - y) )]
}
};
	if(TABLE[foo(83,48,foo(( -Sansa + mislead(Stark / -85,-( ( -0.72 ) ),0.47) + ( -330.95 ) ),x))][( -COLS ) + ROWS]){
	if(( TABLE[-1][-TABLE[-ROWS - -0.1 / betray() / -120.58 / -COLS - -0.42 * protect() + 271][foo(39)]] ) * TABLE[-( destroy(foo(9),y / ROWS,Arya) - Stark ) * -47][destroy(mislead(--betray(Sansa),mislead(( -( 0.04 ) ) / -( TABLE[rule(-13,43)][( ROWS )] ),-( bar(1 * -0.51 * Ygritte,TABLE[--( protect(bar(COLS * ( mislead() )),-0.2) ) + ( -bar(-91,y) )][Stark],( 58 )) )) * ( COLS )),( Arya ))]){
	77
};
	Ygritte *= dog + Stark
} else {

}
}
var Ygritte = Sansa
def bar(Stark){
	TABLE[Sansa][( Hodor )];
	if(( mislead(-17) )){

} else {

};
	Arya
}
def TABLE[bar(--COLS - Ygritte * Sansa + ( ---71 / ( -Arya ) ) - 1,( Stark ) - COLS - -TABLE[( COLS )][-0.16] * ( y ),x / Jon)][i] {
	Stark *= y - 23;
	y *= ( COLS )
}
var Jon = -COLS
var y = --COLS
def foo(){
	dog;
	if(TABLE[( Arya )][---0.85]){

};
	Jon -= protect(Stark)
}
assert -730.01 / -87 - ( ROWS ) : "Nothing burns like the cold."
var Jon = ROWS
def TABLE[Arya][k] {
	Hodor /= -53 / ROWS
}
def protect(x,Stark,y){

}
def foo(dog){
	dog /= COLS * foo(-800.72,bar(-mislead(( ( -x ) ) / mislead(( TABLE[rule(-0.1,Jon)][( bar(Hodor * Sansa,Ygritte / ( ( COLS ) ) - --520.07) - ROWS )] ))) + -Stark),--TABLE[ROWS][-Jon] / COLS)
}
assert ( mislead(-49,bar(120.567,--destroy(destroy(),( -protect(( --1 )) )) - foo(( -870.739 )))) ) : "What do we say to the Lord of Death?"
def bar(y){
	ROWS
}
var Ygritte = TABLE[( 39 )][( destroy(betray(),ROWS,( -rule(Arya,ROWS,Hodor) )) )]
var x = protect(( 0.4 ) + COLS * -10.89)
var y = mislead(TABLE[--1][foo(destroy(Stark,y,TABLE[( rule(ROWS) )][destroy() * betray(-57,TABLE[Stark - ROWS + ---TABLE[-1][foo(Hodor,1)] * ROWS][-( COLS )])]))])
var y = -8
def bar(Stark){
	if(-0.02){
	if(Ygritte){
	Arya -= -77;
	ROWS
} else {
	if(COLS - ( COLS ) - -mislead(41,--( 11 ))){
	Arya /= --TABLE[Jon][Ygritte * -0.06]
} else {
	if(-TABLE[( COLS / -0.37 )][Ygritte] + 1){

} else {
	-1
};
	-35
};
	if(Jon){
	Jon /= ( --bar(( -( COLS ) )) * COLS / TABLE[( bar(destroy(Sansa) - ( 790.211 ) / -0.37 / -53 + -31) )][Stark] ) - -betray(0.66,-880.22,-0.83)
};
	Stark += protect(-0.21 - 1,0.67)
}
} else {
	Stark -= COLS / ( ROWS );
	if(dog){
	ROWS * dog;
	47;
	ROWS
}
};
	if(TABLE[( rule(-490.13,14 / TABLE[TABLE[( --ROWS ) / mislead(630.53,dog)][protect()]][ROWS]) )][-TABLE[-TABLE[( -Arya )][930.59]][ROWS + 0.54 * ( protect(COLS,ROWS * -Arya) + -14 / ( -370.64 ) ) / ( ROWS )]]){
	TABLE[destroy(ROWS,( ---( --dog ) / ( -Hodor ) ))][ROWS] + 1;
	foo(COLS)
} else {
	Ygritte -= -( COLS ) - x
};
	Stark
}
var Stark = ( ( -46 ) )
def foo(Arya){
	Arya -= Hodor
}
var Arya = -0.88
var Arya = -mislead(1)
def TABLE[foo(bar(Stark,bar(( ( Jon ) ),Sansa / Sansa,COLS)) / --( TABLE[-bar(TABLE[--0.54][ROWS * protect()],rule())][x] ) / Arya - 1 * Jon * ROWS - Stark + betray(rule(betray(( COLS ),bar(1,mislead(),( -ROWS ))),0.89)),TABLE[Arya / foo(0.41)][Jon])][i] {
	if(ROWS * 59 / 0.01 / 0.01){
	if(Ygritte + ROWS){
	bar(COLS);
	x += COLS / -100;
	Ygritte += ROWS
} else {
	if(destroy(53)){
	-950.91
};
	Jon
};
	Jon
} else {

};
	TABLE[Sansa][--destroy(destroy(( betray(( -87 * COLS / 140.6861 * -440.1559 )) )),Hodor,COLS) - -x] * destroy(-betray(ROWS,mislead() + -ROWS),97,mislead(mislead(14,protect(36)),-( 96 - -75 )));
	Arya /= -40.885
}
var dog = 1
def mislead(Jon){

}
var Hodor = -Sansa + COLS
var Jon = --mislead(destroy(protect()) - Ygritte,-COLS)
def TABLE[-( ( 63 ) )][k] {
	0.39 + -( COLS ) * rule() / Ygritte;
	Stark -= ( ROWS )
}
def TABLE[betray(--Jon,-0.58,Sansa)][i] {
	if(TABLE[rule()][-36] / -8){
	Hodor += destroy(y,( Ygritte )) - destroy(-1)
};
	x -= COLS
}
var y = destroy()
var dog = bar(COLS + -ROWS)
def TABLE[110.14][i] {
	90;
	if(--92){
	if(protect(ROWS,COLS + ( -Arya ),-0.45)){
	Ygritte -= Sansa
};
	x;
	Jon *= ----( ( TABLE[COLS][bar()] ) )
} else {
	-dog
}
}
var Jon = TABLE[0.59][23]
def TABLE[Arya][j] {
	if(38 + 100){
	x;
	y *= 1
} else {
	if(-( -0.35 )){
	TABLE[-1 + -bar(0.85 - rule(Jon + foo(-COLS * -84,destroy(670.732),( -Stark )) - --67 * ( Jon ),Jon,-Hodor)) - ROWS + mislead(( ( Arya ) ) - mislead(-TABLE[dog][rule(-Jon + destroy(TABLE[ROWS][-( 820.604 )]))] * ( x ) / 750.8)) - foo(( TABLE[--( Jon ) - Arya / betray(600.836,( -( ( -0.97 ) - -( -TABLE[-0.13][y / dog] ) * -foo(ROWS - -0.5,TABLE[-660.28 / destroy(TABLE[( -0.9 )][( -1 )])][x]) ) ))][93] ) / ROWS - COLS,( 72 ))][foo(-1)];
	if(6){

};
	-Sansa
} else {
	if(Stark){

};
	if(betray(-1) - COLS){

} else {
	if(protect(ROWS,-1,( -( Jon ) + -mislead(( foo(( ---destroy(-31) )) ),Jon,protect(betray(),COLS,Sansa) - 74) - 1 + ROWS )) * COLS){
	x -= -1;
	if(Ygritte){
	destroy(-0.58)
}
};
	--210.548
};
	if(bar(--TABLE[ROWS][-1] * foo(y) * -y)){
	x /= ( -protect(--Arya) * -57 * ( COLS ) / ROWS - ( Jon + ( ROWS ) + -( bar(( ( ( TABLE[TABLE[-0.93][TABLE[ROWS][COLS * Ygritte * ROWS]]][-43] ) ) ),-Stark) ) - --COLS - dog - TABLE[( -ROWS )][mislead(( -1 / ( betray(-y + ( TABLE[( ROWS ) / --0.15 / ( TABLE[bar()][( Hodor )] - mislead(-94) * mislead(foo(Stark,19,( ( Ygritte ) )) * destroy(--TABLE[x][-( -mislead(dog * ( 27 ) / destroy(---0.5,( ROWS )),destroy(ROWS,( COLS ),( -0.22 ))) )] + ( ROWS ) / x,1 / 0.24) + x + betray(Stark,foo(-1,-Ygritte))) )][COLS / -COLS] )) ) ),-1)] * COLS * 0.93 ) / --Jon );
	Hodor *= 46
}
};
	-COLS
};
	if(( 1 ) / Ygritte){
	ROWS;
	x += Arya
};
	if(Arya){
	-1 + 99;
	Hodor -= COLS
} else {
	( ( TABLE[-foo(0.38 * ROWS,ROWS,dog) / ( ( Sansa ) )][-ROWS - dog] ) - y * ( Jon / rule(25,-480.3095) ) )
}
}
assert ROWS : "Fear cuts deeper than swords."
def TABLE[COLS][j] {
	if(TABLE[0.58][-( rule(-( TABLE[Sansa][Arya] ),40) ) / -( Sansa ) * 0.29]){

}
}
def foo(x,y,Arya){
	if(( COLS )){
	Jon;
	if(-43){
	Arya /= ( -0.39 )
} else {
	( Sansa );
	Hodor += 54 / -ROWS
}
} else {
	Ygritte += ( --540.36 );
	if(--foo(-x,-4) - destroy(x) * 0.1){

};
	Ygritte += y
};
	Ygritte
}
def TABLE[Arya][k] {

}
def TABLE[COLS][k] {
	if(foo(Stark)){
	if(-mislead(mislead(--Jon + --( y ),protect(y,ROWS - dog)))){
	Ygritte *= --destroy(( bar() ) + ( -protect() ),ROWS,rule(700.9002)) - Arya
}
} else {

}
}
def mislead(){

}
def TABLE[-70.21][i] {
	dog
}
def foo(){
	dog *= y;
	Jon += ( -90 / -( ( -61 ) ) / Stark * -Sansa )
}
def rule(Jon,Arya){

}
var Hodor = -ROWS
var y = Ygritte
def TABLE[ROWS][j] {
	if(( -0.01 * ---1 * -Hodor ) + ( ROWS )){
	if(ROWS){
	( Arya )
} else {
	dog *= bar(mislead(-( rule(( --bar(mislead(Stark) * TABLE[rule(( -( Hodor ) ),( destroy() ))][foo(1)] + TABLE[-750.566][TABLE[x][430.85]]) - TABLE[Hodor][-11 / 0.3 / x] ) - ( -ROWS ),19) )),410.717,-77);
	Sansa -= ROWS + -1
};
	if(--( --96 - ( dog ) + -TABLE[( ( y ) )][( 48 )] )){
	rule(rule(Jon,-82))
}
} else {

};
	-140.6124 * Sansa
}
var Hodor = -16
var Hodor = protect(-( -protect(ROWS) ))
var dog = --58
var Jon = -1 * Jon
def TABLE[-950.436][i] {
	x += -COLS;
	if(-1 - -75){
	-TABLE[protect(x,( dog / Stark * bar(( ROWS )) ),rule())][TABLE[-TABLE[0.85][rule()] / Jon / ROWS * ( ( COLS ) )][mislead(3) + ( ( ( -ROWS ) ) )]];
	dog += Arya
};
	-0.42
}
def TABLE[rule(COLS,-0.46)][i] {
	if(( ( 1 ) )){
	Stark += betray(betray(( ( ( COLS ) ) ) / Ygritte,( rule(1) )) / COLS,ROWS,--0.07 / COLS + Jon);
	Hodor -= -( x + -74 );
	if(betray()){

} else {
	if(-0.6){
	if(940.1474 - TABLE[mislead(protect(-70,COLS),-Ygritte,-y)][destroy(-protect(),Jon)]){
	if(Stark){

} else {
	if(( ROWS )){
	Arya *= -TABLE[-destroy(-0.13 + Jon,( betray(Jon * ( betray(y) ) * ( -56 / foo(-Ygritte,TABLE[ROWS / rule(--0.02,rule(),0.04)][TABLE[-0.89 / COLS][COLS]],--bar(betray(rule(( ( Arya ) ))),( Arya ))) ),( ( ROWS ) ),TABLE[x][50 * ROWS]) ),-14)][-7 * -betray(destroy(--21 * TABLE[rule()][-Hodor * foo()] * Stark,TABLE[TABLE[protect(Jon)][( 0.04 )] * Arya / COLS][Sansa]),foo(-( bar(destroy(( Arya ),-1 - protect(),mislead(y + dog,1,71) / --Arya),-Hodor) / -COLS / ( ( foo(Arya) ) ) * TABLE[rule(Jon,--1)][-1] ),y,rule(mislead())),-4)] - -y * 430.39 / destroy(x,-Jon,( ( ( Jon ) ) ))
} else {
	if(86){
	if(COLS){
	Stark -= -( ROWS ) * mislead() - ( 1 ) * rule(Hodor);
	if(( -66 ) - ( 0.71 ) - -9 * Arya){
	dog *= ( -( betray(( 88 ),destroy(( dog ),( betray(-foo(x),betray(rule(-Stark,TABLE[bar()][TABLE[-COLS][Ygritte / ROWS]]))) )) - ( 82 - Hodor / Jon ) - destroy(TABLE[Ygritte][protect(TABLE[-0.64][-( betray(1) )]) * ROWS]) / ---88 - ROWS,Ygritte * 49 + betray(-mislead(TABLE[-85][Hodor] - -Jon + TABLE[0.12 + -mislead(100.1,-( -ROWS )) * COLS][7]) * -COLS,-490.2,-41 - COLS)) ) ) - protect();
	if(( ( -840.1814 ) )){
	if(( foo(Sansa,( ( -protect(-83 + --1,( -1 ) / rule(COLS,ROWS)) ) )) )){

};
	Jon /= TABLE[mislead(dog,rule(--Arya))][-Sansa + bar(TABLE[destroy(mislead(TABLE[( 0.42 ) + ---ROWS / 1][( -0.08 - Hodor )])) / --TABLE[Hodor][Ygritte + dog] * ROWS][-COLS - ( -0.48 )])];
	Jon /= ROWS
}
}
} else {
	ROWS
};
	y - mislead(( y ))
} else {
	Stark *= TABLE[-0.47][( x )];
	Arya *= y;
	x
};
	if(( COLS )){
	y *= -22;
	if(25){
	if(-bar(foo(TABLE[( ( mislead() ) )][ROWS - rule(destroy(-destroy(( -( Stark ) ),TABLE[mislead(( betray(( ( -1 ) ) / TABLE[y * -37][foo(COLS)],Arya) * betray(-destroy(),( 1 ),TABLE[betray(( mislead(--28 * ( TABLE[Hodor][Stark] ) / -0.87,ROWS) - ( 460.4137 / -11 - -dog ) + ( ( Sansa ) ) ))][Ygritte]) ) / bar(1,y) * destroy(COLS),destroy(Sansa))][-1 + COLS],TABLE[-23 + 340.5][990.734 / ( ( -rule() ) )]) + 0.81))],Ygritte),-TABLE[TABLE[-66][Arya]][-betray() / -9],ROWS) / mislead(( ( ---betray(foo(foo(( ROWS - rule(COLS,mislead(-ROWS,-1),Sansa) ),-97,( ( y ) )),--650.5),--TABLE[mislead() * 0.3 * -x][-y - ( x - -65 )] / dog) ) ),Jon)){
	if(( -1 )){
	Ygritte -= -0.76;
	COLS
} else {
	Ygritte -= ( -0.16 );
	if(TABLE[TABLE[Stark][-0.06]][-Ygritte]){
	if(( -( -0.59 ) * TABLE[ROWS][rule(y)] / -Stark / TABLE[x][Jon * Stark] )){
	if(rule(( 0.25 ))){
	Hodor;
	if(( -TABLE[COLS][betray(Jon)] )){
	destroy()
} else {

}
}
} else {
	if(Sansa){
	Sansa *= -0.22
};
	if(COLS){
	Sansa
}
}
} else {
	if(( TABLE[( --TABLE[( y )][mislead(COLS)] / -( TABLE[-0.93][-TABLE[33][( 68 )]] ) )][-ROWS] )){
	Stark /= -destroy() * Arya
};
	-( betray(0.53,y) );
	if(destroy(-TABLE[ROWS][ROWS],1,COLS)){

} else {
	if(COLS + protect(mislead(( -47 ),( Arya + 49 - TABLE[--0.92][betray()] ) + mislead(71)) + -ROWS) / COLS){
	Arya /= bar(Arya);
	y /= dog
} else {
	y *= betray(-bar())
};
	Sansa * ( TABLE[0.53][dog] / rule() )
}
}
};
	Stark += -5;
	Hodor *= ROWS
};
	Hodor += ( 95 );
	if(( 0.69 / destroy(betray(Hodor - -y),ROWS,--betray(( 690.8 ),-Sansa) / -0.15) + -450.92 )){

} else {

}
} else {
	if(-0.02){
	-490.8;
	Hodor -= COLS
}
}
}
}
};
	( betray(( foo(( TABLE[-mislead(( ( destroy(dog) ) ) - destroy()) * rule(ROWS) / Stark / Jon - -Jon * -Stark][COLS] / foo(( TABLE[-60][ROWS] ),Stark) ) * x,( -1 ),( 840.67 )) )) );
	if(protect()){

} else {
	Sansa *= ROWS
}
} else {

}
};
	Stark *= bar(400.05)
}
};
	Ygritte -= -Hodor;
	bar()
}
def TABLE[mislead(-( y ) * ( destroy(foo(-foo(COLS,0.74 - 2 + TABLE[-( -0.77 ) / -77][-( betray() )] * betray(TABLE[1][( Stark )],TABLE[-rule(Hodor,-Sansa,rule(630.9038,mislead(32,Ygritte,COLS - ( Arya ))) + TABLE[0.95][( foo(COLS + foo(-( COLS ) + -( 200.164 )) - dog + 140.381 * Arya - ( --ROWS ),destroy(Sansa)) * -COLS - x * ( mislead() ) - COLS * betray(destroy(bar(( -( Arya ) )) * mislead(),COLS,ROWS),( -foo() / rule(mislead(TABLE[( ( TABLE[( Stark )][( Hodor )] ) ) / rule(betray(ROWS) / ( -Hodor / -33 ))][Jon],ROWS * ( dog )),ROWS,-1) / Jon ),ROWS) / mislead(-0.45) ) - -( COLS )] - -520.865 * TABLE[-x][Ygritte])][foo(Stark,protect(bar(Sansa + betray(-COLS,-ROWS)),TABLE[( ROWS )][-( -TABLE[1][destroy(betray(( Sansa )))] )],( -1 )),COLS)],-x)),0.9),-40) ) / mislead(Stark) * ( protect(TABLE[protect(Ygritte,( COLS ) + 780.5)][--( ( -1 ) )]) ) * --0.08 / mislead(-TABLE[dog][-( mislead() )],0.57,COLS),foo(-( Hodor + ---( COLS ) * ( ROWS ) ),-Jon,( rule() * Stark - -0.72 )))][j] {
	if(0.29){
	Stark += -ROWS;
	destroy(betray(ROWS),Sansa) * rule(-COLS,-0.83) + -x
};
	x;
	if(-foo(x * Jon + 620.643 + Arya,( Arya ))){
	Jon += foo(-COLS,destroy(-0.76,ROWS,foo(( ROWS ),COLS)) - 1,ROWS);
	Ygritte *= -50.43
}
}
def mislead(Jon,Hodor){
	Hodor *= ( --Sansa / -COLS * ( ( betray(8) ) ) );
	Jon -= x
}
var Sansa = TABLE[COLS][betray(bar(foo(-Hodor,-( -36 ),Arya) * ( protect(foo(87,1),67) ),COLS,-0.64),300.33)]
assert ( 1 ) : "What do we say to the Lord of Death?"
assert Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Sansa,Arya){
	Arya *= TABLE[( Ygritte )][COLS];
	Hodor *= destroy(Hodor,-12,betray());
	dog /= mislead(( ROWS )) + ( ( 0.36 ) - -0.57 )
}
def TABLE[( protect(ROWS) / COLS )][k] {
	Hodor *= bar(( ( Ygritte ) - -COLS * -COLS ),bar(-0.92,( x ),( Stark )) / -( destroy(ROWS,( ( --( foo() ) ) )) ) - x);
	dog *= -16
}
def TABLE[foo(-0.09,rule(( protect(COLS) ),( destroy(Stark) ),-TABLE[1][protect()]) + ---( -Hodor + -0.75 ) + x)][j] {

}
assert ( ( --1 - -Sansa + destroy(( -0.69 ) + ( TABLE[COLS][TABLE[betray(-0.22)][( rule(-protect(betray(-120.13,mislead(( 640.4 - TABLE[-810.73 - ( ( ( foo(( destroy(ROWS + ( -( TABLE[-COLS][-1] ) ),Ygritte,dog) ),640.73) ) ) ) * COLS / rule(--1 * -Hodor,Arya,-90.61 / ( ----ROWS / Jon - -Ygritte * COLS )) * Sansa / ROWS][Hodor] ),-mislead(Ygritte,( ( protect(destroy(( 1 / -1 )),destroy(( ( -280.55 ) )) - ( 1 )) ) ),--dog)),mislead(TABLE[( -y + -0.3 ) * -COLS][-0.73],mislead(),ROWS)) - TABLE[79][rule(foo(--foo(mislead(),ROWS,( ( bar(( -COLS - Jon )) ) ))) / Arya,-betray(destroy(-( ROWS ))),0.55)],0.72,0.05 - ROWS) + -betray(ROWS,-0.61) * -80) )]] * ( 49 ) )) ) ) : "Winter is coming"
var y = Sansa
assert ( -bar(260.9971,-Jon) ) : "One can not simply parse himself"
var Hodor = x
var y = Ygritte
assert TABLE[-Ygritte][betray(bar(ROWS,COLS),2) - -540.2401] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(){

}
var Arya = rule(-foo(y,rule(-Arya * Arya,bar())))
def protect(Hodor){

}
def TABLE[bar()][k] {
	Sansa /= COLS
}
def rule(Hodor){
	-93
}
assert bar() : "Winter is coming"
def foo(dog,Sansa){
	mislead(--0.43,--( -betray(0.27,mislead(Arya),--( mislead() ) + COLS) * ROWS ) / ( Stark ),betray(-destroy(TABLE[bar(-rule(4,-62),( TABLE[dog][ROWS / COLS] ))][bar() * -28 / dog + 82],COLS))) + -COLS;
	if(130.17){
	x - 3 * Jon
}
}
def TABLE[-0.18][k] {
	( ( ROWS ) )
}
var Jon = ( --COLS - TABLE[Arya - ( 88 )][protect(( ROWS ),-Ygritte * 0.16 - foo(( 620.922 )) + ( -160.4 ),TABLE[-14][x])] + Arya * -100.29 ) - --COLS * -0.25
assert 0.15 : "One can not simply parse himself"
def TABLE[COLS][k] {
	Stark;
	Stark *= -COLS / TABLE[-( y )][COLS]
}
def protect(y,Arya,x){
	( ( protect(ROWS) ) )
}
assert 270.72 : "Winter is coming"
assert betray(rule(Stark,mislead(COLS),COLS / Jon),( TABLE[0.68][Arya] ),82) : "Nothing burns like the cold."
def TABLE[-ROWS][k] {

}
assert -0.55 : "What do we say to the Lord of Death?"
def destroy(Jon,Arya){
	bar(Stark)
}
var y = ( Sansa ) + dog / Arya * 0.35 - Ygritte
def TABLE[( --TABLE[destroy(-COLS,Hodor)][16] )][i] {
	( Stark )
}
var Stark = ( -0.7 )
var Jon = dog / Jon
assert Stark : "Nothing burns like the cold."
def mislead(dog){
	Arya += betray()
}
def TABLE[-0.76][k] {
	Stark *= TABLE[( ( -TABLE[foo(COLS,protect(-ROWS,77,-rule(94)),COLS)][( -1 )] ) )][-foo(protect(Jon * foo(x * -0.88,TABLE[( betray(bar(TABLE[0.81][-( rule(-400.4 + Hodor - -0.02) ) - COLS - -COLS + Ygritte + protect(0)]) + Arya,COLS,mislead(( y ),( ( Hodor ) ),mislead() + betray(-96))) - -( dog / 0.78 * ( Stark ) ) )][( -0.32 )] - ROWS * 0.38,( -0.09 ))),TABLE[-Hodor * ROWS][COLS],-foo(-90 - destroy(-25,betray(Jon),destroy() * 59 + TABLE[--( Hodor - -Stark ) - -protect()][( ROWS )]),Sansa)) / -COLS * y];
	Jon /= ( Stark );
	rule(( TABLE[Hodor][rule(-1)] ) - Jon * -( ( TABLE[rule(( -Ygritte * 1 * -foo(COLS,mislead(-( Sansa ) + -TABLE[--0.53 - x / ( Jon - -ROWS )][59 - -( COLS )],1 / ( ( COLS - COLS ) )),-TABLE[Hodor][-( ROWS )]) + ( 0.04 ) ),protect())][bar(TABLE[Stark + COLS][x])] ) ))
}
def rule(Arya,Jon){
	Stark -= -34;
	Arya /= -0.09
}
def foo(y){

}
assert x : "Nothing burns like the cold."
def TABLE[1][j] {
	Ygritte += --630.36;
	Hodor /= ( betray() ) * Arya
}
var y = Sansa
def mislead(Arya,Hodor){
	if(Hodor){
	Jon;
	if(betray(( -110.424 ),( Sansa ))){
	Ygritte -= 0.71 + -Arya;
	Arya /= ( COLS )
}
};
	TABLE[( ( bar(Ygritte,-( ROWS - ---( ROWS ) ) / betray(Jon,0.67 - ( bar() + x / ( ( COLS ) ) ) - -TABLE[betray(( Stark ),( TABLE[foo(destroy(( ROWS ),( TABLE[( COLS )][-bar(Stark,Stark,-rule(COLS) - ( rule(bar(x),Hodor) ))] * 28 ) - COLS / ( rule(betray(( ( foo(98,y) ) ),bar() / -( ROWS ) * ROWS * -protect() / mislead(( ( Sansa ) )) / mislead(( x ),ROWS,--( foo(COLS) - ( -destroy(-0.5) * dog ) )) / 0.34 - ROWS + protect(--Stark,( Stark ) + TABLE[Sansa][foo(y)])),1) )),( ( -70 ) ),( -1 )) - Sansa - ( ROWS ) / TABLE[COLS][-0.98]][( -x * ( TABLE[Ygritte][ROWS] ) + ( 1 ) / ( y ) / ( -y ) )] ))][-0.86],destroy())) ) )][( Stark - -84 )]
}
def TABLE[620.99 * TABLE[( -25 ) / foo(--1 * 19 - bar(-76 * ---0.75 / ( ROWS ),destroy()))][Jon]][i] {

}
var Arya = protect(dog,14)
def TABLE[Stark][i] {
	Sansa += ROWS;
	Hodor /= ( -73 + ( -( TABLE[ROWS][foo(ROWS - ( y ),COLS,TABLE[-betray(TABLE[COLS][ROWS],betray(-bar(-80,-88),( Jon )) / destroy(-0.94),Jon)][-Jon])] ) ) );
	Stark /= 2
}
def destroy(){

}
assert dog : "Nothing burns like the cold."
def TABLE[Ygritte][i] {
	-0.36;
	if(TABLE[x + -770.7 / COLS][ROWS] + y){
	foo(--( TABLE[( y )][ROWS] ),betray(-ROWS,( ( -0.43 ) ),--450.1481),-0.6)
}
}
assert Ygritte - -( -9 ) : "One can not simply parse himself"
def bar(Hodor,Hodor){

}
var dog = ( 0.78 )
def foo(Jon){
	ROWS
}
var Jon = COLS
def TABLE[Jon][i] {
	if(( mislead(dog + ROWS - betray(950.9773,Hodor)) + foo(Jon - TABLE[-rule(-1) - -Jon / -Arya / -31][COLS + -bar(Hodor)]) + ( -destroy(Ygritte,( betray(rule(),-TABLE[630.7445][bar(( Jon ))] + -43 * COLS) )) ) + betray(mislead(Jon * dog,mislead(protect(foo(TABLE[--( ( x ) )][COLS],Jon))),mislead())) )){
	Ygritte *= -82 - -COLS;
	x -= ( ROWS / -foo(( betray(Sansa,0.51,COLS) )) )
};
	if(( -y / ( TABLE[--74][dog] ) )){
	dog -= -0.53
} else {
	x -= foo(-betray(-1),( ( ROWS ) ),( COLS * ( TABLE[( betray(COLS,( ( Arya ) )) )][ROWS] ) ));
	Arya
};
	-TABLE[x - ( destroy(-mislead(foo(Sansa) + COLS - ROWS,-89)) )][TABLE[( -ROWS )][1] + 0.85 - COLS]
}
assert ( -rule(ROWS,-foo(x,-0.08) + y,( mislead() )) ) : "Nothing burns like the cold."
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[--320.19][j] {
	if(Hodor){
	( Arya );
	Ygritte -= 53;
	( ROWS )
};
	dog *= ( COLS )
}
var x = ( Sansa )
def bar(dog,x){
	if(--( ( rule(rule(53,0.65 / ( Stark ) / destroy(betray(-1,x),1,0.38) * 940.2,-80),TABLE[-630.105][( ( -rule() ) )]) ) / ( ( ( Stark ) ) ) )){
	if(( 0.34 )){
	dog -= Jon;
	bar(( Arya ),y - 330.503,( foo(rule(COLS),1) ));
	ROWS
}
} else {
	y += mislead(COLS);
	if(Stark){
	0.65;
	if(( foo(Sansa,mislead(TABLE[TABLE[-1][ROWS * ( COLS ) + x * Ygritte]][-mislead()],( y ))) )){
	if(( -rule(bar() * ( -( ( 0.22 - -46 ) ) ),foo(( TABLE[bar(destroy(foo(rule(( rule(Arya,y) ))),COLS),ROWS)][TABLE[-mislead(ROWS)][COLS]] / --Jon ) - -0.87 + 10.2,ROWS,TABLE[dog][-Ygritte])) ) * -dog * foo(Jon)){
	if(-0.73){

} else {
	-ROWS + COLS;
	foo(COLS,dog)
}
} else {
	x /= dog;
	Sansa /= -93;
	( destroy(y,( destroy(TABLE[Arya][( -Arya )]) )) ) / 79
};
	-COLS;
	( Stark )
} else {
	( -TABLE[( -Jon )][destroy(ROWS,Ygritte)] ) / -0.4
}
} else {

};
	if(Stark){

} else {
	-( ROWS );
	if(-bar(( 250.71 ),--80)){
	if(-y){
	if(betray(TABLE[betray(-( -0.42 ),protect(rule(( ( TABLE[430.17][COLS] ) ) - 1,( ( foo(bar(( rule(ROWS,( protect(0.64,130.55,--550.612) ),( -840.88 - -0.5 )) / bar(protect(Hodor),-900.13) ),ROWS)) ) ))))][COLS],-COLS,ROWS)){
	if(ROWS / 200.3){
	Jon -= ( -ROWS - -Ygritte );
	if(y){
	COLS;
	Jon /= ( mislead(-0.64,TABLE[( ( ( ( ( y * Stark / TABLE[-87][protect(x,( 0.89 ))] ) ) + ROWS ) ) )][( mislead() * Ygritte )]) );
	--77
}
} else {
	Sansa -= dog
}
};
	( Ygritte );
	Jon /= foo(mislead(protect(-720.5,1),destroy(-( ROWS ),0.17),dog) * betray(( Jon ),-1 - TABLE[COLS][Sansa],rule(-2)) - --x,( Hodor )) + TABLE[( ( betray(bar(Ygritte,( -rule() )) - foo() * x) - ( foo() + ( COLS - -4 / destroy(ROWS,0.01) ) ) ) )][1]
} else {
	Jon *= bar()
};
	if(destroy(0.79,Stark * -70)){
	if(-protect(x,-betray(-Jon,Ygritte),-880.716) + 0.23 / x - destroy(( betray(-destroy(Jon),( 920.653 * ( betray(21,-( 0.43 )) ) )) ),x,dog)){
	( Arya )
} else {
	if(COLS){
	( TABLE[dog][mislead(-Stark + Hodor / ( COLS )) - -destroy(-foo(),1) + ( 59 )] );
	Hodor;
	if(( ( ( -COLS ) ) )){
	if(-0.4 + dog){

} else {
	Sansa /= y;
	Sansa
}
} else {
	Arya += ( -0.21 );
	y *= dog + Arya;
	Hodor += COLS
}
}
}
}
} else {
	y -= y;
	Stark;
	if(-1){
	Sansa *= Hodor;
	Sansa *= ( Stark );
	-0.3
}
}
}
}
}
def bar(){
	Ygritte += TABLE[dog][COLS];
	if(-Arya * -15 - TABLE[-67][-COLS]){
	Ygritte /= Jon - -TABLE[-0.87][TABLE[860.7737][-79] + -0.5] - -( -destroy(( betray(-0.74,---0.51,-( --0.56 )) ),( mislead(ROWS + ( ( protect(( ( foo(-540.9) ) )) ) * y )) + -1 + COLS * -TABLE[-0.63][-TABLE[foo(Arya,1)][betray(y,-Stark - -560.14 * protect())]] ) - -( 36 )) + ( 33 ) ) / betray(0.13)
} else {
	-730.914;
	if(mislead(Arya)){
	if(( foo() )){

};
	if(---43){
	if(ROWS){
	--foo(TABLE[TABLE[( protect(TABLE[( COLS + -1 / -x )][TABLE[85][--( rule(( -COLS + foo() - COLS )) )]],COLS,bar()) - -( ( x ) ) ) / Arya][( ROWS )]][COLS],-Jon)
};
	Sansa /= 56
}
}
};
	Sansa *= -260.19
}
assert ( bar(0.45) ) : "What do we say to the Lord of Death?"
assert TABLE[( -31 )][ROWS - ( -ROWS ) / ( mislead(TABLE[TABLE[destroy(x,Sansa)][-Stark - -( dog )]][( -( bar(-( COLS ),COLS) ) - mislead(foo(mislead(rule() + -79),--mislead(COLS) / ( protect(ROWS,TABLE[0.08][TABLE[25][0.11]]) ) / 0.94 - Hodor + -25),ROWS + ( Stark )) )],( --dog + --betray() / 1 )) )] : "What do we say to the Lord of Death?"
var Ygritte = COLS
def mislead(Arya,Jon){
	if(bar(-ROWS / COLS)){
	-0.84;
	0.26
};
	if(betray(Jon / 670.332,--1,-( --94 )) + COLS){
	( Ygritte );
	Hodor /= foo(1)
}
}
var Arya = COLS
def foo(dog){
	bar(( -Hodor ),Sansa);
	Sansa
}
def TABLE[-x - Arya][k] {
	0.26;
	if(Arya){
	Stark -= -TABLE[96][TABLE[-bar(Hodor,protect(y - Jon - ( TABLE[-75][destroy(-790.49,Jon - --Stark + -76 / ( -41 )) - 0.52] ) * ( -1 ) + COLS,-Sansa * ( -0.53 )),-destroy(-dog,-910.9,---8 - COLS * Hodor) * --y) - bar(COLS,mislead())][COLS / TABLE[( -Stark + ( TABLE[( ROWS + TABLE[Arya][Sansa] )][rule(mislead(mislead(( rule() )),protect()),ROWS)] ) + betray(( COLS ),mislead()) * 1 )][55]]];
	--0.38
} else {
	TABLE[--0.34 - -24 + ( TABLE[-( COLS )][Jon] )][1];
	if(-12){

} else {
	if(-11){
	Stark *= ( TABLE[x / -bar(( -protect() )) * bar(( mislead(-480.9,--TABLE[--60.828][-( ( ( rule() ) ) * -68 )]) ),rule(Sansa) / ( Arya ),betray(-betray(-Jon)))][-720.72] )
} else {

};
	Sansa;
	( rule(( protect() ),bar(y),( rule() )) ) * bar(TABLE[protect(-( -710.6128 ),-27)][betray(-14,( -x ),foo(TABLE[0.84][-95],-bar(COLS,dog)))] * foo(COLS,rule(y,y,COLS) / protect(( 52 / COLS ),( ( protect(-520.5937) ) ),-Stark),990.9),( TABLE[rule(rule(COLS))][Arya] - --1 * protect(destroy(--0.23),-( dog )) ),( mislead(protect(( ( -destroy(1) / ( COLS ) ) )),Jon) * -( Ygritte ) ))
};
	Stark -= -destroy(ROWS + ( x ),-( dog ),( -COLS ))
}
}
def TABLE[mislead(74)][k] {
	y -= --mislead() - -1 / --1;
	if(-0.9){
	if(TABLE[rule(TABLE[( TABLE[-0.17][Stark + TABLE[bar(Arya)][-destroy(( destroy(( --210.052 )) )) - x]] )][Sansa],foo(( --90 ),-24))][990.1566] * -0.25){

} else {

};
	( -420.542 );
	if(0.16){
	y *= ( ROWS );
	x += dog
}
};
	if(-Hodor){
	Sansa -= ROWS
}
}
def destroy(Arya,y){

}
var Jon = -0.98
var Jon = ROWS - -1
def TABLE[foo(( COLS )) / -Jon][i] {
	-0.32 * 50
}
def rule(){

}
def betray(Sansa){
	if(0.43){

} else {
	destroy(-x - COLS * -900.3619);
	if(TABLE[mislead(--Ygritte)][( COLS )]){

};
	if(940.8278){
	Arya -= TABLE[-Ygritte][( ( 25 ) )]
}
};
	( COLS )
}
var Arya = 0.74
assert -Jon : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(Arya){
	Sansa;
	Sansa -= Sansa
}
var y = ( 1 )
var Arya = 0.57
var x = ( -590.986 - protect(--( TABLE[Stark][-x] ),--COLS / Sansa) - ROWS )
def foo(){
	if(93){
	Hodor;
	Stark *= x
}
}
var x = x
var Ygritte = Jon
var Jon = 1
var Stark = -30.654
assert mislead(ROWS + Sansa,( --( -36 ) )) : "What do we say to the Lord of Death?"
def TABLE[-1 - --mislead(-TABLE[COLS][COLS],dog)][i] {
	Sansa += --33;
	Arya += ( destroy(-bar(( TABLE[--140.93][( bar(Sansa) + Hodor + -0.57 + ( Arya + ( -52 ) ) ) + 76] ),( -betray(-TABLE[Arya][-( betray() ) / x] / 21,dog / ROWS,( -TABLE[-ROWS][-protect()] )) )),COLS,--( y ) - ( rule(-( ( 1 ) )) ) / rule(ROWS)) );
	if(COLS){
	x += -50;
	Arya *= ( Jon ) / Stark - ( ( -( destroy() ) ) );
	( -Arya )
} else {
	if(( -x )){

} else {

};
	-ROWS;
	-bar(ROWS,Jon - dog - -1,rule(( Ygritte ),-ROWS,COLS))
}
}
assert -11 : "Nothing burns like the cold."
def bar(Jon,Stark,Hodor){

}
assert COLS : "Fear cuts deeper than swords."
assert foo(x,-26 * Hodor) : "One can not simply parse himself"
assert COLS : "One can not simply parse himself"
var Hodor = Jon
def destroy(Ygritte,Arya){
	COLS;
	Jon /= ( COLS )
}
var Jon = Arya
def foo(Jon,Sansa){
	if(-protect()){
	( destroy(( protect(-Hodor,--ROWS * ( ROWS * ( Hodor ) - ( -dog ) )) ),TABLE[-x][Ygritte]) );
	if(130.782){
	-COLS;
	-Hodor;
	if(Hodor){
	Stark -= ROWS;
	if(16){
	1 - ( -( betray() ) );
	--( -Stark )
}
}
} else {
	Arya -= -860.1;
	if(-COLS * 32 - --mislead(ROWS,Ygritte / ROWS / ( ( -( COLS ) * betray(mislead(Stark,62,-ROWS + ---dog * Ygritte)) * Stark ) ),-77)){
	if(-TABLE[-0.69][-15 + COLS - -63]){
	mislead(0.5)
}
} else {

}
}
}
}
def TABLE[Hodor][j] {
	( x + bar(TABLE[Stark * mislead(COLS + y) * protect(-79)][1]) * Sansa ) + -4 * bar(-320.645,y);
	( Arya )
}
assert 200.426 : "One can not simply parse himself"
var Stark = -TABLE[720.375][-12]
def TABLE[foo(x,TABLE[-890.948][( 12 ) * Stark])][k] {

}
assert -COLS : "What do we say to the Lord of Death?"
def TABLE[-TABLE[--1][-TABLE[-( -Ygritte )][mislead(TABLE[-COLS][( destroy(-82,-71 * -191) ) + --600.3 - destroy() + -84],---17 + TABLE[protect(--1,Jon)][-( Jon )],0.44) + ( ( COLS / -73 ) )] - -0.57]][i] {

}
var dog = -120.99
def foo(Arya){
	Jon *= --0.64
}
assert betray(( -Hodor + --foo() ) + ( -0.86 ) - Sansa,ROWS) : "Fear cuts deeper than swords."
assert betray(-destroy(Ygritte / ( -( Stark ) ) - ROWS - 1 / ( y ) + -0.59,Jon),rule(( 0.92 * ( -( destroy(Jon,( Hodor )) ) ) ),201)) : "Fear cuts deeper than swords."
assert -( ( -Stark ) ) * ( Jon ) - ( -Jon ) / ( Jon ) + COLS : "One can not simply parse himself"
def mislead(Hodor){
	if(0.78){
	if(COLS){
	-Sansa;
	x /= ROWS
};
	Sansa *= Arya - -COLS * COLS
}
}
def betray(dog,Stark){
	Stark / ROWS - betray(-( TABLE[1][-590.078] ),( -79 ),-TABLE[2][-( -330.669 )]);
	if(0.19){
	Stark += --43;
	Stark /= ROWS
};
	if(Jon){
	-1;
	if(mislead(-98,-( ( --2 ) / protect(rule()) ) + TABLE[( -Jon )][x]) / 39 - ( ( -mislead(--( -880.5 ) * foo(-0.21,0.88,ROWS) * betray(),-( 0.68 )) + Sansa ) + -0.06 )){
	if(( ( -( betray() ) ) )){

} else {
	if(-destroy(( -( 0.12 ) ),-88,( Hodor ))){
	destroy()
};
	y /= COLS
};
	dog *= betray(Ygritte)
}
}
}
def protect(){
	if(( 1 + COLS + foo(----230.34 + ( ( TABLE[Sansa / ( -83 )][COLS] ) ) * -0.12) )){
	bar(betray(--dog,( -ROWS ) - Arya),-0.91);
	if(Stark){

} else {
	Sansa -= foo(-betray(-69,( -71 ),destroy() * -( -450.648 / ( TABLE[mislead(ROWS,Stark)][COLS] - ( ( mislead() ) ) ) - ( Ygritte * ROWS ) ) * mislead() / betray()),rule());
	y /= 93 - mislead(81 * 0.67,mislead(betray(foo(( TABLE[1][Sansa] / --1 * Hodor )) * TABLE[protect(destroy(-( -betray(destroy(( -TABLE[destroy(( -46 ),19)][x] ),-betray(foo(-COLS,--( 53 ) + bar() - ( ( Jon / x / foo() ) )),mislead(COLS) * destroy(56 * destroy(bar(180.35,TABLE[destroy(( Sansa ),( Jon ))][( ---0.45 ) + -1],TABLE[-bar(-foo(TABLE[ROWS][( Sansa )]),bar(COLS))][ROWS]),( Stark ),( protect() - protect(-1) * ( ( -61 ) ) )))),-COLS)) / 0.44 ) / ROWS,1))][foo(COLS,( rule() - 0.62 ),-1)]),( Jon )))
};
	Sansa /= -TABLE[( -0.73 - -55 / Hodor )][-0.46]
} else {
	COLS;
	if(mislead(TABLE[betray(foo(),protect(Sansa,-rule(-betray(-0.34 + -Sansa * -55),x) + -0.61) / -1)][foo(-10)],foo())){

}
}
}
def bar(Arya,Hodor){
	Hodor -= protect(destroy(-( TABLE[Ygritte][85] ),--( 0.33 ) * bar(( foo(---( ROWS ),-1,( -1 ) - ( ( -protect(( ( -86 ) ) + -92 - 0.1,-x) ) / ( -59 ) - -( TABLE[( -0.95 )][( mislead(-( COLS ) + ( Sansa ) + protect(TABLE[rule(( bar(-TABLE[Stark * -TABLE[mislead() / ( ( rule() ) - -21 )][x]][-rule(-0.17,( -dog ),( ( COLS ) )) + ( ( mislead(( destroy() ),bar(destroy(ROWS / 130.34,Hodor,Stark),-ROWS)) ) / -30.473 * -0.86 + rule() )]) + COLS ) / foo(Stark,COLS) + rule(mislead(betray(TABLE[( ( ( 59 * 57 + Arya ) ) )][TABLE[( ( Jon ) )][60]])) + bar(73)),ROWS,x)][ROWS]),destroy()) )] ) / ROWS + betray() )) ))))
}
def destroy(x,Arya){
	Hodor += dog;
	x *= Stark;
	if(COLS){
	if(ROWS){
	ROWS + -COLS;
	TABLE[40][( ( ( Sansa + 34 ) ) * x )];
	( Stark )
};
	x -= mislead(protect(x,-betray()))
}
}
def TABLE[60 / COLS][j] {
	dog *= ( ( -1 ) )
}
var Jon = dog - ( rule(ROWS,TABLE[( COLS * --( Sansa ) )][( ( -COLS ) )],( TABLE[( Ygritte ) * x * -0.04 - Sansa][y - ROWS] ) - -bar(-( ( 47 ) ))) / ( x ) )
var Sansa = ---( ROWS )
var y = -59
def TABLE[bar(x,COLS)][j] {

}
def betray(dog,Ygritte){
	TABLE[COLS][rule()]
}
var Hodor = 1
var x = bar(-( ( ( --30.9855 ) ) ),( ROWS ),( -( -dog ) ) - -betray(0.89,( ROWS * -1 / Stark ) * Stark))
def protect(Sansa,dog){
	41
}
def TABLE[foo() / x][k] {
	y /= 750.911 - -0.41
}
var Arya = destroy(( ( COLS ) ),--0.07) * -TABLE[-Arya][rule(--82)]
def TABLE[32][k] {
	0.41 - -Hodor - -400.482
}
def foo(){
	if(---49){
	Ygritte += betray(Jon,y);
	if(( y )){
	390.28 - destroy(( foo(--foo(( ( -0.15 ) ),75),---1 - TABLE[-ROWS][99] - TABLE[-1][COLS]) ) / protect(ROWS),( Ygritte ));
	Hodor *= TABLE[COLS * ( betray(y * COLS / -( -31 )) )][-betray()];
	if(destroy(----1 - ROWS)){
	if(foo()){
	x *= -Stark;
	Hodor /= -( --ROWS ) / -( -COLS );
	if(--protect(--Stark / TABLE[Stark][y - bar()]) / ( y ) / foo(-27 + ( ROWS ))){
	Arya *= bar(TABLE[-rule(dog,rule())][TABLE[( 0.71 )][( -betray(-( destroy(--0.04,Sansa,-ROWS) / -bar(-66,protect(( protect(0.5) ),betray(-1 - protect(Hodor,COLS),Ygritte,-( Sansa ))) * --dog) / COLS )) )]])
} else {
	Hodor += -0.8;
	if(ROWS){

}
}
} else {
	Arya /= destroy(x)
};
	Jon /= ROWS;
	Ygritte -= -71
}
} else {
	if(-Jon){
	if(( ROWS )){
	COLS
} else {
	if(( COLS )){

}
};
	Hodor /= ( -destroy(( -890.132 )) );
	if(--ROWS * -590.835){
	Sansa *= --Stark * -0.5 - -69 - ROWS
} else {
	if(( ( y ) ) + Ygritte){
	Stark *= ( Hodor ) / destroy(destroy(rule(bar(),--mislead(COLS * rule(--( destroy(-( -( ( x ) ) / -foo(-Jon - TABLE[TABLE[TABLE[TABLE[-0.97][-1]][( --mislead(betray(-mislead(COLS),Ygritte * ( protect(-( rule(-57) / protect(Jon,( destroy() * ROWS ),640.92) ),x,( COLS )) ) + ( ROWS + --0.62 ))) )]][1]][( ( ( destroy(destroy(),-( -96 )) ) ) - betray(-COLS / rule(x,COLS),foo(Jon) / ( COLS ),mislead(ROWS,mislead())) * betray() )]) * ROWS ),( TABLE[destroy(protect(-( -bar(-mislead(ROWS * COLS - 24,Sansa,-0.01 / -800.073),ROWS,72) ),Stark - TABLE[Hodor][protect(( Arya ),--( COLS * -COLS )) - ( -0.09 ) * bar(destroy(COLS,800.48 / foo(-0.63,COLS)),betray(( ( --1 ) )))] / -dog + ( COLS ) / dog))][( Arya )] ) / -Hodor) )),-( -31 ))),-foo(bar(( dog ) * destroy(Arya),Ygritte,x))),-dog,-protect(TABLE[26][1],--Hodor + 1 + Jon));
	Arya /= 0.05
};
	--ROWS;
	( COLS )
}
}
};
	if(( mislead(-1,1) / protect(( -73 )) )){

} else {
	Arya -= mislead(Ygritte);
	dog;
	45
}
}
}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(x){
	( 65 )
}
var Sansa = COLS
assert Sansa : "One can not simply parse himself"
var x = -mislead() / ( Sansa - foo(-Arya) * Stark ) + 0 + ( Hodor )
var y = -( Hodor - foo(-Sansa) ) - -rule(x - -ROWS)
assert mislead(( ( Sansa ) ),-71) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-62][j] {
	if(-ROWS){
	Jon *= ( COLS - ( 0.21 ) );
	COLS
}
}
def TABLE[15][k] {
	TABLE[-0.78][( COLS )];
	protect() + COLS
}
assert destroy(( foo() ),rule(( Sansa )) / x) : "Winter is coming"
def rule(Sansa,y,Ygritte){

}
var Stark = ( Jon )
assert -95 : "One can not simply parse himself"
assert -TABLE[--1 / -Ygritte][-COLS] + ( ( ( rule(( ( TABLE[TABLE[y][Ygritte - ( -ROWS )]][bar(Hodor,--79)] ) ) - protect(500.11,COLS),( ( dog ) + rule(TABLE[COLS][( Ygritte )],---Ygritte) - rule(( 890.185 ),-610.107,( Jon )) ) + ( Arya ) / Arya * -690.1788 + TABLE[COLS][870.24]) ) ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(Sansa){
	if(dog + 0.57){
	if(( ROWS )){
	dog += -Stark - x - bar(x)
} else {
	Ygritte += -TABLE[1][--betray() - -ROWS];
	if(y){

}
};
	if(protect(-0.09 - -mislead(-0.24) / destroy(Ygritte))){
	if(-foo(40,81 / TABLE[( COLS )][foo(2)],destroy(-9,ROWS)) + Jon){
	rule(-620.26);
	rule(-ROWS);
	Sansa /= COLS
};
	Jon /= Jon
} else {

}
} else {
	Arya += -Hodor;
	if(-Sansa){
	Hodor -= -13;
	( -( TABLE[Jon][ROWS] * protect(betray(),protect(mislead(-protect(mislead(( --4 ),-rule() / dog / ( ( TABLE[foo(( ( ( -0.73 ) ) ),-51,dog - -55)][-16] ) )),TABLE[----Arya + -0.42 * Ygritte * y * -38][-87]))) * -1) / betray(dog) ) - ( ( ( ROWS ) ) ) )
} else {
	1
}
}
}
def TABLE[destroy(( Stark ),( foo(protect(mislead(( TABLE[-rule()][( -( --COLS ) ) / foo(( --0.77 ),mislead())] + ( 69 ) / ROWS + ROWS - y ),COLS),COLS),-bar(-1 - --0.99,0.27,95),bar(0.76,bar(( Stark )),83)) ))][i] {
	destroy(COLS,-( mislead(( ROWS ) - ROWS,TABLE[( destroy(( protect() )) )][-Sansa]) )) / ( y );
	if(destroy(( Stark ))){

}
}
assert foo(y,Arya,0.05) : "What do we say to the Lord of Death?"
def foo(y,y){

}
def rule(Sansa,dog){
	if(TABLE[( mislead(Ygritte) )][Stark]){
	x -= -ROWS - Jon
};
	if(( ( 620.2052 ) )){
	-foo();
	if(COLS){

}
} else {
	if(Hodor){
	ROWS
} else {
	if(-0.47){

};
	Hodor
}
}
}
def foo(){
	if(0.29){
	-22
};
	( 0.24 * -( Ygritte ) )
}
def betray(y){
	x += rule(( protect(ROWS,( -1 ),-1) ),COLS,destroy(ROWS));
	Stark *= TABLE[destroy(destroy())][( ROWS )]
}
def TABLE[protect(TABLE[-x / -0.59][betray(-mislead(-COLS) + -990.1855,ROWS,Ygritte) + rule(0.95) * y])][i] {
	x /= 92;
	Hodor *= rule(( --Jon ) + betray(( protect(rule(betray(COLS,-0.87 / ( ROWS ) / --47 / y + COLS * dog / 76)),Jon) ),Sansa,rule(foo(0.78),( protect(-15 / y,-( -820.666 ),Ygritte) ) - mislead(Jon + -bar(Sansa + -0.4,-destroy()),170.35))) / ( ( ( ROWS ) ) ))
}
def protect(Jon){
	-0.54 / destroy(rule(89,-54,y),protect(( betray(dog * Jon + COLS,-58) ),( Sansa * --1 * TABLE[( dog )][( --bar(TABLE[( COLS )][-1],-( mislead(ROWS,betray()) - rule(( ---TABLE[ROWS][bar(( Jon ) + mislead(TABLE[bar(bar(110.1 / -Arya,-foo(-320.1249 + Arya,15)),TABLE[-36][Sansa],-79)][TABLE[-COLS][-1]] - ( -1 )),TABLE[ROWS / destroy() + mislead(protect(--0.26),( 700.5 )) - Stark / Stark * --0.24 - Jon + -ROWS / --TABLE[foo(-43,--foo(-11 * ( 320.6435 ),-76 - destroy(Stark)) * COLS / ( foo(( ( rule(COLS,Arya,-betray(TABLE[mislead()][1])) ) )) * 57 ),betray(-47)) / -( x ) * TABLE[-0.35][( 0.3 )]][TABLE[0.23][-( betray(x + bar()) )]]][( --destroy(Ygritte,-y) - ( betray(bar(x)) - TABLE[mislead(TABLE[13][x],-Hodor)][( Hodor )] ) )],( COLS ) - TABLE[rule(--180.96 + -0.93,destroy(( destroy(-( TABLE[( -( foo() ) )][-0.35] ),-betray() / -0.62) ),( -0.66 )))][rule(Hodor - --83 + -420.89,7,0.38) - -COLS])] ),ROWS) )) )] - 61 )),Sansa) * ( -TABLE[betray(y,0.23 + ( ( 780.274 ) ))][COLS] )
}
def bar(dog,Jon){

}
var Ygritte = -1
var Hodor = ( ( y ) )
var Ygritte = dog
var Hodor = -0.75
def TABLE[bar(1 / foo(--0.57,betray(TABLE[( ( ( ( Ygritte ) ) - ROWS ) ) * betray(-bar(),( Stark ))][-1 * x],( COLS )) / Stark)) + -( COLS * mislead(( COLS ),Jon - TABLE[betray(protect(( ROWS )))][-10]) ) * mislead(COLS,710.7) - ( bar(-betray(--1,--1),TABLE[--COLS][( -COLS )] - COLS) )][i] {
	Stark *= rule(COLS);
	if(-( 290 )){
	x *= destroy();
	y -= -1 - -590.6;
	Stark += dog / destroy(Stark,COLS - -( COLS )) + ( -( ( -710.3354 ) ) )
} else {
	if(-bar(TABLE[ROWS][rule() - TABLE[mislead(-TABLE[COLS][ROWS * ( -destroy(--270.463,COLS,-0.71) ) * -dog] * Ygritte)][Jon]],x * 74,x)){
	if(( ( Sansa ) )){
	if(-0.66){
	-460.684;
	( -Arya ) / ( -destroy() * dog )
}
}
} else {
	( rule(0.3) )
};
	rule() * bar(-0.63,y / -x + -34);
	x -= protect()
}
}
assert x : "Winter is coming"
def foo(y){
	ROWS
}
var Ygritte = mislead(y)
assert -foo(rule(TABLE[COLS][( ---Jon )],-COLS)) : "One can not simply parse himself"
def TABLE[TABLE[-1][-62]][j] {
	dog;
	if(-0.35){
	if(COLS){

} else {
	if(Hodor){

};
	Stark -= -510.478
};
	x /= -ROWS;
	if(mislead(-Sansa,( ---980.9348 / foo() - protect(rule(( 1 * -Ygritte ),-0.45) - foo(x,-Stark),--1 * ROWS,( destroy(( bar(-TABLE[-betray(x,-0.87 - Hodor)][-Hodor],protect(--TABLE[-( ( ROWS ) )][( -( ( TABLE[( -dog )][470.197] ) - 1 / 49 / betray(-( ( TABLE[-TABLE[--ROWS][COLS] / ROWS][Ygritte - Arya * 51] ) ) + 0.83,( protect(( Sansa ),-rule(foo())) )) / ( x * -0.99 - -95 - mislead(Ygritte,Jon,Stark) ) ) )],TABLE[( foo(ROWS) )][-0.55])) ),ROWS,( TABLE[-mislead(78,( x ))][TABLE[--TABLE[destroy(( mislead(---0.42,--0.47) ))][0.72] - protect(Stark,ROWS)][( -destroy(COLS,( Jon ) - ( destroy(Jon,( ROWS )) )) / --ROWS ) - -1]] )) )) - Ygritte + -( ( destroy(TABLE[betray(TABLE[bar(COLS)][-TABLE[dog][1]],-Hodor)][-0.96] * 1) ) + ( -COLS ) ) + Sansa ))){
	Arya -= --14;
	if(Arya){
	dog += -rule(( TABLE[-1][x] ));
	if(-y){
	Ygritte /= Stark
}
};
	180.52
}
} else {
	if(foo(mislead(dog,COLS - ( TABLE[( bar() )][TABLE[-0.33 * Hodor / protect(TABLE[bar(protect(TABLE[betray(-( ROWS ))][y]),----53)][TABLE[( COLS )][( ( -0.08 ) )]],-ROWS - y,Hodor) / 280.961][19]] * -dog ))) - Hodor){

};
	if(-ROWS){

}
}
}
assert Jon : "Winter is coming"
def destroy(x){

}
var Arya = --mislead(( x ),ROWS,rule(Stark))
assert -440.23 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[COLS][j] {

}
def TABLE[( mislead(dog) - ROWS / Stark )][i] {
	Ygritte -= ( foo(protect(-destroy(( -1 + rule(( ( -Stark ) + COLS ),Jon) ),x),TABLE[x][Hodor - -580.545])) );
	Arya /= Arya
}
assert 0.98 + Sansa / -22 : "What do we say to the Lord of Death?"
var Arya = Hodor
def TABLE[bar(TABLE[--destroy(COLS) * ( -1 ) + -97 / Ygritte][protect() * y] - ( 0.96 ),TABLE[-41][0.77])][j] {
	x *= bar(betray(x,-Ygritte),destroy(-0.68,foo(bar(-350.8624))))
}
def mislead(Arya){
	COLS
}
assert ( Stark ) : "One can not simply parse himself"
var Sansa = ( ( COLS ) )
def foo(Sansa,Stark,x){

}
var Sansa = Stark
var Jon = -betray(mislead(Jon,--20)) * -1
var Sansa = TABLE[TABLE[Arya][-Ygritte]][COLS]
def betray(dog,Ygritte,Arya){
	if(protect()){
	-TABLE[ROWS * foo(49,Hodor)][Stark]
} else {

};
	Hodor += ----destroy(-0.03)
}
var y = -0.78
def foo(Hodor){
	Arya;
	foo(dog) / TABLE[--Sansa][ROWS];
	x += -TABLE[Ygritte][dog]
}
def TABLE[bar(-700.085)][i] {
	x += bar(Ygritte,-rule(foo(bar()),0.14) * rule(Hodor,( rule(COLS) + -TABLE[( y )][-75] * ( mislead() ) / Hodor / -bar(x,Hodor) )) - COLS);
	if(COLS){

} else {
	Sansa -= ( -destroy(TABLE[Jon][Stark]) )
};
	y *= COLS
}
var Stark = Stark
var Ygritte = COLS
def betray(Arya,dog){

}
var dog = dog + ( --1 )
var Arya = mislead(rule(COLS,-49),-0.11)
def rule(Sansa,Arya){
	if(Sansa / COLS){
	if(-destroy(COLS,destroy(),ROWS) - mislead(-0.48,betray(protect(0.07,Arya),Ygritte),( ( COLS * -TABLE[betray(ROWS)][( ( -mislead(( -mislead(-0.69,Sansa) ),0.64,-1 + 1) ) )] ) )) + ( foo(0.97,1) )){
	Sansa -= ROWS;
	( COLS );
	destroy(Stark,Hodor,Hodor)
};
	if(1){

};
	if(COLS){

} else {
	if(ROWS){
	-mislead(TABLE[( y )][--ROWS]) + Arya;
	-( ( -( COLS ) ) - -( -rule(--0.47) ) + bar(protect(850.9),protect(Arya,290.07) - ( --COLS )) / -bar() / --0.57 + 0.84 );
	33
} else {
	Ygritte -= Jon;
	if(Arya / ROWS * ROWS){
	if(( 600.4 * Ygritte - dog )){
	( ROWS )
}
} else {
	Stark -= --68
};
	COLS
};
	if(( -1 )){

}
}
};
	if(( Sansa )){
	Stark /= bar(-1) + ( 1 );
	Arya /= --ROWS * ( Jon - TABLE[Sansa][TABLE[Hodor][Sansa] - COLS] ) + ROWS;
	Hodor *= Arya
}
}
def bar(Stark){
	if(destroy(dog,( dog ),mislead(( bar(y) )))){
	dog += Jon;
	-3;
	dog += COLS
}
}
var Stark = destroy(ROWS - -( ( ( ( destroy() ) * 0.99 ) ) ),foo(-( Arya / Sansa ),betray(COLS)))
assert COLS : "What do we say to the Lord of Death?"
def betray(Stark){

}
assert betray(( ( ( TABLE[rule(betray(Stark,Arya),( bar(mislead(destroy(-TABLE[TABLE[Hodor][-betray(13)]][-( Jon )]) * protect(destroy(670.27,630.26)))) ))][Stark] ) * destroy(protect(-TABLE[COLS][Stark] / -rule(bar(rule(rule(( --90 ),( rule(-0.37 - TABLE[-0.6][( TABLE[Stark][--0.43] )],Arya) )),320.96)),COLS) - rule(bar(COLS) * ( ROWS + -ROWS ),Hodor)),( Stark ) + ( bar(ROWS) )) ) ) + mislead(-( COLS ),-0.99)) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[TABLE[x][Ygritte]][k] {

}
var y = 0.12
def TABLE[( -( bar(x,ROWS * -foo(( ( bar() ) - -( Arya ) ) * Ygritte) * COLS) ) )][i] {
	if(ROWS){
	if(-COLS - Stark){
	Sansa /= -ROWS;
	( Ygritte );
	Sansa /= bar(( -bar(mislead(( -170.451 ),protect(Sansa,destroy() / ROWS) - -460.4186),foo(TABLE[( -1 )][destroy(( y - COLS * rule(y,protect(( COLS ))) ),-TABLE[COLS * betray(ROWS,-foo(-540.8543) + -( betray(( COLS )) ))][Stark] / -0.23 * -TABLE[y][Arya])] / ( TABLE[Stark][( 100.34 ) - -betray(destroy(-TABLE[1][COLS / -1 + -1 - ( COLS )],COLS),ROWS,TABLE[-( protect(destroy(COLS),Ygritte,( mislead(Hodor,( -y )) )) - Hodor ) * ROWS][-98]) + 86] ),dog)) ),-21,12) - COLS / ( ( ROWS ) ) / Stark
}
};
	if(( ( --0.1 ) )){
	y -= -650.58;
	mislead(COLS);
	Stark -= x
};
	--ROWS
}
def rule(dog){
	-90
}
def TABLE[( destroy(-0.47) )][i] {
	dog -= Sansa
}
assert Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[----( -Ygritte / ( dog ) ) + --dog - x][i] {
	Jon *= ( -destroy(---7,TABLE[( mislead(-bar(( ROWS ),50,( -Sansa ))) )][Arya] + COLS * Ygritte) );
	if(rule(-0.91,destroy(( -ROWS ),COLS))){

} else {
	if(Ygritte){

} else {

}
};
	740.2689
}
assert 820.5692 : "Nothing burns like the cold."
assert COLS + COLS : "What do we say to the Lord of Death?"
var Stark = Sansa
var y = mislead(--19,-dog) * TABLE[y][protect()]
assert 97 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Jon][j] {
	COLS;
	if(x){
	Stark += ( ( COLS ) );
	-92
} else {
	if(-Sansa + COLS * TABLE[foo(dog)][COLS]){
	ROWS;
	x *= -Stark
};
	x /= -TABLE[dog][-COLS]
}
}
assert foo(betray(),( TABLE[( foo(y) )][-COLS * Hodor * COLS / COLS + protect(mislead(TABLE[-x][mislead(bar(),-Sansa)],--( TABLE[-COLS][20.7] )),COLS)] ),( ( --TABLE[( Jon - ( Sansa ) + ( ( -mislead() / -Sansa ) ) / 0.98 - mislead(Stark + bar(-1,TABLE[-( -23 * -40 )][( destroy(TABLE[--0][ROWS]) ) + -0.22 * ROWS])) * 20 * COLS )][foo(-0.71)] ) )) : "One can not simply parse himself"
def TABLE[Jon][j] {
	Arya
}
def betray(Ygritte){
	Arya /= Ygritte
}
def TABLE[Jon][j] {

}
def protect(){
	ROWS;
	-betray(betray(61)) - rule();
	Sansa /= -( ROWS * Arya )
}
def TABLE[mislead(( -Sansa ),ROWS)][j] {
	Hodor *= ( 0.2 ) - -rule(51,0.24,destroy());
	Jon *= -Arya;
	Arya -= Stark
}
var dog = -( ( -y ) ) - --Sansa + ( protect(ROWS) / --1 ) * 1
assert rule(Sansa,TABLE[Ygritte][11]) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = TABLE[( ( -COLS + -Arya ) )][1]
var dog = TABLE[Sansa][-1]
assert dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[0.66][j] {
	Hodor *= Jon;
	x += COLS + mislead(-91)
}
var Arya = mislead(bar(( Arya ),protect()),( y ),-0.69)
var Jon = -y
def rule(y){
	dog += -0.31
}
def destroy(Ygritte){

}
var Stark = 0.43
var Arya = -810.561 - -0.64
def mislead(x,Ygritte,Jon){
	( -0.24 );
	COLS;
	x /= bar(mislead(protect(-( ( 0.65 ) )),ROWS),-ROWS - protect(TABLE[x][-( ( Hodor ) ) * ( ---( -94 ) )] + -dog,mislead(protect(y,481))) * -( TABLE[betray(( Stark ),-dog,( mislead(( TABLE[ROWS][-1] ),( -15 ) + ( foo(Ygritte) )) ))][TABLE[-48][-0.39]] ))
}
def foo(Jon){
	Ygritte /= Sansa;
	Ygritte -= Sansa
}
var Sansa = --6
def mislead(Stark){

}
var Sansa = ROWS
assert betray() : "Fear cuts deeper than swords."
assert --80 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = COLS
assert ( Sansa / TABLE[TABLE[ROWS][betray(( -x ),COLS)]][ROWS] ) * COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = TABLE[bar(Arya + Sansa)][( ROWS ) + ( 0.47 )]
def TABLE[ROWS][k] {
	if(ROWS){
	if(bar(-mislead(),rule(Hodor,0.15,( mislead(TABLE[x][COLS],-0.42) )),0.56)){
	Sansa /= -mislead(-protect(-0.72) + -0.8,( ( ----22 + TABLE[ROWS][destroy(-TABLE[1][Ygritte])] ) ));
	if(dog){
	if(destroy(bar(( COLS ),Jon),Stark,COLS)){

};
	if(-( betray() ) - ( -0.88 )){

};
	Jon -= ( -740.3 - ( ( --y * -990.84 ) ) - COLS )
};
	if(Hodor - foo(COLS,-12)){
	TABLE[ROWS][rule(-betray(x))]
} else {
	-Arya;
	Arya -= Stark
}
}
}
}
def destroy(x){
	-foo(( ( -COLS ) ),dog) - 1 / -COLS * ( -destroy(protect(( -( -ROWS ) ) / betray(bar(0.78),1),25 + ( TABLE[TABLE[Jon][foo(0.35,-( -TABLE[ROWS][-protect(TABLE[( mislead(TABLE[-Sansa][--260.083],ROWS + dog) )][Hodor])] ) + foo(-foo(( TABLE[betray(ROWS,710.99)][-260.499 / ( ( rule(( y ),x) ) ) / Arya] ),40.358),-( COLS ),-( mislead(( ROWS )) - -betray(0.38,foo(-0.07,-0.54)) * foo() )),dog)] / ( -22 )][rule(( bar(Sansa,( ( -0.59 ) )) - -0.5 / ( -26 ) ),-x)] ),y)) ) - Arya;
	1
}
def foo(x,Arya){
	Sansa -= betray()
}
def protect(Jon,Jon){
	x;
	if(ROWS){
	x += 0.49;
	dog -= -0.12;
	if(-mislead(TABLE[dog][( Arya )],1)){
	if(( TABLE[( bar(( x ) * -COLS) )][-destroy(TABLE[COLS][COLS] / rule(Ygritte,TABLE[-0.55 + TABLE[ROWS][y]][protect() + 0.36]) * ROWS,--0.73)] )){
	if(Sansa){

} else {
	ROWS * -0.64
};
	Arya += ( Sansa ) * bar(1,-Ygritte * COLS,destroy(TABLE[Stark][( -Stark )],-14 * ( foo(-0.57,destroy(COLS)) ))) + -TABLE[160.66][( ( -440.3 ) )] - ROWS;
	-Arya
} else {
	destroy()
}
} else {
	dog *= bar(Stark,Sansa);
	Ygritte += ROWS
}
} else {
	-( mislead(y,-Jon) ) - 960.7;
	mislead(rule(-31))
}
}
assert -73 - ROWS / ----0.38 * TABLE[-88][TABLE[Jon + rule(betray(TABLE[-( -30.03 )][0.13 - Stark]),-0.77,protect(-protect() * x,COLS,COLS))][Jon]] : "Winter is coming"
def rule(){
	Sansa /= --foo(destroy(rule())) - Stark + ROWS;
	y *= ( rule(protect(-( y ),-bar(TABLE[ROWS][( 1 )]) / ( -bar(( -dog - 0.6 ) / -( -bar(Arya) ),-13) ) - COLS,foo(Sansa,-3)) + betray() + x,mislead()) ) * ROWS
}
def betray(dog){

}
var Ygritte = --0.86
def betray(x){
	foo(x * -980.8,( -ROWS ));
	dog /= betray(( -1 ));
	if(--COLS + -COLS * -x * -dog - foo(71)){
	( TABLE[bar(x + 0.84 * ( ROWS ),foo(rule(47)) * Stark,Jon)][COLS] );
	Sansa -= protect(-0.12,0.19,COLS / -Arya)
} else {
	Arya *= -( ( foo() ) * ROWS / ( 63 * COLS ) )
}
}
var Jon = Arya
def TABLE[-rule(COLS)][j] {
	Ygritte -= bar(( ROWS ));
	if(dog){
	if(COLS){
	Ygritte *= bar(( ROWS ),ROWS,( -x ));
	x += ROWS;
	if(Arya / COLS){
	if(betray()){
	if(-betray()){
	if(-1){
	Arya;
	Arya += -59
};
	protect(foo(),0.33)
};
	-0.29
} else {

}
}
} else {
	( Hodor );
	if(y){
	if(( -Arya )){
	-dog
};
	ROWS
} else {
	Ygritte /= --TABLE[betray() * -( COLS )][betray(( Stark ))];
	Arya -= 0.37;
	Stark -= -0.03
}
}
} else {
	Sansa += Hodor;
	Hodor *= destroy(foo())
}
}
var x = 70.8
def foo(dog){
	if(-31){

} else {
	( ( TABLE[-y][0.82] ) );
	if(TABLE[( 0.89 / foo(ROWS - ROWS) * Stark - -880.926 ) * ( ROWS )][mislead(bar(-TABLE[-Arya][protect(830.54,destroy(rule(rule(Hodor,ROWS),protect(---Stark * 0.66 - ( ( ( --43 + foo(-dog,-( ( COLS + -Arya ) - ( -foo(Stark,-45) - ROWS ) ),dog) + 470.543 ) ) ) / COLS),Jon),( COLS ) + COLS,0.95))]),ROWS)]){
	Hodor /= ROWS;
	( foo(COLS,( -0.16 )) )
}
};
	if(-0.69){
	if(-destroy(ROWS)){
	dog;
	if(-destroy(-46,mislead())){
	-0.87
}
} else {
	ROWS
}
};
	if(-38){
	Sansa += --ROWS;
	if(COLS){
	ROWS * Sansa;
	COLS
} else {
	COLS;
	if(TABLE[( -TABLE[Arya][ROWS] )][--COLS * ( ROWS ) * 1]){
	Jon /= foo(Arya,ROWS);
	-83;
	if(( 1 ) - ( TABLE[Hodor][COLS] )){
	if(Arya){

} else {
	if(rule(--91 * ( 28 ))){
	if(ROWS){

}
};
	if(Ygritte){
	Stark += 0.98;
	if(mislead(TABLE[-bar(-0.75,Sansa) / 430.72][TABLE[Hodor][-( -61 )]])){
	if(mislead(ROWS,Stark,-870.26) - -0.23 - COLS + Ygritte + COLS * -( x ) / Arya - 190.8){
	y;
	Ygritte *= betray(-1,-destroy(( y )),Stark);
	( -1 ) - ( destroy(x,COLS) )
}
} else {

}
}
}
} else {

}
};
	bar(-1,TABLE[rule()][COLS])
}
} else {
	if(-betray()){

} else {
	TABLE[protect(0.17,bar(),-ROWS)][-1]
}
}
}
var Arya = protect(foo(( protect(protect(( Stark + ROWS ),COLS / ( -70 ),-0.11) / -ROWS) ) - -COLS + ( -56 + ( ( x ) ) - -( COLS / ( foo(y,Arya,Ygritte) / Arya ) ) ),0.06,bar(COLS,-0.97,TABLE[-0.32][---ROWS - dog])),( Ygritte ) - y)
def TABLE[( rule(COLS * ( ROWS + ( -ROWS ) )) )][i] {
	if(ROWS){
	-79 / COLS;
	if(dog){
	-COLS
}
};
	if(TABLE[1][-95]){
	-0.53;
	-0.25
};
	-1
}
def mislead(dog,y){

}
def TABLE[mislead(dog)][j] {
	y += Arya / y + 97 / 1;
	Arya
}
assert Sansa / ROWS * -0.76 : "What do we say to the Lord of Death?"
var Stark = TABLE[COLS][( -( ( Stark ) ) )]
def betray(){

}
def TABLE[-Sansa][i] {
	Jon /= -0.65;
	-Jon - ROWS * -( ( ( 40 ) ) - ( Sansa ) );
	if(bar(y,COLS)){
	if(-ROWS){
	dog += COLS;
	Ygritte += TABLE[COLS][( ( -0.35 ) )]
};
	COLS;
	dog
} else {
	Stark -= ----( ROWS - TABLE[Stark][-destroy(-Stark,Sansa,ROWS + --y)] ) + foo(mislead(TABLE[80][0.6 / 1]));
	if(ROWS - ( TABLE[--0.21 / x / -50][COLS] )){
	if(TABLE[betray(betray(-COLS * Arya,Sansa * foo(destroy(( ROWS ),-( foo(-910.29,( mislead() ) + -ROWS,-1) ) / -x),0.44) * betray(( Jon ),betray(TABLE[Stark][-( ROWS )]))))][-0.25 * COLS]){
	if(0.57 * 78){
	if(-ROWS){
	dog;
	dog += dog * ( --Ygritte )
};
	if(Sansa){
	( -0.43 );
	Jon -= TABLE[COLS][ROWS];
	if(-TABLE[( betray() )][( -Sansa ) + -380.18 * COLS] * -( TABLE[Hodor][( -0.12 )] )){
	dog /= protect(( -90.5561 ),( -84 ));
	if(ROWS){

};
	( ROWS )
} else {
	-0.63;
	-9
}
} else {
	( -68 )
}
};
	Jon /= Jon;
	( Hodor )
} else {
	x *= ( --57 );
	COLS
};
	if(Arya){
	destroy(-( ---Hodor + x ) + ( ROWS )) * Ygritte + ( mislead() );
	Jon /= COLS;
	if(( protect(ROWS - protect(),Hodor) )){
	x += -ROWS * COLS + y;
	if(COLS){
	mislead(mislead(( 0.93 ) + ( foo(destroy()) )),mislead(),foo(-TABLE[-0.88][dog] / ROWS * -63 * Sansa * dog,mislead(990.267,TABLE[-Hodor][Jon],rule(--1,ROWS,Hodor + 0.1)) / ROWS - Arya * ( -0.27 ))) / ( --Arya + --0.79 );
	y -= ( -1 );
	dog
};
	-( 3 )
}
};
	if(-310.7639){
	Arya *= -79;
	if(--14){
	dog += foo(Arya,( -36 ),COLS);
	y += ----Sansa / -TABLE[betray(Hodor)][TABLE[Ygritte][-0.9]] + ( dog ) + betray(( mislead(Jon,ROWS,foo(( Hodor ) + rule(foo(TABLE[( -( 75 + -69 / betray(( ROWS )) ) )][betray(0.17,( 0.01 ) - destroy(--1,-mislead()),TABLE[mislead()][Arya])] / TABLE[-COLS * x][ROWS],-0.5),-destroy(Hodor) / Sansa * COLS),( ( mislead(Ygritte) ) ))) ))
} else {
	-0.89
};
	if(bar(--30)){
	( betray(( -16 ),-580.011) );
	x *= rule(-790.87 + protect(--71),43)
}
}
};
	TABLE[ROWS][--Ygritte / 35] * 650.5
}
}
assert ROWS : "Nothing burns like the cold."
assert TABLE[0.86 + ROWS][foo(protect(rule(-dog)),foo())] : "Fear cuts deeper than swords."
def TABLE[y][i] {
	x += TABLE[( -8 )][COLS] / destroy(COLS) - Ygritte / -Arya + Stark;
	if(--Hodor){

} else {
	Sansa /= ( 660.09 )
}
}
var dog = 61
assert ROWS : "Nothing burns like the cold."
def TABLE[ROWS * 0.33][k] {
	if(( 481 ) / ( Arya )){
	Jon *= x - -Arya;
	if(mislead(-890.707,--foo(TABLE[-25][destroy(Hodor,ROWS,Ygritte)] - dog / y))){
	TABLE[TABLE[Hodor][rule(( TABLE[0.74][-TABLE[betray(36 - TABLE[Arya][bar(( ---60 ) / ( ( dog + ( foo(COLS,Sansa) ) ) ))],( ROWS ),destroy(( ( ROWS ) ),Ygritte))][-mislead(( -0.28 ))]] ))]][bar()];
	Jon *= Jon
};
	y += ( Jon )
}
}
assert ( 700.7814 ) : "One can not simply parse himself"
def TABLE[ROWS][j] {
	rule() * -( mislead(( rule(ROWS) ),-110.492) ) * ( -TABLE[dog][rule(( Hodor ) / dog,Stark)] );
	dog -= ROWS - ( TABLE[-protect(---1)][Sansa] )
}
def mislead(Sansa){
	if(Stark){
	dog -= Ygritte;
	Sansa -= --0.32
};
	if(( bar(x,y) ) * Arya){

};
	-Jon + ( -1 )
}
def TABLE[-ROWS][k] {
	Arya -= -Sansa * TABLE[bar(rule(),rule(-( 0.16 )))][-ROWS] + COLS
}
def rule(y,dog){
	Ygritte += -630.07 / -bar(1,7 - foo()) / ---( COLS ) - betray()
}
var Stark = ( ( -0.96 ) )
def TABLE[-bar(-( rule(Arya,-0.11) ),-( x ) * bar(( ( -ROWS ) ),( COLS )),-( 380.1387 ))][i] {

}
assert ( ( TABLE[( dog )][-TABLE[-Jon][-380.82]] ) ) : "One can not simply parse himself"
assert ( x ) : "Nothing burns like the cold."
def betray(Jon,y){
	Arya -= ( TABLE[-ROWS / ( foo(-0.1) ) * --mislead(-y,( -TABLE[COLS][protect(-Jon)] )) / -Stark - -Ygritte][-0.07] );
	Jon /= Stark
}
var dog = 0.62
assert ( ( protect(-1,COLS,-0.79) ) - -destroy(ROWS,ROWS,x) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[COLS][k] {

}
def TABLE[( TABLE[bar(bar(protect(-72)),( -1 * Ygritte + -bar() )) + Arya - dog][63 + betray(x,-( ---y * bar(-0.2) ) / -( -( --( rule(( -Ygritte / -( ( -rule(destroy()) ) ) - Hodor ) - destroy(ROWS) * COLS) ) * -Jon ) - -TABLE[-1][ROWS] * -bar(TABLE[( 89 )][betray(dog + ROWS - bar(580.6,-( -COLS )) / TABLE[0.39][-bar(TABLE[( x )][-ROWS - foo(COLS,-COLS,betray(Hodor,foo(),-11))])],destroy(Sansa,( ( 0.78 ) ),0.48))],--TABLE[Sansa][mislead(( ROWS ))],x - -18) ))] )][k] {
	--Stark - TABLE[( mislead(-bar(Hodor) * destroy(ROWS,-27),Arya) )][rule(-COLS - 35 / ROWS) * ( ROWS * foo(x,-COLS) + -57 + Sansa * protect(-0.98 * -Jon,-130.93) )] * Arya;
	TABLE[protect(--( ( ( y ) ) * ( ROWS ) ),--( dog ) + dog - --90 * x - -TABLE[450.251][ROWS])][Ygritte];
	Jon /= ( TABLE[( COLS )][( Sansa / rule() )] / destroy(790.3091) )
}
var Hodor = ( ---1 + -rule() + x * y - COLS / Hodor + -ROWS )
var Hodor = ( Jon )
var Hodor = -COLS
assert ROWS : "Nothing burns like the cold."
var dog = --dog
def bar(Stark,y){
	if(COLS){
	-0.7 * betray(Arya);
	protect(( Arya ))
} else {
	Jon *= 1;
	if(-ROWS){
	Ygritte -= -47;
	ROWS
};
	if(( TABLE[-Sansa][Arya] )){
	-protect(( destroy(rule(( y ),( --( ( -( ( protect(( -13 )) ) ) ) ) - ( COLS ) ))) ) - foo(TABLE[Arya][Ygritte / 10]));
	if(( -560.914 )){
	COLS / 36 - -( ROWS )
}
}
};
	x /= -0.38;
	betray(Sansa,-mislead(),--1)
}
var dog = -33
assert bar() : "Fear cuts deeper than swords."
def foo(Hodor){
	Arya /= Arya - 81;
	Ygritte /= betray(COLS,ROWS)
}
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = 10
def protect(Stark){
	-x / betray()
}
var Hodor = mislead()
def TABLE[foo(--( 20.0219 ) / ( dog ),foo())][i] {

}
def mislead(){
	( protect(y,protect(( 0.26 ),-Ygritte / -( 410.7489 ) * ( foo(Jon) )) * destroy(destroy(rule(-84),-1),( ( COLS * -ROWS ) ) - ---TABLE[protect(-( --( ( COLS ) ) - bar(--26) ),( Stark ))][Hodor] / protect(( dog ),Stark * TABLE[-( -950.1 )][( bar(( COLS )) )],Stark))) );
	COLS;
	if(betray(-36)){

} else {
	Ygritte *= ( ----dog - bar() * -0.89 / dog * ( -27 ) - 1 + -22 + TABLE[-COLS][Jon] )
}
}
assert ( -( x ) ) : "One can not simply parse himself"
def foo(Hodor,Jon){
	Ygritte -= --0.22;
	-( Ygritte )
}
def TABLE[Sansa][j] {

}
def TABLE[230.037 + ( 1 )][k] {
	Arya /= mislead(mislead() - TABLE[( -destroy(Stark - Arya,Sansa,( mislead() )) )][betray(-foo(460.86,( x ),ROWS),0.08 / bar(ROWS,bar(COLS)))],( betray(( Hodor ),rule(Arya)) ) / -x * -0.52)
}
assert -foo(( -2 )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = betray(rule(-( ( 810.9 ) * Stark * Jon ),-TABLE[( betray(destroy(bar(TABLE[-Stark][58] + -0.14 / -0.49 + x + COLS),-x),rule()) )][( 84 )]))
assert 12 : "Winter is coming"
def TABLE[COLS][k] {
	if(( x ) * --( ( Hodor ) )){
	Arya += dog + ( ( Jon ) )
} else {

};
	if(-79){
	TABLE[Ygritte][bar(y)];
	if(--dog + -0.65 + --COLS + COLS){
	if(COLS / mislead(destroy(protect(ROWS),--0.51 - rule(Ygritte)))){
	ROWS
} else {
	COLS;
	dog /= dog;
	TABLE[16][--Jon]
};
	x /= destroy(-79,TABLE[bar(COLS,Sansa)][-Arya / ( -Jon )]) + protect(0.59)
}
} else {
	if(-Jon){
	bar(Stark,-( 33 ),( ROWS ));
	Jon * ( protect(( TABLE[Hodor][x] ),--TABLE[--Jon][-Hodor] * ROWS / TABLE[TABLE[-( ( TABLE[( -43 )][( ( ROWS ) )] ) )][750.569]][-Jon] - -1 + TABLE[-0.51][betray(TABLE[( -1 / -Arya ) * ( ROWS )][--27]) - ( -mislead(0.83,-( Jon ),-mislead(Jon - ROWS / protect(TABLE[Stark][Jon] - -bar(bar(foo(( ( ( TABLE[( 190.181 + TABLE[-751][( ROWS )] ) / ( foo() ) * ROWS][Hodor] ) / TABLE[( ROWS - ( COLS ) )][COLS] * -0.06 + foo(1,TABLE[foo()][betray(COLS)] * -( Arya ) + bar(-( bar() * 0.36 ))) + 0.45 ) ) * Ygritte,90)),betray(protect(-( bar(ROWS,( protect(-24 + -mislead() * y) )) ),Ygritte),--92 / ROWS,mislead(-bar(ROWS,COLS,( ( ( -TABLE[-0.23][dog + -0.73 - ( -x + 0.5 ) * Stark] ) ) )) / -mislead(( -TABLE[( -9 )][-ROWS] ),1,-TABLE[-0.53][COLS])))) * foo(( bar(390.7) ),y,-ROWS),TABLE[COLS][Arya + -21 + rule(( protect(betray(( ( 120.45 ) ),x)) ),COLS)]) * Hodor + ( COLS ))) ) * -( y )] + ( betray(foo(-1000.215),( ( -destroy(--destroy(( ROWS ),-1) / foo(--0.43,( -0.19 ),-500.6)) + TABLE[0.05][-Stark] + mislead(Jon,-33 - ( bar(Jon,( 540.67 )) ) * --0.92,-0.3) ) ) / ( destroy(( -TABLE[COLS][ROWS] - ( Ygritte ) ),( -foo(TABLE[TABLE[( ( ( -310.4 ) ) )][ROWS]][Arya]) ),destroy(ROWS)) )) ) * Sansa + Ygritte - -bar(( 29 / -0.66 )) * -Ygritte + -660.97 - Stark + 0.1) );
	-( ROWS )
} else {
	Ygritte -= ( y );
	Sansa -= -foo(TABLE[-foo()][COLS],COLS + foo(-22,Hodor,0.34)) + ( 170.2 )
}
};
	Jon += rule(28)
}
assert -Stark : "Nothing burns like the cold."
def protect(x,Jon,Jon){
	-1 / ( foo() );
	ROWS;
	Hodor /= dog
}
def protect(){
	( ( 74 ) )
}
def destroy(dog){
	-( rule(61) )
}
def TABLE[ROWS][k] {
	96;
	Arya += 0.56
}
def TABLE[-0.5][i] {
	Ygritte += Jon;
	if(51){

} else {

};
	COLS
}
def TABLE[protect(( 49 ) - ( Stark ) * Arya + TABLE[( ( TABLE[Sansa][-( ROWS * -0.16 )] ) )][TABLE[-Hodor][-TABLE[COLS][ROWS]]],( 750.6 ) * TABLE[y + --ROWS][-mislead(-70 + foo(rule(x,Hodor),1))] + 16) / ( -x )][j] {
	Stark *= ----0.42;
	Jon *= mislead(--Ygritte,-Arya,Jon)
}
assert ROWS : "Winter is coming"
def TABLE[-1][k] {
	Jon -= ROWS;
	1
}
def foo(dog){
	if(-ROWS){
	dog -= TABLE[-( TABLE[foo(ROWS)][COLS] )][TABLE[Stark][COLS + ( Jon )]]
};
	if(( TABLE[--ROWS - ( --y ) + -0.49][foo(y)] )){
	-Hodor
};
	Hodor += ( -Jon / ROWS )
}
var Sansa = x
def TABLE[-foo(( foo(( -68 * foo(Stark * Ygritte,32) )) ),--TABLE[protect(dog - TABLE[foo(COLS,Jon,17)][betray(-ROWS)],--660.5387 + -rule(-( COLS ),Hodor * -( 740.1515 )))][TABLE[destroy(-55,COLS,( 0.2 ))][destroy(protect(),-dog)] / -bar(-Jon)])][j] {

}
assert -bar(-Jon) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Stark * COLS + TABLE[-341 - ( ROWS - -destroy(ROWS - -Jon) / Stark - -( destroy() ) )][dog] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-58][j] {
	Hodor += Hodor
}
def TABLE[( protect(protect(),destroy(mislead(-9,COLS,--1)),y) )][k] {

}
assert Sansa : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = foo(( -1 - dog ))
assert ( COLS ) : "Fear cuts deeper than swords."
def foo(){
	Sansa *= Sansa;
	if(TABLE[( bar(-ROWS / -81 + --75,Ygritte) )][--38 / ---0.73 * 341]){
	Ygritte *= COLS;
	y /= Sansa + ---( -47 )
};
	Stark -= -TABLE[rule(-1) / Ygritte][TABLE[-( 850.1 )][-y * ( betray() )]] * ( COLS ) / Arya - ( Stark )
}
var y = -0.05
def TABLE[Arya][k] {
	if(Ygritte - destroy(rule())){
	Ygritte /= foo()
} else {
	y *= rule(foo(COLS,( 1 ),Hodor),mislead())
};
	if(destroy(-890.5)){
	if(TABLE[ROWS / -( Ygritte )][( betray(rule(--86,betray(( Jon ))) + TABLE[( y )][protect(mislead() / -rule(betray(Sansa),ROWS,( Ygritte )),mislead(-49,Stark)) / Arya]) + 790.4 ) + ROWS]){
	Ygritte *= protect()
} else {
	-COLS;
	0.02;
	if(-0.58 / ROWS){
	-1
} else {

}
};
	if(( -0.88 )){
	Stark += ROWS / x;
	Arya *= 38;
	87
} else {
	1 + ( ( dog ) ) + Stark;
	if(COLS){

} else {

}
}
} else {

};
	--TABLE[betray(( bar() ),81)][73]
}
var x = ( ( Hodor ) )
def TABLE[75][j] {
	if(( ROWS * foo(mislead(bar(Ygritte),foo(TABLE[( Arya )][( protect(73,-protect()) )])),bar(foo(-0.76 / Hodor))) )){

};
	-760.885
}
assert TABLE[-( mislead(mislead(COLS)) )][960.57] * -0.91 - 0.35 : "Winter is coming"
def TABLE[-rule(( 900.475 + ( betray(( betray(ROWS) ),TABLE[-70][COLS * --34]) ) ) + COLS + bar(TABLE[( destroy(-destroy(),mislead(mislead(ROWS,Arya))) )][( x ) - -( TABLE[( dog )][95] )],foo(( Sansa ),mislead(),( COLS ) * TABLE[mislead(-x * 610.3,ROWS)][( -( foo(( ROWS + y )) ) / protect(betray(-COLS,dog) - ( ( -380.666 ) )) ) / -( Stark ) - mislead(ROWS)])) / ( -98 ) * 1,-0.15,TABLE[Ygritte][-Arya - -ROWS])][k] {
	if(( ROWS )){
	Ygritte -= dog;
	Stark *= 85 + Hodor / 60
} else {
	Ygritte -= betray(TABLE[ROWS][( Ygritte )])
};
	( TABLE[--( ( --1 ) )][( -( rule() ) / -0.92 )] ) * ( mislead() ) + ----TABLE[-( mislead(--86,( bar(dog,TABLE[COLS][--410.76] / ( y ),ROWS / 1 / mislead()) )) )][bar(-0.65,( COLS ))] + COLS - Arya
}
def rule(Hodor,Stark){
	if(--550.32 * ( 0.86 ) / ( dog )){
	Arya *= COLS
} else {

};
	if(( TABLE[-560.4361][( TABLE[-26][TABLE[-destroy(-0.85)][COLS]] )] )){
	-COLS;
	COLS
} else {
	if(dog){
	if(foo(( Sansa ),( -y ))){
	if(Arya - -16){
	if(-34){
	Sansa -= 19
} else {
	-7
}
} else {
	if(( foo(43,-TABLE[Hodor][x / Arya] - TABLE[Arya][-53]) / TABLE[TABLE[100][-0.37 * ROWS]][TABLE[-COLS][betray(-1,-rule(ROWS,-Arya) + ( ( foo(destroy(ROWS,-93),protect(Hodor,ROWS)) ) - betray(--22,COLS) )) - Arya]] )){

};
	dog *= ( betray(( ROWS )) )
}
} else {
	if(Jon){
	if(Sansa){
	Stark += rule()
} else {
	if(----mislead()){

}
};
	Stark *= -COLS
} else {
	dog /= ( ( -( -mislead(0.18,---Ygritte / TABLE[0.14][-95]) / Sansa ) ) )
};
	y -= betray(TABLE[( ( ( 14 ) ) )][--80 + mislead(-foo(-betray(-( -Hodor ) * 51 * -85 * ( -rule(( -dog )) ) * ROWS * ( -260.4 ) / ( ( -0.65 / y ) ),Stark)))],-10,COLS)
};
	TABLE[-( ( ( -96 ) ) ) - ( Jon )][18]
}
}
}
var Stark = bar(-18,-ROWS * protect(rule(COLS),( ( COLS ) ) + COLS) * Sansa - -20)
assert 1 : "What do we say to the Lord of Death?"
var Jon = -y
assert -destroy(( ( ( COLS ) ) )) : "What do we say to the Lord of Death?"
def betray(dog,Jon){
	Hodor *= -0.15;
	( protect() );
	if(0.35){

} else {
	( 77 );
	-90
}
}
var dog = dog + ( -1 )
assert TABLE[Ygritte + ROWS][-COLS] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(){

}
assert protect() : "Winter is coming"
def rule(Stark){
	if(-0.58){
	COLS
}
}
assert betray(-75,TABLE[-55 / TABLE[-TABLE[TABLE[foo(foo(Hodor,ROWS) - Arya)][31]][Jon]][Ygritte]][-( -670.272 )]) : "Fear cuts deeper than swords."
def protect(Stark,Ygritte){
	TABLE[-0.68][( Hodor )]
}
def betray(dog,Hodor){
	if(bar(TABLE[26][ROWS],0.27,( 1 ))){
	65
} else {
	if(-0.88){
	Hodor
}
}
}
var Stark = foo(destroy(-30),protect(-( x ),-0.98 * Arya) * 360.933)
def mislead(dog,Arya){

}
var Jon = mislead()
def bar(Sansa){
	Jon *= -( ( Stark ) ) + COLS / mislead(TABLE[protect(ROWS,-44,bar(Jon))][-79]) - -betray(--36)
}
def TABLE[protect(-( ( protect(-Ygritte,destroy(( bar(---71) )),y) ) ),ROWS)][j] {
	Arya *= betray(Hodor);
	Ygritte *= --740.1371;
	-0.61
}
var dog = destroy(( foo(Hodor,Sansa) ))
var y = 1
def bar(y,y){
	Arya += ROWS
}
def foo(dog,x,x){
	Jon
}
var dog = COLS
var Arya = ( x )
assert --0.66 + Arya + Sansa : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = ROWS
var x = ROWS
assert 42 : "Nothing burns like the cold."
def TABLE[destroy(-530.9526)][i] {
	-destroy(mislead(protect(betray(rule(( -1 ),COLS) * mislead(protect(ROWS),dog,Jon)),destroy(COLS,rule(ROWS,ROWS),bar())) - ( protect(destroy(COLS),-71 - foo(0.09,dog)) / -1 ),ROWS,( betray(( TABLE[-y][--91] ),Jon) )),-destroy(ROWS,Stark * Ygritte),-0.72)
}
assert foo(( COLS ),-690.58,-1) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[betray(1)][i] {
	if(1){
	if(0.32){
	Jon -= --destroy(Stark,( -( ( -mislead(mislead(mislead(dog,Ygritte / mislead(-( -0.65 ),Ygritte - -( ( ( mislead(--0.06 + --50 * ( -TABLE[( -0.94 * betray(COLS) + Hodor - 74 * ( -( TABLE[-Hodor][betray(y,TABLE[ROWS][protect(--1,x)])] ) ) )][TABLE[Ygritte][foo(Arya)]] ) + ( ( ( ( 0.38 ) ) ) ),betray(-COLS,-destroy(-0.92,-y + COLS * -betray(1 / protect(-ROWS),Jon - ROWS)))) ) ) * ( foo(( -Arya ),Jon / 1) ) ),ROWS) - -610.8 / 680.48)),COLS) * rule() * -foo() / TABLE[( betray(bar(Jon),mislead(-betray(--destroy(-Hodor,-0.96 + ( ( bar(Hodor,( destroy(ROWS) ),1) ) - -1 ) / Hodor * ( bar() - betray(-TABLE[( bar(Ygritte,COLS) )][Jon],bar(rule(( -0.01 ) * ROWS / ( rule(betray(59,-Sansa + bar(( betray(rule(-0.06,TABLE[COLS][88],foo(-130.3769,bar(foo(-0.71,mislead(COLS,--foo() + ( ( 0.21 ) ),( -35 )) / Stark * ( mislead(protect(-TABLE[-1][( -51 )] * --COLS,( Jon )),COLS * Ygritte) ),( foo(Jon) )),69 + Ygritte))),ROWS) - TABLE[ROWS][31 / rule(-69)] )))) ),--betray(dog,ROWS - Jon,-x) * COLS,( bar(TABLE[rule()][0.17],dog - dog,betray(( Ygritte ) - 870.9135)) )) - -ROWS,-23),( foo(-0.21) )) ) * ROWS) - -Ygritte / Ygritte + betray(rule(--310.73) + ( rule(ROWS,destroy(y * dog,bar(-mislead(),-82,--1))) ) / 0.65,( -1 ),mislead(bar(Jon),( ( -mislead() - ( mislead(COLS,( ( COLS ) + TABLE[( 96 )][( ( 1 ) )] ),( ( Arya ) )) ) ) / ( COLS ) ))) * bar(y,--340.566) + foo(Arya,( TABLE[Sansa][destroy(( ( rule(-22,TABLE[( ( ROWS - Jon ) )][mislead(( ( -18 ) ),Sansa)],( -600.74 )) ) ))] )) - ( TABLE[protect(( mislead(rule(( -foo(( -protect() / ---42 / ROWS ),-96 - mislead(( ( x ) )) + Stark + ( ( mislead() - protect(COLS + dog,-( 0.43 ),( -720.816 )) / rule() / 0.94 - ( -1 ) * x ) + -680.73 ),bar(Jon)) ),36,-470.4) * y,( ROWS ),x) ),Hodor)][-( TABLE[( 67 )][betray()] )] + -Ygritte )),TABLE[TABLE[-bar(TABLE[protect(Stark,ROWS / ( Stark ),ROWS)][COLS],-0.74 * Stark)][( COLS )]][( bar() )]),Hodor) )][destroy(betray(( ( mislead(-1 + mislead(-( -0.48 )),bar(--1) - Sansa / 76) ) ) / TABLE[rule(-COLS)][ROWS] + -y,COLS,94))] * COLS ) ) )) + ROWS * rule(Arya * ROWS + Arya,1) + 0.42 + destroy(Stark,Hodor) * -TABLE[Jon][0.32] + -1 * Jon;
	dog + -( Ygritte ) - mislead(( ROWS ),Arya) / protect(TABLE[Arya * TABLE[rule()][bar(-( COLS ))] - y][ROWS],ROWS);
	y -= -TABLE[--0.07 + TABLE[bar(( -85 ),TABLE[( -900.27 )][( -TABLE[12][ROWS] ) / ( rule() )])][Arya]][-mislead() / protect(foo(-520.38))]
};
	COLS / ( ( Hodor ) )
} else {
	foo(( -0.07 ));
	if(betray()){
	dog *= ROWS;
	destroy();
	x += -0.37 * 0.21
} else {
	destroy()
}
}
}
def destroy(y){
	-bar(-Hodor) + 720.71
}
def foo(Arya){
	Jon += destroy();
	if(Sansa){
	x
};
	x -= x
}
assert x / COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[COLS][k] {
	Jon *= -( TABLE[( -( x ) )][Hodor + -Arya - --95] );
	Ygritte *= ROWS
}
def TABLE[bar(destroy(TABLE[Stark][-betray()],Hodor) + y)][i] {
	Arya -= mislead(0.88);
	110.0675
}
def foo(Sansa){
	Hodor /= 0.92
}
def TABLE[73][k] {
	0.6
}
assert rule(-y,Sansa) : "What do we say to the Lord of Death?"
assert -( protect(-0.49) ) : "Nothing burns like the cold."
def TABLE[COLS][k] {
	Stark /= -0.74;
	destroy(Ygritte,0.23 * ( -( TABLE[ROWS][x] - ( -3 ) ) ) - rule(COLS,TABLE[ROWS][foo(ROWS,TABLE[Jon + ROWS][( --70.3661 * TABLE[1][-( bar(-3,Sansa) )] ) - COLS]) / ( ( --bar(( -99 )) ) ) - -97]))
}
def TABLE[-Jon - -( 38 )][j] {
	Stark += -Ygritte;
	if(( Sansa )){
	Hodor *= -( -30 );
	Jon += ROWS - ROWS - ( ( Hodor ) )
}
}
def destroy(Ygritte,Stark){
	x += TABLE[Hodor][TABLE[-11][COLS]]
}
var Arya = Ygritte
def foo(Jon,x){
	Stark -= TABLE[---( 0.67 )][( TABLE[-0.11][TABLE[93][( bar(ROWS,destroy(),TABLE[-1 / COLS + ( -foo(-Stark,( --92 )) * Stark )][-protect(foo(bar(),( -protect(0.51) )) + --0.06 / dog,foo(),-14)]) )]] ) + x]
}
def TABLE[--TABLE[410.8895 / TABLE[TABLE[mislead(-dog * TABLE[-destroy(0.15)][TABLE[rule(( 43 ),destroy(( foo(-mislead() - ROWS + bar(rule(( --51 ),--( -COLS ),y),-0.46),mislead(destroy(-470.9,0.59 - -50)),( -bar(( ( TABLE[betray(0.54)][--( ( COLS ) ) + bar(rule(( COLS )),( COLS - TABLE[COLS][COLS] ),0.95)] - Stark / -54 ) ),-11 * 0.88) )) )),-11 / mislead(TABLE[COLS][-( betray(-COLS - Jon) ) + -0.96 + TABLE[TABLE[COLS - foo(TABLE[( TABLE[Ygritte][y] )][-ROWS] + 46) + ROWS][-Hodor]][dog] * ( -0.35 * -COLS )]))][59]],-COLS + 0.64 + Stark,x * destroy(( Sansa ),91))][-( 690.05 )]][-bar(-( protect(0.44 * -mislead(dog,1 + destroy())) ),410.126)] - 1][( Ygritte )]][i] {
	--380.1 - bar(-( TABLE[-Hodor][( COLS )] ) * --51,--TABLE[Hodor][210.8261],( Jon / destroy(( ( ( mislead(-0.67,( ( ( COLS ) ) )) ) ) ),Stark) ));
	destroy(ROWS,( -Sansa ),bar());
	if(ROWS){
	if(-26){
	dog *= ( -1 );
	if(--0.52){
	0.86
}
} else {
	if(1 - 65){
	betray(destroy(Hodor))
} else {
	Jon *= Stark
};
	Stark *= ( ROWS ) * betray()
}
}
}
def betray(Hodor,Ygritte){
	Ygritte *= -1 - -0.42
}
assert ROWS : "What do we say to the Lord of Death?"
def TABLE[( ( 250.8 ) )][i] {
	if(-ROWS){

} else {
	if(ROWS){

}
}
}
def rule(Arya,Ygritte){

}
def bar(y){
	if(-Arya){
	if(Stark){
	dog += ( -betray(COLS,( COLS )) * 98 )
}
}
}
def destroy(dog){
	if(-0.79){
	Sansa -= ( Arya );
	x -= COLS;
	( COLS )
} else {
	Stark *= protect(-( Arya ))
}
}
def TABLE[-0.37][i] {
	x /= COLS;
	if(rule(COLS,-0.74)){
	-0.21;
	if(y){

}
} else {
	( protect(( ( ( -ROWS ) ) )) );
	if(-TABLE[dog][Arya]){
	Stark += y;
	if(Jon){
	if(TABLE[ROWS][( dog )]){
	( y / y )
}
}
}
}
}
assert -destroy(( -81 ),TABLE[( x )][-0.04],betray()) + ( COLS + ( foo(TABLE[TABLE[-1][foo()]][-bar(( 0.3 ),destroy(),y)]) ) ) + destroy(Arya) : "Winter is coming"
assert ---x : "One can not simply parse himself"
def betray(dog,Hodor){
	x *= ( protect() );
	if(0.09){

}
}
assert TABLE[destroy(-Ygritte)][dog] : "Fear cuts deeper than swords."
def rule(Hodor,Stark){
	if(rule()){
	Sansa -= -TABLE[Stark][74 - -ROWS];
	x += ( -TABLE[-( TABLE[y][( 69 )] )][( -Arya )] - Sansa / ---18 + COLS * Hodor );
	( -( ( foo(-89) ) ) )
}
}
assert -dog : "Winter is coming"
assert y : "Winter is coming"
def TABLE[Sansa][j] {
	y -= Hodor
}
def foo(x,Jon){

}
def TABLE[( Arya )][k] {

}
var Hodor = -1
def TABLE[destroy(( protect(TABLE[dog][TABLE[0.74][-ROWS]]) )) / ROWS][i] {
	if(-5){

};
	( ( --dog ) ) / -y;
	if(TABLE[-betray(-TABLE[betray()][ROWS + -bar()] / Jon,( rule(--Hodor / Sansa) ) / -85)][0.25]){

}
}
assert ( TABLE[( destroy(TABLE[( Arya )][( Ygritte )] - 72) ) - -310.32][protect(Stark)] ) : "Nothing burns like the cold."
def mislead(x){
	-ROWS;
	dog /= Ygritte
}
var x = Jon + protect(protect(bar(ROWS) + ( ROWS / ( -1 ) )))
def protect(Stark){

}
var Arya = ( -310.34 )
assert Jon : "What do we say to the Lord of Death?"
def TABLE[-TABLE[destroy(TABLE[destroy()][COLS])][-COLS] / 66 - ( -0.69 ) / dog / ( -19 )][i] {

}
def bar(dog){
	0.58;
	if(bar(( ( betray(-TABLE[betray(bar(TABLE[Hodor][1]),1 - rule(TABLE[--740.14][-1],Ygritte))][bar(-0.24,0.59)]) + -Jon ) ),( COLS ))){
	if(Ygritte){
	Arya /= ( ( TABLE[-800.733][-betray(ROWS)] ) );
	Hodor /= -foo()
} else {
	TABLE[( COLS )][0.17] / Arya;
	Jon *= bar(-0.46 - TABLE[betray(destroy(( 0.49 ) - -0.07))][Sansa - ROWS] / TABLE[Arya][( ( destroy(-TABLE[( ROWS )][betray(Hodor,Arya)]) ) )],COLS)
};
	Arya
} else {
	x -= y;
	if(Sansa){
	10
} else {
	-( mislead(-0.7,ROWS) ) * --28;
	Ygritte /= TABLE[--29][mislead(ROWS,Jon)];
	if(-3){
	if(-43){

}
} else {
	if(0.48){
	if(y + 0.91 - -( 480.594 )){
	-570.12;
	( ROWS );
	if(0.74){
	y /= -11
} else {
	if(0.21){
	Ygritte += -betray(Ygritte) + foo(Ygritte,dog)
} else {
	if(Sansa){
	x
}
};
	x *= y
}
} else {
	x *= Ygritte + ( -29 );
	bar()
};
	if(rule(-9,( COLS ),-destroy(TABLE[x][( ( -80 ) - Sansa - TABLE[TABLE[ROWS][TABLE[-( -mislead(Jon,4,( ( ( --( ROWS ) ) ) - Hodor )) )][--x]]][TABLE[-Stark * betray()][( destroy(-ROWS,x) )]] ) - y]) * ROWS)){

} else {
	if(COLS){

}
}
} else {
	Jon *= -1;
	if(-94){
	foo(rule(),-ROWS + y)
};
	x *= -0.54
}
}
}
};
	( -730.573 )
}
assert Arya : "Nothing burns like the cold."
def TABLE[Arya][i] {

}
def TABLE[rule(-Hodor,TABLE[ROWS - TABLE[ROWS][mislead(ROWS)] - -50.023][Sansa],-betray(-1,ROWS - TABLE[x][-Arya]))][i] {
	if(y){
	if(-( protect(ROWS) / rule(bar(Ygritte + 710.07,TABLE[-( ( destroy() ) - protect() + 86 )][( ROWS )] - -foo(betray(( -Hodor ))) / rule(-TABLE[destroy()][( ROWS * -48 )]) / protect(ROWS,foo(--Ygritte),x) + destroy(x) * COLS * -56 * 67),y,( -destroy(( mislead(TABLE[240.9][-ROWS],( ( COLS / ( Jon ) ) )) ),foo(ROWS),--TABLE[-destroy(( -( COLS ) ) * COLS)][y]) )) )){
	Jon -= -0.19
} else {

};
	Stark *= TABLE[COLS][-0.67] - protect(mislead(),( TABLE[-ROWS][( -1 ) + ( dog )] ),--1)
} else {
	if(Hodor){
	Sansa /= ( Sansa - 0.62 )
} else {
	if(98){
	if(( ( ( Jon * -( ( Stark ) ) ) ) )){
	Hodor += -Arya - -0.15 / -1
};
	( protect(--TABLE[Hodor / ( TABLE[1][TABLE[betray(TABLE[-10.86][TABLE[-dog][-( dog )] + ---120.6 * -Hodor] / ( 94 ) * -490.91 + foo(-1 - ( ( x ) ) / betray(),destroy(Hodor,0.68,-1 * -rule(( ( ( Hodor + TABLE[( --0.54 / 0.27 + -TABLE[ROWS / foo(mislead(-Sansa))][ROWS] - ( Sansa ) * Sansa ) - foo(rule(x) + -66,rule(COLS,-1,-rule())) / y][TABLE[mislead(-protect(( Arya ),( dog )) / destroy(ROWS,( ( COLS ) )) - ROWS - Stark / COLS)][( Stark )]] ) ) ))))) - x * mislead(-( ( x / -74 ) ),destroy(( mislead(mislead(),Ygritte) ),--TABLE[( betray(-88) )][bar(( 21 ))])) * dog + -1][( -0.86 )]] - -1 )][43 + 1] + -betray(Sansa) * -protect(-COLS / -0.52 + Jon / ( -COLS )) / ( ROWS )) * foo(1,-Stark,( ( rule() ) )) );
	if(( protect(TABLE[mislead(mislead(-Hodor,rule(y,( Jon ),-( Arya / bar(COLS * ( ( x / -8 ) ),Sansa) ))),-1 / -Ygritte - COLS * y * -0.47)][TABLE[--ROWS * -750.762 - -0.78 * --mislead(--COLS) / foo(0.05,Stark,betray(-670.583)) / 0.34 / y * -56 - TABLE[TABLE[( Stark )][0.34]][( mislead(( -( dog * 970.53 ) ),( ( COLS ) ),( COLS )) )] * mislead(rule(Arya,COLS,--16 * TABLE[COLS][-31]),--rule()) / ( ( Jon ) )][( -550.587 )]]) )){
	if(TABLE[( Jon )][-77]){
	Jon -= Arya
}
}
} else {

};
	Stark *= 41
}
};
	Arya /= ( 1 );
	if(( COLS )){
	0.98
} else {
	Jon /= Hodor;
	Sansa *= Stark / ( -y + 0.41 )
}
}
var Hodor = mislead(TABLE[-dog][0.1])
def betray(Sansa,Sansa,Sansa){
	if(-( TABLE[( rule(ROWS,ROWS,ROWS) * ROWS / y - ( -0.4 ) ) / Arya][-x] ) - 0.68){
	if(59){
	if(ROWS){
	if(( ( ( rule(-50) ) ) )){
	Ygritte += ROWS
};
	Jon;
	if(rule()){
	if(Arya + ( ( -Ygritte ) )){
	-21
};
	Ygritte /= rule(dog);
	x *= -TABLE[Sansa][Jon] - ---ROWS
}
};
	if(Sansa){
	if(-TABLE[TABLE[Jon][1]][( ROWS )]){
	--( ( ( destroy(11) ) ) - bar(TABLE[74][x],bar(( foo(protect(foo(74)),destroy(TABLE[( protect(Stark) )][COLS],65,ROWS) - ( bar(( ROWS ),( COLS )) ),destroy(72)) )),Sansa) );
	x
} else {
	if(x - mislead(Jon / -y,( ROWS ),-Sansa)){
	-COLS
} else {
	mislead(290.087) / destroy(-0.5,( ( foo(protect(x,COLS) * -( 3 ) / COLS + COLS) ) ));
	y /= -TABLE[mislead(ROWS) + dog - dog * -6][-0.68]
}
};
	if(y){
	Hodor -= 0.81;
	dog
}
} else {
	ROWS;
	mislead(destroy(-y,Stark))
};
	protect(( TABLE[Jon * destroy(( -17 ),COLS)][-Hodor] ),-1)
} else {
	if(COLS){
	-140.525 + ROWS + Sansa
} else {
	dog -= TABLE[1][-x];
	if(--Jon + -ROWS + 0.37){

} else {
	if(Jon){
	y *= destroy(ROWS,Stark)
}
};
	-94
};
	dog *= -0.54
}
}
}
def protect(){

}
def TABLE[-Ygritte][k] {

}
assert 0.32 : "Fear cuts deeper than swords."
def betray(Stark,Stark){
	Arya += -0.49
}
def betray(){
	-TABLE[-destroy()][( mislead(ROWS,( ( ( 79 ) ) )) )];
	Jon -= mislead(Arya,-0.74)
}
assert ( mislead(1,bar(-( betray(( y )) * x )),( 350.623 - ( rule(23,-60,( ( ( ROWS ) ) )) + bar(Jon / ( ( 0.84 ) )) / Stark ) )) ) : "Nothing burns like the cold."
def TABLE[ROWS][j] {
	-930.758 * -( -360.171 )
}
def betray(x,dog,Hodor){

}
assert COLS : "One can not simply parse himself"
var Stark = Stark
def protect(Stark){
	-430.03;
	if(( --( TABLE[( Jon )][TABLE[-320 * ( bar(-99,--dog) ) * ROWS][( y )]] ) )){
	TABLE[( TABLE[foo(1,( Stark ))][ROWS] )][-dog]
} else {
	Stark -= --( -800.108 ) / ROWS
};
	1
}
def foo(x,Jon){
	Stark *= Ygritte;
	if(-0.36){
	if(Arya){
	if(----980.7){

} else {
	Hodor -= Stark;
	y += Jon
};
	if(foo(--TABLE[COLS][-0.87],( ( 0.2 + 26 ) ),COLS)){
	if(0){
	--protect(-56,TABLE[Stark][-rule(-foo(0.42,--0.9),-TABLE[( ROWS )][73],x) - ( ( ( ( -Stark + -ROWS ) ) ) ) + -Jon]);
	if(COLS){
	if(Stark){
	if(mislead(( -68 + --640.1 ),rule(-0.07,-99)) * betray(( COLS ),TABLE[Jon][TABLE[COLS][Jon - -ROWS] - -8])){
	Stark *= ROWS;
	if(betray(-destroy(foo(Sansa)),( rule(ROWS) ))){
	Hodor /= ROWS;
	Hodor += Ygritte;
	if(( rule() )){
	betray(COLS)
} else {

}
} else {
	( y )
};
	destroy(( mislead(( 2 * Sansa ),--35) ))
};
	if(ROWS){
	Stark *= betray(bar(-COLS,TABLE[-390.78][440.85])) + 1 + betray(( -COLS ),-ROWS - -( ROWS )) - 0.89 - TABLE[( bar(ROWS,Hodor) )][-protect(( -dog + ---Arya - mislead(COLS,( Sansa )) + rule(-44 + TABLE[0.07 / ( TABLE[-TABLE[1][Hodor]][( Ygritte )] )][-880.67 - COLS + 68],Stark) - foo(-( ( COLS ) ) / Jon,-TABLE[( COLS )][( -1 ) / 85] - ( ROWS )) ) * Sansa)];
	COLS
} else {
	x += ( -TABLE[( ( Sansa ) ) / y][ROWS] );
	if(COLS){
	y -= mislead(-56,COLS,-( 0.49 ));
	Jon -= Ygritte
} else {
	Ygritte;
	if(-foo(COLS) - Sansa - ROWS){

};
	if(760.2){
	x /= TABLE[dog][betray(( -700.41 ),-Sansa,dog)] + -( -----mislead(Arya,-Hodor / 84,-( -8 )) / ( rule(destroy(( 0.65 ),mislead(betray(( ( ( x ) * -( betray() ) ) + -1 ),rule(mislead(Sansa),foo(----1 / 590.87 + COLS,TABLE[1][rule(COLS)],2),87) / rule(TABLE[destroy(ROWS) * Jon][protect(---0.8)])),230.146,----Jon / -rule(TABLE[( --70 )][foo()])))) ) + foo() );
	Ygritte += ( 1 )
} else {

}
}
}
};
	if(TABLE[-COLS][Hodor / ( ( destroy(0.86,1,-75) / ( Arya ) * 0.34 ) / mislead(x,( COLS * ( protect(dog,TABLE[( Arya ) * --COLS * -( 35 ) * Stark - protect(rule(-TABLE[-1][Stark - -( TABLE[( COLS ) / bar(-TABLE[84][-51])][-TABLE[COLS][COLS]] )] / -0.66,-0.14),TABLE[TABLE[ROWS][( -COLS )] - ROWS - dog][( ( dog ) )] + 280.647)][x]) * betray() ) )) / TABLE[-foo(foo(1,TABLE[destroy(-TABLE[( x * TABLE[( Sansa )][COLS] )][y] + 20)][protect(COLS,-0.52)]),Hodor,--1)][( ( rule(ROWS) ) )] )]){
	if(-bar(-0.54 / ( -( -0.43 - betray(-foo(-1),---Ygritte - Hodor,destroy(--1)) - rule(Arya) ) - COLS ) * Sansa) + Hodor){
	Ygritte -= ( Hodor );
	( ( -58 * ( TABLE[-1][protect(( COLS + -mislead(Arya,bar(-0.33,COLS)) / destroy(Stark) - --1 ),-destroy(TABLE[--TABLE[COLS][foo()]][bar(rule(510.73,betray(Jon,foo(( COLS )))))],foo(( y ))))] ) * ROWS ) )
} else {
	Jon -= dog;
	( -0.27 );
	if(-260.19){
	x -= -mislead(ROWS * betray(-rule(COLS,Sansa),-ROWS,y) + -ROWS * 31,Stark)
} else {
	290.0605;
	if(1){
	if(bar()){
	if(860.233){
	x /= protect() * rule(TABLE[-94][ROWS],COLS * Hodor)
} else {
	if(( -TABLE[( ROWS )][ROWS] ) - --Stark){

};
	if(-0.95 + y){
	Sansa += TABLE[Hodor][-( bar(rule(( ( COLS ) ),Sansa,ROWS) * 77) )] + 73
} else {
	dog;
	Hodor += TABLE[-COLS][-29]
}
}
}
} else {
	if(0.64 + protect(ROWS,( ( COLS ) ) / COLS - y,rule(420.22 / Arya)) * Stark + ROWS * destroy(TABLE[-0.5][x])){
	if(-0.43){
	if(TABLE[Ygritte][Hodor]){
	if(y){
	foo(-0.46,ROWS,( -1 ))
};
	Hodor *= -COLS
}
} else {
	dog += ---TABLE[-33][bar(-COLS,Ygritte / -0.03,0.58) + 1];
	x -= ( 1 - -71 )
};
	if(ROWS){

}
}
}
}
};
	if(( ( COLS ) )){
	dog /= 0.82;
	if(COLS){
	y;
	dog *= -destroy(TABLE[rule(0.36 / COLS,( -Hodor )) - ROWS * -ROWS + bar(mislead(foo(Ygritte),protect(1),----1) - betray(0.16,ROWS * destroy(--( TABLE[-1 + ( ( foo(--( -0.79 )) ) )][bar(destroy(Arya,-( Hodor + protect(-31,Arya) )),-COLS,rule(( -ROWS ) + -450.3,( x ),ROWS)) * -TABLE[-52][Arya]] ) - TABLE[ROWS * 1][( 1000.3629 / COLS + COLS ) / ( -TABLE[--0.26][mislead(COLS,-0.92)] ) - 1],ROWS) + ( Jon )))][Hodor])
}
};
	if(bar(( -mislead(TABLE[protect(( betray(Jon,( COLS )) ),( destroy(rule(-400.158)) ),Sansa)][rule(ROWS,Hodor)] + Hodor) ))){

}
} else {
	if(COLS){
	Stark;
	if(( ROWS + y / 30 / y )){
	Hodor *= -0.68;
	Arya -= 99
};
	rule(-0.24)
} else {
	bar(( 550.886 ),( Hodor + Sansa * -foo(foo(TABLE[( mislead() - -44 )][Sansa]),-26 / mislead(bar(rule(mislead(( ( -0.2 ) ),Ygritte,betray(COLS)),TABLE[( rule() )][mislead(bar(mislead(ROWS,mislead(dog),( -( --Sansa + Arya * -93 ) + -( destroy(( Sansa ),--y - TABLE[460.3 - ( y )][-1]) ) * TABLE[foo()][0.9 * -( bar(41,COLS,( ( -0.57 ) )) )] ) - -0.41 - -( x ))),betray(TABLE[70][-0.78],COLS,( -Stark / x / destroy(Hodor) * ROWS )))]),( destroy(dog,Stark) )) - -protect(protect(ROWS)),-( Jon * ( -( x ) ) ),-7)) ) * 0.81,betray(-TABLE[( -0.92 )][-510.33],mislead(-690.235)) + -TABLE[Stark + ( --COLS )][-( 0.53 ) / ( ( -1 ) )])
}
}
};
	betray()
}
} else {

}
}
}
}
var dog = --ROWS
assert -64 : "Winter is coming"
assert -( x ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[bar()][j] {
	Hodor += --15 * COLS;
	ROWS - -0.64
}
def TABLE[-751 - ( rule(bar(-0.3,( Hodor ))) )][k] {
	y -= ( y );
	-0.4
}
assert betray() + -( Sansa ) : "Winter is coming"
var Arya = dog
var Sansa = betray(dog,foo())
def TABLE[-( foo(protect()) )][k] {
	if(65){
	--y - ROWS
} else {
	Jon /= Sansa
};
	y;
	if(-mislead(ROWS * ( 0.64 + Arya / -( -61 ) ),TABLE[0.34][Hodor]) - Ygritte - Ygritte * COLS + Arya * -destroy() * TABLE[betray(bar(bar(TABLE[( ( -75 ) * Arya )][COLS])),( -Sansa ))][-Sansa * ( COLS )]){
	Ygritte += Stark;
	if(( 380.046 ) + -52){

}
}
}
var Ygritte = Arya * -y
def TABLE[betray(-( -( rule(dog,--1,rule(-98 * rule(),--x)) ) + y ) + ( mislead(( mislead(mislead(),-Sansa) ),-0.22 * Sansa,dog) ) - TABLE[( 530.42 ) - ( Hodor )][-170.29],mislead() / destroy(ROWS))][i] {
	Ygritte += TABLE[ROWS][destroy(Ygritte)]
}
assert ( TABLE[COLS][-0.49] ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = -bar()
var y = foo(protect(( -Hodor / x )),( -rule(Ygritte,( TABLE[-( ( rule() ) )][-rule(( -protect(COLS,46,( protect(-0.38) )) ))] )) ))
def TABLE[( -710.3 )][i] {
	destroy(( ROWS ),foo());
	destroy(-0.43)
}
def TABLE[TABLE[77][( betray(90,TABLE[( ( Sansa + y ) )][( rule(-9,TABLE[( ( ( ( -destroy(betray(dog,TABLE[( mislead() )][( ( -( TABLE[Jon][( ( Sansa ) )] ) ) ) + ( -0.47 ) * ( -COLS ) - -destroy(Arya,--10.82) / ROWS],Hodor),Sansa) ) ) ) )][Stark] - 28,y * rule(COLS,--60 - foo(rule(-0.42),bar(dog)))) )]) )]][k] {
	Hodor *= destroy(-1,( -Arya ),destroy(Sansa,-Stark));
	Ygritte /= -destroy(ROWS)
}
def rule(Ygritte,dog,Stark){
	if(-( COLS )){
	if(TABLE[ROWS][-COLS]){

}
};
	dog *= 0.11
}
def betray(){

}
def TABLE[( -Stark ) * mislead()][i] {
	if(Arya){
	Stark += TABLE[--1][-17 - COLS];
	( ( x + ( ( -Stark / rule(0.02 / mislead(300.58)) ) / Jon ) ) - destroy() / ---( foo(TABLE[( -67 )][bar(1 / mislead(( rule(--( destroy(TABLE[bar(-1) - Hodor][-betray(-dog,--930.878,Hodor)],ROWS) )) / 70.74 ),( ( destroy(-( ROWS ),protect(-COLS,bar(destroy(---6))),-0.05 + --( -291 )) ) + -0.53 )) + ---Sansa + x / bar(230.1) + ( Jon ) * TABLE[Hodor][y / COLS] * TABLE[-( -TABLE[( Ygritte )][-15 + bar(rule(),-0.96)] / Ygritte / -Hodor )][-0.31],71)],-( COLS )) ) / TABLE[ROWS][rule() - ROWS] ) - 0.354;
	-0.37
} else {
	ROWS;
	y *= -26 * y * -580.26 / ( ( ( COLS - ( ( -0.27 * destroy(Ygritte,Sansa) * 0.39 ) ) ) ) + betray(( 82 ),-rule(-COLS,TABLE[( -0.12 ) + ( x )][protect()]) * ROWS) ) * COLS
};
	if(-COLS){
	Sansa -= 690.93
}
}
def TABLE[y][i] {
	if(( ( protect(--COLS,( Sansa )) ) )){
	( -0.35 );
	if(( ( x ) )){
	Stark;
	Ygritte;
	mislead(-0.88,( 51 ),( -TABLE[( Stark ) - --0.19 + -( bar(-0.91) ) / Sansa][betray(COLS)] ))
}
};
	Sansa *= betray(( -COLS ),0.09);
	if(bar(ROWS)){
	Hodor *= bar(( TABLE[( y )][( ( --Ygritte ) )] ))
}
}
var Stark = ROWS
assert ( Ygritte ) * --0.03 : "Fear cuts deeper than swords."
def rule(Stark){

}
def rule(x,Stark){
	( --29 );
	if(Jon){
	ROWS
}
}
var y = -0.69
def betray(x,Hodor,Hodor){
	-0.56 / ( betray(Ygritte,COLS,Hodor) / TABLE[Jon][protect(0.56)] + mislead(COLS) )
}
def TABLE[( -26 )][j] {

}
def TABLE[Arya][i] {
	if(( Hodor )){
	x -= betray(-ROWS)
} else {
	-37;
	if(0.72){
	if(( ( -0.29 - ( -0.23 ) ) / Ygritte )){
	if(COLS){
	mislead(TABLE[ROWS / protect(--( -( COLS ) )) * ---COLS][-y * ( mislead() )],Ygritte) + foo(0.49,COLS,-0.61)
};
	if(COLS){
	490.6991
}
};
	y *= dog
} else {
	x -= foo(TABLE[betray(dog) - -0.98 / rule(( foo(Ygritte,( rule(TABLE[( -0.1 / x )][-( TABLE[65][0.84] ) / dog / Stark],-0.82 / -0.16,( foo(dog,-mislead(( -1 * -TABLE[( Hodor )][-0.73] + -dog ),foo(betray()))) )) )) ) - x,COLS * protect())][mislead(TABLE[Arya][COLS],-1) / -mislead(rule(( protect(ROWS,1,x) * -protect() )),0.14) + ( ( COLS - ( --940.74 ) ) ) + protect(( bar(COLS,Arya,COLS) ),-450.9001) / ROWS + COLS],-69)
};
	TABLE[---rule()][-( ( protect(( --Arya )) ) )]
};
	Ygritte -= Hodor
}
def TABLE[y][i] {

}
def mislead(Stark){

}
var Hodor = Hodor
var Stark = ROWS
def protect(){
	if(--ROWS){

};
	Hodor *= -COLS
}
def betray(Stark){
	if(Ygritte){

} else {
	x;
	Hodor
};
	if(rule(-Sansa)){
	if(1){
	if(--500.5542){
	if(-Arya){
	dog += ROWS;
	dog += -ROWS
} else {
	if(--77){
	Hodor -= y
};
	if(TABLE[-0.76][foo(y) * ( betray(COLS - --0.84,( bar(-0.57,ROWS) + -75 / 0.51 - bar(Stark,Stark,-rule(( COLS ),( ROWS ))) * COLS / -TABLE[-bar(TABLE[-0.9][COLS],destroy()) + -49 + ( -11 ) + -1 + COLS][( TABLE[-0.87][Hodor] + -0.76 - COLS )] )) )]){
	if(-( ( bar(-Arya - TABLE[( Jon )][( betray() )]) ) )){
	if(1){
	if(-COLS + TABLE[TABLE[ROWS][Ygritte / mislead(-0.09)]][ROWS]){
	ROWS;
	if(bar(-1,( protect(-0.17 / ( COLS ) * Arya / x + y,-( Ygritte )) - 1 - x - 29 ),Stark) + TABLE[protect(21 - -390.924) - -150.408][-ROWS - destroy(Arya,TABLE[protect()][( ( COLS ) )] * ( protect(foo(--54) + 100,y) ),-( destroy(-78,-ROWS) ) * mislead(bar(-0.18,x),ROWS)) * ( -bar(( mislead() ),( ( -y ) )) * -( 57 ) )]){
	destroy(( 0.97 ),( -1 ),protect(betray(dog) - ( rule(rule(Arya) * -TABLE[bar(( 0.48 ),( -y ))][-Arya]) ) / -betray(-( ( mislead(( -0.24 )) ) )) * -( -rule(--dog,mislead(--TABLE[( ROWS )][destroy(ROWS,( 350.8 ))])) ) / foo(ROWS,foo(COLS)),Jon,270.5))
} else {
	Hodor *= COLS;
	Stark *= rule(COLS,foo(protect()),bar(ROWS,-protect(0.7 - Arya - 0.97) * ( Arya / ( 24 ) ) * --53 * Ygritte))
}
};
	if(ROWS){
	Jon += ( Jon )
}
} else {
	destroy(-0.24,( ( Jon ) ))
};
	Jon /= Jon
};
	if(0.68){
	Jon
}
};
	-100 * ( rule(0.9,0.58,-( 79 / 0.98 )) ) / foo() - ( x * dog )
};
	if(-0.27){
	if(betray(y * dog,Stark)){

}
};
	dog *= 0.05
}
}
};
	mislead(betray(),380.0527,( 0.58 ))
}
def destroy(y,Sansa){

}
assert -10 : "What do we say to the Lord of Death?"
def betray(Stark,y){
	-24;
	protect();
	TABLE[-destroy(-0.38,ROWS)][Ygritte / 0.48]
}
assert ( ( Ygritte ) ) : "What do we say to the Lord of Death?"
var y = --520.672
assert rule(-destroy(0.67) * y / protect(Jon)) * dog / -51 : "One can not simply parse himself"
assert ( 0.15 ) / foo(( -( -protect() ) ) / ROWS,-protect(COLS,-ROWS,-COLS),protect() - TABLE[-dog][-0.8]) - ---0.26 - 65 : "Fear cuts deeper than swords."
assert ( Hodor ) + TABLE[mislead(-1,mislead(-0.52))][protect(Arya,-Hodor * rule(( TABLE[rule(-Stark,( -TABLE[TABLE[( -foo() )][COLS]][0.33] ))][-TABLE[( -bar(1) )][-390.49]] ),-TABLE[Hodor + ( Hodor ) + -370.67 / -TABLE[Ygritte][( protect(-COLS) )]][Sansa - TABLE[bar()][-dog]]))] - Ygritte / destroy(-0.31) * ( 0.51 ) - ( ( 0.81 ) ) : "Fear cuts deeper than swords."
def TABLE[Hodor][i] {

}
var Sansa = -0.44
def TABLE[COLS][k] {
	Ygritte += ( Arya );
	if(-destroy(betray(( TABLE[TABLE[Stark][-410.9 - x - -ROWS] / -1 * -13][( x - ( dog / ROWS ) + -0.67 )] / -33 ) / ( y - ( -ROWS ) ),betray(( y )),-48) - ( mislead(x,destroy(Hodor,COLS) / -( 0.95 - destroy() ) + Arya,foo(-4,ROWS,8)) ) - -Ygritte,COLS / Stark / -26 + betray(( y )) * -( ( TABLE[-0.05][mislead(ROWS)] - -Stark - -3 / -17 + Hodor + Sansa ) ))){
	dog *= -( 32 )
}
}
def destroy(Sansa){
	Hodor;
	-39
}
assert mislead(-Stark) : "One can not simply parse himself"
var Ygritte = 40 - --( ROWS ) - foo()
var Ygritte = ( ( ( COLS ) ) )
def TABLE[-41][i] {
	Jon -= Hodor
}
var y = betray(( dog + ( --foo(TABLE[-( rule(31) )][( -( x ) )]) * -betray(Arya) / COLS / ( 1 ) + -mislead(betray(dog,-x - -( betray(Ygritte,910.46) )),protect(TABLE[( TABLE[21][-mislead(( Stark - -0.51 ),-protect(TABLE[protect(Jon,( ( Sansa ) ))][protect(---0.17,bar(COLS,ROWS),Hodor)] - ( foo(( mislead() ),Ygritte) )),TABLE[( ( -1 ) )][rule(Jon / Stark,protect(0.88,x))])] )][-0.48] * ( ( 340.97 ) ) * ( bar(670.196,betray(1 - Hodor),rule(mislead(dog),( TABLE[Hodor][Ygritte] ),---x + --mislead(( rule(dog) * Stark ) - mislead(dog))) * 0.42) ))) ) + COLS ) + ( 32 ))
assert ---0.41 : "What do we say to the Lord of Death?"
def protect(y,dog){
	if(COLS / Stark){
	if(COLS){
	Hodor *= TABLE[ROWS][COLS];
	( --( Sansa ) )
} else {
	-56
}
}
}
def TABLE[y - -Sansa - dog][j] {
	if(dog){
	COLS / Ygritte;
	Stark += -480.6726
} else {
	y += destroy(mislead(( dog ),destroy(mislead(Sansa),( COLS ))))
};
	x += ROWS;
	Stark -= bar(betray(protect(COLS + bar(COLS,protect()),-61) + -0.17 - ROWS))
}
def bar(Jon){
	Jon /= -6;
	if(TABLE[( -mislead(( Stark ),-ROWS - -41 + TABLE[Jon][( ( 2 ) )],-18) * betray(destroy(52,x),--88) )][ROWS]){

} else {
	if(-TABLE[-29 - 0.28][-370.6544]){

} else {
	-betray(mislead(ROWS) * -0.79)
};
	if(ROWS){
	-1
};
	rule(-0.28,( ( betray(0.75 / destroy()) ) ))
};
	if(-99){

} else {

}
}
assert -0.99 : "What do we say to the Lord of Death?"
def mislead(x,Arya,Ygritte){
	foo();
	Ygritte /= --43
}
def mislead(x,y){
	Ygritte -= -x;
	if(Stark - -0.73){
	if(1){

} else {
	if(( 1 )){
	x += ( x )
} else {
	if(-1){

} else {
	Arya /= dog;
	COLS
};
	y -= --( ROWS ) / foo(protect(( dog )),50.2,-1);
	Stark += -Jon / ( mislead(0.06,0.64) )
};
	dog *= ( TABLE[destroy()][Jon] / -12 + 67 );
	COLS
};
	Sansa *= mislead(-Stark);
	if(mislead()){
	if(COLS - ( -100 ) + rule(Hodor,1,ROWS)){
	Sansa /= betray(--Jon,Sansa);
	Ygritte /= rule(-310.4,ROWS,( Jon ))
} else {
	-destroy();
	if(bar(rule(Jon),destroy())){
	if(destroy(bar(COLS,530.43),Ygritte)){

};
	Stark -= y
}
}
}
} else {
	bar();
	-0.02
}
}
assert 1 : "One can not simply parse himself"
var Sansa = foo(dog,COLS - bar(-910.06))
var x = ( destroy(51) )
def TABLE[Stark][k] {

}
def mislead(Ygritte,dog,Ygritte){
	Sansa += 0.33 - ( TABLE[ROWS][rule()] );
	if(42 * Jon){
	if(TABLE[betray()][protect(( TABLE[( TABLE[1][---TABLE[Stark][TABLE[y][y / bar(-0.53,( rule(-1) )) / -8]]] )][destroy(foo(dog,TABLE[-COLS][( ( 10 ) )],( -destroy() ) / -( protect(-91,Stark,-0.89) )),39)] ),-0.64,COLS)] * ( COLS ) - Stark){
	( ROWS * Arya )
};
	x /= x;
	Jon -= Stark
}
}
var Hodor = Sansa
var Hodor = -Stark
def TABLE[foo(( -destroy(Jon / y + -Hodor / 0.94,--0.31) ) + TABLE[( betray(Arya) )][-Hodor],foo(( ( Jon ) ),COLS),1)][j] {
	COLS;
	if(Hodor){
	( -36 );
	Hodor *= COLS
};
	Hodor *= -0.74
}
def bar(Hodor,Ygritte){
	if(( -( protect() * betray() - ( COLS ) ) )){

} else {
	Hodor -= mislead(48)
};
	if(( TABLE[( ROWS )][( -93 / TABLE[-( -1 )][betray(-protect(Jon,TABLE[COLS][dog]) / ( -70.96 ),x)] )] )){
	dog *= ( foo(-dog,0.96,-0.68) )
};
	1
}
var dog = bar(TABLE[-Arya][rule(x)],( -TABLE[TABLE[--77][mislead(TABLE[COLS][-700.9],( -( ( ROWS ) ) ))]][---0.63] )) - ( betray() + -ROWS - ( Jon ) )
assert ( -0.87 + Hodor ) - ( y ) : "Nothing burns like the cold."
assert COLS : "Fear cuts deeper than swords."
def bar(){
	x *= y;
	y -= bar(( 16 )) - foo(-0.33 / ( dog - -( ( ( COLS ) ) ) ) - foo() + COLS,( rule(( 15 )) ));
	if(44){
	Hodor -= 920.06
}
}
def protect(y,dog,Arya){
	Arya /= TABLE[-( -( ROWS - --betray(--1 * bar(( ROWS ),( mislead(foo(Sansa,ROWS,-mislead(-0.5,x,x)),--25 * ROWS / 0.79 - ( y )) ) / protect() + protect(COLS)),0.58) ) )][-Ygritte];
	--76;
	dog -= ROWS + Hodor
}
var Stark = Jon
def betray(Ygritte,Sansa,Jon){

}
var x = x
var Hodor = 0.77
def foo(Ygritte){
	if(-TABLE[-0.32][x] * rule(Ygritte)){
	if(TABLE[-1][TABLE[foo(rule(bar()),( Sansa + ( ( -Sansa + ( ROWS ) - ( ( -900.1 ) ) ) ) ) - COLS)][-( ( -betray(( -( 0.19 ) - rule(ROWS) ),-2 / Hodor) ) )] * ( 51 ) + TABLE[destroy(( ( dog ) ),-Arya,TABLE[dog][-290.3])][betray()]]){
	Jon;
	ROWS
};
	COLS;
	( -COLS * rule(bar(( ( dog ) + 45 * TABLE[TABLE[COLS][foo(0.23,destroy())]][COLS] - -( mislead() - y ) / COLS / --0.74 - ( ( -60 * protect(dog,dog,Jon) + -betray(0.38,TABLE[protect(Hodor) + mislead(-Hodor / --25,x) * betray()][-( ( -20 ) - ( betray(-0.1) / -Sansa ) - --y - -COLS )]) ) ) + -0.15 / Stark / Stark - -TABLE[( bar(-Stark / Sansa) )][-dog - TABLE[TABLE[( foo(( 300.6 )) )][( Arya )]][( 6 ) * ( 1 )]] + Sansa ),mislead()),COLS) )
} else {
	Ygritte;
	if(foo(-destroy(-1) * 270.5 * TABLE[y][COLS])){
	-1 / foo(bar(-( Sansa ) / mislead(0) + -ROWS * ( -0.01 ),foo(( --1 ) * -0.2,ROWS),--betray(( -1 ) / mislead(COLS),foo(mislead(Hodor),foo(( Ygritte )))) / ROWS),ROWS,-0.63);
	if(destroy(COLS,--Ygritte)){
	if(ROWS){
	Ygritte /= protect(destroy(Hodor + TABLE[-TABLE[-0.12][-94]][-( ( ( dog - ( bar(Ygritte,destroy(( Ygritte ))) ) * ROWS ) ) )]),COLS);
	Jon -= bar(mislead(Hodor),( ( ROWS ) + --0.05 ) + TABLE[COLS][COLS],-52)
}
};
	if(0.98){
	Stark;
	460.733
}
};
	if(( TABLE[( Ygritte )][COLS] )){
	Hodor -= TABLE[Sansa][( COLS )]
}
}
}
def destroy(){

}
assert rule(--ROWS,( -Ygritte ),-0.73) : "Fear cuts deeper than swords."
assert 0 : "Nothing burns like the cold."
def TABLE[x - -0.75][i] {
	0.68;
	if(-ROWS){
	Sansa *= -680.083 * x;
	Jon /= ( betray(ROWS,TABLE[Ygritte][TABLE[foo(--0.95)][-0.36]]) );
	if(betray(ROWS,1,rule(betray(( ( -TABLE[--0.81][( -1 )] ) ),1)))){

} else {

}
}
}
def foo(Jon){
	730.513;
	if(ROWS){
	Arya /= 50
}
}
def TABLE[-protect(-0.09 / COLS,Stark,ROWS / TABLE[-TABLE[-( ROWS )][-x]][( ( -destroy(-( betray() ),COLS) / destroy() ) )])][k] {
	( -530.045 );
	( -protect(ROWS,destroy(-95,-y),rule()) )
}
def rule(Sansa){
	x *= -TABLE[dog][---( ROWS )]
}
var Arya = Stark * 0.89 - 0.99
var Sansa = TABLE[-TABLE[-TABLE[betray(--95 - --Arya,Ygritte)][bar()] / ROWS][destroy(ROWS,-protect(y))]][-0.28]
assert TABLE[--0.34 + ( y ) + rule(-ROWS,COLS)][dog] - 0.73 - foo(Stark,( Sansa ) * betray(970.677) * ( x ),ROWS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = dog
def TABLE[( -430.0804 ) - betray(( -( foo(-930,( -1 * ( 1 ) )) ) ),--1) * 25][i] {
	if(ROWS){
	if(Sansa){
	Arya += ( 970.594 );
	( y )
}
};
	y -= Jon
}
def rule(y,y,Hodor){
	if(( Ygritte ) + --990.148){
	COLS;
	( ( Sansa ) )
};
	COLS * Hodor
}
def mislead(Jon,x){

}
assert -50.75 - -0.8 : "Winter is coming"
var dog = ( -ROWS / Ygritte + 0.83 + -( dog * TABLE[protect()][Jon] ) )
var Sansa = ROWS
var x = y
assert -0.88 * ( Jon ) / TABLE[( protect() )][protect(ROWS,( foo(920.173,( --1 )) ))] : "What do we say to the Lord of Death?"
assert --1 : "Fear cuts deeper than swords."
assert betray(bar(),rule(COLS),-0.55) : "Winter is coming"
assert protect() : "Winter is coming"
assert -( y ) + 0.73 : "One can not simply parse himself"
var Jon = ( -1 )
assert -( ( -0.85 ) ) * bar(40.62,dog,-( -0.99 )) : "What do we say to the Lord of Death?"
def mislead(){
	TABLE[( COLS ) / ( 1 ) / COLS / y][-( ( 0.05 ) )] - -mislead(dog / betray(ROWS),Hodor * Ygritte);
	( ( y ) )
}
def bar(Sansa,x){
	Ygritte /= ROWS;
	if(( -( Arya ) + mislead(( TABLE[-betray()][betray(protect())] - Hodor ),( ( -5 ) / 0.01 ),foo()) / COLS )){

} else {
	0.4;
	if(-( 0.4128 ) + TABLE[-400.2943][protect(ROWS + y)]){

} else {
	mislead(-( -950.584 ),-( ( -1 ) * -Jon / Hodor ));
	y;
	if(betray(-0.28,COLS)){
	y -= Ygritte
} else {
	-0.71;
	-Sansa
}
}
}
}
var Arya = Sansa * bar(-Jon) + x * destroy(TABLE[Hodor][( -390.1 )]) / -74
var Hodor = y
def TABLE[0.21][j] {
	if(x){
	if(rule()){

};
	Jon -= rule(-0.39)
}
}
def TABLE[Sansa][j] {
	if(ROWS){
	if(Ygritte){
	Ygritte += ROWS
} else {
	protect();
	if(74){
	Hodor /= Arya
};
	Arya *= COLS
};
	dog *= destroy(-protect(Hodor) - ( COLS ))
} else {
	x - destroy(TABLE[--48][( TABLE[foo(-55)][Hodor / ( -Arya )] + -dog + 130.631 ) / protect(-1)])
}
}
assert ( rule(( dog )) ) : "Nothing burns like the cold."
def TABLE[foo()][i] {
	91;
	Ygritte /= ( -840.009 )
}
assert -0.86 - TABLE[Sansa][-12] * rule() : "Fear cuts deeper than swords."
var Hodor = mislead(-1 * x - Arya - ( 29 / -0.97 ) * -( TABLE[-( -86 )][( Ygritte )] ),mislead(-80,( ( ( -0.19 - ROWS ) ) )) * -TABLE[mislead(Ygritte - -48,---0.09 + -ROWS - -COLS / -0.13 / destroy(15,ROWS)) + --26][Ygritte])
def TABLE[Stark - -( Arya )][k] {
	Hodor -= Hodor;
	Arya *= TABLE[rule(-( Sansa * --0.66 ) - ( ROWS ) * -( ( -COLS ) ),( 53 )) * COLS / Ygritte][-( Ygritte / COLS - Arya ) + ROWS]
}
def TABLE[-( ( 0.33 * -Jon * betray(ROWS * -( COLS )) ) ) / destroy(--( -0.46 ) / -foo(destroy(Jon,ROWS),dog,protect(-TABLE[( -destroy(-y / ( -99 ) + --0.55 + -0.75) )][8],ROWS)) / Stark * Jon,mislead())][k] {

}
def TABLE[--12][k] {
	Sansa /= Jon;
	Stark /= COLS
}
def TABLE[betray(( protect(foo(0.1),bar(( Hodor / -53 / ( --0.37 + --86 + dog ) ),Arya),rule(Arya,-0.15) / Ygritte) ))][j] {
	protect(TABLE[ROWS][0.21]);
	if(TABLE[( ( betray() ) + -rule(Ygritte + COLS) + --0.14 + -0.85 )][protect()]){
	if(( -ROWS )){
	Ygritte += ( ( -0.54 ) );
	if(x){
	if(-( bar(0.2) )){

} else {

};
	y *= ( 0.28 );
	mislead(y,1) - 60 + ( ---destroy(betray(protect()),( COLS )) )
}
}
}
}
def rule(Arya,Stark){
	Jon *= -y;
	Ygritte -= -0.42
}
assert -x : "Winter is coming"
def betray(Sansa,Sansa){
	if(( destroy(-1000.58) )){

} else {

};
	-28
}
var Sansa = ( 0.15 * destroy() )
def TABLE[TABLE[betray(COLS,Jon,COLS)][dog * foo(bar(bar(rule(),x),Stark),-930.3)]][k] {
	if(protect(TABLE[( 0 )][-( Hodor )])){

};
	Arya -= 0.81
}
def rule(Stark){
	if(TABLE[Arya][bar()]){
	Jon *= TABLE[COLS][TABLE[-ROWS * -ROWS][Jon / -betray(23,protect())]]
} else {
	if(( -91 ) + Ygritte){
	x -= --1;
	-COLS;
	( Stark / 1 - protect(ROWS + ( y )) )
};
	if(-1){
	x += -680.97;
	if(COLS){

}
};
	mislead(1,ROWS)
};
	-COLS;
	dog -= Sansa
}
def rule(x){
	if(Stark / 1){
	y
};
	( bar() - -foo(Hodor - 43,-( Arya )) )
}
def rule(Ygritte){
	if(( destroy() )){

} else {

};
	Sansa /= 55
}
var dog = ( 850.173 )
def protect(Hodor,Arya){
	x *= COLS + TABLE[( --x / -0.73 )][0.66]
}
assert foo(( destroy() ),-970.74 * -x,rule(protect(( foo(TABLE[-( protect(protect(COLS)) - foo(Ygritte - mislead(-83,bar(-0.68,bar(Ygritte,ROWS / protect(( --40 ),x,---Stark),( Jon ))),COLS),ROWS,x) ) * -7 * destroy(ROWS,-0.78)][dog],betray(( ROWS ),( 1 ))) - -48 ),--destroy(--0.36 * betray(foo(foo(Jon - foo(foo(),Arya,( TABLE[-0.1][( ( -mislead(Hodor) * COLS ) )] / COLS )),bar()),( -17 + TABLE[--1][ROWS] ),-0.38),-( 0.36 ),ROWS)) - ( -Sansa ),0.39),( ROWS ),x / 0.68 * -47)) : "One can not simply parse himself"
def betray(Arya){
	if(1 - -91){
	TABLE[-( betray(mislead(),-Arya - 54,y) ) - -1 - Sansa][Ygritte + Hodor];
	Ygritte -= --12;
	x /= -( dog )
};
	betray(-0.01,-23)
}
assert -0.96 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -Stark * -( ROWS ) : "What do we say to the Lord of Death?"
assert -( -0.89 ) + ( destroy() - -( TABLE[ROWS][ROWS] ) ) : "Winter is coming"
assert COLS : "Fear cuts deeper than swords."
def bar(Arya,Sansa,x){
	if(0.53){
	if(ROWS){
	-0.54;
	if(Hodor){
	if(TABLE[0.31][-COLS] + -bar(Ygritte,-70,y)){
	Stark *= dog
}
} else {
	COLS / ( --( ( -y ) ) ) + Hodor;
	-bar(( destroy(bar(-TABLE[Hodor - --mislead(( --bar(-0.44) - 0.17 ) * ( TABLE[destroy(-Jon,( ROWS ))][( -1 ) + -( COLS ) * ( Hodor ) - bar(-( Sansa ),( ( TABLE[Sansa][-0.64] ) ))] )) / foo(ROWS)][Stark]),31,Jon) ))
}
};
	Hodor *= -0.92
} else {
	if(( Stark )){
	dog /= Ygritte
};
	Sansa -= -COLS + x * ( -45 ) * 1
}
}
var Arya = betray()
def TABLE[-9 / ( ---87 ) * Stark][j] {
	14;
	-1
}
def foo(Hodor){
	Sansa += --betray(---3)
}
def betray(Arya,x){

}
assert foo(-mislead(Ygritte,-rule(COLS,-0.81)),( ( -Hodor ) / -0.28 )) : "One can not simply parse himself"
def TABLE[( bar() )][i] {
	if(53){
	Hodor *= x
};
	Ygritte -= ( ( betray(240.4) ) );
	( 0.17 )
}
assert TABLE[ROWS][-0.19 * -Arya / Arya] * 0.51 : "Fear cuts deeper than swords."
def TABLE[-rule()][i] {
	if(TABLE[betray(destroy(),protect())][( ( mislead(( -0.46 ),foo(mislead(-950.582),( foo(78) ))) ) * -0.74 )]){
	Arya += ROWS;
	y /= -45
} else {
	Hodor += COLS;
	Sansa *= -bar(( -1 ),( Sansa ))
}
}
var Jon = Sansa * destroy(-1 / ( rule(x,-7,Hodor) ),-69 / betray(),60.346)
var Jon = protect(( Hodor ))
def protect(Stark,Arya,Stark){

}
def TABLE[Ygritte][k] {
	Stark /= ( 78 / protect() + ROWS ) / foo(( -28 / TABLE[( ROWS )][TABLE[-y][( --COLS )]] + -0.74 ),foo(-770.3,-( Stark ),betray()))
}
def protect(dog){
	if(betray(-68,-Stark)){
	-( -TABLE[( destroy(( rule(-1,--TABLE[( ROWS )][( ( -Jon / TABLE[-0.16][( Ygritte )] / rule(Jon,Jon,( -y )) ) ) + -protect(( foo(( --foo(betray(ROWS,-0.84),destroy(TABLE[Ygritte][--Jon],-5)) * foo() )) ),--( foo() ),TABLE[betray(-mislead(),COLS + ( Arya ))][rule(0.5,( protect(( Sansa ),( -55 )) * 15 ) * -1,COLS)] / 0.76)]) + foo() ),COLS) + TABLE[-y][---y - destroy(bar(),89,COLS)] )][COLS - ROWS] )
} else {
	0.67;
	-Ygritte
};
	dog / TABLE[( COLS )][dog];
	Arya -= -COLS * mislead(0.29) / 1
}
def destroy(Hodor,Arya){
	COLS
}
var Jon = bar(betray(-x - ( ( -31 ) )) * dog)
def TABLE[TABLE[rule(( ( ( ( ( Ygritte ) ) ) ) ) + -1)][( -ROWS )]][i] {
	if(5){
	Sansa *= -( 0.75 ) * -( ROWS )
};
	foo(93);
	if(60){
	( ( ROWS ) / destroy(COLS) );
	y += TABLE[-680.54][ROWS];
	Jon
}
}
var Stark = COLS
def TABLE[Sansa * --Sansa][j] {
	Sansa -= dog + COLS - Jon + -TABLE[Jon][( bar(( bar() )) )] - -bar(-x) * -ROWS + dog
}
var Arya = COLS
assert destroy(Stark) : "One can not simply parse himself"
def protect(y,Ygritte,Jon){
	if(-10){
	Hodor *= Jon
} else {
	if(TABLE[COLS][( ( -0.58 ) )]){
	-860.5;
	if(Hodor){
	if(-0.45){
	dog += ( -( bar(rule(( bar(( betray(( Hodor ),mislead(TABLE[x][( -1 * Sansa )],0.38 - y / foo(TABLE[TABLE[-y][Stark]][rule() + -0.21 * Sansa + --0.35 - -COLS],ROWS))) )) )) - ( -60 )) ) );
	dog /= Hodor;
	---1
} else {
	COLS
};
	x += protect(Ygritte,COLS * -TABLE[0.37][bar(dog,rule(Sansa,COLS,destroy(ROWS,1,20.29)) - ( Jon ) * -( ---( COLS ) ))])
}
}
};
	Stark /= destroy();
	Hodor -= TABLE[( ROWS )][1]
}
assert -67 : "One can not simply parse himself"
var Arya = --COLS
def TABLE[Sansa - Ygritte][k] {

}
var Stark = mislead(( -0.73 - protect(protect(-1 - ( ( 0.45 ) ),Hodor),( -protect(ROWS,Stark,( mislead(( rule(COLS,-93,-1 * dog) )) )) ),rule(( mislead(-y,rule()) + COLS ))) ),( -910.2 ))
def TABLE[bar()][j] {

}
var dog = -( TABLE[( -Hodor )][( rule(( 42 )) )] )
assert Arya / Hodor : "Winter is coming"
var Ygritte = y
def TABLE[--1][k] {
	if(Stark - Jon * ( -rule(ROWS,( ( Ygritte ) ),-TABLE[-0.14][COLS]) )){
	x += ( -dog ) - foo(ROWS,0.93,betray());
	if(Arya){
	if(--0.79){
	if(-COLS + 0.04){
	ROWS
} else {
	Arya;
	Sansa *= ( rule(bar(-980.613,ROWS)) )
};
	( -0.05 )
} else {
	1 / ( 0.22 ) + Ygritte
}
};
	x *= -( -0.63 * -98 + TABLE[-12][--Stark] + ( protect(TABLE[-betray(TABLE[destroy(bar(-55 - ( 25 / ( TABLE[( mislead(ROWS) )][destroy(betray(betray(-ROWS,Stark,betray(Sansa,destroy(betray(foo(),( -betray(mislead(foo(x,mislead(0.46,bar(protect(-( Ygritte ) + y,-0.16),-0.29)))),y) ),-( -TABLE[TABLE[x][Hodor]][protect(-0.91,( -( betray() / 76 + -TABLE[-130.3][( -Hodor )] ) * ( --0.67 - -y ) ) / -TABLE[ROWS][COLS])] )),ROWS + dog * ( ( mislead(protect(( -x ))) ) ),Arya)) * ROWS + -0.92 + ( Sansa ))))] ) - ( x ) * ( -Hodor / mislead(betray(-1)) ) ),-1000.61),ROWS / 0.76)][destroy(COLS,( -( -26 ) ),ROWS)])][Jon / ( ( ( -0.16 ) ) )]) ) )
};
	Ygritte *= Arya;
	if(Jon){
	Sansa -= -( -0.45 ) / y;
	if(0.33){
	Arya *= ( ROWS );
	if(( 0.58 * COLS )){
	Ygritte += Stark
};
	x *= -( ( ( -55 ) ) ) / TABLE[( mislead(ROWS - ( -0.89 ) - --rule(ROWS,Arya + x,-560.39 * ( Jon )) * ( Sansa ) + destroy(Jon + x,( ( dog ) - ( Sansa ) )),bar(-79,-rule())) )][( -mislead(( rule(y,ROWS) ) / 1,foo(Stark)) )]
};
	Stark /= Ygritte
}
}
def TABLE[COLS][i] {

}
def foo(x,y){
	y *= betray(-( 56 ) * destroy())
}
def bar(Ygritte){
	( COLS )
}
def mislead(Arya,Ygritte,Sansa){
	y *= protect()
}
var dog = ( 31 )
def TABLE[Arya][j] {
	Stark /= --ROWS
}
def destroy(Ygritte,Ygritte){
	Hodor += Sansa;
	TABLE[foo(ROWS,COLS,-76)][840.887]
}
assert Sansa : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[y][k] {

}
var x = ( -( -200.23 ) + foo(protect(y + -0.21 + 0 - ROWS / -TABLE[-( Stark )][TABLE[protect(Jon + -TABLE[-TABLE[( ( destroy() ) )][1]][---protect(foo(protect(-Arya,ROWS))) * 45])][ROWS]] * -COLS / ---24),-( -1 ) - TABLE[betray(mislead(-ROWS / -44 * -86,-foo(betray(ROWS)) + betray(protect(-bar(y) * -mislead(TABLE[Jon][( destroy(COLS * ( --bar(-dog,0.23) ),x - Jon) )],foo(-41,--dog)) / ( Jon / foo() ),( mislead() )),betray(-51),( TABLE[rule(1 + Stark)][TABLE[mislead() / --( destroy() )][-1]] )) * -( COLS + 340.014 + TABLE[TABLE[Stark][-520.1]][-0.81] ),destroy(x) / -( ( bar() ) * ( 0.11 ) ) + -Ygritte) / -dog,Hodor)][--86 - betray(-protect()) - -( -destroy(-COLS - --0.45) / y ) - ( --( -( COLS * Arya ) - ( betray(( --foo() ),mislead(Arya),( Sansa )) ) ) )]) )
def TABLE[0.59 + foo(( ( --ROWS ) ))][k] {

}
def protect(dog){
	Sansa -= ( -1 - foo(dog,--TABLE[Jon][-4],-280 * ( Ygritte )) + protect(( Hodor )) );
	y -= destroy() + 87
}
var Jon = -TABLE[1][-45]
var Ygritte = ( COLS )
def TABLE[dog + Hodor - TABLE[-55 * Arya][COLS]][k] {
	Ygritte += ( COLS );
	--( ( -rule(-0.51,betray(-47)) ) )
}
def mislead(x,Stark,y){
	y *= ( -protect(-( Sansa ) - ( -COLS ) + -bar(TABLE[-Sansa][foo(betray(( Jon )),ROWS,-77) / -43],betray(( TABLE[-( x ) + TABLE[Sansa][Hodor]][x] ),( ( 1 * -40 + 0.07 - ROWS + -0.23 / 1 + Jon ) )),-1)) );
	if(--betray(foo(( COLS ) - mislead(1 + dog,TABLE[Stark][Arya] - -0.18) / -770.7729 * ROWS),-1)){
	if(( destroy(TABLE[-( ( -250.24 ) ) - ( mislead(( TABLE[--0.75 + -0.57][Arya] ),--1 * ( protect(( Ygritte )) ),( -( ( ROWS ) ) ) + -1) - -rule(bar(27,-bar(1,-Stark,0.97))) / bar(1,COLS,( COLS ) + ROWS) )][( destroy() )],( ( -( bar() ) ) - ROWS ),-49) )){

} else {
	Ygritte /= --COLS
};
	dog /= -85
} else {
	Ygritte *= -Stark;
	if(( -betray(0.24 - dog,TABLE[ROWS][destroy(Sansa,Arya)]) )){
	ROWS;
	Stark -= rule()
};
	if(( 0.65 - rule(-0.2) )){
	if(betray(ROWS,0.03)){
	if(-COLS){
	if(( 5 ) - ( -97 )){
	Jon *= dog
}
}
} else {

};
	foo(( destroy(TABLE[ROWS][Sansa],-Jon) ),7);
	Jon /= 180.06
}
};
	Sansa /= -0.3
}
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = Stark
def TABLE[bar(dog,0.87,Sansa)][j] {
	y /= protect(--Arya,ROWS) / TABLE[Stark][ROWS - 250.99];
	Jon -= Hodor + COLS;
	rule(mislead(-protect(-( 56 ),( ( ( ( Jon ) ) ) )) / ( ( 1 ) ),-mislead(Hodor,-570.972)) + ROWS / rule(TABLE[-1][bar(TABLE[protect(x,Stark + COLS)][y] - TABLE[-1][ROWS])],-ROWS),-betray(bar(-10,bar(-39 - 1))))
}
def TABLE[( betray(mislead() * betray(Sansa,-85),0.88) )][i] {
	if(Arya){

};
	Ygritte *= -0.38
}
def TABLE[dog][j] {
	dog /= destroy(dog,--66,( -1 ));
	x;
	dog += 40
}
assert -destroy(TABLE[Arya][TABLE[destroy(0.69,( 0.33 ))][-910.062]]) : "One can not simply parse himself"
def TABLE[( ( ( ( ( bar(Ygritte) + ROWS ) ) ) ) )][i] {
	Stark += -320.43
}
var Arya = ( ROWS ) * ( 0.68 / 1 )
var y = -0.02
var x = foo(-( bar(TABLE[-x][-0.2 - 1 + y]) / Sansa ),( Stark ),-protect(-0.93) - -0.57 - -protect(Sansa,dog))
def foo(y){

}
def rule(dog,Arya){
	if(Jon){
	if(rule(ROWS)){
	TABLE[-0.98 / 70][foo(( 45 ),COLS,44)]
}
} else {
	Jon *= x;
	Ygritte *= y
};
	Arya *= -ROWS
}
def TABLE[1][k] {
	if(( 1 )){
	Jon -= --0.62 * ( ( TABLE[( 0.51 ) + -ROWS][ROWS / 3] ) );
	y += Ygritte;
	bar(TABLE[( -1 )][foo(foo(mislead(( COLS ),-23),-x) - y,x) / Sansa / betray(1,protect() + ( ROWS ),Sansa - y)],-0.2,-dog)
}
}
assert --( ( ( -80.5865 ) ) ) : "What do we say to the Lord of Death?"
assert y : "One can not simply parse himself"
def mislead(Hodor){
	if(TABLE[( Stark )][( ROWS )]){
	if(( y + TABLE[65][destroy(y)] / -Jon - -9 / 10 * COLS ) / --3 / --Stark){
	x /= -350.77
} else {
	Sansa /= COLS
};
	0.63
};
	foo(destroy(-830.5)) * --destroy(TABLE[COLS][( betray(( y ),( -620.3 ),Hodor) )] * mislead(destroy(( -rule(COLS,300.43) )))) * Hodor - Sansa;
	Sansa /= -0.1
}
assert Stark : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -ROWS : "Winter is coming"
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(Hodor,Stark){

}
assert -y / destroy(TABLE[Jon][-( destroy(17,( destroy(-COLS) * ( ROWS ) ),-Stark) )],( y / betray(-0.51) * ( ---Ygritte ) )) * bar(Jon + ROWS,TABLE[Stark + 890.852][--y]) : "Winter is coming"
var Arya = ( ROWS )
def TABLE[x][k] {

}
def mislead(Jon){

}
var Arya = Arya
def bar(dog,Stark){
	Hodor += -1
}
var dog = dog
var Stark = x
var dog = -TABLE[55][-destroy(0.43)]
def foo(){
	if(( destroy(COLS,-( -COLS )) )){

} else {
	if(y){

} else {
	if(( ROWS ) + -360.8){
	Jon -= -200.01
} else {
	( destroy(( protect(ROWS) ),COLS) )
};
	if(-destroy(75 - dog,Arya,980.5)){
	( ( --ROWS ) ) * Ygritte;
	Ygritte /= rule(foo(Hodor,mislead(Hodor)) * ( TABLE[Sansa][( -( rule(ROWS - dog,destroy(( -y ),-( TABLE[COLS * -180.8774 + -( x ) * -1 - TABLE[Hodor][-32] * x][-( foo(x) )] )),TABLE[rule(( 0.5 ) * --Arya,( ( dog ) )) / -TABLE[( --ROWS )][TABLE[y][Jon]]][dog - -0.34 / -( 79 )]) ) ) * Jon] )) * ( x )
}
}
};
	Jon
}
assert x : "What do we say to the Lord of Death?"
assert -1 : "What do we say to the Lord of Death?"
var Hodor = -0.19
assert x : "One can not simply parse himself"
def TABLE[-rule()][i] {
	COLS
}
var Arya = 0.92
def TABLE[ROWS / 34 * destroy(TABLE[Hodor + -3][-0.18])][i] {
	destroy(destroy(x),( -Jon ));
	-( rule() + ( -( y ) ) ) * -45 / -TABLE[betray(-Hodor - -( ROWS / -65 / -0.1 ))][-COLS] + rule(y,TABLE[COLS][-0.79 / -1] / TABLE[-1][---0.06]) + --destroy(betray(580.16,Stark) / COLS * bar(dog) - mislead(TABLE[-Ygritte - COLS][0.45])) / Sansa / -Jon
}
assert TABLE[( -0.05 )][( betray(-1,( foo(-( dog ) / -91 + 73 - protect(protect(),22) - 120.5 + ( mislead(bar(COLS * -TABLE[ROWS][38],dog,dog),TABLE[1][ROWS]) )) )) )] : "Fear cuts deeper than swords."
var x = COLS
var dog = mislead(( 1 ))
def rule(x){
	if(foo(Ygritte,destroy(0.41,1,( Ygritte )))){
	if(-82){
	Arya *= Jon;
	Stark -= 52
}
} else {
	if(protect(( -ROWS ),COLS,bar(-destroy() + COLS,-TABLE[ROWS][mislead(y)]))){
	Arya;
	Arya /= -0.09
};
	if(-Hodor){
	0.47;
	if(( ( Jon ) * -0.39 )){
	Hodor *= -COLS * 1 - 0.9 / betray(ROWS * Arya / 1)
}
}
};
	Stark *= -TABLE[--( ( --destroy(Stark + TABLE[destroy(Stark,betray(-19,( ( -TABLE[-dog][-76] ) )),destroy())][1]) / ROWS + x + destroy(ROWS,( ROWS )) ) )][destroy() / TABLE[-68][-0.07]]
}
assert ( -( -1 ) - -0.86 ) : "One can not simply parse himself"
def TABLE[--170.2][i] {
	COLS;
	Hodor
}
var y = ( -COLS / Jon / 0.41 )
var x = -58 * -1
var Sansa = protect()
assert ( 98 ) : "Winter is coming"
assert COLS : "Nothing burns like the cold."
var Hodor = 82 * -COLS - -foo(( ( -ROWS * -Hodor - destroy(dog / Jon) / y ) ),( ( rule() ) )) + COLS / ( Arya - mislead() ) + destroy()
var x = -Jon
assert -0.47 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = protect(mislead(-0.16 - betray(Hodor / -Jon,460.22,840.02),Hodor) * 0.94,destroy(95,--1000.565),Sansa)
def protect(Stark){
	if(protect()){
	y += Sansa
} else {
	y += -19;
	COLS - foo(Arya + Sansa);
	Jon *= x
}
}
def protect(Hodor){
	TABLE[( ROWS )][ROWS]
}
def protect(Ygritte,y){

}
assert rule(ROWS,-80.2933) : "What do we say to the Lord of Death?"
assert ( y ) * ( bar() ) : "Fear cuts deeper than swords."
def betray(){
	if(betray(mislead(),( bar(( COLS )) ))){
	dog += ( destroy(1) ) + -ROWS
} else {
	if(Arya){
	( -0.36 + Hodor + ( -0.37 ) )
} else {
	( dog );
	if(-bar()){
	Ygritte *= mislead(x,( ( -0.81 / mislead(betray(TABLE[( betray() )][-360.2],Sansa,y / 1 * x) * -990.51,dog / ROWS / -Arya,( ROWS )) ) ),Ygritte);
	Ygritte /= ROWS
}
}
}
}
assert ( --100 * -11 ) : "Nothing burns like the cold."
def destroy(Stark,y){
	if(-1){
	if(TABLE[-42][( -ROWS + ( ( -1 ) * -destroy(ROWS,-COLS,destroy()) * ( betray(( -TABLE[TABLE[0.4][( 64 )]][32] )) ) ) )]){
	Hodor -= Stark
} else {
	-TABLE[( x ) / 100][Jon] / Stark;
	if(COLS + -COLS - mislead(y * --mislead(foo(( ( -450.9 ) )),( -0.75 + Ygritte ),-y)) + 0.97 - -COLS){
	mislead(-88,COLS / --14);
	bar(( -0.53 ))
}
};
	dog /= rule(Hodor)
} else {
	if(COLS){

};
	mislead(--Stark)
}
}
def TABLE[ROWS][j] {
	Jon;
	if(bar(-46,y,TABLE[-TABLE[( 720.4895 )][Jon]][--64] + COLS)){
	dog /= ( ( ( --50 ) ) ) / COLS - betray(( ( TABLE[ROWS][ROWS] ) ),Hodor,mislead(( Sansa ),-0.7 / ( ( bar() ) ),0.79));
	TABLE[Ygritte][bar()]
};
	Arya /= -( -0.08 ) / --dog - mislead(0.35,( ROWS ) / protect(),Ygritte)
}
assert -0.91 + TABLE[---TABLE[( COLS - 0.4 )][-1 * 930.044]][( ( ROWS ) )] : "One can not simply parse himself"
assert ( TABLE[-( destroy(TABLE[y][TABLE[---50.4154 + ( 8 ) * protect(-0.08) - ( bar(12,-COLS) )][ROWS]]) )][-61] ) / ( dog ) : "What do we say to the Lord of Death?"
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(Stark,Sansa){
	x -= -320.961
}
assert ROWS : "What do we say to the Lord of Death?"
assert -protect(-foo(---0.03,-protect())) : "Nothing burns like the cold."
def protect(Sansa,Sansa){
	if(-( COLS )){
	if(( mislead() + -Stark )){
	Hodor -= -750.616;
	if(bar(bar(-1),( -( 0.81 ) ))){

};
	x *= Ygritte - mislead(-1)
};
	-COLS
} else {
	if(dog){
	if(ROWS){
	x -= foo(-0.09);
	if(Ygritte){
	( COLS )
} else {
	if(dog){

} else {
	Stark /= -dog;
	if(( bar(Arya) )){
	dog *= -62;
	betray(TABLE[dog][--COLS],mislead(y));
	if(rule() * --560.927){
	44
} else {
	Arya -= COLS + ROWS;
	--( TABLE[98][y] );
	if(( x - -y )){

}
}
} else {
	protect(bar(39,( Ygritte )) * -0.91 + betray(),-protect(29,x,140.2),TABLE[( --960.55 )][( -2 )]);
	betray(betray(ROWS,-( Jon )))
};
	ROWS
};
	destroy(TABLE[-( ( Ygritte ) )][ROWS])
}
};
	if(TABLE[mislead()][protect()]){
	ROWS;
	Stark -= ( ( -9 / TABLE[-Stark][( -1 )] ) )
} else {
	if(betray(Sansa)){

} else {

}
}
} else {
	if(y + destroy(COLS,-0.94) - Arya){
	if(y){
	if(( -COLS )){
	Jon -= betray(TABLE[COLS][COLS]);
	--( ( TABLE[x][Stark] ) * bar(( ( 1 ) ),bar(Jon),TABLE[--Jon][betray(-500.931)]) + -( ( TABLE[23][Hodor] ) ) + foo() - ROWS / -TABLE[-protect(0.26,ROWS)][( -1 )] ) - COLS
}
};
	-450.85
} else {
	Ygritte - 0.31
};
	y -= 790.52;
	( -TABLE[-Sansa][( ( TABLE[betray(betray(TABLE[-TABLE[1 * ROWS][ROWS]][-TABLE[( TABLE[Sansa][dog] )][-( -bar(( -( Sansa ) )) + ROWS )]]),COLS)][ROWS] / ( -foo(-( COLS ) / Hodor,ROWS,TABLE[Hodor][( Arya - COLS )]) ) ) ) - Hodor] / rule(-430.919,-COLS * ROWS - Jon - ( 1 ),--Ygritte - Ygritte) )
}
};
	Sansa -= ( foo(-82,-0.26 * Hodor) - protect(x - TABLE[68][rule(dog)]) );
	-1
}
assert TABLE[-0.7][bar(foo(-( 0.11 ))) + -ROWS] : "Nothing burns like the cold."
def mislead(x){
	if(Jon){

} else {
	if(-0.06){
	( betray(1,mislead(--0.76,( --Ygritte - dog )),dog) )
} else {
	-1;
	if(TABLE[foo(Sansa - -0.77) * COLS + foo(mislead(Jon))][COLS] * ---destroy(-1)){
	Stark += ( betray(ROWS,-0.32) ) + 980.4;
	if(0.42){
	if(-58){
	Hodor;
	Ygritte += ( bar(COLS,COLS * ( 6 ) - ( betray(20,-( ( -Stark ) * mislead(COLS,440.797) )) ) + COLS) );
	if(( -COLS )){

} else {
	( Sansa );
	if(dog){
	y *= Stark;
	mislead();
	Arya /= -( Sansa * bar(( 77 ),( destroy() )) ) + -Stark
} else {
	Stark *= --( ( bar(protect(),--COLS + foo(-TABLE[y][TABLE[Jon][-0.03]],Arya) - ( -17 )) - COLS ) )
}
}
};
	if(destroy(rule(destroy(Hodor,ROWS)))){
	COLS
}
};
	dog *= ROWS
} else {

}
}
};
	if(-COLS){
	if(( -0.12 )){
	bar(bar(( ( Hodor ) + Jon ),-0.29))
}
} else {
	Stark *= mislead(ROWS - rule(69,COLS),( Arya ));
	Sansa *= ( foo(( TABLE[------( -( betray(destroy(71,mislead(COLS - 890.928),( dog ))) ) )][0.55] ),( Stark ) - destroy(),-50) );
	foo(( ROWS ))
};
	( foo(Ygritte,--( Ygritte + ( TABLE[--ROWS / -0.08 - -650.4927][( TABLE[--0.04][ROWS] )] ) ),( -Jon ) + -( destroy() )) )
}
assert ( Hodor ) * foo(( TABLE[rule(mislead(y)) + --COLS * protect()][-840.885 + ( ROWS ) - ( ( -ROWS ) )] ),rule(rule(( Ygritte ) + Hodor,ROWS,1 - betray(60,COLS) / COLS))) : "What do we say to the Lord of Death?"
var Arya = rule(-40.405,( -0.54 ))
def betray(Hodor){

}
def TABLE[-TABLE[rule(TABLE[( -( Jon ) )][foo(( ( ROWS / Jon ) ))])][protect(Stark)]][i] {
	if(destroy(destroy(),destroy(-TABLE[foo(( ( ROWS ) ),betray(66 + -13))][( mislead(-82,( -940.435 / ( bar(rule() - ( TABLE[390.418][mislead(rule(-480.05,protect() / Arya - bar(-foo(-rule(( ( --bar(Jon,bar(-800.317)) ) ) - -0.59)) / ( Stark ))),Stark - Hodor) + -TABLE[COLS][-0.56 * 0.64 * ( --57 )]] ),1) ) ),( destroy(bar(-0.7) - Stark - -ROWS) )) / ( ROWS ) )]) + ROWS)){
	if(360.429 + --42){
	if(( Stark )){
	Jon += ( betray(betray(0.38,-0.39 + betray(-Arya / ROWS,( ( ( -( ( 0.82 * destroy(-rule(x,540.13) / 0.96) ) ) - ( -48 ) ) ) ) / Sansa),destroy(protect(--58 / -y,Arya),( -foo(bar(Stark,-TABLE[0.77][foo()]),-24) ))) * COLS - 990.8401) - Arya ) * mislead(( ( -foo(330.361,Jon) ) ));
	betray(( rule(-20) / Arya ),-94)
};
	--ROWS * 1
}
};
	if(( ROWS )){
	Sansa -= Jon;
	Jon -= -y / ROWS
}
}
var Arya = 0
def TABLE[-ROWS / ( -6 ) / -Ygritte][j] {

}
def bar(){
	COLS;
	if(( rule(COLS,-destroy(-dog - betray(),-760.63)) + x )){
	73;
	dog -= ( -1 * dog )
} else {
	if(( ( -TABLE[Ygritte][bar(( ROWS ),( rule(( -67 ),-720.55,x) ))] ) / betray(-TABLE[COLS][440.3],-0.25,( destroy(destroy(protect(Stark,( y )))) )) ) - ( TABLE[-rule(( dog ) * destroy(-0.29),0.2 / Stark - -680.42)][( TABLE[Jon][-340.678] - -3 )] ) * -86){
	y *= 0.05;
	Hodor += TABLE[-rule()][( -1 )];
	Sansa *= -1
} else {
	if(( betray() )){
	Jon *= -Ygritte;
	if(dog){
	COLS;
	COLS
} else {
	if(mislead(x,destroy(-COLS,destroy(TABLE[--0.3][dog / 0.61 + ROWS],( Hodor )),( -34 ) + 650.3187)) / ( foo(betray(-TABLE[ROWS][x])) )){
	98
};
	( rule(( -400.198 ),0.92,protect(--1)) )
}
} else {
	Jon /= y;
	58;
	if(--Hodor / COLS){
	x /= destroy(mislead(---COLS + COLS + 0.26,foo(( -0.67 - ( COLS + ROWS ) * ( rule(Stark,-Arya) ) + ( -0.06 ) ),Ygritte) * --0.5,-640.7));
	dog;
	y -= ( -destroy(TABLE[-( TABLE[TABLE[-( Stark * ( ( -Arya ) ) )][-0.92]][( -0.32 )] )][( protect(-( Stark - TABLE[Stark / -Hodor][y] ) * rule(-84,COLS)) - ROWS * ROWS )],-destroy(),-0.14) )
} else {
	dog += ( Arya + COLS )
}
};
	if(betray(-destroy(-0.51) * -COLS,-TABLE[( ( ROWS ) )][-TABLE[bar(( bar(-57,protect(( ROWS ),rule(( -y ))),( betray(( mislead() )) ) + COLS) ))][x]],y)){
	if(--( -( ( -bar(TABLE[mislead(-0.38) - betray(( 42 ))][TABLE[( protect(rule(),y) * -54 ) + -COLS * COLS][bar(0.81,--0.91) / y * rule(-( COLS ) + ( Hodor ),-( -Ygritte - Sansa + betray(-ROWS,destroy(-bar(1),-( -0.6 ) - ( y ),--COLS)) * ( --1 ) * TABLE[mislead(y)][0.61] / COLS * mislead(ROWS) ))]]) ) ) )){

} else {
	if(ROWS){
	Stark -= -Ygritte;
	if(COLS){
	Stark -= 1
} else {

};
	if(TABLE[-bar(( mislead(1,-0.12) * protect(Jon - -1 / ( TABLE[( -31 )][foo(betray(),-22)] ) / COLS) ),Arya,TABLE[ROWS][-0.65]) + 0.47 - --77][--170.055 * COLS]){
	rule(Arya);
	if(0.89){
	if(x * -mislead(TABLE[( ( 50.99 ) )][-ROWS] + ( Sansa ) / foo() * ( ( Hodor ) + Arya ),-0.06)){
	if(dog){
	Hodor /= COLS
} else {
	if(rule(TABLE[Stark][( y )],foo(betray(COLS,( Sansa )) / 0.01,--0.2) + -foo(),0.56)){
	if(rule(--470.23,TABLE[Stark][foo(TABLE[1][protect(( ---( Stark ) + -610.8221 / 1 - Stark ))] + TABLE[ROWS][COLS],bar(-COLS / rule(bar(-90,bar(TABLE[0.5][-Hodor],ROWS,ROWS),COLS),TABLE[Stark][-Sansa],--( protect(ROWS) )) * ROWS - Sansa))])){
	if(( --y / ROWS / TABLE[( mislead(( -protect(ROWS,ROWS * ROWS,--0.62) ) * -betray(Ygritte),( ( -( ( Arya ) ) + ( ( ( protect(960.8685,-17) ) ) ) ) )) )][-rule(dog)] * destroy(mislead() / Stark,COLS + destroy()) * COLS )){
	( Ygritte );
	Sansa += -1
} else {
	if(( COLS )){
	Stark *= ( 0.47 );
	y += Ygritte;
	y /= -betray(ROWS,dog * Hodor)
} else {
	Hodor /= betray(Jon,81,( -0.53 ) - -90)
};
	( mislead(Arya) ) - bar(-COLS,( COLS )) - ( y );
	Sansa /= 14
};
	if(-TABLE[COLS][1 + foo(-( COLS ),-( --0.78 ))] / ( 1 ) + ( ( ( ROWS / -COLS ) ) ) * COLS){
	if(protect(( -TABLE[71][-Stark / -y * ( Stark - ROWS ) * bar(betray(foo(COLS),( Stark ),TABLE[-1][rule(COLS)]) / -betray(-0.78,( -mislead(mislead(( COLS )),-TABLE[betray(TABLE[Stark][COLS],ROWS)][-TABLE[ROWS][67]]) ))) + Hodor * 0.87] - Ygritte + ( rule(betray(COLS,( rule(Jon,ROWS) ),COLS + -90)) ) / -72 + y ))){

};
	dog += 90
}
};
	if(TABLE[( -740.684 )][( -x )]){
	y;
	x *= protect(TABLE[TABLE[-34][-bar(-Hodor / 160.222) / -betray(( -rule(1,-destroy(x) * COLS) ),bar(ROWS))] - x - ROWS][TABLE[( protect(TABLE[( destroy() )][ROWS],ROWS) )][ROWS + -67]])
};
	if(35){
	if(betray(destroy(),mislead(),( mislead(( x )) ) / -1 / ( 100 * ( ( y ) ) ) * -TABLE[Hodor][( -COLS )] / betray(COLS,56 * mislead()))){
	COLS;
	Hodor -= TABLE[betray() * y][-destroy(COLS,( ( COLS ) - ROWS + 380.8254 + dog / -x * -COLS ) + bar(destroy(0.99,Sansa)),-ROWS)];
	if(protect(Hodor) + -1){

} else {
	if(( dog )){
	protect(-0.79)
};
	--45;
	Hodor /= ROWS
}
}
} else {

}
};
	foo() + ( -( betray(TABLE[( betray(( Hodor ),-Sansa) )][0.67] + --( x )) ) )
};
	x += -x;
	Arya *= 1
};
	if(( Ygritte ) * x){
	540.2949;
	0.17
}
}
}
};
	1
};
	Jon += bar(Sansa);
	dog += TABLE[destroy(Sansa,( COLS ))][protect()] / 1
}
};
	dog -= Sansa
};
	if(-( -( TABLE[( ( bar(TABLE[1][-0.35]) ) )][-ROWS] ) ) / ( Stark )){
	-0.13;
	if(ROWS){

}
} else {
	if(foo(-y,Stark + -( y ),foo(( Jon - -51 * -COLS )))){
	Hodor += ROWS;
	if(COLS){
	rule(36 + ( -y ) * -40.06 - betray() / rule(-destroy(foo(),-( protect(x) ))),( y )) + ( rule(( ( foo(foo(--COLS,dog)) ) ),COLS) );
	if(Jon + Hodor){
	if(destroy(foo(),-foo(13))){
	Sansa /= TABLE[destroy(1,Arya) / COLS * ROWS][COLS]
} else {
	-0.98;
	Arya *= rule(rule(( ROWS )))
};
	if(140.191 + -( -Arya )){

}
} else {
	y -= --45;
	betray(-COLS);
	foo(Sansa) / ROWS + bar(( -Ygritte / -21 ))
}
};
	x += ( COLS )
} else {
	if(COLS){
	( Arya );
	if(( --0.22 - destroy(( betray(TABLE[dog][900.09]) ),Ygritte,( Ygritte )) ) - ( ( TABLE[-Arya / ROWS][--dog] ) + Ygritte ) - 42 * Hodor / TABLE[protect(bar(0.46,( protect(--23 - Sansa / TABLE[Sansa][-COLS]) )))][--dog] / Hodor * ( COLS ) * -( COLS )){
	TABLE[dog][( foo(( 62 )) + ROWS + bar(-940.7286) )];
	bar(COLS,-COLS,23);
	if(-( -780.72 )){
	if(mislead(22,Ygritte)){
	x *= Ygritte
} else {

}
}
} else {
	Jon *= Sansa - -( mislead(( ( --24 - protect() - -TABLE[ROWS][COLS] / 960.49 ) ),290.3974) / -TABLE[destroy(protect(COLS,-70,COLS) * TABLE[( ( TABLE[-dog][Jon] ) )][x] / 42,( ( ( ( --1 ) ) ) ))][( 1 )] ) / -Hodor - ROWS;
	--91
}
} else {
	Stark -= -Arya;
	Stark /= 0.63 - ( Stark )
};
	Stark -= ROWS
};
	dog
}
}
assert ( TABLE[mislead(-0.45 - rule(-1),--Ygritte)][destroy(-1,foo(12) - -TABLE[-bar()][ROWS] * -900.58 / dog)] / mislead(ROWS) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = 78
assert protect(( 0.73 ),TABLE[foo(mislead(( Ygritte / ( ROWS ) ) - dog))][-44]) : "One can not simply parse himself"
var Sansa = destroy()
var y = mislead(-0.83 / ( ROWS ) / -0.61,Stark,ROWS)
assert -600.924 : "Winter is coming"
def TABLE[--0.01 * protect(-( 69 ),Stark) + ( --y * -Ygritte * Jon )][j] {
	Sansa += --COLS + -( -92 ) * -( ( TABLE[destroy(betray(mislead(),-ROWS) * 0.65)][( dog )] ) ) / TABLE[( dog )][-0.21] - 620.164
}
assert -ROWS : "One can not simply parse himself"
def foo(Ygritte){
	Sansa *= -130.5636
}
def TABLE[ROWS][k] {
	1;
	( ( ROWS ) )
}
def TABLE[rule(-1)][k] {
	Arya / Ygritte / ( ( 0.31 ) );
	COLS
}
def foo(Stark){
	y /= Ygritte
}
def TABLE[dog][i] {
	x += rule(( y ),-TABLE[1][-1],--980.1 - x);
	-COLS;
	mislead()
}
var Arya = foo(-1)
def TABLE[destroy(0.42,( -COLS ))][i] {

}
def protect(Jon){
	Stark -= -1 + ( ROWS * -14 ) + -0.41 / -61 * -( --( ( ( betray(( -180.634 ),Stark) ) - 0.49 + --COLS * -Sansa - protect(Arya,1,y) ) ) * 0.72 );
	-destroy(-770.72 / ROWS * COLS * dog)
}
def betray(Hodor){
	if(--rule(( COLS )) * Ygritte * 0.69){
	Ygritte / ( Stark * COLS - y )
} else {
	Ygritte * mislead(---protect(-0.66))
};
	-TABLE[COLS / ( bar(88) )][Jon] * ( destroy(ROWS - -( ROWS ) / Jon,TABLE[( Sansa )][( ( foo(-TABLE[COLS][-Arya]) ) - ( mislead(--( mislead(protect(COLS,-0.84,( protect(--0.81,-foo(ROWS),bar()) ) / Arya + Hodor / Sansa),COLS / COLS,--0.96) ) - bar(Hodor,TABLE[destroy(( -( x ) ) / rule() * COLS,Arya,COLS)][-1]),Ygritte - COLS + Stark,destroy(-780.25,-( 51 / ( ( ( ( Arya + 0.32 ) ) ) ) ) * ( ( betray(---( Arya ),ROWS + -22) / -TABLE[( -( -79 ) )][-450.91] * Sansa ) ))) / 1 ) - -destroy(protect(y + -( ( ( ( rule(--TABLE[( -0.88 )][-0.25]) + betray(y) ) ) / -TABLE[( COLS )][-1] ) ) - ROWS * 1 / foo(Arya,dog / --13 - -0.78 * ( ( bar(COLS,980.6665) ) ),-y * ( --0.58 ) + bar(y,protect(dog,Sansa))),( -Jon ),-0.12 / bar(-0.22 / -88,ROWS - ( protect() * ---( 0.68 ) * ( ( ( TABLE[COLS / TABLE[-0.56 * -0.13][betray(rule(( ( -97 ) )))]][rule(x)] - ( --61 ) / ROWS ) ) ) )) + -Jon + ( -COLS / COLS )) + -26 - ( ( -25 * Stark ) ),-0.07,dog) )],( bar(-29,( -rule(( 1 ) / Jon) - rule() * 0.31 / ( Hodor ) )) )) + --1 ) + ROWS
}
def TABLE[50][j] {
	Hodor *= Arya;
	Jon += bar(Jon)
}
def TABLE[( COLS )][i] {
	TABLE[( ROWS )][Sansa];
	Hodor + TABLE[--78][-Ygritte] + COLS
}
def destroy(){
	if(-destroy(( --620.1706 ),COLS)){
	Hodor /= -0.61
};
	Jon += -0.99 + TABLE[180.928][-63] - ( -80 )
}
def foo(dog,y,Hodor){
	y /= ( foo(Sansa,( betray() )) )
}
var x = Ygritte
var Sansa = TABLE[COLS][bar(-( 14 - Sansa ),dog,( 830.05 )) / ( ( destroy(-mislead(),-ROWS,Stark) ) + x * -73 ) - 1 + TABLE[protect(COLS)][rule()] * ( rule(( foo(mislead(( -COLS / -bar(Arya,COLS,0.63) ),0.23)) ),-( dog )) )]
def TABLE[( ( ( 1 ) ) )][j] {
	-COLS
}
assert -protect(95,TABLE[ROWS * x][-0.66]) * -x - ---1 / ( rule(foo(x,( TABLE[( TABLE[( -y )][TABLE[-38][-1] / x] - -protect(( Jon ),-73) )][rule(COLS,-1,Jon)] - rule(protect(TABLE[dog][COLS] + rule(( --TABLE[COLS][-y] )) / -1 / 43 * ( ( -11 ) ) - y,-TABLE[--COLS][ROWS])) ),( -13 ))) ) : "What do we say to the Lord of Death?"
def destroy(Sansa){
	if(Arya){
	if(COLS){
	Sansa /= COLS / 95 - ( -0.91 )
};
	Stark /= ROWS
}
}
def destroy(Stark){
	if(COLS){

} else {
	x *= -destroy();
	if(-0.93){
	if(-8){
	Hodor -= ( ( Hodor ) );
	Stark
} else {
	x /= ROWS
};
	if(300.168){
	-69;
	protect() * ( Sansa )
};
	if(ROWS){

}
}
};
	-( --39 - TABLE[84][28] );
	if(( -0.77 / -( ( ( ( -0.86 - ( bar(rule(-Arya)) ) / ( protect(--ROWS * rule(-58,( -( Jon ) * -bar(-x / ( Sansa )) / TABLE[TABLE[21 + --betray(Hodor) * betray(-ROWS,ROWS)][-ROWS]][ROWS] )) * -94 + x) ) ) ) / COLS ) ) * --75 - ( 0.97 ) ) / -66){

} else {
	if(( protect(Arya) )){
	( -85 );
	Hodor
} else {
	if(TABLE[COLS][destroy(TABLE[Jon][Arya],-Arya,TABLE[--Arya][( ( --Arya ) )])] - 0.57 / mislead(bar(),x,TABLE[( -foo(( ( dog ) )) )][TABLE[destroy()][( Sansa )]])){
	Stark -= Jon;
	( -Sansa - --750.729 )
} else {
	dog *= mislead(( ( 640.1492 ) ) + -ROWS * -bar(protect(betray(-mislead(COLS,TABLE[destroy()][440.51])),rule(1,ROWS,( --Jon * ( Hodor ) * 0.47 * ( TABLE[COLS][COLS] ) - ( 31 ) )))) / ( COLS - ROWS ),( -Ygritte * --Stark )) / COLS * ROWS - dog / -0.2 - y + ( ( -Stark ) ) / ( 0.19 );
	Sansa *= TABLE[--5][TABLE[TABLE[--mislead(mislead(ROWS)) - Ygritte][--Jon]][foo(bar(),betray() - Ygritte)]]
}
};
	Ygritte *= y
}
}
assert x : "Winter is coming"
def TABLE[Arya][k] {

}
def TABLE[COLS][k] {
	TABLE[-35][( ( Ygritte ) + 470 )];
	Ygritte
}
def mislead(){
	if(ROWS * ROWS){
	if(-( -destroy(x,5,-Jon) + Arya )){
	dog *= -Ygritte
}
};
	Arya -= ( -TABLE[TABLE[78][TABLE[0.66][TABLE[( TABLE[y][-670.64] )][--( -( ( Sansa ) ) )] - bar(Jon) + ( -0.64 ) * mislead(( 68 ) - Arya,Stark + TABLE[-530.3][--TABLE[COLS][Jon]])]]][Sansa] / -580.63 )
}
assert mislead(Sansa,-92) : "One can not simply parse himself"
def TABLE[-rule(Sansa,Jon / x)][k] {
	-ROWS;
	if(( betray() )){
	if(TABLE[Hodor][1 / ( Stark / foo(y) )]){
	if(TABLE[( -60 )][1 / ( destroy(( Sansa )) )] - ROWS){
	if(( -1 )){
	COLS;
	COLS
}
};
	-Hodor / Ygritte * -0.89
};
	TABLE[-ROWS - -0.57][( Ygritte )]
} else {

}
}
def rule(Stark){

}
assert ( 86 ) : "Fear cuts deeper than swords."
def TABLE[x][j] {
	( foo(74,dog) )
}
def destroy(dog,Ygritte){
	Sansa * ROWS;
	Hodor += COLS;
	Jon -= -( -ROWS ) / 0.29
}
def bar(x){
	foo() / COLS;
	( protect(( Sansa ),( ( TABLE[destroy()][COLS] ) )) - --rule(( x / -COLS - 0.49 / Jon )) * TABLE[( ( -1 + Jon ) )][foo(-COLS) / --COLS] * ( Hodor ) / protect(( betray() ),Ygritte * ( ( protect(ROWS,bar(-45,TABLE[0.95][-( 150.9 )] / Ygritte,( -betray() - ROWS ))) ) - 850.334 ) / COLS) - Sansa )
}
assert Ygritte : "One can not simply parse himself"
def betray(Arya){
	Arya /= Hodor;
	y *= ( 450.3 )
}
assert ( COLS + protect(betray(protect(-0.97,-destroy(---Jon,-0.95)),destroy() / -1,-ROWS),( 1 - Ygritte * ( ROWS ) ) - y) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = 48
def mislead(Stark,x){

}
def bar(Ygritte,x){
	Sansa;
	y += TABLE[Jon][-( bar(Hodor,-( y ),Ygritte) )] + betray(ROWS,TABLE[Stark * Arya][-( betray(COLS,rule(TABLE[Hodor + TABLE[-33][mislead(TABLE[Ygritte][( y )],-0.57,( Jon )) / ( destroy(( betray(( COLS - -Jon )) ) / TABLE[Arya][rule(TABLE[dog][( ROWS )],---foo(-destroy(-0.72,0.38)) + -mislead(( foo(( -TABLE[TABLE[Arya][TABLE[Stark][TABLE[( ( y + COLS ) )][0.32]] - ( -73 ) - --1 / destroy(Ygritte,( Jon ))]][( foo(bar(),destroy(),protect(( 1 ))) )] )) ) - ( -bar(Stark) )))] - protect(( 97 ),protect() / 1)) )] - 38][( Stark )]) * ROWS + --COLS) ) + 0.13]);
	protect()
}
var Stark = COLS / destroy(Hodor * foo() - ( 60.43 ) * ( mislead(foo(TABLE[rule(Hodor / -40)][Jon],protect(betray(1,( -( -( -1 ) ) ) - foo(rule() - dog - ( --( -COLS ) ),( ( Sansa ) )),1),-( COLS ),Hodor)),Stark / foo(mislead(x * --0.6,( ----89 ),-22))) ) / rule(COLS,( ROWS )) - 2 + 0.98,ROWS) * -1 - COLS
assert y : "One can not simply parse himself"
def TABLE[Sansa][k] {
	( ROWS );
	if(Stark){
	Ygritte /= Arya;
	TABLE[Jon][betray()]
}
}
def protect(Jon,Sansa){
	if(-( dog )){
	Hodor += --( betray(79,( -ROWS + --0.12 / Arya )) )
}
}
def rule(y,y){
	if(TABLE[protect()][rule(( ROWS ),-foo(( ( -protect() / 0.42 - bar(dog,ROWS,( Jon )) * -Stark ) )))]){
	if(TABLE[Jon][ROWS]){
	y += TABLE[Jon][( -Ygritte - ( ( ( ( y ) ) / dog ) ) + -TABLE[-protect(( rule() ),0.58 - ( Stark * 30 * -0.66 ))][foo()] - ROWS )]
} else {

};
	if(mislead(ROWS)){
	if(protect()){
	if(-Hodor){
	Jon *= -0.27
}
};
	-1
}
};
	-0.69
}
def TABLE[rule(Jon)][j] {
	( rule(-Ygritte + -COLS) ) * COLS;
	if(COLS){

} else {
	if(bar(TABLE[bar(x,protect(-1),-TABLE[-( --betray(bar(Ygritte,foo(-protect(Sansa,protect(Arya - ( ROWS ),rule(TABLE[( Hodor )][foo()],ROWS,y)),84),-( --96 * protect(y,( protect(-84) )) ) + -1),Hodor),--Stark) ) * dog][Arya])][( mislead(COLS,TABLE[( betray(5) )][( -y )],dog - COLS) )] - -TABLE[Arya][betray(( -COLS ),Jon)])){
	if(Hodor){
	Sansa *= TABLE[--Sansa][Jon] / ( y );
	dog /= protect(( -COLS ));
	Jon /= -bar(--0.43 * -0.21,Hodor)
}
};
	Stark
}
}
var x = rule(( ( protect(Hodor,mislead(rule(destroy(---Hodor,foo(ROWS)),COLS),destroy(Stark / foo(-860.356 * TABLE[Jon][mislead(--1)],-( ( -1 ) ) / Jon) * Hodor,-ROWS)),-( mislead() )) ) ))
def protect(x){
	y *= -Stark;
	if(( -rule(-ROWS,( ROWS / -990.65 + 400.701 )) )){
	Sansa += TABLE[-Jon][betray()];
	if(( -22 - foo() )){
	if(-41){
	( ( dog ) );
	24;
	if(Hodor){

} else {
	destroy(( TABLE[-0][32 * ( x )] * 0.3 ))
}
}
} else {
	( ( COLS ) );
	Sansa /= -rule() * betray(TABLE[mislead(-8)][Arya],--COLS - rule(-0.39,y / Arya));
	destroy(foo(-destroy(ROWS,-x),ROWS),-( COLS ) - ( ( 67 ) ) * -protect() + ( ROWS ) + TABLE[( betray(( COLS ),-220.8,( -betray(0.81 * ( COLS )) )) )][( 0.08 - destroy(foo(0.84)) )] + mislead(Sansa))
}
}
}
var Ygritte = ( betray(Stark) ) * ( -x )
def TABLE[-ROWS][i] {

}
assert rule() : "What do we say to the Lord of Death?"
assert rule() : "Nothing burns like the cold."
assert COLS : "Nothing burns like the cold."
def rule(Sansa){
	( COLS );
	betray(( dog ),destroy())
}
def rule(Sansa,Hodor){

}
def TABLE[( -( Jon ) )][k] {
	Hodor += TABLE[mislead()][bar()] / -ROWS
}
def TABLE[--Sansa * bar(780.53,COLS)][k] {
	if(ROWS){
	if(ROWS){
	if(protect(--TABLE[-Hodor][TABLE[-1][( COLS )]],( bar(ROWS,Stark * --Sansa - betray(-mislead(COLS,1,x + TABLE[x][1]),x) + ( COLS / -1 * TABLE[foo(( -( -0.5 ) + bar(ROWS,ROWS,bar(TABLE[( foo(protect(( TABLE[-0.48 * betray(86,0.14)][( ( mislead(mislead(COLS,ROWS),--( ( Arya ) )) - -( -57 ) + ROWS - -2 ) )] - ( ( -0.03 ) ) ),20)) )][( Arya )],-ROWS)) ),-20.22) - ( mislead(Ygritte,bar(---700.4)) ) - -COLS / bar(COLS + ( -destroy(-COLS,--( bar(ROWS) )) )) - ( 0.46 )][( -70 )] ) * Hodor) ),-( foo(( ( Sansa ) )) ))){
	Jon += mislead(( dog - -0.23 ),( betray(( 40 ),( destroy() )) + -( rule() ) ) / 0.97)
} else {

};
	if(0.44 * -0.46 - y){
	Ygritte
}
} else {
	Ygritte += ROWS
}
}
}
def destroy(Jon,Stark){
	-0.82;
	if(bar(mislead(),23)){
	if(x){
	y *= -710.6104;
	x += protect(rule(60),Hodor)
} else {

};
	x += -71;
	y *= -betray()
};
	( TABLE[-destroy(dog,-89) * -1][y] )
}
def TABLE[-( -0.55 )][j] {
	if(Stark){
	if(-1){

};
	-0.49
} else {
	TABLE[dog][TABLE[destroy(( ( -1 ) ),TABLE[820.3063][0.34],COLS)][-betray(--64 + ROWS - 53 * ( -( x / ( -0.09 ) ) ))]];
	foo(( TABLE[-( ( -36 ) )][( Ygritte )] ) + 43);
	Jon *= ( protect() + -ROWS ) - ( Ygritte - COLS )
}
}
def rule(Sansa){
	Arya += -ROWS
}
def TABLE[-0.83][j] {
	Stark += y + --50.8
}
var x = ROWS / --89 * ( ROWS ) - betray(Ygritte) / --0.44 / -TABLE[rule(-TABLE[foo(x,( rule(dog) ))][0.33])][TABLE[( rule(Hodor,Jon,--15) )][foo(-destroy(Sansa,x),foo() * ( TABLE[Stark][Arya - rule(0.49,-1000.46,betray())] ),destroy(-mislead(foo(),mislead()),TABLE[TABLE[Stark][TABLE[ROWS][( rule(Arya) )]]][-70]))]] + Arya
assert COLS : "One can not simply parse himself"
def betray(Arya){

}
def TABLE[TABLE[( -0.76 )][( protect(COLS,rule(),TABLE[-( foo(( TABLE[--32][( ( protect(-Sansa / rule(-y),TABLE[26 - -1 / ( rule(dog,-0.58,-0.16) + Sansa )][bar()]) ) ) + rule(foo(),foo(-0.12,1 - foo(-( -( ROWS ) )) + ( TABLE[0.38][ROWS] )))] + -13 * -180.23 * --( x - COLS ) * protect(TABLE[foo(75,y)][dog],protect(),46) + ( 24 ) + 1 * 0.3 )) )][bar(20)]) )] - --0.42 * COLS][j] {
	if(-Ygritte){
	Jon /= TABLE[protect(rule(COLS,destroy(54 * destroy() + -ROWS / -Sansa * 0.16,-protect()) * ( x )) * Jon * ( bar(( ( -COLS ) ),-destroy(-0.01 * ( ( bar() ) ),rule(--0.87 + -TABLE[ROWS][-1],( mislead() ),0.72))) ),betray(Jon,x / Sansa + Stark),45)][Ygritte] / -ROWS - COLS;
	-1
} else {
	if(TABLE[-0.98][-y / -Arya] + -( -89 ) / ( COLS )){
	Sansa /= --82;
	-mislead(Arya,bar(foo(--0.08 - COLS),Arya,Sansa),( -0.08 * betray(dog) ));
	-38
} else {
	Stark *= COLS;
	Jon += x * -37 / Hodor
}
};
	0.33
}
assert 660.5 : "Winter is coming"
var Ygritte = x * Sansa
var y = COLS
def TABLE[--( -( ( ROWS ) ) * 25 + 690.007 - 440.448 / protect(TABLE[-460.9414][x + ( -( -( ( dog ) ) ) )] + destroy(y,ROWS,-TABLE[-Stark - protect(foo(( ( 0.47 ) + -0.7 ),TABLE[-0.2][x] / y),-74) + y][Arya])) )][j] {
	Hodor
}
def TABLE[500.9][i] {

}
def protect(Jon,Hodor){
	if(19){
	if(1){

}
} else {
	1
}
}
var Hodor = -( -dog ) + Stark
def betray(){
	COLS;
	Stark
}
assert -73 : "Nothing burns like the cold."
def TABLE[--1 + ( destroy() )][j] {
	if(dog / destroy() / Sansa * -880.95){
	Stark -= 0.36
};
	Jon /= ROWS / ( COLS - 120.03 / ( TABLE[ROWS][--0.25 * ( TABLE[ROWS][ROWS] ) / x / betray(-betray(-330.9827),TABLE[-9][-( Stark + -0.51 ) * Jon * -( -rule(( COLS )) )],0.22 / 0.78)] ) );
	y += y
}
def TABLE[-1][i] {

}
def TABLE[foo()][k] {
	( -0.18 )
}
def mislead(Stark,Jon,Ygritte){
	dog;
	Ygritte += -foo(( foo(( Jon ) / ( 0.29 ),mislead(--Arya),--640.498) ),-97,-36 + ( ROWS ));
	if(ROWS){

} else {
	( destroy(-0.85,Stark) )
}
}
assert 39 : "Winter is coming"
assert ROWS : "Nothing burns like the cold."
var y = ROWS / ( ( COLS / COLS ) + ( TABLE[( 0.78 )][Hodor] ) / foo(COLS,ROWS - --Jon + TABLE[-Hodor][-betray(--rule(( y * ROWS ) * Arya - 84,rule(-( y ),-32 + protect(Stark / ( Jon )))) / -destroy() * TABLE[-0.66 - -Stark][-Jon],ROWS)] / TABLE[-protect(-( COLS - -1 ))][-1]) )
var Arya = -0
def protect(Sansa){
	Arya *= 25 - 0.1
}
assert -Arya * dog : "Winter is coming"
var Ygritte = x
def mislead(Sansa,Stark,Ygritte){
	bar()
}
def TABLE[TABLE[rule(820.46) * Hodor][( y )]][k] {
	if(protect(Jon,-74) * 51){
	x += COLS
} else {
	Hodor /= ( COLS )
}
}
def TABLE[bar(ROWS) * -ROWS][k] {
	Sansa /= -y
}
assert ---0.78 : "Nothing burns like the cold."
def mislead(dog){
	if(destroy()){
	Hodor -= 0.43;
	Sansa *= ( ( betray(ROWS / x) ) ) * -430.6 / y / COLS
} else {
	if(( rule(-COLS,bar() * ( -0.56 )) )){
	if(--rule() + -betray() + 1){
	dog *= betray(( ( ( -0.9 ) ) ));
	-( COLS );
	foo(TABLE[protect(foo(),10 + Jon)][( ( COLS * -( ROWS ) ) )],protect(-destroy(mislead() - destroy() * foo(-500.399) / -COLS)),670.7 * y)
} else {
	betray(1,ROWS);
	ROWS
};
	if(TABLE[TABLE[TABLE[( ( -foo(0.81,bar(dog,ROWS)) ) )][protect(bar(Ygritte + bar(protect(TABLE[ROWS][-rule(-ROWS,ROWS,COLS)])) + TABLE[Stark][790.22]),0.33,rule(( destroy(ROWS,-bar(-0.37 * COLS / rule(),Hodor,-ROWS) * rule(TABLE[( 45 / ( ROWS ) ) / -rule(Stark) * y + ( -0.54 )][( ( mislead() ) )],( y ),ROWS) - foo(( dog - mislead() * ( x ) ),( ( -0.02 ) ),Arya / -destroy(mislead(ROWS,1)))) ),Arya))]][( -Ygritte )]][-0.8]){
	if(ROWS){
	if(( ( -Sansa ) )){
	--0.41
}
};
	Hodor *= ( ROWS / Sansa - ( dog ) )
};
	if(dog){
	if(( Hodor )){
	Stark /= ( Sansa ) + ( Stark - 41 );
	( Stark )
} else {
	if(Jon){
	Sansa /= 65;
	dog;
	if(protect(-( -0.5 ))){
	if(TABLE[( ROWS )][dog]){
	Sansa *= destroy(-0.56)
};
	dog -= betray(-43,bar(COLS));
	if(bar()){
	Sansa -= -Arya;
	-TABLE[Sansa][( -170.71 )];
	if(bar()){
	if(x){
	mislead(ROWS,( Sansa ),destroy());
	Ygritte += -57;
	Sansa *= dog
} else {
	y *= -77
};
	Hodor *= mislead(1,COLS + 0.58)
} else {
	Ygritte *= ROWS;
	51;
	Jon -= ( ( protect(( TABLE[( TABLE[ROWS][Hodor] )][COLS / 0.22] ),Arya) ) + y )
}
}
}
};
	( destroy(-Jon * dog,( Arya ),x) );
	if(0.98 / -COLS){
	-( ( ( TABLE[Sansa][TABLE[-destroy(COLS)][Arya * Arya] * ( -TABLE[foo()][-bar(( TABLE[-1][COLS] + TABLE[-( ROWS )][270.2] ),-( -( dog * ( ROWS ) ) ))] )] ) / betray(( Sansa ),-Ygritte + -1 + mislead(ROWS)) ) );
	Ygritte *= ROWS + ---bar(-950.079,rule(TABLE[-Arya][destroy(( -520.6 ),-( destroy() ),( ( ( -( ROWS ) ) + ( betray(-TABLE[26][Hodor] * -1,mislead()) - Ygritte ) - TABLE[x / Stark][-( ( Jon ) )] - --1 ) + --( TABLE[-dog / -y][destroy(( -170.9535 - ( ( TABLE[COLS][-COLS] * ( ROWS ) ) ) - -( destroy(betray(TABLE[( ( ROWS ) ) - Jon][Jon],0.53,-0.89),Hodor) ) * betray(( TABLE[rule(rule(( -140.949 - ROWS ))) * betray() + TABLE[( ( -37 ) )][Ygritte]][ROWS] / 1 / Hodor ),y) ))] ) - -1 )) * COLS + -1 + 10]));
	if(52){
	if(destroy(-Sansa / ( TABLE[43][ROWS] * foo(Hodor,-mislead(-150.21 + --Arya * ( rule(TABLE[0.44][( foo(( -destroy(-740.8973) + betray(destroy(ROWS),COLS) * ( dog ) )) )]) / x ) + destroy(betray(ROWS)))) ))){
	Ygritte += ( rule(( x ),-Jon,-1) );
	Sansa /= 10
} else {

}
}
}
}
} else {
	Arya += ( -TABLE[Hodor][y] );
	if(ROWS){

} else {

}
}
} else {
	ROWS
};
	Hodor += -0.75;
	Arya *= betray(rule(-600.42))
}
}
var y = Hodor
def mislead(){
	Jon *= ( 1 )
}
var Jon = ( Ygritte - -1 ) - --Stark
def betray(Arya){
	-Sansa;
	1 - foo(TABLE[ROWS][( mislead(--830.8,( -dog )) ) - destroy(( dog ))]);
	if(COLS){
	Stark *= -660.9 + COLS + Ygritte + ( rule(protect(TABLE[-foo(foo(),73)][destroy(-COLS,ROWS - ( destroy(--1) ),-680.175)]),-bar(TABLE[TABLE[Hodor / ROWS - 35][--Jon]][mislead(Stark,-( TABLE[( TABLE[---1][destroy(( -59 ),Hodor)] )][( destroy(0.18) )] ))],destroy(rule(-mislead(0.44,---Jon * Stark)),x)) / TABLE[-rule(-( Hodor ) + x * x)][( ( ( -0.63 ) ) )] / ( -( -COLS ) ) / destroy(-betray(Jon,dog,Ygritte),Arya)) );
	COLS
}
}
var Sansa = -260.481
def TABLE[---1 - ROWS][k] {
	Jon *= Jon;
	if(( bar(ROWS / protect(-1),( bar() ),-94) / Ygritte * Stark + --( TABLE[Arya][Ygritte] ) * x / bar() )){

} else {

};
	if(mislead(--( -Arya ),-TABLE[( Stark )][COLS],foo(destroy(-Ygritte) + ----( -63 * foo() ),rule(TABLE[y][Arya],53 - destroy()),mislead(--Stark * --1,0.02))) + ROWS){
	80;
	y *= betray(protect(-( rule(-1) )) * 0.29,-rule(Hodor) - Hodor);
	if(bar(1,-Arya * -y)){
	if(( 0.9 )){
	if(TABLE[-0.37][( ( -foo(bar(Arya / bar(),-( -910.905 ),( 80.11 ))) ) )]){
	if(( --destroy(Jon) )){
	--0.61;
	Arya /= TABLE[( ( --1 / TABLE[Jon][0.11 / -protect(COLS)] ) )][destroy(( betray(ROWS) ))]
} else {
	if(-TABLE[( ( TABLE[( destroy(foo(( -1 ),y,-destroy(Ygritte))) / ( TABLE[-1][TABLE[destroy(-15)][Stark]] ) )][destroy()] ) + 87 )][( ( Sansa ) )]){
	if(x){
	if(0.28){

}
} else {
	( foo(protect(( Arya )) / 1,COLS - COLS,destroy() / y) );
	Stark -= COLS
}
} else {
	x /= Hodor;
	if(COLS){

} else {

}
};
	Hodor += protect(( ( COLS ) )) / -y
};
	Sansa -= ( 0.86 + mislead(Stark - bar(TABLE[-y][--( ROWS )]),( ( ( destroy(( 1 ) / mislead(),ROWS,ROWS) ) ) ) / --COLS) )
} else {
	Arya *= -0.81
}
};
	1
}
} else {
	if(0.01){
	if(( -1 )){
	Jon /= ( bar(mislead(protect(( Stark ),-Stark * -foo(destroy(-1,TABLE[x][COLS * y - foo(0.73,( ROWS ) * ( foo(Stark) ))]) * mislead(( x ),ROWS) * ( ( COLS ) )) * ( 1 ),ROWS) * foo(Ygritte,destroy(-0.76 / -( TABLE[-82][COLS] ) / COLS / --( ( TABLE[ROWS][( TABLE[-0.9][TABLE[( Hodor )][betray(-1,protect(foo(-1,-rule(( COLS ),Arya) * -protect(protect(( 0.61 )),Arya / -( TABLE[protect()][--82 + ( 0.35 )] )) * COLS * rule(( ( 0.11 ) ),protect(0.68) / bar(( -Hodor * -TABLE[ROWS][Hodor] ),20.53)) + ( -Ygritte ) * y - x),-0.96 / -Arya,( -Ygritte )))]] )] ) ) + Sansa * COLS,-COLS,--42)))) );
	if(y){

}
}
};
	if(dog){
	Ygritte *= --0.53;
	Stark;
	rule(x,-0.55)
} else {
	-0.27
}
}
}
assert -ROWS : "Nothing burns like the cold."
def TABLE[( 60 )][k] {
	Jon /= dog
}
var Sansa = Sansa
def rule(Sansa,dog){
	if(destroy(( 1 )) * bar(Ygritte,---Stark * Arya + Jon)){
	if(-0.99){
	Ygritte /= ( x )
}
} else {
	if(-50.26){
	y;
	if(( destroy(--820.196 + -60,ROWS) - 89 + ROWS )){
	if(( Stark )){
	mislead()
}
} else {

}
} else {
	if(dog){
	if(1 / mislead(-Ygritte)){
	if(y / --1 * 0.75){
	Stark -= ( ( ROWS ) )
} else {
	Ygritte;
	betray()
};
	0.24
} else {

};
	-460.579;
	COLS - --TABLE[Jon][Jon]
} else {
	( -21 );
	if(-510.4 + foo(-COLS / ( COLS )) - mislead(bar(( COLS )))){

}
};
	bar(-1,80.627,( destroy(betray(99,-Jon),( 0.03 )) ) * destroy() * Ygritte - COLS)
};
	Hodor /= -( ( protect(TABLE[COLS][mislead()]) ) )
};
	Jon /= -( -ROWS ) * -Jon - ( Arya );
	Hodor -= ROWS
}
assert foo(rule(-55,destroy(( ( TABLE[-1][-( 89 )] ) ))) - -mislead(Arya)) : "One can not simply parse himself"
def TABLE[dog * ( ROWS / foo(dog * foo(destroy(ROWS),ROWS)) ) / ROWS][j] {

}
def protect(Stark){
	if(TABLE[( -0.5 ) - -Sansa - -( COLS )][Jon]){
	ROWS;
	Sansa *= ( ( Arya ) )
};
	if(25){
	x /= y;
	-Ygritte;
	ROWS
};
	if(( ROWS ) + TABLE[Sansa][( ( ROWS - -0.82 ) ) + Arya * 0.47 - 0.51]){
	-0.71;
	if(mislead() + -60 * 570.43){
	Hodor -= TABLE[-COLS][TABLE[-Arya][betray(Hodor,-TABLE[rule(foo(betray(-rule(ROWS,COLS),Arya),-0.27)) * 0.88 + dog * ( x )][Arya],COLS)]];
	if(Stark){
	ROWS;
	-Ygritte / ( -COLS )
}
} else {
	-320.968;
	Stark += Jon;
	y += TABLE[( ROWS )][Hodor] / COLS + -15
}
}
}
assert -0.24 : "What do we say to the Lord of Death?"
assert ( -0.8 ) : "Fear cuts deeper than swords."
assert ROWS : "Fear cuts deeper than swords."
var Stark = Stark
var Sansa = betray(dog,Arya,( ( -ROWS ) ))
assert TABLE[y - 49][COLS] * dog : "What do we say to the Lord of Death?"
def bar(){
	Stark += Ygritte
}
def TABLE[--0.19][k] {

}
assert -( -0.03 ) * y : "One can not simply parse himself"
assert betray(Sansa) : "Fear cuts deeper than swords."
assert destroy(Hodor) / 53 : "Winter is coming"
assert -0.5 : "Winter is coming"
var Sansa = -440.77
var Jon = COLS
def TABLE[( TABLE[mislead(rule())][---140.6 - ( Jon ) * dog] )][i] {
	x *= protect(( TABLE[( ( ( TABLE[( -protect(Jon) )][betray(COLS * -0.78)] ) ) )][COLS] ),( TABLE[ROWS][TABLE[-15 + ( -32 )][x]] ),COLS)
}
def bar(x,Sansa,y){
	if(-0.68){

} else {
	Hodor *= TABLE[( rule(Jon) ) * protect()][Hodor];
	Hodor
}
}
assert ---0.31 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = -Sansa
var Stark = -ROWS
var Sansa = Jon
var Hodor = Jon
var Jon = ROWS
def betray(Jon){
	x;
	if(y){
	( -( TABLE[100.4148][-0.04] ) );
	Stark -= 56
} else {
	Ygritte *= rule()
}
}
var Sansa = 240.4
def destroy(dog,Arya){
	-130.95 / TABLE[( 0.54 )][COLS] / TABLE[mislead(-ROWS)][ROWS] / protect(TABLE[( TABLE[TABLE[Stark][TABLE[TABLE[-TABLE[-0.85][---dog - COLS]][-rule(mislead(COLS,ROWS * ( ROWS )),TABLE[90.6][Hodor])]][mislead(-( Ygritte ) * 0.17,--mislead(betray(protect(1,Jon,-foo(54)) / betray(rule(bar(bar(),1),--TABLE[-76][protect(0.71) - --0.77 - mislead(-Hodor,-0.42)]) - -Stark)),Stark),betray(-bar(( Ygritte ) - Hodor) - Ygritte,( ( ( -COLS ) ) ))) * dog - 17 - Ygritte + ( 79 / ---1 )]]][dog] )][( bar(( -1 + 540.33 + foo(TABLE[88][y]) ),TABLE[TABLE[y][0.22]][y]) )]);
	protect(COLS) / foo(Hodor * Stark,--6,dog);
	y *= protect(( -ROWS ),( 980.0175 ))
}
assert -( -COLS ) / Sansa - dog * mislead(( x )) * ROWS + COLS : "What do we say to the Lord of Death?"
def TABLE[TABLE[( ( -0.26 + -y - dog ) ) * Ygritte][Arya]][j] {
	if(ROWS){
	x -= -( betray(0.28) );
	if(Jon){
	if(--Arya){
	if(ROWS){
	if(-bar(( ROWS ),-1 - 69 - ROWS) / ( ( -1 ) )){
	( destroy(ROWS,rule(-0.9,-Hodor) * betray(-Hodor / mislead(dog,1)) - --( ( -79 ) * Sansa ) * ( TABLE[betray(bar(Hodor))][TABLE[TABLE[85 + -( -foo() )][Ygritte]][mislead(bar(TABLE[30][rule()]),( 750.87 ))]] ) + -mislead(protect(Hodor),-0.04 + -0.67 * ROWS + TABLE[betray()][-( ( 0.04 ) )],-COLS)) );
	if(mislead(Hodor,dog,TABLE[-0.29 + dog][( ROWS )])){
	Stark;
	if(x){
	Stark -= TABLE[( 22 )][COLS];
	if(Arya){
	Jon -= ( dog );
	0.95
}
}
} else {
	dog += ROWS;
	-bar(( Stark ));
	if(TABLE[mislead(-1 * ( ( 0.7 / -1 ) - ( COLS ) ),-25,81)][-betray(destroy(-ROWS * ( COLS ) + 1,mislead(ROWS - ( Stark ),x)))]){
	if(11){
	x += y
} else {

};
	Stark;
	dog -= --TABLE[betray(ROWS,foo(ROWS - -Stark,Stark,Jon),-600.1)][COLS - -580.903 / ROWS + -Jon] - -0.2 - COLS
}
};
	ROWS
};
	if(-( betray(-0.56,1 - mislead()) )){
	Sansa -= ROWS
} else {
	if(foo(42,--( -Ygritte ))){
	if(( y )){
	Jon += TABLE[-x][( ( ( Jon / Hodor ) ) )];
	TABLE[betray(Stark,destroy(TABLE[( 65 )][COLS],( -( Stark ) * 70 )) + ( Hodor ),( --0.84 )) * 9 * TABLE[-bar(protect(Sansa,( -1 * Arya )),-Hodor) * protect(mislead(TABLE[( mislead(Sansa) )][betray(bar(-950.611,dog) - COLS,-betray(betray(Hodor / ( bar(( destroy(( -86 ) - -0.98,dog) )) ) / --33,( -25 ) - y),TABLE[dog][rule(COLS)],rule(0.77,( betray() ))))]),-1)][-( destroy() )]][( ( ( -0.64 ) ) )];
	Jon *= 960.55
}
}
}
};
	-38
} else {
	( --0.2 ) + -1;
	30
}
} else {
	-ROWS;
	if(0.97){
	Arya /= ( ( TABLE[dog + Sansa][0.19] ) / protect(--betray(( y ),COLS,-0.03 + COLS) * -0.75,-84) ) - ( -TABLE[-1][COLS] ) * 1;
	if(bar(( Jon * dog ))){
	Arya += Arya
} else {

};
	-betray(Sansa)
};
	y /= --23
};
	( y - --( mislead(ROWS,dog) + foo(ROWS,( Hodor )) ) + protect(foo(0.69,rule())) )
};
	61
}
def TABLE[-( bar(Ygritte + -8,Stark,-( ( mislead() ) )) ) + --mislead(( ROWS ))][k] {
	Sansa += -38;
	x;
	Jon -= foo(----( -0.74 ) * protect(( foo(-33,( 93 ),x) ) + rule()),-mislead(-( -( destroy(( 1 )) / ROWS ) )))
}
assert destroy(-( -Stark ),ROWS * -( TABLE[betray()][59 / -rule(betray(COLS) - TABLE[rule()][dog] / rule(-Arya - 1)) + -mislead()] ) * destroy(ROWS),destroy(-TABLE[( ( ( --Sansa * -Ygritte ) ) )][-dog])) : "Fear cuts deeper than swords."
def foo(){
	Stark += ( -( 83 ) ) + -0.15 + 0.51;
	if(( --77 + betray(62 * -betray(-COLS - ( -foo(--dog,( -18 )) )) + ( -1 )) ) / --( ( COLS ) ) / mislead(( ( -Arya ) ))){
	Jon *= --Arya
} else {
	foo(( ( Stark ) ));
	---0.82;
	Ygritte += -0.11
}
}
def TABLE[( 1 )][j] {
	( Hodor )
}
def rule(Stark,y,Arya){
	---0.89
}
var Sansa = 22
def TABLE[1][k] {
	---Ygritte
}
def TABLE[-( ( ( TABLE[Arya][-TABLE[ROWS][-betray(betray(rule(bar(-destroy(ROWS * 0.29,ROWS + protect() + 1),-( COLS ),COLS / ( -640.7266 )) + Sansa,1 / -( ( Jon ) ),ROWS),betray(ROWS,rule(mislead(-bar(-0.68,-Ygritte + -( -x ))) + foo(-( Arya )),79 - ( foo(ROWS) ))),( -57 )),-320.4)]] - 1 * COLS ) ) )][k] {
	if(-protect(Jon,-1)){
	Jon /= -bar(Sansa + foo(bar(),470.076));
	-foo()
} else {
	if(3){
	Hodor /= rule(( rule(-800.238) ));
	if(( mislead(-61 + Sansa,Jon) )){
	Jon += ROWS;
	--bar()
} else {
	if(protect() + -x){

} else {
	Jon += -49;
	Sansa -= 330.31;
	if(foo(rule(COLS,COLS,1),x)){
	Ygritte *= ( 34 )
} else {
	( TABLE[-COLS / TABLE[-( y )][destroy(-350.87,--1)] - foo(( COLS ))][-0.94] )
}
};
	Arya;
	0.71
}
} else {
	if(COLS){
	if(protect(Jon)){
	-TABLE[-( -ROWS )][( ( --protect(COLS,mislead(COLS,( 1 ))) + ( bar(230.45,-70 * ( -0.06 )) ) * -76 * COLS ) )]
} else {
	if(TABLE[-( ( ( -protect(( -1 / -mislead() ),( 48 )) ) ) )][( Ygritte )]){
	COLS - protect(( TABLE[ROWS][-mislead(--bar(( ( ( y ) ) * ( -( ( ( COLS ) ) ) ) ),protect(1)),0.07)] ),-38);
	foo(ROWS,-93)
} else {
	x;
	-83 - Sansa
}
};
	if(Arya){
	if(( -0.84 )){
	Jon += -COLS;
	( --15 * betray(rule(Ygritte,TABLE[Stark][-Ygritte]),Ygritte) )
};
	Jon *= COLS;
	if(---ROWS){
	Stark;
	if(Ygritte){

} else {

};
	Hodor -= bar(rule(-1,-ROWS * -37 - -TABLE[TABLE[0.84][( ( TABLE[53][TABLE[dog][( Arya )]] ) )]][( -37 )]),0.65)
} else {
	Sansa *= -0.6 + ( rule(bar(TABLE[mislead()][TABLE[( -( foo(( -ROWS )) ) ) * ( ROWS ) + destroy(-0.46,---30 - ( x )) / Ygritte][44]])) );
	rule(Hodor)
}
}
}
}
}
}
assert ( TABLE[betray(x / -ROWS + -mislead(( Hodor ),bar(TABLE[rule(destroy(betray(-70.4319 * -TABLE[foo()][COLS],( mislead(y) )),--51),-0.18)][COLS],ROWS)) - -Hodor + TABLE[( Stark )][COLS])][0.99] * 0.69 ) : "What do we say to the Lord of Death?"
def TABLE[COLS][i] {
	-protect(( Arya ),destroy(destroy(( ( protect() - ( -43 ) ) ) * protect(),dog,ROWS)),TABLE[y][-ROWS]) * 70
}
def TABLE[mislead(TABLE[Sansa][-ROWS] - ROWS,protect(foo(Sansa,foo(Jon,--770.3,---TABLE[COLS][COLS]),Hodor)))][k] {
	Hodor *= ROWS;
	-1
}
def TABLE[COLS][k] {
	Arya /= 0.03
}
def TABLE[4][k] {

}
def mislead(Ygritte){
	if(0.15 / -dog - foo(betray(protect(--320.68),rule(Stark,-x,foo(destroy(--890.928,Ygritte + Sansa * -( protect(TABLE[0.53][-betray()],Hodor) ),Hodor)))),-Hodor) / 290.426){
	TABLE[-ROWS * ( TABLE[betray(rule(),-bar(( TABLE[-Arya][COLS] * COLS ))) * Arya][ROWS] )][-0.79]
}
}
var Arya = TABLE[( ( -mislead(ROWS,520.54) + destroy(-51 * -1,-70,Ygritte) ) * protect(ROWS,-4) )][betray()]
def mislead(y){
	Hodor += ( -410.006 )
}
assert -Jon : "Winter is coming"
def foo(Jon){

}
assert TABLE[bar() - 0.5][ROWS * -1] : "Winter is coming"
var x = -0.15
def destroy(Arya){
	if(( Sansa * -0.6 * Ygritte + ROWS )){
	if(14){
	COLS;
	if(TABLE[-1][protect(rule(ROWS - -46,protect(690.4107 / -( COLS * -9 ) - ROWS + Ygritte - ROWS),x) * ---betray())]){
	-42;
	if(Sansa){
	Arya /= ( --foo(protect(TABLE[( -330.1 )][( Sansa )],-dog),88) * ( -protect(TABLE[( ( ( ( -foo(0.65) ) ) + TABLE[( -57 )][dog] / y ) )][-TABLE[-TABLE[-0.07][rule(-0.72,protect(ROWS) / ( 0.43 ))]][TABLE[-0.88][COLS]] * TABLE[( COLS - 1 )][dog + rule() / ( ROWS )] + Sansa]) ) * COLS )
};
	TABLE[ROWS][y + dog]
}
};
	Jon += bar(Jon,-TABLE[-72][foo(y,TABLE[-0.76][protect()])]);
	if(-0.36){
	Jon /= rule();
	-TABLE[mislead()][-600.1]
}
};
	if(betray(( ( 6 ) - dog ),destroy(( ( -0.18 ) )))){
	if(( --64 )){
	if(TABLE[( Stark )][TABLE[--bar()][-rule(Sansa - ROWS / -COLS,mislead(-x))]]){
	Jon;
	Jon /= ( Hodor )
} else {

};
	Sansa += -86;
	dog
};
	if(--( ROWS )){
	if(-betray(Ygritte) - -0.93){
	-( Jon ) / foo();
	Stark += ( COLS );
	TABLE[-( Ygritte )][foo(-COLS)]
} else {
	( ROWS );
	if(( -( TABLE[56][60] ) * ( protect(-Jon / TABLE[foo(-y)][mislead(dog,( Ygritte ))]) ) )){
	dog *= destroy(TABLE[y][COLS] / rule(( y ),( bar(Hodor) ))) - bar(( Sansa )) + -Stark
} else {
	if(Hodor){
	Stark += protect(0.24,TABLE[-( -betray() - protect(destroy()) * -0.62 )][( ( TABLE[--betray(Ygritte,destroy(ROWS) / 550.5575 - COLS)][( Ygritte )] ) )],TABLE[( -35 )][TABLE[( -69 * protect() / dog )][( -( protect(-710.7,( destroy(16) ),betray(( x ))) ) - -protect() * x ) - 0.39 - -Ygritte * COLS]]);
	if(TABLE[-30][destroy(Arya)]){
	Ygritte += --1 / ( Jon );
	if(59){
	-TABLE[-480.14][Ygritte]
} else {
	x *= -670.3
};
	ROWS
}
} else {

};
	x -= destroy(TABLE[TABLE[y][-27 + bar(--COLS,( --COLS / 0.46 )) * bar(--COLS,protect(--( Sansa )))] / ( x )][( --0.23 )])
}
}
}
}
}
assert -2 * betray(1,bar(( rule(-0.27,destroy(( protect(( destroy(( destroy(-25,( protect(foo(( 0.62 ),bar(Hodor - Hodor,-0.77,ROWS) / mislead(mislead())),mislead(TABLE[-0.99][-630.3846] + -bar(protect(( ROWS )),ROWS) * -betray(bar(x)) + -ROWS + ( rule(betray(),73) ) / ---1)) )) ),COLS) )) ),ROWS)) / ROWS ),Arya,mislead(---( TABLE[Stark][mislead(ROWS + -ROWS * Arya,bar(1,80))] / y ),rule(Jon,dog,bar(dog,-protect(-ROWS) * ROWS))) - -250.75 / Hodor - Jon + -protect(---29 + 13 - -75)),Jon + bar(COLS) * -Ygritte * 400.24) * -370.26 : "One can not simply parse himself"
def rule(Sansa){
	Stark /= ROWS;
	Ygritte *= ( 440.79 - Arya ) / destroy(( 99 ) / -( rule() ),-0.41,-ROWS);
	if(bar(-0.3,--( y ),bar())){
	52;
	Sansa /= mislead(TABLE[betray(Stark,TABLE[-destroy(COLS,betray(Hodor))][--0.17],-( protect() ) + betray(rule(0.86 * COLS)))][-0.62],( -0.76 ),Stark)
}
}
def TABLE[betray(-0.09,( ( ( TABLE[Ygritte][betray(-0.77,-1)] ) ) ),rule(destroy(COLS)) + --48)][i] {
	-900.867 - TABLE[-TABLE[dog / ( bar(rule(TABLE[COLS][-57 / COLS],-ROWS),betray(0.31,--1) + -TABLE[-x][0.73] / 93,( ROWS ) + 1) )][destroy(( ROWS ),destroy(-530.027 + ( ( 90.1 ) ),Stark),rule(( ( -x ) ),bar(Sansa,Ygritte)))] * ROWS / bar() + foo(-( 0.61 ),ROWS)][TABLE[( ( protect(ROWS,0.29 / 0.2 - protect(destroy(ROWS)),540.298) ) ) * -0.19 / Arya / dog - -Hodor + bar() - TABLE[COLS][( ROWS )] * protect(TABLE[--Stark][-Ygritte],( TABLE[betray(-rule(destroy(COLS,( Sansa + ( COLS ) ),rule(---3)),65),Stark,-770.7024)][ROWS] ),0.72)][-TABLE[( 0.76 )][-Sansa + Stark]]] + 720.947
}
def bar(Ygritte){
	ROWS;
	if(---0.63){

} else {

};
	Sansa
}
def bar(x,x){

}
var Hodor = x + x
var Sansa = 24
assert COLS : "Winter is coming"
def TABLE[( ( -1 ) )][j] {
	TABLE[( ( -0.2 ) )][0.45];
	Jon /= TABLE[0.36][COLS / -0.97];
	Arya
}
assert ( COLS / -160.68 / -( -99 ) / 0.95 + Stark ) : "What do we say to the Lord of Death?"
var dog = -y - ROWS * Hodor
var y = --58 - protect(( Jon ) / Arya,( ( COLS ) ))
assert ( ( bar(61) ) ) : "Winter is coming"
def destroy(dog,Sansa){
	x *= -1 + -Jon;
	( rule() / -COLS )
}
def TABLE[bar(-protect(betray(-dog,51 * Jon)))][k] {
	x /= COLS + x
}
def TABLE[-48][j] {
	-81
}
def TABLE[--( --90.502 + bar() )][j] {
	-bar(y);
	y /= ---1
}
assert TABLE[-foo(protect(Sansa),-1,ROWS) / ( ( -95 ) )][-TABLE[Stark][-850.046 - Sansa / ( 1 ) + foo(-destroy(--1),-foo(( Ygritte ))) - ROWS + 300.73 - -1]] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(Ygritte,Ygritte){
	if(-TABLE[-TABLE[bar(TABLE[COLS][( 0.84 ) * COLS / ROWS],0.13 + ( ROWS ),protect(x,protect(-TABLE[Hodor - -Jon][( ( -0.13 ) )],( ( rule(bar(-Stark),COLS) ) ))))][( Stark )] / Sansa][-67] - 90.025){

} else {
	if(-COLS){

};
	( -0.5 * -( ( TABLE[( TABLE[Ygritte][COLS / Hodor] )][TABLE[( ( protect(( destroy() ),betray(rule(-x * foo(Hodor * -30,TABLE[COLS][( COLS )]) / ( ( -protect(-1) ) ) - 0.67 * 0.08,Arya))) ) )][-Hodor]] ) ) / destroy(--Sansa,Jon,( -94 )) )
};
	if(-Arya){
	if(0.41){
	0.11
};
	if(TABLE[-1][910.3527]){
	Sansa += ( mislead(y,rule(bar(2))) )
} else {
	dog /= COLS;
	Ygritte /= -1;
	Hodor /= ( -0.65 )
}
} else {
	--Ygritte;
	ROWS
};
	if(ROWS){
	x *= -protect(Hodor)
}
}
assert ( COLS ) : "Nothing burns like the cold."
var dog = -39
assert betray(--1,( 0.55 * TABLE[foo()][( -foo(TABLE[25][rule()] + 67 - 1) ) * COLS] )) : "Nothing burns like the cold."
def TABLE[protect(-1,95)][j] {
	if(--560.76){

};
	( -58 )
}
assert Stark : "What do we say to the Lord of Death?"
var Arya = ( -92 )
var Stark = --91
var y = Jon
def destroy(x,Hodor,Sansa){
	( ( TABLE[--0.64][-COLS] ) ) + --0.07 + ( -dog * ( x ) * -ROWS );
	if(dog){
	-ROWS;
	if(ROWS){
	TABLE[destroy(COLS)][x];
	Jon *= betray(( -TABLE[COLS][-bar()] ),--1)
} else {
	Stark += 0.71;
	30.8 * protect(COLS,0.71)
}
} else {
	if(( Sansa )){
	-( ( -TABLE[-1][( -60 )] + Hodor ) );
	( ( mislead(( ROWS ) * -1) ) )
} else {
	if(( Arya )){
	if(-bar(-bar(TABLE[-14 - COLS][-( ROWS )]),( -0.04 ))){
	--( ROWS ) - -Hodor * -93;
	if(( 250.21 ) * bar(Hodor,COLS)){
	if(--68){
	COLS;
	dog /= COLS
}
} else {
	Jon += COLS
}
}
}
}
}
}
def destroy(Stark,Stark){
	y -= 330.9;
	if(destroy(-y / ( TABLE[Sansa][-1] ),Jon)){
	if(Ygritte){
	Sansa += -0.82;
	-810.85
} else {
	Hodor -= -( -mislead(1,dog) ) - TABLE[y][--rule(7,( -0.39 ),-91)] - ( 90 );
	Arya *= mislead(ROWS,x);
	Jon *= ( COLS )
};
	-dog;
	if(TABLE[-Hodor / ROWS + 6 + 0.84 - -43][( 910.65 ) - TABLE[26][-Jon]] / Arya){
	--0.26
} else {
	Ygritte;
	y /= Arya * Jon
}
} else {
	Sansa /= ( Arya )
};
	if(mislead(ROWS,dog,Arya) * -COLS){
	-Arya
}
}
var Sansa = bar(( COLS ),( --380.37 * betray(( Stark )) ))
def TABLE[( rule(foo(-94 - Ygritte),destroy(-0.72),( --ROWS )) )][i] {

}
def TABLE[-( TABLE[betray(destroy(( ( -( -COLS * 61 - Stark - TABLE[COLS][Stark] ) ) ),( betray(dog,foo(( -17 ))) )))][--Arya + 19] ) - ROWS + ( ROWS ) - -bar(betray(Arya,-( --0.56 / destroy(dog) )) / ROWS + COLS)][k] {
	mislead(( -360.673 * ( ( ( -mislead(--1,-Sansa) * -0.76 + -x - betray(( Arya ),destroy(( y ),( TABLE[protect(y,TABLE[--dog][ROWS],rule(COLS))][ROWS] ))) - bar(11) / -48 ) ) ) / --470.4 - Arya ) - Hodor)
}
def mislead(Hodor,y){

}
def betray(Hodor,Stark){
	destroy(0.33)
}
assert ( x ) : "Fear cuts deeper than swords."
assert 1 : "Winter is coming"
def protect(Ygritte){

}
assert ( -660.4208 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( ( COLS ) ) : "Nothing burns like the cold."
var Stark = ( 73 )
var Jon = ( y )
def TABLE[x][k] {

}
assert Sansa : "What do we say to the Lord of Death?"
def foo(Hodor,Arya,Jon){
	bar(( -0.76 ))
}
def TABLE[COLS][k] {
	0.62 + -0.22 + ROWS;
	betray(92,-( foo(Sansa,-( destroy(y,x) / destroy(COLS,y / --( Sansa ) + --Arya,COLS) )) ));
	Arya *= bar(0.73,Ygritte)
}
var dog = -0.58
def TABLE[-0.28][i] {

}
def foo(Arya,y,Hodor){
	rule(( destroy(dog,TABLE[( destroy() )][-0.93]) * -11 - -81 ) * ( COLS ),TABLE[280.92][foo(foo(y,destroy(Hodor - COLS,-52,( Sansa )),ROWS) + ROWS,rule(-y))])
}
def foo(dog,Ygritte,dog){
	if(TABLE[( ( bar(TABLE[protect(-0.72)][-70 - 69]) ) )][0.52]){
	if(TABLE[--TABLE[16 + -1][--dog] / --0.92 * betray(12,1,ROWS)][( ---x )]){
	Ygritte += ROWS
} else {
	( -( -0.6 ) );
	if(730.7){
	y /= -ROWS;
	if(( -( -x / TABLE[-310.189][betray(Jon)] ) ) * Ygritte){
	mislead(( bar(-Hodor,( mislead(TABLE[rule(( ROWS ),( -0.54 )) - ROWS - 1 * -10.1][1],Ygritte) )) ),-62);
	-Jon
} else {
	if(( COLS * -46 ) - ( -97 ) + ( -( protect() ) / -COLS )){
	if(mislead(-( dog - ( ( Ygritte * -58 ) ) ))){
	if(dog){

};
	Sansa *= COLS
} else {
	0.72;
	Arya -= ROWS
}
} else {
	rule(protect(--TABLE[Ygritte][99] / ROWS,750.7) / ( destroy(-COLS + ( -0.43 / 660.3 ) - y) ))
}
}
} else {
	destroy(dog,--( ( ( y ) ) ) * ( 0.33 ),--( x ) * ( Stark * --1 ) * --99);
	Arya *= foo(bar(-foo(Stark * COLS),COLS,--bar(( -41 ),-590.81) + COLS * ( TABLE[ROWS][( dog )] )));
	TABLE[( -( -0.8 ) )][dog]
};
	Sansa /= y
};
	Arya;
	ROWS
} else {
	Hodor *= 52 + Stark;
	ROWS;
	if(880.3403){

}
};
	ROWS
}
def TABLE[Ygritte][k] {
	Stark /= ROWS;
	if(( betray(-53) )){
	Jon /= ( destroy(--ROWS - 0.76) );
	if(Stark){
	bar()
} else {
	Arya *= destroy()
};
	if(protect(Sansa,0.39,65)){
	( -0.87 )
} else {
	( ROWS ) * COLS;
	if(Hodor){
	if(TABLE[Jon][betray()]){
	Stark *= 89;
	if(ROWS){
	Hodor += 0.54
}
}
} else {
	x -= -0.28
};
	if(ROWS){
	y /= --rule() - TABLE[TABLE[-630.7][Ygritte]][( ( 8 ) )];
	if(0.41){
	if(Hodor){
	Jon;
	mislead(( COLS ),protect(betray(rule(),foo(-Stark) + 0.33 - -Jon,destroy(--0.02 * destroy(-COLS),-( ROWS - -1 ) * Arya))) + mislead(ROWS,-( bar(y,-0.49) ),-Hodor) + -0.36);
	0.05
};
	dog /= ( -( Sansa ) - Ygritte )
} else {
	if(( -COLS )){
	Jon += Jon;
	Sansa += -( Stark );
	42
} else {

};
	if(Jon){
	if(Sansa){
	if(ROWS){
	if(-Ygritte){
	x -= betray(TABLE[Hodor][-0.88],( -1 ));
	if(( 1 ) / betray(Jon)){

} else {
	ROWS + ( 740.45 - dog );
	( ( ( -1 - Ygritte * 31 / ( --0.17 ) / 0.47 ) ) );
	Jon *= x
}
} else {

};
	if(-TABLE[Sansa][( ( foo(bar(-Stark) - x - x / COLS,-180.4731) ) )]){
	x += foo(36,Ygritte) - -70;
	( bar(TABLE[( 0.36 ) * ( mislead(-960.9725) )][COLS],( y )) )
}
} else {
	if(-COLS / ROWS){
	-y / rule(COLS);
	Sansa += y / COLS - -360.6
}
}
} else {
	if(-( -1000.4 )){
	if(Jon){
	if(( COLS )){
	x *= -640.4;
	if(( -( Hodor ) )){
	if(TABLE[TABLE[betray(-0.43 + -5 + rule(),rule(foo(),TABLE[-0.27][y + ( -79 )],-Jon + -rule(ROWS)),( ROWS ))][Arya]][--0.38]){
	( x )
};
	40
} else {
	dog *= 19;
	Ygritte /= Ygritte
}
};
	if(( COLS )){
	if(foo()){
	Ygritte += 75;
	y *= -1 + ROWS
} else {
	if(0.01){
	Sansa *= Arya;
	y -= ROWS;
	COLS
};
	if(( -bar(-15) )){
	y += 90.76;
	if(-35){
	if(protect(-1,-foo(( 97 ),0.07))){
	Stark /= y
}
};
	Sansa -= protect(Ygritte,ROWS,-( -TABLE[Stark][-0.29] ))
} else {
	if(( TABLE[Stark][Sansa] )){

}
}
};
	x /= Jon / ( COLS ) * 91
};
	y *= ---870.026 / 0.82
};
	Ygritte /= Jon
};
	-protect(Hodor)
}
} else {
	y += TABLE[Stark / ( betray() )][protect()];
	y += 0.44;
	if(( COLS / -( ( -0.47 ) ) )){
	y += ROWS;
	Hodor /= dog;
	-Arya
}
}
}
}
}
} else {
	( ( -TABLE[67][-Jon] ) )
}
}
assert 34 + COLS : "Winter is coming"
assert mislead(1) : "Nothing burns like the cold."
def TABLE[59][k] {

}
var Stark = protect(--Sansa,( x - -1 ))
var Jon = -Stark
def TABLE[protect()][i] {
	dog
}
var Sansa = Jon
var y = Ygritte / rule()
def TABLE[TABLE[-( ROWS )][( -97 / -destroy(( ( -ROWS ) ),( destroy(COLS,600.69 + dog,0.89) ),( -TABLE[-( ( -500.6 ) )][-destroy()] )) )]][k] {
	if(TABLE[protect(protect(mislead(-70),-1) + 4)][Sansa]){
	if(( -TABLE[rule(--dog,destroy(destroy(-rule(betray(COLS,protect(-1,Jon),0.6),Jon) * 50),-COLS - Sansa) - -0.92 - Jon,dog) - ( ( ROWS ) ) - Hodor][-0.47] * 24 )){
	if(-dog / -ROWS * rule(2,TABLE[770.7875 - 68][-1 * destroy(TABLE[foo(0)][TABLE[-1][-0.48 * y * 0.93] - COLS],-protect(-foo(COLS,TABLE[x][Ygritte])),-Jon)] * Arya) / bar(-0.25) - mislead() / TABLE[dog / protect()][--1] + -( -( ---dog ) )){
	10;
	61
};
	Ygritte *= Stark
}
};
	-34;
	if(foo(y)){

}
}
def foo(Sansa,dog){
	COLS
}
def betray(Ygritte){

}
assert mislead(mislead(ROWS / ROWS * -0.28,-99)) : "Nothing burns like the cold."
def TABLE[-COLS][k] {
	( bar(TABLE[TABLE[COLS / -( ( --y - ( -( 0.07 ) ) / -0.69 / Jon ) ) + ( -43 ) + Arya - x][rule(-0.23)]][-67],ROWS) );
	if(( Stark * -1 )){
	Arya += foo(-protect(--0.19 / 0.37 - -x,9) * protect(-( COLS + destroy() )) - TABLE[COLS][TABLE[-1][ROWS] / COLS + ( TABLE[Sansa][bar()] )],-x)
};
	y
}
def bar(Sansa){

}
var y = COLS
var dog = -COLS
var Sansa = foo() / ( -44 )
var y = -0.39
def TABLE[-x][i] {
	if(0.46 - -15){
	if(ROWS){

} else {
	Arya + ---y
}
} else {
	Sansa -= Ygritte;
	Sansa *= foo();
	Jon += foo(bar(COLS),-( --32 ),( TABLE[( TABLE[-( betray(ROWS,dog,Jon) * -1 ) + Jon - COLS / TABLE[83][foo(-350.42,ROWS - -0.71,0.41 / -protect())]][53] )][y] - -38 ))
}
}
var Stark = -0.93
def bar(){
	y += ( -0.74 );
	if(Hodor){
	-mislead(ROWS)
}
}
assert Jon : "Fear cuts deeper than swords."
var Stark = mislead(ROWS)
assert 1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -1 : "Winter is coming"
var dog = destroy(( ( ( 19 ) ) )) / betray(--0.04 + TABLE[-x][destroy(-( ( -Ygritte ) ),TABLE[y][( destroy() )] * rule(( -protect(-bar(COLS,COLS) / ROWS * Sansa,TABLE[-Arya][-95],COLS) )),ROWS - ( Jon ))] - 0.67,COLS,Jon) + Sansa
def TABLE[y][j] {
	-( -TABLE[0.8][TABLE[betray()][-0.39] - ( -45 )] ) - bar(( -90 ),460.68,1) / --0.9;
	if(Arya){
	COLS;
	Ygritte += COLS
}
}
def rule(Arya,Ygritte,Jon){

}
assert Stark : "What do we say to the Lord of Death?"
def TABLE[-Hodor][k] {
	if(( -COLS )){
	Ygritte += ( bar(ROWS) ) * ( -Jon );
	if(( foo(destroy(betray(-betray(y,y)),-1),TABLE[TABLE[( 1 )][x]][( Sansa )],--1) )){

} else {

}
}
}
def mislead(Stark,Arya){
	ROWS;
	Jon -= TABLE[-( mislead() ) / -830.3 + foo(( -COLS - rule(COLS) ) * ROWS,( -TABLE[( ( protect(mislead(-destroy(COLS * TABLE[Arya][Stark],( y ) - rule(),--0.13) * betray(( dog )),( -TABLE[( 21 )][0.66] * foo(COLS,-300.323 - betray(0.85,-Jon)) ),Hodor),TABLE[COLS][TABLE[protect(-Sansa)][1] / -( ( ( TABLE[-760.4531][Stark] ) ) ) + 0.86],-Hodor) ) )][ROWS * COLS + rule(COLS / -0.52,Arya,destroy(--ROWS * ( TABLE[betray(TABLE[700.321][-x]) / Jon][ROWS] ),( -1 - -0.5 ))) - TABLE[( ( 0.65 ) )][Jon]] - destroy(( -( ROWS ) ),Ygritte) )) + protect(COLS) + -mislead(Hodor)][rule(( TABLE[COLS / TABLE[dog][-0.53]][-COLS] ) / Hodor + 270.8)]
}
assert ( 99 ) : "Winter is coming"
assert -0.58 * Arya : "One can not simply parse himself"
def foo(Ygritte){

}
def rule(Sansa){

}
def mislead(Stark){
	if(Arya){
	Arya += 1;
	( -560.043 );
	protect(-0.58,-0.97)
};
	if(-58){

}
}
var x = dog
def TABLE[---0.26][j] {
	1 * ( -foo(-( Stark ) + ROWS) / ( 0.21 ) )
}
def TABLE[destroy(1 + rule(),ROWS) * COLS][i] {
	if(-1){

}
}
assert bar(rule(destroy(590.643)),ROWS) / ( ( Jon ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert 1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert y : "What do we say to the Lord of Death?"
def mislead(Sansa){

}
def destroy(){

}
def TABLE[foo(-protect(( protect(Jon) ),( ROWS )),-( ( -COLS ) ) + ( Hodor ))][j] {

}
assert TABLE[COLS][-Stark] + COLS : "Nothing burns like the cold."
var x = Sansa
assert mislead(-1) : "Nothing burns like the cold."
assert protect(-( ( -Arya ) )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(Stark){
	destroy(protect(-dog / protect(-COLS,Arya,( mislead() )) * 0.05,( 0.2 ),( Stark - ( 21 ) - bar(Ygritte,-( 0.56 )) / ( -( 0.45 / protect(0.82) ) ) * bar(TABLE[rule()][( ( Hodor ) )],-0.27) )))
}
assert -x / protect(Jon,ROWS) : "What do we say to the Lord of Death?"
var Arya = destroy(Sansa,0.54)
def TABLE[250.313][i] {
	Jon *= 0.78;
	if(0.63){
	( --91 );
	if(-destroy(-0.5,-foo(( ROWS ),betray(COLS)) - 64,( TABLE[COLS][-1] )) - ROWS + Arya){
	70
} else {
	Sansa *= rule(( ROWS ),betray())
}
}
}
var Arya = TABLE[( Hodor * Sansa )][( ROWS )]
def rule(Hodor,Sansa,Ygritte){
	x /= -bar() / TABLE[Jon * foo() - Sansa][TABLE[dog][mislead(Hodor)]]
}
def mislead(Sansa){

}
assert -bar(-mislead(Sansa + Arya,ROWS),0.06) / -1 : "One can not simply parse himself"
var Jon = Arya
assert ---1 : "Fear cuts deeper than swords."
assert destroy(foo(-protect(COLS) + --Hodor / Sansa) - Sansa,( ( Stark + protect(destroy(--( -( ( -bar(-58) + betray() / ( -10.4501 ) ) ) ) - TABLE[-x][betray(-bar(Ygritte),destroy(-66,foo(rule(),Hodor,rule())),ROWS)],-( 1 )) - Stark) ) - bar(( ( 0.93 ) * COLS ),destroy(mislead(Ygritte,ROWS))) ),protect(x) * -54) : "One can not simply parse himself"
assert -Ygritte + ( dog ) : "Winter is coming"
assert x - TABLE[COLS][680.13] - ( COLS ) : "Nothing burns like the cold."
def TABLE[-530.7951][j] {
	TABLE[-COLS][-1];
	TABLE[--( ( ROWS + protect(Jon,( rule(COLS) ) * COLS,--0.56) ) )][destroy(-destroy(bar(TABLE[Hodor][protect()],-0.63)),-Ygritte)] - Ygritte
}
def rule(Jon){
	98
}
assert dog : "Fear cuts deeper than swords."
def destroy(Ygritte,x){
	Stark -= ( mislead(dog,( -( Arya ) - 0.5 - -40 ),-( ( Ygritte ) ) - 240.2) )
}
assert --0.59 / Hodor : "Fear cuts deeper than swords."
var Sansa = betray(dog,-( ROWS / -65 ) - -43 / betray(-( COLS ),destroy(( ( Stark ) ),Hodor,TABLE[( 0.02 ) / 72][COLS])) + protect(-0.89,rule(-( 0.81 ))) * dog + -220.14 - TABLE[1 * ( --ROWS + 1 * ( --1 ) )][Stark])
def TABLE[ROWS][i] {

}
def TABLE[dog][i] {
	betray(( -24 ))
}
def TABLE[-0.31][j] {
	y
}
def rule(Hodor,dog,Ygritte){

}
var Stark = ( Hodor )
def TABLE[( 34 ) * Jon][k] {
	x -= Arya
}
var Arya = 0.07
def TABLE[( 5 )][i] {
	if(-mislead(COLS)){
	( foo(720.023) );
	dog += foo(Arya) * mislead(-Arya - 0.28,TABLE[-0.84][y - Ygritte])
} else {
	rule();
	if(mislead()){
	destroy(-690.2016,mislead(-Arya,betray(betray(dog,protect(( ROWS ) / ROWS,( -0.43 ))))),( -0.48 ));
	if(1 - -TABLE[( y )][810.4823] + COLS){
	foo(( 1 ),92,( -41 ) + foo(-43))
}
};
	x -= -270.58
};
	--( Arya * TABLE[( ( -0.08 ) )][COLS] + destroy(Sansa) ) * ROWS * -protect(ROWS,( ROWS ),TABLE[-540.09][0.89]) - -1;
	y
}
var Jon = Stark
def TABLE[( -29 ) + bar()][k] {
	Ygritte;
	if(--10 / --63 - -y / ( -destroy() - COLS ) - -ROWS + rule(Hodor / bar(( 0.12 )))){
	Stark += -bar();
	if(( -0.13 )){
	( -rule(-Arya / destroy(-Stark - destroy(Sansa) * 0.38,( -22 ))) );
	if(-Arya){
	( y )
} else {
	Ygritte *= COLS;
	if(COLS){
	( Stark )
};
	x -= COLS
}
}
}
}
def TABLE[betray(( ( --( mislead(Jon,betray()) ) ) )) - 1][i] {
	x += -Stark / ( -TABLE[( -TABLE[foo()][( Ygritte ) + x / rule(-950.01 + 780.5633)] )][-100.1554] * --550.2 * ( -ROWS + -( ( -mislead(( foo(-0.49) + Stark - destroy(-Sansa) ),-( -( --TABLE[--900.0108 + ROWS][( -17 )] ) ),( -780.01 ) * -Sansa * -0.79) + 630.75 / -0.23 ) ) ) / -280.2 + rule(63,23,foo(foo(destroy(dog,rule(Sansa - betray(-( betray(73) )) * ( bar(( 0.11 )) )),-y)))) * COLS + COLS );
	dog *= x - 1
}
def rule(Sansa){
	Jon -= -300.32;
	Hodor
}
assert ( ROWS ) : "Fear cuts deeper than swords."
assert TABLE[dog * ( TABLE[-( 0.6 )][TABLE[-78][Stark]] ) - 120.982][( ( ( -( dog ) ) ) )] : "What do we say to the Lord of Death?"
def TABLE[-1 * mislead(betray(bar(Ygritte,--1)),TABLE[x][COLS / -0.93]) / COLS][j] {

}
def bar(Hodor,Arya){
	Arya *= bar(( mislead(bar(( -ROWS )),---ROWS,Hodor) ),Sansa);
	if(ROWS){
	if(Jon){
	Sansa;
	if(betray(Ygritte,x) - -ROWS * -760.83 + 0.23){

} else {
	0.28;
	Jon *= Sansa - -rule(-Ygritte) / Stark
}
}
};
	if(( ( mislead(( -Stark ),ROWS) ) )){
	Jon -= Hodor;
	-mislead(mislead(dog,Sansa))
}
}
def TABLE[x][j] {
	-mislead(TABLE[-( ( bar(-ROWS * dog / destroy(COLS + COLS,Jon)) ) )][-COLS]);
	0.14
}
var Stark = -ROWS
def betray(Stark,dog,x){
	if(( bar(Hodor) )){
	Arya += 940.013;
	if(mislead(rule())){
	Sansa
} else {
	TABLE[--0.08][COLS / ( ( -y ) / bar(y) + ROWS )]
}
};
	dog -= -76;
	( x + ( TABLE[--TABLE[-Sansa][rule(ROWS,-protect(),-ROWS)]][Hodor] ) )
}
assert foo(-( destroy(( ( ROWS ) )) )) + 0.06 : "What do we say to the Lord of Death?"
var Arya = betray(dog,( ROWS ))
def TABLE[mislead(( -betray() ),rule(-Ygritte,Hodor))][k] {
	TABLE[protect(betray(-Arya + -( Ygritte ))) * ( destroy(80.913,x) )][COLS];
	if(Arya){
	if(--0.67){
	Ygritte += COLS;
	Hodor += Jon;
	if(foo(Sansa,foo() * ( ( ROWS ) ) + Arya,x)){
	Jon -= ROWS;
	if(betray()){
	0.75;
	( COLS );
	dog += ( ( Sansa ) )
} else {
	ROWS
}
} else {
	-870.778;
	x *= TABLE[destroy()][COLS]
}
};
	if(( ( Arya ) )){
	if(ROWS / COLS - -( ( -Arya + -( COLS ) ) ) + Sansa){
	if(protect(rule(Ygritte,betray(ROWS) + 78 / -TABLE[-Hodor][-410.8988]))){
	-betray();
	bar(-protect(Jon,--( 1 ) - COLS) * ( bar(ROWS / -( rule(-bar(-dog)) ),ROWS,( foo() / --( ROWS ) )) * ( ( COLS ) ) ),Sansa,-betray(mislead(( COLS )),-76 + ( ( ( 1 ) ) ) + TABLE[betray(COLS,foo(),( Stark * ( bar() ) ))][Hodor],bar()) * ( bar(-destroy(COLS)) * 77 + TABLE[mislead(( ( bar(ROWS,---0 * -0.48) * bar(Sansa,( COLS )) ) ) * COLS,-0.62) * -1][( --49 )] ) * -( rule(Sansa,( foo() )) ))
} else {

}
};
	if(-1){
	62;
	COLS + -160.201
}
};
	if(COLS){
	x *= ( rule() - Ygritte );
	Stark *= ( ( dog ) ) / ( ( betray() ) ) * dog
}
} else {
	if(-Arya){
	if(--Arya - rule(-y + 0.09,ROWS)){
	if(Stark){
	Ygritte /= ( betray(Jon) - protect(COLS,COLS) );
	if(destroy()){
	if(destroy(ROWS - rule(5 + Jon,mislead(COLS,-foo(-0.23)),x / Stark))){
	Hodor *= 81;
	-mislead(destroy(( COLS ),( protect(-( ROWS ),TABLE[Jon][85]) ) / --1)) - -Arya + ROWS;
	if(destroy(-41) / protect(-Hodor)){
	-( TABLE[-1][destroy(-foo(TABLE[destroy(betray(Arya,dog),betray(),-1)][-( x )])) * Sansa] )
} else {
	if(-TABLE[-0.17 / y][( -1 )]){
	dog *= Sansa;
	-destroy(mislead(0.74))
}
}
} else {
	if(betray()){
	Jon += ( mislead() );
	Stark *= TABLE[--( ( -mislead(( COLS / bar(( --ROWS )) - ( ROWS ) ),rule(TABLE[y + TABLE[-Jon][-0.46]][( ( 10.315 ) )]) * 0.94) + Jon ) )][( Hodor )]
};
	Sansa += -( destroy(( -60 )) )
};
	Arya *= x
} else {
	( protect(Hodor,--( -protect(( COLS / Stark - -( -Hodor + Arya + 37 ) ),rule(TABLE[rule(-rule(---19,Stark) - Jon)][COLS],( x - ( ( foo(-0.93 - protect()) - ROWS ) + COLS ) ))) ) * COLS + COLS) )
};
	x -= -Stark
} else {
	TABLE[( rule(( -6 * COLS )) )][--protect(-90)]
};
	if(-83){

} else {

}
} else {
	if(destroy(Ygritte,( ( ROWS ) - ROWS ) * Arya)){
	if(Hodor){
	rule(-( Sansa ) * protect(y) - 0.81 + ( Arya ) - -TABLE[--Sansa / -45 / destroy(betray(TABLE[( TABLE[ROWS][foo(190.25,-98,1)] )][-x],foo(Arya,( TABLE[( --betray(ROWS / -1 * --TABLE[rule(y + --mislead(0.51 / -19 / COLS),Stark,bar(-0.08))][( COLS )] * y / Stark - betray(-24,--TABLE[bar(ROWS,ROWS + 1)][-0.84] * Hodor,COLS),--1) ) / -0.11][betray(TABLE[( protect(x / COLS,-( COLS )) )][-protect(( 0.06 ),( -betray(-( protect(( destroy(( TABLE[TABLE[COLS][COLS]][-dog] * -Stark ),TABLE[betray()][-( betray(-90 * ( mislead(protect(betray(mislead(x,-1),0.32 / x),COLS,rule(ROWS,-64,-71)),-ROWS) )) ) / Arya],1) ),foo(COLS) / -ROWS) ),36) ))])] ))),COLS)][TABLE[y][( Sansa * 1 )]],TABLE[( protect(-0.07,Arya * ROWS) ) + ( -75 ) - betray(( mislead(1 / ROWS - bar() - dog,y - Hodor) ),-y)][-0.47],COLS)
} else {
	y -= -( -75 );
	if(( -1 - ROWS )){
	x *= betray(Stark,-( COLS / rule(TABLE[rule(( -1 )) - mislead(destroy(rule(-( ROWS )),Ygritte)) * ROWS + betray(-37)][1],-1 - COLS,destroy(ROWS)) ) / ROWS * rule(protect()));
	rule(( -0.72 ));
	if(Jon){
	if(-770.5442){

};
	if(dog){
	Jon * 280.6 * ( 60.6 ) + -1
}
}
}
}
} else {
	Stark -= ( -( x ) / TABLE[-rule(bar(Sansa),--1 * ( --1 ))][( TABLE[foo(foo(8),Sansa + -COLS) / Jon][-Jon] ) * ROWS] );
	--950.279 / ROWS - TABLE[( Jon )][foo(COLS,87)] + 0.87
};
	if(-0.02){
	if(rule(TABLE[mislead(bar(COLS,57,0.63))][-COLS] * Sansa)){

};
	COLS
};
	if(mislead()){
	Jon *= -1 + rule() + Ygritte;
	if(Stark){
	18
} else {
	if(Arya){

};
	if(bar(46,y)){
	-1;
	if(( -51 + Stark )){
	if(( rule(COLS,foo(foo(x),Stark,Arya)) )){
	Sansa *= destroy(( ( mislead() ) ) + --1,Sansa,ROWS);
	if(mislead(-0.55,-1) - x){
	y *= 0.16;
	bar(110.5433) + protect(( -ROWS ),COLS) / ( TABLE[--2 - bar(-51,Hodor,Ygritte) - -( COLS )][mislead(0.2,Hodor + -0.37)] ) + ROWS + ( 0.8 )
} else {
	Arya * 950.9 - ROWS * TABLE[( -0.17 )][-310.41];
	if(destroy() / Ygritte / ( destroy() )){
	Ygritte
}
}
} else {
	Arya /= destroy(-0.3)
}
} else {
	dog;
	Ygritte /= ( destroy() + bar(betray(-0.54,-mislead(Jon,destroy(--destroy(--( TABLE[COLS][--destroy(( ( -0.64 ) ),( Ygritte ),foo(-99)) / dog * destroy() - protect(ROWS / --Ygritte + --TABLE[bar(protect(0.07 + protect(),ROWS) - 0.88,0.99 + ROWS)][protect(dog)] * Jon - ( -0.01 + Arya - ( betray(destroy(y,0.41 + -320.88),( bar() ),--1 * Sansa) ) * -( dog - COLS ) ) * COLS,1,1) / TABLE[protect(destroy(--COLS),-Jon + ROWS)][TABLE[0.71][ROWS]]] ),28)),COLS - -0.32 + foo(ROWS,( ( COLS ) ),Jon) + -0.78 / bar(protect(destroy(( bar(rule(bar(COLS * COLS * -( ROWS ),COLS),TABLE[Jon][Ygritte] - Arya / 540.9079) + destroy(( -1 ),-TABLE[( COLS / TABLE[Stark / ROWS][foo(1 - -11)] - ROWS )][-Ygritte]),-0.16) ),ROWS,dog),ROWS,ROWS)) + foo(( betray(mislead(( --ROWS * -0.55 ))) * foo(-24,-protect(Ygritte)) ),protect(rule())) * dog * protect(Stark))),73) );
	rule(Stark)
}
};
	0.09 / ROWS * Sansa
}
} else {
	if(destroy(mislead(74,--0.1))){
	if(( protect(( COLS ) / ( destroy(destroy(-betray(--Hodor + foo(-( 0.51 ),protect(Ygritte,bar(TABLE[dog / ROWS][bar(270.799)],ROWS,Hodor),( ( Arya ) )) + mislead(TABLE[-( dog )][( Sansa )],-( ( rule(Jon,TABLE[Stark][9],TABLE[y][-680.85] + rule(Hodor)) * -betray() / -1 ) ))) * -( -y * ROWS * -1 - -95 + ROWS + protect(dog,betray(-94),ROWS) * ( TABLE[destroy()][bar(dog)] ) * ( -1 ) ),protect()))) * foo() ),( protect(ROWS,foo(0.6 / ROWS * TABLE[y][40.746])) )) * ( -COLS ) )){
	40.79;
	( mislead(-420.8) )
} else {

}
} else {
	if(COLS){
	if(-x){
	y
} else {
	if(COLS){
	-1;
	if(TABLE[( Stark )][36]){
	Sansa += ROWS;
	Arya += 23 * -rule(-70.48,Hodor,Stark)
} else {

}
} else {
	-27
};
	foo(Arya)
};
	if(--COLS){
	if(TABLE[Stark][Stark + y]){
	( Ygritte );
	if(TABLE[-210.69][--32]){

} else {
	0.87;
	Ygritte -= TABLE[( 1 )][-rule(TABLE[Ygritte][Arya],ROWS,-1)]
}
} else {
	Stark += dog
}
} else {
	if(foo(( ( COLS ) ),--27)){

};
	COLS
}
}
};
	if(-1){
	Arya /= --180.69 / -Arya
} else {
	foo()
}
}
}
};
	Sansa *= ( TABLE[( COLS )][COLS] )
}
}
def TABLE[COLS][i] {

}
assert rule(Sansa,rule(Stark,-450.4,Ygritte),( -0.03 * 0.86 )) : "One can not simply parse himself"
assert -( TABLE[Jon][Ygritte] ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -58 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(Arya,Hodor,Jon){
	x /= TABLE[( -64 )][-0.54];
	Sansa *= betray(foo(Hodor,-39,-Stark)) - 0.93
}
def destroy(){
	-0.69;
	Jon += COLS;
	Jon += ( ( 11 ) )
}
var x = -COLS
def TABLE[( rule(-( -( destroy(TABLE[( ( Sansa / -ROWS / Stark ) )][protect(TABLE[betray(570.583) + Arya][-COLS] - ( COLS * Ygritte ),( TABLE[COLS][-1] ),foo())] - ( rule(--( ROWS / COLS + ---0.82 - destroy(( -Hodor ),--COLS / ROWS) ),( -mislead(( Sansa )) - bar(TABLE[foo(( ROWS ))][( TABLE[COLS][foo()] )]) )) )) - rule(-0.07 * ROWS) ) ),( Ygritte + ( -Sansa ) ) - foo(( ( protect() ) - ROWS ) + dog,x) - Arya) / -0.88 )][j] {
	if(TABLE[TABLE[-TABLE[bar(-68,-destroy(( dog )),ROWS) / ( -350.4 )][( -destroy(Ygritte) )] / ROWS][bar(protect(-COLS * -( -0.44 ),COLS),COLS)]][-( ( ( Hodor ) ) )]){

};
	730.267
}
assert Arya * ( COLS ) : "Nothing burns like the cold."
def TABLE[TABLE[250.23][-6]][k] {
	x /= -ROWS;
	Arya -= foo(630.881,( ( ROWS ) ),Stark)
}
def TABLE[-COLS / ( Hodor )][j] {
	COLS
}
def rule(y){
	Ygritte -= Hodor
}
def TABLE[protect(--COLS,-COLS)][i] {
	if(0.5){
	Ygritte += ( foo() )
} else {
	if(protect()){
	if(ROWS){
	if(TABLE[Sansa][Jon / protect(-Sansa,-0.9)]){
	mislead(-( ROWS ));
	0.26
}
};
	if(-( ROWS ) - -( ( destroy(COLS,Stark,-99) ) )){
	COLS;
	if(COLS){
	Stark -= betray(ROWS,y + ROWS);
	Jon - ( COLS );
	COLS
}
} else {
	bar(-betray(TABLE[( -( -77 - Hodor ) )][( ( -foo(( -( Ygritte ) ),1,TABLE[Stark / dog][mislead(y,0.35,( 0.73 )) / betray(-0.09,ROWS)] - Arya) ) )],( Stark ),x),( TABLE[y][y - 0.9] ))
};
	dog -= betray(--ROWS / -foo(TABLE[( 990.024 * ( ( 970.119 ) ) )][COLS],-x))
};
	Stark -= -destroy() / TABLE[0.33 + TABLE[TABLE[-destroy(( ( -TABLE[( Sansa )][mislead(Ygritte,TABLE[-TABLE[dog - 540.92][ROWS]][ROWS])] + betray(ROWS,( -0.12 ),-mislead(-0.86,-ROWS,ROWS + TABLE[y][COLS / Jon / --0.65])) ) ),26)][-1 + Ygritte] * mislead(( rule(( -( ( destroy(TABLE[-( -( x ) ) * ( ( -95 ) )][TABLE[( 110.9439 )][x]],Hodor + foo(--x + 0.84,COLS,0.93)) ) ) ),( TABLE[TABLE[1][COLS] - 0.85][--COLS] ) * --( mislead(foo(( betray() / foo() )),( -170.462 ) * 59) )) ),y)][-0.79]][dog];
	Sansa += Arya
};
	y += dog
}
var Hodor = -protect(51)
def TABLE[COLS * betray(bar(-rule(Ygritte,COLS),-ROWS,Arya))][k] {
	if(0.56){
	if(ROWS / TABLE[--990.3 / 1][destroy(bar(-0.55),( TABLE[Ygritte][Sansa] ),COLS)]){
	if(TABLE[-370.933][Sansa]){

}
};
	dog += ( -( -foo(-31) ) ) / -44;
	dog -= ROWS
} else {
	if(-COLS){
	-betray(( ( ( ( ( TABLE[24][x] ) ) - mislead(( ( 0.8 ) ),mislead(bar(-0.55,mislead(-Stark + -0.71,-betray(0.58,-1,y) * TABLE[Sansa][( COLS )]))) / ROWS,( 1 )) ) ) ),x + -Jon,-0.13) * betray() + ( TABLE[( ( -Jon ) )][foo()] ) * -610.65 - 74 + 330.69 / TABLE[-72][protect(24,Ygritte,-( ( -( Ygritte ) + ROWS ) ))];
	if(foo(( y ),ROWS - 0.96 * -770.2)){
	if(destroy(( ROWS )) - x / ( ( -dog ) )){
	x += ( Sansa ) * TABLE[TABLE[0.18][0.1 / 0.46 + rule(-( 88 ),ROWS)]][-COLS * -0.94]
} else {
	-0.69 + 1;
	if(-rule()){
	destroy();
	x += protect()
}
}
}
} else {
	Arya *= protect(-0.85,-foo())
};
	-betray();
	TABLE[destroy(ROWS,Stark - protect(ROWS,-x),0.09)][( rule(ROWS + 77) )]
};
	if(y){
	Hodor *= -bar(betray(( -1 ),----foo(-320.17) + COLS + -0.7 * ( protect() ) * Sansa),-foo(( -1 ),rule(bar(-0.29,-x,1)))) * COLS * ( -destroy(TABLE[( -0.86 )][0.05],x) )
}
}
def TABLE[Arya / dog][i] {
	rule(TABLE[-( ( COLS ) + Ygritte )][( -0.53 )]) * COLS;
	Stark
}
assert Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = x
var Sansa = -bar()
def TABLE[ROWS][i] {
	dog += Sansa
}
var Hodor = COLS
def TABLE[9][i] {
	if(ROWS + ROWS * dog){
	if(-40){
	-73;
	x /= foo(-( --( -0.25 ) + ROWS ),Hodor)
} else {
	Arya /= TABLE[Hodor][( ( COLS / COLS ) )]
};
	dog /= -0.51;
	x -= ( -COLS )
};
	if(--93){
	Sansa *= ( Arya );
	-0.24;
	dog /= foo(Ygritte)
} else {
	if(-destroy()){
	if(-TABLE[( Hodor / -0.65 )][TABLE[Ygritte][2]]){
	( COLS )
} else {

};
	if(x){
	x -= protect(protect(( ( foo(-0.39,TABLE[COLS][ROWS] * x) - ( -42 + bar(-( ( ( mislead(-x,Hodor) * ( COLS ) ) ) ),-0.44) * -970.56 - x + ( Hodor ) / ( bar(betray(Jon + 240.315) - mislead(y * -( foo(Ygritte,( bar(( Hodor ) / TABLE[-TABLE[COLS - ROWS][--ROWS]][y] - Arya,bar(),-0.6) )) ) + COLS),( -TABLE[betray()][( Hodor )] )) - 570.992 + Arya * ( Sansa ) ) ) - ( 0.29 ) ) ),Arya));
	if(COLS){
	if(( -0.44 )){
	Stark -= ROWS;
	if(Ygritte){

} else {
	mislead(-0.39,54)
}
};
	Ygritte -= protect(10)
};
	if(TABLE[COLS][dog]){
	ROWS;
	( ROWS )
}
} else {
	Arya /= -0.55;
	if(--ROWS - bar(rule(bar(ROWS),protect(protect(protect(-1,-60 + ( ( foo(COLS,-0.28) ) + x ),-960.97 * -0.11),--1)) - protect(( --( --770.1218 ) * TABLE[TABLE[mislead(0.9,destroy(foo(( --foo(( x )) ),80,COLS - TABLE[destroy(-1,Arya)][-COLS]),protect(-1,TABLE[COLS][Sansa] + -Arya))) + -44][y]][ROWS] ))),ROWS)){
	if(--foo(( ( TABLE[y][0.58] ) + ( ( --0.07 ) - dog + ROWS / Arya ) ) + x,-5 + rule(( TABLE[( destroy(COLS) * ROWS )][y] ),( -protect(TABLE[( destroy(COLS,Arya) )][( y )]) * Sansa ) / -protect(dog) - -( Sansa ) / ( TABLE[( protect(Stark,destroy(),bar(mislead(-( x ),-Arya),rule(destroy(-x,-1)))) )][Jon] )) / Sansa - Jon) * destroy(dog,-760.433 / destroy(y * Sansa * -Sansa / destroy(ROWS * 0.34))) * -x){

}
}
}
};
	if(destroy(--1 + betray(rule(---x,ROWS)))){
	TABLE[mislead(Stark)][x]
} else {
	if(Jon){
	if(( y )){
	if(TABLE[-0.88 * --( TABLE[bar(ROWS)][dog] )][protect(y,x)]){
	Jon *= ( ( TABLE[( TABLE[COLS][ROWS] )][( ( 0.55 ) / betray() )] ) )
};
	if(dog){
	0.59;
	if(( ( bar(-340.33,0.81) ) + Stark ) + ROWS){
	if(-COLS){
	Jon *= TABLE[( destroy(1) )][-0.57] - ROWS
} else {

};
	Jon -= ( -1 );
	TABLE[mislead(COLS,dog,-49)][-ROWS]
} else {
	if(ROWS){
	Sansa += -ROWS
}
}
} else {

}
};
	Ygritte *= betray(TABLE[dog][( -610.021 )],TABLE[( COLS * bar() )][TABLE[bar(( --COLS ))][-0.87]],--1 * ( COLS ) / -COLS + 0.66 + protect(-rule(170.5))) * Stark - 0.81
} else {
	if(--( 0.4 )){
	if(TABLE[-TABLE[destroy(-1 / TABLE[foo(TABLE[bar(x,foo())][Stark],foo())][Jon],( ( Arya ) ))][dog / ( 36 )] * -0.54 + -1 - x + bar(dog,-( Jon ),Hodor)][Hodor]){
	Hodor *= COLS
};
	destroy(TABLE[mislead(-560.7)][( ( foo(ROWS) * -( rule(bar(rule(betray(bar(protect(-x,( destroy(-( betray(-1,Stark * ( ( TABLE[( ( COLS ) )][( ( ----foo(-0.49) ) )] ) )) ),COLS + ( TABLE[-39][-rule(bar(-0.99) / ROWS,Jon)] )) ) - protect()) - TABLE[( -0.85 )][TABLE[Jon / bar(-590.1,x)][( -( COLS - -( destroy(protect(-990.913 / TABLE[--0.92][x],--50.081 + Jon / rule(TABLE[( -( -protect() * -betray() ) )][0.8],--COLS))) ) - Arya + y ) )] * -x] / betray(Arya,destroy(bar(-0.11) / Stark)),dog,Ygritte),-0.25),Hodor,( bar(Ygritte,-( TABLE[98][TABLE[destroy(-betray(-1,protect(-( ( COLS ) ),--0.5),( -destroy(0,ROWS) )) + betray(( Hodor ),( TABLE[-Arya][COLS] )))][-0.31]] )) * ( Jon / ROWS ) )) + -0.23,-( Arya + ( Stark ) - ( ROWS ) * y ) * -700.1372 * 1 * betray(betray())) - ( -( Stark ) ),COLS) + protect(( ROWS + 940.9 )) * Jon ) ) )],--COLS)
} else {
	if(rule(Hodor,( ( COLS ) ),mislead(dog,mislead(-1,rule(ROWS))))){
	y;
	Jon += ( TABLE[COLS][( ( -Arya + mislead(rule(( TABLE[-940.246][Stark] ) * ( -1 ) - 0.79 + ROWS),-x / rule(TABLE[Hodor][x],ROWS,ROWS),Sansa) ) )] ) - Stark / ( mislead(Hodor,TABLE[ROWS][COLS]) ) + ( ROWS ) - -32 - betray() + ( x )
} else {
	Hodor -= Sansa;
	x /= dog;
	dog /= TABLE[-96][0.26]
};
	dog /= ( TABLE[Sansa][destroy()] )
}
}
};
	Jon /= ROWS
}
}
assert ROWS : "Winter is coming"
assert ROWS : "Nothing burns like the cold."
assert Ygritte : "What do we say to the Lord of Death?"
def bar(Ygritte,Hodor,Ygritte){
	-rule() - COLS + 0.43;
	( TABLE[--26][-780.9501] );
	if(ROWS * -26){

} else {
	betray();
	Ygritte /= -41
}
}
def foo(){
	--75 - -1
}
def destroy(Ygritte){
	Hodor - -protect(-COLS);
	Stark -= -96
}
def TABLE[COLS][k] {
	y *= -40.18;
	x /= ( 0.56 )
}
def TABLE[( y )][i] {
	Arya *= x
}
def TABLE[y][j] {
	Arya -= TABLE[-dog][0.97 * TABLE[mislead()][( mislead(( y ) + --destroy(COLS + TABLE[TABLE[COLS][foo(Sansa,COLS - Ygritte + ( -610.865 / --ROWS + protect() ) / dog)]][COLS]) / Arya,TABLE[( rule(Hodor) - -62 * -( dog ) )][( -protect(( y )) )]) )]];
	0.23;
	if(bar(-4)){
	Stark -= Ygritte
} else {
	if(foo(x,-0.63)){

}
}
}
assert ( 49 ) : "Fear cuts deeper than swords."
var Arya = betray(-( -81 ))
def TABLE[( TABLE[-0.72][( -( TABLE[betray(-24,-0.72 - ROWS,ROWS)][bar(TABLE[TABLE[87][ROWS]][bar()] - protect(-330.87,-37),dog) / TABLE[-0.05 / 0.3][y] / Stark] * -ROWS ) )] * ( protect(TABLE[protect(-COLS)][COLS],-( ( COLS ) )) ) )][i] {
	Sansa -= ( Sansa )
}
var Jon = -1
var y = destroy(1 - -( COLS ),destroy(-370.54,bar(-Hodor * foo() - ( Hodor / ROWS ) * -COLS,protect(mislead(Jon,dog - betray(-protect(),--( ( rule(( 93 )) ) )) + x,( mislead() ))),-29))) + Stark
def TABLE[Hodor][k] {
	( protect() ) + x / ( ( -COLS ) );
	Stark *= ( ( rule() ) );
	dog -= foo(Stark,-ROWS)
}
def protect(Jon,dog){

}
var Sansa = ( Stark )
var Stark = destroy(ROWS,-1,0.9)
assert 0.28 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-330.26][j] {

}
assert rule(betray(ROWS,Hodor) - dog,TABLE[TABLE[( ( rule(( TABLE[TABLE[-betray(COLS,Hodor,Jon)][bar(( -ROWS ),COLS,foo(--rule(( -ROWS / ROWS )),-Arya,( TABLE[( ( -destroy(ROWS) ) )][dog] ))) * ( foo(( -1 )) )]][Hodor] )) ) ) / ( 71 )][x]][8],Sansa) : "One can not simply parse himself"
def TABLE[COLS][i] {
	y *= 0.22
}
def mislead(Sansa,Ygritte){
	dog *= -60
}
var dog = --1 / -Sansa - rule() / Jon
def protect(x,Hodor){
	TABLE[-460.1185][foo(rule(Hodor,ROWS,TABLE[20][foo(TABLE[( COLS )][protect(-( Arya ),Jon) * -Ygritte]) - x]),--80)];
	COLS
}
assert ( Arya ) : "What do we say to the Lord of Death?"
var Arya = -protect(-ROWS,Jon) * Jon
def TABLE[x][i] {
	if(490.403){
	-0.75;
	if(TABLE[-93][-TABLE[( ( -COLS ) )][--1] * foo(dog) * Stark]){

} else {
	Arya *= ( mislead(23,-Jon) * COLS - rule(( COLS ),-1) )
};
	if(bar()){
	Sansa / -0.59;
	( -bar(( ROWS * destroy(destroy(betray(protect(foo(-36),64),-12),TABLE[-0.53][---y - ROWS],ROWS) * TABLE[TABLE[( COLS )][81]][-33],( ( TABLE[betray(protect(3,protect(710.2,( COLS ))) * destroy(( protect(-46) ),COLS,Stark) - rule(),Stark,-0.11)][0.12 * ROWS] ) ),Hodor) ),ROWS,Jon) );
	Jon += Jon
} else {

}
}
}
def TABLE[Jon][k] {

}
def mislead(Sansa,y,y){
	( ( -620.03 ) );
	Arya
}
def TABLE[-Jon][k] {

}
var Sansa = -bar(( -62 + COLS ) + ( -88 ) / ( y ) / -TABLE[36][490.582 * mislead(betray(),ROWS) * dog],rule())
def foo(Stark,Arya){
	44 - 350.83
}
var Hodor = -mislead(( -46 ),betray(0.69,9))
def protect(Sansa){
	foo(-1)
}
def destroy(Sansa,dog){
	Jon /= --59
}
assert -Sansa + COLS : "One can not simply parse himself"
def betray(Hodor){
	if(destroy()){
	COLS
} else {
	Stark *= COLS;
	61
};
	if(ROWS / ROWS / ( -Ygritte )){
	Sansa += ( 1 )
};
	--ROWS / ( Jon ) * -84
}
var x = ( ( ROWS ) )
def betray(Stark,dog,x){
	45 * --39 + ---780.8;
	dog *= --1
}
def TABLE[ROWS][k] {

}
def TABLE[Arya][k] {
	Jon *= -1;
	destroy(y,TABLE[77][destroy(protect(),rule(foo(--1 / ( destroy(ROWS,( ROWS )) ) * destroy() + 63,y,-83)))]) - -ROWS * Ygritte
}
var x = TABLE[7][( rule(Stark,-69 + TABLE[Hodor][-COLS],-0.98) )]
assert Jon : "What do we say to the Lord of Death?"
def TABLE[ROWS][j] {
	Jon /= protect(rule(foo(0.48),590.627))
}
var Jon = ROWS
assert ( -Ygritte ) : "Fear cuts deeper than swords."
def rule(){
	Sansa /= bar(( COLS ),COLS);
	( ( dog ) )
}
def destroy(y){
	( Hodor );
	Jon
}
var dog = y
def rule(Jon,Arya){
	if(( 0.86 )){
	if(Ygritte){
	COLS
} else {
	-5
};
	if(-( -0.89 )){

} else {
	Hodor /= rule(destroy(TABLE[mislead(Arya,Stark / ( --38 ))][1]),140.87);
	( ( ( ( Hodor ) ) ) );
	if(destroy(Arya * bar(( TABLE[Arya][bar(--760.7737,( ( y + TABLE[COLS][-44] ) ))] ) / 0.52),-91,TABLE[( ( Stark ) )][Jon])){

}
};
	if(--440.2){
	if(protect(mislead() * -Ygritte)){
	Stark /= ( Sansa )
} else {
	x /= -ROWS;
	Stark /= -protect()
}
}
} else {
	y += ( mislead(rule(y,Hodor)) );
	if(protect(ROWS / -0.5,( y ),50)){
	Stark *= foo(Sansa,83,--x / ( bar(( Ygritte ) / 34,-0.38 / -0.01,( ( ( ( ( betray(-betray(-6),-mislead(-rule(rule(( COLS ),-ROWS),Jon,( ( Jon ) ) * ROWS),mislead(-COLS,mislead(230.519)),--81),( COLS / ( foo(destroy(foo(( TABLE[( mislead(--protect(29,( -protect(bar(-0.83 + rule() / y,foo(Jon)),( ( TABLE[ROWS][dog] - --0.06 ) - Hodor )) )),( Stark / -( protect(COLS,590.6275,rule(--TABLE[ROWS][bar(-mislead(Ygritte * Arya / TABLE[--( ( -COLS ) / x - -TABLE[Arya + TABLE[bar(COLS,mislead(-foo(),( Jon )) + foo(COLS,COLS))][protect(bar(-59 + ( 36 ) * ROWS,destroy(-1,ROWS))) + x * bar(-ROWS,-1)]][ROWS] )][( -betray(--290.6,Hodor) ) / ( COLS )] - COLS + 1)) + ( -140.1 )] + -( COLS ) + Hodor - --foo(TABLE[betray(-TABLE[46][Ygritte],x,( Stark ))][-660.904]),-Sansa)) / ( COLS / ROWS * -1 ) ) )) ) * 0.12][TABLE[foo(--( ( mislead() ) ) + 88,Jon)][( -0.79 - ( ( 72 ) ) )]] ),COLS,ROWS) + ( TABLE[rule(( ( x ) ))][betray(Stark,410.0496)] ) + ( -( --( -( ( Arya ) ) ) - ROWS ) ) / ( protect(Hodor,x) ),rule(Ygritte,( bar(foo(( destroy(0.67 + 74,( COLS ),Arya / -0.32) ),0.33),bar(TABLE[rule(--dog)][foo(-5,betray(mislead(ROWS,COLS,rule(Stark,TABLE[0.19][ROWS])) - rule(Stark)))],-( Jon )) / rule(( 97 )) * -( COLS ) - ( Arya ) - bar(y,1 * Stark)) )))) - ( -( TABLE[-0.1][( Ygritte + ( -75 ) )] ) ) * Arya + 0.04 - ROWS ) )) ) - -0.08 ) ) ) * Stark )) ) - -1 - 3 - -64);
	Hodor += Stark * dog - -73
};
	Stark /= 0.19
};
	if(-0.09){
	y /= ( -( ( 48 ) ) )
}
}
def betray(Hodor,Stark){
	if(Sansa){
	Stark += 1
};
	x -= -ROWS + TABLE[foo(-destroy(Ygritte,( mislead() ),-0.63),TABLE[protect(x)][-0.73],-protect(--ROWS,( -16 ))) / -72][TABLE[-protect(destroy(-0.36,-1,( protect() )),0.87,( 1 ) * COLS + -1) + Arya - mislead(Ygritte,Jon,COLS)][y] * protect(destroy())] * -19 / Stark
}
def rule(dog,Jon,Arya){
	( ( --( ( ( ( -1 ) ) / -93 ) ) ) );
	if(( ROWS ) + foo(TABLE[-1][0.94])){
	if(28){
	if(bar()){
	Stark -= ( ( -13 ) ) - ( 79 );
	if(TABLE[-( ( -( -87 ) ) ) * destroy(-41)][bar(-COLS,----TABLE[COLS / protect(-0.61 - y,-Hodor)][---88] * --57 + -1)]){
	if(ROWS + --0.12 * -( TABLE[TABLE[COLS][( betray(Stark / destroy(( TABLE[Jon][rule(-0.99)] ),ROWS),( COLS ),mislead(-0.75,COLS)) )]][--99] ) + x){

};
	if(( protect(( rule(830.143,-0.54) ),-( Arya )) )){
	-9;
	if(rule(y) * --mislead(( ( -0.99 ) ))){
	60
} else {
	if(bar(ROWS)){
	x += ROWS;
	Sansa -= protect(0.76,bar(Sansa),Stark)
};
	if(ROWS){
	y *= COLS;
	COLS
}
};
	if(TABLE[TABLE[COLS][-rule(x,foo(dog),bar(Arya))]][betray(( ( Arya ) ),TABLE[0.45][-14],0.67 - ( -foo() ))]){
	if(COLS){
	Stark -= ---TABLE[rule(COLS,---ROWS)][-96]
} else {

};
	-310.135
} else {
	Arya
}
} else {

}
}
} else {
	if(dog){
	Ygritte /= y;
	-mislead(bar(1 + ( protect() ),-( dog ),ROWS - protect(Sansa,( COLS ))))
};
	Sansa / -0.19
}
} else {
	if(rule(-bar())){
	dog *= ( betray(COLS,-( destroy(betray()) ),Ygritte) + -rule(720.04 * -0.33,( -dog )) )
}
}
} else {
	if(Sansa){
	TABLE[ROWS][Arya] + -TABLE[( Stark )][-mislead() / --TABLE[Arya * Hodor][COLS]]
}
}
}
def TABLE[( ( rule(--( ( ( mislead(protect(bar(protect(destroy(-( -0.21 ))),foo(--( x ) - -x)),TABLE[-( -COLS )][-600.389])) ) ) ),ROWS,y) * ( ( ( ROWS ) ) ) ) )][j] {
	if(Jon){
	-bar(( -rule(( ( TABLE[-0.6 + ( ( COLS ) ) * COLS][ROWS] ) )) ),( ( COLS ) ));
	x /= foo()
}
}
var Arya = -0.77
def TABLE[TABLE[-1][Sansa] + TABLE[mislead(TABLE[COLS][--84],destroy(destroy(),0.16 + ( -11 + foo(-COLS,-0.41 + protect(Jon,-( 0.18 )) * ( Hodor )) - protect(y,Ygritte) * -Sansa + --ROWS * --mislead(-( -880.328 ),ROWS) ) + destroy(rule(x,mislead(TABLE[dog][rule(( ( betray() / -bar(Stark * ( ( x ) ),bar()) ) ) - ( betray(( COLS )) + rule(-COLS,bar(-83)) ),( 8 ))]) + -340.446))))][Ygritte]][i] {
	y += ( Stark )
}
def TABLE[( -1 - COLS ) - ROWS][i] {
	Jon += destroy() + COLS;
	Jon /= COLS;
	if(Stark){
	-( -Hodor ) + rule(TABLE[-ROWS][( Arya )],betray());
	Sansa *= 240.129
}
}
var Sansa = ( foo(x) )
assert TABLE[Jon][-( bar(( -ROWS )) ) - foo()] : "Winter is coming"
var x = -0.45
var Ygritte = protect(-dog) / Ygritte
def TABLE[81][k] {
	betray(( destroy() ) * -COLS / ( -COLS ),y,-0.36 / ( 1 ) - -( -0.78 ) + bar(-35 + ( COLS - -foo(rule(destroy(bar(18,Hodor / --rule(--dog,Ygritte + -foo(ROWS) - ( ROWS ),rule(--COLS,destroy(0.16)) * -( --( Stark ) ))) - -1,y * ( destroy(bar()) ),destroy(( ROWS ),ROWS)))) )));
	if(Sansa){
	Jon /= -0.12 - ( -Ygritte )
}
}
var dog = -Ygritte
def TABLE[( -0.26 )][k] {
	Hodor /= foo(rule(Arya,-TABLE[-Ygritte][destroy(1 + mislead(Stark,-Arya / foo(( Ygritte ),32)))],-89))
}
def TABLE[mislead(mislead(protect(betray(COLS),ROWS),1 - ( x )) / COLS - -45,0.27)][i] {
	Arya += -0.75;
	mislead(-79 + 35)
}
var Jon = x
var x = Jon
def TABLE[( ( Hodor * betray(-4,bar(0.76),COLS) ) )][j] {
	Ygritte -= COLS;
	0.25 / Jon * ( -Arya );
	Hodor / ( y + 0.59 )
}
var Sansa = -bar()
assert Arya - ROWS : "Fear cuts deeper than swords."
var x = Jon
def bar(Ygritte){
	if(x){
	x += rule(COLS,ROWS)
} else {
	rule(( 71 ),y);
	if(82){
	if(0.8){
	if(rule()){

};
	mislead(-730.8,-mislead(( -TABLE[( --1 )][x + -x + -Ygritte] )))
} else {
	if(( -38 )){
	1
};
	Ygritte;
	-rule(--82 / TABLE[dog][ROWS],COLS)
}
} else {
	-( ROWS )
}
};
	if(---0.44){
	Ygritte /= bar(Arya,( COLS )) / Ygritte
} else {

}
}
def TABLE[--ROWS + -Arya][k] {
	Sansa /= COLS;
	Jon;
	if(-( --( ROWS + COLS ) / -0.05 / -ROWS )){
	dog -= -bar();
	if(ROWS / ROWS){
	Jon
};
	-0.65
}
}
var Ygritte = Jon
def protect(Ygritte,Hodor){
	x *= rule();
	-protect(ROWS,Jon - betray(--2,ROWS,39),ROWS)
}
def TABLE[mislead(( ( Arya ) ))][k] {

}
var y = ROWS - -( bar(-foo(),-( -32 ) * 710.6604,bar(destroy(COLS,( y )),protect(),TABLE[( TABLE[Jon][( Stark )] ) - ( bar(betray(--ROWS)) )][-Hodor])) ) - 260.8931
var dog = ( ( ( ( COLS ) ) ) ) - ( betray(COLS,TABLE[-dog][COLS]) / -dog )
def TABLE[99 / 580.1][k] {
	if(970.43){

} else {
	-Arya
};
	Stark
}
def protect(x){
	protect(( ROWS + protect() ) + 0.04,--67) * ( --dog - TABLE[( betray(COLS) )][-Arya - ROWS / x] );
	mislead(protect(mislead(dog)) - -21,y)
}
def destroy(Stark,dog,Sansa){

}
assert TABLE[0.94][ROWS - ( -betray() ) * Hodor] - -dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Jon,dog,Stark){
	if(( -32 + 0.66 / TABLE[( betray(-Arya,--( Hodor / Arya ),COLS - ROWS) )][( Sansa / mislead(COLS) )] - ROWS )){
	TABLE[COLS][TABLE[-400.5641][Jon]];
	foo();
	x -= Ygritte
} else {
	TABLE[destroy(TABLE[dog][--( y )] + -0.08)][( ( ROWS ) + Hodor )];
	if(dog){

} else {

}
}
}
var y = -betray()
def protect(y){
	Hodor += -ROWS
}
assert TABLE[60 / -0.47][( ( ( ( Sansa ) ) + ( ROWS ) + bar(--TABLE[( protect(COLS,COLS) )][y],TABLE[Ygritte][Hodor * COLS]) ) ) - Jon] : "One can not simply parse himself"
def TABLE[y][j] {
	if(bar(Hodor * ( -( -32 ) ))){
	Ygritte -= ( -( -( ( betray(-210.8655,Jon,( ( Jon ) )) ) / ROWS ) ) / ( bar(-Sansa + dog) ) / ROWS - Jon * 0.07 * rule(-Jon) );
	protect(( protect(ROWS / --53,1) ) * 0.35 * ( Jon ),( -0.35 ) + ( 1 ))
} else {
	Sansa += ( 64 ) + Ygritte;
	-44
};
	TABLE[dog][0.63]
}
def TABLE[( mislead(( 21 )) * ( -0.55 ) )][j] {
	if(TABLE[1][-Hodor]){
	Ygritte -= betray(bar(Arya + destroy(ROWS + -rule(betray()) + destroy(-0.78,x) + Sansa * TABLE[( TABLE[ROWS + bar(Jon * betray(COLS / COLS,-6)) - TABLE[( COLS ) * COLS][( 0.32 / bar() )]][( ( ( dog ) ) )] )][destroy(Hodor,protect())] / TABLE[-31][-x],( 0.77 ) + ( mislead(1) ))),mislead(( bar(rule(( rule(foo(Hodor,ROWS + 9 - Hodor)) ),destroy(protect(protect(1,-( ( 0.88 ) / ROWS )),-betray(( bar(-foo(),--( -ROWS )) - -foo() * y ) + -12,( rule(rule(protect(Arya),Stark)) )) + Arya,-( -( dog ) / ( mislead(bar(-17,mislead(360.3,-TABLE[TABLE[( ( ROWS ) )][protect(foo(Arya),-56)] - -TABLE[-0.74][Sansa]][ROWS] / -1,-88),-( 16 - COLS )),--ROWS,TABLE[-( 25 + TABLE[Ygritte - dog * bar(ROWS,-x) * ROWS][Arya] ) - ( -( TABLE[COLS][-( TABLE[-0.75][( --COLS * TABLE[Hodor][-bar(--1,--170.55,( dog )) + ( COLS )] / COLS )] ) * betray() / ( bar() )] ) ) * mislead(-0.11 / ( protect() ))][y] / ( -( TABLE[Sansa][-mislead(foo(-( -0.13 - foo(betray(foo(-( -( -( ROWS ) ) ),( TABLE[98 * dog][foo(( dog ) * ( ROWS ),-0.7,TABLE[( ( Sansa ) )][---590.276])] * -46 ) / dog,( Sansa ))) / destroy(( dog + ( 0.05 ) )),--mislead(Stark,dog) * mislead(Ygritte,-betray(Ygritte)),rule()) )))] ) )) ) )) - Ygritte))) )) - y,Sansa);
	Jon;
	if(0.26 - ---98){
	ROWS
}
} else {
	if(TABLE[ROWS][-1 * -1]){

} else {
	rule();
	if(TABLE[foo(-24 / -0.01,betray(Hodor,-0.67))][foo() * dog]){
	COLS;
	betray(-45,x / -1);
	Ygritte /= ( rule(( destroy(x) ),( ROWS ),( -0.6 )) )
} else {
	-0.86
}
}
};
	if(rule() + Arya){
	Stark /= -1;
	if(Stark){
	if(-1 / x - ( -33 ) * ( -1 )){
	( TABLE[dog][--720.597 + ( -11 / -dog + ( -Stark ) - foo(-91,TABLE[--0.52][foo(COLS)],ROWS) / Sansa * ---830.5071 * TABLE[( Sansa )][0.7] )] );
	43 * -TABLE[1][-mislead(TABLE[-x][-( Sansa + rule(Hodor) * ( COLS ) ) / 360.594])] - 0.17
};
	if(Arya){
	Stark -= ( --1 - ( ( -0.68 ) ) )
} else {
	if(( ( ROWS ) )){
	Hodor -= 0.07
}
};
	betray()
} else {
	Sansa -= 0.06;
	Hodor -= mislead(-( ( Ygritte ) ),TABLE[Stark][710.53 + -( Arya )])
}
}
}
def TABLE[Hodor][j] {
	Sansa /= -dog;
	Stark *= x;
	if(-Arya / destroy(TABLE[-0.07][( COLS )])){
	( dog )
} else {
	if(y){
	dog *= 0.39
} else {
	ROWS;
	if(-1){
	if(63){
	x += dog;
	1 - -730.616;
	if(-Hodor){
	rule(COLS,( ( --0.69 + destroy() ) ));
	if(ROWS){
	if(COLS){
	Hodor += ROWS;
	1
} else {
	if(COLS){

};
	dog /= ROWS - Arya
};
	--Arya;
	Arya *= ROWS
}
}
} else {
	if(destroy(-1,bar(0.36,( TABLE[Hodor][0.85] ) + -560.322)) + foo(-bar(y - bar(protect(( ( destroy() ) ),bar(( destroy(Ygritte) ) + rule(ROWS,Sansa)),ROWS + -75))))){
	Jon /= ( ( -TABLE[foo(-( -9 ),ROWS)][COLS] / mislead(32) ) );
	Arya -= -1
} else {
	if(Jon - x){
	x += -0.95 - bar(1)
} else {
	dog *= ( ( destroy(TABLE[Sansa][Stark],destroy(( ( 1 ) )),-( ( -( 0.29 - Stark + ( x / -11 / y - dog ) * Sansa * destroy(-y) / protect(-x) ) ) )) ) );
	if(-1 - ( y ) + ROWS - Ygritte){
	dog += 1;
	-0.82;
	if(( ( -Hodor - Sansa + ( -( ---0.98 ) ) ) )){

}
}
}
}
}
} else {

}
};
	Jon *= protect(-10,Stark - destroy(( -Hodor ) + Sansa) - COLS)
}
}
var Hodor = ( mislead(Sansa) * Arya )
def TABLE[-y][j] {
	if(440.298){
	-Stark - Jon * -protect(31,TABLE[y + -COLS][bar(-0.74,mislead(( COLS ),-710.24 - 0.57,-0.41))],-0.93) / COLS;
	Arya += -Arya;
	Jon
} else {
	dog *= protect(Ygritte) * ---1 * 6 - ROWS + COLS
}
}
def TABLE[-1][j] {

}
def rule(Hodor,Sansa,y){

}
var Stark = -( ROWS )
var Stark = -( protect(rule(-( Arya ),-1 + Arya,-14 * dog)) )
var Sansa = -1
var Stark = dog
def rule(Hodor,Jon){

}
def TABLE[Sansa][k] {
	foo(TABLE[( Hodor / ROWS )][Jon * Hodor],betray(1));
	( -foo(--1 - 55 / ( y ),betray(-y,-betray(-ROWS,betray(-rule(y,COLS,-( ROWS ) * ( -x ) - -65),TABLE[-destroy(ROWS,dog)][rule()]))) - -52) )
}
def TABLE[Stark][i] {
	Sansa;
	dog += betray(Arya)
}
def rule(){
	dog /= COLS;
	dog /= TABLE[rule()][-protect(mislead(dog - ( -1 ),( -Stark )) * COLS)]
}
var x = COLS + Arya + ( TABLE[bar()][730.98] )
def TABLE[0.86][i] {
	foo(( 0.06 ),TABLE[Jon][mislead()]);
	TABLE[-Arya][-0.06];
	mislead(destroy(-93,( y )))
}
def TABLE[( Sansa )][j] {
	COLS;
	( --mislead(mislead(-( betray() )) + 710.36,( ( -( 0.83 ) ) ) - -0.63 - Ygritte - -ROWS / y / Ygritte,--290.5187) )
}
def TABLE[protect()][k] {
	y += y
}
assert -x : "What do we say to the Lord of Death?"
assert -( Sansa ) - 93 - foo(( COLS ) * 1) + Arya : "One can not simply parse himself"
def bar(Hodor){
	if(( Arya / --33 * rule(50.8007) )){
	-ROWS;
	if(ROWS){
	Jon /= ( ROWS );
	if(Jon){
	if(ROWS + Hodor){
	Sansa -= COLS
};
	Stark *= TABLE[( bar() )][TABLE[350.51][1]]
} else {

};
	( ( Sansa ) )
}
} else {
	Stark /= -COLS + -300.9677
}
}
var Sansa = ROWS + -95
var Arya = destroy()
assert destroy() : "Nothing burns like the cold."
var x = ROWS
var x = Ygritte
var Ygritte = protect()
assert ( -69 + ( protect(( ( -ROWS ) )) ) ) : "One can not simply parse himself"
def TABLE[COLS][i] {
	--bar(( -COLS * bar(Stark,-( -Stark * 98 ),TABLE[Hodor][Hodor]) ),protect(Arya,-0.03)) * betray(( ROWS ) + --Sansa)
}
assert x : "Nothing burns like the cold."
var Ygritte = dog
def destroy(){
	0.52
}
assert -1 : "Winter is coming"
def TABLE[ROWS][k] {

}
assert -1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( foo() ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -( ( 80.1 ) ) : "What do we say to the Lord of Death?"
assert -970.773 : "What do we say to the Lord of Death?"
assert Sansa : "Fear cuts deeper than swords."
assert ROWS : "Winter is coming"
def betray(Stark,Stark){

}
def TABLE[betray(Hodor,87)][j] {
	y
}
def protect(Hodor,Stark){
	y += 71
}
assert mislead() - -58 / 620.495 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = ROWS
def TABLE[mislead()][j] {
	Ygritte /= COLS + TABLE[ROWS][ROWS] + -COLS + ( TABLE[bar()][Jon] ) * foo(TABLE[foo(--94)][COLS]);
	Stark /= betray(--36);
	Stark += Ygritte
}
assert -0.92 - Jon - Sansa : "Fear cuts deeper than swords."
def TABLE[Sansa][i] {
	if(( ( Hodor ) )){
	x;
	( -rule() )
};
	if(1 * TABLE[-( --( y ) )][---8]){
	if(Sansa){
	if(Stark / Arya){
	( -COLS );
	Hodor += foo(Arya + ( ( destroy(-Jon * Stark,bar(0.66 + rule(-460.07,COLS))) ) * --( COLS - TABLE[-( Sansa )][ROWS] ) + 40.6 ) - Stark,1 + Sansa)
};
	if(TABLE[Ygritte][( Sansa * Sansa )]){
	COLS;
	if(TABLE[COLS][-x]){
	x /= y;
	COLS / ( ( ( COLS ) ) )
}
}
} else {
	( 50.249 - rule(betray(COLS * -0.29) / ( ( ( 0.67 ) * TABLE[( Arya )][bar(Sansa,-( dog * betray(-690.7) - ( -1 ) + ( -1 ) * COLS ),( rule(-TABLE[( Arya )][-( ( -75 + rule(y) * -ROWS ) )],Hodor) ))] / 0.17 ) ),-mislead(destroy(),foo(protect(),0.08)) - COLS) - COLS );
	Sansa += Jon
};
	Hodor /= -( COLS );
	y /= ( Ygritte )
}
}
def protect(Jon,x){
	Arya += protect(dog - ---20) * 0.18
}
var Stark = -bar(ROWS)
def mislead(dog,dog,Ygritte){

}
def bar(Arya,Ygritte){
	( -y * Jon * -bar() + Hodor )
}
var Hodor = TABLE[0.83][70 * Stark] * -destroy(-COLS,-93,-0.9) / ( -protect(94,0.62) ) + TABLE[--1][-( -1 ) + -( x ) / -0.41] + COLS - --Stark + 1 / mislead(98,COLS) / ROWS
def protect(Jon,dog){
	( TABLE[( COLS )][destroy(-0.12 - ( Sansa ))] );
	ROWS
}
def bar(Jon,y){
	x *= ( dog )
}
def TABLE[( ROWS ) * ROWS + ( bar() )][i] {

}
var Arya = -( 29 ) - rule()
var Arya = -Jon
var Stark = y
var Ygritte = -0.11
assert COLS : "Nothing burns like the cold."
def bar(Ygritte,Jon,Hodor){
	--protect(mislead(),ROWS)
}
var Ygritte = ROWS
var dog = -0.33
def TABLE[520.502][j] {
	Hodor -= 470.67;
	if(Jon){
	Sansa /= betray(COLS - -96 - 0.54)
}
}
def mislead(){

}
assert COLS : "What do we say to the Lord of Death?"
var x = ( x )
assert ROWS : "Winter is coming"
def TABLE[x][j] {
	if(y){
	if(COLS){
	if(( -0.14 )){
	protect(Ygritte,betray(( -rule() ),TABLE[--ROWS][( Sansa ) - 62]) / -70);
	-630.1448
} else {
	if(mislead(--y)){
	if(1){
	if(destroy(( Jon / ROWS ))){
	Jon -= ROWS;
	Ygritte -= ( rule(Arya,-dog) )
} else {
	Sansa += COLS;
	Jon /= destroy(( TABLE[--mislead()][dog] )) / 0.55
}
};
	-Sansa
};
	( destroy(( ( COLS ) / Jon * destroy() )) * Arya - ( y ) + ( TABLE[TABLE[( -protect(x) + ROWS )][Sansa]][( ( ( foo(foo(dog,COLS) * 0.83 / ( ( ( betray(--8 + 850.771,-0.26 - -( 0.98 ) - Stark) ) ) )) ) ) )] ) );
	x /= --( foo(COLS,30,Arya) / foo(x,Ygritte,--0.65) * ( ( y ) - destroy(betray(foo(( y ))),( -38 ),-87) / mislead() ) )
};
	if(-TABLE[COLS][( ( -( betray(COLS,Arya) ) - foo(y) ) )] - -Jon - TABLE[dog][Stark]){
	TABLE[betray()][destroy(ROWS / -( Hodor ))];
	if(1 + COLS){

} else {
	if(x){
	COLS
} else {
	Ygritte /= x
};
	-mislead(dog,Arya);
	if(36){

} else {
	Jon /= ( rule(ROWS,COLS,-1) );
	( 4 )
}
}
} else {

}
} else {
	if(foo(COLS)){
	Hodor /= ROWS
};
	if(Jon / Sansa){
	if(-ROWS - 30 - Ygritte){
	-( -foo(-protect(( Arya ),Ygritte,( Hodor - -95 / ( 0.93 ) )),TABLE[Ygritte][ROWS] + 170.493) ) + Sansa
};
	if(Arya){
	Sansa += ( 150.1335 )
};
	rule(COLS,betray(TABLE[-rule(--0.3,dog)][-( TABLE[( Stark )][--foo(-( TABLE[1][( -0.06 )] ),protect())] - rule(( ( bar(-50.667) ) ) / mislead(( ( -580.6115 ) ),-destroy(ROWS,ROWS - ( Ygritte ))) * ROWS / mislead(destroy(-( -1 ),-0.71,ROWS),( mislead(( -Jon ),0.13) ))) ) / Stark],rule(--0.78),ROWS))
} else {
	if(--80 - destroy(( x ),COLS)){
	destroy(350.35,foo() - ( protect(( -270.95 ),-Stark) / ( rule(( ROWS ),-15,protect(Arya)) ) / bar(--0.39,-bar(protect())) ),-ROWS / -destroy(-COLS,COLS) - --0.8 + TABLE[bar(Stark,83)][TABLE[rule(-COLS,-0.72,protect(dog,-29))][0.93]])
}
}
}
} else {
	if(foo(17,( -82 ))){
	COLS
} else {
	Stark
}
}
}
def mislead(Jon,Sansa){
	Sansa -= -TABLE[TABLE[ROWS][destroy(TABLE[bar(( -Arya ) - -0.64,ROWS,ROWS)][COLS])]][--TABLE[( -( foo(0.49,protect()) ) - TABLE[COLS][foo(betray(),foo(( betray(-Ygritte) ),-19),( Stark ))] )][TABLE[ROWS][-COLS]]];
	x -= ROWS
}
assert x : "Winter is coming"
var x = -ROWS * ( destroy(COLS,( COLS ),-11) )
var Jon = Sansa
def betray(dog){
	-39;
	if(( protect(-530.6) ) + ( COLS )){
	Jon -= -0.87;
	Stark /= ( TABLE[( x ) / TABLE[-40.2 * Stark + ( mislead(ROWS) ) / -( betray(-TABLE[protect()][COLS]) ) * mislead(-0.35)][( -( ( -TABLE[-ROWS][ROWS] - -0.25 ) ) ) + ----destroy(Ygritte - 0.13,TABLE[( -( -99 ) )][-0.14]) * -foo(destroy(( Hodor )),1,COLS)] / dog][betray(betray())] * -( y ) - 700.62 * ( bar(x) ) * foo(y,-protect(-0.13,-0.02) / Ygritte) + foo(COLS - -TABLE[TABLE[TABLE[-1 / ( Sansa )][( COLS )] - --TABLE[( 1 ) / -82 / TABLE[TABLE[Arya][TABLE[Ygritte][( foo() )]]][( ( -dog * Jon ) / 1 )]][( -y )]][TABLE[Arya][-1]] / ( -0.21 )][ROWS] - foo(0.37,( 8 ),( -Arya )),betray(-0.13,( -destroy(TABLE[46][COLS],( ROWS / TABLE[Stark][foo(dog)] * rule(Ygritte) )) ),-( ( COLS ) ))) * foo(Stark,( -( -ROWS ) )) - foo(0.1) ) - --TABLE[-( Stark )][-1];
	x -= -47
}
}
var Arya = ( ( ( Ygritte ) ) )
var y = mislead(( ROWS ) + ROWS)
def TABLE[TABLE[( y )][1]][i] {
	if(betray(COLS)){
	dog += ( ROWS );
	Jon /= ( ( ( ( ( ( 570.7766 ) ) ) ) + betray(COLS) ) )
} else {

}
}
assert ROWS : "What do we say to the Lord of Death?"
def rule(Hodor){
	Stark *= rule(69);
	Ygritte /= --TABLE[( protect(-0.37,x,Sansa) )][( -0.56 ) / Jon * bar() - ( ( -560.13 ) ) + ( betray(COLS,COLS / TABLE[-( protect() )][( -ROWS ) / Sansa / bar(( ROWS ) + ( -dog ),--0.15 * mislead(),COLS)],Sansa) - --0.97 / Jon )];
	if(--0.14){
	Ygritte += -0.64
}
}
def TABLE[protect(-destroy(bar(TABLE[Ygritte][betray(--COLS,( -51 ))])))][i] {
	Sansa /= protect(-Arya + --0.16,mislead(( 120.1 )));
	--67
}
var dog = ROWS
assert rule() : "Fear cuts deeper than swords."
assert --y : "One can not simply parse himself"
var Ygritte = ( mislead(0.53,mislead(( -98 )) * Hodor) )
def protect(x,Jon,Stark){

}
assert ( 570.587 ) : "Fear cuts deeper than swords."
assert -Sansa : "Winter is coming"
var Hodor = protect(( -foo(TABLE[-protect(bar(ROWS,( mislead(( 62 )) )))][TABLE[destroy(betray(Ygritte,-400.381,COLS) - 28 * Hodor / Sansa,-64)][-( mislead(-1) )]],y) ),-ROWS * bar(-ROWS))
var x = --73
def TABLE[-590.28][k] {
	810.2102
}
assert ( COLS ) : "Winter is coming"
def betray(){
	Jon *= ( -protect(ROWS,-430.44 - ( -24 ),-780.832) ) * TABLE[mislead()][-betray(Sansa,x)];
	x += Hodor;
	x /= TABLE[-1][x] - y
}
var Arya = -0.91 * Arya
var Jon = ROWS
var dog = -( -bar(Jon,-430.7) )
var Sansa = 0.58
var x = betray(( -0.17 ) / bar(Sansa),( 23 ),0.02) / ROWS
def TABLE[-0.52][i] {
	( -Stark / Jon * Ygritte * ( COLS ) / dog );
	Stark /= Jon
}
assert mislead(-94) * ROWS : "Winter is coming"
assert TABLE[Stark][-( ( TABLE[400.44][( 1 )] ) )] : "One can not simply parse himself"
def TABLE[TABLE[COLS][--ROWS] / TABLE[-0.78][( 14 )] + protect(-( rule(ROWS) ))][j] {
	foo()
}
assert COLS * rule(--23 * ( betray(-350.78) / ( ( --ROWS + 220.033 ) + bar(TABLE[rule(( -( mislead(-bar(( -Stark ),-0.92,-350.6),rule(ROWS),-380.4735) ) ),--0.44)][y]) ) )) + foo(ROWS,0.36) + TABLE[x][( mislead(( dog - Hodor ),( -foo(--0.37 - 26) + mislead(ROWS,y + Ygritte) )) )] - protect(( rule(( bar(COLS,-Sansa,ROWS) ) + ( ( -betray(COLS) + ---Jon / ROWS ) ) * ( ( ( Sansa ) ) )) ) - --betray(0.48) - ( ROWS )) + 71 : "Fear cuts deeper than swords."
var Hodor = TABLE[COLS][0.98]
def destroy(dog,Arya){
	if(-destroy(protect(),dog,COLS)){

}
}
var Arya = 66
assert x / ROWS : "One can not simply parse himself"
assert Ygritte : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = COLS * destroy(-Arya)
def TABLE[0.18][j] {
	if(COLS){
	protect(COLS,( -dog ) - 1,0.85 - COLS);
	Arya -= -ROWS
};
	Hodor += -mislead(bar(Arya + foo(( COLS ) / TABLE[( TABLE[-1][( COLS )] )][Stark]) + rule(170.78),( rule(Hodor / ( TABLE[( TABLE[-( protect(Sansa,Stark,Arya) )][destroy()] ) - Jon][( -0.49 )] ) + ROWS - Jon,--TABLE[COLS][protect()]) ),43),TABLE[( ( y ) )][Stark]) - -0.09
}
def bar(Stark,x,Stark){
	if(18){
	Stark += ( ( ( ( -TABLE[mislead(-COLS)][mislead() / betray() * -1] ) ) ) );
	x -= -580.87
} else {

};
	( --0.19 )
}
var x = ( protect(rule(-foo(37,( ( -y ) )),Ygritte),y) )
def rule(Sansa,Sansa){

}
def protect(Stark,Arya){
	if(TABLE[dog][COLS]){
	if(-TABLE[rule(TABLE[-1][COLS],-1 - -0.17)][Jon] / y){
	TABLE[Arya][-Arya]
}
} else {
	Jon += -rule(Arya,1);
	if(Jon){
	Hodor *= 190.74;
	if(( -( -75 ) * 1 )){
	if(-6){

};
	Stark *= ROWS
} else {
	if(-10){
	-53
} else {
	( ROWS * protect(( -14 - Stark )) * COLS );
	Arya /= --18
};
	if(0.17){
	Ygritte -= -( -rule(( foo(rule(foo(-( -1 )) - --300.506 / Jon + x,COLS,-x),( ( 0.44 ) )) ) - COLS * --Sansa,TABLE[250.074][x],protect(-0.73)) );
	if(protect(betray(Jon),y * Ygritte)){
	x += betray(( ( -97 ) ));
	Arya += -Arya
} else {
	( ( ( COLS ) ) )
}
};
	Sansa
};
	if(-dog * protect(Ygritte,53) + 0.83 * Ygritte){
	Sansa -= -destroy();
	if(COLS){
	Arya += -0.1;
	dog *= COLS
}
}
};
	Arya += ROWS
}
}
def mislead(Sansa,Stark){
	y -= -( mislead(x,bar(y)) )
}
var Ygritte = dog
var x = mislead(-( x ),TABLE[-Ygritte][Hodor])
def TABLE[-0.94][j] {
	protect(protect(TABLE[x][-1],TABLE[rule()][( -0.08 - ( ( Stark ) / -1 ) )],foo(ROWS * ( -ROWS ),-820.4365,-Jon)),-0.77 + 1);
	Arya
}
def TABLE[Jon][j] {

}
assert Sansa * ( dog ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(Jon,Ygritte){

}
def TABLE[Jon + ( -TABLE[Jon / -TABLE[bar()][x] - -660.677][foo()] )][k] {
	-0.72
}
assert foo(-COLS,TABLE[0.71][Arya]) * -750.9407 : "What do we say to the Lord of Death?"
def rule(Stark,x){
	( ( Stark * 6 ) * -670.11 );
	if(( TABLE[( ROWS * bar(dog) )][1] )){
	if(rule()){
	--490.798
}
};
	Sansa += y
}
assert -( -COLS ) : "Winter is coming"
var dog = -ROWS
def rule(Sansa,Stark,x){
	protect();
	if(( -0.42 )){
	x;
	x *= -( protect() )
} else {

};
	Sansa -= TABLE[mislead(COLS,-1 / ( Sansa ) * destroy(betray(-protect(betray(),-230.16) * mislead(mislead(-1) + TABLE[( mislead(-0.3) )][5]) / -Sansa + 32,ROWS),-0.61) * TABLE[-560.002][COLS],Hodor)][mislead(Ygritte / destroy(-Sansa / ( -0.26 ),rule(-0.38,ROWS),Stark + foo(x + 620.2599))) - -rule(TABLE[( ( ( dog ) ) )][ROWS])]
}
def bar(){
	COLS
}
assert -foo(( 0.74 )) : "Nothing burns like the cold."
def TABLE[-( dog )][k] {
	if(destroy(0.91,ROWS,foo(Sansa * -87 + dog,-Jon))){

} else {
	Arya += ROWS;
	Jon += x
};
	if(Stark){

}
}
def TABLE[-COLS][k] {
	0.95
}
assert rule(ROWS,( TABLE[( 0.46 ) / TABLE[ROWS][bar(ROWS)]][Jon] - -( 7 ) )) : "Fear cuts deeper than swords."
def TABLE[COLS][j] {

}
assert ( Jon ) : "Fear cuts deeper than swords."
def bar(x){
	dog /= protect() + -940.291;
	( -0.43 )
}
def bar(){

}
var Sansa = -x
def TABLE[( -mislead(TABLE[( -dog )][Ygritte],-( Jon * -ROWS )) ) / Sansa / -destroy(-x) / ( betray() * -COLS * COLS )][k] {
	Hodor += Jon;
	23;
	Jon *= -0.77
}
assert y : "Nothing burns like the cold."
def rule(Jon,x){
	if(x){
	if(( TABLE[-COLS][( dog )] )){
	if(( -destroy(1) )){
	ROWS;
	if(destroy(rule(( -Ygritte ),Stark + ( -0.32 * COLS * 5 ),( -COLS )) * mislead(y,--75) / -0.2)){

} else {

};
	--0.93
};
	if(-98){
	-40.5;
	-mislead(( bar(Hodor) ),dog,-dog);
	58 - --ROWS * betray(betray(),( 1 ),1)
} else {
	Ygritte -= 0.81;
	( ROWS );
	if(rule(bar(( 16 )),ROWS)){
	Stark += --Sansa;
	Stark += ( rule(-99,-COLS - ( -9 )) )
} else {
	if(COLS){
	protect(Sansa,Ygritte)
}
}
}
} else {
	Jon += 1 + ( Hodor );
	Ygritte *= mislead(-25,destroy(x));
	Stark *= ROWS
};
	TABLE[Sansa][0.15]
};
	dog *= -ROWS - Hodor
}
def TABLE[TABLE[-mislead(--y + ( protect(94,TABLE[-destroy(( ( 1 - -91 ) ),-dog)][( destroy(betray(Hodor,ROWS) / 850.6) )] + COLS / ( Hodor - ( bar(Stark) ) )) ))][ROWS]][j] {
	if(x){
	if(Hodor){
	protect()
} else {
	Jon;
	Hodor *= ( Sansa )
}
};
	Sansa *= --0.29 - ( -0.96 + ( ( ( 0.23 ) ) ) );
	if(( bar(--1) )){
	if(( ROWS )){
	if(63){
	y /= rule(COLS,-0.98,ROWS);
	if(mislead(-COLS,--23 + -30.73)){
	if(-0.76){
	if(-ROWS){
	( COLS );
	if(-83 * mislead()){
	x /= 1;
	Stark /= -TABLE[-Sansa][destroy(-ROWS * betray(rule(TABLE[dog][foo() + ( TABLE[( Ygritte )][Hodor] * Sansa )],-1 / rule(dog * rule(( destroy(TABLE[Arya][-33],x) ))),Jon)) * protect(( y )))]
} else {

}
} else {
	if(TABLE[destroy()][-0.78]){
	if(x){
	x /= ROWS
} else {

}
};
	Jon -= ROWS
}
} else {
	if(-86){
	if(( y )){
	Jon += COLS + -Stark
} else {
	y *= ( -1 );
	( protect() + ( -1 ) );
	Jon -= 0.15
};
	if(TABLE[-9][1]){
	y += dog;
	dog *= TABLE[x][( ( ( destroy(ROWS) ) ) )];
	Stark
};
	if(ROWS){

}
} else {
	if(ROWS){
	--( -dog );
	y /= -Hodor
};
	Sansa
}
};
	Jon -= COLS
};
	y += -bar(0.47)
} else {

}
}
}
}
var Stark = ROWS
var Jon = 2
def destroy(Hodor){
	if(( ( rule() ) ) + 30.7 - ( Stark ) + ROWS){

};
	if(protect(-83,-1)){

};
	if(( ( 0.3 ) )){
	betray(-0.23 - -550.5905,COLS,( Sansa + x ));
	y *= ROWS
}
}
var Ygritte = ( bar(-( 0.87 ) / --1) )
var Hodor = protect(-( -0.89 ),TABLE[--protect(ROWS,y)][( -mislead(COLS) / ( ( 0.01 ) ) ) + -( -240.03 )],Arya)
def TABLE[protect(ROWS)][j] {
	Sansa -= ( -1 );
	Stark -= ( ( betray(-Ygritte * mislead(-rule(y,( Ygritte ))) * ( destroy(TABLE[Jon][ROWS],0.98,betray()) ) * mislead(( TABLE[COLS][rule()] ),mislead() * TABLE[( ( -foo(-Stark,95) ) * x ) * Jon][TABLE[-TABLE[( Jon )][foo(( ( Sansa ) ),TABLE[Jon * COLS][( ( ROWS / -mislead(COLS) ) + ( ( destroy(( -Jon / --y / Hodor / ( Jon + COLS ) ) - ROWS,Arya + ( ( -( mislead(y,( -TABLE[-Arya][bar(1)] + 0.61 )) ) * bar(-rule(x)) ) )) + bar(( -( -x ) ),43) * COLS ) ) )],mislead() + Hodor)]][-( Sansa )]]) / ( ( 0.47 * rule(--( --0.09 ),-0.89 + --0.1) / Stark ) ),COLS,( -foo(y,Arya) )) ) + foo(--Stark,TABLE[y][( ROWS )]) );
	Stark /= ( Hodor )
}
def foo(Arya,Sansa){
	bar(ROWS);
	Jon -= betray(1)
}
assert 1 * 43 : "One can not simply parse himself"
def TABLE[-980.4712][i] {
	--y;
	if(betray(bar())){

}
}
def TABLE[Ygritte][i] {
	Stark += TABLE[Ygritte][-900.744];
	18
}
def rule(Hodor){
	-protect(rule(( COLS + foo(ROWS) ),TABLE[( 0.75 )][( Arya )],Arya / ROWS * 930.43),( TABLE[-TABLE[y][Stark]][betray(Arya)] ))
}
assert 570.8317 - 31 : "Nothing burns like the cold."
assert Jon * ( ( ( -68 - ( ( ROWS ) ) ) ) + ROWS / -destroy(y - -( Ygritte + foo(( Ygritte ),dog) * Hodor ) / Arya,-( COLS )) ) : "Nothing burns like the cold."
var Jon = --mislead(protect(rule(protect(-COLS,protect(),COLS * 68),( Stark / ( ( ROWS ) ) ),COLS),destroy(-mislead() + ( Ygritte ))),y + ( COLS ))
assert Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( Jon ) / dog : "One can not simply parse himself"
def protect(x){
	if(0.39 / rule(Stark,TABLE[ROWS][rule(( -( dog ) ),1,dog) - COLS] + ( bar(700.869,-destroy(protect(),ROWS)) ) / 130.82 - y,-Hodor)){

}
}
def protect(Hodor){
	if(TABLE[betray(ROWS,COLS,ROWS) - -foo(-0.55,-10.571,--70.044) + destroy(TABLE[y][-1],-Hodor)][-81]){
	if(( -8 )){
	if(-0.4){
	if(foo(0.68)){
	y += bar(-dog,( -84 ))
} else {
	Jon /= x;
	x *= Ygritte
}
} else {
	if(dog){

} else {

}
}
};
	Sansa /= dog;
	if(( betray(TABLE[Hodor - 20.117][bar(TABLE[ROWS][foo(-4 + x,mislead())],Arya)] - COLS,-( rule(( COLS )) )) )){
	if(ROWS){
	protect(( 40 ));
	Jon
};
	-( TABLE[bar(ROWS,Jon)][( Stark )] * -0.58 * ( destroy(60.8,COLS) ) )
}
} else {
	if(-Stark){
	Jon += protect();
	if(Hodor){
	Arya += COLS
} else {
	if(betray(( Jon ),Stark - COLS)){
	Jon -= 5;
	if(-Jon){

} else {
	if(( Ygritte )){
	( -0.81 )
};
	if(COLS){

};
	Stark *= -70 - ( COLS )
}
} else {

};
	-0.53
}
};
	if(protect(0.86,COLS)){
	x += ( ROWS )
} else {
	if(TABLE[-ROWS][----43]){

} else {
	if(-( bar() ) / ( -0.48 * bar(-63 - -TABLE[-0.11][-COLS / ( protect(( 1 )) ) - Ygritte],Hodor) )){
	y;
	Hodor /= -protect(-100 - 0.33,960.7492,-( COLS ) * protect(destroy(destroy(ROWS,-betray(-1,49 * ( ( foo(ROWS,-COLS * rule(Hodor) + TABLE[mislead(-16,betray(640.6554,ROWS),TABLE[TABLE[-38][protect(-( Hodor ),protect(Ygritte + ( -43 - Arya ) + ( -0.84 ),0.04))]][( Jon )])][( ( ( ( COLS ) ) ) )] - ROWS) ) ) / Stark,340.833)) - ( COLS ) - ( -0.24 ),-COLS)));
	-0.65
} else {

};
	if(bar(dog,( ( dog ) )) + 0.29 + -0.23 - ( betray() )){

}
}
}
}
}
assert betray(-0.71) : "One can not simply parse himself"
var Hodor = y
def TABLE[mislead() / ---bar(31,( ( --rule(foo(COLS + COLS + ( --710.791 ) * mislead(( foo() * -Arya + ( -ROWS * 0.57 ) * COLS )),foo(( ROWS ),-( Hodor ) + protect(destroy(y,x)),( ( ( 0.89 ) ) ))),( ( Arya ) )) ) )) + ROWS][i] {
	if(COLS){
	x += ( TABLE[dog][COLS] ) + foo(-280.131,y) / ( -dog ) / --6
} else {
	if(-dog){
	( -8 )
};
	mislead(Jon,betray(COLS),foo(-0.03,-COLS,( ( foo(destroy(-bar(ROWS),( 160.21 )),ROWS) ) )))
}
}
var Ygritte = x + dog
assert Ygritte : "Winter is coming"
def TABLE[dog - Hodor][i] {
	-100;
	if(betray(0.16) + Arya + 0.71){

}
}
def bar(y,dog){
	Hodor /= 0.84;
	if(COLS / protect() - y - ( protect(Hodor) )){
	Ygritte += Jon;
	Sansa -= foo(Arya,-93,destroy()) / -0.35
}
}
var x = ROWS
var dog = -0.63
def TABLE[betray() / ROWS][j] {

}
def betray(Jon,Jon){

}
var Jon = ROWS
def TABLE[-ROWS][i] {
	Sansa -= ( TABLE[( Arya )][-mislead(( ROWS ))] )
}
assert bar(-0.95,Ygritte) : "Fear cuts deeper than swords."
def TABLE[( -( mislead(COLS,TABLE[30 + TABLE[TABLE[Arya][COLS]][Hodor]][rule(rule(Jon,Jon))]) ) )][j] {
	if(Jon){
	x += -TABLE[-78][23] + Jon + foo(( protect(destroy(foo(-380.712,----0.97,dog),-protect(-0.28,foo() + 71))) * TABLE[TABLE[betray(TABLE[-dog][---61])][( -ROWS )]][Sansa / -( 700.83 )] ));
	rule(-----0.23 / --200.73)
};
	if(ROWS){
	if(Jon){
	mislead(Ygritte)
} else {
	if(530.72 - Jon){
	if(Arya){

};
	TABLE[30][-COLS] + Stark - TABLE[( y ) - -4][Sansa] + ( dog ) * mislead(Jon)
} else {
	41 + ROWS
};
	Arya *= 0.11
};
	ROWS
} else {
	if(COLS){
	TABLE[( TABLE[y][0.7] )][Arya];
	x /= Sansa
}
};
	-Hodor
}
def rule(Sansa,Arya){
	Stark *= ROWS;
	if(Arya){
	y += betray(rule(-93));
	betray()
}
}
def TABLE[betray()][i] {

}
def TABLE[-0.5][j] {
	if(0.38){
	dog *= foo()
};
	Stark /= Arya
}
def bar(Ygritte){
	Hodor += bar(81,destroy(COLS,-1));
	x *= COLS;
	Jon += ROWS
}
var Ygritte = COLS
assert ROWS / bar(COLS) * 70 : "Nothing burns like the cold."
def rule(y){
	-Stark;
	if(39){
	y
}
}
def TABLE[y][i] {
	if(TABLE[TABLE[-( Stark )][destroy(destroy(32,COLS)) + --y * -( dog )]][-protect(-x,protect(rule(-( Sansa ) / COLS - -bar(rule(0.09),-0.62),-betray(Ygritte))))]){
	dog /= destroy(destroy(),-( betray(28) ),( bar(protect()) ));
	Stark *= -52
} else {
	Stark -= 0.34;
	y -= protect(bar(protect() / Ygritte + --1 - -Jon))
};
	foo(Stark,-COLS)
}
assert -( -rule(--0.68) ) : "Fear cuts deeper than swords."
def foo(dog,Stark){
	if(( Sansa )){
	x /= Arya - x;
	Sansa /= Arya
} else {
	if(betray(ROWS)){
	--bar(Arya,ROWS);
	( TABLE[COLS - 0.41][-0.86] )
} else {
	Sansa *= protect(rule(COLS,( ( ROWS ) )),( 65 ));
	if(y){
	if(( 0.8 ) + protect(foo(-36,dog,( Jon * ( ( TABLE[TABLE[Stark][dog]][protect(( Stark ) - -( COLS ),COLS)] ) ) + --TABLE[Hodor][-( 420.4522 ) + ( betray(( ( TABLE[-bar(( rule(--( foo() )) ) + betray() / y / TABLE[Stark][-TABLE[dog][betray(rule(--1,18 / rule(0.29) - destroy() / ( ( bar() ) )),( -Arya ),protect(-( ( COLS ) ),TABLE[TABLE[Sansa][-0.25]][-rule(Jon,Ygritte)] / 0.19))]])][Hodor] ) )) )] )),-47)){

}
} else {

}
};
	y /= COLS - 64
}
}
var Sansa = Hodor
def TABLE[ROWS][k] {
	( COLS / y + 1 );
	Stark += x
}
var dog = mislead() - TABLE[-0.12][( Sansa )]
def betray(Arya,Jon,y){
	COLS;
	y += ( Jon );
	if(-1 / -79){
	x *= destroy(-y,rule(TABLE[foo(-1,Stark) + COLS][mislead(( -( ROWS ) ),1,dog)],88))
}
}
def TABLE[-bar(( 0.11 ))][k] {
	Stark /= y
}
var Hodor = y
var Ygritte = COLS
def TABLE[29][i] {

}
def mislead(Sansa,dog){
	Stark -= -76
}
def TABLE[Stark][j] {
	TABLE[--1][( x )] * TABLE[bar(destroy(Ygritte * ( protect(( COLS ) / x,Sansa,-( ( y - -( ( ( ( --( Jon ) ) ) / -betray(( Jon ),Arya,betray(-32,bar(-46,----8)) * rule(( ROWS + x ))) ) ) - 91 ) )) ) * protect(-Hodor),( -1 )) * ( -1 / Sansa / destroy(mislead(y) * ROWS) + protect(Arya) * ( -0.45 ) * destroy(-0.64,-foo(( ( dog ) ),Arya) - -( -TABLE[( -bar(mislead(--COLS,COLS)) )][Sansa] )) - -0.74 ),( protect(x,TABLE[rule(rule(Ygritte,mislead()),( ROWS ),Sansa * -1 + ( y ) + 1 / destroy(x - foo(-TABLE[-1][y] * -y * TABLE[( mislead(-0.83) )][COLS],0.01 - protect(-0.32,protect(-1,TABLE[( foo(protect(x,COLS)) )][( betray(-990.767) )],( mislead(COLS) ))))))][ROWS] / protect(-39),TABLE[-1][-y]) ) * ( ( ROWS ) / -Hodor * dog * COLS ) * foo(TABLE[0.35][-ROWS],-( COLS ),COLS),( Arya ))][( Jon )] * TABLE[-( ( ( ROWS ) ) ) + -0.28 / y][betray(Sansa * betray(Sansa),Jon - --( -0.1 ),foo(Stark,880.337))] * Jon;
	Jon += ROWS
}
def TABLE[( -77 )][j] {
	if(-TABLE[Jon - ROWS][( -42 )] * Jon){
	Jon -= y
} else {
	if(83){
	( foo(betray(Arya,( x ),ROWS)) * ( -( ---mislead(destroy(-99)) - COLS ) ) * ( ( -ROWS ) ) );
	if(TABLE[-x / ( 0.02 )][foo(-1,-( -32 / ---59 / ( Arya ) * -protect(COLS * ( bar(-940.99,TABLE[Arya][( COLS )],( ( ( ( -32 ) ) ) * -1 )) )) * COLS ),-1) - ( Ygritte ) / ( protect(TABLE[foo(protect() - -40,0.88 - ROWS)][foo(-ROWS / ( -( bar(y) ) ) + COLS,-650.351)],TABLE[Arya][mislead()]) )]){
	-0.24
};
	( -( ( destroy(TABLE[-( ( Sansa ) ) + ROWS][Arya],TABLE[Arya][-( ( Sansa ) )]) ) ) )
};
	if(( ( -6 ) )){
	( -COLS / --mislead(( -1 )) );
	Arya += x
};
	Jon /= ( bar(x,-0.47 + foo(TABLE[-1][protect(Hodor,( ( ( mislead() ) ) * -0.86 + TABLE[Ygritte][rule() + -75] ))],( -1 ) * Jon * -destroy(( mislead() + --( ( foo(foo()) ) ) ),( ROWS ) * -1 - rule(Stark),TABLE[mislead(foo(-( -0.98 ),-71),foo(COLS,ROWS,( COLS )),Stark)][-foo(( Sansa ) * y)] - Sansa) / ( --0.84 / protect(mislead(betray(( ( -30.8581 ) ),( -( -1 ) )),( ( Stark ) ),21)) ) + COLS)) )
};
	if(x){
	if(-200.25){
	TABLE[bar()][-0.08]
};
	Sansa /= -4
} else {

};
	670.65 + -destroy(protect(COLS,( ( ( --bar(--Arya / ( TABLE[TABLE[ROWS][ROWS]][( -( -y ) )] ) / 0.42 - Arya) * Jon * ( 98 ) ) ) )))
}
def mislead(x,Jon,Jon){
	---bar(y,Sansa,foo()) + betray(( dog ))
}
assert COLS - betray() : "One can not simply parse himself"
def TABLE[betray(( -1 ),TABLE[COLS][( 24 )],x)][j] {
	if(-0.59){
	0.13 - Ygritte
} else {
	bar(Jon - -Stark) - COLS;
	Stark *= ( Ygritte )
};
	Sansa -= TABLE[ROWS][-1]
}
var Sansa = ( -0.47 + -bar(1) / ( ROWS / -COLS ) )
def TABLE[( -Arya )][i] {
	y -= --ROWS + -0.97;
	if(( -( COLS ) ) - -rule()){
	if(betray(bar())){

} else {
	Sansa /= ( ( -97 ) * -70.283 ) / ( COLS );
	if(Jon * -betray(foo(ROWS / -TABLE[mislead(( ( COLS ) + Ygritte ))][-84] - COLS) / -( destroy(( 0.43 / TABLE[COLS][( Stark )] )) ),Ygritte,ROWS + ( 80 ))){
	( COLS );
	-28
}
}
};
	Ygritte += COLS
}
assert mislead(bar(protect(COLS),destroy(COLS,--0.06),mislead(( ROWS ),-ROWS))) : "Fear cuts deeper than swords."
def TABLE[( ( Jon ) )][j] {

}
def TABLE[mislead(-COLS,Stark)][j] {
	-( dog );
	if(x){
	if(--1){
	-betray(TABLE[Jon][COLS],Ygritte,-42);
	Jon /= --1
};
	-0.28
} else {
	690.5985;
	x /= -COLS
};
	Stark *= Jon
}
var Ygritte = Arya - foo(rule(-1),TABLE[x + ROWS][mislead(--0.93,TABLE[betray(-0.79,-( -51 ))][-0.3])])
def TABLE[-0.57][i] {
	mislead(( ( mislead(-ROWS,-0.25,Stark) ) ));
	if(TABLE[( -dog + TABLE[18][( -91 )] )][COLS]){
	if(65){

} else {
	Ygritte *= mislead(( ( -970.65 ) ),ROWS)
};
	y;
	dog -= ROWS
} else {
	COLS + ROWS
}
}
def rule(Jon,Arya){
	( Ygritte ) + y
}
assert TABLE[foo(-Arya * ( TABLE[( TABLE[betray()][Stark / COLS] / destroy(--TABLE[( dog )][-foo(-y,TABLE[y * TABLE[( 990.55 )][y + Ygritte] * -( TABLE[( --COLS )][mislead(Hodor)] )][protect(( 0.79 ))])]) )][--TABLE[Hodor][( COLS )] / -0.71] ))][mislead(( ( -1 ) * Arya ),protect(foo(dog,61),0.95,( y + Hodor )))] * 0.71 : "Winter is coming"
assert 40 / ( -19 ) : "Winter is coming"
var Hodor = 26
def foo(Sansa,dog){
	----mislead(( TABLE[-( Hodor ) / mislead() - ( Stark )][destroy(23 + destroy(rule(--COLS),( mislead(COLS,( betray(-ROWS,-rule()) * -rule(-TABLE[Ygritte][rule(( Jon ))],-0.03) ),ROWS) )) * -ROWS,-( --TABLE[0.32][Arya / protect(---ROWS + -( rule(x,---destroy(( 72 ),-destroy(TABLE[ROWS * y][( TABLE[-TABLE[dog][-1] * Sansa][Sansa] )],-( 0.72 )) / ( COLS ),betray(( --foo(foo(Arya)) ),330.06)) / ( ROWS ) - -56,---85 / ROWS) ),Stark)] ),( protect(COLS,-90) ))] ));
	Hodor += foo(foo(-84 * ROWS,betray(Hodor)))
}
var dog = 0.43 - -0.33
var x = 960.53
def protect(Ygritte,Ygritte){
	71
}
def TABLE[-TABLE[0.12 - foo() + -61][Sansa] * foo(Sansa,0.3 - Jon)][j] {
	Sansa += -destroy(COLS * protect(ROWS + -mislead(),-( mislead() ),( -0.91 ))) + ( destroy(0.3,Arya,TABLE[( -1 )][COLS]) ) / -TABLE[-ROWS][0.22];
	TABLE[0.95][x / --74]
}
var Ygritte = ( COLS )
assert -0.93 : "Nothing burns like the cold."
assert 23 : "Winter is coming"
var Arya = ( -0.21 )
def rule(y){
	x
}
def TABLE[-1][i] {

}
var Sansa = ( ( 0.09 ) ) - -betray(( betray(0.21,-46,dog) + 66 + -0.4 ))
assert bar(-TABLE[ROWS][foo(ROWS)],bar(--x,-protect(0.87,45),--1)) : "Fear cuts deeper than swords."
def destroy(Arya){
	-COLS;
	if(dog){

} else {
	if(7){

} else {
	foo(1) - x;
	-0.33 - COLS + -1
}
};
	y
}
var y = -0.85 / -1
def mislead(){
	bar(Jon + ( rule(( ( y ) )) ),ROWS)
}
assert betray(ROWS - ( mislead(TABLE[TABLE[Jon][TABLE[Hodor][-89]]][betray(---dog * -( TABLE[--0.42][protect(( -220.97 - TABLE[mislead()][x] * ROWS ) + betray(ROWS,mislead(ROWS,-ROWS) / ( COLS ) * 0.38) + ( -920.03 ),---y)] ),y,ROWS)],( -Sansa )) )) * protect() : "Winter is coming"
assert Ygritte - -Sansa : "Nothing burns like the cold."
assert ( COLS ) : "One can not simply parse himself"
def TABLE[-1 * dog][j] {

}
def protect(Hodor,dog){
	x -= -0.37;
	if(--bar(Arya,ROWS,-TABLE[betray(mislead(),-dog + ( ( 40.294 ) )) * -Stark * destroy(COLS)][foo(ROWS,protect())] / Sansa) + 70){

}
}
def rule(){
	Hodor /= betray(protect());
	if(foo(Sansa,( betray(0.09,-45,mislead(( -1 ))) ))){
	Stark;
	dog *= ( --COLS + 90.48 * ( --( -60 ) ) + COLS );
	rule(protect(TABLE[( protect(-90,COLS) )][Jon]),1)
} else {
	-ROWS * COLS
};
	dog /= ( 0.28 )
}
assert TABLE[-1 / ROWS * ROWS][destroy()] : "What do we say to the Lord of Death?"
assert ( mislead(protect(( ( --8 / Stark * ( -Ygritte ) / betray() / mislead(dog,TABLE[80.26][-betray(( ROWS ),-82) / Arya]) ) ),-1)) ) : "Nothing burns like the cold."
var Stark = dog
def TABLE[-0.07][k] {
	Sansa - rule(-( y ) + x);
	if(bar(bar(1))){
	Jon / -( ROWS )
} else {
	---650.3 - ( COLS )
}
}
var dog = dog
def TABLE[mislead(Stark,-6,y)][k] {
	Ygritte -= -dog
}
assert Sansa : "Fear cuts deeper than swords."
assert -ROWS : "One can not simply parse himself"
def TABLE[-x][j] {
	87 / ( ( protect(-82,Ygritte,-COLS) ) )
}
def TABLE[-230.34][j] {
	Stark += 97 + COLS;
	x *= TABLE[-COLS * bar(-99)][bar(dog,foo(TABLE[( -( foo(foo(-0.02,-Arya * ( Ygritte ),-60),-protect(Arya,0.55) * ( ROWS )) ) / dog - 77 )][mislead(betray(protect(-25,( ROWS ) - bar(-Arya) / -( destroy(0.2,-foo(99) * 93) ) * Stark,-betray())),COLS)]),-COLS)] + rule(x)
}
def TABLE[betray(rule(0.81,-protect(( --( -( rule(foo(Sansa,0.78,410.56)) + COLS + -16 ) ) + ( ( Jon ) ) ) + betray()),Jon) + dog,-Sansa - -Ygritte,Ygritte)][i] {
	if(ROWS){
	y /= TABLE[betray(COLS)][42 / ( TABLE[1][TABLE[mislead(COLS)][dog]] )];
	if(--100){
	( rule(COLS,x,TABLE[( Ygritte + Arya - --0.01 )][55]) );
	betray(( -84 )) * destroy(( -( TABLE[ROWS][-0.38 * -( ---TABLE[protect(betray(950.6856) / ( foo(-0.21) ),11)][ROWS] + mislead(-39) ) * ( foo(( -1 ),Stark) * -ROWS )] + ( ROWS ) ) ) / destroy(-TABLE[( foo(-30) )][COLS] / -Stark,mislead(y)),betray(Ygritte,-Hodor),-destroy()) * -53
}
}
}
def betray(x){
	y /= destroy(( Stark ),55)
}
def bar(){
	foo(rule(ROWS,COLS,-( y ) * betray() * ROWS),TABLE[destroy(( ( 39 ) ))][Ygritte]);
	( COLS ) + 78;
	Arya
}
def rule(x){
	if(TABLE[Ygritte][TABLE[-1][-Jon - -ROWS]]){
	-COLS;
	if(0.91){
	if(Sansa){

};
	y *= 540.59
} else {

};
	dog *= ROWS
}
}
assert 66 : "What do we say to the Lord of Death?"
def TABLE[y][k] {
	y /= ( Sansa )
}
var y = -COLS
def mislead(Jon,Arya){
	if(100){
	Hodor += -0.57 + ( ( --mislead(-( mislead() / Ygritte * ( ( ( ( TABLE[-mislead(x,Sansa)][72] - -610.304 ) ) ) ) ) * 1,ROWS,540.45) ) )
}
}
def TABLE[mislead(TABLE[0.55][TABLE[COLS][x]] - ( ( COLS ) ) / Ygritte,betray(bar(-0.08),( -TABLE[dog][( Hodor + ( ( TABLE[-83][bar(100,---390.5 + betray(-bar(-( 1 )),-16),mislead())] ) ) )] )))][j] {
	Jon += -Ygritte
}
def foo(Arya,Arya){

}
def rule(){
	TABLE[COLS][betray(Stark) * -0.55 - ( -Arya )];
	dog -= protect();
	740.921
}
assert destroy(COLS,dog) : "Winter is coming"
var Stark = TABLE[--( protect(-bar(-x,-COLS + TABLE[COLS][0.1] + ROWS - ( ( COLS ) ))) )][( -dog - mislead(--880.086,1,( ROWS )) )]
def TABLE[TABLE[Jon][COLS - ( COLS ) + ( Sansa - destroy(rule(Sansa),-53) )] - Sansa - ROWS - -20][i] {

}
def destroy(Jon,Sansa,x){
	Hodor *= -54;
	0.84 - betray(-( COLS + Ygritte ),foo(32 / -ROWS),-Jon) + foo()
}
var Hodor = -ROWS
assert -( -ROWS ) : "One can not simply parse himself"
var Jon = -ROWS - Arya
def TABLE[dog][j] {
	-bar(20,0.95) + -foo(COLS)
}
assert ROWS : "Winter is coming"
def TABLE[COLS][k] {

}
def destroy(){
	-19
}
def mislead(dog,y){
	-86;
	COLS
}
var dog = 990.2518
def TABLE[COLS][j] {
	Ygritte;
	dog -= -COLS
}
def TABLE[-( ( -( 91 ) ) - ( -TABLE[-TABLE[( ( -0.41 ) )][Arya]][ROWS] ) )][j] {
	if(( Stark )){
	x *= destroy(790.01,63 * TABLE[TABLE[Hodor + ( Jon )][foo(--ROWS,destroy(ROWS,rule())) - -dog]][betray(destroy(-0.31,COLS),-mislead(dog,1) * -5 / foo())] - -0.67,-mislead(870.9,destroy(COLS,( -TABLE[-betray()][-530.189 / -Arya * Jon] )),( ( ( bar(foo(-32) + mislead() - x,( ROWS )) ) ) )));
	Arya *= -70
} else {
	Arya /= ( ROWS )
};
	Ygritte -= TABLE[-880.84 / --mislead(320.319)][ROWS]
}
assert -1 : "Nothing burns like the cold."
var y = TABLE[COLS / ( TABLE[destroy(ROWS) + dog + rule(foo(rule(),Jon),( -( -910.046 ) ))][COLS] ) - COLS][Jon]
var dog = 0.9
def TABLE[dog][i] {

}
var Stark = 830.78
assert ( foo(-1,TABLE[y][protect()]) ) : "Nothing burns like the cold."
var Sansa = x
assert TABLE[ROWS][bar(Arya,protect(-( -0.93 )),dog)] * ( ( -bar(Arya,dog) ) ) + destroy() : "Fear cuts deeper than swords."
assert ROWS : "What do we say to the Lord of Death?"
var x = ( -x * TABLE[Ygritte][rule(-0.23) * -49] )
var Arya = ROWS
var y = -y
assert Sansa : "Winter is coming"
def TABLE[0.9][i] {
	betray(( ( 1 ) ),420.644);
	if(4 / -500.2){

} else {

}
}
def TABLE[dog][k] {

}
def betray(){
	if(bar(( betray(( Stark + -mislead(betray(foo(-0.38) - COLS * ROWS)) ),( -( ROWS ) )) ))){
	if(x){

} else {
	x *= ( -rule(( ( ROWS + 120.4 ) ) * Sansa * COLS) )
};
	Arya -= -27
} else {
	-protect(( Stark ),Stark)
}
}
var y = -2 - 320.0636
def TABLE[Ygritte - -95][k] {
	Sansa += ( y )
}
var Sansa = 1
def bar(){
	mislead()
}
def bar(x){
	bar(ROWS - x,Jon,1)
}
var Stark = TABLE[( destroy() ) * dog][-1]
var Stark = -0.62
var Arya = ( foo(1,-Ygritte - Ygritte) )
def TABLE[protect(-COLS)][k] {
	rule(Arya);
	if(( ---bar(-Sansa,betray(--53,ROWS),COLS) / protect(-Hodor,( rule(-0.19) )) )){

}
}
var x = ( -Arya )
def destroy(Sansa,Jon,Jon){
	if(foo(( protect(( y )) )) / mislead(0.79,( protect(0.32,0.34 + -( ( TABLE[COLS][destroy() * destroy()] ) ),-ROWS) ))){
	( --0.78 - ( TABLE[y][0.18] ) - -( -0.29 ) );
	-dog
}
}
def foo(dog,Jon,Sansa){
	Sansa *= -17 / Ygritte;
	Arya -= ( ( Ygritte + -Stark ) );
	Jon /= ( -0.19 - ( ( betray(Ygritte,( -COLS ),( ( protect(dog - Sansa,-COLS,-30) ) )) * ( -( 0.89 ) / mislead(( COLS ) / --27) / foo() - Hodor ) / -11 * -( ROWS ) ) ) )
}
assert -23 : "What do we say to the Lord of Death?"
assert -( mislead(dog,59) * ( ROWS ) ) : "Fear cuts deeper than swords."
def foo(x,Sansa){
	if(( -COLS )){
	Jon *= --protect(0.48 / 76,0.81) - ROWS;
	y /= COLS;
	Ygritte *= bar(TABLE[Stark][0.59 / --COLS]) / mislead()
} else {

}
}
def destroy(x,Sansa){
	TABLE[( ( ( -19 ) ) )][-( -( -COLS ) / -1 )];
	Ygritte -= --85
}
def TABLE[--Ygritte + -Arya][k] {
	Hodor += 99 + COLS;
	Arya *= 39 * bar(1) * 0.66 + rule(rule(),-betray(( ( -0.24 ) ) + destroy(TABLE[destroy(70)][COLS])),COLS)
}
var Jon = protect(ROWS,( -COLS ))
def TABLE[COLS + -mislead(y,Arya) / ( ( COLS ) )][j] {
	--790.709;
	if(( COLS ) * Hodor){

};
	-ROWS
}
def TABLE[( ( betray(( Stark ),Stark) ) ) * -destroy(COLS) - destroy()][i] {
	Jon += Jon
}
def TABLE[betray(-0.61)][k] {
	Sansa /= -280.4 * bar(--COLS);
	Sansa *= protect(-( COLS ),destroy())
}
var Stark = ( Sansa + ROWS )
def TABLE[-1][k] {
	COLS
}
def mislead(Stark){

}
def TABLE[COLS][i] {
	Hodor += -protect(69) + dog
}
def rule(y,x){
	if(mislead(TABLE[( Jon / ( foo() ) )][TABLE[y][COLS]],Arya,Stark)){
	0.77
} else {
	if(-25){
	if(( -0.46 )){
	if(84){
	if(-rule(bar(dog,destroy(bar(0.25),-1 / bar(COLS,foo(Stark),-0.45 - ( bar(COLS) ) + -Ygritte + -730.81),--1)),-Stark)){
	ROWS;
	-( ( ( --390.9 ) ) )
};
	if(TABLE[bar(Sansa)][Stark]){
	-( -( rule() ) )
} else {
	betray(Sansa) + ROWS
}
};
	Stark *= Ygritte
};
	x *= Arya
} else {
	if(-Sansa){
	if(betray(( ( ( -mislead(--Hodor - dog - ( ( ( 0.73 ) ) - 23 ),-foo() - -1 * foo(Sansa,-1 / y * -37,ROWS / -foo(y) * COLS),-COLS) ) ) ))){
	if(COLS){
	x /= ( TABLE[betray(350.939,-ROWS / ROWS)][TABLE[----Jon + -COLS][ROWS]] );
	if(( -rule(ROWS) )){
	if(( COLS ) / ROWS * dog){
	Arya;
	( ( --0.38 ) );
	Stark -= 51
} else {
	if(Stark){

} else {
	if(Arya / ( COLS + x )){
	Jon /= 39;
	Arya += 340.2;
	Hodor /= protect(-950.73)
};
	if(--protect()){
	Hodor *= Jon
} else {
	if(Jon){

} else {
	COLS + TABLE[( ROWS )][-1 - -Sansa];
	( rule(protect(( -80.3 + -( Ygritte ) ),( 21 ),bar(betray(Arya,COLS),protect(( ( ( Jon ) ) ),-( ( -( mislead(bar(protect(TABLE[( -10 ) / ( -( -( -86 * ROWS * Sansa ) ) ) * -( -1 )][COLS],1)),( TABLE[---betray(Jon,-0.39 * COLS,-23) / -640.6][Jon] )) ) / ( destroy() - -( 12 ) + -Ygritte - -0.95 ) - destroy(bar(( ( 0.76 ) / 0.9 ),ROWS * Sansa + ( TABLE[-880.908][-y] ),-1)) ) ),-protect(foo(Sansa,dog))))) - Jon,bar(protect(( COLS )),-( destroy(COLS,( 1000.69 )) ) - betray(-COLS,( ( -10.01 ) ))),COLS) );
	if(( ( --0.69 ) )){

}
}
}
};
	dog += ( COLS )
};
	if(-0.29){
	mislead(-COLS,Arya) + ( Hodor )
} else {

}
} else {

}
};
	0.52;
	if(y){

}
} else {

};
	Ygritte /= ROWS;
	if(-( Stark )){
	x += destroy(foo(),foo(destroy(y,-COLS + destroy(( Stark )) + -0.58,bar(( ( ( dog ) ) )))))
}
} else {
	if(Sansa){
	1;
	if(700.1965){
	Sansa *= foo();
	if(TABLE[( rule(( Stark ),-0.89 - -COLS * rule(ROWS) * TABLE[mislead(Sansa)][betray(-( --59 )) * rule(COLS)]) )][Sansa]){
	Jon *= rule(protect(),dog,( COLS ))
} else {
	( -0.03 );
	Hodor -= Arya;
	( y )
}
}
};
	-0.99
}
}
};
	dog -= Stark
}
var x = 1
assert 29 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -dog : "Fear cuts deeper than swords."
def betray(y,y){
	if(Jon){

}
}
var y = -( TABLE[--18 + ROWS + -Sansa / Sansa * ( ( destroy(( ROWS ),-ROWS + COLS,( COLS )) ) )][( Sansa ) / mislead(COLS,betray() - y)] ) + rule()
assert ( Jon ) : "What do we say to the Lord of Death?"
def TABLE[( COLS )][k] {
	if(Hodor * protect(( mislead() ),-1)){
	if(x){
	if(dog){
	Ygritte *= -0.31 + ( ROWS )
}
};
	x -= 0.29;
	Jon *= COLS
} else {
	if(-x){
	dog -= -580.8
};
	Stark *= ( -49 / mislead(TABLE[-Stark][ROWS],bar(betray(-( ( protect() ) - x - ( ( foo() ) ) ),-destroy(ROWS - --80) - rule(betray(-0.57 + ( ( betray(-55,( -ROWS )) ) ))),-( bar(mislead(-0.15,( 54 ),580.254 - -mislead(TABLE[58][( ( -1 ) )],ROWS,-0.29) + ( TABLE[-1][310.9515] )),foo() * Arya) ) / COLS) + ( bar(-0.74,bar(-Sansa)) ),Arya)) - 600.7 * y * dog )
};
	if(TABLE[protect(-dog,foo())][ROWS]){
	if(ROWS){
	if(betray(-66,TABLE[COLS][rule(Sansa / Ygritte) * betray(( Hodor / Sansa ))])){
	-( ROWS );
	if(protect(protect(ROWS - mislead(( foo(-( ( Stark ) ),COLS - x) ),-( TABLE[protect(x,ROWS)][dog] )))) - ( Jon ) - ( TABLE[-ROWS][protect(0.34 + Ygritte)] )){
	if(( foo(betray(ROWS)) )){
	Arya += -98
} else {
	TABLE[x][COLS];
	y -= -ROWS
};
	( Jon )
}
};
	Ygritte *= COLS
};
	-68 / Stark
}
}
def destroy(dog,Hodor){

}
var Jon = ( Jon )
assert ( 1 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( TABLE[rule(( protect(( 98 ),Sansa,-1) ),foo(( y ) - ROWS + -foo(x,( -( Jon ) + Arya / ( ( -510.3 ) ) / -Stark )),( -foo(betray(96,31),( -Ygritte )) ),x + ( Sansa )),Jon)][( Stark )] ) / mislead(dog) : "Nothing burns like the cold."
var y = ROWS
def betray(Ygritte,Jon){
	Sansa -= 98;
	Arya;
	x -= -0.93 / Ygritte
}
assert -ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = Sansa
def foo(Hodor,x){
	if(0.91){

}
}
assert -Arya : "What do we say to the Lord of Death?"
def TABLE[( ( Hodor ) )][i] {
	if(protect(rule(foo(COLS * x,( 440.17 ))),foo(-TABLE[protect(( 52 / ROWS ),bar(ROWS,( -rule(mislead(-rule(TABLE[-0.67][Jon]))) - Hodor - ( protect(( mislead(foo(( y ),y) + COLS,bar() / ( ( -240.36 ) )) * ( Hodor ) ),( ( mislead(1,Hodor) ) )) ) * 0.25 ) + Arya - Arya))][betray(-( mislead(( -foo(TABLE[ROWS][( TABLE[-490.45][-0.8] - Arya )],-COLS / -TABLE[COLS][ROWS] - ROWS) * 1 / ( COLS ) )) + ROWS ))] + TABLE[-( ( bar() ) )][( mislead() )] - betray(Sansa,COLS) * Jon))){
	Stark *= TABLE[-TABLE[Ygritte][-670.2]][Hodor] / -destroy(Stark) - ( ( 300.52 ) );
	y /= destroy(--foo(TABLE[-destroy(-betray(-79),betray() * ( bar() ))][destroy(-( Stark ) - COLS + 0.29,bar(),bar(( Sansa ),( ( protect(Stark) ) )))],0.42 * ( 0.94 ),bar(Sansa,ROWS)),( -ROWS * mislead(betray(Sansa),dog) ))
}
}
def TABLE[mislead(64)][k] {
	if(-y + TABLE[betray()][( -( ROWS + ROWS ) + ( 64 ) - ( ROWS ) + -TABLE[( 52 ) / Arya][COLS] )]){
	dog
}
}
assert -0.54 : "Fear cuts deeper than swords."
var Stark = COLS
var x = TABLE[Stark + betray(destroy(-1),( y ),TABLE[( Arya )][1])][( -( ( --( COLS ) ) ) )] - ( ( dog ) / 77 ) - y
def TABLE[protect(( y ) * ( -0.42 ),( ( -destroy(ROWS) ) ))][i] {

}
var Jon = 690.3155
def mislead(y,Stark){

}
def protect(dog){
	y += Jon;
	Hodor *= Stark * -COLS;
	if(dog){
	Sansa /= ( Sansa );
	if(-Hodor - 0.43){
	x /= ( TABLE[protect()][( -340.315 )] );
	if(COLS){
	if(foo(TABLE[y][1],destroy(Stark,protect(-Jon,Sansa)))){
	300.97 / -1
} else {
	rule();
	-980.07
};
	if(--0.73 / ROWS){
	if(( foo(Hodor + foo(foo(TABLE[-protect(COLS,COLS)][-0.34],--11)) - --0.25 / ( dog )) ) + mislead(( -( 0.41 ) ),TABLE[destroy(( ( -COLS * foo(---5 * -Arya + y * y - destroy(-( protect(-protect(Arya,x),-1) ))) ) ),( 220.9 ) + protect(--Stark + ( bar() ) * y,-destroy(),( -dog )))][ROWS],COLS) * ( foo(COLS) ) - --0.93){

};
	if(( Hodor * Ygritte ) / 87 - protect(Stark,COLS)){
	x /= -41 + -destroy(Jon * Hodor - -( ( bar() + --0.68 ) ) / -52 - -37,-900.465 + -rule(protect(Sansa,x),Arya)) + TABLE[( destroy(-( -foo(Jon) / betray() ),TABLE[( Hodor )][rule(( ( rule(Sansa,rule(TABLE[protect() / ---1 * mislead(( 0.8 ),Hodor)][betray(foo(( rule(( 49 ),( ( y ) + foo(( -Jon )) ) - -0.98 + 0.09 + -77) )))],--y * --20) + betray(-380.4108 + ( ROWS )),( ( 670.6786 ) ) * 1) ) ),protect()) * -foo(-protect(mislead(-Jon + Jon),-( bar(550.9505,destroy(0.53)) ),-0.01 * x - -( rule(dog) ) + foo(-mislead(-39,-0.05) * Sansa,x,-TABLE[Stark][-protect() * -0.68] - -42)) - Hodor)]) )][betray()];
	y += ( -TABLE[390.15][COLS] );
	Stark *= ( 23 )
} else {
	if(Stark){

} else {
	88;
	Ygritte += -betray() * COLS;
	Arya -= 7
};
	if(-1){
	Jon
} else {
	( -Hodor * Stark ) / TABLE[mislead(COLS,-ROWS / Sansa)][y];
	Stark -= -0.73;
	-Stark / protect(-mislead(Stark))
}
};
	if(destroy(bar(),--ROWS,( betray(Sansa) )) / TABLE[COLS][( rule(-0.85,Jon) )]){

} else {
	Arya += ( TABLE[-destroy(--ROWS,COLS)][-0.95] ) * -ROWS;
	-75
}
}
}
}
}
}
var Arya = ( ( ( 0.91 ) ) )
assert -dog : "Fear cuts deeper than swords."
var Stark = TABLE[Ygritte][Sansa]
assert ( x ) - -protect(rule(( COLS )),y) : "Winter is coming"
var dog = ROWS
def TABLE[Arya][k] {
	Arya *= ( Stark / 39 - protect(TABLE[0.67][betray(rule(1))],( -770.8935 ) / Arya) - dog - ( COLS ) );
	bar();
	Hodor /= -0.94
}
def TABLE[-0.2][j] {
	Jon += 83;
	COLS;
	Stark
}
def TABLE[-x][i] {
	y += foo(bar(( Jon )),y,-TABLE[ROWS][mislead(( 1 ) - --y,-destroy(foo(protect())))])
}
assert -Sansa / -78 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( COLS ) : "Nothing burns like the cold."
def TABLE[COLS][k] {

}
var Jon = TABLE[--( -y - -0.28 )][ROWS]
var Hodor = bar(( ( destroy(bar(bar(Hodor,Jon),ROWS)) ) ) - ( Jon ),-51 / 48 + ROWS / Hodor,-( -TABLE[( Arya )][( Stark )] * TABLE[Hodor - 80 - 0.41 * TABLE[TABLE[---0.96 / COLS][-x]][( -( x ) )]][( -( ( COLS ) ) * protect(destroy(0.88,( --0.83 * -rule(-( ( -destroy() ) ) + -dog) ) + COLS,170.3),1 - ( foo(--rule(-Stark) * -86,0.66 / Hodor) - ( ROWS ) - ROWS )) ) - foo(( betray(Hodor / ( -( ( -0.73 ) ) ),-COLS / 0.99 * protect(-1)) ),( rule(-1,Stark,( COLS )) ))] * ( betray(( ( -70.74 ) ),destroy(( ---53 ),ROWS,protect(TABLE[-mislead(COLS,-690.961,( Arya ))][dog])),protect(mislead(-1,Hodor),( ( COLS ) ) * rule(rule(COLS / ( ROWS + --rule(-51 + ( 12 ) + 71 + betray(( destroy(-61,-99,( TABLE[-rule(--Hodor - -Ygritte * --Stark)][-0.46] )) ) - ( dog ) + --Stark,ROWS,-mislead(-0.09)),-Jon - ( mislead(-COLS,Sansa,COLS) )) / Jon / TABLE[protect(betray(( x ) - foo(-700.72,-98)),destroy(ROWS) / COLS * -1)][ROWS] ) / ROWS,COLS),Ygritte) / COLS)) ) ))
def rule(){

}
var dog = COLS
def bar(x,Jon){
	y *= foo(( Hodor ) / -TABLE[TABLE[Ygritte][-890.94]][rule(-bar(( mislead(ROWS,mislead(( COLS )),COLS) )))],-COLS)
}
def foo(Hodor,dog){
	y -= COLS;
	y *= -( ROWS ) + -1 / protect(TABLE[bar(( -0.43 ),protect(Hodor,Sansa) - 0.46 / betray())][Hodor / -destroy(( bar(COLS + -TABLE[950.288 + Jon][ROWS]) / -betray(77) ),-970.81)] / -0.57,550.4697,( ( ROWS ) ) + -Sansa) - COLS
}
assert destroy(-( --( -0.56 ) ),( TABLE[-0.36 + -33][Ygritte] * ---50.4 * 0.82 / foo(destroy(protect()),Arya,1) ),x + COLS) : "Nothing burns like the cold."
var y = ROWS
var Arya = ( 80 ) / 550.714 * -TABLE[( TABLE[x][destroy(Sansa)] )][34] - mislead(-ROWS)
var Stark = ROWS
assert -0.89 : "One can not simply parse himself"
def rule(Ygritte){
	dog -= ROWS
}
assert COLS * ( 0.82 ) : "One can not simply parse himself"
def TABLE[-1][i] {
	y /= ROWS
}
def mislead(Ygritte){
	x -= ( dog )
}
def TABLE[COLS + ( Jon )][j] {
	x += ( ( ( COLS ) ) );
	if(-ROWS){
	if(foo(-protect(TABLE[destroy(-1,39)][( ROWS / -ROWS )],ROWS),Arya,1)){
	Ygritte /= ROWS * y
}
};
	dog + protect(( 70 ))
}
def TABLE[ROWS][k] {
	TABLE[---( dog )][( protect(-COLS,-TABLE[--( rule() ) / mislead(-Arya,dog + TABLE[COLS][( -( TABLE[-10.0442][-rule(-45 / TABLE[-0.65][( Jon + ( -37 ) )],( ROWS ))] ) + -COLS )],1) - protect(-46,( COLS ))][TABLE[-betray(( mislead(ROWS,mislead(TABLE[-Jon][-( TABLE[protect(-1 - -1,x)][mislead(( TABLE[Sansa][-25] ),dog) + -betray(( ( foo(Sansa) ) ))] ) + x]),-COLS) ))][( Ygritte )] * dog]) )] * ( ( -COLS * ( 0.92 ) ) )
}
def betray(Ygritte,Hodor){
	if(( ( COLS ) ) + 0.84 * ROWS){
	y /= ( -x ) + ( COLS );
	( TABLE[( ( ( Stark ) ) )][-( 0.45 + y )] )
} else {

};
	if(dog){
	destroy(ROWS,Stark);
	Jon *= destroy(protect(Arya),630.639,Sansa)
} else {

}
}
def TABLE[( -ROWS )][i] {
	ROWS;
	Sansa *= x
}
assert bar() : "Winter is coming"
def mislead(x,Hodor,Stark){

}
assert destroy(Arya,-44,( y )) : "What do we say to the Lord of Death?"
def TABLE[COLS - COLS - TABLE[( 0.09 ) + -1][Ygritte]][k] {
	COLS;
	y /= bar(TABLE[( dog * mislead(( Ygritte ) - 0.65) )][Jon],dog)
}
assert mislead(COLS) : "One can not simply parse himself"
assert Stark * ( Stark + -Arya ) : "One can not simply parse himself"
def TABLE[60.22][j] {
	0.02
}
def bar(Arya){

}
def TABLE[35][i] {
	Stark += -0.07;
	Sansa -= bar(protect(),-TABLE[-y][-1])
}
var y = dog
var Arya = Ygritte
def mislead(Ygritte,Stark){
	foo(0.91)
}
var y = 0.38
def TABLE[---1][k] {
	if(x){
	-protect(( -1 ),--protect() * -( ROWS ) * -x);
	Arya /= ( --28 + ROWS / 0.89 - 40 * -rule(COLS,x,TABLE[-56][ROWS]) * Arya )
}
}
var x = -90
var Sansa = ( --betray(ROWS,65,Sansa) + COLS / 93 )
assert Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(Hodor){
	if(0.84){
	Arya *= -0.79 + 710.14;
	Jon -= Jon;
	y += dog
};
	COLS
}
def bar(y){
	if(y){
	if(-ROWS){
	-protect(mislead(-890.39,TABLE[Hodor / ( 73 ) * -ROWS][TABLE[( COLS ) * ( --130.32 )][( 58 + -foo(--3 - foo(ROWS,y)) )] - 1]) + COLS)
};
	if(( ( ( Stark ) ) )){
	if(protect() * rule(-( ( ( ( COLS ) / 0.74 ) ) + TABLE[( -( protect() ) )][( --foo() * ROWS / 1 )] ) + Arya - -1 * mislead(y) / 160.7 * -dog * TABLE[( -90 )][x - y / destroy(-( --Ygritte ))])){
	x /= Arya
} else {
	if(y){
	Jon -= foo(1,foo(-rule(y,ROWS,ROWS) / -( bar() )),dog)
};
	---COLS
}
}
};
	Sansa *= TABLE[( ( ROWS ) )][mislead(( x ),ROWS,41)];
	if(Arya){

}
}
var dog = ( 1 )
assert TABLE[COLS + -0.74 / 870.668 + destroy(rule(COLS),COLS) * Jon / 0.89][COLS] : "Fear cuts deeper than swords."
def destroy(y,Arya,Stark){
	if(protect(mislead(-58),( ( foo(----( ROWS ) / ( betray(betray(-( ROWS ),--0.68,TABLE[TABLE[protect(ROWS)][mislead(protect(-TABLE[( ( ROWS ) )][destroy(bar(),( -0.38 ))] * ( ROWS - Jon / -ROWS )))]][--destroy(-74,COLS,protect(ROWS,Sansa + betray(x)))] * COLS),ROWS,bar(foo(( protect(destroy(bar() * ( -900.283 + Hodor ) / 0.03 / ( ( -0.34 * 76 - ( ( destroy(-1) ) ) * ( destroy(-COLS * ( foo(--( --1 + --68 ),-82) / mislead(dog,-protect(bar(900.58 - -foo(COLS) * x,( COLS ))),ROWS) ) / ( -Sansa ) + -( --mislead(0.84) - rule() ) + dog - TABLE[Hodor][-0.08 / x],-240.39) ) - bar(destroy(Jon,rule(-26,-0.91)) * mislead(( 0.4 ) - Arya / mislead(( betray() ),-0.08,-protect(-0.51,0.85) + 0.98),foo(( y ),mislead(-23 - betray(( -330.9 ),x,Jon),ROWS,Stark))),-30) ) ) - ROWS,ROWS)) ),-0.67),( TABLE[COLS][-1] - dog ) / 73 / TABLE[( -0.92 )][protect(y)])) )) ) ))){
	if(1){
	if(( ROWS - Ygritte ) / --32){
	Arya -= COLS;
	if(ROWS){
	if(COLS){
	( ( COLS ) )
} else {
	--35
};
	if(( --foo(-COLS,Hodor,Sansa / Jon) ) + 940.415){
	2;
	Sansa - rule() + -( ( --1 ) )
} else {
	Stark - Hodor / protect(( ( -18 / Ygritte / --( -Ygritte ) * 1 / bar(COLS,x) ) ) - bar(-( -23 ),--29) + -51,rule(x) * ROWS + bar(( -( foo(ROWS,-( -COLS )) ) )) + mislead(( foo(-37,rule(--foo(ROWS),Stark)) )));
	Ygritte *= ROWS * -Sansa + betray(x,--1 + -TABLE[( ( betray(Sansa) ) )][COLS - TABLE[--TABLE[-ROWS][Jon] / Arya][ROWS]] + Stark);
	Stark += dog
}
}
} else {
	if(-1 + 1 * destroy(ROWS)){

};
	Stark -= x * -0.65
};
	Hodor *= -1
} else {
	Ygritte - -destroy(( y ))
};
	Jon += COLS;
	Arya
};
	y *= -y
}
assert -betray(0.68,COLS,-1) * -59 : "Winter is coming"
def TABLE[destroy()][i] {
	if(ROWS){
	protect(y) * ( 0.38 );
	if(( 0.73 )){
	dog *= y;
	if(TABLE[x - -99][rule(( ( foo(Jon,( destroy(470.48) )) ) ))] - ( COLS )){
	-80;
	x
} else {
	if(rule(-0.56,destroy(( betray(0.55 * ( Ygritte ),Sansa,-TABLE[81][-ROWS] / Ygritte) + ROWS + ( ( TABLE[-0.35][COLS] ) ) ) / ROWS,( ( betray(betray(Hodor,-0.41),( ( protect(-67) ) )) ) ),( ( -0.57 ) )),bar(-880.455,( ( -57 ) / dog ) - -x * TABLE[-( ( -COLS ) )][Stark] - ( Arya ),-dog + ( bar(Stark,-ROWS) )))){
	if(COLS){
	x += ( -0.49 )
} else {
	( Ygritte )
}
} else {
	ROWS * ROWS
}
}
}
} else {
	Jon *= Stark;
	if(COLS){
	if(ROWS){
	if(ROWS){
	( -ROWS );
	Hodor /= TABLE[y][Ygritte];
	bar(Ygritte)
}
} else {
	if(TABLE[-790.95][TABLE[Stark][( -5 / TABLE[COLS / bar(( Ygritte ),protect(destroy(TABLE[( -( -0.49 ) )][-0.72],--betray(1,980.43)),y),Hodor)][Stark] )]]){
	( 0.8 );
	-28 / ( Sansa / x ) / Hodor
} else {

}
}
} else {

};
	Hodor *= --x
}
}
var Arya = 0.65
def protect(x,Stark){
	if(-600.056){
	-1
};
	if(betray(ROWS,-destroy(-0.15 - ( mislead(betray(foo(1,-TABLE[Sansa][Arya]),COLS),-Jon) )),ROWS) / COLS){
	if(protect(Ygritte,Jon)){
	y *= ( dog );
	Sansa /= rule(-dog,( 1 ));
	Sansa += ( COLS )
} else {
	-590.6
};
	Sansa += ( protect(0.13,-1,-1 + destroy(28 - bar(-Ygritte,-( ( protect(dog,0.56) * 0.99 ) )) * ( TABLE[( 0.51 )][-mislead(-0.1,Ygritte)] ))) ) + rule(-530.28 / -1,COLS,( 89 ));
	if(( ( Hodor / --( COLS ) / ( Jon ) + ( TABLE[ROWS][COLS] ) ) )){
	foo(( ( Jon ) * Ygritte ),( destroy() / protect(ROWS,COLS) ) * COLS,-36);
	if(-mislead(destroy(Stark),190.89)){
	Jon /= bar(-destroy(destroy(( 400.857 )),y),rule(-1,84,( --foo(-14,-( TABLE[-( ( COLS ) ) + ( ( COLS ) ) + destroy(Jon,COLS - -0.46)][--( Jon ) / y] )) / 0.85 )));
	-0.13
}
} else {
	Stark += ROWS;
	Hodor *= ( mislead(-600.3535) )
}
}
}
var x = -y
def protect(Stark){
	Sansa -= Ygritte;
	if(Jon){
	COLS * ( 72 )
} else {
	Hodor -= ( 0.5 ) - -( ( Arya ) );
	dog -= COLS - protect(Sansa);
	y /= x
}
}
assert y : "Nothing burns like the cold."
def TABLE[TABLE[-0.63][( protect(6) )]][i] {
	if(Stark){
	1
} else {
	Hodor += -rule();
	dog /= Ygritte;
	( ( 0.1 ) )
}
}
def TABLE[-TABLE[( -y ) - -TABLE[-0.48][-ROWS]][dog]][i] {
	protect(0.15 - -Stark * destroy(0.94,0.81) + 87)
}
def TABLE[betray(( ROWS ),( -foo(Hodor,-foo(( rule(( ( 0.31 ) ),-67) ),betray(-ROWS * -( --640.4773 ) + ( bar(Stark - bar(Ygritte)) - 0.32 )))) ))][j] {
	( Stark )
}
var Stark = Sansa
def bar(x){
	Stark += -betray(Ygritte);
	if(ROWS){
	Stark;
	bar() + mislead(TABLE[rule(-Stark * COLS,Jon)][-bar()]) * -destroy()
} else {
	if(( ( 0.6 ) )){

} else {

};
	if(protect(( -bar(mislead(TABLE[-bar(Hodor)][ROWS],-10) * -( -( mislead(--0.09,-dog) ) )) ),( ( -( -TABLE[COLS][Sansa] ) / ( ( -84 ) ) ) ))){

}
};
	--93
}
def TABLE[TABLE[destroy(y,Hodor)][-mislead(0.73,y + Sansa - COLS)]][i] {
	if(1){
	if(( ( destroy(730.024,-6) ) )){
	if(1 - -mislead(x,( COLS ),y) - -rule(-( -93 ),COLS)){
	Sansa;
	y *= Arya;
	if(ROWS - ( ( COLS ) )){

}
}
} else {
	betray(TABLE[bar(-TABLE[-mislead(destroy(( Hodor ),COLS)) + x][0.26 * -bar(-COLS * COLS)],y) + ROWS - Sansa][betray(Sansa)],( rule(( ROWS )) ));
	bar(( ( rule(mislead(protect(foo()),COLS),Stark) ) ),rule(-36,-0.73),COLS);
	if(-0.58){

}
};
	if(Sansa){
	TABLE[78][dog] * ( --0.74 / bar(Sansa) - ( Ygritte ) );
	COLS;
	( -----COLS - protect(-0.03) )
} else {

};
	if(Jon){
	if(Ygritte){
	betray(Arya) * ( Arya )
};
	bar()
} else {
	y;
	Stark;
	-( -( betray(mislead() - Arya + x,--Stark * Arya) ) ) / -( x ) * -Hodor
}
};
	if(TABLE[-( rule(-40) )][-( bar(TABLE[bar(betray(( ( 300.913 * ( -1 ) ) / -x ),betray(TABLE[COLS][rule(64) / ( COLS * ( COLS ) )],dog)),-destroy(mislead(0.53),protect(COLS - 1,11)))][-ROWS] - ( foo(Arya) )) )]){
	( -( ( -foo(-rule(ROWS,-0.39),-rule(foo(-mislead(TABLE[protect(Hodor)][--0.49])))) ) ) );
	ROWS
} else {
	if(dog + -14){
	Hodor /= bar(( -0.37 ))
};
	Hodor *= rule()
};
	if(--TABLE[-0.58][( -1 )] / -( Arya )){
	if(( foo(rule(Hodor)) )){
	TABLE[--55][ROWS];
	if(destroy()){
	1;
	63
}
}
}
}
assert dog - Ygritte : "One can not simply parse himself"
var Stark = 1 / ( ( TABLE[( -dog )][( mislead(ROWS,0.44,COLS) )] ) ) - --COLS
def TABLE[dog / COLS][i] {
	Sansa /= Stark;
	COLS / -30 / foo(COLS);
	Sansa *= x
}
assert ----16 / --Arya - COLS : "Winter is coming"
def TABLE[-( -0.36 )][j] {

}
def TABLE[Ygritte][i] {
	destroy(9);
	-58
}
def betray(Stark,Stark,Jon){

}
assert 0.42 : "Fear cuts deeper than swords."
def TABLE[--0.26 * foo(( betray(TABLE[-x][-10],1) ),COLS) / 47][k] {
	if(ROWS){
	0.57
}
}
assert bar(COLS,--79) * ROWS + ( Stark ) : "What do we say to the Lord of Death?"
def protect(x,Ygritte){
	if(Hodor){

}
}
def TABLE[-destroy(( COLS ),( ( 0.89 ) ),foo())][i] {
	( COLS * -1 );
	Arya -= foo(foo(),bar(-560.7435),ROWS) + ( COLS - -COLS * 0.74 )
}
def TABLE[72][j] {
	COLS;
	-98
}
assert TABLE[-0.92][( y )] : "Winter is coming"
assert Sansa : "What do we say to the Lord of Death?"
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-( ( x ) ) * rule(50)][j] {
	if(foo(-910.7) + COLS){

}
}
def TABLE[Hodor][k] {
	Ygritte /= 80 + Jon
}
var y = foo(ROWS,( -0.21 )) - -91
def TABLE[-bar()][i] {
	if(790.2418){

};
	if(66){
	Arya += betray(mislead(COLS,Hodor,--1),-Ygritte)
};
	if(0.11){

}
}
def TABLE[x * 90][i] {

}
var y = ( Hodor ) + protect(Hodor,-( ROWS ) - ( ( ROWS ) ) * Jon / ROWS,-rule(bar(COLS,0.95 * ( y ),-Hodor),( TABLE[( -( x ) )][-protect()] ) - -99 - TABLE[TABLE[Jon][dog]][Ygritte],dog) - rule(( -x )))
var x = ( protect() )
def TABLE[foo(-1,-86 * ( TABLE[-1][foo(( TABLE[betray(Stark)][COLS] - 1 ))] ))][j] {
	( -680.4 - destroy(( ( foo(( ( foo(COLS) ) )) ) )) )
}
var x = -37
def TABLE[( Jon )][j] {
	rule(mislead(Ygritte,Stark))
}
var y = 21
assert -90 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(x){
	x *= ROWS;
	if(dog){

} else {

}
}
def protect(Ygritte){

}
assert x : "Fear cuts deeper than swords."
def protect(Stark){
	Stark * 0.98 / bar(x,TABLE[COLS][protect() + ( ( 0.73 ) )]);
	ROWS
}
assert rule(( 89 ),-COLS * x) : "One can not simply parse himself"
def TABLE[Arya][k] {
	rule(destroy(( betray(COLS) )));
	y -= dog
}
def foo(y,x){

}
var dog = 14
var dog = TABLE[-x][-COLS] + Ygritte
var Jon = ROWS
assert TABLE[protect(-COLS + ROWS) * Arya][-0.4] : "What do we say to the Lord of Death?"
def TABLE[COLS][i] {

}
assert TABLE[240.341][--dog / -betray(-ROWS + ( 1 )) - 75] : "Nothing burns like the cold."
var x = -0.06
def TABLE[protect()][i] {
	if(mislead()){
	-( protect(-38 * Jon) );
	if(rule() + ROWS){
	Stark += TABLE[protect(protect(protect(-foo(-( --TABLE[COLS][betray(( COLS ),y,-( 8 ))] * 0.04 - ( TABLE[dog + ( ( y ) )][Arya] ) ),mislead(dog - Jon - bar(Sansa,--1),720.482 * foo(( ROWS ),( foo(COLS,COLS) + 1 )))),65,dog / Ygritte * Stark * Hodor * -COLS - foo(( bar(( COLS ),betray(-1)) )) * --21 + COLS)),TABLE[-mislead(93,COLS) + Jon][( ( --1 / ROWS + Sansa ) )])][-Sansa];
	Hodor *= -0.01
} else {
	( --Jon );
	-0.73
}
} else {
	if(( 0.37 )){

}
};
	( TABLE[TABLE[Ygritte][mislead(-890.402,-( Sansa ))]][betray(betray(-( mislead(dog,protect(Arya)) )),--240.189,y)] );
	--0.52 + bar(COLS,-190.5521,-TABLE[ROWS][-y])
}
def TABLE[ROWS][k] {

}
def TABLE[COLS][j] {
	Ygritte *= ( mislead() )
}
def protect(dog,Arya){
	if(--1){
	if(destroy()){
	COLS;
	if(35 / ( betray(( TABLE[Jon][destroy(Jon)] )) - 0.54 / -betray(destroy(mislead(mislead(-7 + -0.91))),dog + mislead(0.8,destroy(ROWS),0.82)) + ( ( -1 ) - ( Stark ) ) )){
	if(( destroy(500.81,betray(mislead(-COLS,rule(bar(COLS,bar(-foo(( COLS )),-( ( -COLS ) ))),dog)))) / bar(-COLS,TABLE[-31][rule(foo(ROWS),0.62)]) )){
	if(rule()){
	if(--( TABLE[( Jon )][y] ) * ( -TABLE[Arya][Arya] )){
	-Sansa;
	if(( TABLE[bar()][COLS] )){
	if(-betray(51)){
	Stark += ( -Sansa * ( ( destroy(( -----( -88 ) ) * betray(25,Ygritte,TABLE[--COLS][( -TABLE[COLS][( -86 - foo(-1,betray()) )] )])) ) ) )
} else {

};
	if(y){
	dog += -98;
	if(Stark){
	dog -= -( 13 );
	Ygritte += Jon
}
} else {
	if(rule(ROWS / -( Hodor ) / protect(( --790.0971 ),foo(34,0.67,-rule(mislead(TABLE[-Hodor / Arya][rule(TABLE[-1][foo(-1)])])))),protect(-42))){
	dog -= ( Arya - x * -mislead(-TABLE[ROWS][protect()],ROWS) );
	Sansa *= -Jon
} else {
	Arya *= TABLE[0.2 / 0.12][250.8 + bar() * ROWS];
	dog += x;
	if(--ROWS){
	COLS;
	dog += 0.45
}
};
	x += ( Arya );
	Jon /= ( betray(Arya,( 21 )) ) + betray(destroy(dog - --0.83,rule(COLS)) - -COLS,-Ygritte)
}
};
	if(-0.95 / -110.9){
	if(-0.55){
	if(rule(rule(),TABLE[foo(mislead())][COLS])){
	Sansa -= bar();
	if(-47 / ( COLS )){
	Ygritte;
	( rule(destroy(),0.85) );
	if(ROWS){

}
};
	Sansa *= y + 27
};
	foo(Sansa) * ( foo() ) - 1
};
	COLS
} else {
	dog += betray(( rule(( COLS / ROWS ),1 - Sansa) ));
	( -( ( 0.47 ) ) - betray() + ( destroy(Sansa,-( -COLS ),( COLS )) ) * rule(betray(),COLS) )
}
} else {
	if(COLS){
	if(( TABLE[COLS][-Jon] )){
	if(rule(foo(Jon,Hodor,Jon),-foo())){

};
	if(-mislead(-Hodor)){
	if(( ( ( -COLS ) ) )){
	Hodor *= ROWS - ( ROWS ) - dog;
	if(Jon - -29){

} else {

};
	36
}
}
} else {
	if(Hodor){
	if(COLS){
	x *= bar(TABLE[-34][-betray(Sansa) - ( protect(Stark,betray(Arya,( -0.97 / y ))) )],-0.18,COLS)
}
} else {
	Ygritte += Sansa
}
}
};
	if(COLS){
	0.38
} else {
	if(destroy(-protect(74) * Sansa / dog) + -1 + Stark){
	if(Sansa){

} else {
	if(83){
	rule(-ROWS,0.38,COLS);
	-( ( 0.6 ) );
	0.77
} else {
	Stark += 550.46;
	y += -11 - COLS
};
	Jon += -dog
};
	if(-1){
	Stark *= ( destroy(-ROWS,protect(( --bar(( rule(0.73,betray(( mislead(-x / ROWS) ) - -ROWS,--1)) )) ))) )
};
	if(-0.05){
	if(-82){
	-( Arya );
	y -= mislead(--( dog ) / -COLS - -mislead(TABLE[-( ( -49 ) )][rule(170.6,TABLE[1][-0.41])],rule(1 + -1 + ( -( dog ) )),protect(( 560.98 / ( ( -0.78 ) ) * ( betray(COLS) ) / dog - -betray(destroy(rule(-bar(rule(COLS,-100),---0.65,-96 + betray(Jon,-0.3,Ygritte)) * ROWS,betray(-Hodor,COLS)) + ( ( -Arya ) ) - foo(( 0.16 )) * ( x - TABLE[0.52][Jon] ) * destroy(mislead(-( x / Stark ),-11)) - TABLE[-810.452][--( COLS ) / ( -( protect(ROWS,( COLS ),betray()) ) ) - protect(-640.9033,rule(Arya),betray(Hodor,28)) + mislead(( -( -betray(bar(COLS,( ( ( ( COLS ) ) ) )),( dog ),--( 0.96 / rule(ROWS,-rule(-TABLE[Arya][foo() * Sansa - y]),ROWS) )) ) + TABLE[COLS * --95][-Sansa] ))])) ),0.51))) - Jon
} else {
	if(COLS){
	Arya -= betray();
	TABLE[betray()][( 0.77 )];
	Ygritte /= COLS
}
};
	Stark += --180.545
} else {

}
};
	if(310.182){
	--1;
	-ROWS
} else {

}
}
}
}
}
} else {
	Hodor -= y + ( TABLE[0][COLS] ) / -44 + -0.76 / 1 + Jon;
	if(0.32){
	Ygritte *= COLS
} else {
	Sansa += ( -690.348 ) - x
}
};
	TABLE[TABLE[-bar(-Jon,( COLS ))][( TABLE[x][Hodor / -rule(-1)] + -bar(ROWS / -ROWS * ( destroy(rule(( COLS )),rule(-dog)) )) )]][( COLS )] / protect(betray(TABLE[betray(destroy(-( y ) * ( TABLE[bar(-destroy(Sansa),( ROWS ))][TABLE[( -Jon / Sansa / ( y ) )][-ROWS]] ) - TABLE[( ROWS )][-1],---9) / TABLE[bar(dog,( ( TABLE[Hodor][Hodor] ) ))][-11] / -930.8,bar())][dog],destroy(y) + ROWS - bar(( ( bar(0.06,betray(mislead(protect(Stark) + bar(COLS) / betray())),Jon) ) ),-640.3843,protect(Stark * x) / bar(Sansa,( -0.99 ))),-610.9),( Jon )) / Ygritte
} else {
	Stark += ( ( ( Arya ) ) ) - TABLE[rule(-91,COLS) / destroy() / protect(-( -0.48 ) * -( mislead(-Hodor * foo(-ROWS,--ROWS)) ) * 57 * ( TABLE[-0.4][-dog] ) - -0.31,Hodor) / Hodor][Arya];
	dog *= TABLE[betray(y,bar(( mislead(protect(Jon,x,-1)) )))][Sansa - Stark];
	Stark /= TABLE[y][Jon]
};
	x /= 67 * ( COLS );
	if(( -0.7 )){
	Hodor /= -TABLE[( -54 / -( bar(dog + -TABLE[-19][Arya]) - rule() - protect(ROWS + ( --rule(COLS) ),( mislead(rule(Jon,--bar(Hodor)),y) ),Sansa - ( -COLS )) ) )][0.97];
	Hodor *= 69
} else {
	-TABLE[-ROWS][y];
	if(( -41 ) / Hodor * ( Ygritte + 1 )){
	Arya += -0.42;
	if(COLS){
	if(-ROWS){
	if(COLS){
	Stark *= bar(-Ygritte - -betray(x,protect(),--0.28) * destroy(-0.56,( ROWS ),-Ygritte) + COLS,dog);
	Stark *= 0.13
}
} else {
	if(-( -0.58 )){
	-110.146;
	-69
}
};
	--0.31 / -910.75
} else {
	---mislead(Stark,Sansa * -Jon)
}
}
}
} else {
	if(Arya * COLS){

};
	x *= protect(foo(--95,Ygritte))
}
}
assert 0.04 : "Winter is coming"
var Jon = ( ( COLS - ROWS / foo() ) )
var Hodor = rule()
def TABLE[mislead(( -460.11 - ( TABLE[rule(-TABLE[COLS][Jon])][Ygritte] ) ))][k] {
	dog *= mislead();
	Stark /= Sansa
}
assert protect(ROWS,-51,-Hodor) : "One can not simply parse himself"
def TABLE[foo(--( ( ( y ) / -destroy(rule(1),-0.98) ) - ( bar(Hodor,betray(-bar(),-610.6382 / mislead(dog,Arya - ROWS * mislead(52,-( foo() )))) / -1) ) ),80)][k] {
	if(( y * betray(( ( ( 630.45 ) ) + -TABLE[( 1 + ( COLS ) )][x] - TABLE[-destroy(Jon + COLS,--dog,-400.79) + betray(Arya) - ROWS + rule()][-0.84] )) )){
	-destroy(COLS);
	if(-( foo(bar(TABLE[-630.17][( Sansa )] - COLS + foo()) * TABLE[( Ygritte )][TABLE[TABLE[TABLE[-COLS][y]][0]][1]],COLS) ) / -6 + rule(Arya) + -foo(-40)){
	33
} else {
	Arya /= -0.3;
	if(-32){
	Hodor /= betray(Jon,0.95,----950.493 - COLS + ROWS)
}
}
} else {
	if(-COLS){
	Ygritte -= x;
	if(foo(TABLE[( -mislead(y,( rule(-0.6,-840.4215,mislead()) ),420.3566) )][( -destroy(ROWS,TABLE[0.85][-36],Arya) )],( betray(dog,-96 + --TABLE[Arya][( Jon )] * foo(bar(-betray(y * -1 * destroy(TABLE[betray(rule(( TABLE[-33][-Jon / TABLE[Stark][Stark]] ) / -0.94,TABLE[-x + 49][betray(-600.84)],39 + bar(Ygritte)) * -Arya,protect(rule(Stark - -530.1669 - ROWS),( -COLS )))][COLS],bar(-y)) * ROWS),-( -0.06 )),protect(rule(COLS,--0.63)) / ( -bar(rule(foo() / bar(COLS,foo(Hodor,( COLS * 1 )),( ( -0.94 ) )),rule(0.6,destroy(ROWS,-( 60 ))))) ) / Sansa,COLS)) ),COLS)){
	if(-TABLE[( ROWS )][( 43 )]){
	if(TABLE[COLS][82]){
	destroy(x,ROWS);
	dog += Hodor
} else {
	Hodor += x;
	if(-360.9){

};
	Hodor
};
	Ygritte -= COLS
} else {
	y += -1 * dog;
	-42
};
	Jon -= -0.76;
	Ygritte += -Jon + protect(-85 - -ROWS) - -0.49
};
	if(-rule(( -1 ),rule() * ( TABLE[-x][protect(-destroy(TABLE[COLS][y] - ( bar(y) / -0.12 - -50 )),protect(COLS,y,y / ( x )))] ) / TABLE[-0.19 - ( COLS - -94 / COLS / ROWS * ROWS )][betray(-520.936)])){
	Stark /= ( COLS )
}
};
	Sansa;
	Hodor -= TABLE[79][dog]
}
}
assert betray(( -COLS )) : "Fear cuts deeper than swords."
def mislead(x){

}
assert Stark : "What do we say to the Lord of Death?"
def TABLE[230.2111][i] {
	Stark += ( x );
	betray(COLS)
}
def TABLE[mislead(ROWS,( Sansa ),1)][j] {
	1;
	if(bar(COLS)){

}
}
var x = -0.61
def betray(){
	x /= rule(( --0.76 ),foo(0.53,destroy(ROWS,-TABLE[1][x] + -( -rule() ) - -destroy(Hodor,-Sansa + ( --foo(protect(COLS)) * y ) - mislead(foo(rule(),destroy(( TABLE[destroy(-destroy(destroy(bar(( ( protect(TABLE[( protect(ROWS,( 1 ) - -0.98) )][0.84] * ROWS + x - ( mislead() ),--destroy(-0.6,0.74 + -70 * ( foo(ROWS,TABLE[TABLE[Jon][--11 + ( dog )] - y][Ygritte]) ))) ) ),betray(),ROWS),ROWS,y - -Sansa / ( rule() * mislead(bar(ROWS),-56) )),( 1 )) - -( ( Stark ) / -dog ) + bar()) * Sansa][( dog / Stark )] ))),COLS,COLS) - ( Ygritte )) - rule(protect(foo(-0.57,( -170.903 ) + ( COLS )),protect(Jon)),-1),0.87) + ROWS))
}
def TABLE[TABLE[mislead(protect(-protect(-betray(--Stark,protect(( --betray(ROWS) )) / ROWS - -Ygritte),ROWS / ( ( -1 ) ))))][ROWS]][j] {
	Sansa -= TABLE[( Arya )][TABLE[-9][-mislead(561) * bar(( betray(ROWS) ),ROWS,ROWS) + ROWS + mislead(0.67) * -0.85 - TABLE[( 0.45 )][Stark / ( ( TABLE[protect(37 + --0.27,( foo(( destroy(y,-mislead(1,-ROWS)) ),destroy()) ),TABLE[-COLS][-1])][mislead(670.65 * ( ( -( COLS ) + Ygritte ) ) * COLS * COLS + foo(protect(-( TABLE[-Arya][-mislead(--39)] ),ROWS),2))] / Arya ) )] * betray(ROWS)] / -0.52] * ROWS;
	if(-1){
	Arya += -( ( ( 0.71 ) ) )
}
}
def TABLE[betray()][k] {
	TABLE[destroy(( 0.76 ) * ( Sansa ) - mislead())][-mislead(( -0.68 ),dog + mislead(-42,y)) + y]
}
assert --0.28 : "What do we say to the Lord of Death?"
var Sansa = mislead(-Jon,destroy(Ygritte),y)
var Ygritte = COLS
assert 36 + -ROWS : "One can not simply parse himself"
var Sansa = -73
assert ( ( y ) ) : "Winter is coming"
def foo(){

}
def TABLE[TABLE[95][-Jon]][k] {
	dog -= TABLE[( bar(x - dog) ) - betray(-ROWS)][foo()];
	if(foo(betray(( --1 * ( destroy(x) ) )),foo(mislead(Hodor,( destroy() )),destroy(Jon) * ( 1 - ROWS - Stark - -0.49 * --TABLE[-Ygritte][ROWS] + --rule(-0.57 + --Hodor) ) + x,x),x)){
	Sansa -= foo(protect(),TABLE[-1][rule()])
} else {
	Ygritte /= TABLE[( Arya )][x];
	98;
	-( COLS ) / -Jon
}
}
assert protect(--( Sansa - 1 ),bar(-63),Ygritte / TABLE[( COLS )][Jon]) : "What do we say to the Lord of Death?"
def TABLE[x][j] {
	if(Stark){
	Ygritte *= ( betray(-0.09,mislead(-9 + betray(( -destroy(foo(Ygritte),-( bar(-0.56) )) ),-0.73 / COLS,Sansa / betray(6,bar(rule(( 0.47 )),---rule(COLS) / ( rule() )))),COLS,COLS)) )
};
	Ygritte -= COLS
}
var y = Stark / --Jon
var Arya = ( COLS )
assert Hodor : "Fear cuts deeper than swords."
def TABLE[y][i] {
	y;
	dog;
	if(ROWS){
	if(-97){
	Stark += --1;
	Hodor /= Jon
} else {

}
} else {
	if(-( COLS )){
	ROWS;
	x += rule(0.27,( ( -TABLE[rule(( Ygritte ))][-550.988] ) + -TABLE[( ( Sansa ) )][( Stark )] ))
}
}
}
var Sansa = y
assert -( Jon ) : "Fear cuts deeper than swords."
var y = 0.32
assert -530.46 : "Fear cuts deeper than swords."
def protect(Jon,dog){

}
var y = 81
def destroy(Arya){
	Arya -= -COLS;
	TABLE[mislead(COLS,ROWS * rule(COLS,foo(( -x ))))][x - ROWS + Stark + ( TABLE[22][( 0.77 )] ) / 0.4 * ROWS * 800.2 / Hodor];
	Stark
}
assert 910.28 : "One can not simply parse himself"
def betray(){

}
def destroy(dog,Jon){

}
def TABLE[-TABLE[destroy()][Sansa]][i] {
	if(betray(1,mislead(ROWS / --ROWS) - -Ygritte,( -0.21 ))){

}
}
def foo(){
	protect(COLS,-130.4312,Jon)
}
assert -Arya + ( 100.32 ) * x + betray(( ( bar(Hodor) ) ),-ROWS) + Jon : "Fear cuts deeper than swords."
def TABLE[ROWS][i] {
	if(Ygritte){
	dog;
	rule(98 * COLS,0.94)
};
	if(destroy(bar(-ROWS),Sansa,rule(TABLE[17][x],ROWS,100.784))){
	ROWS
} else {
	x -= protect(destroy(ROWS + ( Arya ),( rule(Jon,TABLE[-rule(ROWS,--560.1496,-( 290.2314 ))][Hodor],TABLE[COLS][Arya]) ) * --protect(rule(mislead(-260.34)),( Stark )) - mislead(-38)),-betray(60.823 * -0.72),-Arya)
}
}
var x = ROWS
var Jon = COLS
def rule(Stark,x){
	if(0.92){
	if(1){
	if(Jon){
	-( 0.54 );
	250.7;
	y -= ( foo(ROWS,-1 - Sansa,Hodor) )
};
	98;
	if(protect(Sansa,destroy(( TABLE[dog][0.42] ),Arya,( ( x ) ))) - mislead(( ROWS + COLS ) / Jon,( ( ( ROWS ) ) ))){
	dog -= Hodor;
	dog += Sansa;
	( COLS )
} else {
	if(0.28){
	Ygritte /= --y - Stark / y - mislead(-( protect(ROWS,( ROWS ),-70.9) ));
	Sansa += x / Ygritte;
	if(ROWS){
	Stark -= --( Hodor )
} else {
	if(bar(-35,Hodor)){
	betray(Ygritte,-bar(rule()));
	Sansa *= 90
}
}
} else {
	if(( TABLE[-( Jon ) / 0.52][y] )){
	Stark -= 1;
	destroy(( -TABLE[0.39][91] ))
}
};
	dog += -0.6
}
}
}
}
var Sansa = 930.4
var Sansa = -( protect(( 0.75 ),ROWS,mislead(( ( -ROWS ) ),0.12)) - TABLE[bar(( foo(-ROWS,TABLE[protect(-Hodor,bar())][-520.6],x) ),( -dog ))][( Arya )] ) / ( bar(Sansa,( 0.13 )) )
def TABLE[foo(ROWS,( ( mislead() ) ),( ( Ygritte ) / --ROWS ))][i] {

}
def TABLE[-1][j] {
	-0.94;
	Jon += TABLE[ROWS * y - --29 - COLS + Arya][-0.79] - TABLE[Ygritte][-Hodor] / 1;
	-Jon
}
def TABLE[dog][i] {
	x /= bar()
}
assert -1 : "Winter is coming"
var Stark = 1
assert Sansa : "What do we say to the Lord of Death?"
assert Jon : "One can not simply parse himself"
def TABLE[mislead(protect() + TABLE[rule(( betray(-ROWS,12) ),( -TABLE[betray(Arya)][-52 + COLS * -0.81] ))][( ROWS * Stark )],-1 / Hodor * ( 0.88 ))][i] {
	if(( y / -Ygritte + COLS ) / COLS){
	Stark /= -rule(( ( TABLE[-( x )][-40.856] ) ),( --bar() / foo(--( TABLE[-1][-0.22] )) ) + TABLE[-0.04][rule(-0.15,Hodor)],Jon);
	rule(bar(),y,-1 * destroy() - rule(rule(TABLE[Hodor][--protect(COLS / COLS)] / destroy(-1,ROWS),COLS),-x - ROWS,Hodor) + ( -0.63 ))
} else {
	x *= destroy(( 24 / COLS ))
};
	( Ygritte )
}
assert Hodor : "Winter is coming"
def destroy(){
	if(ROWS){
	if(-66){
	if(destroy(Ygritte,70.9144) / -59 * -820.2345){
	if(COLS){
	if(x){
	bar(( Stark ) + -950.068)
};
	Ygritte -= -( ( ( TABLE[Hodor][-0.26] ) ) );
	if(Sansa + -ROWS){

}
};
	Stark *= -bar(y)
}
} else {
	if(( 830.4062 )){
	Jon *= ( mislead(-( Arya )) )
};
	Stark -= -70
};
	if(-0.41){
	---920.669;
	16;
	Arya - -1
} else {
	TABLE[-Ygritte][ROWS];
	if(( foo(-ROWS / ( TABLE[Jon][destroy(y,-TABLE[betray()][Hodor])] ) + betray(ROWS,0.54,Sansa),( ROWS ),( 96 )) * -0.28 )){
	-1;
	if(Stark){
	-ROWS
} else {
	if(ROWS){
	Stark /= dog
};
	Stark -= -( dog )
}
} else {

}
};
	if(TABLE[( x ) - Jon][-0.19]){
	if(-dog){
	if(ROWS){
	if(--Arya){

}
} else {
	betray(( --y * Stark ));
	Ygritte -= ( rule(TABLE[( ROWS ) * -78][Ygritte],TABLE[dog + --COLS][( -190.2723 )],310.8773) + 69 );
	Jon += -13
};
	if(destroy() * 63 * COLS){
	if(TABLE[Stark][TABLE[rule(-( -( Ygritte / ( 8 ) ) * rule(destroy(foo())) ),( --COLS / 0.95 - ( ( 690.757 ) ) ),----0.3) / mislead(-( ROWS ),( protect(( protect(rule(( destroy(rule(--Stark,protect(--TABLE[foo(destroy(destroy(),--1),Arya - COLS / --0.61 * ( ( Sansa ) ))][Jon],mislead(destroy(TABLE[-Jon][--22] + ROWS,-0.25,dog),( -Arya / -( -ROWS ) * ( 17 ) + dog )),dog)),betray(24,-( ( Arya ) ))) ),-1,-( destroy(0.48,1) ) / -13 * -89 + TABLE[60.64][-Ygritte + foo(-( 0.62 ),mislead())]),mislead(COLS,COLS),Sansa) )) ))][-Hodor]]){
	x /= ----990.58 / TABLE[58 * 38][TABLE[ROWS][---COLS / mislead(-bar() * -COLS) - -foo(-0.14,bar(),ROWS)]] + ( y );
	if(TABLE[--Ygritte + y][( 120.28 ) / foo(COLS)]){
	Sansa += ( y );
	Arya *= protect(rule(93 / ( TABLE[Ygritte][--1] )),mislead(0.83,y))
}
} else {

};
	Jon /= ( ROWS )
}
} else {
	Ygritte -= -40;
	Jon
};
	Stark += ROWS;
	-( TABLE[0.1][ROWS] ) / ( Stark ) - TABLE[y][bar(( ROWS - y ),15,x)]
} else {
	Hodor += ( 66 );
	Hodor /= -x * ( ( ( -bar(protect(-0.9,-7,( dog ))) - x ) ) ) - ( y * TABLE[foo(94,-98)][mislead(-( Stark ) / foo(Hodor * Jon,bar(TABLE[TABLE[TABLE[foo(17,( foo(ROWS) ),-76)][( ( ( dog ) ) )] + mislead(-Ygritte + rule(-( Ygritte ) - 97,( Ygritte ))) / y + -1][( ( ( ROWS ) ) )]][dog] * COLS / -( -( ROWS + -65 ) ) - Arya,1),mislead(66,-1,rule(rule(ROWS,-1,( COLS )) * -TABLE[( ( dog / 99 ) ) - Jon][-( -foo(( ( ( ( -Arya + Jon ) ) ) / bar(( ROWS ),protect(Arya + ( -43 ),Arya)) * 14 - dog + Sansa )) )] * betray(),( COLS )) * destroy(-1,rule(( ( COLS - COLS ) ),0.03)))),-( -800.84 * Sansa ))] / x ) - --( -bar(x) + -( --rule(-95) ) ) - -COLS;
	if(destroy(mislead(Jon - 310.5))){
	Arya /= dog
}
}
}
}
var Arya = COLS
def TABLE[ROWS][k] {
	-1;
	ROWS
}
def TABLE[( Arya ) + y * foo(-1,ROWS,-5)][k] {
	if(( ROWS ) * COLS){
	if(Stark * TABLE[-0.92][Hodor] - betray(-mislead(( -0.05 )))){
	if(50){
	Sansa /= betray(COLS,Sansa);
	x += bar()
} else {
	if(( Sansa )){

} else {
	--Arya / TABLE[COLS][bar(protect())];
	TABLE[-45][( -0.35 )]
}
};
	Ygritte -= ( -0.18 )
} else {
	if(protect(foo(TABLE[-99 - dog][920.067]))){
	if(rule(( -Sansa + x ) * --10 * dog,( ( -220.898 ) ))){
	( ( Stark ) )
} else {
	Hodor /= ( COLS )
}
};
	if(Arya + dog){

} else {
	Hodor / -ROWS
}
};
	if(( ROWS )){
	Ygritte *= 1 * bar(foo(1,( TABLE[ROWS][bar(---1,-58)] )),-( -( ROWS ) ));
	if(-3){
	Hodor /= betray();
	if(ROWS){
	if(destroy()){
	Ygritte *= Sansa;
	if(-Sansa){
	Arya *= ( -Sansa );
	mislead(-1);
	x *= 0.19
}
} else {
	if(dog){
	if(foo(-dog - Jon,-TABLE[TABLE[x][820.3] + Stark][--0.63])){
	Ygritte /= 210.65;
	x -= -52 + ( TABLE[Hodor][( y )] )
};
	y /= 0.35;
	dog *= ( bar(-Hodor / ( TABLE[Hodor][rule(( -Ygritte ),Sansa)] ) / ( mislead(--( ( protect(( -0.09 )) ) ),--1) ) - dog / COLS,-19,-360.78) + destroy() )
} else {
	dog -= TABLE[destroy(( rule(mislead(170.3,COLS),destroy(COLS),Jon) ),betray(ROWS,( y )) / -COLS)][--betray(Arya,-COLS)];
	Ygritte /= TABLE[betray() * rule(-betray(),Arya,Stark) / rule()][--mislead(-0.02 / ( TABLE[-210.3][( -1 ) * ROWS / --y * Arya + protect(1,--1) + y] ),rule(x,Hodor)) / ( -( -Ygritte ) / Sansa ) * y - y]
};
	if(( -COLS )){
	x -= ---850.3;
	--200.48;
	if(( Sansa )){
	Stark += ( ( ( 54 + TABLE[( 1 )][( -620.7 )] ) ) * ( Jon ) - -( -destroy() ) )
}
}
};
	if(Ygritte){
	if(( -0.26 )){
	Arya -= ( betray(( ROWS )) - ( 0.93 ) + ROWS );
	---( Sansa ) + ( -bar(( TABLE[--370.9733 * -mislead(-mislead(19,Hodor + -Hodor,mislead(Hodor)) / ( 1 ),bar(( rule(TABLE[TABLE[250.762 + ROWS][rule(bar(),ROWS)] - -Arya + betray(ROWS) / Arya * betray(-( TABLE[0.8][-( ( -0.51 ) ) * Jon] - ( rule(-( ( -33 ) ) + Ygritte - ROWS - -x - -TABLE[-1][Jon],destroy(--0.52,rule(COLS,( rule(COLS,bar(-0.18,x)) )))) ) ))][( ( -COLS * -29 ) ) / mislead(( TABLE[-Arya][Ygritte] * Hodor * COLS ),-Ygritte)],x) )))][foo(COLS + -dog * Hodor)] ),TABLE[-590.5 / ( y - protect(-94,( ( Jon ) )) )][( 0.45 )]) * protect(ROWS,-78) - Jon * rule() ) / TABLE[destroy(-( Arya ),mislead(--TABLE[foo(bar(),COLS * TABLE[( ---600.4 - ( protect(( -1 ),-( -TABLE[( --68 )][ROWS] * ( --( TABLE[rule() + 0.23][( -1 )] ) ) ),-( COLS )) ) )][Hodor])][COLS] / COLS,Stark),0.31) + rule(ROWS,( ( 0.47 ) * ( --0.95 ) - dog ),( x ) * Jon) / -bar(--Stark)][Stark];
	( TABLE[rule(Sansa)][Ygritte] )
};
	if(COLS){
	dog += bar(ROWS) / Arya;
	-protect(Sansa,Arya) / -0.43 - protect()
}
}
} else {

};
	if(Stark){
	dog /= -77 / ( betray(990.41,TABLE[rule(( Hodor + -1 ),( -foo(foo(COLS)) + ( Ygritte ) ),34) + COLS][( Sansa )]) - ---0.93 ) / Ygritte / --1 / --( 0.76 ) / --x + ROWS + -96;
	ROWS
} else {
	if(( 0.87 )){
	if(-betray(-22,-91)){

};
	Hodor *= 0.66;
	--destroy(-( ROWS ) * -TABLE[Stark][dog])
} else {
	Jon *= TABLE[-Stark][( ---1 )]
};
	Ygritte *= ( -TABLE[0.37][-88] )
}
}
};
	dog += -17
};
	if(betray(Sansa)){
	rule(Sansa);
	if(foo()){

} else {

}
};
	if(rule(( TABLE[bar(( ( COLS ) ),betray(-22))][-ROWS] + -TABLE[( x / rule() )][Jon] + ROWS ),foo(TABLE[40][dog],( 1 )),( ( ( ( ( -1 / TABLE[--TABLE[COLS][ROWS - ( y )]][protect(protect(y),TABLE[Hodor][Ygritte * ---86])] ) ) / bar(-ROWS,( foo(Sansa) * -71 / -bar(Stark / COLS * mislead(Sansa),( ( ROWS ) )) + -( ( ( -( 51 ) ) ) ) )) ) ) )) * 0.77){
	if(mislead(destroy(TABLE[-x][-( ROWS ) - -0.46]) / COLS / destroy(67,---24) - ( 0.86 ) - COLS,Hodor,ROWS)){
	Ygritte -= y
};
	Stark *= rule();
	if(y){
	Arya
}
}
}
assert -COLS / betray() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-TABLE[( rule(Hodor / protect(Arya,( Jon )),ROWS,-rule(--( --0.16 ))) ) - Ygritte / ( ( ( foo() ) ) ) + Arya * -43][( ( -760.17 ) )]][i] {
	Jon *= ( Stark );
	dog += -foo()
}
assert 270.31 + betray() : "One can not simply parse himself"
var Arya = -0.62
assert -49 : "Fear cuts deeper than swords."
var x = TABLE[( -20 + ( Hodor ) ) - Jon][Ygritte]
def TABLE[COLS][k] {
	if(ROWS){
	--( -( COLS ) );
	Stark -= -rule(-1) + mislead(foo() * -( destroy(ROWS,29) ),-( COLS ),-Arya / TABLE[( ROWS )][-0.14] * bar(( Sansa ))) * -bar() - -0.91
}
}
def TABLE[bar(x)][k] {
	Hodor -= COLS;
	x /= COLS
}
assert COLS : "Fear cuts deeper than swords."
def TABLE[3][i] {
	if(( betray(-0.1) * ROWS )){

}
}
def foo(){
	if(( ROWS * ---64 )){
	if(-0.56 * -540.997){
	dog /= foo(( -COLS ) - Ygritte,Jon)
};
	if(y){
	rule(-1,Stark,( --8 ))
} else {
	destroy(-10,y,0.86);
	y *= -x
}
} else {
	-12;
	-( Arya )
};
	dog;
	if(foo(-( Jon ),-dog,0.39)){
	Stark += mislead();
	if(ROWS * dog){
	y /= Stark;
	COLS
} else {
	if(0.56){
	dog += Stark * -1
} else {

};
	if(COLS){
	Arya /= ---610.8 - betray()
};
	Ygritte -= ROWS
}
} else {
	if(( -( -destroy(( rule(dog,16) / betray(destroy(( COLS + y * -0 ),Jon),destroy(--0.66 + -0.8 * foo(-TABLE[y][foo(ROWS,( y ))] * TABLE[-( Jon - -4 / ( --x ) )][Jon]),foo(TABLE[ROWS][( 1 )]),0.35) * Jon,bar(destroy(0.32 / TABLE[230.66][-0.06],-360.6,-0.37) + dog,1) + -betray(-24)) ),Stark,-0.88) ) )){

} else {
	TABLE[( -0.62 * betray() ) / COLS][betray(COLS,43,TABLE[( ( protect(x / bar(destroy(( foo() )),bar()) / Stark,-1) ) ) + Jon][--bar(mislead(( -76 - -0.68 ),COLS),-( -310.1 )) + Ygritte] - -( bar(destroy(-0.29)) ))];
	dog /= bar();
	Sansa -= foo()
}
}
}
def foo(y,Stark){
	-69
}
assert ( ( y * -710.646 / TABLE[-1 + x * foo(-( destroy() ) / -protect(),-0.14) / TABLE[0.05][-0.63]][-77] ) ) : "Winter is coming"
def betray(y,Ygritte,Jon){

}
def mislead(Jon){

}
var dog = COLS
def bar(Arya){
	Sansa;
	if(COLS){

} else {
	Ygritte /= -1
};
	if(Jon){

}
}
def bar(Hodor){
	( ---92 / ( foo(dog) ) * dog - -640.14 ) * COLS;
	68
}
assert ( -COLS ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(Sansa){
	if(betray(mislead())){
	if(( Hodor ) - x){
	if(bar(Sansa / dog)){
	Jon /= ( destroy(-( 0.37 ),COLS) );
	Arya -= COLS;
	Jon -= -betray(-Hodor,y)
} else {
	if(y){

} else {

};
	if(-x){
	ROWS
} else {
	if(( ( -1 ) )){
	if(--COLS){
	if(-( ( ROWS ) )){
	protect(-ROWS + ( TABLE[-COLS][destroy(-17 - ( foo(Jon,TABLE[-Jon][dog]) ) / x,ROWS)] ),y,rule(( destroy() ),x,-160.326) - ( --98 + ( Hodor ) ))
} else {
	if(-destroy(x,Ygritte)){
	x /= --dog
}
}
} else {
	if(destroy(0.25)){
	TABLE[TABLE[32][COLS / dog] * ROWS][-mislead(TABLE[( bar(76,-ROWS,67) )][--betray(protect(Sansa))],-0.49,( ( mislead(COLS * TABLE[-Sansa + ( Arya ) + dog - ---destroy(-( 3 ) / Sansa,destroy(( COLS ) / ROWS) * --rule(-0.98,--0.34,Jon),( 1 )) + TABLE[-x][Sansa]][-mislead(( -1 )) / destroy(ROWS,-1 - --0.17 + bar(-79) / -0.69)] / COLS / -protect()) ) ) * -510.2) * 33];
	Sansa += --920.36 - ( Ygritte )
} else {

};
	if(-23 * -700.2249 / -1 - ( ROWS ) / betray(COLS / mislead(-destroy(Arya / -rule(TABLE[-39 + -( ( dog ) - ( TABLE[rule(( ( TABLE[( ( 0.98 ) ) + ( -0.14 ) - x][390.722] ) ),( -( Ygritte ) * ( TABLE[-68][( y )] ) / ROWS + COLS ),( x ))][0.78] ) * protect() - ROWS )][Ygritte],-1,bar(( ROWS ))) * Stark,destroy()))) + -52){
	Stark /= Arya;
	if(TABLE[( rule(rule(TABLE[ROWS + -21 * Hodor][( Hodor )])) )][( Ygritte )]){
	Jon += Hodor
};
	x *= ( ( -protect(destroy(( x )),Hodor + ( TABLE[( -6 )][destroy(Hodor)] ) + Arya + protect(( Stark - ( Arya ) / -ROWS / foo(-mislead(Ygritte),COLS + ROWS) )) + ( ( COLS / mislead() ) ) / ROWS / -( -ROWS ) / ( ( --580.59 * rule() ) )) ) )
} else {
	Hodor -= ( x )
}
}
} else {
	if(-Stark){
	Jon *= -58;
	y /= Jon
};
	TABLE[-Ygritte][protect(protect(TABLE[Jon][270.6],TABLE[bar(bar(COLS,( x )) + destroy(),Arya,mislead(TABLE[--27][y],-1,( Hodor ) + x / -0.81))][bar()]),-0.37)]
}
};
	7
}
} else {
	Arya *= ( Sansa )
}
};
	Sansa + foo()
}
assert betray(TABLE[-0.28 / ( Ygritte ) + -foo(dog) / rule(ROWS)][TABLE[ROWS][Arya * COLS] + -960.3921 / foo(( TABLE[( -450.8098 )][ROWS] ))],destroy(Ygritte,Hodor,bar(y))) : "Nothing burns like the cold."
assert -Hodor : "Fear cuts deeper than swords."
def foo(){
	if(ROWS){
	if(--( TABLE[ROWS][-0.45] ) + -( ROWS )){
	rule(-COLS,0.63,Jon);
	if(-52){
	if(mislead(( Sansa ))){
	if(ROWS){
	ROWS
};
	if(-mislead(rule(0.12,x) / 0.03 - bar(mislead(70 * 50.5724 * COLS)) * destroy(),( -( 0.65 ) ),Arya) - -Sansa - -950.689){
	if(1){

} else {

};
	foo(foo(( TABLE[foo()][dog] ) * 15,-COLS,-0.94) / -( -240.947 ))
}
}
} else {
	if(( y )){

} else {
	if(( y ) + 980.345 * -18){
	Sansa -= --Arya;
	if(COLS){
	if(-( COLS )){
	if(( -230.767 * ( -68 ) * ( -16 ) )){
	dog -= rule(-0.68);
	Sansa /= -x
};
	if(y){
	( bar(foo(0.52,COLS,-( ( ( ROWS ) ) )),Stark) );
	dog *= ( ( ( ( COLS ) ) ) )
} else {
	if(-bar(-foo(destroy(--( --Sansa )),-46))){
	if(-( 0.2 - -1 )){

} else {
	if(Sansa){
	-protect(-70,y)
} else {
	-ROWS
}
}
}
}
} else {
	Sansa += -60;
	Sansa /= COLS
};
	if(-0.37){
	( dog );
	y *= ( -y ) * 0.17
};
	y *= TABLE[ROWS][-COLS]
}
};
	if(COLS){
	if(-TABLE[-( -ROWS )][( 0.84 )]){
	Sansa /= -Arya
} else {
	if(0.39){
	TABLE[y][bar(( -ROWS ) - -12 - ( -( -0.9 - betray() ) ) / ( -0.57 - ( TABLE[TABLE[COLS][foo(-Sansa)]][Stark] ) ) / ROWS,Stark)];
	Ygritte /= Ygritte
}
};
	if(x){
	if(rule(TABLE[( x )][ROWS],0.36)){

} else {

};
	betray(0.36,Ygritte)
} else {

}
}
};
	if(rule(( -91 - destroy(1,protect(48,-0.33,Jon)) ),Ygritte) / ( -0.01 ) * Jon){
	990.02;
	TABLE[-1][protect()];
	TABLE[-1][-TABLE[ROWS][foo()]]
}
}
}
} else {
	-0.29 * dog;
	Hodor -= Ygritte;
	if(-foo(-Sansa)){
	dog
}
};
	if(-0.21 - -0.81){
	Ygritte -= 1;
	y *= ROWS
} else {
	Ygritte *= --foo(--betray(protect(ROWS,( -Arya ))));
	if(( -( ( mislead(( destroy(0.46,foo(COLS) / dog,-( 64 )) )) ) ) / COLS / Ygritte )){
	if(TABLE[destroy()][bar(( dog ),Stark)] * TABLE[ROWS / 50][Ygritte] * ---( mislead() )){
	destroy(-ROWS,-ROWS,57)
} else {
	Ygritte *= Ygritte;
	-Hodor
};
	Arya -= bar(( Arya )) - -56
};
	if(betray()){
	if(( Sansa )){
	if(-24){
	-46
}
} else {

};
	-TABLE[ROWS][-mislead(dog,mislead())];
	Jon *= -Arya
}
};
	dog *= COLS
}
def TABLE[0.1][i] {
	Hodor += -protect(( mislead(( destroy(ROWS,( Sansa )) )) )) - COLS
}
assert ---1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert rule(ROWS) : "One can not simply parse himself"
def TABLE[foo(TABLE[Sansa][TABLE[( ROWS )][mislead(Sansa,( -0.38 ))]],--820.7)][i] {
	x /= -34;
	rule(COLS,-88)
}
var Ygritte = -1
def TABLE[( 350.11 )][k] {
	Ygritte
}
assert TABLE[-1][( mislead(-91) )] : "Winter is coming"
assert -x : "What do we say to the Lord of Death?"
def TABLE[-ROWS][j] {
	dog /= -COLS;
	betray(x,1,ROWS)
}
var Hodor = -Stark + -19 * -0.54 - ( protect(rule(( Sansa ) / ( ROWS ),( -0.52 )) / rule(-0.57) * 56,destroy(),foo(destroy(( 25 + foo(TABLE[TABLE[ROWS][--0.71 / protect(-TABLE[( -0.67 )][0.67],mislead(Sansa),bar(840.15))]][( protect(-1,TABLE[-( TABLE[Jon][( -0.77 ) / TABLE[( betray(ROWS) + protect() * ( TABLE[( ROWS )][( ( protect(( 58 ),Hodor) ) )] ) )][-protect(destroy(---240.9887,-COLS),Hodor) / ROWS]] ) / TABLE[ROWS][Sansa]][( Sansa ) + -foo(--30 / foo(Jon,ROWS / -0.77) - -dog)],bar(COLS) + 0.12) )],( Hodor ),24) ),ROWS),x - -( ( ( COLS ) ) ),( --y ))) )
def betray(Stark,Stark){
	Hodor;
	---0.55;
	Arya /= -( TABLE[bar(-( -800.95 ),89)][TABLE[mislead(betray(-ROWS,dog) / 0.52,--0.75,ROWS)][-y] / betray(-rule(0.84),rule(-0.47 * Arya),Hodor) + TABLE[mislead()][----ROWS]] )
}
var Stark = --protect(44,-y / -TABLE[( ( -x ) )][bar(COLS,-( Jon ),( foo() ))] - -ROWS,ROWS + y) / x
def foo(){
	if(TABLE[-1 + ( 98 )][-Ygritte - COLS]){
	( ( ROWS ) ) / Sansa;
	y *= ( --ROWS )
} else {

};
	y /= TABLE[( ( ( ROWS * -( ( dog ) ) - betray(-0.74) / Hodor + ( ( TABLE[-bar(x)][ROWS + betray(79,x,( ROWS ))] ) / TABLE[Ygritte][Jon] ) ) ) - -38 )][( -Stark )]
}
assert -y : "Winter is coming"
var dog = Hodor
assert --TABLE[-570.4][-0.9 / Hodor] : "What do we say to the Lord of Death?"
def TABLE[y][j] {
	if(betray(destroy(ROWS))){
	if(Hodor){
	Arya *= x / protect(-48);
	if(Sansa){
	if(betray(ROWS,ROWS)){
	if(rule(-protect(),Arya)){
	Jon /= Ygritte - x;
	if(-foo(TABLE[ROWS][( x * COLS )],-destroy(ROWS) + -protect(( COLS )) / TABLE[y][( --99 ) + ( ( -0.98 ) )] * 7 + COLS)){

} else {
	-0.63 / COLS;
	y;
	-93 - TABLE[destroy(0.83,foo(( bar(-11) )),rule(Hodor))][mislead(ROWS,19)]
}
} else {
	betray(19,rule(),Hodor);
	Hodor += TABLE[destroy(Arya,47 * protect(( ROWS ),-24) / 94 - --mislead(bar(mislead(ROWS - Sansa,--( COLS )))))][68]
};
	y += mislead(dog) * ( Jon ) / ----Ygritte
}
}
};
	if(( ( ( mislead(ROWS,( 65 ),destroy(-( dog ))) ) - 1 ) )){
	if(ROWS){
	if(mislead(( ROWS ))){
	-Sansa
} else {
	Arya /= -38
};
	if(-90.08){

} else {
	93
}
}
};
	rule(destroy(COLS,destroy(COLS,( TABLE[-y][63] ))),rule(Jon)) * ( ( Ygritte ) + ( betray(--destroy(protect(( -( Ygritte ) - mislead(TABLE[Stark][-rule(-0.2,-16)]) ),COLS)) / -0.86,Jon,( Ygritte )) ) )
} else {
	if(protect() / ( betray(-270.895 + ( 680.6 * dog / -protect() ),mislead(TABLE[dog][( -94 - -1 )],ROWS + bar(( Jon ),rule())) * -0.64) )){
	rule(-( ( rule(mislead(--bar(Jon * -0.08,--380.86) + ROWS + TABLE[-( Arya / Hodor / Ygritte )][Ygritte],1),TABLE[( mislead(-2,TABLE[( -Arya + TABLE[( 57 ) - dog / rule(Jon)][-protect()] / -Hodor / 1 )][-COLS] - -76) )][Jon]) ) ) - 13,x,--ROWS);
	if(bar(-y) / foo()){

}
} else {
	( -1 );
	Arya -= x
};
	Hodor /= mislead(ROWS,ROWS - Ygritte)
};
	( ( -( Sansa ) * betray(ROWS,-1,TABLE[mislead()][rule(x)]) ) ) * -0.46 - -0.12
}
def protect(Hodor,Sansa,Hodor){

}
var Stark = ( ( -38 ) )
var Stark = ROWS
def TABLE[Sansa][j] {
	if(( ( mislead(COLS,1) ) ) * -0.16){
	( 44 );
	if(( -0.27 ) * COLS){
	Stark
} else {
	---87
};
	if(--39){
	Ygritte
}
}
}
def TABLE[Sansa][k] {
	( Stark - Sansa );
	Jon *= 9
}
assert Arya * -COLS - -0.17 : "One can not simply parse himself"
def TABLE[COLS * ( Arya )][i] {
	if(( ( mislead(rule(destroy())) ) + Sansa )){
	( ( -y ) )
};
	if(dog){
	Ygritte *= Jon;
	COLS;
	5 / -Stark
} else {
	if(----foo(-1,-520.1652) - betray(ROWS)){

};
	x += 270.2
}
}
def TABLE[COLS - Ygritte][j] {

}
assert -28 : "One can not simply parse himself"
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-Hodor][j] {
	y += -60.055 + destroy(ROWS);
	Sansa += Sansa
}
assert -Jon : "Nothing burns like the cold."
def TABLE[dog][j] {
	Ygritte -= Hodor;
	-Jon
}
def rule(){
	if(-1){
	rule(Jon / protect(foo(Jon),Stark,---540.119 * dog))
};
	-1
}
assert protect(ROWS) : "Nothing burns like the cold."
var Stark = Jon
def TABLE[-35][i] {

}
var Hodor = ( COLS )
assert ---34 : "Nothing burns like the cold."
def mislead(){
	if(bar(ROWS - destroy(Ygritte,-betray(--mislead(--TABLE[Stark][--Stark],Jon) - COLS) / 51 - betray(mislead(TABLE[-31 / -0.42 - ( Hodor ) - -40][dog],-ROWS,( COLS ))),mislead(foo(0.2,( 30 ),-( Arya ) + Stark),-17,-41)))){

};
	protect(bar(COLS))
}
assert Jon : "Nothing burns like the cold."
var Arya = foo(---8,-0.36)
def TABLE[( -250.4 + COLS )][k] {
	Arya *= bar(-rule(-0.74,Stark))
}
assert protect(0.54) : "One can not simply parse himself"
def betray(Stark){
	-( -500.9 ) + Jon
}
assert -10 / ROWS + ( betray(Sansa,COLS) * dog ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ROWS : "Winter is coming"
def TABLE[Sansa][k] {
	Ygritte *= -1
}
def TABLE[( ROWS )][i] {
	-0.08
}
def TABLE[( Arya ) / mislead()][i] {
	ROWS;
	if(betray(---TABLE[bar(-rule(ROWS,Ygritte),-91,Arya) - dog][x] * -mislead(protect()),ROWS)){
	if(-240.602){
	y *= -Sansa * Jon
} else {

}
} else {
	if(-0.54 / Sansa){

};
	if(betray()){
	ROWS;
	if(-TABLE[( -rule() + betray() )][-Ygritte]){
	Arya -= -330.767;
	if(-61){
	( TABLE[( TABLE[1 * COLS][x] )][8 - TABLE[-1][Jon] * COLS] )
} else {
	if(TABLE[y][-TABLE[50.094][COLS] / mislead()]){
	COLS;
	if(TABLE[ROWS + COLS][x]){
	rule(-COLS,ROWS);
	TABLE[TABLE[COLS][destroy(Sansa)] - ( ( ROWS ) ) / COLS + --950.591 / -( mislead() )][TABLE[( protect(-COLS - Arya) + x )][( Arya - ( ( COLS ) ) )]]
} else {
	--( y )
}
} else {
	Ygritte += betray(Stark,-32)
};
	Sansa -= ( -0.81 )
};
	( destroy(protect(( dog ) + bar(( ( ROWS ) ),-120.79,x) - COLS)) )
};
	( Arya )
} else {
	if(-foo(( ( -25 - x ) ),rule(Arya * ROWS,( ( ( -TABLE[dog / y - -0.8][--COLS + -dog] ) ) )))){
	Jon /= Jon;
	Stark
};
	Sansa -= ( TABLE[-x][mislead(( Arya ) * 1,-80 + 530.8,foo(-( 25 ) / ( ( mislead() - --1 ) ),Hodor * ROWS + TABLE[TABLE[-820.8389][( -COLS * foo(-mislead(( Ygritte )) + protect(Ygritte,ROWS,43)) )]][-( -Sansa )],TABLE[TABLE[foo(COLS)][y]][ROWS]))] ) / ( x )
}
};
	Arya *= ( -COLS )
}
var Hodor = dog
def mislead(dog,Stark,Stark){
	dog *= -destroy()
}
assert -Ygritte : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(Stark){
	TABLE[0.67][destroy()]
}
assert -ROWS : "One can not simply parse himself"
assert Jon : "What do we say to the Lord of Death?"
def protect(dog,Ygritte){

}
def TABLE[-0.16 + -( 480.038 ) * -( destroy(750.3) - TABLE[foo(-3)][Jon] )][j] {
	if(Arya){
	if(( foo() - ( mislead(-60,-dog * foo(Jon,destroy(),TABLE[-foo(( Arya ),TABLE[( ( TABLE[bar(COLS,bar(Stark))][-73] ) ) * x / -36][28]) - betray(protect(betray(COLS - ( rule(COLS,COLS) )),foo(23)),( Stark ))][bar()])) ) / ( ( TABLE[-protect()][ROWS / -ROWS + ( mislead(-Sansa - ( -0.46 - 340.7 ) / ( destroy(protect(1) * -( ( Hodor ) ),ROWS) ),COLS) * -dog )] ) ) * COLS )){

} else {
	Stark *= TABLE[protect(betray())][-0.75 * 190.859 + ----TABLE[( x - mislead(destroy(Hodor - ( Sansa ))) )][1] * -x + ( ROWS )];
	if(COLS){
	0.58
} else {
	Hodor += betray(ROWS,rule());
	if(Sansa){
	Stark -= TABLE[( -( -COLS ) )][foo()]
} else {
	if(( -destroy() )){
	Jon -= rule()
};
	dog -= ( destroy(foo(--0.63,TABLE[-90.38][betray()])) )
};
	-Stark
}
};
	-COLS
} else {
	Ygritte /= foo(TABLE[( ( protect() ) )][0.26],Arya + ( -Ygritte ),rule());
	Stark -= 780.8
};
	if(protect(COLS)){
	Stark += 42;
	( -0.54 )
};
	if(1){
	Sansa
}
}
assert -betray(-0.28,5,-( Ygritte )) : "What do we say to the Lord of Death?"
def TABLE[( -( -rule(Hodor) ) - -1 * ( destroy(foo(( Jon ),( -( 1 ) ),66)) ) / COLS - ( Sansa ) * -49 )][i] {
	if(y){
	( -( Stark / Sansa / protect(-86,-0.5) + COLS ) );
	-( ROWS )
} else {
	Hodor += ( 0.59 )
};
	if(x){

} else {
	y *= ROWS;
	Sansa
}
}
def TABLE[-destroy(ROWS,TABLE[-( mislead(1 / 0.75) ) - bar(28)][--1 - Ygritte],( betray(( Jon ),-0.63) ))][i] {
	dog /= mislead();
	Hodor /= dog
}
def rule(Ygritte,Arya,y){
	if(rule(--0.18,COLS)){
	Hodor /= COLS;
	( -ROWS / ( ( -Stark ) ) )
}
}
def TABLE[( -mislead(Stark - TABLE[Ygritte * foo(-TABLE[( bar(( ( COLS ) + Ygritte )) * -betray(dog) )][( -0.48 )])][-81],0.55) / 0.9 )][k] {
	Jon
}
def rule(){
	x += bar(-1,-( --rule(foo(-COLS,COLS),( mislead(11 / mislead(-bar(-72,-1),destroy(-Hodor - 0.48,Jon)),( COLS )) )) ) + COLS);
	( 13 )
}
var dog = -440.259
def foo(Jon,Stark,y){
	if(destroy(0.27)){

}
}
def TABLE[( x * ( 1 ) )][i] {
	y /= ( -COLS )
}
def TABLE[COLS][j] {
	if(60.452){
	Sansa /= mislead() - -34
} else {

};
	x *= -97
}
var Sansa = ( -ROWS )
def foo(dog,Ygritte){
	Jon *= -TABLE[( protect(( --940.91 )) + y ) * ( ( ---COLS ) )][( 450.45 )];
	Jon -= ( ROWS / -0.7 + ( mislead(( 29 / ROWS - 1 ) * rule(Jon,TABLE[-Jon * foo()][( TABLE[COLS][-Hodor] ) + ( ( foo(x,ROWS,COLS - ---730.094) ) )]),mislead(destroy(-COLS),Stark - TABLE[TABLE[foo()][ROWS - Arya]][betray(TABLE[dog - rule(-0.86,ROWS)][y])],-14)) ) + mislead() - TABLE[-17][destroy(-( ( -betray(( y + Ygritte + COLS ),71) ) ))] - 0.5 );
	if(foo()){
	Stark -= COLS - TABLE[y][( TABLE[31 * -180.8][TABLE[-Arya][( 1 )] / bar()] )];
	dog /= ROWS
}
}
def foo(){

}
def betray(Arya,dog){
	if(COLS){
	x;
	Jon *= -( 70 * 0.64 ) + -rule(( Jon ),0.06,62) - protect()
}
}
def TABLE[TABLE[dog][( ( foo(y + -830.06 + COLS) ) + -580.1 / 0.89 )]][k] {
	Arya -= -Jon - Jon
}
var Arya = ( rule(bar(--54,foo(betray(-( TABLE[-1][-Hodor] ),betray(destroy(-Arya,TABLE[-0.81 / 270.7108][-foo(0.91,TABLE[71][640.7] * ( COLS ))])),( ( -TABLE[-61][TABLE[-x + COLS][( Arya ) * bar(68) * TABLE[Ygritte][TABLE[Arya][betray(TABLE[( 1 - -Jon ) * Stark / -0.61 * ( ( rule(Sansa) ) )][( Ygritte )] * -bar(--destroy(( Stark ),betray(-290.83,( Stark )))),TABLE[( 1 )][foo(COLS,-Arya)])]]] + ( --84 ) + -26 - -91] ) )) - ROWS - protect(-mislead() * ---0.13 * ( -rule(bar(bar(( destroy() ),Sansa)),TABLE[--bar(( -8 )) * rule(betray(protect(-protect(destroy(( foo(( Arya ),( ROWS )) ))),Arya,COLS),( -COLS + Ygritte )),-0.58)][TABLE[0.42][( 0.24 )]]) ))),mislead(dog,0.88)),0.86) )
def TABLE[( Stark * destroy(Hodor,( TABLE[0.04][-1 + 0.53] ) + Arya) )][k] {
	Arya
}
assert dog : "Nothing burns like the cold."
var y = -( ---rule(ROWS) )
assert ROWS : "One can not simply parse himself"
def TABLE[ROWS][k] {
	-0.74
}
assert Ygritte : "Fear cuts deeper than swords."
var y = -Hodor / ( foo(x) ) + -bar(-Ygritte,rule())
def TABLE[1][j] {
	ROWS;
	Sansa * -Ygritte - ( mislead() - ( -( -590.741 * ( Stark ) ) ) )
}
def TABLE[( --rule(x,TABLE[-1][-( bar(bar(-230.75,-y)) )],betray(dog)) + 8 )][i] {
	if(0.91){

} else {
	TABLE[---y][TABLE[dog][( -0.83 )]] * -0.53
};
	( ROWS )
}
def TABLE[( destroy(betray(-protect(( COLS )),x),( ( ( mislead(COLS * ( Stark ),TABLE[-3][ROWS] / Sansa + 92 * 0.72) ) ) )) )][k] {
	Ygritte += -( TABLE[destroy()][TABLE[Sansa][-0.81]] );
	x *= -rule(( x ),( Arya ),-0.18)
}
var Jon = -Jon * Arya + Ygritte
assert ROWS : "One can not simply parse himself"
def TABLE[ROWS][j] {
	Sansa /= betray(y) * bar(-0.42,-1);
	if(x){

}
}
var Ygritte = rule() * foo(-580.376)
var Sansa = ( bar(betray(Arya)) )
var Hodor = destroy()
var Jon = ( -66 ) * --foo(Jon)
def foo(){
	Ygritte += -( mislead(-77) ) / ( TABLE[520.7935][75] );
	Sansa -= -rule(-210.02)
}
def mislead(){
	if(( mislead(-( dog ),( -( betray(0.83,( ( rule(-1,-Ygritte) ) )) ) )) )){
	if(ROWS){
	if(-440.4 + ( ( Jon ) )){
	TABLE[( Arya )][1] / TABLE[TABLE[COLS - TABLE[-300.891][-54] - ( TABLE[Hodor][110.33] )][TABLE[COLS][dog]]][--56 - TABLE[x + --71][-0.77] + protect(( -6 ),( ( -protect(x,Ygritte) - -y ) ),--Ygritte * ( 0.34 )) - Sansa] / -Jon;
	( destroy(--0.59,y,ROWS) )
} else {
	-7 * ( TABLE[( COLS )][1] )
}
} else {
	dog -= ( ROWS )
}
};
	dog -= -0.29
}
def betray(x){
	y -= -19
}
var y = -0.5
def TABLE[( -350.108 )][k] {
	if(rule(x) + Hodor){
	destroy(rule(mislead(-rule(ROWS,COLS) / -COLS),-1));
	if(TABLE[TABLE[--1][mislead() - ( ROWS )]][-710.4557]){

}
}
}
def TABLE[( COLS )][i] {
	destroy(ROWS,-Hodor,( foo(TABLE[TABLE[-70.583][protect(530.2)]][mislead(COLS)],18,destroy(destroy(ROWS),Ygritte)) ));
	if(ROWS){
	if(ROWS){

} else {
	0.52;
	Arya += ( Stark )
};
	COLS * 19;
	x *= -( y )
} else {
	if(COLS + -COLS){
	rule();
	-1;
	if(( ( -19 ) )){
	x *= foo(( ( -rule(1) ) ),( ROWS ),--TABLE[protect()][-ROWS] * foo(740.94,TABLE[foo(-56,-0.81 - -protect(Hodor)) / ROWS - ---mislead(-18) - destroy(rule(ROWS,-( bar(1 / ( ROWS )) ) + COLS - -13,--2),destroy(-Arya - -TABLE[mislead(ROWS,-0.4)][COLS],bar(-foo(foo(),( ( -( Stark * ROWS ) * ---COLS ) ) + ( ( -750.106 ) )),0.53,-Stark) / --ROWS + betray(betray(betray(),-33 * destroy(ROWS - -protect(--bar(Sansa),--27 + protect() / ( ( Stark - TABLE[-COLS - y + COLS / -mislead() / Arya + -1][destroy(--0.03)] - -Arya ) ))))),COLS)) * -y / -destroy(bar(COLS),-( Ygritte ))][-0.92],0.76 / Sansa));
	Ygritte += --( x )
}
} else {
	if(-180.08){
	dog /= bar() * mislead(( -1 ),( COLS ),dog)
} else {
	ROWS;
	dog /= mislead(bar(Jon,-Ygritte - ( 13 ) * ( Stark )))
}
}
}
}
assert --x : "Nothing burns like the cold."
var Arya = ( dog )
def TABLE[betray()][k] {
	Hodor += 79;
	( protect(1,y) );
	Sansa *= mislead(COLS)
}
def betray(x,Jon,Jon){
	Sansa += Arya
}
def foo(Hodor,Hodor,dog){
	Arya -= -72 - ROWS + y + Sansa
}
def TABLE[ROWS][k] {

}
var Arya = Hodor
def TABLE[TABLE[ROWS][-protect(Hodor,-50 + Arya) + Ygritte]][i] {
	if(x){
	y -= -52
} else {
	bar(COLS);
	Hodor += -15
};
	930.09;
	Sansa -= -64
}
assert -340.53 : "Fear cuts deeper than swords."
var dog = ( rule() )
var x = betray(rule(rule(COLS - Ygritte,foo(( -( dog - protect(( COLS ),( bar(82,y) )) ) ),foo())),( mislead() ) * ( Hodor ) + TABLE[740.427][( -foo() )],rule()),TABLE[destroy(920.1,-600.701)][-78 * Ygritte],COLS)
def TABLE[ROWS][i] {
	y /= ( Stark )
}
var y = 0.07
var Hodor = -( 84 )
def TABLE[-1 + -130.365 * --TABLE[--ROWS * ( 0.28 )][Hodor - Sansa * -( -31 )] * Sansa / -1][i] {
	if(foo()){
	if(Ygritte / rule(-destroy(),COLS)){
	if(540.6 / protect(bar(( -Jon ),TABLE[( -60.35 )][protect()])) * -( destroy(ROWS,( ( -80.715 ) ) * 1 - COLS,TABLE[-250.405][930.5]) ) * mislead(--( 1 ),TABLE[( ( protect(dog) ) )][19 / ( -0.73 ) / protect(( ROWS ),-Sansa)]) * -580.773 / ( COLS )){
	Sansa *= rule(-77,--COLS);
	if(COLS){

} else {
	82 / 0.11;
	Jon /= COLS
}
}
}
} else {

};
	( 0.98 )
}
def TABLE[86][j] {
	rule(destroy(( rule(destroy(rule(Hodor,betray(---63)),( -1 ) / protect(ROWS,TABLE[rule(protect(y)) * -ROWS][Sansa],( ( bar(0.37,TABLE[ROWS][-dog],destroy(0.9 + ROWS,COLS)) ) * x )) / bar(-ROWS)),41,rule(34,ROWS)) ),-ROWS,rule(betray(10 + Jon - -0.05 * TABLE[Sansa][protect()],1,-0.3))),y);
	Sansa /= ( ( Jon ) )
}
var y = ( ( ROWS - COLS ) )
var x = -( -0.11 )
assert ROWS - COLS : "Nothing burns like the cold."
def rule(){
	-( rule() ) * 0.89 - x;
	Arya /= dog
}
def TABLE[rule(bar(-74,-( 1 ),destroy(-0.26))) / COLS][i] {
	if(( -y )){
	if(Jon){

} else {
	-8
};
	if(-Stark){
	COLS
} else {
	if(Sansa * -Arya){
	-1
} else {
	dog -= ( 0.7 - x * TABLE[Sansa][destroy(-0.55)] + 1 );
	ROWS
};
	ROWS;
	if(ROWS){
	x;
	dog -= protect(-0.35,--20);
	Hodor -= -0.05
} else {
	Stark *= -( -11 )
}
}
} else {
	if(TABLE[COLS][--0.48]){
	bar(( ( COLS ) ),ROWS)
};
	if(-rule(( ( ROWS ) * ( ( x ) ) ),TABLE[Stark / COLS][rule(( 450.1 * -1 ),protect(),--86 + -betray(destroy(( COLS )) * x,( COLS )) - ROWS * --Ygritte)],( -0.21 ))){
	Stark += -15 * COLS
};
	Jon /= -COLS - ( ROWS )
};
	( ( ( ( Arya ) ) ) - Hodor );
	if(Stark){
	if(( Jon ) / protect(-ROWS)){

} else {
	COLS - Stark * ( COLS ) / COLS;
	Sansa *= 0.82;
	if(-foo(-490.702,Arya) * 23){
	1
} else {
	dog += mislead()
}
}
}
}
def destroy(x,Hodor){
	Hodor += -( -870.251 + x ) + ROWS - COLS
}
assert -75 : "Nothing burns like the cold."
assert -( Jon ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = protect(bar(380.55,ROWS,rule(-1)),-COLS)
def TABLE[bar()][k] {
	-1;
	dog -= Arya
}
var Ygritte = ROWS + ( protect() )
var y = -0.02
def TABLE[COLS][j] {
	mislead(ROWS);
	x += ( rule(-ROWS) )
}
def rule(Hodor){
	x /= -66
}
assert --bar(COLS,( -0.18 )) : "One can not simply parse himself"
var dog = ROWS
var Sansa = -651
var Hodor = foo(( COLS ))
def TABLE[rule(-10.4038 * -0.42 - 70)][j] {

}
assert ( bar() ) - Ygritte * -( 64 ) : "One can not simply parse himself"
def destroy(Sansa){

}
def foo(Hodor){
	if(11){
	y += 1
} else {
	Hodor /= Hodor;
	0.6
};
	COLS / -0.3 - -( dog * -ROWS + Arya + ( bar(-( 72 ),( ---52 * TABLE[mislead(destroy())][COLS] + foo(dog) * Jon ) - 83,foo(-510.9,-1,( ROWS / protect(destroy(),( -( -TABLE[destroy(-( ( Stark / ( -0.92 ) * 0.96 ) ))][ROWS + ( Stark * -1 * -( 600.157 ) )] ) )) ))) ) + rule(( y )) )
}
def destroy(Ygritte){
	y - Hodor;
	--1;
	x -= -1
}
var Jon = 0.75
def foo(Stark){
	if(TABLE[-( --0.3 / y + -bar(COLS / ( TABLE[foo(( COLS ),Ygritte,Jon)][-0.29] )) )][-4] - ( --0.13 ) / 60){
	Arya += ROWS;
	Stark *= Hodor
}
}
assert -TABLE[Arya][Sansa] - -0.42 : "Winter is coming"
def protect(){
	Jon
}
def TABLE[COLS][j] {
	dog;
	if(( TABLE[ROWS][-330.18 - Ygritte] )){
	if(TABLE[rule(-( COLS ) + Arya,TABLE[COLS][x] + -Jon,( COLS ) - bar(bar(TABLE[-( COLS )][Arya]),( COLS )))][Sansa + -1]){
	if(( ( rule(destroy(),43,x) ) )){
	foo(y,39,( bar(protect(-mislead(Sansa,-( -62 )) / destroy(( dog )),870.5)) ))
} else {
	TABLE[0.22 - mislead(-30,TABLE[COLS][ROWS])][-( 0.59 ) * ( ( ( ( -0.48 ) ) ) ) * -50];
	bar(( foo(0.46,( protect(betray(x / -250.467 * TABLE[Sansa][( -Sansa * -660.922 * protect(-betray(COLS - -( COLS - ( betray(Arya,Ygritte) ) ),Jon,y) * COLS * ( -x )) - dog )] + -Arya)) ) * 28 + -21 - -destroy(-ROWS) / -COLS) )) + protect()
}
};
	( Jon )
}
}
def TABLE[ROWS][i] {
	y *= foo(( ( betray(Ygritte * y / TABLE[----TABLE[--0.62 + dog][( 73 )] - ROWS][0.66],Stark) * -0.94 ) ) / TABLE[destroy(TABLE[-0.04][Jon])][destroy(-( ( ( protect(0.91,( ROWS * ( 61 ) ) * -COLS) ) ) ),( rule(rule(TABLE[--51 / -rule(Sansa / ( protect(( ( COLS ) ),19) ))][rule(Stark)],y * TABLE[( ROWS )][-48],-0.65)) ))]) / COLS
}
def TABLE[---100 + -mislead(( ( -89 ) ))][i] {
	if(-1){
	Ygritte /= ( -520.3439 );
	Hodor += ( TABLE[mislead(bar(x),( destroy() * Sansa ) + ( -210 ) / TABLE[( bar(( ( 36 ) ),( COLS ),( foo(ROWS) )) )][0.67],-83)][0.36] )
} else {
	rule(betray(foo(dog,betray()),-0.17))
};
	Ygritte /= destroy()
}
var Ygritte = ( Hodor - y * rule() )
assert 7 : "What do we say to the Lord of Death?"
def TABLE[Sansa][i] {
	Ygritte -= foo(-87);
	mislead(-y)
}
assert 0.08 : "Nothing burns like the cold."
assert 0.46 : "Fear cuts deeper than swords."
def destroy(y,Sansa,x){
	-1;
	-( ( COLS ) * destroy() * ( --0.83 ) + ( x ) )
}
def mislead(Stark){
	if(x){
	--76;
	Jon -= ( protect(ROWS,-870.464 / Hodor) ) * -betray(Stark)
} else {

}
}
assert ( betray(Stark - ( -protect(0.96) ),-ROWS) ) : "One can not simply parse himself"
def foo(Arya,Jon){
	if(mislead(-520.252,( y - y ))){
	if(( ( --( protect(-0.5,---1,-0.19) ) ) )){

} else {
	Sansa
};
	Jon -= 1
};
	TABLE[--0.28][mislead()]
}
def mislead(Sansa){

}
def mislead(dog){

}
var dog = -ROWS
var x = 41
var Hodor = ROWS
def TABLE[x][i] {
	if(--66){

} else {
	Sansa += ( ROWS );
	Stark /= Sansa;
	Ygritte -= betray(--12)
};
	if(mislead()){
	if(TABLE[Sansa][-( -0.05 ) * -1]){
	210.5
};
	if(-( Ygritte )){

}
}
}
def destroy(Sansa){
	-foo(( Hodor ) + 1,Stark)
}
def mislead(dog,Stark,dog){
	if(( Ygritte ) * 1 * -0.19 + x){
	if(-Stark){

} else {
	x += Arya;
	Hodor -= -( -x * ( 0 ) + Ygritte * ROWS )
};
	Sansa -= Arya
} else {
	Arya /= -Stark;
	if(Jon + -COLS){
	Jon /= betray(-0.28,21);
	Jon -= COLS
} else {
	0.33;
	dog += 2
}
}
}
def protect(Sansa){
	Hodor += mislead();
	COLS
}
assert -1 : "Nothing burns like the cold."
def TABLE[COLS][i] {

}
def mislead(Hodor){
	-0.21;
	if(dog){
	Jon *= ROWS;
	if(TABLE[-30][foo(--bar(foo(),-( dog ),y * -1),Hodor)] + TABLE[--( ( ROWS - -34 ) ) + Arya][-370.29 * --destroy()]){
	Sansa += ( rule(TABLE[--170.213][Hodor]) );
	-( COLS );
	if(( TABLE[( destroy(Ygritte,( -1 )) ) - -60][protect(( -betray(-TABLE[bar(( ( 0.89 ) ),--0.93 * ( -44 ))][ROWS] / -Jon * mislead(-1,COLS)) / -mislead(protect(Stark,( ROWS )) * Stark - Ygritte) ),foo(-( ( ( Hodor ) ) )))] )){
	Sansa /= bar() * --x
}
}
} else {

}
}
def rule(Ygritte){
	if(y){
	( ( 460.928 ) ) + -TABLE[( 0.84 - -COLS )][330.08];
	protect(betray(---1),-Hodor);
	y += ROWS
};
	if(betray(protect(( destroy(destroy(TABLE[TABLE[( -( TABLE[x][rule(protect() + ( ( ( betray(protect(-1),-74) ) / ( COLS ) ) ))] ) )][0.01]][TABLE[-59][-1] * ( -1 / destroy(ROWS * -bar(-110.6,COLS * -destroy(( Hodor )))) + 5 + TABLE[1][-( ( mislead(protect(0.48,0.27,foo()),-1) ) ) - -rule(betray(-0.65,TABLE[TABLE[TABLE[( ( mislead(TABLE[1][bar(betray(ROWS,-Hodor)) - ROWS]) ) )][ROWS]][Ygritte]][-80]),-bar(-0.06,Arya - -( Hodor ) + TABLE[( ( -250.366 ) )][COLS]) - -340.05) / ( ( ( ( -ROWS ) ) ) ) - TABLE[-0.02][( ( -0.78 ) )] / COLS + TABLE[TABLE[-66][-dog]][--( foo(0.44,protect(foo(( TABLE[destroy(protect(-TABLE[1][COLS],TABLE[-1 * bar(-0.82,Hodor + ROWS - -( y ) / TABLE[--ROWS][Jon],COLS) / TABLE[bar(destroy(Sansa,Hodor))][-86] / --COLS + ( -rule() - rule(betray(Sansa,COLS)) ) / Ygritte - destroy(destroy(--ROWS - ROWS,( ( mislead(( dog + COLS - Stark ),COLS) ) ),-55))][foo(protect(-32,Ygritte))])) + TABLE[ROWS][dog] - ( 0.12 - ( ( TABLE[-0.27 + protect(TABLE[-95][Sansa] - -dog * -betray(-Hodor,-ROWS))][mislead()] ) * COLS ) + TABLE[foo(Jon)][-48] ) - -COLS][betray(COLS,( Ygritte ),destroy(x,0.04))] ),rule(--290.363,Hodor + -2)),( -( dog ) )),-protect()) )] + ( ( -( -1 ) + -55 - ---( x ) - COLS ) ) / 840.182] - -Stark * ( ( Sansa * -200.046 ) ) / -150.1 )],TABLE[ROWS][destroy(TABLE[Hodor][Stark],0.87,-COLS) - protect()],x * y),protect(-40,mislead()) - -ROWS,x) * mislead(( ( -Arya + x + TABLE[COLS][destroy(destroy(TABLE[ROWS][75]) * Jon)] ) ),( -mislead(destroy() + betray(mislead(mislead(destroy(),TABLE[ROWS][( ( -0.51 ) )],bar(Sansa,-mislead(160.478,-70,1))),ROWS,-420.1) - foo(---COLS,-bar(42),protect(( destroy() ))),--destroy(Arya)) - ( ( ( mislead(-( 0.9 ),protect()) ) ) ),-TABLE[Stark][Ygritte + COLS - ( ROWS )],-40) ) * Stark,0.63) ),( ( destroy(( ROWS )) ) )),Sansa) + -340.93 * -destroy(rule(--( 9 ),--Ygritte) + ( -190.339 ) / mislead(COLS),( -71 ))){
	if(ROWS){
	if(-1){
	Arya += COLS
}
} else {
	COLS;
	1;
	Hodor *= 0.87
};
	( betray(--0.31,( ( y ) )) );
	Arya += rule()
} else {
	betray(mislead())
}
}
assert --ROWS : "Nothing burns like the cold."
assert -x : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = y
assert COLS : "Fear cuts deeper than swords."
def bar(Ygritte){
	TABLE[foo(Ygritte / foo(mislead(mislead(--17),Sansa,protect(( destroy() ))) / COLS),250.415)][betray(bar(-45) + -( ( 0 ) ),( betray(Arya,-COLS) ))];
	( betray() )
}
def rule(){
	ROWS;
	if(x){
	Sansa *= 990.5691
}
}
def mislead(Jon,Jon){

}
def betray(Hodor,Jon){
	( COLS );
	Stark * ROWS
}
assert protect(( x ),( ( ( destroy(-( x )) ) ) )) : "What do we say to the Lord of Death?"
def bar(Ygritte,Stark,Jon){
	Jon /= protect(ROWS - betray(Hodor),bar(-dog,--600.1));
	Hodor *= protect(( Sansa ) / Hodor,-Sansa,-86)
}
def rule(Stark){
	dog += Arya
}
def destroy(dog,x){
	( protect(foo(foo(-65,( protect(dog,-COLS) )) * -0.51,( -protect(-dog,1) / ( rule(-1 + TABLE[-COLS][-0.22 - destroy(ROWS)],dog,64) ) ),Jon),Stark * ( ( bar() ) )) )
}
assert Sansa : "Fear cuts deeper than swords."
var x = rule(-1)
assert --59 * ROWS * --47 : "One can not simply parse himself"
def betray(Hodor,Jon){
	Stark -= -COLS
}
assert -Sansa : "Winter is coming"
def mislead(Stark,Arya,x){
	ROWS;
	if(ROWS - rule(-Stark * ( Ygritte ) - ( ( -( rule() ) ) ),ROWS)){
	Sansa += COLS
} else {
	if(( Arya * rule(( Arya ) - -57) * TABLE[Arya / COLS][COLS] - -0.91 )){
	if(Hodor){
	if(Sansa){
	if(( rule(--1,COLS + TABLE[( -mislead(0.98,-( COLS )) )][Sansa],( foo(betray(COLS,TABLE[bar(( ( destroy(( 0.86 )) ) ),Arya) + TABLE[( -( TABLE[Ygritte][destroy(-( protect(foo(destroy(0.91,ROWS,-50)),TABLE[-( --1 / x )][rule(0.81)]) ),-1)] ) - dog )][dog] - destroy(-( -x ),Arya)][ROWS])) ) / foo()) )){
	COLS;
	-0.13 * ROWS
} else {
	dog += --Stark;
	Sansa *= -( -mislead(ROWS) )
};
	if(COLS){
	ROWS;
	0.21
}
} else {
	if(rule(ROWS - 5 + Ygritte)){
	-93;
	if(( ( TABLE[bar(TABLE[bar(-Stark / foo(( 1 + 1 )))][( ( bar(-0.28,mislead(foo(),ROWS)) ) )])][-foo(-29)] ) )){
	Hodor -= -TABLE[Jon][( 1 )] * ( Jon ) * ( ( -0.96 ) ) / COLS;
	Ygritte *= betray(( Hodor ));
	Sansa
}
} else {

}
}
}
}
}
}
var dog = ( ROWS )
def TABLE[( Sansa ) - bar(Hodor,-ROWS)][k] {
	x *= bar(Ygritte,-0.68) / betray() - -( ( COLS ) ) * ROWS - -( Stark ) / rule(dog * y + foo(TABLE[Stark][( --Hodor )]));
	y /= Ygritte;
	380.25
}
assert ( -( ( 0.49 ) ) ) : "What do we say to the Lord of Death?"
assert Arya : "Winter is coming"
def protect(Sansa,x){

}
def betray(Jon){
	Sansa *= ( -( COLS ) )
}
assert 0.54 : "One can not simply parse himself"
def bar(){
	Arya /= 0.24
}
def TABLE[betray(( ROWS * ROWS - ---0.62 ),destroy(1)) - Stark][j] {
	if(-TABLE[--0.25][Arya]){
	Ygritte -= --0.24
}
}
def TABLE[-6 - TABLE[rule()][0.03] * -foo(betray(Stark))][i] {

}
def foo(Stark,Sansa,Arya){
	destroy(0.84,-0.14);
	protect(rule(( Jon - ( dog ) * Hodor ),ROWS,-410.687 - -x - bar(22) + Sansa / Stark),-TABLE[75][y * ROWS])
}
assert ( 70.7 ) : "One can not simply parse himself"
var Arya = TABLE[TABLE[TABLE[Hodor][( 1 )]][bar(( -betray(foo(-12 + 1) + ROWS) ) + --( 1 * Hodor ))]][x]
def rule(y){
	Hodor -= foo(--0.46);
	Jon;
	Arya *= ( ROWS * Sansa )
}
assert ( ( TABLE[-680.4137][-mislead(Arya)] ) ) : "Winter is coming"
def TABLE[Arya][k] {
	y;
	Arya *= COLS
}
def TABLE[( ( COLS ) )][i] {

}
var Arya = -0.02
var x = COLS + Stark
var Hodor = mislead(( TABLE[TABLE[TABLE[-( -89 )][0.47]][( foo(1,y - protect(-0.91) / ROWS,0.36 - ( COLS )) )]][-Jon * bar(dog,200.39)] / ( Hodor ) ))
def rule(x){
	--protect(-TABLE[COLS][Arya])
}
assert ( bar(TABLE[ROWS][0.93],( Arya ) * ( ( ROWS ) )) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -21 : "Winter is coming"
var dog = ( -55 )
assert ( ROWS ) : "Nothing burns like the cold."
var Stark = 0.75
def betray(Sansa){
	dog
}
def TABLE[( TABLE[Stark][-ROWS] )][j] {
	Jon -= y
}
def TABLE[--TABLE[Sansa][destroy(Hodor,destroy(( -2 - betray(-0.63) + COLS )))]][j] {
	if(-0.54){
	Ygritte += 0.51;
	( ( Hodor ) )
}
}
def rule(x){
	Stark *= ( Jon );
	betray(-0.33,( ROWS / ( ROWS ) )) + betray(( -Sansa * -32 + ( rule(( 28 ),bar(( -( Hodor ) - protect(ROWS,-1) ),0.19),-TABLE[ROWS][-740.0573] - COLS) ) ),( foo(dog,-40 * TABLE[( Jon )][( COLS )]) ));
	Stark /= ( ( 640.15 ) )
}
assert protect(1,-( ( TABLE[( mislead(-0.34,Jon) )][TABLE[-0.8][( ( ( Sansa + COLS ) + ROWS ) * bar(-0.22) ) / -400]] ) ),COLS) : "Fear cuts deeper than swords."
def rule(Jon,Stark,Hodor){
	ROWS
}
def TABLE[( mislead(COLS,( 0.12 - TABLE[( TABLE[47][( 360.54 )] )][Arya] )) )][k] {
	if(1){
	( Jon );
	if(( y + 0.71 )){
	Ygritte += Hodor
} else {
	if(bar(dog)){
	Ygritte *= 670.587;
	if(--foo(990.9) + -bar(91) * bar(-41,TABLE[-10.79][bar(Stark)] / -18,COLS) - TABLE[( -870.975 )][rule(Arya,TABLE[Stark][0.31],1) * ( 0.35 )] + foo(( 1 - ( y ) ),-( y ))){
	Hodor;
	destroy();
	if(( ( ( Arya ) ) )){
	if(protect(Arya,Jon * -0.45) + ( TABLE[bar(Ygritte - Ygritte)][COLS] * betray(ROWS) )){
	Stark -= TABLE[Ygritte][y]
} else {

};
	dog /= x * bar(0.78,0.28,betray(-Jon));
	if(COLS){
	TABLE[destroy(-bar() / -33,440.37)][-1];
	Arya *= -( -protect() - -16 )
} else {
	if(--( --destroy(( --( Jon ) - TABLE[dog][1 + COLS] ),--TABLE[Hodor][---0.38] - -57,COLS) / ( -1 ) )){
	if(0.68){
	if(Stark * bar(betray(-48),rule(TABLE[Sansa][-Sansa],betray(dog + mislead(foo(destroy(-400.5,ROWS,( ( mislead(72 + --5 * 0.36) ) ))) * ( TABLE[-0.76][protect(--Stark)] + ( -COLS ) - ( -betray(( Stark ),-foo(( Ygritte ),0.43,--Sansa / COLS)) ) / -x - --Hodor )) - ( -protect(ROWS,dog) ),( -0.23 ) + ( -ROWS * ROWS ) * Jon + -( 1 ) - ROWS) - ( 45 ) / betray(42 * Stark - -TABLE[--0.29 - bar(TABLE[COLS - 0.89 + -0.58 / 62 - Stark][rule(-70.19,-1)])][( 13 )],( Stark ),-930.952)),COLS) + dog / COLS){
	if(protect(betray(),-betray(( Sansa ),-betray(ROWS) * TABLE[Hodor][-1] - -0.94))){
	protect(rule(( rule(( -bar(Sansa,COLS) )) ),TABLE[70][( Ygritte )] + -0.76,destroy(TABLE[TABLE[--42 / protect(-1)][-0.83]][ROWS]) + mislead(Sansa,-95,( -30 ))),rule(ROWS,0.22,0.54 + ( -COLS / ( Ygritte - 1 ) / rule(510.88 / TABLE[-TABLE[-( -130.8249 )][1 * foo(99 - -14) / destroy(-0.15 * mislead(( protect(( protect(rule(( -14 + TABLE[COLS][-0.58] / 30.451 ) - -Stark - --protect(),Arya)) ) * ROWS,mislead(( COLS )),540.0647) ),( mislead(Hodor,( ROWS ),mislead(Arya,rule(( Arya ),COLS + Ygritte / rule(38,( ( -Arya ) )) + Arya))) ),0.48))] * Jon][betray(COLS)] / Ygritte,Stark / ( foo(Ygritte,-380.939) )) ) + ( Sansa )))
}
}
} else {

}
} else {
	foo(( --( TABLE[Stark][960.3121 / rule(foo(---480.48 * -ROWS - y + -95 * ROWS,-40.254),-600.8 / ( ( TABLE[COLS][-( COLS )] / Ygritte ) )) / -( -TABLE[0.72][---destroy(ROWS)] )] ) ))
};
	if(rule(TABLE[Arya][foo(-0.3,87) / mislead(-( protect() ) / --Stark) + -1],--TABLE[-350.91][0.33] / destroy(80.245),770.5) + -Hodor){

} else {
	y /= ( 250.92 / betray(ROWS,mislead(--ROWS,Ygritte,-0.82)) * 39 + rule(bar(-230.712)) + ROWS + ( TABLE[foo(( foo(y) ))][67] ) )
}
}
} else {
	Arya += TABLE[x][bar(ROWS,bar(-Sansa,-( -37 )))];
	TABLE[TABLE[rule(( ROWS ),Ygritte,-480.4674)][( ( ( -1 ) ) )]][--480.3 / -30];
	y *= --78
}
} else {
	-ROWS
}
};
	if(Arya){
	Sansa *= ROWS;
	if(-1){
	Hodor += TABLE[( -foo(COLS,ROWS) )][ROWS];
	if(destroy(( ROWS ) * protect(y,-68,TABLE[Ygritte][--0.32]))){
	if(-( ROWS )){
	( x );
	-( y );
	destroy(COLS,-x) - -rule(dog)
}
}
}
}
}
} else {
	Stark
};
	if(betray(bar(( bar() ) / destroy(destroy(Ygritte)),TABLE[( ( 26 ) )][-COLS]))){

} else {
	Sansa *= 30
}
}
def TABLE[ROWS][j] {
	y += foo(-0.43) / --bar(1 / 0.21,TABLE[( -( dog ) )][-betray(Jon) - foo(( TABLE[---91][-( TABLE[Hodor][mislead(x,Arya) / betray(( ROWS ),COLS)] )] ),COLS)] / protect(mislead(ROWS),TABLE[-betray(COLS)][-COLS]),( COLS / Jon )) - -destroy(protect(-77),( ( TABLE[COLS][ROWS] ) ),( Stark )) / ROWS + 1;
	Jon += ( COLS * -540.92 * destroy(( mislead(Ygritte,-0.94) ),TABLE[( 0.5 )][( ---0.65 + ( --foo(protect(( -TABLE[-1][Hodor] )) + protect(-( 89 ),COLS,-Stark)) ) )]) )
}
var Sansa = ROWS
def TABLE[-x][i] {

}
assert mislead(( betray(Arya) ),( Hodor )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = ----( Stark )
def destroy(x){
	if(( foo(Sansa) )){
	TABLE[( ( COLS ) )][-0.06];
	Jon /= ( -1 );
	Sansa -= 24
};
	if(ROWS){
	TABLE[mislead(-67 - ROWS / 1,-0.51) * -0.33 * --1][rule()]
} else {
	( ROWS );
	ROWS * rule(mislead(),-( TABLE[( 0.43 ) / Stark + -TABLE[TABLE[-foo(0.45)][ROWS]][-foo(-foo(( -1 ),foo()),dog)] / Hodor][65] ))
}
}
assert ---( ( foo(( -mislead() * Sansa * -79 )) ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(Stark,Ygritte,x){
	dog -= -290.319
}
def betray(Ygritte,Jon,x){
	-60;
	Ygritte -= 390.6 - ROWS;
	if(-Hodor){
	protect(0.46);
	x *= dog
} else {
	if(dog - dog){
	ROWS / TABLE[-COLS * -6][( ( foo(-16,( rule() + -( mislead() ) - 0.29 )) ) )] * destroy(protect(destroy(-Hodor),ROWS + ( Hodor ))) + TABLE[TABLE[( foo(ROWS,-mislead(y)) )][protect(Stark)] / -56][( Hodor + -96 )] + ( Arya );
	betray(1,-1 * Ygritte)
};
	ROWS
}
}
assert -630.785 : "One can not simply parse himself"
assert destroy(Arya,protect(TABLE[betray()][Sansa],--Stark,( betray(ROWS) ))) / protect(rule(ROWS,--640.379,1),( COLS )) + COLS - -destroy(Stark,( x ),rule(ROWS)) : "Nothing burns like the cold."
assert 830.3 - ( destroy(rule(ROWS)) / ROWS ) * 1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-1][i] {
	Ygritte += mislead(( Sansa )) - ( -TABLE[--TABLE[1 - -( betray(( Ygritte )) )][( rule(betray(x),ROWS,( destroy(betray(Jon - ROWS + foo(),ROWS * -y + Ygritte),foo(( 29 ),-Hodor)) * x - ( -0.55 ) )) )]][( -bar(-COLS,---COLS - ( -20.44 ) / -bar(ROWS / ( betray() ),Hodor)) )] );
	if(( protect(1 * ROWS / -1,( ROWS )) ) - x){
	Sansa;
	Jon += y
}
}
def protect(Sansa,Jon,Jon){
	( -( -530.46 ) )
}
assert Stark : "One can not simply parse himself"
def TABLE[( TABLE[-33][( x )] )][j] {
	Sansa /= -destroy() * protect(-( 930.0626 ),-( TABLE[0.9 + Sansa][betray(ROWS,Sansa,foo(-( ( ( ROWS ) ) )))] ))
}
assert -rule(----52 + ( destroy(TABLE[Stark][Jon],x * foo()) ),TABLE[-Sansa][COLS * -1]) : "One can not simply parse himself"
assert --420.002 : "Winter is coming"
assert ( TABLE[-63 / -( x )][250.8] ) : "What do we say to the Lord of Death?"
def bar(y,Hodor){
	if(0.37){
	Hodor += COLS
} else {
	if(-0.59){
	destroy(-TABLE[Sansa][-1 * Jon],-0.9);
	y -= -0.18
}
};
	if(( mislead(-( x )) )){

}
}
var Sansa = ( Ygritte )
def betray(Ygritte,dog){

}
def mislead(Jon,x,Arya){
	--60;
	dog /= -70
}
def TABLE[0.21][i] {

}
assert Jon + betray(Hodor * 29) : "What do we say to the Lord of Death?"
def TABLE[-Sansa][i] {
	Arya *= foo() + ( -1 )
}
def destroy(Sansa,Ygritte){
	destroy()
}
var Ygritte = ( mislead(-1) ) - ( 6 )
def rule(x,x){
	mislead(Arya,-330.821 / ROWS);
	dog /= foo()
}
assert -protect(TABLE[Sansa][0.76],-y) - -( ( betray(( foo(1 + bar()) ),0.79) ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = -37
assert ( ROWS ) + -68 : "Winter is coming"
assert -ROWS : "What do we say to the Lord of Death?"
assert TABLE[-destroy(-COLS * ROWS) + ROWS][( Sansa )] : "Winter is coming"
def betray(Jon){
	Hodor + rule(-0.59,TABLE[foo(protect(bar(ROWS,mislead(660.503,bar(( 800.084 ),-( foo(( ( -0.2 ) / -destroy(( ( ROWS ) ) / betray() * foo(COLS * destroy(foo(Arya)),0.23)) )) - bar() ))) / COLS),1,950.592)) + ( 0.33 + -0.9 )][bar(--bar(( Sansa ),( rule(Arya,protect(( betray() ),( protect(-TABLE[-0.01][-0.73 + y * mislead(COLS * -74,ROWS + COLS) + -( --COLS - destroy(rule(( ( ( Ygritte ) ) ),0.03),( ROWS )) )],Arya,( TABLE[Hodor][betray(destroy(),y)] ) - ( ( ( Arya ) ) - -100.2124 + -99 )) ),-540.336),ROWS) ),-0.23),foo())],--betray()) / -26
}
var x = ( -bar(540.339) )
def rule(y,Ygritte,y){
	Stark *= 840.9;
	if(( ( ROWS ) )){
	-ROWS
}
}
var Sansa = x
assert dog : "What do we say to the Lord of Death?"
var Stark = Jon
def destroy(y,Sansa){
	x -= Arya;
	dog -= -Sansa
}
def TABLE[( ( protect(( TABLE[-Sansa][-COLS - ( COLS )] ),TABLE[Jon][dog]) ) )][j] {
	if(--240.9){
	if(y){
	ROWS;
	if(-1){
	Ygritte -= y
} else {
	y += 0.64;
	if(TABLE[( ( -0.06 ) )][0.49]){
	Jon -= mislead();
	if(COLS){
	-1;
	if(---foo(( -TABLE[( ( ---35 - y ) )][betray(-91)] ),( mislead(TABLE[-Stark + ( bar(0.07 - ( ( ( ( -0.28 ) - Sansa ) ) ),protect(Stark,y,-0.44)) )][TABLE[betray(COLS)][TABLE[TABLE[( --0.94 / ( COLS ) )][-490.49]][Hodor / Stark] - x]],( 0.2 ),-( ( 14 + destroy(TABLE[-bar(COLS,( -0.34 ) - protect(-47,destroy(-dog,Arya),( dog )))][-( -( ( -87 ) ) )]) ) ) / 82) ),( -protect(0,Jon) / TABLE[-1][Ygritte] - --dog )) * --500.59){
	y += TABLE[TABLE[ROWS][Arya] - 0.91][-23]
} else {
	x -= 85;
	if(( protect(TABLE[-( TABLE[Stark][ROWS] )][Ygritte]) )){
	if(mislead(protect(--ROWS / -82 * Jon - --0.1 + TABLE[-0.6][-( Jon ) + TABLE[Hodor][19] + destroy(-360.461)],Stark))){

} else {
	Hodor -= -1
}
}
}
};
	Sansa
}
};
	Jon *= protect(-0.71)
};
	0.12
};
	( --mislead(( --COLS ) - bar(-COLS,82),TABLE[foo(-( TABLE[ROWS][Sansa] ),( 770.45 ) + COLS,-rule(-0.46 * ( foo(COLS) ),( bar(COLS,( Hodor ),betray(( TABLE[ROWS][betray(( mislead(ROWS,( ( -( destroy(-1,640.06,( ( ( y / COLS ) ) )) ) ) - destroy(-0.24 * 1 + 1,78 - destroy(bar(),TABLE[Ygritte][Ygritte],mislead())) ),TABLE[( protect(( ( ( ( y ) ) + --ROWS - -COLS ) ),54) ) + ( mislead(betray(ROWS,COLS),ROWS) )][bar(( betray(dog) ))]) ) + ( -35 ))] ))) ),-460.1343))][--Jon * ( -( dog + mislead(( -0.65 ),0.84) - --( -80 * betray(destroy(( -TABLE[( -Sansa + -1 )][( mislead(-0.3,1,( COLS )) ) - --x + rule(dog - 0 * COLS,-( betray(Jon,COLS) ))] ),( ( 1 ) ),-69)) ) + bar(TABLE[( TABLE[( Arya )][( ( 340.023 ) )] )][91]) ) )] - 0.71) )
}
def betray(Ygritte){
	if(y / -37){
	( bar(foo(),( -( ( -1 ) ) )) );
	if(Jon / -ROWS * TABLE[ROWS][1] * ROWS - -COLS / TABLE[( ROWS )][-38] * 0.567){

}
} else {
	y += ( 0.04 );
	Stark /= ( 1 / ROWS )
}
}
var y = TABLE[( ( 44 ) + -protect(-COLS,-1) - Hodor )][--Arya + -1] * COLS - ( destroy(x,-protect(-foo(( -TABLE[COLS][destroy(-970.47,( destroy(Arya,( ( -( Ygritte ) ) )) ))] / -foo(-0.78,( protect(ROWS,TABLE[Hodor][-1 / Sansa * COLS * Jon + COLS],mislead(-31,-31) - ( protect(( -0.97 ) - Ygritte - betray(mislead(76,mislead(( betray(COLS) ) + bar(TABLE[rule(TABLE[ROWS * -96][-ROWS],-ROWS,-( --TABLE[foo(( TABLE[Sansa][( -410.247 )] - Sansa - Arya + dog ),TABLE[Jon][( y )])][-bar() * bar(TABLE[( -50.5 ) / ( Hodor * -x ) / betray(mislead(TABLE[Jon - TABLE[Hodor][Stark]][( ( TABLE[mislead(protect(destroy(),-( COLS ) + dog),TABLE[-ROWS][ROWS]) / ( ( rule(COLS,( rule(TABLE[( ( -0.11 / y ) )][( COLS )],foo(-( ( rule(-0.99,-( COLS ) / ( protect(TABLE[COLS][TABLE[mislead(Arya) / ( ( COLS ) + mislead(x,COLS) )][160.211]],TABLE[COLS][-0.51],-52) )) ) ),ROWS,ROWS / -foo(( ( betray(protect(bar() / TABLE[COLS - ( ( ( destroy(( COLS ),TABLE[Arya][-( Hodor )]) ) ) )][TABLE[rule(-y,COLS,ROWS)][TABLE[-20][( TABLE[-28][( ( ( TABLE[ROWS][-0.93] * ( rule(TABLE[Stark][-90],( bar(mislead(rule(( -betray(ROWS - TABLE[protect(Ygritte,protect())][COLS / TABLE[( -50 )][Arya]],x) ),protect(TABLE[19][foo(TABLE[TABLE[TABLE[bar(( Stark / COLS ),foo(0.43,( -( ( ( -760.88 * bar() ) ) ) ),Hodor * 0.16))][-0.88]][--TABLE[( TABLE[-( -63 )][-0.53] + -0.11 / ( ( rule() ) ) / bar(x,y,bar(-Sansa,49)) ) - -( bar() ) + 0.52][TABLE[0.69][ROWS]]]][y],dog)])) + mislead(( 0.74 ),( betray(bar(( -0.31 ),foo(-( Jon ) * dog))) / rule() / y )),COLS),mislead(-0.5 * TABLE[y][( -1 )] - --bar(mislead(TABLE[TABLE[mislead(TABLE[y][protect(-Sansa,-0.06,-( ( -betray(COLS,TABLE[TABLE[COLS][-0.5]][( ROWS )]) - -79 ) ) - Hodor)],foo(TABLE[-0.09][-25],destroy(foo(50,dog))),Sansa)][COLS]][y],destroy()),destroy(1,ROWS),TABLE[protect(( x ) * ( Arya ) - 0.59,( -0.29 )) * -48][-protect(10,( --0.33 ),rule(-390.823,-( Arya - dog ),97))]))) )) ) ) ) )] )]]],foo(Arya,ROWS / destroy(190.884,destroy(COLS),0.56),COLS),mislead())) ) )))) / -y )) ) )][-Stark] ) )] * COLS))][foo(-( -Arya ) / mislead(ROWS) / ( foo(-92,( Arya )) ))])] / -0.81 - --0.32 ))][TABLE[x][-70]],dog) / TABLE[( ROWS * destroy(destroy(COLS),0.58) * ( -TABLE[y][( -foo(35,-ROWS) )] ) )][400.639] / ( Hodor - Ygritte ),x,betray())),rule(),protect(( COLS ))),1) )) ) * -0.31 * ROWS + dog,COLS) / foo(( -96 )) ),0.59),COLS)) )
def TABLE[Jon][j] {
	if(bar(-TABLE[Ygritte][( bar(52,-0.9,COLS) )]) * rule(-13 - betray(1,Jon,TABLE[bar(x,--0.09)][TABLE[0.7][rule(COLS)]]),-Sansa) - destroy(y,foo(Jon,ROWS)) / x){

};
	if(y){
	if(-0.45){
	--1
} else {
	COLS;
	x -= ROWS;
	if(COLS){
	Sansa;
	( ( 0.21 ) )
} else {
	if(19){
	if(y){
	if(( TABLE[-30][( foo(-bar(bar()) * foo(protect(Hodor / Ygritte,Ygritte)),( -( foo() ) )) )] )){
	if(-250.27){
	Jon += rule(TABLE[( --x )][Arya]) - protect(foo(( -0.33 ),TABLE[ROWS][( --betray(ROWS,TABLE[COLS][( ( foo() ) )]) * Hodor )],-mislead(-46,-rule(( --0.61 ),ROWS),-Ygritte)),rule(-rule(TABLE[Ygritte][betray()],-TABLE[( mislead(ROWS * ( TABLE[47][22] )) )][-( COLS )],protect(dog,--COLS)),-0.5));
	if(( betray() ) + ROWS){
	if(COLS){
	( -TABLE[betray(--84,( destroy(66) ))][ROWS * -y] / bar(( -( -( ( COLS ) * 1 + mislead() - ROWS - Ygritte ) - ( y ) ) ) + -ROWS * ( TABLE[dog - protect()][340.33] ),mislead() - COLS) * -COLS )
} else {
	if(( y ) / Sansa){
	if(ROWS){
	y *= 0.38;
	Sansa /= ( --330.27 )
} else {
	Jon;
	Jon /= destroy(( ( TABLE[Sansa][bar(( ROWS ),x,-1 / 0.1)] ) ),Arya + 1)
};
	if(---( 0.72 + -( Hodor ) )){
	y /= 1;
	if(-( --14 )){
	x += COLS;
	if(-COLS + ( ( -79 ) )){
	dog *= ROWS
};
	-destroy(-bar(Arya),( TABLE[ROWS][( y ) / COLS] ))
} else {
	if(COLS){
	if(-rule(-0.66,-48)){

};
	if(( 990.052 )){
	if(-57){
	Sansa -= --( TABLE[y][COLS] )
};
	x
} else {

};
	betray(ROWS)
};
	y *= betray(( 0.51 ),( Hodor ),-0.68);
	y
}
}
} else {
	Jon /= -1;
	-Jon;
	Stark *= rule(-420.3,--dog,rule(0.14,protect()))
}
}
}
} else {

};
	if(( -1 )){
	Arya -= -1
}
};
	if(( -0.75 )){

} else {
	if(( protect(destroy(0.95,protect(foo(( ( -( Arya ) + 670.9372 ) )),-170.1456 - -mislead(),( ( COLS ) )) + -betray(-460.73,Stark,23) + -( bar(-Arya) ) + COLS / TABLE[( ( -14 + ( 40 ) ) )][ROWS] * rule(-1 - 0.73 - y + -foo(ROWS)) * ( ( --dog ) - foo() - -0.3 - y )),x) )){
	if(-0.8){
	if(( -1 * TABLE[TABLE[-protect(bar(Jon,( COLS )),dog)][( -700.95 )]][TABLE[COLS][foo(-13 / -730.593 + Sansa)]] - COLS )){
	( COLS / destroy(-1 * TABLE[( TABLE[bar(-36)][0.93] )][ROWS]) / ( 83 ) );
	rule(-Stark,y,Jon)
} else {
	-98
}
} else {
	( -0.52 );
	if(Jon){
	( Hodor );
	if(ROWS){

} else {
	destroy(COLS,( -ROWS )) / Ygritte;
	rule(-76 - ( 300.007 ) + ( ROWS + rule(betray(-TABLE[-( 660.1 )][-destroy(( bar(-ROWS - dog) ),destroy(-0.81,TABLE[protect(( -8 ),-x)][COLS]) / ( -TABLE[-1][( ( 1 ) )] ) - ROWS,betray(( ( ( -620.0198 / -( y ) * ( destroy(-1,-48) ) * mislead(COLS / ( -0.63 ),( ---1 / -0.67 - TABLE[COLS][COLS] )) ) ) )) - -TABLE[( bar(betray(0.62)) )][-22]) - -29 / ( COLS ) / ( 84 )] + -0.24,foo(COLS,Sansa))) ));
	Jon /= rule(Jon)
};
	destroy() * betray(COLS,destroy(ROWS,TABLE[( ( ROWS - -Jon ) ) * ROWS][-71],TABLE[COLS][0.82]) / -81) + 860.3709
}
}
} else {
	dog -= -( ( COLS ) / mislead(( -destroy(ROWS) )) )
};
	( mislead(1,79) + ( ROWS + COLS ) - Hodor ) * Arya
};
	if(1){
	y += protect();
	Sansa;
	if(-COLS / 1){
	TABLE[protect(0.9)][bar()];
	if(51){
	foo()
} else {
	if(-( Stark ) - TABLE[ROWS][ROWS]){
	Jon *= ( -100.17 )
} else {
	Ygritte;
	if(protect()){
	if(-destroy(-COLS * betray(rule(--0.61 * -21)))){
	protect(TABLE[-( -( 0.32 ) ) * ROWS][( ( COLS ) )],-59)
} else {
	if(destroy(-Ygritte,-0.32)){
	if(mislead(ROWS,Stark,--0.09 + protect())){
	if(-betray(( ( Hodor ) ),Hodor,protect(Sansa))){
	Sansa -= TABLE[( ( ( --TABLE[COLS][-0.72] + -1 ) ) )][Jon];
	y += ROWS * -0.33
} else {
	if(COLS){
	Sansa /= -9
};
	x += TABLE[( -10 / ( ( rule(ROWS) ) ) )][COLS - ROWS]
};
	ROWS
} else {

}
} else {
	Sansa -= -Hodor
};
	dog -= -( rule(protect(--0.65 / -1),COLS) )
}
}
};
	-TABLE[440.624 + Sansa][rule(ROWS,-( -85 * foo(0.61) )) - foo()] + --89
};
	if(COLS){
	if(( rule(y,( ( Hodor * TABLE[0.27][rule(( rule() ))] ) ) / -ROWS - ( -99 ) * betray() / ---y) )){
	Hodor *= ----0.91 / protect(0.8)
} else {
	-( -0.62 );
	if(( -0.9 )){
	if(Stark){
	Ygritte /= TABLE[-16][rule(-1,TABLE[foo(TABLE[Stark][( COLS )],( COLS ))][-mislead(-foo(Sansa,ROWS),Hodor - Sansa,( ---TABLE[0.57][( ( ( -130.28 - y ) ) )] + betray() + Stark ))],-0.81)];
	if(-0.11){
	-1 * Arya + foo(( mislead() ))
};
	-ROWS
} else {
	Stark *= -28;
	if(-Ygritte){
	if(1){
	if(rule(0.25,( Ygritte ))){
	if(dog + x - Ygritte){
	if(protect(COLS)){
	if(y){
	dog
} else {
	dog -= mislead(-1,-1)
};
	if(( -85 )){
	y += -ROWS
}
};
	if(Ygritte){
	Hodor *= y
}
}
};
	if(x){
	74
} else {

}
} else {
	Ygritte += ( COLS )
};
	-0.83;
	Jon *= Ygritte - mislead(foo(-67,-60) / --92)
}
};
	if(Arya){

} else {

};
	if(COLS){

}
} else {
	Jon -= ( ( Arya ) )
}
};
	y += x
}
}
} else {
	destroy(TABLE[-0.81 / Stark / -TABLE[-71][Arya] / 0.18][betray(-0.91 / -720.03 - 79 + Stark - x + rule(-22),-Hodor,-protect() / -950.737)])
}
}
}
}
}
} else {
	if(ROWS){
	dog += ( TABLE[( TABLE[-x][Arya] - y )][( ROWS * -14 )] * ---96 )
} else {
	if(( ( ( ( Arya * COLS ) ) ) )){
	-2
};
	Hodor *= ROWS
}
}
}
var Stark = Hodor
def TABLE[TABLE[( COLS )][Jon]][j] {
	-( Arya );
	y -= 58
}
var Ygritte = 0.23
var x = 0.47
assert mislead() : "Nothing burns like the cold."
assert -1 : "Winter is coming"
def protect(Sansa,dog){

}
var Arya = betray(rule(),COLS,rule(Arya))
assert bar(( -270.34 ),COLS) : "Fear cuts deeper than swords."
def mislead(Arya,Arya,Hodor){
	y -= ( rule() ) / COLS
}
def foo(y){
	18;
	y -= COLS;
	if(( rule(bar(--bar(destroy(),( ( ( --750.37 / Sansa * foo(Ygritte,-620.42,-570.6) ) ) ))),y,y * -0.19) )){
	if(-ROWS){
	if(COLS){
	x *= -10.42
};
	if(protect(foo(--( -rule(( Arya ),( TABLE[-( ( Hodor ) * ( Jon ) + -870.38 )][1] ),ROWS + foo(--0.28 - COLS) + dog) ),700.207,-0.65 - 0.03) + ( betray(TABLE[---x * ( Jon * -betray() )][COLS],Hodor) - -( Jon ) ))){

};
	mislead(ROWS)
};
	-x;
	protect(( protect(-COLS / betray(-0.95,--90),-dog + -0.82,rule(COLS)) ))
} else {
	Jon += ( ( Stark ) );
	if(-Jon - -Sansa){
	y += COLS
}
}
}
var Jon = -0.85
def mislead(Ygritte){
	Hodor -= -0.41;
	if(destroy()){
	Arya *= 0.41
}
}
def foo(dog){

}
var y = -COLS * ( destroy(Ygritte,COLS,TABLE[foo(-83 - COLS,TABLE[84][( -dog - 21 )])][-( -0.23 - TABLE[0.4][COLS] )]) )
assert -Stark / ( protect() ) / Jon : "Fear cuts deeper than swords."
assert -0.3 : "What do we say to the Lord of Death?"
assert -y : "Fear cuts deeper than swords."
assert Jon : "Fear cuts deeper than swords."
assert -0.36 + Sansa : "What do we say to the Lord of Death?"
def TABLE[COLS][k] {
	x /= -betray(rule(62,rule(mislead(),( ( ( TABLE[( TABLE[-400.51 * ROWS][-bar(TABLE[TABLE[-0.41][TABLE[( y * betray(( ( ( protect(ROWS,COLS) ) ) / betray(rule()) )) )][ROWS]]][destroy(bar(y,TABLE[TABLE[( Hodor )][TABLE[-y][( -COLS )]]][-x]))]) / -1] )][-( ( rule(Hodor + mislead(-0.92,mislead(rule(protect(-foo()) * Jon),( -Ygritte * Stark ) * bar(rule(( protect(-79,COLS) ),( -( ( ( -1 ) - bar(y - rule(-Hodor),protect(betray(),TABLE[-TABLE[540.4261][TABLE[rule(mislead(mislead(( Sansa ),( --60 ))),TABLE[betray(TABLE[( -bar(COLS,Sansa) / --Hodor / ROWS )][( TABLE[-ROWS - -mislead(-53) / --dog][x] / Stark + y * ( 1 * --bar(-betray()) ) + -Jon )] * x + -0.55)][bar(-foo(--ROWS) - -TABLE[foo(ROWS,TABLE[0.47][( ( Stark - ( 0 / betray(-Sansa,-60,betray(0.06,ROWS,Jon * Jon)) + ( ROWS / ( ( foo(-bar(ROWS)) + -0.96 ) ) + y ) + ( bar(-protect(-140.205,-( x ),( 440.3 )),COLS,Arya) ) - Ygritte - 741 - ( -Jon ) + ( Stark ) + betray(( -0.08 )) ) ) )])][foo(Stark)],Jon) * ( -1 )])][( ( -Arya ) )]]][betray(Sansa,ROWS)],TABLE[( ( 0.06 ) * -TABLE[( -570.1 ) - ROWS][-67] ) + -0.95][COLS / dog])) - ( -foo(ROWS,COLS / protect(bar(( rule(( ROWS ) - -12) ) - ROWS / Hodor,destroy(-rule(TABLE[( -( TABLE[1][0.51] ) )][-10]) + Stark,protect(( 170.04 ) - Stark / TABLE[( ( Stark ) + -x ) - -48][--Sansa]),-0.89)))) - ROWS * rule(mislead(69,COLS,61)) ) ) ) ) * ROWS),-0.92),( protect(protect(---0.7 * Jon * -Ygritte,43)) )))) ) ) - 7 - ---COLS / TABLE[x][-24 * ( TABLE[bar(-ROWS,x) / ROWS][-1] )]] ) + protect(-rule(( Hodor ),( Hodor ))) * ( ( -x ) ) ) )))) - COLS - Sansa;
	-85
}
var Sansa = Hodor
assert ROWS : "One can not simply parse himself"
var Arya = -( -x ) + Jon
def bar(Stark){
	Stark /= TABLE[( COLS )][( COLS ) * Ygritte];
	( ( betray(Ygritte) * TABLE[0.24][-0.53] ) )
}
def destroy(Stark){
	y *= ( mislead(ROWS) )
}
assert COLS : "Nothing burns like the cold."
var Sansa = destroy(-0.38,y,-0.5)
var Sansa = bar(-TABLE[47][TABLE[( ( ( ( Sansa ) ) * Ygritte / betray(rule()) ) )][0.31]],rule(bar(( ( -96 ) )),( -mislead(( -( --0.43 ) ),-mislead() * ( ROWS ) / Hodor + -( ( protect(-1,( -COLS )) ) )) ))) + --betray(( 0.4 )) - protect(TABLE[( x ) - -Ygritte][( rule(-ROWS,47) )],Sansa,protect(0.09)) * ( ROWS )
def TABLE[-0.93][j] {
	x /= 930.033;
	x += -x * destroy()
}
def bar(){

}
def TABLE[foo(TABLE[--( Hodor ) * 0.34][-48 + -Stark] - -COLS)][k] {
	if(COLS){
	dog *= dog
} else {
	if(x){

};
	Jon;
	( -Hodor + foo(Arya) / ( 0.38 ) )
}
}
assert ROWS + TABLE[COLS - -0.69][( 37 )] : "Winter is coming"
def TABLE[( ( ( Jon ) ) )][i] {
	Jon *= Arya * -COLS;
	y -= ( ---0.37 + ( foo(TABLE[rule(destroy(Ygritte,rule(),bar(foo() / TABLE[-foo(mislead(( 50 )),( x ))][---0.87 + ( --0.12 )] - x)),bar(TABLE[--x][rule()]) / betray(Arya))][x],-( -ROWS ),( foo(( ---Ygritte + ROWS ) + ROWS) )) ) - 1 + ( -Hodor - betray() ) )
}
assert protect() : "Fear cuts deeper than swords."
assert -Stark * TABLE[dog][ROWS * Sansa - ( -ROWS - betray(( Stark / 67 ),-Arya) ) - destroy(0.95,foo(-1),TABLE[0.24][foo()])] : "One can not simply parse himself"
var Ygritte = Sansa
assert TABLE[( foo() )][bar(-TABLE[foo(( -680.9358 ),-0.85)][-ROWS],Stark)] : "What do we say to the Lord of Death?"
assert x : "One can not simply parse himself"
assert betray(COLS,Ygritte / 110.2857 * 0.26) : "Winter is coming"
var dog = bar(protect(foo(--1 / TABLE[470.86][TABLE[mislead(84,TABLE[rule(y,foo()) * -COLS + 0.83 * 17][protect(680.47)])][( -( -Stark ) ) + TABLE[Stark / --( TABLE[y][rule()] )][y] * dog] / protect(-0.22,( mislead(Jon) ),protect(ROWS / ( TABLE[destroy(ROWS + --740.4 / -0.77) / COLS][( betray(Ygritte / -0.32,( Jon / ( 93 ) + ( ( -1 ) - mislead(( ( bar(( ( TABLE[-0.58][dog] ) ) - ( ( --ROWS ) ) - dog) ) / 50 )) ) / ( --92 ) - -ROWS ),Arya) + COLS + ( -bar(ROWS,-dog * COLS) ) )] ),0.69) - ( dog - ROWS ) - ( ( x ) ))],mislead(Stark,( rule(dog) )))))
def rule(){
	Sansa /= betray(y,( -TABLE[-0.93][--85 - Jon] + dog + Stark - Hodor ));
	Hodor -= x
}
def bar(Hodor){
	Sansa += ( rule(ROWS) );
	Sansa += bar(( ROWS ),-1 + Arya,TABLE[0.21][-COLS]);
	Jon += ROWS
}
def TABLE[-( betray(-( Stark ),( ROWS ),--Arya / 1) )][i] {
	x *= TABLE[-( TABLE[----( rule(-ROWS,betray(( -1 / 1 * bar() ) / TABLE[-protect(Sansa,( -( foo(-28,destroy(foo(Stark))) ) ))][( Sansa )] / 0.07 - 0.76,COLS)) ) + TABLE[destroy(-0.46)][-betray() * TABLE[ROWS - ---( bar(--0.16,bar(( Hodor ),( Sansa / --Hodor - -Ygritte + -foo(-( ---56 )) * -destroy(COLS,Stark) - bar(-1 * -0.87,( -0.38 - Sansa )) ) + -rule(protect(foo(( COLS ),TABLE[1][ROWS] * TABLE[-1][COLS],dog / rule(-1 / 0.62,-( bar(-17,0.67) ) - -59)),TABLE[destroy()][( -Hodor ) + ROWS])) - y),-1) + ( y ) ) + ( ( ROWS ) )][-ROWS * -( -0.34 )]]][y] )][ROWS]
}
assert mislead(bar(Hodor,mislead(( Sansa ))) + COLS,620.602) : "Nothing burns like the cold."
assert destroy(( ( bar(-( 82 ) / ( x ),Hodor,-foo(Stark,0.46 - ( COLS - ( ( -ROWS ) + ---0.72 ) ))) ) / 98 ),( destroy(100,-1 - COLS + Stark - Ygritte) ),-26) : "What do we say to the Lord of Death?"
assert -43 : "Nothing burns like the cold."
def bar(dog){
	if(destroy(COLS,( betray(( -mislead() + --0.38 ),( dog )) ))){
	y += ( TABLE[-1][betray(Jon)] )
} else {
	-55
}
}
def rule(Hodor,y,dog){
	if(Ygritte){
	-0.94;
	--COLS
};
	if(( ROWS )){
	x *= 1
} else {
	if(56){
	Jon -= COLS;
	dog += COLS
};
	if(COLS * dog){
	Arya *= destroy();
	Ygritte += Hodor;
	Hodor -= TABLE[TABLE[ROWS][COLS]][( --30 )]
} else {
	Jon -= -0.95;
	if(--0.13 * 0.17 / ---( TABLE[-37 + ( Ygritte )][0.32] )){
	TABLE[-bar() + -55][COLS - ROWS]
} else {
	( Jon );
	if(ROWS){
	dog += bar() * ( ( ROWS ) );
	if(( betray(--Jon,bar(-0.76)) )){

}
}
}
}
};
	destroy(-1,protect(Hodor * -62,-1))
}
def protect(Jon,Arya){
	if(TABLE[Ygritte * COLS][( ---COLS - -bar(( ROWS * bar(-y,( dog ),( y )) ),dog) * mislead(bar(-( -1 ),( Jon + 0.1 + ( -0.47 - Hodor ) ),betray()),-Ygritte) )]){
	Hodor += dog;
	Jon *= Arya
};
	if(foo(( bar(-y) ),protect(-470.2976,-COLS,Arya))){
	-51;
	-93
} else {
	if(foo(betray(( -0.51 ),ROWS,-( ( ( protect(( TABLE[betray(-1,Arya)][ROWS] - Arya + destroy(ROWS,-0.18,-dog) ),ROWS,( TABLE[50][-0.22] ) + -x) ) - Sansa ) ) - ROWS * 0.98),Stark)){
	if(x + -dog){
	Ygritte
} else {
	Stark;
	if(mislead(TABLE[-foo(rule(TABLE[Sansa][( ( ( bar(destroy(dog,( ( TABLE[-0.19][-77 + Hodor] ) ) / 1),( 1 ) - ( ( -81 ) * -7 )) ) ) )],-0.86),-Stark)][( ( Arya * -Stark ) ) - TABLE[-TABLE[-0.91][36 - destroy(0.56) - -mislead(( foo() ),99) / destroy(-protect(COLS,( -0.69 ),betray(protect(bar(0.67,Jon,0.83),ROWS,rule(betray(betray(protect(COLS),( 10 )),( ROWS + foo(( -360.8572 ),Sansa) )),COLS,( Jon ))) + -0.31)),destroy(( -26 )),ROWS) / Stark]][( Ygritte )]] / TABLE[y][TABLE[protect(( ROWS ) - foo(),COLS,ROWS)][Stark]])){
	if(-dog){
	y /= ROWS
} else {
	-760.04
};
	if(0.4){
	y;
	Sansa += ( TABLE[( dog + Ygritte )][COLS] ) / 0.5;
	if(rule(( -99 + protect() ))){
	Sansa -= protect();
	if(690.616){
	if(destroy(TABLE[Ygritte][Sansa],--( ROWS ) - ROWS * 1)){
	protect(( -( 1 ) * 0 ),rule(y,( dog ),mislead(-( --Stark - TABLE[( ROWS - 43 )][-810.084 / -protect(TABLE[destroy(-( --TABLE[ROWS][Ygritte] * -rule(COLS,betray(( -0.97 ),-1),mislead(--destroy(0.32),TABLE[dog][y],0.27)) ) + x,-( Arya ),betray(protect(-bar()) + Ygritte - mislead(Hodor,foo(60.29,x)),TABLE[ROWS][120.473],-( dog )))][dog],( rule(rule(( --0.91 ))) ),Sansa)] ) - -750.2641,Jon))) / Ygritte;
	if(Jon + 0.46 * -0.9){
	if(( 77 )){
	if(-( mislead(ROWS,Stark,( -0.28 )) )){

} else {
	y -= ( dog );
	if(1){
	( Hodor );
	x += ( 0.38 );
	if(45){
	if(dog - ROWS){
	if(COLS * -Arya - destroy(( dog ),( 580.51 )) / 45){
	if(( 190.91 )){
	-COLS + ( ( -TABLE[-0.35][COLS - Arya] ) );
	Stark -= Stark
};
	x *= 1
} else {
	Stark *= -ROWS - ( 37 );
	Jon;
	Hodor
};
	Sansa /= ROWS
} else {
	Stark
};
	COLS
}
} else {
	if(ROWS){
	if(mislead(Arya,TABLE[bar(( Arya ))][x] * -( 0 ) * COLS * --mislead(( ( COLS ) ),-Ygritte / Arya),( Hodor ))){
	Arya /= rule(-0.73) / ROWS
} else {
	ROWS + Ygritte
}
} else {
	-Sansa;
	if(COLS / Hodor){
	if(COLS){
	Hodor -= betray(bar(Hodor),--COLS,Arya);
	x += ( dog );
	if(--y * TABLE[ROWS][-0.94]){
	mislead(( x + TABLE[( TABLE[destroy(-( foo(COLS,-22) ),ROWS)][-dog - 0.99 - rule(dog,1)] + COLS )][-1] / -TABLE[( ( betray() - betray(y / ( ( -0.41 ) ),Ygritte) + bar(-foo(),( --COLS )) + -90.123 ) )][mislead(( ( ---( ( dog - y ) ) ) ),dog)] * ( 44 ) ) / COLS,bar(-16,-ROWS - Jon / Sansa / 710.4 + ROWS * -bar() - 6 - ROWS * -Jon - rule(mislead(TABLE[( y )][-destroy(--Ygritte / -rule(-450.8),ROWS)]),COLS,foo(-TABLE[-ROWS][protect(COLS)],( COLS ))),-0.24))
}
} else {
	if(-62){
	destroy(---bar(( destroy(bar(0.14,Arya) / -COLS,( Sansa ),( TABLE[ROWS * betray(0.33,-0.1,-betray(( -5 ),Jon))][Arya + COLS / -280.963] ) / ( 420 ) / COLS) * TABLE[TABLE[( -betray(( Sansa ) + Ygritte * rule(-( Sansa )),-Sansa,-protect(-0.18,Hodor) + -1 + -100.6 * -50.8207 / -740.726) )][( COLS )]][bar()] ),( dog ),protect(( Arya ))));
	-ROWS - TABLE[( -26 )][mislead(-bar(mislead(COLS,ROWS)))];
	Ygritte += ( Ygritte )
}
}
}
}
}
}
} else {
	dog / ROWS;
	protect(Sansa,y,72)
}
};
	-4
} else {
	if(betray(betray(ROWS))){
	Hodor -= -0.15
};
	Hodor * TABLE[( ROWS - ( TABLE[destroy(Jon)][protect(COLS)] ) )][( foo(COLS) / Sansa - ( -TABLE[mislead(COLS,COLS - COLS) - rule(ROWS + -580.284 / -( ROWS ),x + -TABLE[510.223][Jon])][-TABLE[TABLE[TABLE[0.27][Hodor - x]][TABLE[Ygritte][dog]]][( 350.24 )]] + ( -0.12 ) ) )]
}
} else {
	protect(1) / -1;
	foo()
};
	-( -TABLE[0.97][Sansa] ) * Sansa + y
} else {
	rule(Hodor + -destroy(-0.59,ROWS / betray(( 0.16 ),x,( ROWS )),TABLE[-( protect(-0.7 / ( rule(Hodor,dog,dog - COLS) )) )][COLS]) - Stark,-Hodor);
	Hodor -= 0.05
}
}
} else {

}
};
	if(0.61){
	ROWS
}
} else {
	if(-rule(( COLS ))){

} else {
	-12
};
	Ygritte /= 940.019
};
	Arya -= betray(COLS,( -x ))
}
}
def TABLE[( -( ROWS ) )][i] {

}
def rule(y,Sansa){
	x -= ( rule(destroy(TABLE[( ( ROWS ) )][mislead(( -( -0.25 ) ) / TABLE[betray(-500.245) + foo()][-690.747],1)],y) / COLS,( -ROWS + ( ( protect(-0.06,y) ) ) - -protect() )) + ( bar(( bar(( Arya )) ),( ROWS )) ) );
	Ygritte * bar(TABLE[1][TABLE[( ( ( ( --55 - 290.401 - Jon ) ) ) )][440.42]])
}
def betray(x){
	if(TABLE[( -100 )][( foo(dog,79) )]){
	if(( COLS )){
	if(TABLE[TABLE[--24][-betray(-Stark,-TABLE[( -770.79 )][-Sansa - rule(mislead(( bar(270.231) ))) + -0.5]) * 0.69]][dog]){
	if(-50.513){

}
} else {
	if(ROWS * -protect(Jon,-2) - ( -mislead(-0.22,TABLE[betray(ROWS,-( Stark )) + 20.4][--TABLE[COLS + bar(-880.682)][COLS] + --bar() + ( ( Sansa ) )],COLS) ) + destroy(-( Stark ),-betray(-0.26 / betray(( -( ROWS ) ),-( -( 85 ) * ROWS )),dog + foo(( Ygritte ) - bar(),Stark) * protect(( -540.48 ),TABLE[-Ygritte][Arya] + y,( ( Jon ) / ( destroy(bar() - -0.56) ) - foo(-0.58,( 1 )) ))))){
	COLS;
	Ygritte /= betray(ROWS,( x ))
};
	( dog )
};
	Jon
} else {
	destroy(-0.08,-1);
	if(rule(TABLE[-1][-910.87],( -1 ),Sansa) + ( 0.83 * y )){
	Sansa;
	Hodor -= foo(Arya,--( foo(dog,0.79) ) + rule(COLS,TABLE[protect(-ROWS) - Jon][-ROWS + 78 - ROWS]) / Ygritte)
} else {
	protect();
	Arya += destroy(-( --betray(( ROWS ) / -Sansa) ) + ( Arya ) * ( COLS )) - x / -350.196
}
};
	Jon /= y
}
}
assert --( foo() ) : "One can not simply parse himself"
var Hodor = -( y ) / -TABLE[-31][-420.95]
def TABLE[protect(-18,-1)][j] {

}
var Sansa = Jon
def TABLE[--0.69][i] {
	dog;
	Jon
}
assert -0.26 : "Winter is coming"
var Arya = dog
assert foo() : "What do we say to the Lord of Death?"
def foo(Jon,x){
	if(( COLS )){
	Hodor *= rule(470.375,Jon * ROWS,TABLE[--dog / foo(betray(-COLS,Jon) * -y)][TABLE[protect(y,0.6)][ROWS / 19]]);
	x *= -1
}
}
assert betray(( Ygritte )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert 1 : "Nothing burns like the cold."
var Stark = ( 0.28 )
def mislead(Jon){
	if(-1 + ROWS){
	dog -= 820.05;
	if(Hodor){
	Sansa += COLS;
	if(( -COLS )){
	bar(Hodor);
	foo(510.8 * 0.37,-0.24,Stark * x + foo(Jon,destroy(( -COLS )) + x) - ( ( ( ( betray(mislead(69 - ----0.6 * Hodor),mislead()) ) ) - -dog ) )) / --570.06 / ( -protect(bar(( Sansa ),( 1 * Hodor / ( bar() ) ))) );
	y -= 0.57
} else {
	x
}
} else {
	Stark -= ( COLS )
};
	Arya *= 0
} else {
	if(Stark){
	Hodor += TABLE[COLS][rule(Hodor,mislead(x,x,Hodor))];
	( Arya - TABLE[--37 + 0.56][Stark] * mislead(-0.85,ROWS) )
} else {
	TABLE[x][foo()];
	x -= destroy(-dog,TABLE[47][COLS]) * -TABLE[( ROWS )][-0.59 / ( rule(ROWS,COLS,TABLE[-( foo() )][( -rule(protect(protect(--501),ROWS),( TABLE[( betray(ROWS,( ROWS - mislead(( -( ( foo() * y ) ) ),Arya) )) )][betray(( --120.1 / 300.44 - -COLS ))] )) )]) )] / -COLS
}
};
	mislead(Sansa,-rule(19,dog))
}
def destroy(Arya,Ygritte,y){
	if(betray(-( ( rule(Arya,( betray(COLS,Arya) )) ) ))){

} else {
	Sansa += COLS + destroy(rule(0.24),Stark) * --0.79
};
	Jon /= ROWS
}
def rule(Arya){
	if(COLS){

} else {
	if(-ROWS / -0.78){

} else {
	if(Arya){
	destroy(-1)
} else {
	if(y){

} else {
	dog -= ( ( 0.98 ) );
	Hodor -= -0.93
}
}
};
	46
};
	if(( Ygritte )){
	if(rule()){
	( ( -rule(( destroy(Sansa) )) ) )
} else {
	if(-990.08){
	if(-betray(-dog) + betray() * ( -990.04 )){
	if(COLS){
	( x )
}
}
};
	COLS;
	if(mislead(TABLE[foo(0.87 - -Sansa / dog / dog,dog,ROWS)][--0.18 * x] * y,COLS)){

} else {
	if(Jon){
	if(TABLE[-Arya][Arya / ROWS]){

} else {
	1;
	-180.7;
	x /= -TABLE[rule()][Jon]
};
	x += ( COLS );
	x += --52
}
}
};
	Sansa /= ( ROWS )
} else {
	( mislead(y,foo()) );
	Jon /= -1;
	dog /= -( 0.29 )
}
}
assert --80.582 : "What do we say to the Lord of Death?"
def protect(dog,Ygritte,Ygritte){
	if(( bar() )){
	if(--bar() - protect() + -610.81){

} else {
	if(mislead(-protect(foo(COLS * 0.67 * 0.16,bar(COLS))),Jon)){
	y /= ROWS;
	y
};
	ROWS
};
	Jon /= -rule(22,protect(mislead(mislead(-( COLS - Stark * Hodor * ( protect() ) * TABLE[( -41 )][-ROWS] - -24 * betray(-Jon) ),TABLE[-1][0.55]) - -61,bar(ROWS,ROWS * -( Stark ))),y,rule(( -0.45 )) / ( -680.1 * -dog ) - ( -510.036 )))
} else {
	if(mislead(-0.94)){
	if(foo(TABLE[x][--( COLS )])){
	if(--78 / dog - ROWS - 0.55){
	Hodor *= 0.71;
	-dog - ( -0.29 );
	Hodor += rule(-( x ) / -( Stark ))
} else {
	Jon += ( ( COLS ) )
};
	Ygritte += x / foo(-( bar(-TABLE[-dog / COLS + --Jon - ( -( x ) )][destroy()],( TABLE[mislead(Stark)][( ( ( dog ) ) )] - -destroy() )) )) + bar(Stark * -82)
} else {
	if(bar(-betray(( 1 ),y + -( ( COLS ) )),TABLE[Arya][-1 - -( ROWS )],-COLS)){
	if(Ygritte + rule(-COLS) * COLS - foo(protect(TABLE[foo(COLS,betray(--bar(-1)),--mislead(--Sansa) / COLS)][-150.086],y),-( ( ( x ) ) ))){
	bar(foo(--150.445 + ( foo() / protect(-destroy(rule(-270.2,y,-ROWS - -1),ROWS * ( 25 / Hodor ),TABLE[foo()][-1])) ),( Jon ) + -destroy(Jon)),y,41)
} else {
	Hodor -= Arya;
	Arya /= Sansa
};
	( COLS ) / protect() * -bar(--90.5054);
	TABLE[foo(mislead(bar(dog,-ROWS,COLS),TABLE[-1][0.58],dog),1 / destroy(Ygritte),( Hodor ) - TABLE[mislead(protect(610.112,x))][TABLE[destroy(-40,ROWS * ( -x ),-38 + ( COLS ))][ROWS]]) - Arya / ( mislead(ROWS) )][-( -destroy(-COLS,( ( Jon ) ),-mislead(-390.1632,Hodor - Jon * 130.444)) )]
} else {
	Stark;
	if(( ( -0.85 / Ygritte - -Stark * TABLE[destroy(( -0.26 ) / Jon,96)][betray(-( ( 0.13 ) ))] ) )){
	ROWS;
	-TABLE[COLS][1 * -COLS / -1 + rule(Arya,-dog)]
} else {
	if(( Stark )){

} else {
	x /= -dog + Hodor
};
	if(-0.32){
	Ygritte;
	Ygritte *= -dog
}
}
};
	y /= x
};
	if(77){
	x /= ROWS;
	betray(( ( -Hodor / destroy(TABLE[0.61][-protect(TABLE[0.73][Arya]) / ( ( 0.04 ) ) + -( TABLE[( destroy(0.35) )][ROWS] )]) ) ))
}
} else {
	--95;
	-( ROWS ) + --Arya
}
}
}
assert Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert betray(( rule(Arya,-Hodor + --71,protect(foo())) ),dog) : "Winter is coming"
def betray(dog,Hodor){
	if(44){
	1
} else {
	-1;
	Stark += ( dog ) + rule() - ( -0.66 ) / ( -protect() - -( ROWS ) / Arya ) / ROWS / y
};
	x *= TABLE[TABLE[ROWS][( ( -betray(ROWS,Sansa) ) )]][mislead()]
}
var x = Jon
def betray(Sansa){
	Hodor -= -1;
	dog *= COLS
}
def TABLE[-Hodor - 0.25 * foo(y) / -0.61 / ( Sansa )][i] {
	-1
}
def mislead(){
	-TABLE[rule(Stark,( ROWS * -( ( ROWS ) ) ))][81];
	dog;
	-mislead(-TABLE[ROWS][( Ygritte )])
}
var Sansa = -protect()
assert mislead() : "Fear cuts deeper than swords."
var dog = 530.8131
var Jon = ROWS
var Hodor = COLS
assert 100 : "What do we say to the Lord of Death?"
def betray(x){
	Hodor /= -betray(-1)
}
def mislead(Stark){
	x /= 920.895;
	if(Jon){
	if(-1){
	( Hodor / -y / Jon - ( dog ) );
	if(700.895){

}
} else {
	( dog )
}
} else {
	if(-0.23){
	betray(( y ),1)
};
	-( ( bar(( --13 ),0.06,destroy()) ) )
};
	--ROWS
}
def bar(dog,y){
	0.6
}
assert ( betray() ) : "Winter is coming"
var Sansa = ( -0.43 ) / betray(mislead())
def TABLE[( Jon ) + Jon][j] {
	Sansa /= Stark
}
def TABLE[-x * ( rule(ROWS,-1) ) / 0.83][j] {

}
def destroy(Ygritte,Arya,Stark){
	if(-930.797){

}
}
assert --y : "What do we say to the Lord of Death?"
assert COLS : "What do we say to the Lord of Death?"
assert -70 : "One can not simply parse himself"
assert 0.88 : "What do we say to the Lord of Death?"
var x = -0.4
def TABLE[290.57][j] {
	if(1 + -foo(Ygritte,( COLS - foo() / ( destroy(destroy(-80),TABLE[( destroy(70.71,( x )) )][1],-0.96) ) ))){
	x
}
}
assert TABLE[ROWS][0.68] : "One can not simply parse himself"
def betray(Hodor,Ygritte,Ygritte){
	Ygritte /= ( ( ROWS + bar(TABLE[COLS][-( ----Arya + betray(ROWS,Hodor) )],-dog * rule(),1 / bar()) ) ) + -64
}
var Ygritte = ROWS
def TABLE[-0.18][i] {
	Ygritte
}
assert foo() : "One can not simply parse himself"
def TABLE[ROWS][k] {
	ROWS;
	-( betray(0.42,protect(COLS)) - Hodor - -( mislead(--Arya / COLS * mislead(ROWS,-180.62),( COLS )) ) );
	if(rule()){
	if(1){
	if(-0.14){
	if(mislead(400.6803,71)){
	Stark += COLS
};
	if(Stark){
	( -x );
	0.14
}
};
	if(( Jon )){
	TABLE[( TABLE[Arya][TABLE[Ygritte][ROWS] * -31] )][--COLS]
}
} else {

};
	dog *= -Hodor / -ROWS + Hodor / -39
}
}
def protect(x,Arya,Sansa){
	if(rule(bar(--Sansa) + ( ROWS ))){
	if(foo()){
	TABLE[COLS][( 1 ) * --destroy(-bar(( destroy(Hodor,Sansa * COLS) ) / rule(Ygritte,( 0.41 ))) * protect(0.79,-foo()) / betray(( Jon ),--14,-64 * y + ( ( ( dog ) - 37 ) ) * ( foo(y) / ( ( bar() ) ) )) / TABLE[-TABLE[0.53][COLS]][Sansa],TABLE[( ( TABLE[-0.73][89] ) )][-1])];
	dog *= -0.36;
	Sansa *= -71
};
	-67 + ROWS
};
	if(ROWS){

};
	if(( 1 )){
	Ygritte += ( -COLS );
	if(foo()){

} else {
	--( -0.42 )
}
}
}
def foo(x){
	-( -COLS + -56 + bar() / COLS )
}
assert -foo(-protect() / 90) : "Fear cuts deeper than swords."
def bar(Hodor,Hodor){
	if(( 81 )){
	Jon /= ( -Hodor + foo(1) - ROWS / ROWS )
};
	Ygritte -= 1
}
assert x : "Fear cuts deeper than swords."
assert ( ( ( -0.48 / Arya ) ) ) : "Winter is coming"
def TABLE[-430.11][j] {
	( 93 );
	if(ROWS){
	--mislead(Sansa) * -mislead(protect(Ygritte,( Stark ),Arya + 50 + Hodor * COLS + TABLE[-27][rule(dog)])) - ( foo(betray(),( -93 ) / COLS) + 310.527 ) / ( -destroy(( 0 )) ) * -620.051 + ROWS;
	x -= x;
	foo(TABLE[0.73][foo(Hodor)],COLS,COLS)
};
	Hodor *= ( 69 )
}
var Jon = TABLE[Hodor][-1]
def foo(Sansa,Arya){
	-foo(Hodor,-destroy(-0.96,TABLE[-rule(-destroy(15))][0.28],-COLS) - bar());
	dog *= Stark + Sansa * TABLE[Stark][( 0.33 ) * -x]
}
assert Sansa : "Nothing burns like the cold."
assert ( ( x ) ) : "What do we say to the Lord of Death?"
var Sansa = ( betray(-0.98 / TABLE[Stark][bar(Stark * TABLE[( mislead(( -23 )) )][-destroy(COLS,-COLS) - COLS] * 0.9)]) )
assert ROWS : "One can not simply parse himself"
assert x : "What do we say to the Lord of Death?"
assert ( ( ( -TABLE[betray(dog) / ( rule(Arya) )][y] ) ) ) : "Winter is coming"
assert 0.62 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(Hodor){
	x += -650.244
}
def rule(x,Sansa){
	if(ROWS){
	y /= -0.99;
	if(y){
	if(( TABLE[Hodor][COLS] )){
	1
} else {
	Ygritte += -170.5281 - destroy(( -0.84 ),( ( Arya ) )) / ( bar(Hodor,Ygritte * -39) )
}
}
};
	y *= TABLE[y - betray(( -81 ) * ( -mislead(Stark) ) + ( y ))][( TABLE[( 0.52 )][betray(( mislead(-COLS * ROWS / COLS) ))] )]
}
def TABLE[( -( --( x - COLS ) ) )][k] {
	if(( ( -destroy(44,betray(( 1 ),TABLE[( destroy(bar(betray(COLS),bar(),Sansa),-mislead(Hodor) / -Jon,x) )][49],betray(-19,TABLE[( Hodor ) + ( rule(Sansa) ) + TABLE[-dog][( Stark )]][-ROWS])) + -46) ) )){

}
}
def TABLE[-( 12 - 72 )][k] {

}
assert 37 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(){
	if(50.37){
	Jon *= TABLE[( ( rule(( betray(-ROWS / COLS + -520.33 + TABLE[-foo(( 47 )) + TABLE[TABLE[Hodor][Stark]][betray()]][( rule() )],protect(ROWS)) ),--86) ) )][86]
};
	Stark
}
var y = ( dog )
assert -Sansa : "Winter is coming"
def TABLE[x][k] {
	if(mislead()){

} else {

};
	if(( ROWS )){
	Ygritte += y / ( 67 ) / Stark * ( COLS / ( ( ( ( dog - TABLE[ROWS][dog] ) / TABLE[---1][-68] ) ) ) );
	if(rule(-1,-97)){
	if(Arya){
	dog /= protect(TABLE[mislead(( COLS ),mislead())][y] + -bar(protect(),x));
	if(1 + destroy()){
	if(( -0.36 )){
	ROWS;
	-( -1 )
}
} else {
	Ygritte *= -0.12;
	if(protect(-mislead(( -rule(TABLE[( Stark + --17 )][TABLE[-0.63][-Ygritte]],( ROWS ),-0.29 + destroy(Stark) + ( ROWS )) ),COLS))){
	Stark;
	Ygritte /= protect(( ( 79 ) ))
} else {
	if(COLS){
	bar(TABLE[( Stark )][( rule() )] + Sansa * 0.1,Arya)
};
	( -( TABLE[( COLS )][Hodor] ) / TABLE[( -0.68 )][betray(-0.83)] ) * y;
	if(( TABLE[ROWS][( -28 / TABLE[dog][COLS] )] )){
	if(Hodor){
	y /= ROWS
} else {
	if(COLS){
	dog *= -0.86
};
	if(( ( mislead(-COLS,COLS,mislead() + dog) ) )){
	Stark *= 1;
	Sansa /= protect()
}
}
} else {
	Arya /= --0.89
}
};
	Arya *= 1
};
	if(--1){
	49;
	if(( ( x - ( ( ROWS ) / 0.06 ) ) )){
	y /= 54 + 1;
	ROWS
} else {
	--ROWS;
	Arya *= -Arya
}
} else {
	Sansa += 230.72 * -( Ygritte )
}
};
	if(( 45 )){
	if(Jon){
	if(900.54){
	y;
	y -= TABLE[Jon][ROWS]
} else {
	if(-( ( COLS ) )){
	Hodor - ( destroy(-( protect(bar(Hodor,( y * -COLS )),betray(ROWS) * ( COLS )) ),mislead(64) / Stark,--betray(COLS)) )
} else {
	if(Ygritte * 0.35){
	if(-mislead(Hodor)){
	Arya + foo()
} else {
	if(22){
	if(protect(( mislead() ),ROWS)){
	-790.19;
	Ygritte -= ( Stark );
	Hodor += ( 49 ) / COLS
} else {
	if(-830.9){
	77;
	Ygritte /= rule(Hodor);
	if(( ( COLS ) )){
	Jon /= COLS
}
} else {

};
	Ygritte /= Ygritte;
	if(x){
	if(--0.44){
	Arya -= ( ( -TABLE[( --Sansa - -1 )][-( COLS / ( --Sansa + COLS ) )] + Ygritte * rule(-mislead(( 440.681 ),-10 * x) * 0.29 / COLS,mislead(destroy(-betray(COLS * destroy(rule(-0.37,-Sansa,-COLS),protect(--( ( 0.52 ) ),COLS,-1) * COLS) + foo(TABLE[-570.934][dog],Ygritte)),bar(360.549 / TABLE[-COLS][destroy(45,ROWS,ROWS)],-( Jon ),( --( -0.4 ) ) - foo(( betray(Hodor) ),bar(TABLE[-0.22][-rule(( Hodor ))])))) - TABLE[ROWS][x],betray(destroy(-0.1),-ROWS)) / ( -880.887 ),-( TABLE[-0.66 * --47 - COLS - TABLE[bar(100 / ( -50.59 * 13 ) * COLS,-destroy(( -260.39 ) * -58),-1)][-bar(betray(( --24 )) * 1) - Stark + ROWS]][Jon] ) - Hodor) ) );
	if(( COLS )){
	-32;
	Arya *= --( Sansa );
	COLS
}
} else {
	Jon -= ( rule(460.61) );
	if(( 92 )){
	if(x){
	if(ROWS + -ROWS){

};
	if(-TABLE[-0.19][mislead(1)]){
	if(-59 / mislead(y)){
	if(Jon){
	rule(( TABLE[foo(( betray(( ( betray(Ygritte,-ROWS / COLS - ( 520.4 ) * ( protect(Hodor,39 / ( Hodor ),ROWS * Sansa * -890.6961) / x )) ) )) ))][dog] / Arya ),-COLS,-TABLE[rule(betray(Sansa,-0.64,-0.98 - --( -0.63 ) - protect(Hodor / COLS)),-TABLE[( ( ( Hodor ) ) ) * protect()][-ROWS],( ( bar(ROWS + -0.52,--0.41) ) ))][betray(( -COLS ))] * -130.88)
} else {

};
	Arya -= -0.38
};
	if(ROWS){
	COLS
}
} else {
	-0.89;
	if(( -bar(foo(),--61) )){
	Stark + TABLE[TABLE[rule(destroy(),( COLS ))][destroy()]][0.36]
} else {
	Hodor -= y - x
}
};
	if(TABLE[TABLE[-TABLE[-1][foo(Arya)] * y][ROWS] * dog][COLS]){
	( destroy() )
}
} else {
	if(-1){
	COLS;
	if(Sansa){
	Hodor *= -( bar(ROWS,-( ( Stark / ROWS ) )) )
}
} else {
	dog += -1;
	Jon += ROWS
};
	if(rule(0.67)){
	if(( ( bar() ) )){

}
} else {
	x /= x / Sansa;
	Ygritte -= --400.401;
	Stark += y
}
};
	if(-0.85 / -protect(-1 / protect(-1) / COLS) * bar()){
	if(Stark / ( Hodor )){
	-ROWS
} else {
	COLS;
	Jon += -protect(-Sansa / rule(Sansa))
}
}
} else {
	if(destroy(Arya - -( -1 ),COLS,-53)){
	Jon += -Hodor;
	Sansa -= -( foo(-0.49,-ROWS / TABLE[820.9677][0.43] / 0.6 - mislead()) )
};
	if(-protect(TABLE[Stark][foo()] + dog,Hodor,1) / Ygritte){
	Jon -= -destroy()
} else {
	-protect(x,( TABLE[Jon * ( 0.24 )][Jon] / TABLE[protect(ROWS)][Stark] + destroy(( mislead(mislead(ROWS)) )) ))
};
	Sansa -= -0.97 * ( ROWS )
}
}
}
}
} else {
	if(( ( bar(Hodor) ) ) * rule(( ROWS ))){
	Hodor *= y;
	if(-0.61){
	Jon *= Sansa
}
};
	if(( bar(-Sansa,ROWS) )){
	Arya *= -0.62
} else {
	TABLE[Ygritte][( bar() )];
	Jon - ( bar(protect()) / TABLE[COLS][-( Sansa ) * COLS] )
}
};
	TABLE[0.59][betray(--62)]
};
	-TABLE[rule(bar(36,COLS,Arya),-95) + 0.34 + ( COLS )][y]
} else {

}
};
	---rule();
	Jon
};
	if(-( Jon )){
	if(0.61 * TABLE[-15][-Hodor + -COLS] * ROWS - mislead()){
	y
};
	Stark *= -280.99
};
	Ygritte *= -y
};
	rule(protect(),foo(-240.027 * ROWS)) * ( ( -Arya ) / destroy(TABLE[-bar(bar(( ROWS )))][( x - 0.51 )] * ( -60 )) - Ygritte - ( -( -ROWS ) ) + foo(-1 * destroy(--97,-13) + 0.6,0.8) );
	y /= TABLE[-31][mislead()] - Jon * ( -0.46 ) / -COLS
}
} else {
	if(COLS){
	if(betray(rule(Hodor,COLS,( protect(660) ) + -protect(1 - ( bar(1,( Stark )) ),COLS,-600.59)))){

};
	COLS;
	Sansa += y
} else {

};
	-11
}
} else {
	if(0.18){

};
	if(( TABLE[0.14 + -( ROWS )][rule(--( Hodor ),0.25)] )){
	Jon /= x
};
	Jon -= ( mislead(( COLS ),--0.24,-bar(y - -( TABLE[9 * Jon][foo(foo(-( TABLE[bar(Ygritte,-0.94 - rule(Ygritte,-55 + ROWS - COLS,Jon) / ( ( COLS ) * -( bar(-0.6) ) )) + destroy()][Ygritte] ),bar(ROWS)),-y,Stark)] ) + ROWS)) )
}
}
assert betray(( Jon ),TABLE[y + 1 / 0.69][( bar(x / TABLE[----1][-1],Jon) ) * ( ( destroy(Arya,Arya) ) )],rule(bar(),( ( Jon ) ))) : "Fear cuts deeper than swords."
def bar(x,Arya,Ygritte){
	Ygritte += foo(-COLS,y)
}
var Stark = COLS
def betray(Jon){
	Arya -= TABLE[-900.914][ROWS];
	if(Sansa){
	if(bar(-COLS) / ( ( 0 ) )){
	COLS
};
	if(-0.22 - -0.19){
	( mislead(--COLS * foo(protect(-70.3391 * betray(-Arya,y,1),-270.48),-32),Arya) );
	-1;
	COLS
} else {
	x *= -ROWS * Stark;
	COLS;
	86
}
} else {
	-97 / ( --1 );
	Sansa;
	protect(-62,0.86,( Stark ))
};
	if(-1){
	Arya /= 88 * betray(( -0.86 ),Hodor);
	if(-92){

} else {
	Hodor += -0.64
};
	if(( -320.2002 - betray() / -COLS )){
	if(( ( -COLS * ( ---Arya ) ) - bar(-Jon) + Stark )){
	ROWS;
	Sansa
}
} else {
	Jon *= -0.81;
	Ygritte *= Sansa
}
}
}
def TABLE[bar(ROWS)][k] {
	y += 0.94 - bar();
	-TABLE[( y )][y];
	dog *= Ygritte - 1
}
def TABLE[0.04][i] {
	Stark += y;
	Sansa -= mislead(ROWS,( ( x ) ),( y ))
}
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = COLS
def TABLE[( Jon - ROWS / y )][j] {
	Stark
}
def betray(Sansa,Arya){
	if(( -0.5 )){
	ROWS;
	if(Jon){
	( rule(destroy(-80,-dog)) ) * x;
	930.5134
}
} else {

}
}
assert -( Jon + --0.22 - x + TABLE[-( bar(bar(protect(Jon,-0.64) + --0.47 * protect(-mislead()) - -destroy(-COLS),( ( ROWS ) ))) / --( foo(Ygritte) ) )][y] ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ---730.832 / COLS + -bar(( COLS ),x) : "Fear cuts deeper than swords."
assert 7 : "One can not simply parse himself"
def bar(dog,Sansa){
	if(ROWS){
	if(-0.14){
	Stark -= ( -0.8 );
	Arya /= ROWS
}
} else {
	dog;
	protect(TABLE[( dog )][ROWS],ROWS) / TABLE[81][TABLE[mislead(TABLE[-destroy(rule(TABLE[( -81 )][0.28 * foo(( Jon ),---0.18)] / bar(),-y,( -( Sansa ) )))][( Jon ) - ( ROWS + Stark ) - -0.8 + Stark * Jon]) * Hodor][foo(( -0.73 ),rule())]];
	mislead()
};
	dog *= mislead(ROWS / dog);
	-1 + ( ( Hodor ) )
}
def TABLE[betray(Arya,protect(-Sansa / ROWS)) - Stark][j] {
	COLS
}
def TABLE[-48][k] {
	Stark += rule();
	Ygritte - rule(---( --Sansa ) * dog,destroy(-Arya),COLS)
}
def TABLE[Stark][k] {
	if(( protect() / betray(COLS,-0.9) ) + -1){
	x /= ( -42 - COLS );
	--39 - Ygritte
} else {
	Stark *= protect(destroy(( COLS ),( TABLE[Ygritte][y] ) - ( -Jon ) * ( ROWS )),( ( -Stark ) ) / -foo(75 + -destroy(Arya),Jon,COLS)) * -ROWS * ( -ROWS ) - x / 7
};
	if(bar(TABLE[0.21][-COLS],1 - -1)){

} else {
	if(dog / Hodor){
	TABLE[( -26 * mislead(( ( ( destroy() ) ) )) )][destroy(foo(rule(destroy(),Sansa - destroy(--mislead(TABLE[-300.3][( ( ROWS ) )],( Sansa ),Ygritte) / ROWS)),( ( -8 ) + Hodor )))]
} else {
	if(( ( Hodor - destroy(-ROWS,betray(betray(-280.194,Ygritte) * ( -930.007 )),destroy(Jon)) + ----rule(-mislead(0.11),Sansa) / Hodor ) )){
	if(protect(Ygritte,TABLE[( protect() )][Stark])){
	-TABLE[-Sansa * ROWS - foo(dog,-170.31)][( betray() )];
	destroy(( Ygritte ) - ROWS * mislead(x))
};
	TABLE[-0.16][bar(( rule(0.32,ROWS,( TABLE[bar(-0.95,bar(-COLS))][--1] / mislead(Arya * -( TABLE[y / TABLE[mislead(( bar(-TABLE[ROWS][( -20 )]) ))][-45]][Arya] ) / ( destroy(COLS,-0.91) )) )) ))];
	Jon /= -destroy(bar())
} else {

};
	x;
	betray(0.14)
};
	if(Jon - x * betray()){
	if(COLS){
	Stark *= ---TABLE[foo(foo(Ygritte,y),Jon)][Sansa * ( ( ( ( COLS + -protect() + ROWS ) ) ) ) / ( -COLS * Stark )]
}
}
};
	if(Ygritte * Sansa - mislead(( ( TABLE[foo(Ygritte,x)][80] - x - ROWS ) ) + -Hodor,---51,COLS)){
	850.61;
	if(--TABLE[-ROWS][Jon]){
	Hodor *= -foo(( -86 ),-0.59)
}
}
}
def foo(Arya,Arya){
	y += ( y )
}
def TABLE[( Jon )][i] {
	52 / ---( Jon ) * -rule(-88) - ( ( x ) );
	--foo(COLS,( -0.69 * destroy(0.77) ),Sansa + foo(( 92 ),destroy(ROWS,-bar(---67) * 1) + --y));
	if(Stark){
	Sansa += rule(foo(bar()),x);
	Ygritte /= -rule()
}
}
var dog = -( TABLE[-78][( 0.52 )] )
def destroy(y){
	Ygritte /= TABLE[ROWS][-6] * mislead(--x,ROWS);
	Jon;
	-0.54
}
def TABLE[COLS][j] {
	Hodor *= 700.044;
	Sansa *= ROWS;
	if(----50 - --TABLE[-170.178][TABLE[-1][Ygritte]]){
	if(Jon){
	Hodor *= ( COLS );
	Stark *= ( foo(( COLS / ( 1 ) )) )
} else {
	Arya += -0.95
};
	if(COLS){
	-Jon
};
	Hodor += dog
}
}
var x = ( x )
var Sansa = -0.8
def bar(Arya,Jon){
	if(( COLS ) + destroy(Ygritte,-COLS,Ygritte) * COLS){

}
}
def TABLE[y / -COLS / 0.18][i] {

}
def TABLE[rule(dog,( COLS ))][i] {
	if(-890.7797){
	dog /= TABLE[( --1 )][( -0.65 ) * -0.54 + dog];
	rule(ROWS * -90.3382 * COLS - -140.155)
};
	Jon *= 0.24
}
def TABLE[--TABLE[( TABLE[betray(dog,( Sansa ))][--65] )][( COLS )]][i] {
	ROWS
}
def mislead(Sansa){
	-rule(ROWS);
	( ( TABLE[Jon][-bar(20)] ) / destroy(Jon + --0.67 * ( -COLS ),-TABLE[Stark][-foo(ROWS,foo(rule(Stark + COLS),-Arya),( Ygritte ))] * --betray(( ROWS ) / -TABLE[( ( dog ) )][TABLE[1][-( TABLE[Hodor][( TABLE[COLS][-destroy(COLS) * -0.6] )] )] * COLS],TABLE[( --betray() )][bar(1,0.43,( COLS ))],x)) )
}
assert mislead(COLS,-TABLE[ROWS][COLS],Arya) : "Fear cuts deeper than swords."
def protect(Sansa,Arya,Stark){
	if(rule(( -1 ),-87,TABLE[( 46 ) - bar()][rule()]) - ( ( protect(-( Stark ),460.4796) ) ) * Stark){

};
	-1
}
def TABLE[-0.49][j] {

}
assert 0.92 : "What do we say to the Lord of Death?"
assert -160.54 : "Fear cuts deeper than swords."
def betray(){
	( TABLE[Ygritte][Stark] );
	bar(( ROWS )) / COLS;
	ROWS
}
assert foo(( dog ) - 0.81,--rule(-Sansa,COLS)) : "Winter is coming"
def TABLE[Ygritte][i] {
	( dog )
}
def TABLE[-0.57 + Sansa / mislead(-260.3851,-x,rule(( destroy() )))][j] {
	dog *= TABLE[360.8 + betray()][( Arya )];
	-COLS;
	Hodor
}
var Arya = Jon
def mislead(Jon,Arya){
	x -= ROWS - y - -0.08
}
def destroy(y){
	rule();
	if(protect() + 0.26){
	if(Sansa){
	x /= betray(mislead(-ROWS),TABLE[-75][-rule(protect(),x)]);
	y /= -betray(mislead(dog),ROWS)
};
	Stark -= -43
} else {
	Hodor *= betray(( Stark ) - Ygritte - x);
	if(Ygritte){
	Arya;
	if(--0.4 / ( -0.11 ) + 1){

} else {
	y -= Stark;
	if(Ygritte){

} else {
	dog - -rule() - --( betray(x) ) - y
}
}
}
}
}
assert TABLE[dog][TABLE[TABLE[-bar()][( COLS )]][mislead(dog,( ( destroy(Stark) ) ),( dog ))] - 120.92] : "Winter is coming"
assert ( x ) : "Winter is coming"
def TABLE[-foo(Stark)][j] {
	ROWS
}
def TABLE[-0.98][i] {
	dog *= ( foo(( -31 )) );
	if(Stark){

};
	Arya *= bar(-0.51)
}
def foo(Stark,Hodor){
	Ygritte -= Jon
}
def TABLE[destroy(--68,Hodor,--( -1 ) * ( -Ygritte ))][j] {
	-COLS;
	if(betray()){
	if(0.08){
	Ygritte
} else {
	Arya += 0.8;
	if(Arya){
	dog /= Ygritte;
	Jon += COLS
} else {

}
};
	if(-1){
	( ( ( -1 ) ) - -1 );
	Sansa += protect(( -73 ),1,TABLE[-71][Jon]);
	if(1){

} else {
	if(foo(ROWS * Ygritte,bar(49,mislead(( destroy(destroy(( ( -COLS ) )) / ( -500.166 ) * 11,-x,COLS) ) + ( COLS ) - ( protect(-0.04) )),TABLE[-destroy(( ( x ) ),TABLE[1][Hodor],92)][( -1 )]))){
	1
} else {
	Ygritte -= x - ( ---( TABLE[-0.49][1] ) );
	Ygritte += rule(Ygritte + Stark - TABLE[79][TABLE[COLS][( -1 )]])
}
}
}
};
	if(betray(( protect(-rule(mislead(foo(rule(),( ( TABLE[( -14 )][-2] ) ),Arya),Arya,betray()))) ) * TABLE[-1 + 0.64][( bar(COLS) )])){
	Sansa *= dog;
	if(rule(destroy(COLS,Hodor))){
	if(( bar(( TABLE[-420.206][1 * ROWS] + -Jon ),0.33) ) - ROWS){
	COLS;
	dog /= ( -0.31 ) / 52
} else {
	if(COLS){
	ROWS;
	Sansa += Ygritte
} else {
	ROWS
};
	ROWS
}
};
	destroy()
} else {

}
}
def TABLE[destroy(ROWS,( Jon ),-Jon + ROWS)][j] {
	TABLE[TABLE[( Sansa )][dog]][1];
	1
}
var Jon = -100.36
assert destroy(--1,mislead(destroy(mislead(Sansa * betray(),foo() / ( protect() ),0.75) - 44),Hodor,x) + mislead(( mislead(( 91 ),betray(( 0.74 ),ROWS,destroy()),mislead(--ROWS)) ),Sansa),Sansa) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( x ) : "Fear cuts deeper than swords."
def TABLE[0.67][k] {
	-0.83;
	Sansa
}
def TABLE[ROWS / TABLE[( ( foo(20,TABLE[COLS][Ygritte]) ) )][-960.67 - ( -x )]][i] {
	Ygritte /= destroy(-Sansa,86,( ROWS )) / dog;
	if(( TABLE[0.49][1] + ( ROWS ) - -x + -0.17 + 240.65 )){
	y;
	if(( TABLE[bar(( ROWS ),dog)][( -( Arya ) )] - ROWS )){

}
} else {
	Hodor /= ROWS;
	if(TABLE[Hodor][-97]){
	dog;
	if(destroy(( ( protect(( y * ( COLS ) ),rule(-dog)) ) )) * TABLE[TABLE[ROWS][( Arya ) * -1]][-1]){
	bar();
	-0.7
} else {

}
}
}
}
var Arya = Stark / -dog * bar(-( ( TABLE[( Stark ) / TABLE[( ROWS - ROWS )][dog * ( -0.25 )]][-mislead(( ROWS ),x)] ) ),dog,foo(( -37 ))) * ( ( ( -Hodor - Ygritte - -mislead(ROWS,-x * rule(),rule(dog * protect() - TABLE[protect(betray(Arya,protect(COLS,ROWS * mislead(TABLE[( COLS )][betray(mislead(destroy(( rule(--43) + -( -53 ) ),betray(( dog ),-0.04),( TABLE[ROWS][betray(dog)] ))) / ( ( COLS ) ))])),( ( COLS ) )))][betray(x,bar()) / -mislead(-72 / TABLE[-COLS][mislead(3)])],-x,betray(( betray(TABLE[TABLE[-1][COLS]][Arya]) ) / --1,protect() + betray(Hodor + -COLS,mislead(foo(COLS,-ROWS * COLS + mislead() / ( ( TABLE[Sansa][410.5728] ) / 34 ) * TABLE[Arya][-ROWS] / ----mislead(-30,( -COLS * protect() ))) - -( dog ))),-89))) ) ) )
def rule(Ygritte,Sansa){

}
def protect(Hodor,Jon,Stark){

}
def TABLE[52][i] {
	95 / 1;
	Ygritte /= ( ( ROWS ) );
	if(1 / COLS){

} else {
	if(COLS){
	TABLE[( -( 32 ) )][Sansa]
} else {
	dog -= --61;
	if(x){
	bar(( 0.03 )) - bar()
};
	Stark *= TABLE[ROWS][( ( ( ( ( Hodor ) ) ) ) )]
}
}
}
def betray(Ygritte,Sansa){
	Jon += ( ( ROWS ) + -( 0.88 * Ygritte ) + -0.91 );
	Stark -= Sansa;
	dog += --( 0.5 )
}
def mislead(Hodor,y){
	-460.38
}
var dog = -Arya / ( 8 )
def destroy(Arya,dog){

}
var Sansa = bar(( protect(---COLS,dog) ),( 1 ),TABLE[-1][TABLE[-y][ROWS / ---Stark - 0.29]]) + -210.124
def mislead(Hodor,Sansa){
	y;
	if(( ( ROWS ) - -( -bar(-490.533) + destroy(mislead(( Jon + Sansa )),mislead(foo(-ROWS,( ( 5 - x * --0.03 ) ),--1))) ) - Jon )){
	Sansa -= COLS;
	if(destroy(betray(--0.84 - 95),( COLS / Ygritte ))){
	if(Arya){
	y;
	Sansa -= Sansa
} else {
	if(-COLS){

} else {

}
};
	Hodor;
	if(Hodor){
	Sansa *= betray(ROWS,Jon,( Hodor * ---830.316 * dog + -0.76 ))
} else {
	if(y){
	if(( ROWS )){
	if(-( -49 )){
	if(( ( dog * --( ( mislead(mislead(betray(Stark,--0.85,COLS - Sansa) + 350.617,COLS,38 + ( ROWS ) - 0.83),( Ygritte ) * protect(ROWS),COLS - rule(ROWS,( TABLE[protect(( Hodor ),-Arya)][-foo(-ROWS,--0.07 - -1 - ROWS - ROWS)] )) / -ROWS * Arya) ) ) ) )){

};
	if(--0.43){
	if(--protect(82 * -0.66) - 78 + betray(( COLS ))){
	if(0.9 * ROWS){
	( Jon );
	260.256
} else {
	y += TABLE[TABLE[-93][-400.94 * Sansa] - TABLE[mislead(( -Jon ))][x]][-ROWS - 1];
	if(-0.11 - mislead() * -( --0.69 )){
	if(0.41){

} else {
	78;
	if(0.57){
	( TABLE[( ( ROWS ) )][Jon] )
}
};
	Hodor *= -0.44;
	Sansa *= COLS
} else {
	-1
};
	if(( Hodor - 1 )){
	if(-x / bar(Stark) - 380.27){
	if(TABLE[( ROWS )][0.45]){
	if(-TABLE[--1][-Arya]){

} else {

};
	Ygritte *= TABLE[ROWS][49];
	if(rule(-47)){
	dog /= ( protect() );
	if(COLS){

};
	if(Stark){
	if(protect(-( 0.7 ))){
	Hodor
} else {
	if(0.23){

}
}
} else {
	x += ( ( -20 ) )
}
} else {
	( ( mislead(---0.12 / 0.62 * -690.9,rule()) ) )
}
} else {
	-( COLS )
};
	mislead()
} else {
	Jon *= TABLE[( -16 )][destroy(82,dog,ROWS)] - -4
};
	0.23
}
}
} else {

}
} else {
	x -= -1
}
};
	if(Arya){
	if(( ( -610.36 ) )){
	if(---0.95){
	Sansa += ( -( protect(-( TABLE[Jon][ROWS] )) * TABLE[-0.19][( betray(Jon,( Ygritte + 2 ),20.193) )] ) );
	Arya;
	( protect() )
};
	Ygritte += ROWS;
	rule(Sansa,ROWS)
} else {

};
	Sansa -= --490.8
} else {
	Jon *= ( protect(TABLE[dog][COLS],dog) );
	--21
};
	if(Ygritte){
	if(---790.6){
	if(COLS){

} else {
	-betray(Ygritte,mislead(TABLE[TABLE[mislead()][COLS]][rule(-mislead(-y,0.96),COLS) * y * -0.61 / TABLE[78 - -dog][Ygritte]]));
	if(( foo() )){
	-77
} else {
	x;
	Arya;
	COLS
};
	dog /= destroy(690.28,-( mislead(( mislead(-Sansa + y + betray(--50.2414,Arya)) ),betray(( bar() ))) ))
};
	if(ROWS){
	Arya -= Jon
};
	if(COLS){
	if(-bar(TABLE[-83][( Hodor ) / Ygritte * -Ygritte + x],TABLE[24][-( COLS )] - -( ( COLS ) ) * protect(COLS,y) + ( bar(Ygritte,bar(ROWS)) ))){
	COLS;
	1
}
}
};
	57
}
} else {
	if(---y){
	if(( -80 )){
	if(bar()){
	( Ygritte );
	rule(( TABLE[( -Stark )][-1] + -0.42 / Stark ))
};
	if(bar(destroy(COLS),-( ( 53 ) ) / -Stark)){
	if(( y )){
	Ygritte -= COLS;
	1;
	Arya
};
	if(-310.144){
	TABLE[Arya * 0.68][( Ygritte )];
	Stark
} else {
	if(Stark){
	Stark *= foo(TABLE[COLS][-rule(0.37,-( dog ) / ( ( -ROWS ) + -61 ))])
}
}
} else {
	if(COLS){
	COLS;
	rule(rule(( mislead(dog,-1,foo(-ROWS)) / -ROWS ) * ( Jon ),( betray(780.27,Arya) )),COLS);
	Arya += -protect()
}
}
} else {
	ROWS
}
} else {
	if(COLS){
	x -= dog;
	if(-( --COLS )){
	y -= ( --( ( ( -27 ) ) ) ) - ( ( Arya * -990.2359 ) )
} else {

};
	rule()
}
};
	Stark += x - foo(( TABLE[( Stark )][ROWS] ),ROWS) * ( bar(( betray(66) ) / --0.64 / -68) );
	1 * betray(( bar(47) / -( TABLE[15][( ROWS )] ) * -bar(protect(),ROWS - -( TABLE[TABLE[( COLS )][mislead()] * -1][53] / y + TABLE[COLS][rule(0.98)] )) ),dog)
};
	Ygritte /= COLS
}
}
}
} else {
	-0.36;
	if(destroy(-0.98 + dog)){
	mislead(( x ),-700.395) / -foo(Arya,ROWS,( 50.307 ) * ( -6 ) / ROWS / bar(ROWS)) * ( ( -COLS + ( Stark ) + rule(TABLE[-1][( ( -160.82 ) )],--ROWS * Sansa / TABLE[foo(( dog ))][( -1 )]) ) )
}
}
}
var Stark = COLS
var dog = destroy()
def betray(Ygritte,Stark,Arya){
	-dog + COLS;
	if(TABLE[mislead(( -dog / ---rule(-COLS,0.06,-5) / --( TABLE[dog][( TABLE[0.18][bar()] )] * y ) / --Hodor + Stark + --1 ),Ygritte)][foo(-TABLE[Stark * COLS][mislead(ROWS,ROWS,-0.29 - foo(-COLS,ROWS))],76,Arya + -0.49)]){
	if(( y )){
	-1 + COLS;
	Sansa -= -1
}
}
}
def foo(Sansa,y){
	dog /= --ROWS * 25 + Jon;
	TABLE[( -TABLE[foo(( 1 ))][Jon] / foo(Stark,ROWS) )][COLS * -( TABLE[---ROWS][x] / ( Arya ) )]
}
def TABLE[foo(-( 0.31 ))][k] {
	dog /= ( mislead(protect(( ( dog ) ),--1 / mislead(-( Hodor ) * -Arya,( COLS ))) / Stark,COLS) ) - TABLE[( ( ( -mislead() ) ) )][-66];
	Sansa
}
def mislead(Ygritte,Jon){

}
def TABLE[destroy(rule(-93,( dog )))][k] {
	foo(0.82 * y);
	x *= betray(ROWS + ( Sansa ),-1,destroy(( Jon - 420.675 + -1 )))
}
assert 0.38 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert COLS * rule(mislead(-( -0.38 ) / y,-11,COLS),--720.904) : "One can not simply parse himself"
def destroy(){
	x += protect(-COLS,mislead(ROWS,-Ygritte / -78 / 0.12 + -( ROWS ) + bar(Stark) * -73 / TABLE[foo(Arya,Stark)][( 720.57 )]));
	y *= -28
}
assert protect(-68) : "Fear cuts deeper than swords."
assert -( foo(-83,rule(( --( COLS - ---TABLE[( TABLE[x][-0.02] )][( 1000.796 )] ) ))) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(y,Hodor,dog){
	COLS
}
assert -1 : "What do we say to the Lord of Death?"
var Stark = Jon / 0.05 - foo(( Stark )) + --betray(-Arya,y) * -0.65 + -1 / ( ( ROWS ) )
var dog = x
var dog = ( -1 / ROWS )
def TABLE[-Jon][i] {
	Arya -= x
}
def TABLE[TABLE[--rule(( destroy(TABLE[Sansa][foo(-foo(( betray(( 0.2 )) ),TABLE[COLS][( Ygritte / destroy(( rule(COLS) ),54) )]),---88 + Arya)],y * TABLE[-0.26][( TABLE[( -29 )][--x] )]) ),x / dog * -COLS) + TABLE[( COLS )][-dog]][-90]][j] {
	if(-0.54){
	if(1){

} else {
	-( Sansa )
};
	Hodor /= foo(Sansa + dog,-16)
} else {
	Arya /= -53
}
}
assert -destroy() : "Winter is coming"
var Stark = TABLE[COLS][destroy(protect(Stark,-20.467)) + ( ROWS * COLS ) / ( ( protect() ) )]
def TABLE[( ROWS )][k] {
	-48
}
var Jon = -80
assert -foo(x - -Arya,betray()) : "What do we say to the Lord of Death?"
var y = ( --y / betray(Ygritte + TABLE[COLS][ROWS]) )
def protect(){
	--dog
}
assert 77 : "Nothing burns like the cold."
assert 850.2 : "One can not simply parse himself"
def TABLE[TABLE[COLS + Stark][dog]][k] {
	-( y );
	( mislead(COLS,--COLS) )
}
var Ygritte = COLS
def betray(Arya){
	if(Ygritte){
	Arya /= Hodor;
	TABLE[-( x )][Arya];
	COLS
} else {
	-( Jon );
	if(Jon){
	ROWS
};
	dog += bar(( rule() * 1 - Jon ),-490.4) * ( --dog - betray(--TABLE[Arya][-foo(ROWS - COLS,foo(-( protect() ) - ( y )))],0.9) - ( ( ( ROWS ) ) ) )
};
	-Sansa / mislead(-25,-TABLE[rule(( 0.64 ),bar(destroy(-75,270.62)))][( ( -0.39 ) )] + -ROWS,-ROWS * dog)
}
def TABLE[COLS][j] {
	-COLS
}
var Hodor = dog - TABLE[ROWS - Hodor][-69] * -0.91
assert mislead() + 0.4 : "One can not simply parse himself"
def mislead(Sansa){
	if(destroy(1,TABLE[( x )][foo(--ROWS + mislead(( x / mislead(--77 + 0.28,( -0.8 )) ) + destroy(Stark,Ygritte - TABLE[0.75][-ROWS] - ---TABLE[destroy(protect(y,1))][-1] / TABLE[mislead(( ( x ) ),-260.904 - -bar(y,COLS) / rule())][ROWS]),( 40.609 ),Jon) / ----Arya - -ROWS / bar(betray(( ( -rule(--65) ) * bar(ROWS) ) * ( ( ( -( x * 11 ) ) ) )),--( COLS ) + dog,rule(0.91)) * -bar(Jon - COLS))] + destroy(bar(-foo(),ROWS) - TABLE[mislead(Jon,rule(foo(),--mislead(( -Jon ),foo(COLS,Sansa * --Sansa - ( x )),--x - -1 - ( -( COLS ) ))),-TABLE[-Sansa * Ygritte][x * x]) / TABLE[ROWS][( 0.3 ) - --0.69]][Stark]) + ( -58 ))){
	Stark *= rule(Stark);
	protect(foo(( ( mislead() ) ),dog));
	-94
};
	-20;
	if(mislead(( Arya ) + -Ygritte + COLS,COLS,betray(ROWS,rule(COLS,-ROWS,-Hodor),destroy(TABLE[Stark][-( ROWS )],( mislead(dog,( ( -20 ) )) ),ROWS))) - ROWS){

} else {
	Stark /= COLS
}
}
var Ygritte = Hodor - ROWS
assert 15 : "Winter is coming"
def mislead(Jon,Hodor){
	( -y );
	Arya *= Jon
}
assert TABLE[0.7 / bar(Jon)][COLS] : "What do we say to the Lord of Death?"
var Ygritte = TABLE[-betray(--28 - ( COLS ),( x ) / 37) - TABLE[ROWS][dog]][( Arya )]
def betray(Stark){
	( Stark - x + Ygritte );
	dog += -58 + Hodor
}
def TABLE[--1 + ( x / --87 )][i] {
	x += y;
	Arya /= -y
}
def mislead(Hodor,Hodor,Stark){
	( --550.021 );
	-55
}
var Jon = rule(TABLE[( -ROWS )][TABLE[22][Jon / Stark]],Stark)
assert ROWS : "What do we say to the Lord of Death?"
var Stark = dog
var Stark = 81
var Arya = Ygritte
var y = x
def TABLE[( ROWS )][k] {
	Sansa /= rule(TABLE[TABLE[ROWS][----( 53 ) * Arya + mislead(( ROWS / dog )) - protect(--32,--( COLS ),y) - --0.87]][-0.49 + Stark * -destroy(-7,Arya)],COLS)
}
def TABLE[destroy()][j] {

}
def betray(Stark,Sansa){
	( bar(dog) ) + dog;
	y -= TABLE[Hodor + ROWS][ROWS]
}
var Sansa = ( 92 )
def mislead(x){
	Ygritte;
	-12
}
def TABLE[( ROWS )][j] {

}
assert 1 : "Nothing burns like the cold."
var Sansa = -TABLE[-Jon][betray(protect(betray(ROWS,y),betray(),-( -TABLE[-Stark][TABLE[0.06][mislead(destroy(x,-68))]] )) / TABLE[y + 99][-64])]
def TABLE[TABLE[betray()][COLS]][j] {
	if(-ROWS){
	if(-mislead(mislead(-TABLE[----TABLE[-0.39][TABLE[-rule()][( Arya + Hodor + ( -72 ) )]]][0.29] / ( ( ( protect(ROWS) ) ) ) + rule(Arya,-( TABLE[-ROWS][-TABLE[( -0.31 )][destroy(TABLE[TABLE[ROWS][--foo(--( ( -910.3 ) ),( ROWS ) + mislead(-y)) + ROWS]][TABLE[TABLE[ROWS * 1][--0.83]][-Sansa]],Arya)] - foo(Arya,mislead()) / mislead(--41 * betray(y) * Sansa,mislead(bar(),-0.88)) + -x] ))),-0.22)){
	-0.39 + ( betray(1,-ROWS) - Hodor * Sansa - TABLE[-ROWS][--foo(720.88)] * betray(-( 740.352 ),( ( bar(-Stark,betray(( ROWS ))) ) )) );
	-Ygritte / Arya;
	if(COLS){
	if(( bar(0.2 - -bar(Hodor,0.7,bar())) ) - x){
	Arya -= destroy(( Jon ),-1)
} else {
	Arya -= -1;
	Sansa /= ROWS;
	-170.8
}
} else {
	1;
	TABLE[-Arya][Stark];
	y /= Hodor
}
} else {
	bar(-30) - -( protect() ) - rule(-1,54)
};
	if(mislead(ROWS,TABLE[COLS][dog])){
	if(betray(-0.54,( -300.2 ))){
	Stark -= -( -56 )
} else {
	if(----( --TABLE[Hodor][COLS] * Stark + -4 ) + TABLE[x][destroy(( rule(-Stark / -( Sansa ) - ( -COLS + TABLE[mislead() * -1][betray() * -( --1 ) * y * -Stark / 55] )) ),Ygritte)] / Arya / Sansa * COLS){
	Stark;
	Ygritte -= ( x );
	destroy()
};
	if(ROWS){
	if(Jon + ROWS){
	x /= protect()
} else {
	if(rule(destroy(TABLE[13][( -76 )],Ygritte,COLS),mislead(-COLS * Ygritte,( Arya / ( dog ) ) * --bar(( --rule(Jon,1) ),foo(mislead(TABLE[TABLE[COLS][-950.917]][mislead() - Sansa]),-betray(ROWS) + betray(),-Stark))))){
	Jon /= COLS;
	Stark -= 870.47
}
}
} else {
	dog /= -32
};
	Jon
};
	if(TABLE[ROWS * COLS][ROWS]){
	Stark += 0.17
}
};
	-59
} else {
	1
}
}
var x = ( x )
def TABLE[( ( Jon ) )][k] {
	if(( ( Stark ) )){
	( y );
	if(( -( -mislead(TABLE[TABLE[-( COLS )][COLS]][0.6],COLS - -0.25) ) - 87 )){
	-bar(ROWS,( bar(ROWS) ),x);
	protect(Jon / foo(160.39,y,--35) / destroy(( TABLE[-53][0.8 / Arya] - 5 )) - TABLE[ROWS][--1 + protect(-( -TABLE[-( -0.03 )][ROWS] ),-1)]) + protect(COLS,-mislead(COLS) / ( -( TABLE[Ygritte][-foo()] ) - 57 + ( TABLE[--0.65][-1] ) ) + 60.8 + Arya + ( TABLE[ROWS][foo(-foo(mislead(-y + Arya,0.4),Ygritte) - -0.99,x + Jon + destroy(x * destroy(0.17,ROWS) - -ROWS,1) - 1)] ) * -ROWS + bar(COLS));
	Stark -= Arya
} else {
	if(y){

};
	if(y){
	Sansa -= -y + TABLE[-0.06][foo(rule(-34)) - 12];
	-Hodor
} else {
	Jon;
	if(0.31){

}
};
	if(( ( ROWS ) )){
	( COLS );
	dog += ( -rule() )
}
}
}
}
assert bar(-bar(( ( -7 ) + y ),-TABLE[-bar(-0.48,850.2 + Stark)][( -97 )] + mislead(rule(TABLE[960.81 * ( -( TABLE[960.07][-y] ) )][--( dog )])) + -840.8 * foo(-400.901)),--0.72) / Stark / ( ROWS ) / Sansa : "Fear cuts deeper than swords."
var Arya = -380.3
def TABLE[( protect(( ( COLS ) )) ) - -1][j] {
	Stark *= TABLE[( destroy(x) )][Sansa];
	if(ROWS){

} else {
	if(COLS){
	Hodor += x;
	0.75
};
	-Ygritte
};
	dog *= -( COLS )
}
assert -( protect(foo(( ( -1 ) )),bar(-84,( ( TABLE[-48][--Arya] ) ),( --foo(betray(dog,Hodor)) + 560.769 ))) ) + ( Arya ) : "Winter is coming"
def bar(Stark){
	if(0.89 - mislead(-( -0.39 + 0.8 )) * ( foo(( TABLE[COLS][mislead(ROWS,( ( foo(COLS) ) ))] ),rule(-Hodor)) )){

};
	-ROWS
}
assert bar(Hodor,-betray(( Ygritte ),47)) : "One can not simply parse himself"
assert ( COLS / TABLE[COLS][Ygritte] ) : "Nothing burns like the cold."
def TABLE[protect(( -( betray() ) * ( mislead() ) ),( betray(Hodor - ( -0.93 ),8) )) + -ROWS][k] {
	if(ROWS){
	x -= ( protect(COLS * bar(-dog)) )
};
	Stark
}
def destroy(Sansa,Hodor){
	TABLE[Arya][Ygritte] / Arya / ( Arya )
}
assert TABLE[ROWS][mislead(betray(rule(-( Sansa ) / 99 / 0.17,rule(Arya,( dog )),foo(-( bar(( dog ),Sansa) ))),( rule(rule(( ( bar(-TABLE[-860.68][--( -1 )],TABLE[( 93 )][ROWS]) ) ))) )))] : "What do we say to the Lord of Death?"
assert 41 : "Winter is coming"
def rule(Jon,Stark,Ygritte){
	-520.47 - mislead(( y ),TABLE[destroy(rule(43,betray(rule(-15))),-0.8)][( ( --10 ) ) + 20.831])
}
assert --740.352 + -1 / ( protect(( mislead(-90.185) )) ) : "One can not simply parse himself"
def bar(Jon){
	x -= -( ROWS );
	-TABLE[( -ROWS )][-1];
	( COLS / ( 0.01 ) )
}
def TABLE[( -0.92 )][i] {
	if(( -1 )){
	if(x + ( 1 )){

} else {
	Sansa -= 0.53 + -COLS
}
} else {
	370.682
};
	if(-Stark){
	if(protect(COLS / -1)){
	Arya
}
};
	if(COLS){
	COLS
}
}
var Hodor = ( foo(-14) )
def bar(){
	Hodor -= --1
}
var Arya = TABLE[ROWS][bar(COLS + ---( betray() - Hodor - COLS ))]
var x = ( --destroy(-bar(( foo(0.01 - -Jon + -99) )),-680.476,foo(mislead(COLS + -( ( 0.58 ) ) * x) + Ygritte,bar(),Sansa)) )
def bar(Hodor,Ygritte){
	if(( Hodor )){
	Ygritte *= ROWS;
	x *= -destroy()
}
}
def rule(){
	if(( TABLE[Arya][( ( foo(Hodor,bar(ROWS)) ) )] ) + -( ( TABLE[ROWS][-0.43] ) )){

};
	Hodor *= COLS
}
def bar(Stark){

}
def betray(){
	ROWS
}
var Stark = ROWS
def TABLE[630.9][i] {
	Stark *= ( Arya / ( 34 ) / -( Hodor ) * -950.0721 )
}
assert protect(0.99 - ( -8 ) - Stark,Hodor,( ---( TABLE[TABLE[ROWS][( --0.32 )]][Stark * x / dog] ) * Stark / COLS )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[destroy(-ROWS,( -46 - Arya ))][k] {
	y *= -( mislead(( 0.09 ) * Arya,y / foo(-0.79 / betray(-1,Ygritte,Stark) + ROWS),-Stark + -ROWS - mislead(dog,COLS,( ( -TABLE[--( Stark ) / ( mislead(0.1,( ( rule() ) )) ) + -rule(-rule(dog,Sansa),TABLE[480.326][TABLE[rule(-betray(x,( -dog / -( rule(protect(-rule(35),0.62,--rule(ROWS)),-COLS,-( ROWS )) ) / dog )))][Stark]])][COLS * TABLE[betray(Sansa,COLS)][rule() - -TABLE[bar(( COLS ))][Stark - ROWS / 480.995 / COLS / dog / -77] * mislead(( 1 )) + -44] / COLS - COLS] * ROWS ) ))) ) + Sansa;
	( ---dog / -COLS - Stark / Stark / -0.62 )
}
var Ygritte = Sansa
var Arya = ( mislead(-Arya,( 0.03 )) ) + foo(x) * -0.73 * mislead(Ygritte)
assert betray(Jon,( ROWS )) : "What do we say to the Lord of Death?"
def mislead(Ygritte){

}
var Sansa = --0.51
assert Stark - -x - -Sansa + TABLE[-( ( TABLE[-Arya][-Sansa] ) )][y] : "Fear cuts deeper than swords."
def TABLE[dog][i] {

}
var Jon = -Hodor
def destroy(Hodor){

}
def TABLE[-TABLE[-destroy(rule(betray(ROWS - betray() * -( -970.801 ) * ROWS)),( -370.963 ) * --72,-( y - x ) * -0.6 + ROWS) + betray()][15]][k] {
	if(0.22){

}
}
var Ygritte = -250.711
def TABLE[COLS][k] {
	COLS;
	if(protect(-27)){
	if(88){
	y;
	( ( ROWS ) )
} else {
	Ygritte *= 710.432;
	if(0.12){
	if(ROWS){
	Stark -= --51;
	Sansa *= ( TABLE[( rule(73,-0.7) )][( betray(( -38 * -0.13 ),Arya,--0.74) )] );
	if(COLS){
	-( ( y * destroy() ) ) + ( -480 * COLS );
	bar()
} else {
	mislead();
	Ygritte -= -1;
	y /= -Arya + destroy(foo(),destroy(---20.54)) - TABLE[-( -( mislead(protect(( rule(TABLE[( betray(( -x * -73 )) ) / bar(COLS,Arya,( TABLE[( ROWS ) + -( -59 )][Sansa] ))][--44],Hodor * Arya) ),Jon),y) ) )][-Hodor]
}
} else {
	foo(COLS,foo(Ygritte,bar(-destroy(( Hodor ) + -0.86,ROWS,ROWS) / TABLE[COLS][y - -1 * foo()])) * destroy(0.88));
	if(Stark){
	-1;
	-COLS;
	( Jon )
};
	Ygritte /= x
};
	if(ROWS){
	Arya += TABLE[betray(-ROWS)][-destroy(Stark - ( ( bar() ) ) * ROWS,( Jon ))];
	Arya *= ( -77 )
} else {
	if(( Jon ) + ( Stark ) - Arya){
	dog += -TABLE[-( ( --0.28 ) )][ROWS];
	dog /= ( ( ( ( -0.82 ) ) ) )
};
	( bar(destroy(-destroy(59,-betray(),Stark)),--4,( ( rule(Ygritte,protect(-71 * ( Arya ) / COLS),TABLE[foo(-TABLE[( ( ROWS ) )][COLS],Sansa)][destroy(protect(-( -0.12 ) * mislead()))]) + -28 ) + -foo(---1) )) );
	if(ROWS){
	( mislead(foo() * 1,( foo(bar(),9,-ROWS) / -ROWS )) );
	if(y){
	if(mislead()){

} else {
	if(( ( COLS ) )){
	destroy(TABLE[-TABLE[-( --y - destroy(0.67,( x )) * -51 ) * 0.68][foo() - -y]][1]);
	if(TABLE[-mislead(-550.23)][21]){

} else {

}
};
	if(( y )){

} else {
	0.79;
	-29;
	-1
}
}
} else {
	Hodor -= ( rule(TABLE[( mislead() * ROWS )][dog],-Ygritte) / dog );
	Jon /= ROWS
};
	Jon -= --( mislead(( COLS ),x + -ROWS * COLS,-destroy()) )
} else {
	Stark /= foo(protect(0.64,( ROWS ),TABLE[dog][mislead(Sansa,( Jon ))] * protect(dog,-0.41,1)),protect(-Arya));
	Arya;
	Stark *= COLS
}
};
	850.062 - ( ( COLS ) - -51 + y ) + protect(-0.05,0.65,280.16) + ROWS
} else {

}
}
}
}
def TABLE[( -( 0.04 ) )][i] {
	-( ( -94 ) )
}
def TABLE[( protect(-50) )][j] {
	if(ROWS){
	-destroy(foo(bar(destroy()),50.107))
} else {
	Arya += ( --TABLE[mislead(COLS,bar(( 1 ),COLS),0.72)][-0.79 - ROWS] );
	if(1){

} else {

}
};
	( Stark / Ygritte - -( ( --COLS / rule(( -93 )) * 550.108 ) ) - --dog - 60.98 - Sansa );
	74
}
var Hodor = Sansa
assert -0.14 : "Fear cuts deeper than swords."
def mislead(y,Ygritte){
	-32;
	-TABLE[-1][-40] * -Ygritte
}
assert -78 : "What do we say to the Lord of Death?"
def TABLE[1 + 50][k] {
	Sansa /= ( Sansa );
	if(1){
	if(1){
	if(x){
	Stark *= x
};
	if(( bar(0.88) / ( y ) )){
	protect(dog,ROWS,--Jon);
	Hodor / destroy(Ygritte,65);
	if(destroy(COLS)){
	-83;
	y
}
} else {

}
};
	if(Arya){
	dog *= Arya;
	dog
};
	--mislead()
}
}
assert ( 0.55 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Stark : "Winter is coming"
assert ( ( ( ( rule(( 0.1 * Jon ),0.64) ) ) ) ) : "Fear cuts deeper than swords."
assert -betray(ROWS,foo(( mislead(--570.6305 / foo(protect(0.07,--( x )),--0.28 - COLS * ( -( rule(ROWS) ) ) / ( foo(300.27) ),-210.07),( protect(bar(COLS,--52 - -0.6),( 36 ),y) )) ))) * 0.82 : "What do we say to the Lord of Death?"
def TABLE[Stark][j] {
	dog
}
var Hodor = ROWS
def betray(Arya,dog){

}
def TABLE[( bar(Hodor * ( -COLS )) ) - Sansa][i] {

}
def betray(dog){
	x -= rule(0.35 - y) * ( -protect() )
}
var x = 0.42
assert ROWS * -ROWS - ( mislead(Hodor,TABLE[y][--rule(( -700.9 ),COLS) - -x],TABLE[-y][( 36 )] * rule() / y) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(Sansa){
	ROWS
}
def betray(Sansa,dog){
	Hodor *= COLS;
	if(-400.06){

}
}
def TABLE[Hodor][i] {
	Jon /= 71
}
assert -( COLS + COLS ) - TABLE[Arya][-720.6] : "One can not simply parse himself"
assert ( Ygritte ) : "Nothing burns like the cold."
def TABLE[( mislead(-0.16,ROWS) )][k] {
	( mislead() );
	y *= -17;
	if(foo(protect(Jon,-570.977 + -72,COLS - ( Stark ) - foo(y)),TABLE[( dog )][-1 / 0.7],Jon)){
	ROWS
}
}
assert ( 1 ) : "One can not simply parse himself"
assert 1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[mislead(TABLE[bar(0.81,destroy(-foo(-y - destroy(TABLE[--39][( --910.3 / protect(foo(( 73 ),( Stark * mislead() * -37 - Jon ),-y + bar(( TABLE[bar(-y,-TABLE[ROWS][x])][COLS] ))) * COLS,y) / ROWS )],mislead(ROWS,Stark)),y))) / TABLE[82][COLS]][( -protect(-0.77) )],( betray(-ROWS * destroy(dog)) ))][k] {
	TABLE[Arya][Arya - Ygritte / 0.14];
	y -= -80;
	ROWS
}
var Sansa = --220.55
def TABLE[Hodor * Sansa][k] {
	Hodor;
	--820.26;
	Ygritte += ( destroy(protect(( TABLE[29][-830.62] ),rule()),( foo(rule(0.17 / ROWS,dog),Stark) ),-ROWS) )
}
var y = mislead(-0.2,TABLE[foo() * ( COLS )][Sansa])
def rule(Ygritte){
	if(( Stark )){
	dog -= ( -470.369 );
	betray(-1,y);
	ROWS
};
	if(( TABLE[-( TABLE[foo(Sansa,( TABLE[--0.17][230.6] ),ROWS) + bar(COLS,COLS,rule(rule(),-95,COLS))][( --( ( ( protect(betray(-50.44,COLS)) ) ) - -Ygritte / COLS / -14 ) )] * -rule(( -ROWS )) * foo(( ROWS )) )][ROWS] * COLS * -protect(COLS + -1) - -0.16 )){
	TABLE[-1 + ( ( 40.157 ) )][dog]
};
	if(mislead()){
	Stark += 30
} else {
	mislead(( ( ( TABLE[Arya / -( ROWS ) / --22][Sansa] ) ) / destroy() ));
	Ygritte /= betray() - -rule(15,--1)
}
}
def TABLE[1 / bar(ROWS)][i] {
	if(Stark * TABLE[38][TABLE[-ROWS][-ROWS] / -Hodor]){
	-( -mislead(TABLE[y][( ROWS )],( Arya )) );
	-ROWS;
	if(x){
	--830.943;
	if(ROWS + rule() - TABLE[0.6][( bar(COLS) )]){
	if(89){

} else {
	if(-COLS){
	if(Ygritte){
	Stark *= mislead(100.4097,Sansa,74);
	if(COLS){
	if(-Jon){
	Jon *= ( COLS );
	y *= Hodor
} else {
	dog *= ( TABLE[-( -38 ) / bar() + ( ROWS / y )][-14] );
	Hodor += rule(1,-( ( --betray(foo(-0.79),-( ROWS ) - -Arya + 1) ) * 92 ),( ( 680.97 ) )) * COLS;
	Arya
}
} else {

}
} else {
	Hodor *= rule(destroy(betray(TABLE[74][foo(-foo(( rule(-x) ),Sansa,( COLS )))] + foo()),betray(( ( foo(rule(0.27 + -Arya - TABLE[-TABLE[( Stark ) + COLS][( Stark )]][Hodor]) + Sansa) ) ),ROWS,1)),( x ),-1);
	Hodor
};
	COLS
} else {
	if(0.26 * Arya){
	if(-( -0.18 )){
	-15;
	Hodor *= -COLS
}
};
	Hodor /= y / ( dog / -rule(Ygritte,COLS) )
};
	if(-dog * bar(Stark,ROWS) * --bar()){

}
};
	0.95
}
}
}
}
var Hodor = rule(Jon,( betray(-( ( -80 - -1 ) )) ),-bar(ROWS,y,( ( COLS ) / ( -580.42 ) )))
assert -5 : "Winter is coming"
def TABLE[Jon][i] {

}
def TABLE[( Ygritte )][j] {
	Sansa -= ( ( ( Jon ) ) );
	if(Ygritte){

} else {
	-betray(protect(y,mislead(( COLS ))) + TABLE[Stark + -890.32][ROWS]);
	Stark /= TABLE[58][bar(ROWS,-900.9284 / -Arya)];
	-1 - ( ( -( ( ( TABLE[-Sansa / ( ( Ygritte ) )][TABLE[Hodor][--1]] ) ) ) ) ) + dog
};
	Ygritte *= ( bar(ROWS,48) ) - mislead(protect(550.68,-COLS),-0.54,Stark) + -TABLE[destroy()][Jon]
}
def TABLE[TABLE[( COLS / 0.62 ) + mislead(0.35,-59)][ROWS]][i] {
	if(Hodor){
	if(mislead(TABLE[-Ygritte / foo(( mislead(y,rule(Stark) * ( bar(-0.74) )) ),--betray(0.3,-73))][rule(-COLS,( rule(COLS) ))])){
	-( 8 );
	if(Sansa + bar(-betray(Sansa))){
	if(Hodor){

};
	Stark;
	if(ROWS){
	if(--83 - 0.76){
	-Ygritte;
	Stark -= 52;
	if(( 90.6 + dog )){
	if(( TABLE[-foo(protect())][--63] )){
	if(-1){
	if(( --44 * 69 )){
	if(( Jon )){
	if(( COLS )){
	Arya += --( Sansa )
} else {
	if(x){
	x *= protect();
	if(( ( -17 ) )){
	ROWS / -25;
	Arya -= 1
} else {
	87;
	-mislead()
}
}
};
	if(( -0.25 )){
	TABLE[-750.16][protect(-destroy(0.02,( ROWS * -83 )))]
};
	( 27 ) / Hodor
} else {
	if(-Stark){
	if(-Sansa){

};
	-( TABLE[--35][1] );
	Ygritte += Hodor
} else {
	if(-0.41 - COLS - COLS / ( ( y ) ) - foo()){
	Ygritte -= betray(Hodor - -mislead(( ( -COLS ) ))) - 82
} else {
	if(( ---9 * protect(Jon,-mislead(( 0.19 ),rule(-80))) )){
	if(TABLE[Stark][--1] - TABLE[0.22][-( COLS )] / bar(TABLE[betray(Stark,y - -0.22,940.17)][( -Hodor + x ) * rule(( Arya ),-1 + destroy(betray(1,TABLE[y][-19 - betray(TABLE[( 740.13 )][mislead(Hodor)],destroy(( --1 / Arya )))] + COLS * -( ( ( -x / ( -0.76 ) * ( COLS ) ) ) ),( dog )) / Stark,-( --( mislead(Ygritte,( 30.7332 ),( -ROWS )) / -rule(betray(-1),bar(--( Stark ),COLS,77)) ) / dog )))],Hodor) + bar(-Ygritte)){
	destroy() * -dog;
	if(-0.4){
	TABLE[( rule() * bar() )][COLS];
	rule(-x + -( Stark ))
}
}
} else {
	--0.08
};
	if(COLS){
	if(560.83){
	ROWS;
	-( mislead(--460.98) )
}
}
};
	Sansa /= -0.12
};
	if(( foo(TABLE[-protect()][Jon],( foo(( 0.27 ),-Arya) * -0.99 ),foo(( betray(-Sansa / ( TABLE[--dog][TABLE[protect(( ROWS ))][Arya * -0.58]] * Sansa * protect(mislead(--dog),foo(-y / rule() + 0.75,Sansa,0.36 * rule(COLS,COLS))) )) ),-860.1366,Stark)) )){
	Hodor /= COLS;
	Arya -= ROWS
}
};
	( Sansa ) + betray(-ROWS - Ygritte / -mislead(-( ROWS ),( ( -0.21 ) * Sansa )))
};
	( ( ( ( -( x ) ) ) ) + foo(bar(34 / protect(ROWS / rule(),mislead(foo()),-0.27))) );
	( Hodor - Sansa )
} else {
	if(ROWS){
	if(1){
	-foo(-destroy(),( --( -COLS + -68 - 0.24 - ( TABLE[( 1 )][-destroy(-( Hodor ),destroy(),-Ygritte)] ) ) ),rule(--0.01) - -COLS * -TABLE[ROWS][( bar(TABLE[-TABLE[COLS][( ( Arya ) - -Jon ) * --19]][-( -COLS )]) )]);
	Jon -= 48;
	Stark /= -39 + destroy()
}
}
}
} else {
	Jon += -TABLE[--betray(Ygritte,TABLE[betray(x,ROWS)][Ygritte]) - mislead() + ( TABLE[y][( -betray(-96,betray(rule(Arya,58) + foo(bar(destroy(-580.438,-( -1 )),-0.74,-( -4 ) + -mislead(TABLE[( rule(rule(Stark * ROWS + betray(ROWS),Sansa) + ( COLS - -destroy(-mislead(ROWS),Ygritte,Hodor) / --foo(-( Ygritte )) / --360.89 ),0.36 - COLS) )][-Hodor * -( ( dog ) )],COLS)) + rule(-( ROWS ),mislead()),destroy(destroy(foo(-Hodor),-mislead(-rule(TABLE[-COLS][--0.06],betray(protect(--mislead(ROWS),---Sansa)),0.01 + -0.12 * -88)),bar(( Jon )))))),ROWS) )] )][y]
};
	x /= 11
}
} else {
	( TABLE[Hodor][x] )
};
	COLS
}
};
	-Jon - ( ( TABLE[COLS][43 / Arya * Ygritte] ) )
};
	COLS;
	if(-99){
	if(-COLS){
	if(-0.24){
	if(-TABLE[Ygritte][( TABLE[( -98 )][0.32] )] * ( Stark )){
	if(-( y )){
	-75
};
	if(ROWS / 0.85){
	if(-0.64){
	x /= ( -bar(ROWS) ) / x
}
} else {

}
}
} else {
	if(-foo(destroy(( TABLE[-ROWS][( -y )] ) + -TABLE[destroy(COLS) + y][-0.1]))){

};
	ROWS;
	-ROWS
}
} else {

}
}
}
}
def TABLE[y][k] {
	if(-x){
	-60.297;
	-ROWS
};
	if(Sansa){
	( ( destroy(dog,--88) ) );
	-Stark
}
}
assert 1 / 69 : "One can not simply parse himself"
def foo(Sansa,x){
	1
}
def destroy(Arya,y){
	if(( ( ( ROWS ) ) )){
	if(( -COLS )){
	--y - --mislead(( betray(COLS,dog) ));
	-protect(( -betray(-destroy(COLS) + mislead(Hodor),-protect()) )) * protect() * Ygritte
};
	--( 800.07 / Hodor ) * destroy(( -91 )) - -0.15
};
	if(( 0.4 )){
	if(0.11){
	Ygritte -= 88;
	if(-520.2){
	-( -Jon );
	dog *= -1 - rule(-TABLE[destroy()][---0.17 + ( 370.988 - --x )],protect(rule(-( -( -Ygritte ) ),Jon)))
}
} else {
	x /= Arya;
	y *= -Jon
};
	y /= TABLE[-bar(bar(( foo(( COLS ) * -48,Stark,-rule(protect(ROWS - destroy(( -Sansa ),Arya),1),destroy(bar(destroy(81,( -mislead(( TABLE[COLS][-y + TABLE[92][TABLE[COLS][COLS] - -0.15] + ( mislead(( --0.87 ),betray(35,68,Hodor * ( ( mislead(83,( Hodor )) ) ))) ) - -Ygritte] )) ),-foo(--( -0.54 ) - ROWS,-ROWS * -1))),-foo(29,destroy(ROWS,--51)),Sansa),-foo(Arya,ROWS / Hodor / x))) ),ROWS))][-TABLE[-0.25][--1]]
};
	if(-( ( 0.38 ) + ( 450.53 ) )){
	-betray(-ROWS,-COLS,( ( 26 ) )) + COLS - 0.75;
	COLS
} else {
	( -1 );
	x /= protect()
}
}
assert -( Jon ) * COLS : "Nothing burns like the cold."
assert ( Stark / x ) : "Fear cuts deeper than swords."
assert ( -1 * foo(Stark + --200.43) * -betray(0.11 - bar(--TABLE[foo(Jon + ( rule(ROWS,-1) ),ROWS)][---y] + ( COLS )),-470.4) / Stark ) : "Winter is coming"
def mislead(Arya,Arya,x){
	y *= y
}
assert --ROWS / mislead(-y) - foo() / 0.46 : "Fear cuts deeper than swords."
var dog = ( -1 )
def TABLE[foo()][j] {
	Jon += COLS + ( 29 )
}
var Ygritte = TABLE[COLS - -0.98][( bar(Hodor,-ROWS) )]
var Arya = ( 0.19 )
assert Sansa : "Nothing burns like the cold."
def destroy(Arya,Ygritte,Arya){
	ROWS;
	foo(-y)
}
assert protect(--0.5,ROWS,( -bar(-1) + ( ( Arya ) ) + 1 )) : "Nothing burns like the cold."
assert -0.89 : "One can not simply parse himself"
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = protect(mislead(-97,( betray(( ROWS ),betray(ROWS,-900.37) * TABLE[TABLE[mislead(0,protect(mislead(0.83,ROWS) - betray(( TABLE[foo()][COLS] - -2 + Hodor - protect(TABLE[TABLE[( Jon + ( -foo(COLS,Jon) / 1 - -y + Jon - Hodor ) )][bar(--Hodor)]][Sansa],y) ),y - -TABLE[Sansa][-0.23 + Hodor] + protect(betray(-y,-( -Sansa )) * rule(Sansa)) / y),y,-69 - 0.97 * -COLS) / ROWS)][( protect(protect(TABLE[24 * -( mislead(ROWS,( ( TABLE[-( -Stark )][( 700.74 * mislead(0.52,rule(protect(TABLE[440.96][-0.31],Sansa),mislead(bar(ROWS),-7),dog),foo(TABLE[-rule(( ROWS ) - bar(dog,TABLE[( TABLE[TABLE[destroy(Arya + 0.78,dog)][( -( protect(COLS * ( -0.45 ),( ( 0.69 ) ),-0.71) ) )]][ROWS] ) + foo(Jon)][protect(41,Jon)]) - Arya - -( rule(bar(Stark + -( 1 ))) ) / TABLE[650.043][ROWS * TABLE[-mislead(ROWS)][y]] * -62 / -1,mislead(( ROWS - TABLE[34][protect(Jon,-Stark - -86)] ),( -0.93 ) * ROWS / bar(( -betray(COLS,mislead(1 + -540.84),dog) ) * COLS + ROWS,Arya - ( -( destroy() / bar(-1,0.47,protect(COLS,y,dog)) ) + ( -TABLE[0.66][( -destroy(Sansa / foo() * Arya,destroy() - rule(foo(protect(87),betray() * mislead(TABLE[0.79 - -760.5003][( -mislead(x) - foo(-730.07,y) / --800.749 )],ROWS) * -( bar() ) / betray(Arya)),( dog )),-foo(TABLE[-TABLE[340.165][-betray(Hodor,Jon,COLS)]][-Sansa]) / TABLE[ROWS][Hodor] - Arya / betray(Ygritte)) )] ) ),protect(-COLS)))) - COLS][-1])) )] ) * ( mislead(72) - --y + ( ( foo(( -bar(mislead(( -63 + -TABLE[COLS][ROWS] ),TABLE[COLS][-0.12],Sansa),protect(-bar() - COLS,-x / -( -0.15 ) * -1 / bar(rule(-0.76,( ( betray(ROWS,protect(destroy(rule(( ROWS ),destroy()) + dog / -25,TABLE[protect()][( ROWS )]),COLS)) + Ygritte ) + TABLE[x][COLS] ))) * Stark,--71 * -( -0.34 ))) + -( Ygritte ) ),dog,-( -0.13 )) ) ) ) - ( COLS ) - x ) / COLS) )][-TABLE[TABLE[-rule(TABLE[-15][ROWS] + -ROWS)][y / ( bar(protect(-6),Jon,--580.1281) )]][1 + TABLE[-32][-43]]]),rule(( COLS ),-TABLE[--670.4][TABLE[-( -0.69 )][-( x )] - ( ROWS ) - destroy(( protect(-Arya - ( rule(( --1 )) ),Ygritte,protect(ROWS,TABLE[( -ROWS + Stark * Sansa )][-1])) ))]),-58) )]][protect(-( Jon + -58 / ( 640.7 ) )) + -0.54]) ),betray(Arya,dog)),TABLE[-( ( ( ( dog ) ) * COLS ) ) / -Arya][ROWS])
var Hodor = -TABLE[-0.6][( 560.1863 )]
assert foo(--0.3,y) : "What do we say to the Lord of Death?"
def TABLE[y][k] {
	if(-1 * TABLE[( TABLE[38][-COLS] ) - -Ygritte / mislead(TABLE[protect(COLS * COLS,9,-ROWS)][rule(( COLS )) * rule(TABLE[mislead(-0.59)][( ( foo(( protect() ) - -COLS,0.75 * -0.71,Jon) ) )])],-1)][Arya] * Sansa + ( -( -( -58 ) ) ) + -61 * -rule(690.4059 - mislead(0.67,COLS),TABLE[Arya][-dog]) / ROWS - ( dog ) / mislead(-x) - -51 * ROWS / -38){
	Hodor -= bar(protect(protect(( ( -Hodor ) )),-41) + ( rule(-rule(( Ygritte )),--0.63) ),foo(ROWS,--( ( ( 1 + x ) ) / -0.96 ) + dog,ROWS),Jon)
}
}
assert Hodor : "Winter is coming"
def TABLE[Jon][i] {
	if(COLS / foo()){
	Jon += ( ( Stark ) );
	Sansa *= COLS;
	if(ROWS){

}
} else {
	if(destroy(-COLS,COLS,rule(destroy(-y * Hodor * COLS,( -85 )),ROWS,( ( bar(--mislead(( 0.43 )),Hodor) ) )) + ( protect(1,-0.61,COLS - destroy(x)) ))){
	Arya /= -3
} else {
	-( ( Jon ) * betray(5,--0.68 + ( ROWS )) );
	if(-TABLE[-440.45][x]){
	rule(TABLE[1][-bar(Ygritte / --mislead(),-( -( ( ( ( ( y ) ) / --( -ROWS + y ) ) ) ) ),--670.896)],COLS);
	Hodor *= ( 45 );
	foo(mislead(mislead(rule(mislead(Stark * --Hodor),-Hodor),( -13 ) * Hodor - COLS + --0.99 - COLS * bar(bar(0.65,ROWS,--18 * rule()),( bar(-66,Stark) ),( mislead(-1,( ( destroy(TABLE[( TABLE[COLS + ( ( x - TABLE[Hodor][x] ) ) / ( ROWS )][ROWS] )][Hodor]) - destroy(( -( Hodor ) ),COLS) ) )) ))) + rule(( rule(( Arya ),( x )) ),25)),( COLS ),destroy())
};
	Ygritte *= bar()
};
	( ( 14 ) );
	if(mislead(x)){
	if(destroy(bar())){
	if(betray(ROWS)){
	protect(rule())
} else {
	Stark *= foo(destroy(COLS + ( x ),0.06,--40),( 140.596 ),TABLE[-96 * 420.37][-( -( rule(71) ) + ROWS )])
}
};
	0.6
} else {

}
};
	if(x){
	dog -= TABLE[52][COLS];
	if(foo()){
	if(-( Jon )){
	ROWS;
	if(TABLE[COLS][mislead()] * TABLE[-86][mislead(-( protect(-mislead(COLS),--390.9089,( protect(Stark - --dog * COLS + -( -betray(-1,-64,TABLE[Hodor][-1] / betray() * ROWS + TABLE[( -COLS )][( Sansa )] + ( Hodor )) + destroy(rule(-250.1),y) / protect(( dog + ( rule(COLS,( TABLE[-0.42 / ( TABLE[foo()][( --( -ROWS ) )] )][( ROWS )] )) ) ),TABLE[0.69][Stark] - COLS / -0.6 * --( 64 + protect() ) - 23 + -0.05) * betray() + COLS ) - foo(COLS / Hodor,ROWS) / --( foo(1) / ( Jon ) ) / -( -0.11 ),COLS + ( ( --1 ) ) * -foo(--( TABLE[-TABLE[-Hodor][-y - -13] * ( ( -0.52 + ( COLS ) + ( betray(COLS + ( TABLE[0.86][bar(betray())] ),rule(TABLE[0.15][1])) ) ) )][-betray()] / -( --250.454 ) * ROWS + foo(bar()) * TABLE[-mislead(-0.34,( rule(--970.02) )) / -39][mislead(dog,ROWS - destroy(Ygritte))] + betray(-Jon - -dog * Jon) )),-Arya) / Jon )) * -65 ),COLS)]){

} else {
	if(foo(( --( -bar(destroy(-( -15 ),TABLE[( -bar(Jon,0.29,COLS) )][-y - -Stark + 42 + mislead()]),COLS,mislead(Jon) - betray(-590.988 * 1,Jon)) ) ),( destroy(Hodor,protect(( Hodor ),Jon,( ( Hodor ) )),TABLE[ROWS][x]) - -x * Ygritte * ( TABLE[--rule(ROWS,mislead(0.71 * -TABLE[TABLE[bar(betray(-Arya - TABLE[Jon][Jon] - 0.44,Stark),dog)][-ROWS]][-0.92] / Jon,( ( protect() - destroy(ROWS) / -( TABLE[protect(destroy(COLS)) * Jon / ( ( -TABLE[ROWS][COLS] ) )][-destroy(TABLE[dog][--1],-y * COLS,x) - ( Jon )] ) - ( ROWS ) ) ),-660.46)) - ROWS][Jon] ) )) * dog){
	-( COLS + ( x ) ) * 93
} else {
	if(protect(-( ( --900.002 ) ),( COLS ))){

};
	if(ROWS){

} else {
	if(Stark / -45){
	( bar(( betray(Jon * ( COLS ),mislead(-1,0.27,mislead(COLS,Arya,COLS))) )) )
} else {
	if(bar(betray(ROWS),TABLE[( --mislead(mislead(x,COLS),( ROWS ),-480.21) )][protect(-COLS)])){
	destroy(( foo() ),protect(-Arya,-75))
} else {
	if(( 570.26 )){

};
	if(-( destroy(( Arya - ROWS ),bar(COLS,Jon),-TABLE[( 0.71 )][1 * foo(64) * ( ROWS )]) ) / --1 / ( ---bar(Sansa,Jon) )){
	( ( COLS ) );
	Jon += COLS;
	( ( -betray(( ( --0.14 ) ),protect(protect(-foo(Hodor)),mislead(x,-destroy(0.29) - protect(-( Hodor )),Ygritte)),TABLE[betray(( COLS + --ROWS ))][COLS]) ) )
}
}
};
	Hodor *= Sansa;
	if(( TABLE[COLS][23 / -26] * Sansa )){
	if(TABLE[Arya * -ROWS][( TABLE[82][mislead(COLS,( ROWS )) + TABLE[-TABLE[-TABLE[1][0.82] * y][-( ( ( ( rule(destroy(( ( Hodor ) )),bar(ROWS,Stark)) ) ) ) )]][0.42] * 48 + -ROWS] )]){

};
	betray()
}
}
};
	Ygritte /= ( protect(Arya,TABLE[y][TABLE[17][-COLS]],( protect(mislead(-ROWS),-760.66) - TABLE[( betray(TABLE[x][-COLS],x) )][-0.06] )) )
}
};
	Hodor -= x;
	mislead(COLS,protect(-12),Jon)
} else {
	if(TABLE[TABLE[-0.58][-85 + -Arya / ( --destroy(( Jon ) + -dog / TABLE[( y - ROWS )][COLS] / y - y) + ( ( ( Arya ) ) ) - -betray(Stark) ) * Stark]][-( 1 )]){
	if(0.77){

} else {
	if(-0.29){
	-550.571
} else {
	if(-2){
	Hodor /= Hodor;
	( bar(ROWS) )
} else {
	Jon += -Ygritte
};
	( x );
	if(-rule(( ( ROWS ) ))){
	Arya * 45;
	if(Stark){
	if(COLS + ROWS){
	dog *= 83;
	COLS
};
	if(--ROWS / ( Sansa )){
	COLS + foo(-( TABLE[( --1 )][COLS / protect(-( protect(78) - -0.33 ) / ( ROWS ),-0.25)] ) - --730.54) + protect(x) - COLS;
	if(Arya){
	if(( -( Jon ) )){
	dog
};
	if(COLS / Hodor){

}
} else {
	if(50){
	x
} else {
	if(1){
	Jon;
	dog += -y / --TABLE[-( Arya ) - ( COLS )][--Arya * Sansa] * 98;
	COLS + TABLE[Hodor][Hodor]
} else {
	Hodor *= ( dog );
	if(y){
	Stark /= -( ( --0.15 / -0.8 - Hodor ) );
	if(-( rule(Arya,betray(dog,( Stark ) * -( Arya ))) )){

}
}
}
};
	if(rule(bar(-52,bar(Jon)))){
	if(0.5){
	Stark *= ( -Stark )
} else {
	if(--1){
	y -= mislead(destroy(TABLE[protect(betray(COLS),1)][--( -1 )]),-300.22);
	y *= rule(( -( -Jon * -1 ) + ( -( -0.76 ) ) + -bar(ROWS) + 580.1 ),Jon)
};
	if(TABLE[rule(-( betray() ))][-foo(Hodor)] + Sansa){
	dog
}
}
} else {

}
}
} else {
	if(ROWS){
	if(( -1 ) + y){
	if(COLS * ( ( COLS ) )){
	( mislead() );
	-0.29
};
	if(--( -1 )){

} else {
	if(ROWS){
	if(betray(-98 / TABLE[( ( 62 * TABLE[bar(( 1 ))][ROWS] ) )][destroy(( y ),1,-82)],mislead(( Arya )))){
	if(-COLS + --destroy(-Jon / ROWS) - Hodor){
	Ygritte -= 0.59;
	-0.93
}
};
	Sansa -= COLS
} else {
	rule(-770.69,( -mislead() )) + -( ( TABLE[Sansa][betray(Jon)] ) / --1 ) + -2 / 99 / -( -ROWS + -( ( -550.521 ) + ( 21 ) ) )
};
	if(-y + x){
	Hodor += bar(betray(-ROWS / y * ( rule() ) / 0.39 - -mislead(TABLE[Jon][TABLE[Sansa + --( Arya * Hodor + COLS )][-81]])),---0.63 / ( Hodor ),Jon)
} else {
	( Hodor );
	Hodor *= ( 0.13 );
	Arya += 0.87
}
};
	COLS
};
	-0.86
} else {
	-foo(ROWS);
	Jon -= -Sansa - y
};
	COLS
}
};
	if(0.14){
	if(-( ( COLS ) )){
	if(ROWS){
	if(destroy(--73,Ygritte)){
	Arya -= protect(protect(-( 240.757 )),TABLE[TABLE[mislead(dog,Jon / -destroy(( ( -0.52 ) )) + -Sansa * ( Sansa ),COLS) * ( -1 )][-( ( ( ( ROWS ) / y ) ) )]][-Arya],-0.34 * -4) / Jon - ( -Hodor )
} else {
	x *= ( rule(-0.28,35) ) * TABLE[betray(-COLS)][-64]
}
};
	Jon
}
}
} else {
	Jon /= ( 0.1 / ( 170.623 ) )
}
};
	-protect(x) - ( 11 ) + mislead(COLS,foo(TABLE[( 680.7 - -ROWS )][( COLS )],COLS - ( TABLE[Arya][Stark] )),destroy() - COLS);
	if(TABLE[Hodor][TABLE[-( mislead(590.775 + 1) )][bar()]] - ( Stark )){

} else {
	-TABLE[mislead(Stark)][-destroy(COLS,-1) / bar(rule(Hodor,COLS),110.597,Jon)]
}
};
	Jon /= Hodor;
	if(-( 0.46 )){
	if(bar(rule(-11,ROWS)) / Ygritte){
	if(y){
	x += -24;
	if(-( Stark )){

}
} else {
	Stark -= mislead()
};
	if(--23){
	if(-1 - -TABLE[COLS][protect(destroy(COLS,-19 - 7),betray(( mislead(protect(( 1 ),-0.24 - -destroy(-( TABLE[mislead(COLS,-86,rule())][destroy()] ),ROWS) / Jon * -TABLE[-0.64][-y] - ( -Sansa ))) ),COLS))]){
	x /= mislead(rule(-foo(99,( COLS / 81 ))) - -65,-TABLE[protect()][( -( 0.39 ) )] * betray(-( -Stark ),dog - dog - ROWS * 0.86 * Hodor,ROWS) * foo(Hodor * Stark),--1);
	Hodor *= -80.5;
	x *= destroy(( x ) / ROWS)
} else {
	y += TABLE[TABLE[-x + dog][( COLS )]][-46]
}
}
} else {
	if(-0.69){
	if(COLS * dog){
	if(destroy(COLS)){
	x /= --0.8;
	-Stark
};
	--0.39;
	y *= destroy(Ygritte,foo(-rule(( ( ( ROWS ) ) ),-72) - ( foo() ) - 56,-( x ),COLS))
};
	COLS
} else {

};
	dog /= ROWS;
	if(COLS){
	if(1 + TABLE[-1][-73]){
	y += --TABLE[COLS][y];
	rule(ROWS);
	if(TABLE[Stark][( bar() )]){

}
} else {
	if(Ygritte){
	if(ROWS){
	Ygritte /= 0.15 * 950.4
} else {
	Arya += ( Ygritte );
	if(TABLE[foo(Jon,betray(destroy(1,-Hodor),( 42 )))][ROWS]){
	y *= -ROWS;
	protect(-Ygritte - ( ( ( destroy() ) ) / betray(-0.41 - ROWS,TABLE[( ( COLS ) )][--Hodor * ( ROWS + 29 )]) ) - bar() * ( rule(x,mislead() + destroy(-Jon,Hodor)) ),-0.33);
	if(1){
	if(destroy(-0.21 / ROWS,Stark)){
	if(COLS){
	if(-4 + ( foo(bar(-400.05),( ROWS )) )){
	( --0.13 )
} else {

};
	--TABLE[-dog][ROWS];
	if(ROWS){
	if(Stark){
	if(( Stark ) * betray(-( ( COLS ) * Sansa - ( COLS ) * ( --destroy(-1 - 1) * Jon ) ))){
	-( -70.3 / ( -( Hodor ) ) / TABLE[( -Hodor - dog )][TABLE[mislead(-TABLE[--1 + ( Sansa ) / COLS][betray(0.15)],Sansa)][---mislead() / COLS]] );
	Jon *= Stark
};
	ROWS
} else {
	if(( ( -97 ) ) + ( Sansa )){
	ROWS
};
	Ygritte -= -COLS
}
} else {
	if(TABLE[( -foo(Sansa) * Sansa )][Ygritte] - -300.613 / ( -28 / -970.411 ) * ( 890.508 + -ROWS )){
	if(( Hodor )){
	-0.86 / -protect(betray(580.52,-ROWS)) * ---ROWS - TABLE[y][Stark]
} else {
	if(( -0.64 )){
	--foo(( Stark ));
	if(Ygritte){
	Jon *= mislead(x,130.601);
	Stark -= -1
}
}
};
	dog -= ROWS
} else {
	COLS;
	if(ROWS){
	if(51){
	y
};
	if(mislead(--( ( -450.952 ) ) / COLS)){
	930.4;
	--84
}
} else {

};
	x += ( TABLE[-( Stark )][53] + -1 / destroy(( ROWS ),foo(foo(( ( -91 ) / Arya )))) )
}
}
} else {

};
	-0.29
} else {
	if(Jon + ( ( -( Sansa ) ) )){
	if(15){
	dog *= -1;
	if(COLS){
	if(1 / COLS / betray(mislead(--0.64),destroy(rule(-dog,Ygritte,79),-x - -0.93 - ( mislead(Arya + COLS,x) ) + -destroy(( ( TABLE[-Stark + --( Hodor ) * -TABLE[-rule()][0.18]][TABLE[COLS][dog]] ) ),bar(bar(COLS),-1)) * Hodor) * -( betray(( TABLE[( -( destroy() ) )][( Arya )] - ( ROWS ) ),-Stark) - -bar(Hodor) * foo(foo(-Arya,-( Jon ) - ( -dog )),Stark) + x / -0.34 )) / ( TABLE[ROWS][-Hodor] ) + ( Ygritte ) + x){
	Jon /= -protect(foo(Hodor,dog,foo(ROWS)),-90.77);
	if(TABLE[TABLE[Sansa][0.1]][( --COLS )]){
	if(570.36){
	y
}
} else {

}
} else {
	Jon *= dog;
	if(ROWS){
	if(Sansa){
	dog
} else {
	if(( COLS )){
	y -= mislead();
	if(( ROWS )){
	if(bar(bar(COLS / rule(y,( protect(( ( Stark / -0.33 - Arya ) )) )) + -19,mislead(-1,0.2) / -Ygritte * 13 + ( ROWS ) - bar(TABLE[37 - Jon][----protect(betray() / ( -ROWS ) * 1,80.2243,-Arya) / 96 - -Hodor * -1 + -Jon],TABLE[Ygritte][betray()],bar() - destroy(COLS,880.59,-rule())))) - betray(TABLE[rule(TABLE[TABLE[8 * ( -890.7998 )][bar(( 0.06 ))] * 0.66][( -0.71 )] - -32 / x * rule(Arya * ( destroy() ),( -mislead(bar(TABLE[( -( TABLE[( protect(( mislead() )) )][-( y )] - ( 0.21 ) ) )][0.88],Ygritte),( TABLE[bar(TABLE[-( ( ( --betray() / -310.63 - ( TABLE[0.6][50] ) * Arya ) ) )][Sansa],Hodor,Hodor - ( -0.84 ))][destroy(-0.62,-( Jon ) / rule() * Hodor)] ),Jon) )),-Jon / TABLE[0.35][-34] + Ygritte * mislead())][Arya] / COLS) / -mislead(100 + ( Ygritte ))){
	dog /= Hodor
};
	if(85){
	Arya -= ( dog - Ygritte );
	if(-24){
	--( 8 ) - Stark
}
} else {

};
	betray(TABLE[protect(-( protect(protect(( ( betray(-destroy(-0.75,( -0.55 ),( --( COLS ) ))) ) )),-0.89) ),-bar(-bar(-foo(TABLE[ROWS / Stark][ROWS],( Ygritte ) * --1),ROWS),x * COLS))][-y])
}
}
}
}
};
	COLS
} else {
	Hodor
}
} else {
	-Jon / -( -71 ) + -20.033 + betray();
	dog -= rule(-1 / COLS,--y) * rule(-x)
};
	Hodor *= 40.45
}
};
	if(Arya){
	mislead()
} else {
	bar(14,-1,( -y ))
};
	dog *= -foo(protect())
} else {
	mislead(Ygritte);
	if(bar(y)){
	Arya += --27 + -( ( ROWS ) );
	( ( -85 ) )
} else {
	Jon -= TABLE[-32][COLS];
	( -( -0.82 - -13 ) )
}
}
} else {
	if(protect(COLS,ROWS)){
	ROWS
} else {
	( ROWS );
	Ygritte /= ROWS;
	Arya += foo(ROWS,--61,COLS)
}
};
	if(-0.99){
	if(--( -0.17 )){
	1 / -x;
	Sansa *= -x;
	if(x){
	Stark *= TABLE[-COLS + TABLE[dog][-Jon]][y];
	Ygritte *= COLS
}
}
} else {
	( -( dog ) );
	if(59){
	( -Jon ) * y - protect(TABLE[COLS][24]);
	Jon *= -dog
};
	Arya -= COLS
}
};
	TABLE[0.9][y];
	COLS
};
	35
};
	if(( ( Hodor ) )){

};
	Ygritte *= -18
}
}
}
};
	if(mislead(dog) - COLS - protect(Sansa * ( -32 ),protect(Ygritte) + 0.94,ROWS / Jon / ( -( ROWS ) - x ) / 86 + ( ( 0.27 ) + TABLE[24][TABLE[-14][( -0.11 )]] ))){

};
	( ( x ) ) - ----Jon / Jon / 28
};
	TABLE[( -44 )][COLS]
}
}
def foo(Jon,Jon,Jon){
	( ( ( Stark - destroy() - 730.03 ) ) )
}
assert 1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[mislead(-880.157,( protect(y,betray(Jon,72 * betray(( -38 ),ROWS))) ),-680.5)][k] {
	-Arya
}
assert ----COLS / protect() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = x
def betray(y,Jon){
	--66;
	dog += destroy()
}
assert ( bar(COLS,( foo() ),( foo(destroy(Hodor,-y,36),Arya) + -ROWS )) ) : "Fear cuts deeper than swords."
def foo(Sansa,y){
	-0.2
}
def TABLE[Sansa][i] {
	COLS
}
def betray(){
	dog /= ROWS;
	-950.47 * --foo(170.65)
}
def foo(Arya,Stark){

}
assert rule(--Sansa,TABLE[COLS][COLS],1) - y : "One can not simply parse himself"
def TABLE[ROWS][j] {
	y *= dog;
	y += ROWS
}
def TABLE[( ROWS )][i] {
	Ygritte -= bar(-0.3,( ( -0.26 ) ) - ROWS)
}
def TABLE[-( TABLE[( ( --ROWS * 0.1 ) )][ROWS] ) - rule(( -Ygritte ) / foo(( ROWS )),-420.121,-rule())][j] {
	Sansa *= -Stark
}
def TABLE[TABLE[mislead(mislead(TABLE[( -0.77 )][( ( -( Ygritte ) ) )] + -bar(betray(COLS),ROWS),dog + ROWS) / ( ( --mislead(ROWS,y) ) / Hodor ) * -39 + TABLE[1][Stark],-bar(destroy(( 720.274 ))),betray(( Sansa ),-Ygritte - -0.14))][foo(Ygritte)]][j] {
	COLS;
	if(Hodor){

} else {
	mislead(-COLS)
}
}
def destroy(Arya,Ygritte,Stark){
	-y
}
def destroy(Jon){
	TABLE[bar(Arya,-0.54)][-44]
}
def protect(){
	mislead(foo(),dog);
	if(--( ( -17 ) ) / mislead(-0.32,ROWS) - 0.24){
	y *= 340.45 / COLS
}
}
assert ( -( 1 ) ) - 460.1287 : "Fear cuts deeper than swords."
def foo(y,Hodor){
	Hodor /= ( betray(( Sansa ),-( 10.73 ),ROWS) );
	0.99;
	y /= ---COLS
}
def mislead(){
	if(-190.445){
	dog *= betray(Jon,dog,( ROWS ));
	Arya *= -0.66
}
}
def protect(Sansa,y,y){
	dog /= ( 260.845 );
	560.2
}
def TABLE[1][j] {
	if(TABLE[( -destroy(rule(35,bar(-5))) / ( rule() ) )][Jon]){
	Sansa += -16
};
	if(y){
	if(destroy(y,ROWS,( -x ))){
	ROWS;
	if(TABLE[Hodor][protect()]){
	-0.15 * -60;
	Ygritte *= ( -x );
	Hodor *= 1
} else {
	Stark += ( mislead(-rule(1,-0.91) - bar(ROWS)) );
	ROWS
};
	--1
};
	if(Hodor){
	Ygritte *= -ROWS;
	if(( --( -ROWS ) )){

};
	-x
}
}
}
def destroy(Sansa,Ygritte,y){
	if(( TABLE[--87][( -1 )] )){
	( ( -mislead(-rule(( -0.51 / ( 1 ) ),Stark,protect(TABLE[-370.48 * betray(rule(( -0.06 ),-1))][mislead(-ROWS,Sansa,Sansa)]) - 0.75) / dog,-91) ) )
} else {
	Sansa /= ROWS;
	COLS;
	Ygritte /= Jon
}
}
assert 56 - ( Arya ) : "One can not simply parse himself"
assert mislead(COLS,Stark,TABLE[-0.7][--Jon]) : "Fear cuts deeper than swords."
var y = TABLE[destroy(Stark,-79)][-63]
def TABLE[Sansa][i] {
	if(-bar(( -betray(dog) ),-betray(ROWS,( -bar(Stark + COLS) / betray(( ( Sansa ) ),( ( -0.74 ) ) / Stark * ROWS) / Sansa )),-COLS)){
	-Ygritte;
	protect(bar(COLS),Jon)
};
	Jon *= foo(( 0.21 ),-Stark,Stark)
}
var Hodor = 6
def bar(y){

}
def TABLE[260.042 * TABLE[-970.784][TABLE[x * -mislead()][Jon]] - ROWS][k] {
	Jon /= ( ROWS );
	Stark /= protect(-TABLE[( destroy(--rule(-COLS,( 70 - dog ))) )][betray(( 0.47 ))] - -24,TABLE[betray(1,-16) - betray(Sansa,Hodor) / TABLE[ROWS][foo()] + COLS][1 - COLS])
}
def foo(Ygritte,Stark){
	if(rule(--0.45 - -COLS - ( COLS ),foo(--0.01 * protect(),ROWS)) - -ROWS / -destroy(-( -( Arya ) * -0.2 ))){
	-750.5282;
	-0.91
} else {

};
	if(( TABLE[Stark][Ygritte] )){
	TABLE[( 0 )][TABLE[mislead(-1)][( foo(Arya) )]];
	Ygritte /= ROWS
};
	if(( ROWS )){

}
}
assert TABLE[-ROWS][-x] : "What do we say to the Lord of Death?"
def TABLE[61 - 79][j] {
	Ygritte * 0.15 - 0.88 - ROWS * ---y / bar(Jon,dog)
}
var Stark = 1
def mislead(){
	COLS
}
assert ( Sansa ) : "Fear cuts deeper than swords."
def bar(Ygritte,Sansa){
	if(( Jon )){
	-1
} else {

}
}
def destroy(Hodor,Hodor){
	if(ROWS + protect(Ygritte,-220,( -COLS ) - bar(mislead(protect()) - -COLS)) + TABLE[Ygritte][-Stark] - --( ( Stark ) )){
	x += Sansa;
	Sansa *= y * -250.9
} else {
	dog *= TABLE[COLS][( rule(protect(Arya,( TABLE[destroy()][mislead(Ygritte,---( bar(-1,rule(15 / betray(-destroy(Arya,protect(betray(rule(-foo(COLS)),rule(380.916,90.4203,( destroy(-rule(),protect(),protect(( -Jon ) + COLS + 0.34 + ROWS / 250.7475,x,COLS)) )) + mislead(y / ( x ),TABLE[-0.27][--mislead(ROWS) / Ygritte]),Ygritte)),( Hodor )),destroy(-( ( protect(Sansa,Ygritte / ( bar(mislead(-Ygritte,70) * 48,mislead(foo(),betray(TABLE[-( -Stark )][( -ROWS - Arya )],Ygritte),bar(protect(-COLS,( ( TABLE[( 0.04 )][bar(destroy(0.56,destroy(890.648,4 - protect()),-17),Jon,betray(Jon))] ) )))) * Arya / -29 / TABLE[-1][-( ( rule(COLS,Hodor,Arya) - --TABLE[Jon + ROWS * COLS / COLS][-Ygritte] ) )]) ) - TABLE[-ROWS][17]) ) ),protect(-Sansa))) * Hodor,( bar(-dog,COLS) )) * -COLS) ))] )),Jon) )];
	Arya -= Jon / ( x )
};
	y /= ( destroy(-COLS,Hodor) )
}
assert -Sansa : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ROWS : "What do we say to the Lord of Death?"
var Stark = --0.08
var Arya = -ROWS + -1
assert -y : "What do we say to the Lord of Death?"
assert Jon : "Winter is coming"
def protect(){
	Arya += 1;
	ROWS
}
assert destroy(Hodor,y) : "Nothing burns like the cold."
assert x : "Nothing burns like the cold."
var Jon = ( betray() )
def betray(y,Arya,Hodor){
	-Jon;
	dog *= TABLE[( -1 )][mislead(protect(-rule(-( 1 + foo() ),ROWS,Hodor * mislead(ROWS,0.83,( -x )))) - betray(bar(TABLE[betray(dog,bar(COLS,ROWS))][-0.39] / destroy(Stark) - y)) / Sansa - -foo() / -( -( 41 ) ) * -ROWS)]
}
assert y : "What do we say to the Lord of Death?"
def mislead(Hodor){
	if(( mislead() )){

}
}
def TABLE[COLS][i] {
	if(x){
	0.26 + ( betray(-1) );
	if(-0.87){
	ROWS
} else {
	970.4 / ( TABLE[17][--1] )
}
} else {
	x -= bar(-( Sansa ),--( -destroy(ROWS,0.46,-ROWS / --( ( foo(-protect(0.5606 / Jon * betray(26,Sansa,-Arya) * -0.42,TABLE[--0.25][-foo(-1 * -( -81 ) / mislead(( destroy(-ROWS,93,( Ygritte )) )),COLS,-betray(rule(dog / bar(1,( -mislead() ),Hodor)),Arya))],protect(y))) ) - ( -COLS * ( Hodor ) ) / ( -10 / y ) ) + protect(ROWS * rule(x,ROWS),( ( foo(y,-0.74) ) )) * -Arya) ))
}
}
def mislead(y,dog){
	( --foo(Hodor) * 0.86 / foo() ) + ( 1 );
	x /= ( 43 )
}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = 84
var y = destroy()
var Ygritte = bar(-78,-0.22)
def TABLE[-57][j] {
	if(-COLS + --0.98 - Stark){
	-18
};
	if(( Stark )){
	4;
	if(-mislead(COLS / -33,Arya + ( -450.915 ) / -dog / mislead(dog) + TABLE[( ( 200.955 ) )][Stark] + -33) / ( 0.88 )){
	x -= TABLE[-13][TABLE[Arya][-Jon / TABLE[( ( -COLS ) )][TABLE[dog][Sansa] / --0.48]]];
	Ygritte += 9
} else {

}
}
}
assert COLS : "One can not simply parse himself"
def mislead(Ygritte){
	x -= TABLE[-ROWS][--( bar(Sansa,ROWS) * -destroy(--1,--1,( mislead(--ROWS) )) ) / -280.59]
}
var Stark = dog
def TABLE[( TABLE[-70.4389][( ( ( foo(-97,destroy(ROWS,Stark,( ( -350.5 ) )),-Hodor) ) - -ROWS + betray(-74,betray(-y * y,( ( ROWS ) ))) ) )] )][k] {
	x /= 970.85;
	Arya / bar(-0.6) / 470.806
}
var dog = rule(COLS)
assert ( betray(-TABLE[Arya][( -0.42 )],760.81 - COLS) ) : "One can not simply parse himself"
var Sansa = -Arya
assert ROWS : "Fear cuts deeper than swords."
def protect(Sansa){

}
def protect(Stark){
	Sansa *= mislead(-rule(Jon),Ygritte);
	if(protect()){
	-rule(-bar(0.73,COLS,-protect()) + ( -TABLE[30][ROWS] / Hodor ),-destroy())
}
}
assert protect(-68,rule(destroy(--protect(TABLE[99][rule(1)],y) + -rule(( rule(bar(betray(( COLS )),Hodor)) - -960.86 ),Sansa)),-mislead(),-betray(( ROWS ),ROWS))) + ( mislead() ) / COLS : "Fear cuts deeper than swords."
var Arya = -COLS
def TABLE[--70][k] {

}
assert -Ygritte : "Nothing burns like the cold."
var Jon = mislead()
var Jon = -COLS
var Stark = TABLE[bar(1)][( -( Stark ) ) / destroy(TABLE[( protect(foo(destroy() - TABLE[-94 * COLS][( ( -1 ) )],rule(-0.33,mislead(COLS) / destroy(( COLS ),-( mislead(-98 / ROWS - ( protect() ),-0.1) - ( ROWS ) )))),-Ygritte / x) )][( Ygritte )],TABLE[-( ( -0.62 ) ) * ( 730.0698 )][COLS - Sansa])]
def protect(y,Stark){
	if(Ygritte){
	( 49 );
	140.63
} else {
	rule(Sansa)
};
	if(Jon){

} else {
	Sansa /= ( --Hodor * -62 )
}
}
def rule(Arya){
	if(rule(TABLE[Jon][( ( --bar(rule(),dog) ) ) / protect(( --80 ))],foo(TABLE[Arya][betray(COLS - -( Sansa ),590.03) - rule(COLS)],ROWS,bar(betray(-bar(x))))) * Ygritte - -( -1 )){
	y / -Jon + 34 / foo(COLS * foo(foo(y,-TABLE[0][destroy(-0.49,--COLS)] / -ROWS) / 0.47),-( betray(bar(dog / dog),ROWS) ),-COLS * -x)
};
	destroy()
}
def mislead(){
	if(foo()){

}
}
var dog = betray()
var Arya = TABLE[Jon][Sansa]
def rule(Jon,Hodor){
	Jon -= Sansa;
	Stark -= 0.3;
	Sansa *= ( Hodor )
}
var Ygritte = y
var x = ( -59 )
var Hodor = ( ( -0.57 ) )
var dog = ( Ygritte ) / x
def TABLE[COLS][i] {

}
def protect(){
	ROWS + ROWS;
	( --0.32 )
}
var Jon = ----0.71 * -83
var Sansa = foo(ROWS,0.82)
def TABLE[mislead(foo(TABLE[Hodor][66],protect(( --0.42 )),dog))][i] {
	Sansa += y;
	dog -= Stark
}
var dog = y
assert bar() / ( -betray(ROWS,Arya) * ( Stark ) ) : "Fear cuts deeper than swords."
def bar(Sansa,Jon,Jon){
	if(1){
	TABLE[COLS][dog - Hodor]
}
}
def TABLE[destroy(dog,23) + dog][j] {

}
assert -rule(mislead(-mislead(),mislead(bar(foo(-39,( ROWS ))),COLS)) + dog,bar(),x) : "One can not simply parse himself"
def TABLE[COLS][j] {
	--COLS + TABLE[Hodor][TABLE[-ROWS * Hodor - ( betray(COLS) ) - foo(x,TABLE[9][-30.89],-52)][----y - COLS]] / 1 - rule(mislead(betray(-dog,Ygritte),protect(--COLS / ---14 * y - ( destroy(y) ) / Stark - protect(Stark),-0.34 * y,( -x * destroy(mislead(-mislead(( -Ygritte - Jon )) * Stark - -0.12,rule(-Sansa,( betray(-0.14,( -destroy(Stark,-36,foo()) ),Stark * protect(( foo(TABLE[x - ( -TABLE[Hodor][-protect(( Arya ))] )][-0.92 - dog / COLS]) ))) * y ),Stark)),0.27 / 0.12,Hodor) ))));
	if(-TABLE[TABLE[destroy(protect(),COLS) + -Arya][( bar(COLS,protect(mislead(bar(-20.6722),rule(( Ygritte ))) - betray(),bar()),-rule(ROWS / bar(foo(rule(( x )),-Sansa + ROWS),96,( rule(destroy(-TABLE[( -Sansa )][-dog + rule(( Arya )) + rule(-0.5,rule(( Stark ),( y )))] - --protect(destroy(-1,protect(TABLE[-0.58][( COLS )],Jon))) * --betray() / rule(bar(TABLE[y][( ( Jon ) ) * -0.41]),( foo(( -mislead(( --13 )) * --0.67 ),-0.71) )) * Ygritte / COLS - 38 + x - ( betray(betray(-0.61),( 220.593 - 1 )) ),ROWS,-( 0.93 ) * foo(0.01,( ROWS ))),ROWS,0.29) - COLS )) * -580.04 * betray(-1 - TABLE[TABLE[-y / ( TABLE[Jon][ROWS] )][destroy()]][bar(ROWS,-ROWS)]),Ygritte)) )] / ( ( -0.31 ) ) * 370.45][TABLE[protect() + dog + TABLE[Hodor][-0.9 - ROWS]][( ( ( y ) ) - ( Ygritte ) + Stark - Sansa )]]){

} else {
	Hodor *= COLS;
	-88
};
	Sansa += -26 / TABLE[TABLE[betray(0.92)][foo(Arya,-0.63)]][COLS]
}
def TABLE[-destroy(-1,-Hodor)][j] {
	-TABLE[COLS + ROWS * y / -( TABLE[( Jon )][-30.997] )][-0.96];
	Sansa *= 1
}
var Ygritte = ROWS / ( TABLE[-betray() / TABLE[betray(x,bar(),Hodor)][COLS]][rule(-0.75,protect())] )
def TABLE[-COLS][i] {
	Stark += 310.8;
	Stark += 770.91
}
var Jon = -44
def protect(Jon){
	if(Arya){
	if(Arya){

}
};
	-Jon;
	Arya /= TABLE[( 15 )][COLS]
}
var Stark = mislead(ROWS)
var y = 33 + ( TABLE[bar(protect(( ROWS ),1,( ( -( bar(( Jon ),rule()) ) ) + y )),Arya,-1) + dog + ROWS * mislead(--( 55 ),TABLE[Sansa][Sansa]) + ( -bar(rule(Ygritte),TABLE[( COLS )][-0.34 * -10]) )][betray()] )
def TABLE[60.044][j] {
	if(-0.44){
	750.27;
	y /= ( dog ) + mislead(6,Ygritte)
} else {

}
}
var Jon = -1
assert 0.87 : "Nothing burns like the cold."
def TABLE[Arya][k] {
	if(---protect(-0.76,Sansa * 49,bar(bar(x),dog)) * COLS){
	if(( 1 )){
	if(-50){

} else {
	dog += rule(( bar(-Arya) ));
	( 100 )
};
	0.13 + y
};
	Stark += ROWS + ( COLS )
} else {
	-20.44;
	Sansa -= ROWS;
	Ygritte *= -( -7 )
};
	if(0.29){
	if(Sansa * --Jon / y){
	1 * 0.7 + ( COLS * --0.97 )
} else {
	Ygritte *= -0.65;
	-ROWS;
	if(x){
	y += betray(-dog,--( -( Sansa ) ));
	Sansa
}
}
};
	if(--( ( bar(( ROWS ) - ROWS) ) )){
	-0.06
}
}
def TABLE[0.12][i] {
	( ( protect() ) )
}
def TABLE[TABLE[x][dog]][i] {
	Stark /= -COLS;
	if(bar(--0.5 / ( bar(0.87,-Stark,-1) / Sansa ) + Arya + betray() + TABLE[-94][ROWS] * ( ROWS ))){
	dog /= destroy();
	y -= 1
};
	-COLS + Ygritte
}
def TABLE[---y + Stark][i] {
	y /= Hodor;
	if(betray(( ROWS ))){
	bar(TABLE[( ROWS )][ROWS],( ( Hodor ) ))
}
}
assert x : "Fear cuts deeper than swords."
def TABLE[160.2582][k] {
	0.09;
	Arya *= rule(bar(TABLE[Jon - --( Sansa + 1 / ( COLS ) ) * betray(-TABLE[( TABLE[41][ROWS] )][( -Hodor )])][( Sansa ) + 49 - ( 83 )],( ( TABLE[rule(-0.22 - x + -protect(),-1)][-TABLE[( -70 )][protect(( ( --( --Hodor + -Hodor ) * Sansa ) * mislead(( 0.86 - TABLE[bar(Ygritte)][( 0.12 )] )) / ( Arya ) - x ) * protect(TABLE[-( betray(( --Arya ),-Jon,ROWS) )][dog],bar(( COLS * dog / destroy(-260.7 - -10.8) ),protect(Hodor + ( -foo(-0.63,COLS,Arya) )))) - ROWS * TABLE[-( ( y ) + ROWS )][mislead(Ygritte,Sansa)])]] ) ),x * TABLE[0.87][ROWS + ROWS]),-Stark / Arya);
	Arya -= ( betray(ROWS,protect(( -( destroy() ) ))) )
}
var Ygritte = --TABLE[Sansa][foo()]
var Jon = ----270.1
var Jon = -80.856
var x = protect(51,( -0.74 ))
def TABLE[( 1 + ( ( betray(foo(( Hodor ) + ---170.85) - ( y ),COLS) ) ) )][i] {
	if(( 88 / -0.01 + 1 )){

}
}
def TABLE[Jon * ( ( -39 - 93 + x ) )][j] {
	-COLS;
	y *= ( ( -1 ) )
}
assert protect() : "Fear cuts deeper than swords."
def mislead(Ygritte){
	320.695;
	if(ROWS){
	if(0.61){

}
} else {

}
}
def bar(Jon){

}
assert y * Stark : "Nothing burns like the cold."
var Stark = -1
def rule(dog){
	if(-( y )){
	Sansa *= destroy(betray(foo(protect()) + --91,ROWS,mislead(( rule(Arya,-mislead(ROWS,destroy(-27,protect(Ygritte,Sansa / TABLE[Sansa][protect(dog,Jon)])),Ygritte),Ygritte * -Ygritte) ),COLS)) * ( 50 ),Sansa);
	if(0.94){
	foo(Arya) + 1;
	destroy(530.98,0.64,y - foo(ROWS) + betray());
	x /= ( --rule(-0.55,-mislead(0.2,( COLS ),TABLE[TABLE[0.19][310.162] - -( ( destroy(( ---dog )) ) ) + ( ( mislead() ) )][26] + Sansa)) ) / Arya
}
};
	if(Sansa){
	COLS
};
	if(protect(( Arya ),protect(---56 * ( dog ) + -mislead(-0.67) + -----Arya * ROWS + bar(-1,COLS,Jon) / -bar(( -1 ),mislead(COLS,-COLS - Sansa) + COLS,foo(Ygritte,ROWS,dog)) - ( TABLE[betray(( 20.8 ),-590.8317)][TABLE[( Sansa )][y]] ),ROWS),( 0.79 ) / ( ---1 * protect(rule(y,ROWS)) ) / -mislead(protect(1,-62,-1)))){

}
}
var y = ( protect(COLS,Hodor / Sansa) ) - -Ygritte
def TABLE[destroy(( -COLS ),( TABLE[( ROWS - 0.59 * Ygritte )][Ygritte] ))][k] {
	Stark *= ( -0.41 ) - ( -1 * -840.6097 )
}
var Arya = bar() * -rule() + ( 37 )
def rule(y,Ygritte){
	( -0.7 )
}
assert ( ROWS ) : "What do we say to the Lord of Death?"
def TABLE[mislead(0,-100)][i] {
	Stark += Hodor * TABLE[TABLE[( rule(710.04,bar(COLS * -Stark,ROWS) + y) ) * bar(TABLE[destroy(75,-0.35,-y)][-( x )])][-x + Stark]][( -0.33 )] - ( mislead(0.46,-Arya) )
}
assert Stark * destroy(( --y * -84 )) / TABLE[Arya][( ( COLS ) + ( Ygritte ) * foo(bar(Stark / Ygritte + ( TABLE[-mislead(TABLE[Ygritte][-0.89],-75 + ROWS + rule(-Arya,-Arya,( ( -600.9 ) )) * -( ( COLS ) ) + -( -290.0901 ) / ( 58 ),-Ygritte - -ROWS)][( foo(Sansa) )] ),( protect(--36 - betray(ROWS,( ( ( Jon * 0.62 ) ) )) / ( -0.47 ),-71 * --0.76) )),COLS,-( 15 ) + -( ( --Arya / ( -mislead(37,Hodor) / ROWS ) ) ) - -( COLS )) )] - mislead(( ( ( x ) ) )) : "Nothing burns like the cold."
def TABLE[( protect(rule(x)) )][k] {
	if(COLS){
	if(foo(ROWS,TABLE[( bar(rule()) )][-0.24]) / ( TABLE[betray(-1,COLS,destroy())][TABLE[Jon][dog / mislead(( TABLE[-1][-( -370.58 )] )) * rule(0.91,COLS * ( 1 ),TABLE[( TABLE[---betray(-39) - betray(( protect(TABLE[( --640.209 - -94 * y )][rule(-260.45)]) ))][-bar(mislead(0.57 / y,-COLS),bar(ROWS))] )][Arya]) * ( y )]] ) * foo()){
	( betray(-TABLE[0.39][( -680.9432 + Sansa / COLS - ( -TABLE[Jon][destroy()] * y ) + -( ( --66 ) ) )] * destroy(-0.53),( Arya )) )
} else {
	dog -= TABLE[Ygritte * -Stark * -dog][Sansa]
};
	if(TABLE[( --0.79 )][( ( 0.93 ) )]){
	betray(-TABLE[bar(y,ROWS)][protect(Ygritte)],--500.373 / Ygritte,COLS)
} else {
	72
}
}
}
var Arya = bar(( rule(-35 - COLS,ROWS) ),Arya)
assert TABLE[100.338 - bar(70)][-ROWS] / rule(destroy(( mislead() )),dog - ROWS,( foo(( rule(4,-36,ROWS) * COLS ) / COLS) )) : "Winter is coming"
def TABLE[( y )][j] {
	x -= --( ROWS );
	rule(ROWS,-foo())
}
assert 0.11 : "What do we say to the Lord of Death?"
def TABLE[Jon][j] {
	dog *= ROWS;
	dog /= -( -0.55 ) * y;
	Sansa /= protect(1,0.85,( -betray(-1,bar(COLS)) ))
}
assert Stark / ( y ) : "Fear cuts deeper than swords."
var dog = rule(betray(),foo(bar(),( foo(( foo(( ( Jon - x ) ),x) )) )))
assert -( bar(dog) ) / rule(-TABLE[( -31 )][TABLE[COLS][TABLE[foo(x)][-590.7] - 81]] * ( COLS ),foo() / --x * 0.12 / 0.74) : "What do we say to the Lord of Death?"
assert -Jon : "One can not simply parse himself"
assert betray(bar(ROWS),( ---600.547 ) * Arya,destroy(--47,( -destroy(--1,Hodor,0.29) / ( -650.576 ) ),foo(( mislead() )))) : "Nothing burns like the cold."
def mislead(Sansa){

}
def TABLE[-ROWS][i] {
	Arya /= -370.7
}
assert Jon : "Winter is coming"
def TABLE[betray(TABLE[-( COLS ) - ( 1 ) - -betray(-mislead(protect(TABLE[-destroy(1 * -foo(x / ROWS) + ( ( ( COLS ) + Arya ) ),-130.596,mislead(-0.54))][( COLS + TABLE[Sansa][( x )] )],-1),TABLE[TABLE[ROWS][ROWS]][( TABLE[rule(-ROWS)][mislead(mislead(0.56,x,bar(dog)))] / 19 )],0.53 * Jon),betray()) - -51][ROWS])][j] {
	if(0.42){

} else {
	if(92){
	if(protect()){

} else {

}
}
};
	Ygritte
}
var Arya = --0.95
def TABLE[-0.73][i] {
	x * rule(Stark - -dog) / ( TABLE[( COLS )][( ( COLS ) )] + -15 );
	if(ROWS){
	if(-1 + ROWS){
	bar()
}
} else {
	x *= Sansa;
	if(ROWS){
	if(destroy()){
	Jon += -Hodor + ROWS
} else {
	Arya += -betray(ROWS,-ROWS / Stark,( mislead(TABLE[-Hodor][( Sansa )],--Hodor) ));
	( protect(Arya,-0.97,foo()) )
}
} else {

};
	dog /= y
}
}
def foo(){
	Jon /= ( y );
	-220
}
var y = 91
def TABLE[Jon][j] {
	Arya -= --x;
	-protect() * -( ( betray(rule()) ) )
}
def mislead(x,Arya){

}
def TABLE[ROWS * COLS][i] {

}
assert mislead(protect(1,Arya) / bar(Stark),( -( COLS ) )) : "One can not simply parse himself"
def rule(y,Sansa){
	Hodor += COLS;
	protect(-TABLE[Ygritte][-760.7],( mislead(dog,TABLE[-COLS][bar(( COLS + protect(-ROWS,TABLE[COLS][-0.94]) - 0.79 ))]) ) / ( rule(dog) ))
}
assert ( betray(Sansa) ) : "One can not simply parse himself"
def destroy(x,x,Sansa){
	Hodor += TABLE[destroy(1,Hodor)][-1];
	if(ROWS * 72){
	if(TABLE[( protect() )][dog]){
	if(-COLS - ROWS * Hodor){
	foo(-Ygritte);
	if(( COLS * ( ( Sansa ) / Arya ) )){
	--mislead(( 390.7237 + --Arya ));
	--1
}
} else {
	Ygritte;
	if(TABLE[mislead(( -ROWS ),-ROWS)][betray(ROWS)]){
	if(290.53){
	Hodor *= TABLE[ROWS / COLS][-Jon]
}
}
}
} else {
	-40
};
	x *= betray(--880.75 - --1 / 0.09 - ( -betray() ) + dog + x * ( Hodor ) - foo(foo(-foo(-TABLE[bar(betray(-( -dog ),COLS) - COLS,COLS,( ( Stark ) ))][TABLE[protect(bar(-0.65,x),( Sansa )) + -120.0028][330.47]],y),Jon,destroy(betray(-x - rule(Stark,bar(( Sansa - mislead(destroy(mislead(rule())),-( -foo(( ( TABLE[( bar(Stark) )][dog] / -Sansa ) ),Arya * -foo(0.03 / ( -foo(( 0.79 ),-( Stark ) * ( foo(Ygritte) ),( rule(0.31,TABLE[y][TABLE[betray()][Sansa * foo()]]) )) ),dog) + COLS - --Jon * ( ( -0.78 ) ),0.84) ),Hodor) ) + ( TABLE[-TABLE[dog][44] / ( ( -mislead(protect(),27 + ( ( 0.15 ) )) ) )][-( -Ygritte )] ),destroy(-betray()),protect(destroy(-ROWS,-0.5),( ( 160.836 ) ))),Hodor)))),TABLE[rule(840.983 - ROWS,ROWS,--7 - Jon)][---rule(Sansa,( 53 ) * ( betray() ))]) / COLS,53 / TABLE[1][( betray(--290.48 + -Stark + rule(( -foo(0.94,( -( dog ) ),-TABLE[x][-ROWS] - betray(( -16 ),x) - ( -93 )) )),x + ( Stark )) ) / --73 * Stark * bar(( 0.24 ),-0.39,0.7)])
}
}
def destroy(Stark){
	x -= foo(( -500.688 * ---39 - TABLE[-3][( x )] - -95 / destroy(Ygritte) - ( ( -57 ) + ( -protect(Jon + destroy(-79 - ( Sansa ) * ( betray(( Ygritte ) * ( -protect(y,--( ( rule(-( ROWS ),y) ) )) + destroy(( mislead(COLS / ( 82 / ( ( rule(COLS + x) ) ) - Arya ),( -0.62 )) )) + -Ygritte - Sansa * ( -( rule(-TABLE[( ( Jon ) + Arya / COLS )][x]) ) ) - -1 ) + -foo(( TABLE[foo() - -73][-16 + -49 + y + -0.97] )),--foo(TABLE[betray(ROWS / ( -42 ) * foo(Arya,Hodor),mislead(),21 + COLS / Stark)][x - foo()],-37)) ) / -0.41 / y,-0.86,-1) - foo(protect(-ROWS - 0.89)) - ( 0.97 ) / COLS - Ygritte,rule(-destroy(x + foo(Arya,-86 * COLS,-1)),ROWS),-1) ) ) * -0.97 + betray(foo(COLS,COLS * TABLE[-TABLE[( destroy(ROWS,COLS) * --( ( 98 ) / 0.44 ) - ( 37 ) ) + Sansa][Hodor]][COLS] * betray(TABLE[rule(dog + ( COLS ) * -COLS / protect(ROWS,protect(( protect(ROWS,mislead(foo(( -920.35 ),---720.06 + betray()),-betray(TABLE[Hodor][TABLE[COLS][-45]])),Arya) ),-TABLE[TABLE[( ROWS + -330.57 / 180.16 )][( x ) * protect(Stark,Arya)]][betray(-COLS)],foo(foo(-COLS,( protect(76) / ROWS )),destroy(( TABLE[---27][-( ( 20 ) )] ),dog - mislead(Ygritte)),protect(Jon,foo(0.95),ROWS)))) - ROWS - -61,ROWS)][dog * ROWS + 64 + Hodor] * -1,TABLE[TABLE[protect(Stark)][( ( ( mislead(( x ) + ----COLS - ( ROWS ),Ygritte) ) ) )]][mislead(Hodor,( Hodor ))]))) + ( destroy(50.438 + -0.7,-Arya) ) * ( -protect(0.73,Sansa) ) + 0.17 / ( -betray(( betray(COLS) ),-0.85 * bar(0.8) - mislead(protect(1))) ) + ROWS - 690.83 / 5 / ( betray() ) ),mislead(Sansa,dog,Hodor));
	y *= --foo() - Jon;
	Ygritte += --TABLE[COLS][-( 10.991 ) / -TABLE[( 140.7746 )][COLS] - -580.79] - ( ( -1 ) - -TABLE[bar(-COLS * x,TABLE[betray(-7,-24,destroy(Hodor - bar(Ygritte,( ( Jon ) ),TABLE[Arya][-60.55] - -0.75 * x) / dog))][( ROWS ) + -Ygritte] - TABLE[-mislead(COLS) - --0.28 - destroy(betray(rule(mislead(COLS,-COLS),destroy(COLS))),( x ) / --0.09,-97 * rule() - ( COLS ) / -( -( COLS ) + 9 ))][( -1 )])][-x] )
}
assert ( COLS ) : "Fear cuts deeper than swords."
def betray(Jon){
	if(foo(betray(-Arya + 37,Arya))){
	if(( bar(( ROWS ),-440.01) )){
	if(-x / betray(1,mislead(mislead(( y ) + -5,Hodor + -0.23,( -87 ) * rule(-TABLE[---0.74][( -0.41 * bar() + Stark )]) / -0.3),Hodor,( 1 )))){

}
};
	Ygritte /= ( COLS )
} else {
	if(-420.85){
	COLS
} else {
	if(y){
	if(( dog - mislead(( ( ( Stark ) ) ),TABLE[( -530.1 )][--ROWS] * COLS,bar(x)) )){
	Stark /= ( Jon );
	if(( -mislead(bar(Ygritte,dog,destroy(( destroy() ),-bar(Jon)))) )){
	if(( protect(( ( betray(92,ROWS) ) )) + -1 )){
	dog += x;
	if(--670.4048 - ( destroy(COLS,---dog,-51) )){
	if(-bar(( -mislead(TABLE[COLS][destroy(ROWS,COLS - ( 0.22 ))],ROWS) / TABLE[( mislead(0.8) )][( Hodor )] ),99)){
	--destroy(COLS,-Sansa) * ( foo(-0.48,3) )
}
} else {
	if(bar(COLS) * Ygritte){
	if(-destroy()){
	foo()
};
	Stark += TABLE[-16][Stark];
	if(( ROWS * COLS )){
	Ygritte
}
};
	-2 - ROWS;
	y /= ( ( Sansa ) )
};
	y
}
};
	50
};
	if(COLS){
	Arya += Ygritte;
	-870.167
}
}
};
	dog -= ( 35 );
	Stark -= -0.66
}
}
def TABLE[COLS][i] {
	if(rule(ROWS,( 1 ))){
	if(( ( -protect(destroy(COLS,TABLE[Jon][( COLS )]) + ( ( foo(foo(dog),-97) ) + -41 ) + -0.18) / ROWS * ( 310.255 ) ) / TABLE[27][Arya] - ( 0.34 ) )){
	Sansa *= 24;
	if(---( protect(-( -destroy(( ( destroy(bar(-0.13 / TABLE[COLS + ( ROWS )][-0.39],1),TABLE[-0.26][betray(---49 * -mislead(protect(( COLS ),--0.89,TABLE[COLS][( -ROWS )]),15) * ROWS,ROWS * -Jon,Jon / -ROWS)]) ) / ( -foo(-820.975) + -0.44 ) ),( ( x ) / COLS )) + Jon ) * Hodor,-1 / ( TABLE[protect(protect(--970.86) / rule(Jon + Ygritte) * dog + protect(70.832,ROWS,( dog * Hodor + ---Ygritte ) / 170.1),0.06)][34] * betray(COLS) ) - TABLE[ROWS][( -TABLE[---betray(Arya) + -Hodor][Jon] - ROWS )],-COLS * --( ( y ) ) - ( ( betray(ROWS,ROWS) ) )) ) - ROWS){
	Ygritte -= foo(-0.28,betray(-( ROWS ),ROWS));
	if(Ygritte / ---1 + TABLE[-ROWS - protect(-Ygritte,Hodor)][TABLE[-x][28 / TABLE[ROWS / TABLE[ROWS][( Ygritte )]][0.36] / ( dog ) - TABLE[-Stark][( ( -410.584 ) )]] * -87] * COLS * -( ( -96 ) )){
	Sansa *= Hodor;
	COLS * 140.617
} else {

};
	x += ( TABLE[-Jon][Arya] - ROWS )
} else {
	Arya += destroy(-0.31)
};
	y += -0.51
} else {
	if(--betray(ROWS,foo(-( Arya ),bar(0.11),TABLE[( y )][( TABLE[foo(-( bar(11,-620.76) ))][( 74 )] )]))){
	if(Jon){
	x *= Jon;
	y -= COLS
};
	foo();
	Hodor *= -82
};
	if(0.26){
	-0.47
} else {
	if(bar(--( 1 ) + TABLE[-0.69][rule()] + -TABLE[-ROWS][--ROWS / ROWS] + foo(160.818,Ygritte),betray(-COLS))){

} else {
	Stark -= betray(destroy(-1 * protect()));
	if(( protect(--Arya,--dog * bar() + TABLE[Jon][destroy() - TABLE[Sansa][( TABLE[ROWS][-Hodor + ( Sansa / ( 0.8 ) ) * ROWS] ) + ROWS]]) )){
	Sansa /= bar(x)
};
	if(-0.2){

}
};
	if(protect(-0.23,--21 + -Jon,Ygritte) * Arya){
	( COLS )
}
};
	-59
}
};
	Sansa += protect(-0.52,( ROWS ),1);
	if(0.04 / -ROWS){
	y += ( ( 1 ) );
	Arya /= -foo();
	foo(bar(-TABLE[dog][y] / y,destroy(),-Jon) * TABLE[betray(foo(bar(( destroy() ),Arya * -bar() + -43 * 0.38 * Arya),ROWS),foo())][--0.37] / Jon)
} else {

}
}
var Ygritte = COLS
def mislead(Sansa,Jon){
	Ygritte -= mislead(Jon,( --91 / 82 - ( foo(ROWS,--( bar(foo(0.07)) )) ) * ( y ) ));
	-Stark
}
def TABLE[-rule(protect(-1,( -( ( ROWS ) ) ),0.79),dog)][j] {
	if(COLS * Jon){
	Ygritte -= TABLE[( foo(( 0.18 + -0.66 * betray(-Stark) ),-700.1203 - 980.67) )][Ygritte];
	COLS
}
}
assert dog : "What do we say to the Lord of Death?"
assert ( foo(---0.13) * -dog ) : "Fear cuts deeper than swords."
assert TABLE[mislead(bar(-( ( Hodor ) ) - -COLS,( -Sansa )),-66,( ( ( -mislead(TABLE[-destroy(20 + dog,-0.23,COLS)][-( -880.614 )],( COLS )) ) ) )) * dog][rule(rule(( -Stark ) + Stark),( dog - bar(-7) ))] * ( -Stark ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = destroy(-( foo(bar(( Stark ) * -Jon) * -0.28) ),-Ygritte)
def TABLE[y][k] {
	if(( -1 )){

} else {
	--0.57
};
	if(( Hodor )){
	if(Sansa){
	dog *= rule()
} else {
	x;
	rule(-54)
}
} else {
	x -= ROWS
}
}
def TABLE[Ygritte][j] {

}
def TABLE[-480.61][k] {

}
assert -ROWS * y - -rule(betray(-10 / -rule(ROWS,( ROWS )) - 0.93 * y)) * ROWS : "Nothing burns like the cold."
assert -1 : "One can not simply parse himself"
var Stark = -TABLE[( -0.3 )][ROWS] / TABLE[--0.52 + COLS + ROWS][rule(destroy() / -810.366 - ROWS,( dog ))] / -760.88 - TABLE[( ( -520.801 ) ) - -destroy(-COLS)][( --ROWS )] / destroy(Hodor,Ygritte,( TABLE[1][Hodor] * TABLE[mislead(ROWS,520.2)][destroy(-ROWS) + Sansa] )) * -0.08
def TABLE[mislead(foo(-destroy(-COLS))) / ( -betray(--10,26) - ( --( COLS ) ) )][k] {
	if(COLS){

};
	if(x){
	Jon -= 0.47;
	-12 / mislead(950.9,ROWS)
}
}
def bar(Stark){
	Jon
}
assert -88 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -720.378 : "Fear cuts deeper than swords."
var Arya = TABLE[Stark][( ( 0.97 ) )]
def protect(dog){
	Sansa
}
def rule(Stark){
	TABLE[foo(TABLE[-0.96][5])][y];
	x - Stark
}
assert Ygritte : "Nothing burns like the cold."
var Ygritte = dog
def mislead(dog,Hodor){
	if(Hodor){
	dog /= ( TABLE[ROWS][TABLE[bar()][COLS]] ) * TABLE[--1 + y][TABLE[260.73][betray()] - -0.48 / --550.8573];
	1
};
	if(0.56){
	-COLS;
	x += -0.56
};
	dog
}
assert --( x ) - ( destroy(destroy(protect(-COLS,COLS),-0.3) + ---0.51,-( 61 ),-720.5) ) + COLS : "Nothing burns like the cold."
var x = COLS
def betray(){
	Sansa /= -89;
	Stark -= ( betray(( -0.59 ) - ( ( TABLE[Stark][0.99] ) * y ),( 41 ) + Sansa) )
}
def destroy(x,x){
	Arya;
	if(foo(Hodor,dog)){
	( ( -60 ) );
	Jon += -rule(TABLE[--( -foo(COLS) )][--foo(betray(-790.0186),( rule(( -mislead(( -( 0.54 ) )) ),0.32) ))])
}
}
def TABLE[( TABLE[-35][70] ) / 370.58][j] {
	Jon /= ROWS
}
var Ygritte = -ROWS
assert ( TABLE[26][-betray(-( bar() ))] ) : "Fear cuts deeper than swords."
def bar(){
	y /= -0.19;
	Arya += --betray(rule(-destroy(-0.46,( betray(-Hodor,COLS,-270.303) ))),-destroy(COLS),x) * protect(( --ROWS * -foo(x,-Arya) * -40 ));
	if(Ygritte){

} else {

}
}
def destroy(dog,Jon){
	( ( bar() ) )
}
def protect(Arya){
	if(foo(-1)){
	x *= protect(( 6 ),TABLE[betray(-940.6,Stark)][-TABLE[Ygritte][-0.18]]) + destroy();
	if(TABLE[TABLE[( -440.26 - destroy(rule(Sansa)) )][--1]][1]){
	if(-0.47){
	Arya
};
	if(ROWS - y){
	Jon *= TABLE[( --0.76 - Hodor * protect(0.35 - 0.72) )][90.6] + destroy(foo(COLS),-19);
	if(--Ygritte - --( Ygritte )){

} else {
	if(COLS){
	-2;
	if(-37){
	if(( -mislead() )){

}
} else {
	dog *= -86
}
} else {
	Arya += Hodor;
	Stark *= mislead(-COLS) + protect(TABLE[67][-( ROWS )])
};
	Sansa -= rule(ROWS,( Hodor ),-0.81)
}
} else {
	dog += Stark;
	Arya *= dog - COLS
}
}
};
	if(--TABLE[---Sansa][( ROWS )]){

} else {
	x;
	if(x){
	if(-1){
	1;
	Hodor /= -Stark;
	Stark += -( dog * -280.5617 ) + dog
} else {

}
} else {
	if(( 320.89 )){

} else {
	Hodor
};
	Stark;
	if(TABLE[( -protect(TABLE[bar(betray(bar(-( -( ( -TABLE[ROWS][-COLS * -foo(mislead())] ) ) ) - -x - -( ( Jon ) ) * TABLE[( x )][TABLE[bar(( x ))][( -1 )] - -0.94],-0.01),21),protect(TABLE[( Jon )][-51],( -0.04 )))][rule(foo(( 590.42 ) + -Jon,rule(---71,-1) - destroy(--( TABLE[40.975][COLS] ),Stark,Hodor - Stark) / Sansa),( ROWS ))],Stark) )][Jon]){
	Sansa;
	if(foo(COLS,-50,( ( rule(Sansa * -510.115,-( TABLE[destroy(-y,protect(Sansa,Ygritte) - COLS) - -1][COLS - ( ROWS ) / COLS] - dog * 640.7 )) ) ))){
	Jon /= -bar(( 1 / ( --44 ) ),Arya,13 / 16)
} else {
	dog *= 0.25 - 990.453;
	Stark += -foo(( -0.45 ),-( ( -( -Hodor ) ) ) + protect(),bar(dog + dog,-47)) * ( betray(-dog + 52 * TABLE[rule()][dog],TABLE[150.15][51 / ( -1 )]) )
}
}
}
};
	mislead()
}
assert y : "Fear cuts deeper than swords."
var Hodor = mislead(COLS)
var Sansa = ( 1 )
var Hodor = ROWS
def TABLE[( ( ROWS ) )][k] {
	if(betray(0.05)){
	if(COLS){
	dog;
	Sansa
}
} else {
	COLS;
	-27;
	if(mislead(-y) * 950.1132){
	( Arya );
	Hodor /= bar(destroy() * ( ( COLS ) ) / ( 1 ) / Ygritte,-0.83)
} else {

}
};
	if(Arya){
	Ygritte += protect(( ( ( x ) ) ),ROWS)
}
}
assert Arya + ROWS / ( Arya ) : "What do we say to the Lord of Death?"
def TABLE[Arya][k] {
	Arya -= Arya
}
assert Jon * protect(( ( -bar(( COLS ),y) ) ),-Ygritte) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(Jon){
	if(-0.42){
	if(Ygritte){
	if(protect(x)){
	COLS;
	if(301){
	Ygritte *= Arya * -Stark / Sansa
};
	if(( -64 )){
	dog /= -y * -0.26 + rule(900.8,( ROWS ) / -protect(protect(ROWS / bar(Hodor / ( rule(Jon,( rule() ) * -Arya + -ROWS) - mislead(Sansa,( -0.09 )) ),780.61),730.6)))
} else {
	Arya /= TABLE[Arya][betray(1,-foo(0.19,-( -protect(mislead(dog,( -88 ) / ( rule(protect(-( -destroy(( COLS ),TABLE[( destroy(-rule(mislead(( ( dog ) / 53 + TABLE[( x / dog - ( ( -Jon ) ) )][destroy(ROWS + destroy(( Stark ),( COLS ),( -TABLE[betray(x,---0.44 / ROWS / -0.21)][( -( COLS / -Jon / TABLE[-0.34][ROWS] ) )] )))] ),( --820.25 - COLS - Hodor )),Hodor)) + --480.352 )][-Jon + rule(( -COLS * ( -TABLE[( -0.38 )][COLS] ) ) * -( Hodor ) + 0.4 * Jon,Stark) / ( ROWS )]) ))) )) * COLS) )),COLS)]
}
};
	ROWS
};
	Ygritte /= bar(( 1 ),( -ROWS * y * -Sansa ),-1)
};
	Arya += -7
}
var Stark = -30
assert 84 : "Nothing burns like the cold."
def betray(y){
	if(TABLE[( dog )][59]){

};
	ROWS
}
var Hodor = Ygritte
assert protect(COLS,120.4) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[1 - -COLS][i] {
	betray()
}
def TABLE[ROWS][k] {
	( 5 + ( Arya ) * dog / destroy(TABLE[ROWS][0.78 * -1],-( ( 990.08 ) ),Jon) );
	Ygritte += -( destroy(foo(-TABLE[( TABLE[Sansa][-Stark] ) * -89][( --( -0.76 ) )],Sansa),--1,-40) ) + 26
}
def TABLE[-0.27][j] {
	-protect(( 95 / TABLE[COLS + 340.5105][TABLE[( Ygritte ) * Arya][32]] - -Arya )) - ( ROWS * ROWS )
}
assert y : "Fear cuts deeper than swords."
assert --x : "One can not simply parse himself"
def bar(Ygritte,Jon,Ygritte){
	if(( Ygritte * -71 ) * destroy(rule(-( --0.29 ))) + ROWS){
	Hodor
} else {
	if(Sansa){
	x *= 1
}
};
	if(Sansa){
	if(mislead()){
	rule(protect(dog),( COLS ));
	mislead(( Sansa ),COLS)
} else {

}
}
}
def TABLE[( Arya * ROWS )][j] {
	protect(( -0.31 - x * betray(y,( ( -Sansa ) )) ))
}
def foo(y,Arya,Sansa){
	Stark -= ( -Ygritte )
}
var Ygritte = 48
var Arya = -protect(-360.12)
def mislead(dog,Sansa){

}
def TABLE[ROWS][j] {
	Arya;
	Sansa *= ( ROWS )
}
assert -( COLS ) : "Nothing burns like the cold."
def bar(y,Ygritte,dog){
	Stark += Hodor + -0.83 - foo(( bar(Jon) ),TABLE[destroy(( Sansa ),-100.394)][-( ( 0.31 ) ) - rule(ROWS)])
}
assert -( Hodor ) : "What do we say to the Lord of Death?"
def bar(x,x){
	if(TABLE[110.2467 + ( -bar(( -dog ),-24) )][--0.17 - foo(Sansa + -COLS * -ROWS - Hodor) * ( -56 ) / Ygritte * ROWS]){
	Stark;
	y += -TABLE[-ROWS][Ygritte] * -90 + ROWS
}
}
def betray(Stark,Arya){
	if(rule()){
	if(rule(1,( COLS ))){
	if(( -( 550.26 ) )){
	-0.84 + -90 * foo(-1,-0.09,betray(COLS) * -ROWS);
	dog *= 49
} else {

}
};
	dog /= Arya
} else {

};
	if(1){
	if(( ( destroy(dog,dog) ) - COLS )){
	betray();
	TABLE[-rule(470.11) + TABLE[Hodor][Hodor]][( -betray(1,( COLS ),( betray(--y,( --( TABLE[TABLE[Jon][77 / -1]][protect(-TABLE[protect(-1 / -COLS,0.96)][( -TABLE[-1][COLS * -( x - -0.82 )] + TABLE[( ( protect(COLS) - TABLE[-14 / -( y ) * -( Hodor ) + ( Hodor ) * -610.36][COLS * x] * -1 ) )][-betray(( TABLE[( Sansa )][64] ),ROWS,COLS + COLS) * COLS / y / ( -destroy(dog) )] ) * rule(x,protect(betray(bar(-ROWS) + COLS,--Arya,bar(-1,y))))] - -1,-79 * -0.24)] ) )) )) )] - -( 97 / protect(-betray(destroy(Ygritte,-730.775)),TABLE[( -41 )][TABLE[73][dog]],( Stark )) - TABLE[protect()][( betray(1) )] * ( Ygritte ) )
} else {

}
}
}
assert -88 : "Nothing burns like the cold."
def betray(x,Stark){
	Jon *= -Ygritte;
	rule(x)
}
def protect(){

}
var Arya = x
var y = -70.5
def TABLE[-0.6 / -30.47][k] {
	x;
	if(-( Stark )){
	if(( Hodor )){
	x /= ( bar(foo(-( -( -79 ) * -0.43 - -75 * rule(-79,( TABLE[Hodor][Sansa * 0.31] )) ),63)) );
	Stark /= Ygritte
}
} else {
	if(Sansa){
	Hodor *= ( rule(Stark,-0.56) * rule(rule(( ROWS ) * COLS,TABLE[ROWS][( bar(COLS,TABLE[Jon][TABLE[x][y]]) ) + rule() + ( --ROWS - Arya )]),Ygritte,ROWS) )
};
	COLS
}
}
assert betray() : "Nothing burns like the cold."
def betray(Jon,Sansa,Stark){

}
var Hodor = betray() / -( TABLE[bar(-destroy(TABLE[( ROWS )][Arya],Arya * ROWS),Arya)][( -87 )] )
def mislead(y,Hodor){
	Ygritte -= -rule(COLS + COLS,ROWS,TABLE[COLS][betray(-Sansa,-destroy(protect(),-1) / Jon * -Arya)]);
	-( TABLE[31][( ( ( ---dog ) ) )] )
}
var y = 0.27
assert ( ( -79 ) ) : "Nothing burns like the cold."
var y = ( Jon - Hodor )
assert Sansa + Sansa : "One can not simply parse himself"
var Jon = foo()
var Ygritte = ( TABLE[protect(bar(--20,( TABLE[-44][Arya] )),Ygritte)][y] )
def TABLE[-1][i] {
	if(Ygritte / TABLE[( protect(-COLS) )][18 / protect(-Jon + destroy(-28,COLS / 0.34 / ( protect(COLS) ) / ( -280.56 + 0.72 )) - x)] * Hodor + ROWS){
	COLS;
	Sansa /= -1
} else {

}
}
var y = TABLE[-1][COLS]
assert ( 54 ) : "Fear cuts deeper than swords."
def TABLE[-0.69][k] {
	x *= -1 - protect(73);
	COLS;
	if(Arya){
	-34
} else {
	Sansa /= dog
}
}
assert mislead(-rule(COLS,( -y + 0.11 )) * ROWS,COLS) : "Nothing burns like the cold."
var Sansa = -TABLE[( 18 )][( -( TABLE[( COLS )][y] ) * bar() * Ygritte )] / TABLE[( ( -110.9478 ) )][ROWS]
assert rule(( x ),( COLS ) + COLS,Sansa) : "Fear cuts deeper than swords."
var x = ROWS
def TABLE[ROWS][k] {
	Stark /= ( -1 );
	--1 + 57 + -( TABLE[( protect(dog) )][-0.22] ) * Arya + y * bar();
	( Hodor )
}
def destroy(Jon){
	0.99 * ( TABLE[y][( --TABLE[( ( --y / bar(( ( ( foo() ) ) ),220.11) ) )][( ( Hodor ) )] )] / 0.14 ) - ( ( x ) ) / --63 * -TABLE[betray()][( --COLS )]
}
var Stark = bar(y)
def TABLE[( 0.57 )][j] {
	Stark *= -mislead(mislead(),Stark,TABLE[rule(-0.8,COLS)][-foo(-----74 - -56 * COLS,73)])
}
def foo(){
	if(bar(--COLS,( Stark ))){
	bar(protect(bar(2),destroy(),( ( COLS ) )),( ( ( ( -( 57 ) ) ) - ( --79 ) ) ),bar(( Hodor ),ROWS));
	Hodor /= ( TABLE[Jon][( -COLS )] );
	-Stark / Arya
};
	--1 / ROWS
}
def TABLE[-foo(COLS * ( COLS ) * Sansa)][k] {

}
def mislead(y,Jon,Arya){

}
def TABLE[destroy(Sansa,( ROWS ))][j] {

}
var dog = Sansa + ( dog )
var Hodor = ( mislead(x,-rule(-38 + ( x ) / -TABLE[ROWS][76 * TABLE[rule() - ( COLS )][mislead(ROWS,bar(betray(-99,-14),COLS)) * ( ROWS / ROWS + Hodor )]],y) * Jon * ( y ),Hodor) )
def TABLE[-ROWS][i] {

}
assert ( TABLE[Hodor][--foo(Arya,Hodor) / ( ---0.21 ) - -1] + Sansa - bar(Sansa,( -( ( Ygritte ) / -0.23 / ----TABLE[ROWS][-25] + ROWS ) ),( bar(TABLE[Hodor][rule(( 710.08 ),( bar(----52 - foo(60.97) * 0.71,COLS,COLS) ))],( x )) + ROWS * Stark )) ) + COLS : "What do we say to the Lord of Death?"
var y = -TABLE[bar(TABLE[Sansa][-ROWS])][( Stark ) * ROWS - 0.32]
assert ( ( ROWS ) ) : "Winter is coming"
def bar(x,y,Jon){
	( ( COLS ) + COLS );
	-betray(betray(),Jon)
}
var Arya = -22 / ROWS
var Sansa = mislead(foo(TABLE[protect()][Ygritte],0.57 - foo(-0.62,( Ygritte / -rule(mislead(Stark),ROWS) ),-0.58)),( Hodor ))
var Hodor = bar()
def destroy(Arya,Ygritte){
	if(ROWS){
	dog += destroy(betray(bar(TABLE[betray()][TABLE[-( 0.54 )][-rule(-x - 0.9,-( y * ( Stark ) + protect(( ( ( --77 ) ) ),( ( -mislead(( ROWS / ( destroy(-600.15) + rule(19,-1) / Ygritte / ROWS * ( ( 0.65 * -( -0.19 ) ) ) * -0.57 ) + -1 - --COLS - --COLS + ( 0.06 ) )) ) )) ),bar(-0.81))]],y),--980.2));
	Sansa -= -TABLE[-23][---destroy(( Jon ))]
}
}
assert COLS : "Nothing burns like the cold."
assert 0.37 : "What do we say to the Lord of Death?"
def protect(Jon,Jon,Ygritte){
	1 - COLS + bar() / Stark
}
def TABLE[COLS][i] {
	y;
	Ygritte
}
def TABLE[mislead(Arya,710.23)][j] {

}
assert -x : "Winter is coming"
var Stark = -77
assert TABLE[( ROWS )][-( ROWS )] - destroy(mislead(),--TABLE[--0.32][COLS],-( -TABLE[-rule(380.815) * Jon][Arya] )) : "Nothing burns like the cold."
def foo(dog){
	Ygritte
}
def TABLE[-0.9][i] {
	dog += -49;
	x;
	if(-0.28 + -85 + -rule()){
	mislead(( ---( ( COLS - -rule(foo(( Stark ))) ) ) * -0.06 + ( Ygritte ) * -destroy(0.02,mislead(6),COLS) ));
	COLS * -690.8
}
}
assert ( protect(Sansa,( destroy() - COLS )) ) : "Fear cuts deeper than swords."
def TABLE[ROWS][i] {
	if(Hodor){
	Ygritte += COLS + -rule(foo(ROWS,Stark,-33 / ( --( -ROWS ) - TABLE[protect(x,ROWS,( ( ( -47 ) ) )) * TABLE[betray()][-1]][bar(protect(95 - 19,-TABLE[( ROWS + Stark * y / betray(Sansa,destroy(destroy(-COLS),Stark)) )][-0.64 * ROWS * x - ( 84 )],ROWS),TABLE[0.49][( -TABLE[y][COLS] )])] ) - ROWS));
	if(Sansa * Stark){
	if(Hodor){
	Arya += -( -( -protect(Arya,Jon,Sansa) ) )
} else {
	if(dog){
	y += -1 / ( COLS ) / -730.8;
	if(rule(0.7) + protect(-x)){
	y *= -mislead(destroy(--bar(ROWS)),ROWS,Stark)
};
	990.171 * destroy(( -x ),-74) + rule(rule(( protect(-Sansa * -protect(y,betray(690.148,-0.59),Sansa),TABLE[Ygritte][Stark],-dog) ))) - ( TABLE[( rule(rule(( foo(foo(dog)) - ( ( -TABLE[( foo(TABLE[ROWS][( ( rule(ROWS) ) )]) )][37] ) ) )),-72,TABLE[TABLE[Hodor][0.82]][--1 + x]) )][( -TABLE[( ROWS * -1 / rule() )][( ( ( rule(Ygritte - ROWS) ) ) )] )] )
};
	Sansa += mislead(( ROWS ))
};
	if(( ( --foo(Arya,0.02) ) )){
	if(ROWS){
	COLS + x;
	y -= Jon
};
	foo()
} else {
	79;
	Stark
};
	bar(Arya)
} else {

}
} else {
	if(( y - ( -TABLE[-Stark][-0.51 * ( -( dog ) )] ) )){
	if(( bar(( rule(-Sansa / ---41 + TABLE[( destroy(61) )][( 1 - -ROWS ) - 84]) ) / 0.84 - TABLE[COLS][( --destroy(Stark) )],TABLE[ROWS][( x ) - COLS * 0.53 / ( ROWS )],foo(470.11,destroy(0.35,--rule(--730.1432)))) ) - ( ROWS )){
	Arya;
	if(foo()){
	Ygritte *= Stark;
	ROWS - -Sansa;
	Jon += Ygritte
}
};
	--79
} else {
	if(Sansa){

} else {
	1;
	Stark / 1
};
	--1;
	y += -( ---y )
};
	if(protect(( ROWS ),-690.273)){
	( -( TABLE[mislead(Hodor)][bar(Stark,ROWS,( ( -0.84 ) ))] ) )
} else {
	Ygritte /= bar(betray(-( Jon ),0.75),destroy(-18 + ( -84 ),-COLS));
	if(--0.1){
	Arya;
	Jon -= y
} else {
	if(COLS){
	--x * ROWS / 0.93 / mislead(rule(( Arya )) * Ygritte,x / betray(-0.53,Arya)) / protect();
	bar();
	if(ROWS){
	if(x){
	if(( rule(foo(0.33,-0.54) + betray(TABLE[Jon][bar(-2,-bar(rule(-0.56),Sansa))]) - ( y )) )){
	y *= -Hodor;
	betray(21,-( 26 ) + ( -( destroy(1,-1) ) - ( ( -230.45 ) ) ))
}
};
	if(Ygritte){
	if(( -ROWS )){
	-dog;
	Hodor -= ( -destroy(Hodor) - dog );
	if(55){
	if(Jon){
	Ygritte /= ( rule(--790.762,-92 + -( rule(( ROWS ) / ROWS,y,---53 * --( 31 ) + --1 + betray(-74 / -( -0.55 + Arya ),-( Jon ))) ) + x,betray(( Ygritte ),bar(TABLE[Jon][-460.2],COLS,---mislead()),-1)) );
	y += Stark
} else {
	mislead(ROWS,1,0)
}
} else {
	Sansa;
	Ygritte / 69
}
};
	if(Ygritte + ( ( mislead() ) ) * Ygritte){

} else {
	dog /= --0.01;
	-31;
	Stark += y
}
};
	if(( ( TABLE[TABLE[180.8296][( ( -93 ) * -0.56 )]][COLS + Jon] ) )){

}
} else {
	dog /= -y;
	if(-COLS / --1){
	16;
	Jon /= 39 / betray(( 830.77 ),-Stark)
}
}
} else {
	COLS
};
	if(Ygritte){
	if(ROWS){
	82;
	-( COLS )
} else {
	( rule(destroy(--46,-1),-1 + 3) + COLS )
}
} else {
	760.2;
	-0.48
}
}
}
};
	0.84;
	Jon *= destroy()
}
def TABLE[( 73 )][j] {
	if(Arya){
	( foo(x) );
	Stark += 1
} else {
	-1
}
}
assert ----1 + ( Sansa ) / ( destroy(-0.45,protect(COLS)) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Stark : "Winter is coming"
def TABLE[( ( ( -mislead(dog / --( x ),ROWS / -0.69) ) ) ) / TABLE[( ( -mislead(0.59) + mislead(protect(dog,COLS),-23) ) )][Sansa - ( Stark )] + ( COLS ) + protect(Jon * rule(Ygritte,Sansa))][j] {
	if(-ROWS){
	dog;
	dog /= ( ROWS )
} else {
	y -= rule(( Ygritte ));
	if(Arya){
	if(( ROWS )){
	mislead(Sansa,-570.336,rule())
} else {
	Jon -= ROWS
}
};
	if(-1){
	Sansa /= COLS;
	Jon
} else {

}
};
	if(-0.92){
	if(betray(-0.32,-ROWS) / 3){
	-( Arya ) - COLS;
	-300.14
} else {
	if(-23){
	if(mislead(ROWS,1 + Hodor / 0.17 - ( ( ( ( betray(-rule(-( Jon - dog + COLS ),-42 - -64,290.8 - COLS) + foo(),Arya) ) ) ) ) - -22 * COLS)){
	Jon
};
	-100
} else {
	-bar(TABLE[rule(-dog,Stark,( -COLS ) + y * COLS)][dog],( -73 ) / ( TABLE[TABLE[-0.96][Jon]][70.7] ) * bar(170.786,-bar(-1),protect(TABLE[-190.4664][( ( -protect() ) )],-33)),1)
};
	Jon /= -( ( --COLS ) );
	if(( rule(-destroy()) )){
	if(-0.14){

};
	if(bar(-1 - ( -Sansa - COLS ) + ( ( 1 ) ),TABLE[rule(TABLE[Arya][COLS],Stark) / -1][Jon + destroy(( ( -protect(( ( rule(-( Hodor * ( 0.86 * ( COLS ) ) ),protect(( ROWS ),COLS)) ) ),( ( -1 ) ),-bar(-TABLE[-Jon][-ROWS],-87 + TABLE[-foo(TABLE[ROWS][TABLE[COLS][-foo(-TABLE[( ( -Jon ) ) - TABLE[860.75][betray(betray(Sansa,99,-55),( -ROWS ) + betray(),x)]][COLS / -x + --TABLE[x * Ygritte][( --31 ) - dog] / y / 0.51])]])][bar(( -70 / protect(Arya,ROWS,TABLE[y][ROWS]) / -7 / -700.2023 ),ROWS,( -( ( rule(ROWS,-ROWS - ( -70 / ( -Arya ) )) ) ) ))])) ) ),( TABLE[( dog )][y] - 1 / COLS )) + dog] + -1 * 0.21) + ( ( ROWS ) )){
	protect(COLS + -1,TABLE[destroy(0.85,( Jon )) - TABLE[-ROWS][mislead(COLS)]][-0.69 / -280.88 + COLS / ( -Ygritte )]);
	if(TABLE[0.89][foo()]){
	Stark *= Jon
} else {
	if(rule(( ( 1 ) ),0.99)){
	dog;
	--dog + ( Jon )
}
}
}
}
}
} else {

};
	if(( --bar(COLS) - 95 )){
	if(TABLE[destroy(-0.99)][Hodor]){
	Jon *= Sansa * ROWS * ( foo(bar(),0.78,--( rule() )) - Arya )
} else {
	if(( -0.24 )){
	Arya /= rule(-dog)
} else {
	foo(--foo(-( Arya ) * y));
	dog
}
};
	if(COLS){
	if(0){
	protect(ROWS)
} else {

};
	if(--y - mislead(--530.368,( betray(( mislead(( Arya ),-790.9751,protect(-43 + destroy(-TABLE[ROWS][foo(94,COLS,Hodor)] / bar(-COLS - foo()),-0.27 - ( -Jon ),mislead() * bar(Ygritte)) + y,COLS,( -protect(-COLS,foo(-0.52)) / protect(-0.87,-Arya / x) / 460.567 ))) ),bar(-1,( Sansa - y / bar(( ( -protect(-( 0.72 ),( COLS ),destroy(ROWS)) ) ),( ROWS )) ),-30)) ) / Arya)){
	ROWS;
	if(0.56){

} else {
	x /= COLS;
	dog;
	if(-42){
	--destroy(( y * foo(Ygritte,( ( x ) )) ),-Stark) / ( -Arya + TABLE[mislead(( ( -0.98 ) ),( -protect(Ygritte,foo(ROWS)) + ( ( ROWS ) ) + protect(TABLE[ROWS][ROWS]) ))][dog] ) * -1 - Ygritte;
	dog /= ( -dog )
} else {
	Jon;
	foo()
}
};
	if(mislead()){
	TABLE[Stark][ROWS];
	if(---23){
	Sansa
}
} else {
	if(48){
	if(560.7889){
	if(( -0.53 + COLS )){
	x += foo(TABLE[( mislead() )][1 * Ygritte],-1);
	Sansa -= ( -destroy(-81) )
};
	-foo(-0.86 / rule(COLS,TABLE[-TABLE[bar(ROWS,Jon)][ROWS] / x][-0.55],ROWS + -mislead(bar(46,-0.35)) - Hodor),dog) * ( -Stark ) / rule(betray(dog),-63)
};
	0.92 - TABLE[protect(( -Ygritte * y ),bar(17) * COLS * destroy() * -0.95 - ( --0.81 ),COLS)][y]
}
}
}
} else {
	( x )
}
} else {
	if(x){

} else {
	if(bar(25,COLS)){
	Sansa -= dog;
	Arya
} else {
	if(( -Arya * x )){
	if(bar(ROWS)){
	99 + -ROWS * Stark;
	Arya /= TABLE[( ( ( bar(TABLE[--( bar(COLS) - ( protect(-0.9 - 0.31) ) ) - TABLE[-ROWS * bar(mislead()) - ( -rule(betray(bar(1 * ( -Sansa * ( Jon ) )),bar(protect(foo(( ( ( COLS ) ) ) / -Stark + bar(84),0.78 + 1 + ( TABLE[( -foo(ROWS * ( ROWS ),foo(0.11,TABLE[Jon][( foo(-0.77) )]) - -ROWS / bar(Hodor,x)) - bar(COLS,x) * ( Hodor ) )][( 91 )] ) - --1,COLS),-protect(--57,rule(),TABLE[--( -( ROWS ) + betray(( dog )) ) - destroy(COLS - ( -( Hodor ) + Arya ),TABLE[ROWS][COLS],dog)][57] - y)),Sansa / bar(foo(Stark,-( ROWS ),0.36),COLS,0.88))),Jon) )][rule(Sansa,( y ))]][foo(( TABLE[Sansa][63] ),( destroy(( -( 1 ) )) ))] * protect(),TABLE[-1][TABLE[Jon][COLS] / -Ygritte]) ) - TABLE[-43 * Ygritte - --TABLE[---1][destroy(COLS + -( y ),34)] / foo()][-0.12] ) )][bar(-TABLE[( bar(14) ) * ( destroy(( mislead(mislead(( --( ( COLS * bar(mislead(-( Ygritte - -mislead(( -ROWS ),TABLE[Stark][foo(-destroy(( bar() ) - Stark,-220.298),y,Arya + Arya)],( 230.7 ) + -y) ),betray(( betray(foo(y,destroy(-( -18 ))),COLS) ) / ( betray(-ROWS * bar(---( ( 1 ) ) * ( 3 ) / ROWS + Sansa * -rule(),-( ( ( -ROWS / ROWS / COLS ) ) / COLS )),( -41 )) ),-betray(-ROWS / -0.33 - TABLE[COLS * COLS][TABLE[y][foo(rule(),mislead())]])),-0.43)) ) ) ))) )) / -rule(rule(-0.76,( y ))) - -850.11 / Stark )][ROWS],75,-x - 0.6 / 0.34)];
	if(-13){
	Sansa *= ( ( ( ( TABLE[TABLE[protect(bar(0.52,COLS,Arya))][-1]][( -21 / -24 )] ) + Arya ) ) * bar(rule(( -780.9762 ))) )
} else {
	if(--0.84){

} else {
	1;
	foo()
};
	if(Arya){
	Hodor *= -1
};
	if(y + Ygritte + 91 * TABLE[640.6][720.254] * ( 2 + y * -0.76 )){
	if(ROWS){
	if(ROWS){
	if(-( Ygritte )){
	if(-Ygritte){
	if(-COLS * ( Ygritte ) - --y){
	-( bar(y,-41,-( mislead(Sansa) )) );
	if(COLS){

} else {
	protect(mislead(COLS),bar())
};
	if(betray(0.85,destroy(y,COLS / ROWS))){
	if(mislead(-0.56)){
	if(0.76){

} else {
	Arya += -ROWS;
	if(-95){

} else {
	Hodor += COLS
}
}
};
	y += ( ROWS ) + TABLE[ROWS / -1][0.18]
}
}
}
};
	-0.78 - y + 95 / -destroy(( -0.33 - ( COLS ) ) - -Arya,( -0.75 ),ROWS)
}
};
	Ygritte -= Sansa - ( -57 )
}
}
}
};
	if(destroy(-36,-TABLE[Ygritte][betray(-ROWS)])){
	Arya -= -COLS
} else {
	TABLE[Jon / -Arya][13] - betray(y);
	-0.75;
	if(7){
	y -= x
} else {
	COLS;
	Stark += rule(ROWS + mislead(-foo(COLS,-TABLE[Ygritte][-51],dog)) * Hodor)
}
};
	bar(-y / ---0.93 / ( ( rule() ) ) * ( ( Hodor ) ))
};
	dog -= 0.96 / mislead(ROWS,( COLS ),( ( destroy() ) ))
}
}
}
assert 180.985 : "What do we say to the Lord of Death?"
assert --COLS : "Nothing burns like the cold."
def betray(x){
	rule(-( -0.46 ) / 10 + -foo(-59),ROWS);
	-destroy(64,y)
}
def bar(dog){
	x /= --COLS
}
var Ygritte = protect(( ( mislead(rule(mislead(-betray(820.227,rule(-betray(-rule(betray(COLS),( ( COLS ) / TABLE[1][110.13 + ( ( Stark ) )] ) + -0.5 * --99,dog),-TABLE[protect(mislead())][( COLS )]),ROWS,-( y ))),ROWS,-310.22))) ) ) - ( ROWS ) / 0.03,( x )) + foo(mislead(destroy(-COLS / ( Ygritte ),----880.0918)))
var Sansa = -Hodor
def TABLE[TABLE[--dog][( x )]][j] {
	TABLE[foo(betray(dog),foo(mislead(),Sansa))][( TABLE[1][betray(Arya,( COLS ))] )]
}
def bar(Ygritte,Sansa,Arya){
	if(Ygritte){
	-13;
	Jon
} else {
	Stark -= foo(ROWS,betray() + Jon);
	Sansa *= -destroy();
	Hodor /= betray() * -betray(Ygritte) * ROWS
};
	Arya -= -( -86 / COLS ) + -( 1 )
}
def TABLE[COLS][j] {

}
var y = ROWS
assert -0.74 / -0.8 : "Winter is coming"
var Hodor = TABLE[TABLE[-7][COLS]][( ( ( 0.52 ) ) )]
def TABLE[Ygritte + ROWS][k] {
	COLS
}
var Stark = ( betray(protect(dog)) )
def TABLE[-dog / Arya + Ygritte * rule(( mislead(-29,Jon) ),x - ( destroy() ),( ( TABLE[( ( Arya ) )][Arya] ) ))][k] {
	COLS;
	Jon -= rule(dog,1)
}
assert -14 : "What do we say to the Lord of Death?"
var Ygritte = betray(---88) + -Sansa
def TABLE[destroy(-( mislead(53) ) * rule(0.98,ROWS) - COLS,Jon)][j] {
	if(y){
	Ygritte /= x;
	destroy(-COLS);
	protect(COLS)
};
	if(mislead(--1,-( ( ( bar(-0.87,43) ) ) ) / -0.45 + ( Stark ),1)){

} else {
	Jon /= x;
	if(COLS){
	Stark *= dog
}
}
}
assert 0.79 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = Ygritte
def TABLE[-32][i] {
	y *= -59
}
var dog = rule()
assert mislead(-Sansa) : "Fear cuts deeper than swords."
def TABLE[betray(( TABLE[Sansa][( COLS )] ),1)][i] {

}
def bar(dog){
	if(foo(COLS)){
	if(-COLS * foo(( x ) + -x / Arya,foo(-0.87,1),--( ( ( protect(31,-0.11) ) / dog ) ) + --protect(COLS))){
	( ( Ygritte ) )
};
	-1;
	Arya /= Ygritte
};
	if(TABLE[TABLE[Sansa][COLS]][Stark / ( Hodor )]){
	( ( -COLS - 30 ) );
	mislead(-0.9 - -rule(x,--39,COLS));
	if(-0.55){
	Sansa -= Ygritte;
	if(-1 + 430.089 / Hodor - COLS){
	dog *= Sansa
} else {

}
} else {
	if(98 * 211){
	Hodor += -TABLE[--Stark * Jon][TABLE[-1][( Stark )]] - dog
} else {
	Sansa;
	if(( 1 ) + -ROWS){
	Sansa -= --y;
	Stark *= ROWS / ( betray(Jon) )
}
}
}
} else {

}
}
def rule(Ygritte){
	if(( -x )){
	if(( Jon )){
	if(TABLE[-79][31]){
	Arya -= Hodor
} else {
	mislead(-( ( ( protect(ROWS,ROWS,-foo(19 + -TABLE[Jon / -870.935 / ROWS][-0.95] / -TABLE[rule(( Sansa * foo(( ( mislead(100,protect(( 77 - ROWS ),x),( --76 )) ) )) / ( -1 ) ),--22,mislead(Jon)) - -0.7][ROWS],protect(TABLE[-59][-Sansa + dog]) + bar(( ( ( ROWS ) ) * -68 + -1 ),( Jon ),Ygritte - -COLS + y),---97)) ) / x ) ),-protect(foo(Hodor * Arya)) / -TABLE[-0.6][Stark] / -60 / ROWS * betray(destroy(foo(( betray(( betray(COLS - COLS) ),rule(mislead(Stark,betray(foo(x,foo(( ( 44 ) ))))))) ),rule(TABLE[( -( ROWS ) )][1] * ( 41 ),( -51 ),protect(( 0.89 ))) / -Jon)),-TABLE[mislead()][TABLE[bar()][( Stark / -43 ) / TABLE[destroy(Jon,1)][destroy(-Stark,y,( Ygritte ))]]],ROWS))
}
};
	Jon += ( foo(COLS) );
	if(--0.17){
	if(-( Hodor )){
	COLS + Stark - COLS / -0.64;
	if(COLS){
	COLS
};
	--Arya - ( protect(TABLE[TABLE[Ygritte][-0.74 / mislead()]][COLS - -( protect(Jon,dog - betray(x,ROWS)) ) * betray(Sansa * Sansa)]) )
}
}
} else {
	if(bar()){
	if(protect(-87)){
	Sansa *= rule(TABLE[bar(( -51 ),protect(( ( rule(( protect(( ( Arya * ROWS + 1 / -destroy(Ygritte,bar(-1),-dog) - Stark * ( ROWS ) + y - TABLE[( ( destroy() ) )][( rule() )] / -ROWS + COLS - protect() - -Ygritte ) ),-protect()) ),Jon) + COLS ) ),ROWS,-45))][-210.34])
};
	Stark - ROWS
} else {
	47;
	x += -TABLE[ROWS][x]
};
	-0.19;
	if(Jon){
	x += TABLE[bar(COLS,( -Jon / ( betray() ) ))][rule(TABLE[-820.859 - -810.0023 - ( ( rule(240.7,39 + betray(ROWS,COLS),-TABLE[foo(33,TABLE[( Stark )][mislead(COLS + ( COLS ) + dog,betray(ROWS * ( Hodor ) / ( rule() ) / ( y )) / COLS + ( protect() ),-destroy(-840.256,0.82))])][-6]) ) ) * COLS][-1],betray(( -34 )))] * ( ( 0.51 ) );
	Hodor -= ROWS
} else {
	Hodor += ( x );
	0.81
}
};
	( ( --0.56 ) )
}
def TABLE[1][j] {
	y -= ROWS
}
assert Arya : "One can not simply parse himself"
assert Sansa : "Nothing burns like the cold."
assert -Sansa : "Nothing burns like the cold."
var Jon = -( Hodor * -( ( --560.62 ) ) * ROWS * -COLS )
assert ( ( -y ) ) : "Nothing burns like the cold."
var y = 93
def destroy(dog){
	if(COLS){
	if(x){

} else {
	Hodor
};
	destroy(dog,-COLS);
	if(betray(-1,( -( Stark ) ))){

}
} else {
	dog *= -400.301;
	Arya -= ( ROWS - TABLE[COLS][-57] + ( COLS ) )
};
	( bar(betray(( destroy() ),y) / mislead(( -TABLE[Ygritte][-( Arya ) / 90.82 / bar(x - Stark,---66)] )) * 0.7,Ygritte,( TABLE[68][Sansa] )) );
	y /= foo(mislead() * betray(),( --1 / Stark / 71 ))
}
def TABLE[foo(0.42,-x)][j] {
	COLS;
	Sansa /= bar()
}
var x = Sansa
def TABLE[Arya][i] {
	Arya *= 1;
	0.37
}
var Hodor = bar(foo(( ( --24 ) )))
def betray(Hodor,Stark){
	-x;
	if(mislead(--38,( ( dog ) ),0.19)){
	if(--( 90.6 )){
	if(( TABLE[( -( COLS ) )][( betray() + Sansa )] * -( y ) / Stark * dog )){
	Stark;
	x -= 90 - Sansa
} else {
	-1 + COLS;
	( ( y + ( -0.92 / -0.98 ) ) )
}
} else {
	Jon += ( 0.41 * bar(mislead(Jon),( ( -Hodor + 650.0218 - ( ROWS ) ) ),-foo()) );
	y += mislead(--y + 0.23)
}
}
}
var dog = ROWS
def TABLE[-bar(1 + ( Jon )) + ( COLS )][i] {
	y += ( ---protect(Arya) * protect(destroy(0.23,Hodor),protect(1 - mislead(foo(),Sansa / --TABLE[( ( ( TABLE[-y + betray(0.43) / -Arya / -rule(ROWS,COLS,destroy()) / COLS - bar(( --62 / COLS ))][destroy()] ) ) )][-96] + -Stark),Arya)) - destroy(COLS / 44 * TABLE[ROWS][bar(( betray(Jon) ),-ROWS) + 0.04] + --0.57,( ROWS )) );
	dog *= Ygritte;
	Stark *= -0.21 + TABLE[( ROWS ) * ( --97 )][44 + -mislead(-ROWS,ROWS,destroy(ROWS,( 0.04 )) + ( --0.68 + -Jon ) + ( ( -COLS + ( betray(bar(TABLE[mislead()][-14 + -1]),protect(( -foo(rule(-0.41)) )),dog) ) ) )) / ( protect(0.48) )]
}
assert 82 : "What do we say to the Lord of Death?"
def foo(Arya,x){
	Hodor;
	Arya /= -mislead(protect(1 / TABLE[foo(( -0.31 ))][-ROWS],betray(Jon),rule(-Sansa,-ROWS / -( -570.4 + -x * -1 ),ROWS) - COLS),Sansa);
	Stark += 13
}
def bar(y,Jon,Stark){

}
var Jon = ( destroy(Sansa,Ygritte,Arya) )
def destroy(Sansa){
	Stark += betray(-110.73,--( TABLE[COLS][-Hodor * dog] ));
	dog /= ROWS - ( -68 )
}
def rule(){
	Ygritte -= dog;
	-820.88
}
def foo(Hodor,dog,y){
	x /= COLS - Stark;
	Arya *= ROWS
}
def TABLE[COLS][j] {
	if(ROWS){
	ROWS;
	if(destroy(TABLE[--x * betray(( -ROWS ),bar(( 1 )))][( -38 )],ROWS)){
	if(( Arya ) - ROWS){
	COLS;
	mislead(( ( ROWS ) ),betray(Ygritte))
}
} else {
	if(betray(mislead(-76,( Hodor )),---0.47,-destroy(TABLE[Sansa][( y )],( Jon )))){
	-0.13;
	Jon += ( ( ( -Ygritte - TABLE[-5][-( ( protect(( ( --TABLE[y][dog] ) )) ) )] ) ) );
	y /= ( y )
} else {

};
	dog -= ROWS
}
}
}
def TABLE[destroy(Arya)][k] {
	( Hodor )
}
def TABLE[-mislead(( COLS ),TABLE[11][-29],( rule() )) - -protect(( Hodor ))][j] {
	Stark += ( 810.4624 * betray() )
}
def mislead(y,dog){
	rule(( ( COLS ) ),-50.927)
}
def rule(x,Arya,Hodor){
	Arya /= ( Arya );
	dog *= -( 0.12 )
}
assert ( -1 ) : "Winter is coming"
assert ( -Sansa ) : "Winter is coming"
assert TABLE[TABLE[( dog )][ROWS] * ( Jon ) + betray(-0.48,dog)][COLS] : "What do we say to the Lord of Death?"
assert 61 : "One can not simply parse himself"
assert ( foo(-Jon) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert TABLE[x][COLS + COLS] : "Fear cuts deeper than swords."
var Stark = 0.9
def foo(Jon,x){

}
def mislead(Arya,y){
	x /= ROWS;
	COLS
}
var Sansa = Hodor
def mislead(x,Arya){
	bar();
	foo();
	if(( destroy(y,( COLS * COLS )) )){
	-0.56
} else {
	Sansa /= protect();
	if(TABLE[-1][betray(betray(ROWS),( bar(0.18,( Sansa )) ))]){
	if(( -0.46 )){

};
	x *= 30
} else {

};
	y /= Stark
}
}
var Hodor = TABLE[Ygritte / -3][TABLE[bar(( -dog ) + -ROWS,ROWS,bar() * betray(-300.29,-73) / rule(Sansa))][( 0.77 )]]
assert Stark : "Nothing burns like the cold."
var Ygritte = -( ( rule(( -1 ),COLS) ) )
var y = Sansa
var Hodor = Ygritte
assert ROWS : "What do we say to the Lord of Death?"
def TABLE[( ( Ygritte ) )][i] {
	0.93
}
def bar(y,y,Jon){
	Sansa;
	dog /= ROWS;
	y /= -( -dog * ( TABLE[( Stark )][Ygritte] + dog ) ) + y
}
var Jon = ROWS
var y = COLS
def TABLE[( --protect(COLS / ( TABLE[( -( rule(Arya,-Ygritte + foo(rule(TABLE[Sansa][protect(-Sansa,TABLE[( TABLE[( --20.3 )][( Sansa ) / dog] )][( protect(ROWS,betray(rule(COLS),-0.27) + Jon - Jon / protect() + ( 0.24 ) - --530.0624 - protect(Hodor * 0.67)) )],( betray(--0.64,210.808) ))] - ( bar(x,Hodor) ) - Jon),-0.04)) ) ) + -0.06][Sansa] )) - ( ROWS ) )][k] {
	if(Stark){
	Jon /= COLS;
	Hodor += betray(0.61);
	if(TABLE[( ( bar(x) ) )][Arya - bar(ROWS)]){
	y /= COLS;
	if(protect(( -( Jon - -0.3 ) ),0.38) + ROWS){
	if(-53){
	if(ROWS){
	if(-TABLE[( 6 )][Ygritte]){
	440.29 / ( protect(-0.04) ) + mislead(-TABLE[ROWS / x][-foo(mislead(( mislead(-destroy(COLS,-TABLE[TABLE[COLS][46]][COLS] - -0.28 / 0.85 / 790.291 - -0.89 / -0.73 + protect(940.44) / -Stark * foo(Jon)),Hodor) ),ROWS),-1 + -foo(Jon,dog) / --foo(protect(ROWS / 0.8,TABLE[Sansa][mislead(destroy(),destroy(mislead(-65 - -880 + --0.65 / betray(-Stark,-Arya - ( ROWS / -y )),mislead(Stark,18)))) / y * y],( --( 0.53 + TABLE[-betray(rule(-COLS + ( foo(rule(destroy(-( -Stark ))),( TABLE[rule(TABLE[( ( Hodor ) )][protect(-100,( mislead(rule(-Ygritte,destroy(Jon) * ROWS / Ygritte - -ROWS) - -540.995,-1) )) - TABLE[betray(destroy(49 - mislead(),destroy(betray(77,TABLE[TABLE[TABLE[-1][ROWS]][( ( -mislead() ) )]][-destroy(( ( -ROWS ) ),93 * ( -( -Stark ) - COLS + ( ( 1 ) ) * Jon + Hodor ) * y)]))),( -mislead(( Jon - foo(-destroy(x,Hodor,-0.04)) ),-TABLE[17][( Hodor )],--Ygritte + rule(64,Stark)) )) * -0.09 + Sansa][destroy()]],-270.021 + Hodor)][-TABLE[( Sansa )][--0.35]] )) * -( bar() - -ROWS - ROWS ) / 0.79 / y ),( -510.52 ) - Stark - -( ( -protect(( -Sansa )) ) ),Stark),Hodor)][mislead(( ROWS ),betray(TABLE[-0.85][ROWS],ROWS),betray())] / protect(Stark,COLS) / mislead() ) - ( COLS ) / bar(ROWS) )),COLS))],Ygritte)
};
	if(-TABLE[-( ( betray(-42,foo(1),betray(bar(COLS / Jon) - --Hodor,--bar(--890.7912 / Arya,ROWS / --TABLE[TABLE[-56][( -ROWS )]][44]) - Sansa + ( -80 ))) ) - -bar(( ( 0.53 ) ),mislead(Arya),-87) / -protect(Jon - ( ROWS ) + rule(-0.41) - -25) / ( -42 ) + ROWS )][-0.42] * betray()){
	if(protect(ROWS)){
	-0.48 * Arya;
	if(ROWS){
	dog += destroy(( ( dog ) ));
	x *= Hodor - Sansa
}
} else {
	51;
	destroy(0.62,foo(ROWS),betray(bar(( -ROWS ))))
};
	( ( betray(-Stark) ) )
}
} else {
	Sansa += -ROWS;
	if(( mislead(-x) ) * COLS){
	Sansa += -COLS
} else {
	x /= -destroy(ROWS) + protect(0.64)
};
	if(-0.43){
	Stark;
	y += -32
} else {
	if(mislead(COLS)){
	Sansa -= dog
} else {
	if(ROWS){

}
};
	COLS
}
}
}
}
} else {
	if(--42){

};
	( 1 / -( Jon ) * ( ROWS ) )
}
} else {
	dog += -( ( COLS + 610.69 / 98 ) );
	x += TABLE[TABLE[( TABLE[ROWS][57] )][COLS / COLS]][--58]
};
	if(0.83){
	if(-( --0.27 )){
	0.31;
	Sansa - protect(98 / betray(COLS))
};
	if(-Sansa){
	if(foo(48 * -0.5 + destroy(Stark * ( ( ( mislead(protect(TABLE[-COLS][-62],-41),--betray(-protect(( dog )) - ROWS)) ) - ( x ) ) ),0.02),-0.6)){
	if(-50){
	if(-990.16){

} else {

};
	Hodor += TABLE[-230.36 / 1000.118 / -0.36][COLS]
} else {
	if(---COLS){
	if(ROWS){
	y += -0.87 + --0.36
};
	if(Sansa){
	-protect(-0.17,-x,Sansa) + -87
} else {
	if(( TABLE[( ( Jon ) )][-81] )){
	Ygritte -= Hodor;
	if(betray(( foo(Arya) ) * dog + ROWS,protect(COLS,( ( rule(Hodor) ) )))){
	dog;
	Ygritte += Ygritte;
	if(COLS){
	Stark *= y / TABLE[-0.66][1];
	if(( TABLE[( -11 )][foo(-TABLE[-( COLS )][TABLE[dog][dog]],( TABLE[97][( 85 + -bar(Ygritte) )] ))] )){
	foo();
	Hodor *= COLS
};
	if(-mislead(Jon / y,( 0.98 * ( -710.58 * betray(mislead(-480.146) / ROWS * TABLE[destroy()][-1]) ) ),rule(-89 / ( 0.38 ))) * TABLE[Hodor][betray(foo(-Hodor / --( -protect(COLS / x,22) )))] + ( x ) / 76 / -92 - -bar(Stark,-( betray(( ( -protect(-( protect(-ROWS,destroy() / COLS * protect(betray(-Hodor * -1,TABLE[( COLS )][-210.243])) / foo(( -1 ),( rule() )) / 13) ),betray(-( foo(ROWS) ),( ( ( ROWS ) ) ),mislead())) ) - y ) - ( ( ROWS ) )) ))){
	( -Jon + ( ( -10 ) ) );
	if(rule(--protect(( ( ( bar() ) ) ),ROWS),-ROWS,0.84)){
	if(betray()){

}
}
} else {
	if(Stark){
	( ROWS / rule(destroy(TABLE[betray()][--( -( ( Ygritte ) ) )]),mislead(),rule(-0.73)) );
	Ygritte /= destroy()
};
	Stark
}
} else {
	TABLE[-( Jon )][COLS];
	if(destroy(protect(( TABLE[betray()][destroy(y * -( TABLE[0.28][31] )) + betray()] ),destroy(( bar(-( rule(-0.58,TABLE[rule(-0.16,bar(-0.27,--68 + betray(-x / Jon,Arya),( Sansa - ROWS - ( -y ) * 15 ) / rule(-310.13,y,84)) + ROWS)][ROWS]) ),--x / --0.04) )),protect(bar(ROWS,-Jon),-Sansa,--( ( foo(Jon) ) ) * bar()) / COLS))){
	-ROWS * rule(dog) + bar(Hodor,destroy(( Arya ),TABLE[dog][-0.26],COLS));
	Arya /= ( ROWS ) * destroy(TABLE[Hodor][Ygritte] - 1,-ROWS,-COLS);
	if(COLS){

} else {
	Arya += -29
}
} else {
	( Ygritte ) + protect(Hodor,( -protect(Sansa,0.99,6) ),-0.68)
}
}
}
} else {
	Jon *= ( 0.43 );
	Stark += destroy(Ygritte);
	-( COLS )
};
	Sansa;
	( -ROWS )
}
}
}
} else {
	y -= -0.03
};
	0.96
}
} else {
	dog -= -Stark / TABLE[x][TABLE[0.69][0.61 + ( TABLE[Stark][( -dog )] )]]
};
	TABLE[Stark][-11]
}
var Sansa = 53
var Hodor = betray(foo(-1))
def rule(Sansa,Ygritte){
	foo(-12,0.53);
	Stark /= ROWS;
	Jon -= -97
}
def TABLE[-( rule(Jon,( -protect(--foo(-( destroy(Ygritte - Ygritte / ( -320.5766 )) ),86) + -( mislead(COLS) ),TABLE[destroy(( bar(31) / ( ( -800.435 ) ) ) + ( -( -0.25 ) ),-COLS)][Arya / -( ( -COLS ) ) * ( betray(protect(-0.84,( -COLS ) / -1) - -TABLE[--0.63][bar(( 0.04 ) - -0.1) / -ROWS / -390.439],ROWS) )]) - ( destroy(dog) ) )) )][k] {
	if(-TABLE[-( bar() )][-0.55] + ( -1 )){
	( COLS + foo(Jon + COLS * -rule(rule(),Sansa),( ( -Ygritte ) )) ) - destroy(TABLE[TABLE[Sansa][0.35]][x] + TABLE[Sansa][Arya] + --mislead(-46,Hodor,mislead(1)) + ( COLS - ( destroy(-( Ygritte )) ) ) / 0.29,ROWS,--mislead(-ROWS / COLS,TABLE[-540.4][1]) / -74 / -0.41 / -( COLS )) - mislead(dog);
	if(( -570.772 + Ygritte ) - mislead(( destroy(-( COLS ),-bar(protect(),protect(bar())),-28) ) / -850.668)){
	( destroy(( Sansa ),Arya) );
	if(0.66){
	if(COLS){
	Arya *= 310.7354
} else {
	( dog );
	if(protect(Stark / dog - destroy(840.412) - -0.07 / bar(-Hodor,-bar(y)),dog,Hodor + ( protect(Jon,mislead(TABLE[COLS][y],COLS,destroy(Sansa,-( ( protect() ) )))) )) * 25 + ( betray(betray(( ROWS ),COLS) * -76 * dog,--ROWS * COLS) - rule(rule(TABLE[TABLE[Arya * mislead(COLS) * betray(( Arya ),-0.32,TABLE[( mislead() )][TABLE[foo(bar(0.81) - mislead(-Ygritte - Ygritte) + x,bar(( Ygritte * ROWS ),TABLE[bar(( ( ( 57 ) / -1 - TABLE[dog][( COLS + COLS / ( Stark ) - Ygritte - Arya )] ) + betray(-44 + COLS - foo(Hodor,-720.2259) * TABLE[15][-67],Ygritte) ),rule(-Arya + ( Ygritte )))][Hodor / ( ( ( 1 ) ) )],Ygritte))][ROWS]] / bar(--1 + betray(dog) + ROWS,0,-TABLE[ROWS][Arya]))][( -COLS * -mislead(-TABLE[0.87][0.21 - y]) / ( ( destroy() ) ) / -1 ) - ( 0.31 )]][840.83])) )){

}
}
};
	if(--ROWS){

} else {
	bar(TABLE[bar()][-740.9]);
	---540.203 * 520.24 - ( ( rule(0.15,rule(( Sansa ))) ) );
	if(( Ygritte + Hodor )){
	--( 98 ) / rule();
	Jon /= -70.7368
} else {

}
}
} else {
	if(destroy()){
	46;
	if(-foo(ROWS + mislead(-( 1 * betray(Jon,29,-( 1 )) ) * betray(protect(mislead(--1),( --10.7 )),47) / foo() + TABLE[-Sansa][dog]),-Jon)){
	mislead(protect(betray(-TABLE[foo(Jon - --ROWS + ( ( ( Sansa ) ) ) + Hodor + ( -COLS ))][--1])))
} else {
	Jon /= COLS * Stark;
	dog *= destroy(-bar(bar(58,-COLS,360.13))) + dog
}
} else {
	-0.7 - ROWS - ROWS;
	Hodor += x
};
	if(TABLE[ROWS][( ( -1 / protect() ) )] * -rule(-( destroy(-TABLE[ROWS][protect(( Jon ),( -72 / 0.09 + Arya ) + ( 0.86 + dog ))],1) ) + COLS,( foo(ROWS,-1,TABLE[( foo(Ygritte,-15) )][Ygritte]) ),Ygritte / TABLE[--60.0719][y] + -( dog ))){
	Stark
};
	y /= Ygritte
}
}
}
def TABLE[( y )][j] {
	dog -= -6;
	( dog * 6 - y ) + ROWS
}
var Jon = Jon
var Hodor = bar(COLS - ROWS)
def TABLE[foo(mislead(( betray(x,( betray(-Sansa,bar(-76,( -0.77 * 290.38 ))) ),-dog) + -destroy(( -1 - y ),Ygritte,ROWS) ),ROWS),( 0.8 + ( ( COLS ) - ( 0.47 ) ) ),---48 - Arya)][k] {
	Arya /= x
}
def TABLE[ROWS][k] {
	if(--( Hodor / ( dog ) + 610.1814 )){
	Jon -= betray(( -y )) * -dog;
	ROWS
} else {
	COLS + destroy()
}
}
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( betray(( Stark )) )][j] {
	if(-820.72){
	y -= -76
} else {

};
	-Hodor;
	if(( rule(Jon,COLS * -( ( 0.64 ) )) )){
	y /= ROWS
} else {
	if(-bar(-83 + --63) + -( -dog )){
	Sansa /= -26;
	if(( COLS )){
	0.99;
	if(Ygritte - TABLE[-COLS][-x]){
	mislead(( Arya ),betray(dog,0.69 + -( 0.99 / ROWS * rule() ),TABLE[0.99][y]),Stark);
	if(COLS){

} else {
	x /= -1;
	if(COLS){
	Sansa -= -Hodor
}
}
} else {
	Arya /= TABLE[-0.5][Stark]
}
} else {
	if(foo()){
	-protect(ROWS);
	dog += -0.56
} else {
	Jon += rule(-( 1 ),( ROWS ))
}
};
	( ( -27 ) )
} else {
	dog /= 60
};
	dog += ROWS;
	Jon += ( ROWS / betray(( ( mislead(-ROWS,( 1 ) / ( -TABLE[Arya][TABLE[-0.77][bar(-0.41,( TABLE[-Ygritte][( COLS )] ),( --Ygritte * 0.56 + ( ( -Ygritte ) ) ))]] ),ROWS) ) ),-COLS) )
}
}
var Hodor = -Arya
def TABLE[ROWS][j] {
	if(-TABLE[-( x )][-79 / Stark]){
	x /= bar(Sansa * ( ( protect(TABLE[x][-98 + -290.87 + -5]) - ( bar(--( ( ( COLS ) ) ),-TABLE[-( -10.695 )][Jon] - Hodor) ) - x ) ),TABLE[-ROWS][Hodor])
} else {
	x
};
	Stark *= ( ROWS )
}
def TABLE[-0.03][k] {
	if(-Sansa){

} else {
	Hodor *= ( -destroy(COLS,( foo(0.65 / -( -1 ) + ( TABLE[4][28] ) * -0.92 / -TABLE[protect(Arya)][-Jon] * -( mislead() - foo(betray(Hodor,protect(17 - ( --( -y ) ),( x ))),( 0.81 )) ) - Jon,0.23) )) + 1 );
	if(Arya){
	x;
	Jon -= ( -foo(( bar(TABLE[--1][( bar(Hodor,-0.69) )]) ),betray(-protect(bar(COLS,1 + rule(ROWS),( -0.53 ))),( -Arya ),-Sansa),Ygritte) )
}
};
	dog += ( ( TABLE[COLS + mislead(-0.33)][59] / -( Sansa ) / COLS ) )
}
def destroy(Stark,Jon){
	if(-ROWS + 350.336){

};
	TABLE[( rule(-4,rule(Stark) * --destroy()) ) * -mislead(-32 - foo(-x / Stark,--55,TABLE[TABLE[-Arya][-TABLE[rule(-0.86 / ROWS)][( ( TABLE[Sansa][1] * --Hodor ) )]]][( Arya )]),foo()) + -18][---1]
}
assert rule() * ( ( ( ( COLS ) * foo(( ROWS ),COLS,( ( foo(( TABLE[-1][0.84] ) / Sansa) ) )) ) + mislead(( ( 95 ) )) + -0.33 ) ) : "What do we say to the Lord of Death?"
def mislead(Ygritte,Jon){
	COLS;
	if(rule(Sansa / Hodor) + ( 1 ) + Stark){
	Ygritte /= -mislead(( Hodor ) + 96,0.61,-42)
} else {

}
}
def destroy(){

}
def betray(dog){
	Sansa /= COLS;
	( 1 )
}
def betray(Sansa,dog){
	Jon -= COLS * TABLE[--y][Hodor] - 0.63
}
assert Arya : "What do we say to the Lord of Death?"
def TABLE[y][j] {
	y
}
var Arya = Sansa * Hodor - y * Hodor
var dog = rule(89 + Arya)
var Jon = ( protect(bar(190.964,destroy(-COLS * 520.5 - TABLE[84][-0.71],Hodor,-0.4)) * -78,TABLE[Hodor][( -85 )]) )
def bar(Ygritte){
	protect(ROWS - ( TABLE[ROWS][( foo(bar(Arya,( Arya ),( -50.69 )),Arya,protect(Arya)) )] ));
	--( -0.01 * foo(destroy(Hodor * -87,rule(-betray(Arya) / ---54 / Jon,0.56,y / x)),y,x) - rule(0.63 - ( 40 ),COLS) - ( Jon ) );
	if(( -1 )){
	Sansa *= ( ( Hodor ) );
	if(-bar(protect(TABLE[destroy(( dog ),240.8,protect(Hodor)) + destroy(1) * 90 - ( 0.94 ) * ( -0.21 ) - mislead(mislead(( Arya ),-Hodor / Arya + ( -Hodor ),bar()),( rule() ),destroy(TABLE[ROWS][COLS],Jon))][0.8 + TABLE[Sansa * foo()][-ROWS]]),ROWS - Hodor)){
	( mislead() );
	if(ROWS){
	-Arya;
	--Arya
}
} else {

};
	if(ROWS){
	if(( ---85 )){
	Jon *= Jon
} else {
	if(( Arya )){
	x /= y - rule();
	protect();
	Arya /= 0.37 + 750.65
}
}
} else {
	if(-betray(protect(( Jon ),690) / ( ( Stark ) ),foo()) * TABLE[-( 1 ) - TABLE[0.05][betray(protect(),( -bar(ROWS) ),--520.9455)]][( Hodor )] * ( Hodor ) + -COLS / ( Hodor - ( protect(--0.78,-13,( -1 ) - -68) ) * COLS )){
	if(0.1){
	y + ( ( rule(x) ) );
	foo(-Stark,mislead(TABLE[x][ROWS]) * ( foo() ));
	--Arya
}
} else {
	if(0.2){
	if(ROWS){

};
	if(-410.633){

} else {
	if(( Stark - rule(( -68 )) - rule() + 58 + -Jon + ROWS )){
	Sansa;
	Ygritte /= ROWS
} else {
	Sansa += ( ( 1 / Arya ) );
	Stark /= protect(-( -1 ))
}
}
} else {
	protect(( -1 ),Jon)
};
	Arya += bar(( ( destroy(ROWS,mislead()) ) )) * Hodor + destroy(-ROWS,Arya);
	--COLS
};
	if(( dog - bar(-ROWS,TABLE[( Sansa )][-1]) ) / ( ROWS )){
	if(-ROWS * protect(COLS)){
	if(betray(protect(-rule(COLS,-TABLE[( dog )][0.64],ROWS)),Sansa)){
	if(TABLE[( 1 )][Hodor]){
	Jon -= -Hodor;
	-COLS - -40
} else {
	-1;
	if(( -TABLE[COLS][y] )){
	if(1){
	-70;
	destroy(1)
}
} else {
	foo(Arya,y,Jon)
}
};
	if(-0.37){
	mislead(0.63);
	-1 * COLS;
	ROWS
};
	if(ROWS){

}
};
	Sansa;
	Jon /= destroy(0.27,ROWS)
};
	dog -= 220.67
} else {
	dog /= ( 590.849 );
	Stark *= COLS
}
}
}
}
def destroy(Hodor,Sansa){
	if(540.4){
	if(-0.45){
	if(( Sansa )){
	x += TABLE[ROWS][---0.2];
	dog += ( COLS );
	Hodor
} else {

}
} else {
	if(-0.45){
	Ygritte /= bar(-Jon,foo(( TABLE[Arya][110.056] )) + Hodor);
	Ygritte -= 0.08 * Jon
};
	if(Arya){
	dog += 31;
	if(bar(28,-Jon)){
	Stark *= -Sansa;
	dog
}
}
};
	if(( Stark )){
	if(protect()){
	protect(Stark,foo(-COLS,Ygritte,rule()))
}
} else {

}
} else {
	0.44
}
}
def TABLE[( -660.1307 ) - 530.039 / -0.91 + -rule(TABLE[--95][COLS]) * ( TABLE[( mislead(0.03,protect(1) * ROWS,( x )) ) + Sansa][( COLS )] ) + Hodor][k] {
	y += ROWS
}
assert ( betray(( mislead() )) ) : "Winter is coming"
var Jon = ROWS
var Sansa = Ygritte
def TABLE[( foo(ROWS * betray(-27,Arya)) )][j] {

}
def bar(Arya){
	if(dog){
	Ygritte *= protect(-0.96)
}
}
def TABLE[( 1 )][k] {
	if(ROWS / Ygritte){
	if(( destroy(COLS) ) - x){
	Sansa += -COLS
};
	( mislead(Ygritte) );
	Sansa += rule(-51,-ROWS * 0.81)
} else {
	if(( Sansa ) + TABLE[---11][100.551]){
	if(-( ( Jon ) )){
	if(( foo(-98,1,( TABLE[ROWS][betray()] )) )){

} else {
	Sansa *= -86
};
	( -0.49 ) / bar(TABLE[( Hodor ) / -84][( ( 0.18 ) )])
}
} else {
	ROWS
};
	0.16
}
}
def TABLE[( ROWS )][j] {
	Hodor += x;
	if(( TABLE[( bar(rule(( ( betray() ) ),Stark,-betray() * -26)) )][Arya] )){
	Hodor;
	ROWS - 42 / ROWS + mislead()
}
}
var Jon = mislead(-Ygritte / 71,( Jon ))
var Stark = ROWS / TABLE[--0.25][1] / mislead(( -bar(ROWS,-destroy() + destroy(rule(( -72 ),( destroy(---1) )))) ),-30.9)
var Ygritte = foo(mislead(ROWS))
def TABLE[900.985][k] {

}
assert foo(bar(Hodor,( 0.16 ),-1)) : "Winter is coming"
def TABLE[-TABLE[foo(COLS)][-86]][k] {
	x;
	if(bar(foo() * ( --670.26 ) + -( -1 - Stark - rule(foo(betray())) ))){
	if(-Sansa){
	if(63){
	if(rule(y)){
	if(COLS){
	Arya += ROWS
}
} else {
	if(200.909){

} else {
	if(Stark){
	y -= ( destroy(TABLE[betray(-ROWS - 0.88 - -betray(COLS),720.05)][foo(Ygritte,dog)]) ) - rule(Ygritte);
	Ygritte += -( y )
} else {
	Jon -= --y
};
	if(-0.42){
	y -= x;
	if(Arya){
	if(( betray(Ygritte) )){
	Jon -= ( TABLE[ROWS / COLS][dog] )
} else {
	if(100){
	betray(( Jon ),Arya);
	1
} else {
	if(betray(( COLS ),foo(( -21 * -( y ) ) / 95 / ( -ROWS ) * protect(protect(-59,mislead()),ROWS,-COLS) - COLS) / protect(),-1)){

} else {
	ROWS + -8;
	Ygritte *= -COLS * 46
};
	if(ROWS){
	( ( -1 ) );
	if(800.79){
	Hodor;
	destroy(( COLS ),-1 * Jon)
};
	y += -Hodor
} else {
	COLS - protect(betray(-0.02))
}
}
}
}
}
}
};
	if(betray(--COLS) + TABLE[Stark][TABLE[1][Stark] + TABLE[--( --720.5 )][ROWS]]){
	---Jon * foo(-1,( foo(x,7) ));
	0.46 * -( ( y ) );
	if(-0.29){
	if(Stark){
	if(-COLS + -230.7174){

}
} else {
	if(81 + -0.39){
	dog + y + ( ROWS )
};
	if(Sansa){

};
	if(Ygritte - -bar(-Arya / destroy(72,x) * destroy(-mislead(0.65 + dog - ( -1 ) - protect(( ( ROWS ) ),Sansa),22),y))){
	x;
	Hodor /= -9
}
};
	-0.04
} else {

}
}
} else {
	Stark *= 0.1 / 0.53 / ( -1 )
};
	Ygritte *= bar(x,y,COLS);
	if(( ( ROWS ) ) + Ygritte){
	Arya *= 53;
	x += ( y )
} else {
	if(( ( destroy(-COLS + x) ) )){
	if(TABLE[( Arya )][--( bar() ) + ( ( mislead(-40) ) ) - 0.48 + 73]){
	x *= -mislead() + 430.189;
	if(Hodor){
	if(( foo() )){

};
	betray(rule(),-( ( rule(-0.37) ) ))
}
};
	y *= Hodor
} else {
	ROWS - 0.52
}
}
} else {

};
	if(-0.79){
	if(-720.53){
	Hodor
}
} else {
	x += destroy(( 1 ));
	x *= -33
}
} else {
	if(-790.768 - -1){

} else {
	Sansa += Sansa / COLS;
	if(Ygritte){
	if(COLS){
	Jon -= -ROWS / -0.7;
	Jon
} else {
	-bar(-130.187,( ( Sansa ) )) * Arya
}
} else {
	if(COLS){
	TABLE[( Arya ) - ( destroy(bar(-0.62,COLS)) ) + Stark + protect() - bar(COLS,x)][y]
};
	Stark /= Hodor - ( ( -Hodor ) )
}
}
}
}
var Arya = COLS
def destroy(Hodor,Arya){
	Jon += COLS;
	Stark /= -0.69;
	if(( -0.21 )){
	if(COLS){
	if(-COLS - -Stark + Arya * -860.023){
	( -TABLE[ROWS][COLS] ) - --COLS
} else {

}
} else {
	if(0.42){
	bar(ROWS,( Arya ));
	Sansa -= TABLE[-58][----33];
	Arya *= Sansa
}
}
} else {
	( Sansa )
}
}
assert ( Arya ) : "Winter is coming"
def destroy(){
	Hodor += ROWS;
	Sansa *= mislead() / ( ( ( mislead() * TABLE[-2][( x )] ) ) );
	ROWS
}
def destroy(Hodor,x){
	COLS;
	Hodor += protect(bar())
}
var x = -340.05
var Arya = ( protect(( ( Stark ) ),Ygritte,TABLE[( Hodor + x )][bar(-Arya)]) )
def bar(Arya){
	if(-betray(ROWS)){
	Stark;
	dog -= -0.88
} else {

};
	Stark -= --730.7
}
def TABLE[( 1 )][i] {
	if(-betray(rule(--ROWS) * 0.71 / -COLS + ( COLS ))){
	( 93 * ( ( ROWS ) ) );
	Stark /= destroy(rule(-ROWS),COLS);
	x
}
}
assert ---31 * y : "Nothing burns like the cold."
assert ( -bar(67) ) : "Winter is coming"
var x = destroy(--0.34 / ( ( betray(destroy(),-1 - betray(Arya,-26 - ROWS * ( ( ( ( ( -1 ) ) ) ) ))) ) ),( ( Sansa / -( ( Jon ) ) - ROWS ) ))
def destroy(x){
	if(mislead(14)){
	Ygritte *= Ygritte
};
	Arya += betray(-0.97);
	if(Ygritte){
	x *= -TABLE[-COLS][Hodor] / ( foo(( COLS ),( -( ( Ygritte * -TABLE[--mislead()][-( ( ( ( COLS ) ) ) + x / ( ( rule(x) + -( ( -50 + -0.64 ) ) * ( betray(Sansa,580.1 - ( COLS )) ) / -Hodor * COLS / ( ( COLS ) + Ygritte ) ) - -1 + TABLE[y][-93 / Hodor] ) )] * COLS / -rule(-( dog + foo(-destroy(rule(-( -0.78 ) * betray(-Jon / ROWS + bar(x,0.77),-66)),( foo(( bar(TABLE[--1 / TABLE[-rule()][-1]][-( ( 190.5 ) )],dog) )) * protect(-ROWS / -betray(COLS - TABLE[-destroy(-92)][( Jon )],bar(( 44 ))) / x,Stark) )),bar(TABLE[ROWS][COLS],mislead(-740.7,55 / ( Hodor * --0.96 * -x ) / 0.49),96),destroy(-protect(( Hodor ),( TABLE[0.92][-( ( ( -0.41 / destroy() - -betray(( Ygritte ) * Hodor) ) ) ) * ROWS * -64] )))) )) ) ) )) )
} else {
	x *= Hodor
}
}
var dog = mislead(( -dog ))
var dog = -12
def rule(){
	Jon += -( -( --Sansa ) ) + 0.47;
	Stark *= ROWS;
	9
}
def TABLE[protect(-1 - 0.19)][k] {
	7 * Stark
}
def bar(Hodor){
	if(-Jon){
	Arya
}
}
def TABLE[( protect(Arya) )][k] {

}
def TABLE[1][k] {

}
assert x : "Fear cuts deeper than swords."
assert 4 : "Winter is coming"
def mislead(y,Arya){
	770.04;
	Arya += Ygritte
}
assert TABLE[Sansa][betray(-( ( ( COLS ) ) - COLS ),-mislead(Ygritte))] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -36 : "What do we say to the Lord of Death?"
def destroy(){
	if(-0.6){

} else {

}
}
assert -13 : "One can not simply parse himself"
assert mislead(-0.27) : "One can not simply parse himself"
var Stark = 1
def TABLE[bar()][k] {
	-94
}
def protect(Ygritte,y){
	bar(ROWS,protect(ROWS,( -46 ) + -( betray(77) / 1 ) / destroy(890.3669,( ( dog ) ))),61) / Sansa;
	if(Jon){
	if(-1){
	if(bar()){
	Stark /= Sansa * Ygritte
} else {
	if(TABLE[59][COLS]){
	if(( ( rule(TABLE[-Ygritte][Jon],foo(-( Ygritte ) * COLS) * ROWS) ) )){

} else {
	Stark /= -COLS - ( rule(26,x) ) - mislead(( Stark ));
	x -= COLS;
	if(0.75){
	-betray(-mislead(),rule())
}
};
	if(1){
	-COLS
}
} else {
	Hodor -= bar(bar(bar(Sansa,ROWS,TABLE[protect(-COLS,31)][-Ygritte * COLS]),0.37),Ygritte,Hodor);
	if(ROWS){

} else {
	Sansa;
	Arya -= COLS;
	if(x){
	dog *= ROWS;
	y *= rule(-430.68);
	TABLE[mislead(-1 - 0.61,foo(ROWS,-380.874,( COLS )))][1]
} else {
	foo(-Hodor - -5,destroy());
	if(-( ( rule(TABLE[( --( ( foo(ROWS,( TABLE[-71][protect(0.54 / -670.2)] ) - ROWS) + Ygritte ) ) )][( -COLS )],--bar(COLS - x,bar(Stark),protect(rule(( -1 ),( foo() ),-430.7),-rule(y,-TABLE[-1 / --mislead()][COLS] - 0.84)) * TABLE[COLS][( --destroy(-( -0.75 )) - --Arya )]),TABLE[( rule(ROWS,--0.54) )][-Jon]) ) )){

} else {
	rule(TABLE[--( ( COLS ) ) / -( 0.68 )][protect()],-840.6,dog);
	if(COLS){
	ROWS - -0.86
}
}
}
}
}
};
	if(foo()){
	if(y / -0.19 / -y / -y){
	Ygritte *= y - betray(betray(dog,foo(TABLE[Hodor][( TABLE[-60][dog] / -TABLE[1 + -( -1 ) * Stark + mislead(Jon) + 0.08][0.27] )])));
	Stark
} else {
	-0.41;
	dog -= -70;
	if(bar(-ROWS * y)){
	x;
	-destroy();
	if(Jon){
	64;
	Jon -= ROWS;
	Arya /= -0.07
} else {
	Arya -= ( ---52 * betray(-bar(foo(0.51 - rule(betray(( Sansa ),Jon),( rule() ))),-1)) / 1 / ( ( 77 ) ) - TABLE[( -930.25 )][ROWS] )
}
}
};
	if(( COLS )){
	Hodor *= -foo(( destroy(-1) / 0.03 ))
} else {
	if(( -190.465 )){
	if(TABLE[92][-( destroy(11,x) )] + Hodor){
	y += ( bar(Hodor,330.69,COLS) )
} else {
	if(-0.41){
	COLS
}
}
}
};
	y /= betray(ROWS,-( TABLE[( COLS ) + -y][89] ))
} else {
	Ygritte += bar(( -1 ))
}
} else {
	Sansa /= 1
};
	--0.72 + Hodor + 1000.2 * TABLE[TABLE[TABLE[( ROWS * COLS )][TABLE[COLS][( y )]]][COLS]][-Stark]
} else {
	( ( --ROWS ) ) * COLS
};
	if(-( ( -mislead(-0.06) - COLS ) ) * rule(-( --0.57 ),COLS)){
	TABLE[Hodor][ROWS];
	Stark /= 31;
	--1
} else {
	Stark
}
}
var Sansa = Arya
assert Jon : "Winter is coming"
var Stark = -0.99
var Jon = 0.31
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(Jon,Hodor){
	x += x;
	if(rule(( --TABLE[protect(Ygritte)][( ( ( -15 ) ) ) - dog + foo() * -destroy()] * dog ))){
	-0.96;
	rule(-dog)
} else {
	Sansa /= Ygritte;
	if(( foo(-0.75 - Ygritte) + --protect() / COLS )){

} else {
	Ygritte -= Stark;
	if(0.16){
	if(foo()){

} else {

};
	-ROWS
};
	mislead()
}
}
}
assert Arya : "Nothing burns like the cold."
def TABLE[--( TABLE[COLS][-520.53] )][k] {
	if(1 - COLS - Jon){
	Jon += -( bar(-destroy(( 0.75 ) / y,destroy(( TABLE[-destroy(( ( -bar(bar(--30 * -ROWS / Ygritte + COLS,COLS,1),-( mislead(( 0.01 ),-( betray(foo(betray(0.84) + 93,( --0.82 )),foo(-1,bar(-270.303,-y * ( -640.146 ),TABLE[( -TABLE[--( -22 )][-rule(0.14,COLS) - -protect(0.12,-72) + x + betray(rule(( 53 / COLS ),( x )) * ROWS,1) * protect(( Jon ),bar(bar(dog,-rule())))] / --64 * Stark - Jon * Arya + -ROWS )][-0.18])) / -0.41 * COLS * ROWS) )) )) ) ),-60)][( ( dog ) )] )),betray())) );
	if(Hodor * bar(-dog + ( ( TABLE[Arya][foo(( ( -TABLE[Ygritte / y][rule(COLS + Ygritte)] * x ) ),COLS / Sansa)] ) ),-( ( bar(( y )) ) + ( -6 / ( 1 ) ) ))){
	-COLS
};
	-TABLE[destroy(75)][-95]
};
	( -ROWS / Hodor );
	Ygritte *= foo(-0.45,COLS,( betray(( ROWS )) ))
}
def mislead(dog){
	y /= 1;
	ROWS
}
var Sansa = protect(--( ( ( foo(-( Ygritte ),---COLS / y,-TABLE[COLS][-6 / Hodor + ( Arya )] * -Hodor - foo()) ) ) ) + --betray(ROWS),----11,--0.82)
var Arya = dog
var Stark = COLS
def protect(x){
	Jon * --880.08
}
def foo(Stark,Arya){
	TABLE[TABLE[--( --0.42 ) - ( TABLE[-0.85][rule(x,-rule(-1,ROWS))] ) - -y][--1]][-90];
	Hodor *= destroy(680.08 - -6 - ( TABLE[-bar(foo(TABLE[( dog )][( Arya )],Hodor),-0.41 - bar(-betray(),-0.24)) * -rule() - foo(ROWS + ( -0 ),COLS,0.38) - -Ygritte][dog - -( betray(-COLS) )] + mislead(destroy(COLS,-Stark)) ) / -0.27 + 38)
}
def TABLE[COLS][i] {
	-rule(---( x ),protect(( -0.32 ),betray(-COLS,-rule(-mislead(( 1 ))),x),COLS));
	ROWS;
	if(Arya){
	y *= Arya;
	foo(COLS,COLS) / Hodor / Jon;
	if(mislead(ROWS)){

} else {
	ROWS
}
}
}
def rule(Ygritte,y,Jon){
	if(-26){
	Hodor /= foo(foo(ROWS,( -y * COLS - 0.88 )),0.32,-1);
	if(( Sansa ) - -1){
	foo();
	if(( --0.03 )){
	destroy(34)
} else {
	if(---53){
	if(21 - betray(mislead())){
	-( y );
	Sansa
};
	COLS
} else {
	-7;
	Jon
}
}
} else {
	if(-mislead(( -1 ) * ( -Hodor ),-( mislead(-10,TABLE[-0.81 / -betray(-ROWS / ( ( -960.0087 ) ) * protect(-0.81)) * ( ( Sansa ) / ( -TABLE[Stark][mislead(61,-0.91)] + ( ( --( betray() / TABLE[mislead(( bar(-0.66,ROWS - Stark,-COLS) / protect(( bar(-490.32,0.77,ROWS) )) ),0.9,-( -0.53 ))][( rule() )] ) / --0.35 ) ) + protect() ) )][ROWS]) ))){

};
	Hodor /= --x + -Arya / -Stark;
	if(( -20 )){
	if(0.13 * -bar()){
	if(bar(0.7,x)){
	x;
	Sansa /= TABLE[-ROWS * COLS][( TABLE[( protect(( ROWS ) + ( y ),COLS,( Arya )) )][Hodor] )]
};
	Arya *= 41
} else {

};
	if(-Ygritte / -Arya){

}
} else {
	-0.33
}
}
} else {
	if(mislead(Arya,--0.66,destroy(COLS))){
	if(-rule()){
	if(ROWS){
	if(-TABLE[1][-ROWS] / ( -COLS + betray(840.32) )){
	if(mislead(-TABLE[protect(( ---( mislead(-21) ) ))][( COLS ) + --22 * -0.49 * ( -15 )],( ROWS ))){

}
} else {
	1
}
};
	( -( ROWS ) )
} else {
	dog -= mislead(destroy(ROWS) - foo(-440.8,( -0.13 ),COLS),( Stark - -0.86 - ( -88 ) - Hodor ) * TABLE[-foo(COLS,dog) + 0.6][( TABLE[bar(0.2 + y,( 0.15 ))][Stark] )] / betray());
	bar(y,mislead(56 / --ROWS),( Sansa )) / COLS;
	betray(( Ygritte ),-TABLE[( -70 )][betray()]) + COLS
};
	Stark *= -protect(ROWS - -ROWS,x);
	foo(destroy(COLS + 74 / COLS,-( -mislead(-y) ),-0.81),ROWS)
};
	y *= y
};
	ROWS;
	TABLE[TABLE[protect()][ROWS]][bar(Ygritte)]
}
def TABLE[y][k] {

}
var Stark = dog
def TABLE[( Ygritte )][j] {

}
def rule(){
	( Jon - ( mislead(betray(( x )),y) ) * -TABLE[( Arya ) / x][TABLE[-foo(foo(-( bar(foo()) )) + Hodor,-betray() + -26 - 0.91 + 3 + bar(-COLS)) / y][-0.88 + ROWS]] / -360.63 - Stark );
	dog -= 0.43
}
def TABLE[Ygritte][i] {
	dog -= ( Sansa / TABLE[( y ) * ( ( -100.4939 ) )][betray(810.44)] );
	if(COLS){

}
}
var Ygritte = -COLS
assert rule(100) : "One can not simply parse himself"
assert -1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = protect(protect(),ROWS,dog)
var y = ( 92 - rule(Ygritte,-destroy(bar(-600.35),0.83)) )
def TABLE[Hodor][k] {
	bar(-94,COLS - ( ( -ROWS ) ),TABLE[Stark][ROWS]);
	x * x
}
var Arya = Ygritte
def protect(Hodor,Hodor){
	if(dog){
	if(( mislead(bar(-TABLE[26][ROWS],-( -destroy(mislead(),Ygritte) )),( -( destroy(1,-450.59) ) )) - -( ( x ) ) )){
	TABLE[destroy(-ROWS,-( betray(rule(-93 * 29,foo(bar(75,Ygritte,Hodor),TABLE[( TABLE[( ( Jon ) )][-COLS / -Hodor * -Sansa] )][y],77)),Sansa,-mislead()) ) - -310.955 + --( -730.5 ))][Arya];
	Ygritte /= ( ROWS )
} else {
	if(-1){
	Jon /= 0.61;
	Hodor -= 1
} else {

};
	( Stark )
};
	TABLE[0.34][dog]
} else {
	y -= -TABLE[-0.68][-betray(protect(TABLE[bar(ROWS,-Stark)][-( ( COLS ) )]))];
	foo(ROWS,bar(( Jon * rule(940.563 - -Arya,protect(( 660.9256 ),-COLS,Arya),Jon) ),-0.84));
	Arya += ROWS
};
	protect(( -Stark ),COLS);
	Jon
}
def TABLE[y][i] {
	y *= --49
}
assert ROWS - --( ( bar(0.27,bar(( -( 80.91 ) - --0.7 - -( ( -rule(y,-destroy(TABLE[betray(( 0.15 ))][bar(( Hodor ))],ROWS) - --x / COLS) / 82 ) ) ) - mislead(( 1 ),470.6211))) ) ) - ROWS + ROWS : "What do we say to the Lord of Death?"
def destroy(x){
	y += ( TABLE[-TABLE[-50][-destroy(Stark * bar(-0.72))]][betray(rule(-destroy()),COLS)] + 0.54 / dog )
}
var Arya = betray(10 / rule(-20.5 - -0.02 / -foo(Arya / COLS + Stark + -ROWS)) * y * x,-800.7 - COLS,x + -1)
def TABLE[-480.97][i] {

}
assert COLS : "Winter is coming"
def TABLE[( ( destroy(y,( 1 ),betray(Arya)) ) * -( bar(( betray(-0.01 * Ygritte * -( ( TABLE[dog][0.4] ) ) + ROWS + x) ),rule(( TABLE[-COLS][-46] ),betray(ROWS)),y) ) / COLS )][j] {
	if(COLS / ( 1 + ( protect(ROWS) ) ) / bar(--TABLE[COLS][-Stark] - Hodor,Hodor)){
	Jon -= TABLE[-1][( bar(( ( -( -1 ) ) )) )] + Stark
}
}
assert Stark : "Winter is coming"
assert betray(Hodor) : "Nothing burns like the cold."
assert rule(Stark) : "Fear cuts deeper than swords."
def TABLE[-790.449][k] {
	-( ( Hodor ) );
	Ygritte -= 0.71
}
def rule(x,x){
	if(TABLE[-ROWS][Stark]){
	-39;
	-( TABLE[-destroy()][Stark] ) - mislead(COLS)
};
	COLS / TABLE[x * mislead(690.6)][protect(dog,0.93)];
	-81
}
assert --mislead(( 1 ) + 1 * bar(( 0.3 )) + -980.73 / TABLE[protect(( 0.01 / ---ROWS + ( dog ) ))][TABLE[( -x ) / Jon][y]] / ROWS) : "Nothing burns like the cold."
var Hodor = --ROWS - dog
def TABLE[0.16][j] {
	if(( COLS ) - -1){
	--( Ygritte );
	Stark -= ( bar(( bar() )) )
}
}
def TABLE[--TABLE[-0.57][TABLE[Ygritte][x] * ROWS]][i] {
	COLS + 1;
	TABLE[-( ( ( 0.77 ) ) )][TABLE[( foo(bar(dog),bar(ROWS)) )][dog]]
}
assert -( protect(( x )) ) * ROWS : "What do we say to the Lord of Death?"
def bar(Sansa){
	if(-1){
	if(98 / Stark){
	--180.55 + -17;
	TABLE[0.05][Arya]
};
	if(protect() * ( 1 )){
	if(Jon + 34 / foo(Jon,rule(-x),-Arya)){
	mislead(-( foo(87,43) ),foo(Sansa,TABLE[mislead()][TABLE[TABLE[--0.86][dog]][-( Hodor )]]))
}
} else {
	----1
};
	Arya -= ( 0.05 ) + ( ( TABLE[rule()][bar(-( x ))] ) )
} else {

}
}
def bar(dog){
	Hodor
}
def protect(Ygritte,y,Ygritte){
	-82
}
var Sansa = ROWS
assert ( protect(( Stark ),COLS,( ( ( TABLE[( bar() )][-TABLE[TABLE[( Stark + dog )][80]][Arya]] ) ) - x )) ) : "What do we say to the Lord of Death?"
var Stark = -0.07
var Ygritte = ( x )
var dog = TABLE[-x][ROWS] * COLS / TABLE[-34][betray(destroy(COLS,( ( ( ROWS ) + destroy() ) )),protect(Sansa),-16)] / 960.86 / 720.6 / ( ROWS )
var x = Ygritte
def rule(Jon,x){

}
assert -( TABLE[-0.63][( -ROWS + COLS )] ) + ROWS : "One can not simply parse himself"
assert -380.943 : "One can not simply parse himself"
assert Hodor : "Fear cuts deeper than swords."
assert destroy(bar(-Jon,--0.82,Sansa),( ( Arya ) / ROWS - -bar(rule(ROWS,TABLE[-1][( -68 )] * destroy(TABLE[40][ROWS - -( betray(TABLE[-ROWS / mislead(1,TABLE[TABLE[TABLE[Sansa][Sansa]][-41 - -( TABLE[-mislead(COLS,y,Stark) + 57][protect(84)] ) + -Ygritte]][( 90 )])][foo(Hodor,TABLE[Arya][rule(( protect(( -destroy(ROWS,ROWS,x) ),( Stark ),TABLE[( -betray(( TABLE[Sansa][COLS] )) )][( ROWS )]) ),0.64) / COLS])]) ) - -TABLE[--50][( ( -COLS ) - -protect() )] * ( -0.36 )],-( -77 )),destroy(-230.352,Jon))) ),( destroy(-COLS,-Ygritte) )) + ROWS : "Nothing burns like the cold."
var Arya = destroy(mislead(--COLS),( 29 ))
def protect(Arya,Stark,Stark){

}
def TABLE[Jon + 0.15][i] {

}
assert 120.6511 : "Fear cuts deeper than swords."
assert -110.1 : "One can not simply parse himself"
def destroy(Jon,Sansa,dog){
	x -= Hodor
}
var x = ( rule(Stark) )
def bar(dog,Hodor,Stark){
	Stark /= mislead(bar(TABLE[( -0.4 )][TABLE[-750.2][COLS - rule(Arya - --( ROWS - x ))]],betray(-( TABLE[( ( --x ) )][betray(0.2,--( Stark ),75)] + -TABLE[( ROWS )][COLS] ),COLS),Arya),( -( dog ) ) + ROWS,protect(-protect(-ROWS)));
	Ygritte /= Hodor;
	if(rule(Ygritte)){
	Sansa /= rule(ROWS,Sansa)
} else {

}
}
var Hodor = ( Jon ) / mislead(-destroy(ROWS,bar(ROWS,75)),ROWS,Jon * TABLE[protect(-TABLE[-rule(0.08,( ( 890.189 / TABLE[foo(-0.65 / ( Sansa )) * -ROWS][-Stark] ) ),TABLE[( 0.3 / -rule(ROWS,-Jon) )][-84] + TABLE[0.77][( x - Arya / -TABLE[( COLS )][COLS] )]) * -670.738][ROWS] / ROWS,TABLE[0.6][dog / ( COLS )])][9] / bar(-( --( COLS ) ),( -COLS ) - 1)) + ( ( y ) )
assert 24 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[----( ( bar(TABLE[-37][0.83]) ) ) / betray(bar(( Hodor )),betray(( Sansa ) - x,-71) / betray(Stark * -bar(( -ROWS ),TABLE[ROWS][-Stark],-COLS)) / TABLE[720.9122][Jon])][i] {
	Stark;
	-ROWS;
	if(betray(-6,COLS)){
	Sansa
}
}
def TABLE[25 - -0.88 * --1][k] {
	Hodor *= Sansa
}
def bar(dog,Jon,dog){
	if(dog){
	COLS;
	if(( ---COLS )){
	( x ) - foo();
	--1
}
} else {
	Stark /= Ygritte
};
	if(TABLE[mislead(Arya) / -83][COLS]){
	( 89 );
	foo()
};
	-( protect(ROWS,y,Jon) )
}
assert COLS : "Winter is coming"
assert -850.68 : "Fear cuts deeper than swords."
def TABLE[910.35][j] {
	-( 85 ) - protect(-Sansa)
}
assert ( ( TABLE[COLS / COLS][-( y ) / rule()] ) / rule(( ( COLS / destroy(COLS,( ( dog ) ) - Hodor) ) * rule(Jon,Jon) ),y) / -1 ) : "What do we say to the Lord of Death?"
assert -96 : "One can not simply parse himself"
assert 45 : "Fear cuts deeper than swords."
def rule(Jon){
	if(TABLE[( COLS )][21 + -TABLE[( -foo(bar(--foo(protect(ROWS)),mislead(( protect(foo(( TABLE[betray(x)][rule(TABLE[-y][-650.44] + TABLE[-0.39 + --0.27][mislead(-( COLS ))],protect(----( destroy(Jon,( ( -940.704 ) ),( -1 )) ),57 - 0.83 / -770.423,ROWS)) * 54] ),dog),( -0.61 / -76 ),( TABLE[-1][COLS] )) )))) )][-COLS * ( ROWS )] / Jon + --23]){
	if(( Hodor )){

};
	x -= -Hodor
} else {
	if(97){
	if(-COLS){
	-63 * betray(Ygritte + ( 0.67 ) / destroy(rule(y,( Jon ),destroy()),Arya - --dog / 0.76,ROWS) + y,ROWS)
} else {
	Sansa *= ( ( COLS ) / --x * Ygritte )
};
	( --( --bar(ROWS,-88,( -betray(COLS) )) ) + -1 );
	-destroy(-( 52 ))
};
	x;
	Ygritte -= ROWS
};
	if(-Stark){
	---ROWS * Jon / -ROWS + protect() * bar(( -protect(ROWS) * --TABLE[x][ROWS] )) + 1 - ( bar(foo(-foo(TABLE[TABLE[( ( --Ygritte ) / destroy(ROWS,destroy() / -75) )][foo(-( -TABLE[Sansa][( ROWS )] ),-0.63)]][-99]),betray(),rule(( TABLE[-0.1][ROWS - ROWS] ),( ( ( y ) ) ))),( x )) / mislead(0.89,ROWS) ) + ( -COLS );
	Arya -= -88
} else {
	x -= COLS;
	if(COLS){
	COLS;
	TABLE[-Jon - -( -0.2 )][-TABLE[-ROWS][-0.19]]
} else {
	if(-dog + Ygritte){
	if(( foo(COLS) )){

} else {
	if(--( -0.93 + TABLE[-ROWS][( rule() )] )){
	if(( Arya )){
	if(protect(( -1 ),( ( 0.56 ) / -y ) - -destroy(ROWS,-TABLE[betray(( Arya ))][( --190.5989 )],COLS),( TABLE[( 520.638 - ( Sansa ) )][Sansa] - -( ( 99 ) ) ))){
	Arya -= betray(54);
	Ygritte *= dog
} else {
	-280.7671;
	Ygritte *= ROWS
}
} else {
	dog /= 40
};
	destroy(x,dog - Jon)
} else {

};
	if(-protect(COLS,bar(63 * 250.229 + -0.3))){
	if(y){
	COLS;
	( ROWS );
	dog
} else {
	Jon /= -Sansa / bar();
	if(betray(-Arya)){
	-TABLE[COLS][99]
} else {
	if(89){
	if(COLS){
	ROWS;
	-( -mislead(( ( betray(-80) ) ),rule(-20 + ROWS),protect(( --TABLE[24][-0.42] ) / ( ( -COLS ) ),( -rule(ROWS,--protect(1)) + ( TABLE[-1][-Jon] ) ) * mislead(ROWS,TABLE[Hodor - rule(-0.26,ROWS)][y - -dog / destroy(-rule(Jon,Sansa) * -51)]),-0.83)) ) / Jon - ( COLS );
	Sansa *= TABLE[ROWS][-45]
};
	x /= ( ROWS );
	if(Ygritte - 1){
	ROWS;
	Arya += ( rule(y,-86,dog * ROWS) );
	if(--TABLE[y][Arya]){

}
} else {
	Jon -= mislead(-y / COLS,-mislead(COLS,-780.4)) + mislead() - bar();
	Jon;
	dog += TABLE[( foo(95,-foo(destroy(( ( rule(0.71,( -1 )) ) ),510.43))) ) * Stark][Arya] + Hodor
}
}
}
};
	if(-( Jon )){

};
	bar(betray(),-bar(Jon),-1)
}
};
	Arya -= betray()
} else {
	destroy(( foo() ),-Ygritte);
	---TABLE[Hodor + -foo() * COLS][ROWS] - x + ( ROWS )
}
}
}
}
def TABLE[( ROWS )][i] {
	TABLE[-foo(( COLS ),ROWS)][Jon];
	if(0.03){
	if(dog){
	( rule(90.21,0.02) ) + ROWS
} else {
	-66
};
	x /= ( betray(Arya - ROWS,TABLE[( ( -( Arya ) ) )][Ygritte]) );
	( x )
} else {

}
}
var Ygritte = destroy(COLS,Stark,( --520.6 * x + -( -500.7369 ) ))
assert -0.59 : "What do we say to the Lord of Death?"
def TABLE[( foo(260.95) )][k] {
	if(Sansa){
	Ygritte -= ( destroy(50) );
	if(Stark){
	COLS
} else {
	Jon;
	if(( ( rule() ) )){

} else {
	( betray(rule(33,TABLE[-Arya][( ( destroy(( TABLE[--Hodor][COLS] ),0.96,dog) / protect() ) )],--0.73)) )
}
}
} else {
	Sansa /= 58
};
	Jon /= -0.95
}
var Arya = foo(bar(( -Ygritte ),betray(betray(Arya,x)),Sansa)) / rule(--0.83 * ( 11 * ROWS ))
var Stark = ( 0.13 + -12 )
def TABLE[Hodor][i] {
	if(COLS){

}
}
assert -1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(Jon,Stark,Ygritte){
	( ( --betray(betray(-65) + Ygritte,x) + TABLE[betray(mislead(COLS,COLS,( ( ( ( -0.99 ) ) ) ) - mislead(foo(150.268))),x)][-0.77] ) );
	if(Hodor){
	if(Jon){
	Ygritte /= COLS;
	if(Ygritte + 300.96){

}
} else {
	if(x){
	Sansa *= ( -betray(mislead(1),-mislead(-78 * Ygritte / --210.67,-( betray(( -1 / Hodor )) ),destroy(( --1 ) + -( Stark ))),( ROWS )) * -y + Ygritte )
};
	if(1){
	Sansa += ROWS
};
	--( ( y ) * destroy(( -betray(rule(),-68 - ( x )) )) ) - rule()
}
} else {
	if(ROWS){
	Hodor
}
}
}
assert ( ROWS ) : "Nothing burns like the cold."
def bar(Ygritte){
	if(y){

} else {

};
	( Stark )
}
var Hodor = dog
assert foo(-830.8623,15) : "What do we say to the Lord of Death?"
def protect(Sansa){

}
def TABLE[betray(84)][i] {
	if(-960.1342){
	( x );
	( ( protect(ROWS) ) )
} else {

};
	if(COLS){
	Ygritte /= 1;
	if(-63 - -0.29){

} else {
	if(0.79){
	ROWS
} else {
	if(Sansa){
	if(betray(Jon,destroy(rule()),( 88 - ( Sansa ) )) * Arya + -1 * 92){
	if(ROWS){
	COLS
}
} else {
	if(protect()){
	Hodor += COLS
};
	( ( ( ( protect(-0.02,0.35 * -COLS + COLS / destroy() * ( Ygritte )) ) ) ) ) * protect(-( 33 ),-0.35)
}
}
};
	if(Jon){
	-0.31
}
};
	if(Arya - ---0.03){

}
} else {
	-x
}
}
def rule(){

}
def TABLE[Hodor][j] {
	Sansa += destroy(( ( Ygritte ) ))
}
def TABLE[foo(protect(TABLE[Hodor][Ygritte]),protect(( dog ),foo() - destroy(ROWS,mislead(-Jon - 0.98 - Stark,--0.51)) * TABLE[( ( betray() ) )][COLS],-1))][j] {
	TABLE[x][--77 - COLS];
	--62 * ( TABLE[COLS][y] ) / destroy(( mislead(ROWS) ),-0.37)
}
def TABLE[COLS][j] {
	if(( ( ( 1 ) ) )){
	Arya /= -ROWS + foo(ROWS);
	if(( --48 )){
	rule() + Hodor;
	if(-( TABLE[520.3][( ( -0.99 ) )] ) + rule(( ( --0.98 ) * Stark ),Jon)){
	if(-79){
	protect(destroy(COLS,mislead(betray(( 55 )),betray(( ( ROWS ) ),50.69))));
	rule(( ( betray() ) ),( ( ( foo(COLS + ( y ) - ( -( -( foo() ) ) ) / -( COLS ),Hodor,-1000.08) / -650.8933 - -1 ) * 26 ) ))
} else {
	dog;
	Arya *= ( foo() )
}
}
} else {
	Stark /= TABLE[-x][-y]
}
};
	if(( 0.1 )){
	Hodor /= ROWS
};
	( ( y ) )
}
def foo(y,Jon){
	y -= TABLE[( Ygritte )][TABLE[--36][-0.56]];
	dog *= Arya;
	Arya *= -1
}
assert --21 : "What do we say to the Lord of Death?"
assert -( betray(--761,-( bar(rule(-Ygritte * ( --0.27 )),mislead(),--( -0.23 )) ),( TABLE[Ygritte][( y )] )) * COLS ) * -1 : "One can not simply parse himself"
def TABLE[ROWS][i] {
	TABLE[( 60.685 )][( ( -( ( -Hodor ) ) ) )] / -760.2443 * -1 * TABLE[mislead(--( -( ( TABLE[TABLE[--TABLE[Arya][-destroy(rule(ROWS + COLS - -rule(bar(( destroy() )) / -y,( mislead(betray(),( --46 * ROWS + -mislead(mislead(Sansa - bar(( 1 + ROWS / -92 ),betray(y,-0.97 + Arya,( 1 ))),-720.6,( foo(y) ))) ) * ( foo(TABLE[y / COLS - COLS][( betray(( ( foo() ) )) * 62 - --Arya - COLS - rule(( y )) )],( x )) ),( ---ROWS - betray(-x / foo(-0.77,Arya),-50) / -0.75 * Ygritte * ( mislead(75) ) + -0.06 * protect(destroy(1 / -( protect(foo() / ( x ),protect(0.67),Jon) ))) * bar(protect() + 0.93,ROWS) + -0.14 + --1 + Stark )) )),( 0.43 ) / --( ( destroy(-COLS,-destroy(COLS,ROWS)) ) )),dog,Sansa) / -Stark] * -( Hodor )][ROWS]][--destroy(Sansa * Jon,COLS) * -800.9] ) ) ),( -Hodor ))][TABLE[-1][mislead(( -( ( ( -74 ) ) ) ) - ( ROWS ))]] * -( protect(-10) + y + ( ( Jon ) ) * TABLE[( ROWS - -0.26 )][ROWS] + -TABLE[bar(1)][COLS] ) + 47
}
assert ( 1 ) : "What do we say to the Lord of Death?"
def TABLE[y][i] {

}
var Stark = -880.98
var Arya = Jon
assert -y : "Fear cuts deeper than swords."
var Jon = betray(( -1 ),TABLE[-( -( ( -68 ) ) + ( ( y ) ) ) - ( rule(-79,rule(-0.3,( 52 ))) )][TABLE[-y][TABLE[Jon][( ( -TABLE[Sansa][( 750.83 )] ) ) * -( Hodor )]]])
def TABLE[-TABLE[-0.81 + Sansa - y + foo(( y ),TABLE[Arya][foo(rule(dog))],-bar(ROWS - rule(( -Sansa )),( rule(-0.58,0.66) ),( ( -Sansa ) )) + COLS)][COLS * ROWS]][k] {
	-0.76 - ROWS;
	-0.83;
	ROWS
}
def TABLE[TABLE[( Ygritte * TABLE[-( y )][TABLE[Hodor / ROWS + Jon][rule(foo(( Stark ),( -1 - y ),( COLS ) * -0.87 + 87 / protect()))]] )][foo()]][k] {
	if(betray() / COLS){

}
}
def TABLE[0.44][j] {

}
def TABLE[y][k] {
	Ygritte
}
assert Hodor : "Nothing burns like the cold."
var Hodor = Stark
def TABLE[( ( destroy(COLS,mislead()) ) )][j] {
	Ygritte *= -( ( ( Hodor ) / ( y ) - ( dog ) ) )
}
def destroy(Ygritte,Arya){
	-Sansa
}
def mislead(Ygritte,Stark,Arya){
	TABLE[( -0.96 ) * protect(betray(ROWS / TABLE[bar(Ygritte,COLS)][-29] * -dog - 9))][91];
	if(0.81){
	if(y){
	ROWS;
	Stark /= ROWS;
	if(y){
	Stark -= bar()
} else {
	if(COLS){
	dog /= y
};
	if(-rule(rule(830.21,0.44)) + -ROWS){
	if(---Stark + -ROWS){
	if(-0.95){

} else {
	destroy(ROWS,ROWS);
	( rule(-protect(bar(-65,x - ( --0.77 ),COLS),Jon,0.31)) ) - Jon
}
};
	Jon -= Sansa;
	if(ROWS - ( -98 * ROWS ) - ( rule(Arya,COLS,-ROWS + rule(-ROWS,TABLE[foo(150,Sansa)][-( TABLE[rule(( dog - COLS - bar(-betray(-0.05 * -0.63,-0.63 * -Hodor / protect(COLS) * Arya,protect(ROWS,foo(-y,TABLE[-TABLE[-Hodor / ( 710.81 )][ROWS]][betray(( TABLE[Ygritte][--0.45] ))])))) / -TABLE[-x][Sansa] ))][( ( ( destroy(COLS,81 / COLS * x - TABLE[foo()][COLS]) ) / bar() ) )] )],-TABLE[-Ygritte][-0.81] + ( Arya ))) )){
	if(( ( -1 * ROWS ) )){
	mislead(-Hodor * betray(-dog / x) - ROWS - ( -9 ),protect(ROWS),Arya) + -COLS;
	if(mislead(COLS,foo(( ( -Arya ) )))){
	if(y){
	Jon
}
} else {
	if(( 1 )){
	dog -= Ygritte * rule(rule(COLS,mislead(),-1),( Sansa ),-1 - -TABLE[--700.28 - betray(mislead(Hodor,Ygritte),( 0.14 ) * -COLS * TABLE[-rule(-ROWS,-Arya)][( Sansa )],-0.27) * 0.44][-Arya / Arya]) - -destroy();
	x += Ygritte
};
	Sansa *= x;
	if(COLS){
	-410.972;
	x /= Hodor
} else {
	x /= --( Jon - ( ROWS ) )
}
}
} else {
	( ROWS + x * ( y ) )
};
	y /= ROWS / Hodor
}
} else {
	if(( COLS )){
	if(COLS){

} else {
	Arya -= betray();
	if(( dog )){
	Hodor += TABLE[x][ROWS + -17];
	Stark /= rule(betray(COLS));
	Arya += COLS
}
};
	destroy()
};
	-84
}
}
} else {
	Hodor /= -390.7306 + betray(Ygritte + COLS,-( COLS ))
};
	Arya /= -( rule(Hodor,mislead(340.22 / ROWS)) )
};
	Hodor *= COLS
}
var dog = mislead()
var Arya = 1
def destroy(x,Sansa){
	Hodor;
	if(Stark){
	Hodor /= ---250.63
} else {
	Arya *= Jon;
	( Arya )
}
}
var y = bar(( 67 ) + ( TABLE[1][( -( ( -TABLE[Hodor][( -30.599 )] ) ) / COLS ) + ( ( COLS ) )] ) * protect(),COLS)
assert betray() : "Fear cuts deeper than swords."
var dog = foo(--18,mislead(mislead(-protect(( 35 * -mislead(( 8 ) * ( ( COLS ) ) - ( ( Stark ) / ( bar(-Sansa,destroy(TABLE[-ROWS / -mislead(-1,-( ( Jon ) + Hodor ) / 1,COLS / mislead(1,-COLS) * COLS + mislead(-COLS))][( -34 )] * -rule()),-COLS) ) )) )))))
var Jon = ( ( ROWS ) ) - -0.79
var Hodor = ( ( -Jon ) )
def betray(){

}
var Ygritte = mislead(( ( -0.21 ) ),-betray(1 + ( Sansa - ( ( -foo() + -COLS ) ) * ROWS )),33)
def mislead(){
	-dog + Arya * rule(( ( ROWS ) ));
	-47;
	Sansa -= ( dog )
}
assert -COLS : "One can not simply parse himself"
def TABLE[mislead(0.24,-1)][k] {
	-16;
	Sansa += Ygritte;
	if(( -0.66 ) + COLS){
	Sansa -= ROWS
} else {
	-dog;
	if(protect(ROWS / COLS,-Hodor + Jon)){
	if(foo(-78,-12 / ( ROWS * -82 ),( ( -mislead(COLS) ) ))){
	if(-46 + ROWS){
	if(( ( Ygritte * -TABLE[--TABLE[-dog - Stark][protect(0.78)] * 1 + ROWS * Stark][Jon] ) )){
	( TABLE[1][TABLE[foo(protect(-rule(),ROWS),x)][mislead(bar(( ROWS ) / destroy(-destroy(0.24)) + COLS),protect(foo(( -( protect(-ROWS) ) - 9 + COLS / -0.47 ),-dog,bar(dog))) + TABLE[rule(rule(-betray(protect(-( -( TABLE[destroy(( -0.82 * Jon - --( ( dog + 51 ) ) ))][Stark] ) ),Ygritte),-1 * ( rule() ) * -TABLE[Jon][0.8] - -destroy()),( --0.53 )),( ( 0.54 - -( 620.8 ) * foo(Arya,Arya) ) - -TABLE[betray(6)][ROWS] ))][( ROWS )],( ( 8 ) )) / ( foo() )]] );
	if(11){
	( ROWS * TABLE[-( COLS ) * ( ( ROWS ) )][COLS] )
}
};
	Ygritte -= -90
} else {
	TABLE[( TABLE[-0.01][foo(ROWS,mislead()) * -50 - -5] )][TABLE[( rule(( Ygritte )) )][ROWS * betray(-foo(),--1,Arya) - -destroy(TABLE[( y )][destroy()],( -destroy(bar(),-betray(mislead(-( ( COLS ) ),( ROWS ),( -( Ygritte ) )),10) - Stark / COLS) + -0.55 )) * ( rule(( Stark ) + -( -1 )) )] + mislead(-370.54)];
	if(Arya){
	Arya *= -84
} else {

}
};
	0.74 / ROWS
} else {
	y *= ( -0.28 )
}
} else {
	-82
}
}
}
var Jon = 92
def TABLE[1][k] {
	if(( COLS )){
	Hodor /= ( TABLE[y][x] / protect(-bar(ROWS,-77,( x )),Stark) )
};
	if(--ROWS){
	Jon /= ( x )
}
}
var Sansa = ( ROWS )
assert TABLE[-990.57][-bar(ROWS * betray(),ROWS)] : "Nothing burns like the cold."
def bar(Hodor,Hodor){
	if(protect(COLS,( ROWS ))){
	-( protect(( betray(( bar(( ROWS )) )) )) )
};
	-betray();
	--TABLE[ROWS][mislead(rule(( -260.013 )),COLS * TABLE[Stark][-890.546],-0.71)] / rule(( TABLE[protect(bar(),y,-TABLE[-( ROWS ) * Stark][betray(TABLE[( TABLE[COLS][rule(-0.15) * -( Hodor )] )][TABLE[( ( ( bar(-( 0.45 )) ) ) ) - 0.85][( ( 59 ) )]],-530.2) + 0.59])][dog] ))
}
assert ROWS : "One can not simply parse himself"
def TABLE[x * TABLE[( -100 )][destroy(-77,-( mislead(--0.64,( -270.5417 * protect(-95,destroy(70 / -mislead(( foo(protect(x,betray(-COLS * Stark * -0.54,bar(--TABLE[-63][x],( -0.51 + 0.57 ),-50.1)),COLS)) / rule() ),mislead(bar(0.52,COLS,ROWS),( ( -10 ) )) + dog) - ( betray(protect(COLS,Jon,( ( 7 * ROWS ) )) - betray(-destroy(ROWS,( TABLE[dog + -dog][-TABLE[-1][43]] ) * COLS) + -0.93 + ROWS / foo(ROWS),ROWS),---0.63) ) / COLS * bar(-30 / ( bar(-Arya * ( Jon ) - Stark,foo(protect(( Jon / ( -bar() ) - ( 66 ) / ( x ) ))),TABLE[Arya][-0.91]) + mislead(--Arya / COLS,COLS) )),-bar(ROWS)),( Jon ) / COLS) - -TABLE[dog - y][-( rule(( rule(( bar() )) )) ) * ( TABLE[destroy(-( -0.96 - TABLE[Sansa][betray()] ) * COLS,Sansa)][betray(bar(74),-y)] )] / ( bar(-ROWS,Sansa) ) )) / Ygritte ) + Ygritte,ROWS + 0.29 * ROWS)]][k] {
	Hodor /= -( -81 ) + -rule(protect(( 70 ),-COLS + -160.205 / y),( -150.7 )) - 69
}
assert ( destroy() ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = -betray(760.436)
var dog = -( -mislead(Hodor) )
def mislead(Stark,Arya){
	if(Jon){

} else {

};
	x *= 0.9
}
assert ( 1 ) : "Winter is coming"
assert -79 : "Winter is coming"
var Arya = ( rule(-0.1) )
var Stark = COLS
def TABLE[-0.46 + ( mislead(( COLS ),TABLE[-1 * -680.67][( TABLE[-1][---1] )],TABLE[-40.4113 * dog][protect(Stark / -35)]) )][j] {
	Hodor + protect();
	Ygritte /= ( Hodor )
}
def TABLE[bar(( ROWS ),-1 / TABLE[( y )][( COLS ) / -COLS],ROWS) - ( ROWS )][k] {

}
def rule(Ygritte,x,Sansa){

}
def destroy(Ygritte,Sansa){
	if(COLS){
	x -= Hodor
}
}
assert -( --880.5 ) : "Nothing burns like the cold."
assert COLS / -1 : "Fear cuts deeper than swords."
def TABLE[( ( COLS ) )][j] {

}
assert ( -betray(foo(betray(ROWS,( -COLS )))) ) : "Fear cuts deeper than swords."
assert destroy(dog,betray(( ROWS )),( COLS )) : "One can not simply parse himself"
assert bar(-rule(rule(bar(rule() * ( 390.004 )) + COLS,protect(bar(-rule(Ygritte,15 - rule(-x),-rule()))),Arya),ROWS - bar(mislead()),Hodor),foo(COLS,-( -1 ) * TABLE[foo()][( COLS )])) : "Fear cuts deeper than swords."
def protect(Sansa,Arya){
	if(mislead(betray(TABLE[-protect(670.342,-63)][--Ygritte - protect(--dog,-mislead(( TABLE[( Hodor ) * y][Stark] ),-88))],-870.64) * TABLE[x][--( -0.51 ) / bar(Ygritte)])){
	Ygritte += COLS + ( TABLE[TABLE[destroy(-y * dog,53)][-700.465]][TABLE[( ROWS )][-43]] );
	if(destroy(mislead(ROWS),-mislead(COLS,Stark + 41))){
	Stark /= -( 1 );
	if(( ( -89 ) + x )){
	Hodor *= ( -22 );
	if(COLS){
	if(-protect(dog + dog,--rule(Hodor,Sansa,380.57) / -440.5) - 55 + ( --( protect(TABLE[foo(( TABLE[Hodor][-ROWS] ),41)][foo(-Stark,-rule(rule(Jon,-230.002),-bar(protect(COLS,Ygritte / destroy(( COLS ) + -0.11 * -660.7562,dog) + y * -TABLE[( COLS )][destroy(0.22)],( ROWS ) + COLS),TABLE[TABLE[( ---rule() )][-1 + protect(y)]][x - -Ygritte - 0.73]) * 12))] + dog - -1,ROWS) ) ) / bar() + foo(-x) + ROWS){
	( 110.3 );
	if(foo(-ROWS)){

};
	if(TABLE[-41][-Stark / 1]){
	x += dog;
	TABLE[-0.13][TABLE[-Jon][( -1 ) / protect()]]
} else {
	rule(0.83,( rule(--930.4) ))
}
} else {

};
	Stark -= -230.08
};
	TABLE[TABLE[x][Stark]][620.29]
} else {

}
} else {
	mislead(-x);
	if(-670.7242){
	Jon += -2;
	Ygritte += bar()
}
}
} else {
	Stark *= x;
	rule(destroy(bar(mislead(ROWS),( betray(-foo(TABLE[-280.502][1],y),Sansa) ))),ROWS)
};
	destroy(--64 + Sansa,y + TABLE[destroy(( COLS )) - ( 1 )][betray(protect(Jon,TABLE[18][-ROWS]))],-dog)
}
var y = rule() - ( Ygritte )
var Jon = foo(TABLE[betray(y * -1)][Ygritte],ROWS,Sansa)
assert -betray(( ROWS ),COLS,Jon) - ( ( --770.2531 ) ) - ( 0.53 ) : "Winter is coming"
def TABLE[ROWS / ROWS][j] {
	-destroy(( ( ( -COLS ) ) ));
	if(( ( ( COLS ) ) )){

}
}
def TABLE[--bar() + ( ROWS ) * Stark][i] {
	Ygritte /= Sansa;
	Arya += mislead(dog,-0.01)
}
var Stark = betray(TABLE[( destroy(Stark + --0.2,foo(destroy(( Stark ),mislead(TABLE[0.34][-Stark] / x,-bar(Sansa,COLS) - ( rule() / mislead(-0.32 - betray(Sansa,TABLE[-rule(( rule() ),foo(Hodor))][TABLE[( dog ) / ( ( -890.051 ) ) / betray(( ( ( -0.41 ) ) ))][TABLE[( -1 )][ROWS]]],-1)) ),-60.61)))) )][COLS])
def bar(Hodor,Hodor){

}
def TABLE[COLS][j] {

}
var x = ROWS
assert x : "What do we say to the Lord of Death?"
assert --( 0.02 ) : "Fear cuts deeper than swords."
var x = Stark
def betray(dog){

}
def TABLE[ROWS][i] {
	Jon /= 0.16
}
def TABLE[TABLE[betray(Hodor,bar(Hodor,ROWS + -( -79 / foo(foo(-1 / rule(-1))) ) / --foo(( Jon )) - -0.17))][-0.64]][k] {
	Jon *= ROWS;
	Jon *= 0.76
}
var Jon = mislead(-ROWS,5 * Ygritte)
def TABLE[Jon][j] {
	mislead(( mislead(ROWS,Jon) ),( protect(( Sansa ),x,Stark - -betray(( -( betray(-Hodor) ) )) + -( ROWS )) ),5)
}
def TABLE[( ( Stark ) ) - -mislead(Arya,bar(( -18 ),( -170.795 * foo(-0.32) ) / bar(-0.5) * y),ROWS)][j] {
	Sansa
}
def rule(dog,y,Hodor){
	33;
	if(( -1 )){

} else {
	Sansa /= rule(betray(( rule(mislead(ROWS * foo(( COLS )) + foo(( ( COLS ) ))),1) ),Ygritte),-1 * ROWS);
	rule(betray() / 0.23,1)
};
	dog /= ( 1 ) / ( ( Jon ) )
}
var Arya = Arya
var Ygritte = Stark
var Ygritte = COLS
def destroy(Hodor,Jon){
	-COLS;
	if(Arya - TABLE[TABLE[mislead(-630.7107,-60 / ( TABLE[foo(( TABLE[protect(Hodor,TABLE[TABLE[--0.9 - ( -( Sansa ) ) + Hodor * mislead() - -1][-0.23 - betray(-56,destroy(( COLS ),1 / dog),53)]][x],TABLE[( TABLE[-12][-foo(x) - ( TABLE[--1 - ROWS - ( -ROWS )][0.42] )] )][-99])][-710.53 - foo(TABLE[betray(foo(rule(rule(27,-29)),-270.46),TABLE[0.47][-1])][-0.82],( -290.707 ))] ),-0.27)][protect(TABLE[0.4][( TABLE[y][dog] )],mislead(bar(TABLE[-64][0.87],ROWS,dog),ROWS),Stark)] ))][-( ( -0.16 ) )]][bar(ROWS,Stark,TABLE[bar(Hodor,betray(-y - COLS - mislead(-84 - Arya),COLS),-1) * TABLE[COLS - -960.87 - protect(( ROWS ),rule(protect(dog - -TABLE[( x )][-0.58]))) * y][-mislead(TABLE[foo(1)][-dog / Sansa],( -dog ),20)]][Hodor])]){
	Jon
}
}
var Jon = mislead()
var Jon = bar(Hodor,-rule(TABLE[x][0.66],-15),betray())
var Stark = Ygritte
def rule(x,Stark){

}
var dog = destroy(Jon)
def TABLE[1][k] {
	bar(mislead(ROWS) * bar(bar(COLS,ROWS,( -1 )),-( ( mislead(COLS,( ( ( ( ( ( ( ( ( destroy(Hodor,-130.848) ) ) ) - Sansa ) ) * ( -rule(Arya) ) ) ) ) )) ) ),COLS) * TABLE[Ygritte][destroy(-( COLS ),betray(1) / Sansa) + Arya],TABLE[( ROWS )][foo(betray(betray(Sansa),Sansa,-foo(-mislead(),destroy(protect(-91,COLS),--0.62 + TABLE[TABLE[2][TABLE[bar(( Jon ))][87 - Sansa / -0.26]]][Sansa * -ROWS]) / -( ( foo(-0.36,Jon) ) ) * Sansa)),( 0.23 * ( ROWS ) + Arya ))]);
	( -340.909 )
}
var Sansa = ( ( rule() ) )
def foo(Hodor){
	if(TABLE[Sansa][( --0.01 / ( -( Sansa ) ) / destroy(dog) )] + bar(mislead(( ( 19 ) ) + -6,-betray(),( ( 62 ) )) / y,--( 120.31 * -protect(0.96,ROWS) ),1)){
	if(mislead(-0.96)){

} else {
	( ( protect(-230.86 - COLS) ) )
}
};
	destroy(-14,-TABLE[--bar()][destroy(-1 * -mislead(-0.2 * betray(-( TABLE[( COLS )][-y] ) - mislead(COLS,( ROWS / Ygritte )),60 * Sansa),( -TABLE[COLS][( ( 9 ) + -0.34 )] ),dog),( 52 ))],TABLE[Arya][( -0.52 - COLS ) + -0.4])
}
var Stark = ( ROWS )
var dog = -51
var Hodor = ( bar(Hodor,-( ROWS ) - ROWS) )
assert --570.678 : "What do we say to the Lord of Death?"
assert -Jon / 1 : "Winter is coming"
assert protect(--( COLS ) - ( foo(ROWS - -( ROWS / -0.95 - TABLE[---Arya][TABLE[-39][betray(( COLS ))]] + ( Arya ) + bar(( Sansa ),---Jon) )) ) / --Jon) : "Nothing burns like the cold."
def foo(Arya,Ygritte,y){
	if(TABLE[40][COLS]){
	if(( -( TABLE[Hodor][-TABLE[destroy()][TABLE[Sansa][48]]] / TABLE[Hodor][Ygritte] ) )){

} else {
	if(x){

};
	dog *= Ygritte
};
	if(--47 * ( ( ( ( ( --6 ) ) ) ) )){

} else {
	Ygritte -= COLS
}
}
}
var Stark = ( y )
assert ROWS + y : "Fear cuts deeper than swords."
def destroy(){
	x;
	100;
	-x * protect(-Arya,TABLE[Arya][-COLS],-1)
}
def TABLE[0][j] {
	Ygritte *= Sansa;
	rule(Jon + COLS)
}
assert TABLE[Stark][-betray()] / rule(( -COLS ),TABLE[-1][dog / ( ROWS )]) : "Nothing burns like the cold."
def TABLE[-57][i] {

}
def protect(Hodor,Hodor){
	ROWS
}
assert -( ( foo(Stark) ) ) : "Nothing burns like the cold."
def TABLE[1][k] {
	x
}
var Stark = --0.34
def rule(dog,Ygritte,Stark){
	Jon *= -Sansa
}
def TABLE[Jon][i] {
	-1;
	if(-ROWS){
	if(protect(betray())){
	4
};
	if(rule(( ( ROWS - COLS ) )) + -Hodor){
	dog += COLS;
	Hodor /= -39;
	x *= -ROWS * betray(Hodor,-0.67) + foo()
} else {
	if(COLS){

}
}
} else {
	Jon -= ( 1 ) / Hodor;
	if(( Arya )){
	Hodor *= y
} else {
	Stark -= -( -( Stark ) / ( foo(( TABLE[COLS][protect(-0.84 * ( 83 ),COLS)] ),COLS,Stark + Hodor / -foo(Arya,bar(( Sansa + -Arya + ( ( ROWS ) ) ))) / protect(foo(( TABLE[Ygritte / TABLE[( -1 )][-0.18]][-0.65] ),Hodor - Stark),Sansa,COLS) - dog * 0.72 * 970.63 * Sansa) ) );
	Jon += TABLE[Jon][-foo()]
}
}
}
assert ( ( 55 ) / -0.84 ) : "Nothing burns like the cold."
var dog = ( -( Hodor ) ) * ROWS - ROWS / ( COLS )
def TABLE[COLS][j] {
	ROWS * ( ROWS );
	if(Hodor + TABLE[--dog][destroy(ROWS)]){
	if(1){
	Ygritte -= COLS * 460.22 + COLS + ( ( Ygritte + Arya ) )
} else {
	if(foo()){
	x += COLS
};
	if(48){
	-COLS;
	ROWS
} else {
	if(COLS){
	Arya *= -15;
	mislead(-foo(350.189 + ROWS,-Arya,( protect() ) + 32))
} else {
	Jon -= Ygritte;
	if(-rule(---1 + -Arya + TABLE[COLS][31] + TABLE[-1][y] * 80)){
	y += ( ( destroy(54) / Stark * rule(64,1) ) + ( betray(-0.49) ) + ( TABLE[TABLE[ROWS][( -TABLE[Hodor][-( ( ( COLS ) - --0.19 * ( ROWS ) ) ) * -Jon] )]][-Hodor] ) ) / TABLE[-0.4][0.44]
} else {
	Stark *= --x;
	-29
}
}
};
	Hodor += Sansa
}
};
	-ROWS
}
assert -y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = Sansa / 0.17 - COLS
def TABLE[Jon][k] {
	if(( ( Stark ) )){

} else {
	Jon *= Stark;
	Ygritte /= -28
};
	if(destroy(-TABLE[( ( -ROWS ) )][( Hodor )] - ( -0.29 * Ygritte ) - ( destroy(COLS,Hodor) ) - TABLE[protect(y,Ygritte,Ygritte) + COLS][( 0.22 )],TABLE[dog][destroy(protect())])){

};
	Sansa
}
def TABLE[Stark][k] {
	mislead(COLS,530.253,--250.4);
	if(-Hodor){
	if(protect(betray(COLS,destroy(ROWS)))){
	if(( 11 )){
	--TABLE[ROWS][( Sansa )];
	Sansa *= Sansa
} else {
	y -= 41;
	if(-( 860.49 )){
	if(TABLE[---0.18 / Stark][-( --( Hodor - foo(( -570.022 + mislead(( ( foo(-1,TABLE[-COLS][--dog * 68 * Jon],-x / Stark) ) )) - bar(( -35 ) * -950.8278) ),-540.604) ) )]){
	-72;
	Stark -= TABLE[x][--( ( betray(-( -ROWS + ( -0.26 ) ) * bar(Sansa,TABLE[betray()][TABLE[Jon + betray(Stark / -protect(-39) / ( -15 ) + TABLE[foo()][-TABLE[( -0.95 )][mislead()]] * 1,-82)][y] - ROWS]),( betray(Stark) )) ) ) / ( betray(( Sansa )) ) / destroy(TABLE[foo(Arya)][foo(mislead(( 0.49 - bar(-bar()) * Stark ) / ( ( ROWS ) ),--73,ROWS))],-Arya,-dog) - -( -( -62 ) )]
};
	Stark -= ( Hodor )
} else {
	if(( TABLE[-( Arya - -COLS )][Arya] )){
	TABLE[protect(( bar(y,y) ),TABLE[0.01][foo()])][-0.52];
	if(Arya){
	if(61){
	y
} else {
	if(( x )){
	if(-COLS){
	x -= destroy(( bar(protect(--16,-0.9 + ( ( -rule() ) ),destroy(ROWS - -94,Ygritte)),( -0.36 * bar(( y ),ROWS) ),TABLE[( ( Jon ) )][mislead(Stark)]) ),Sansa - bar(COLS),780.32);
	if(TABLE[TABLE[mislead()][x]][foo()] - Sansa){
	betray(0.25,-1)
};
	( ROWS )
}
}
}
}
} else {
	Sansa -= ( --dog * TABLE[0.87][rule() - -91 + ( protect(( COLS ) - Jon,TABLE[8][Jon],-TABLE[ROWS][( -( ( dog ) ) )] - Ygritte) )] - Arya + Hodor ) + -Arya * Jon;
	if(ROWS){
	-COLS;
	0.14
} else {
	bar(TABLE[ROWS][( --0.92 / Jon )],ROWS * Arya,ROWS);
	if(TABLE[COLS][Stark]){
	mislead(Sansa,( -82 ))
} else {
	if(-( Hodor )){
	-mislead();
	-0.39;
	if(( betray() )){
	Hodor *= betray(protect(protect(-0.86,TABLE[x][TABLE[0.63][60 - -ROWS / ROWS]],betray(--( COLS * -71 ),-dog)),Stark + Sansa,0.85) * 0.92)
} else {

}
};
	if(y){
	Hodor /= bar()
};
	Hodor /= Stark
}
}
};
	Hodor
};
	x *= -x
};
	( ( 15 ) )
};
	if(COLS){
	Sansa /= Jon
}
} else {
	x;
	Arya -= Arya
}
}
def TABLE[1 + TABLE[-betray()][COLS]][i] {
	-0.31;
	TABLE[bar()][rule(dog)];
	-0.35
}
def TABLE[protect(Jon,protect(( betray() )))][k] {
	if(betray()){

} else {
	COLS / Sansa;
	Ygritte *= --0.71 - ( TABLE[-Arya + rule() + ROWS][--130.143 * COLS + betray(Ygritte)] );
	Hodor *= 0
};
	if(-0.9){
	Hodor -= ROWS;
	if(foo(( dog ),( -260.49 ),x)){
	if(COLS){

} else {
	dog;
	if(( ( --Ygritte ) )){

} else {

};
	x += ( foo(1,Hodor,-0.13 * -ROWS - rule(-1,13) / ROWS + -( ( 46 ) ) - -Sansa) ) - ( 78 ) / -320.68
}
} else {
	if(0.58){
	y += x
}
}
} else {
	if(COLS + Arya * bar(COLS,Sansa)){

} else {
	( -0.78 * COLS )
}
}
}
def TABLE[Ygritte][j] {
	Sansa *= -0.76 * x + x * x;
	Stark
}
assert mislead(destroy()) * -330.12 + --( ( ( x ) ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert dog : "Fear cuts deeper than swords."
def protect(dog,x,Hodor){
	if(1){
	Jon;
	if(( TABLE[betray(Stark,rule())][( ( -42 ) )] )){

} else {
	( ( -0.62 ) ) * ( -1 );
	COLS;
	y /= -( ( ( TABLE[ROWS][-0.36] ) ) )
}
};
	Hodor /= ( destroy(( Stark ),--0.09,-protect(y)) );
	if(-Hodor + Jon / Ygritte){
	if(protect(--53)){
	if(COLS){
	Hodor += TABLE[COLS * Sansa][COLS]
} else {
	Hodor *= ( ( 0.8 ) );
	COLS * Sansa
};
	( foo(0.13) )
}
}
}
var y = -( ROWS / COLS )
def mislead(x,dog){
	Jon *= --0.68
}
def bar(dog){

}
def TABLE[330.3787][j] {
	Arya -= --COLS * --COLS * -96;
	if(( --ROWS )){
	rule(COLS / y,( foo(( dog )) ))
};
	if(Jon){

}
}
assert 38 : "One can not simply parse himself"
assert -TABLE[90][1] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Hodor : "Winter is coming"
var x = ( ---32 )
def TABLE[ROWS][k] {

}
var dog = COLS
assert mislead() + --( ROWS ) + foo(mislead(Ygritte),Sansa) : "Nothing burns like the cold."
def destroy(x,Hodor){
	if(bar(TABLE[-dog][x])){

};
	if(destroy(87)){
	if(Ygritte){
	if(Hodor){
	if(0.42){
	dog /= TABLE[0.5][-foo(TABLE[ROWS][-Stark],-0.51,mislead(( ( betray(protect(x),( TABLE[( -protect() * ROWS )][-0.93] )) ) ),Hodor,( Ygritte )))];
	if(-( 79 )){
	0.19
}
} else {
	if(-720.986){

};
	dog *= Hodor
};
	TABLE[ROWS][TABLE[-( Sansa ) + ROWS][-y / ( mislead(Hodor,Sansa) )]]
};
	TABLE[-y][TABLE[-TABLE[dog][-COLS]][25 - --290.7452]];
	( ( -1 ) )
};
	if(( -( ( foo(-1 / ROWS,Jon) ) ) )){
	Sansa -= foo(protect(---bar() + ROWS,-0.66),-0.33)
} else {

}
}
}
def TABLE[COLS][j] {
	TABLE[protect(TABLE[y][Arya / --Jon],COLS,-destroy())][Sansa]
}
def TABLE[0.58][j] {
	if(betray(TABLE[Arya][( Ygritte / Jon )],ROWS,ROWS)){
	Jon *= -( ( Stark - betray(mislead(TABLE[mislead(rule(dog + -( ROWS ),( dog ),Jon),COLS,28)][COLS],( protect() )),Sansa) ) )
}
}
assert --Ygritte : "Fear cuts deeper than swords."
def TABLE[bar()][i] {
	if(( Ygritte )){

}
}
assert Hodor / destroy(-( -1 ) / -mislead(-Arya,TABLE[( COLS )][TABLE[ROWS][-Jon]],( Sansa ))) : "Winter is coming"
assert protect(ROWS,foo(-ROWS,21,( ( foo(betray(0.71,0.84,Stark)) ) + y ) / protect(72,( COLS )))) - -( bar(( ( COLS * --ROWS ) ),1) ) : "Fear cuts deeper than swords."
def mislead(Ygritte,dog,y){
	0.34;
	Jon *= protect(destroy() * -ROWS,foo(betray(Stark,TABLE[TABLE[0.5][( ( mislead(( COLS )) ) ) - ( -ROWS )]][( Ygritte )])),550.305);
	( TABLE[protect(( ROWS ),Hodor)][( --Jon )] )
}
var Stark = -0.21
def protect(x,Ygritte,y){
	foo(x);
	( --0.92 ) + TABLE[( ( TABLE[Jon + bar(-( 0.01 ),rule(-bar(( ---1 ))))][( TABLE[Stark * TABLE[( ( -Ygritte ) )][-betray(-COLS,( -Arya ),( ROWS )) + -( ( 450.75 ) ) - COLS]][ROWS] / -0.95 / -0.76 )] ) / --TABLE[Ygritte][-foo(0.56,TABLE[TABLE[93][-( ( 640.63 ) )]][dog])] )][( x )] - foo(0.52) - bar(betray(ROWS));
	if(( x * Ygritte )){
	if(0.1){
	( betray(( ( -0.55 ) / -0.27 ),1) )
} else {
	Jon
}
}
}
var Ygritte = 0.86
var Arya = Jon
def rule(dog,Ygritte){

}
def TABLE[-ROWS][j] {
	Hodor *= 1;
	foo()
}
assert 0.18 : "What do we say to the Lord of Death?"
assert protect(( destroy(Hodor) )) : "Nothing burns like the cold."
def TABLE[( -( -0.83 ) ) / 720.992][j] {
	if(TABLE[TABLE[-( ROWS ) + ROWS][bar(Sansa,COLS)]][-bar(-520.54,0.93)]){
	Hodor -= mislead(( -1 )) - ROWS / destroy();
	x /= Sansa
} else {
	if(betray(-ROWS / betray(),rule(-0.56,0.95))){
	Sansa /= -Sansa
} else {
	0.25;
	if(COLS){
	-Sansa;
	y
}
};
	0.93
};
	if(foo(( COLS ),x)){
	( -foo(( betray(Sansa,Sansa) ),mislead(0.91)) + -980.1243 );
	-0.8 - Arya + COLS * 74 - ( dog ) * ( foo(-1 * 0.78 - ( -Sansa ) / Jon + 22 / destroy(Hodor,0.96) / -TABLE[( -rule(--1 / foo(Arya,( rule(destroy(ROWS,Sansa * Hodor,-1),( ( COLS ) )) ) + --77,y),rule(-betray(( Stark ),x) * foo(TABLE[rule(1,( betray(Arya) - ( Sansa ) ))][( destroy(--2,( betray() )) ) / ( -( mislead(( ROWS )) ) / Sansa )],ROWS,foo(TABLE[x][TABLE[( Hodor + -TABLE[--83][TABLE[Arya][Jon]] )][690.034]],-300.7)))) )][-protect(rule(bar(TABLE[1][-( -53 ) + 38],TABLE[ROWS][( bar() )],-destroy(destroy(( y ) - 880.4054,foo(ROWS,-0.01)),--( -Arya ),-660.239))),TABLE[TABLE[-( foo(destroy(TABLE[betray(-( x ),( ---COLS / 1 - -0.9 ))][( -840.2 )],0.23,Ygritte),destroy(0.69) - bar(--Arya),rule(TABLE[COLS][-Arya + ROWS])) )][Stark + y - Arya]][ROWS]) + Hodor / -Ygritte] + 0.12 * 0.74,-( -destroy(-78,mislead()) )) ) / -foo(-COLS,Jon,( --Arya ))
}
}
def rule(dog){

}
def rule(){
	ROWS
}
def TABLE[( -foo(TABLE[-57][Sansa] * ( rule(betray(ROWS / Hodor / ( ( Stark / x ) ) * COLS,( Ygritte )),-0.91) ),0.34) / y )][i] {

}
def TABLE[ROWS][i] {
	bar() / destroy(ROWS,COLS,( Hodor )) * ( TABLE[rule() / rule(( TABLE[destroy(destroy(-bar(COLS,( ( ( -x - 1 ) ) ) / ( dog )),betray(),160.8))][COLS] ),--Arya,-0.06) + Hodor - ( y ) - 26 + dog + mislead(TABLE[-Stark][-Stark / -Arya / COLS + dog - Sansa],Stark)][TABLE[mislead(-( TABLE[COLS][Sansa] ),Stark)][COLS]] )
}
assert ( ( ( -foo(Hodor) * 31 ) ) ) : "Nothing burns like the cold."
assert ( -Stark ) : "Nothing burns like the cold."
assert ( -910.74 ) : "Nothing burns like the cold."
var Arya = -rule(TABLE[ROWS][--0.1],-46)
def TABLE[-mislead(65,Sansa + ( x ) + 85)][k] {
	Sansa *= betray(-100) - dog;
	if(Jon){
	x -= -( ( 270.2 ) ) / dog;
	0.08
}
}
def TABLE[( COLS )][i] {
	( -87 );
	if(-rule(COLS,mislead(( y ),-( -891 ),foo(COLS,dog) + dog),( -0.09 ))){
	Jon
};
	Sansa -= COLS
}
assert ( ( -( ( -16 ) ) ) ) : "One can not simply parse himself"
assert -Stark + x : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[protect(protect(-ROWS,69),ROWS)][j] {
	bar(( TABLE[betray(-TABLE[870.21][COLS])][--1] ),Hodor / COLS,betray(Stark)) / protect(Hodor,x,dog);
	if(72){
	Stark -= ( Sansa );
	bar(---46)
} else {
	if(( 100.083 )){

} else {

}
};
	COLS + ( ( 260.87 ) )
}
def mislead(y,Arya){

}
def TABLE[x * -mislead(-COLS,( ( ( -Jon / rule(-Arya - -( bar(81,betray(( ROWS ),Stark),0.37) ),rule()) + 560.75 - 230.4366 ) ) )) - ( -35 )][k] {

}
def TABLE[destroy(--rule(-0.43),-0.5,( destroy(-44) + 850.7 ) / ( 13 ) - Arya)][i] {
	( -ROWS );
	-Jon
}
assert ( Ygritte ) / ( --( TABLE[TABLE[( TABLE[-0.55][-0.16] * -77 / ( Stark ) + 0.57 )][Sansa]][65] * TABLE[Arya][TABLE[-dog * ROWS * dog][rule(( ROWS - -bar(( Arya + ( -COLS ) )) + Sansa )) + ( ( ( 0.29 ) ) )]] ) ) : "Winter is coming"
def mislead(dog,dog){
	Arya /= -betray(0.38)
}
var dog = Ygritte / ( Arya )
assert protect(-Jon,( -destroy(( y ),-21,( --( TABLE[Arya / 39 - ( dog )][Jon] ) )) - ( COLS ) * TABLE[rule() * COLS * rule(( ROWS - -x )) - Arya - destroy(-Arya) + 0.2][COLS] - ( -90 ) )) / Jon : "What do we say to the Lord of Death?"
assert -1 : "Nothing burns like the cold."
def TABLE[x][k] {

}
def TABLE[betray(-betray(( ( protect(-ROWS,Arya) ) ),-25),( 95 ) / ( protect(TABLE[betray(--0.44,-0.14)][TABLE[--betray(ROWS - x) + COLS][-TABLE[foo(betray(mislead()))][rule(( foo(-9,-52) ),-TABLE[-ROWS][--65 - ( ( ( 69 ) ) ) / ROWS] - betray(protect(( rule(Jon,540.24) * -foo(ROWS) ),Stark / COLS,53) * 840.538,Arya),betray(Stark,COLS))]]]) ) - --0.49,Jon + 85 * -( y ) / ROWS - -1)][i] {

}
assert 1 : "Nothing burns like the cold."
assert -31 : "One can not simply parse himself"
var Arya = Hodor
def TABLE[destroy(Jon)][i] {

}
def TABLE[dog][j] {
	if(COLS){
	x *= ( 580.7248 )
} else {
	-960.3;
	Stark
}
}
var x = protect()
def rule(Jon,Sansa){
	-170.499 - -0.37;
	if(Arya){
	( y / Hodor ) / TABLE[-COLS][x]
}
}
def TABLE[dog][k] {
	Stark -= --TABLE[destroy(( ( -40 ) ),Ygritte)][Stark] / foo(Ygritte)
}
var x = ROWS * ( --13 + ( 90 ) ) / -Stark
def bar(y,Ygritte){
	y;
	dog -= ( rule(-( -destroy(( 73 ),( --1 ) * ( ( x ) ) + -Sansa,COLS) ),( -Ygritte )) ) + 0.28 + ( TABLE[Jon][COLS] ) - TABLE[bar(( 14 ))][destroy()]
}
def TABLE[foo(TABLE[-COLS][0.91],--1)][j] {
	if(TABLE[Hodor][( ROWS )]){
	Jon *= -( -protect(( -TABLE[0.89][TABLE[protect(-TABLE[( ( Ygritte ) ) - dog][-83],( 750.3 ))][67]] ),( ROWS )) - -ROWS - foo(--( --foo() * --( ( Stark ) ) * Hodor * Ygritte * -990.6 ) * x * COLS) ) - TABLE[-bar(TABLE[foo(--1,Arya)][betray(TABLE[-( ( ROWS ) ) + TABLE[-Hodor + rule(-TABLE[y + ( ( -1 ) )][( --TABLE[y][Ygritte] )] / ( ( rule(destroy(Stark),destroy(Ygritte) + TABLE[bar(x,-800.06)][Jon] - ( ( -Jon / rule(-( COLS ),-730.74,Arya) + foo(-Arya,-Arya) ) / ( TABLE[Jon][betray(TABLE[-53][-( Sansa )],0.39 + -bar(TABLE[TABLE[-63][98]][Arya]))] ) ),Jon) ) ) * -13)][( ---0.5 / ( rule(COLS) ) - COLS )]][ROWS],-0.07)],betray(TABLE[-470.5881][-Hodor * -Jon + -( Hodor )]))][foo(-protect(--ROWS),( destroy(foo()) ) + Jon)];
	if(-270.63){
	if(( ROWS ) * betray()){
	Jon *= ( destroy(foo(COLS),( TABLE[-0.8 - ( TABLE[mislead(-1,---0.44)][1] * -300.12 )][( 0.27 )] ),betray(Ygritte)) ) + ROWS;
	if(( ( 93 ) )){
	betray(COLS)
}
} else {

};
	-46
};
	1
} else {
	COLS
};
	Sansa -= destroy(TABLE[ROWS][( ( 0.06 ) * Stark + y )],99,TABLE[-84][--1])
}
assert destroy(-( x ) + -0.1,( Stark ),( -0.65 )) : "Fear cuts deeper than swords."
def protect(y){

}
var Sansa = -( TABLE[-91][--rule(ROWS,dog,COLS - --32)] ) + Stark
def TABLE[x][j] {
	Hodor *= -TABLE[COLS + rule() - ROWS - mislead(52,-1) * -0.89][mislead(TABLE[y][56 - Stark],-ROWS) * -430.21];
	Arya /= COLS;
	Sansa *= ROWS
}
def TABLE[-0.39][k] {
	dog /= ( betray(( 85 ),COLS / TABLE[( destroy() )][TABLE[-( 1 )][bar(Stark,destroy())]],76) )
}
assert -0.9 : "What do we say to the Lord of Death?"
def destroy(){
	Jon;
	if(-x){
	ROWS
}
}
var Hodor = Ygritte
def TABLE[-x][i] {

}
var Jon = Sansa
var y = COLS
def betray(Stark){

}
assert dog : "Nothing burns like the cold."
var Hodor = ROWS
def mislead(Arya,Stark){
	Sansa /= ROWS;
	if(rule(-( dog ),470.677)){
	if(Ygritte){
	-ROWS;
	if(destroy(Stark)){
	y += 0.34;
	Jon *= Arya;
	if(-110.414){

}
}
} else {
	if(-( COLS )){
	-110.964 + -1;
	Stark -= TABLE[dog][ROWS]
} else {
	if(foo()){
	dog += 510.891;
	Hodor *= ( ( -( Jon ) ) )
} else {
	( rule(Jon,Ygritte * ( dog ) / -1) + Arya );
	Jon += dog;
	dog -= destroy()
}
}
};
	1
} else {
	if(-0.35){
	-0.73
} else {
	dog -= -87;
	dog *= ( --COLS * -0.55 );
	if(protect(Ygritte,Arya,-1) * bar(990.13,Arya)){
	if(Ygritte){
	foo(bar(-1,ROWS))
} else {
	Ygritte *= TABLE[--0.57][( ( -dog + Jon ) )];
	if(Stark){
	if(-( -70 )){

} else {
	if(-( rule(bar(-89,COLS),( rule() ),-( -8 )) )){
	ROWS
} else {

};
	dog -= 88
};
	Stark += TABLE[-Arya * -1][-Hodor]
} else {
	if(470){
	( ( Sansa ) )
}
}
};
	betray(ROWS)
} else {

}
};
	Arya *= ( COLS );
	Ygritte -= COLS
}
}
var dog = y
def TABLE[x][k] {

}
def betray(Jon,x){
	Arya -= COLS;
	-65
}
assert Ygritte : "Fear cuts deeper than swords."
def TABLE[y][j] {
	rule(COLS);
	if(betray(destroy()) - betray(x,-870.47)){
	Jon /= ( Stark ) / foo(( ( COLS / rule(( 45 ),rule(mislead(( 61 ),-720.426),1)) ) ))
}
}
def TABLE[protect(TABLE[( Ygritte )][ROWS])][i] {
	if(-1){
	Jon /= ( y );
	-0.87;
	if(-TABLE[x][COLS]){

}
};
	--ROWS
}
var Jon = -COLS
var Stark = COLS
assert -TABLE[ROWS][-( 0.23 ) / mislead(ROWS) / COLS + COLS] : "Winter is coming"
def TABLE[0.82][j] {

}
def TABLE[( x )][k] {
	Sansa -= ( -15 - ( TABLE[destroy() + x][COLS] ) + dog );
	if(COLS / bar(TABLE[( 48 )][x],-55)){

}
}
def rule(){
	( y * x + x );
	if(0.96){
	-0.45 + COLS
} else {

}
}
assert --( -COLS ) * Jon : "Winter is coming"
def foo(y,Hodor,Ygritte){
	Arya *= -COLS / -mislead();
	Arya += ROWS
}
def foo(){
	dog *= bar(( ( protect(Hodor) ) / ROWS - TABLE[-( y )][COLS] - COLS ),protect(dog));
	Jon /= 970.47
}
var Jon = ( 92 )
var Ygritte = ( destroy(( -( destroy(ROWS,( COLS )) ) ),Arya) ) - bar(-bar(ROWS) * -20.6454 * -( -rule() ))
def foo(Arya,dog){
	if(betray(y)){
	Ygritte /= 0.18;
	if(Hodor){
	if(-48){
	Stark += bar(--( ( betray(-0.18,Arya * -rule(TABLE[-mislead(TABLE[destroy()][-foo()],TABLE[-30.852][protect(( ( Hodor ) ))],--( protect(-1,COLS) + TABLE[betray(COLS)][COLS] ))][-7] - --( -1 ) - dog) * -ROWS - ( dog ) * ROWS) ) ) - ROWS)
};
	if(-820.18){
	if(mislead(--rule(Hodor,( -70 - y )))){
	if(bar(-0.21,x)){
	if(foo()){

} else {
	66
};
	if(-64){
	Sansa += ( ( -0.02 ) ) - betray(( Arya ));
	Hodor -= rule(0.09,COLS);
	if(1 / foo()){
	bar(dog - protect(),COLS,ROWS);
	-0.04
}
} else {
	if(---130.4572 * 1){
	if(-0.74 - rule(Sansa)){
	-x + -0.26;
	x /= Hodor
};
	1;
	if(COLS){
	if(COLS){
	if(( --59 )){

} else {

};
	if(--1){
	rule(-4,foo());
	dog;
	if(-1){
	-9
} else {
	Ygritte += Stark * COLS
}
} else {
	( Ygritte )
};
	Ygritte /= -rule() / destroy(mislead(-y,TABLE[Sansa][Ygritte] / ROWS),( -0.82 + -COLS ))
} else {
	foo(-9,TABLE[foo(-rule(Hodor - 0.6 / 25,Jon * dog))][protect(ROWS - 1,( -1 ),-TABLE[y][mislead(rule(dog))] * Stark + ( ( destroy(--0.17,COLS / ( -ROWS - rule(Arya) )) ) - destroy(( ---60 )) ))])
};
	y -= protect()
}
} else {
	Arya += rule(-Ygritte * -TABLE[( 0.34 )][--31],-0.32);
	Sansa *= -y + y
};
	if(x){
	if(Jon / ROWS){
	if(-0.76){
	710.36 - -0.99;
	TABLE[( protect(ROWS / ( COLS ) / ( Hodor ),-57 * betray(Sansa,TABLE[-210.341][Sansa] / protect())) )][-34 * ROWS / protect(betray(-270.004),Ygritte + --29)]
} else {
	680.669
};
	( mislead(-0.56) ) + -0.22
}
}
};
	if(--TABLE[ROWS][ROWS]){
	Ygritte += 850.167;
	destroy(mislead());
	( ( -21 ) )
}
} else {
	Hodor;
	bar(ROWS)
}
};
	if(-x){

} else {
	y + -TABLE[TABLE[rule(Sansa,-Arya)][rule(TABLE[protect()][-0.1],-680.12,COLS) * ( -Jon )]][ROWS / Hodor];
	dog += 0.91;
	Sansa *= TABLE[mislead(( betray(-220.131,-Arya) )) - -1][TABLE[( ROWS )][TABLE[--( Stark ) - -( bar(140.37) ) * -1][x]]]
}
} else {

}
};
	if(0.51){

}
} else {
	Ygritte += Hodor
}
}
def TABLE[Hodor][j] {

}
def TABLE[Stark][k] {

}
assert -foo(Stark / -rule(--0.76,-destroy(24,betray(TABLE[betray(destroy(ROWS))][-69])))) : "Nothing burns like the cold."
def TABLE[99][j] {
	dog *= TABLE[--0.26 * -0.46 - y][( -( -Arya ) )];
	Arya /= y
}
def destroy(Sansa){
	( ROWS );
	---0.2
}
def foo(dog,x){

}
assert foo() : "One can not simply parse himself"
assert Arya : "One can not simply parse himself"
assert COLS : "Winter is coming"
var dog = ( TABLE[COLS][ROWS] )
def rule(y){
	Hodor += --foo() / COLS;
	dog -= -Ygritte / ( TABLE[COLS + ( ROWS )][protect() - dog / TABLE[-0.18][y]] ) * dog
}
def protect(){

}
var Hodor = protect(-0.2)
def TABLE[( ROWS )][i] {
	if(-Arya){

} else {

}
}
var Jon = -COLS
def bar(Hodor,Arya){
	( 490.9 );
	if(TABLE[( -930.8617 * dog )][( ROWS )]){
	foo()
} else {
	if(COLS){

};
	if(rule(dog,rule()) / foo(rule())){
	if(-1){
	x *= Arya;
	( TABLE[-0.77][protect(-Ygritte,54)] ) + -1;
	-7
} else {
	if(Sansa){
	( --Stark - COLS / ( --( ---0.02 + -protect(y,Hodor) ) ) + protect(( ( -0.53 ) )) );
	ROWS + ( ROWS )
} else {
	if(-mislead(betray(bar(foo(TABLE[( 3 )][TABLE[( 0.78 )][x]],ROWS,( ( rule(-0.4) ) ) / COLS),y,Ygritte),COLS,COLS))){

};
	Arya += ( 13 + -1 ) / TABLE[-( COLS )][690.025]
};
	y -= ( COLS )
};
	if(41){
	if(38 / Arya){
	Stark += dog;
	x
};
	x *= COLS;
	Arya /= x
} else {
	rule(protect(0.94,rule(y),-0.84),TABLE[( ROWS )][-rule(protect(-y / ( -830.617 )))]);
	if(420.0184 * -52){
	-920.55
}
}
};
	Arya /= TABLE[-( ROWS ) - -mislead(COLS)][( -1 ) + TABLE[-foo(Arya,-TABLE[-24][foo()],Jon)][ROWS]]
}
}
var x = -( rule(( ROWS ),-1 - protect(betray(),0.39) + --65) )
var Arya = TABLE[y][( ( -920.92 ) + ( Sansa ) )]
assert ( rule() ) : "Winter is coming"
def TABLE[COLS - ( 0.59 )][j] {
	rule(( TABLE[mislead(-( bar() ),TABLE[0.51][( destroy(-ROWS,ROWS) )],COLS)][( ( 1 * rule(-( foo(TABLE[rule(Hodor)][( Stark )],rule(-1)) ),Sansa) ) - -42 )] ));
	dog *= x
}
def rule(Arya){
	dog -= dog;
	if(( mislead(540.766,betray(( protect() ),( ROWS ),mislead(--280.475,protect(( ROWS ))) / ROWS),COLS) )){
	Stark /= COLS
} else {
	Arya /= foo(( rule(COLS) / COLS ),COLS)
};
	bar(betray(--1),0.06)
}
var Arya = bar(200.7299,39)
def rule(Arya,Sansa,y){
	if(TABLE[Sansa][TABLE[-Hodor - dog / ( 0.41 ) + COLS][-TABLE[rule(ROWS,destroy(),-1)][-rule()]]]){
	x += Hodor;
	dog *= ---COLS;
	protect(--1,-ROWS + x)
} else {
	ROWS
}
}
def bar(){

}
def TABLE[ROWS][k] {
	if(-0.93){
	dog - Ygritte
};
	if(( -Ygritte )){
	dog /= -foo(-0.66)
}
}
var Arya = -ROWS
def protect(Stark,x){
	mislead(20,Sansa);
	if(protect(COLS) + Sansa){
	y -= destroy(Arya,( TABLE[( -COLS )][betray(protect(destroy(-58,( -82 ) * Ygritte)))] ),( -36 ))
} else {
	( TABLE[--960.838 + Hodor][COLS] ) * TABLE[( -bar(-70,20) )][ROWS / 35] * -1
}
}
def protect(){
	if(Hodor){
	Arya -= TABLE[TABLE[18][bar(ROWS)]][( Hodor )];
	Sansa += bar(-( ROWS * 50.54 ) - ROWS,Jon)
} else {
	foo(( COLS ) - ROWS) * ( -Arya )
};
	if(( --protect() * ( Jon ) )){
	protect();
	Jon *= betray(-850.1964,( -0.78 ),mislead(34 + ROWS));
	Jon *= ( Ygritte )
};
	protect(dog,dog)
}
def TABLE[-Jon][j] {
	if(rule()){
	x *= -( ( ( 0.71 ) ) )
} else {
	bar(Sansa,ROWS)
};
	--( --1 ) + destroy(COLS);
	dog += -0.94
}
def bar(y,dog){
	destroy() / y;
	if(TABLE[Ygritte * rule()][-TABLE[-( ( -( COLS ) ) * COLS )][-( ( protect(( -rule(-790.4463,-protect(-Sansa + ( --foo(x) ) + --35 / TABLE[TABLE[Hodor][Sansa]][-dog] / rule() / Ygritte / -1,Ygritte) / Sansa) + TABLE[( -protect(x) )][1] )) ) )]] - Hodor){
	protect(protect(( --1 )),-1);
	Jon += --betray(protect(-95,-35),Hodor - Hodor / --72 - bar(ROWS / ( bar(Ygritte * -( COLS ),COLS + COLS) ),-Sansa) + bar(-0.16,-Sansa))
} else {

};
	-Jon
}
assert Arya : "Fear cuts deeper than swords."
def TABLE[( x )][i] {
	if(x){
	y /= -0.89;
	Sansa /= -bar(ROWS,-Hodor,Sansa);
	if(TABLE[1][( -8 )] * TABLE[0.93][Arya]){
	Jon /= -Stark;
	if(destroy(COLS) - ( -COLS )){

}
} else {
	Ygritte *= ( Ygritte - Stark + mislead(dog) * foo(690.488,-bar(COLS) - bar(-Hodor) * ( TABLE[-TABLE[ROWS][0.5 * Ygritte]][mislead(x,destroy(COLS),0)] )) ) - Arya - rule(( ( ( COLS ) ) ) - COLS);
	-42
}
} else {
	x -= ( TABLE[bar(--Ygritte)][0.5] );
	if(mislead(Jon + 66,( 670.805 ),destroy(( rule(( TABLE[( --76 + ( protect(ROWS + -protect(Sansa,--COLS,Sansa) * Hodor + y,-----Arya + COLS,( TABLE[rule(( ( x ) ))][TABLE[-310.33][ROWS]] ) * --820.63 + -( TABLE[Hodor][TABLE[( -8 )][Jon]] )) ) ) / bar(-300.759,( ( ( Sansa ) ) ),betray(ROWS))][( foo() )] ) / ROWS,ROWS) ) + -( y / COLS ),820.72))){
	( Ygritte - TABLE[( -12 )][TABLE[-Jon][ROWS]] )
}
};
	if(-bar()){
	if(-Ygritte){
	ROWS;
	-bar(( -destroy(0.89 + dog - ROWS,COLS) ) + ( -( -COLS * x * foo(( 1 ),COLS,bar(940.22,-0.13)) ) ),Stark);
	if(-3){
	0.9 - 0.73
} else {
	if(-foo()){
	if(-1){
	if(Jon){
	if(bar(-protect())){
	if(( -bar(x,( -0.43 )) )){
	Arya *= -1
} else {
	Sansa * ( 1000.64 ) - rule(-0.89 / rule(TABLE[TABLE[mislead(betray(-dog),TABLE[10][COLS],-Stark)][( Hodor )] / dog][bar(( 3 ),Ygritte,-( 1 ))],ROWS - TABLE[betray(betray(0.91) * ( 870.288 ),( -destroy() / ROWS ))][x]) / dog,( mislead(TABLE[Hodor][TABLE[Sansa][-0.58]] - -( ( ROWS ) ),Stark) ))
};
	if(--380.33 * -821 / bar(COLS,-TABLE[destroy(bar(Hodor - -0.19,foo(),43),COLS) - -1][--1 * --( Hodor ) - Hodor])){
	y -= foo(-99);
	Hodor -= destroy(destroy(( -1 ) * ROWS,bar(COLS) / -bar(--rule(Sansa,--Sansa) - Arya)),-0.58,rule(-1,-0.79,COLS))
} else {
	Hodor += -1 - ROWS
};
	if(ROWS){
	if(ROWS - rule(( y ),( destroy(bar(1 / COLS,( mislead(( 7 )) )),Stark) ))){
	bar();
	ROWS;
	Jon += destroy(mislead(bar(-TABLE[( -Arya - Arya )][16])),x)
};
	Hodor *= -0.67
}
}
};
	if(ROWS){

}
} else {
	( -destroy(TABLE[Jon][TABLE[--6 / Stark][-34]]) - destroy() );
	Hodor += --( ( rule(dog,Jon) * 0.5 ) );
	Arya *= 1
};
	COLS;
	ROWS
};
	if(-Stark){

}
}
} else {
	if(( protect() )){
	Arya -= bar(0.02);
	if(Ygritte * ( -bar(---1 / mislead(560.63,790.06)) )){
	dog *= x + -( ( mislead(-( destroy() / -mislead(( ROWS )) ) + 1 / ( --Arya ),Stark) ) );
	if(COLS){
	if(mislead(Stark)){
	x;
	6
}
};
	Ygritte -= TABLE[580.794][Stark]
} else {
	Jon *= Arya;
	0 / foo(( ( -protect(TABLE[( Ygritte )][ROWS],-5,-COLS * 1 - dog) ) ))
}
} else {
	TABLE[mislead(32,betray())][( bar(-720.54,Hodor,Ygritte) - --1 )]
};
	dog += Hodor
};
	if(foo(-92,rule(betray(betray()),26 - ( ROWS )),-2)){
	-ROWS
};
	Jon -= ( ( ( Stark ) * --26 ) + Stark )
} else {
	-0.49
}
}
assert protect(250.86,Arya * -1 + destroy(59,COLS,( 78 / -foo() ))) : "Nothing burns like the cold."
def protect(Jon,Sansa){
	Hodor;
	if(rule(-1)){
	Ygritte *= ( mislead(( COLS ),( TABLE[( 130.24 )][ROWS] ),betray(-4)) )
} else {
	dog *= COLS
}
}
def TABLE[x][k] {
	y *= 0.98
}
assert Arya : "One can not simply parse himself"
def TABLE[COLS - 0.32 / ( ( y ) )][j] {
	dog /= -( -COLS );
	Ygritte /= 0.72
}
var dog = -0.68
def mislead(x,dog){
	x -= bar(Sansa,Stark);
	Hodor /= -1
}
def protect(Sansa){
	if(-0.28 - ( 1 )){

} else {
	x *= ROWS;
	if(-( ( Arya ) - ( ROWS + ROWS ) + Arya ) * mislead(COLS,( Stark ),-0.71 * --160.47)){
	Sansa;
	if(dog){
	Jon += COLS;
	ROWS + Jon
} else {
	if(( rule(--mislead(-Hodor,Stark,12 - -( rule(-0.18,protect(rule())) )),( 61 )) )){

} else {
	dog += ( ( betray(1,( 680.925 ) * Arya,TABLE[( betray(TABLE[( -69 )][-( COLS )],36) )][( rule(Stark) - Ygritte / betray(COLS) )]) ) / Ygritte )
};
	Jon / rule(( 960.5 ),( -1 ))
}
} else {

};
	( betray() )
};
	Arya *= TABLE[betray(1)][-0.21];
	bar(-0.91,-Stark)
}
var x = --( Ygritte ) + protect(COLS,mislead(-270.7407,Sansa - foo(bar(destroy(Arya / -36),COLS),TABLE[-x - Stark][-36],x))) - ROWS / -Ygritte
def bar(dog,Ygritte){
	3;
	Stark *= ROWS
}
assert 20 : "Fear cuts deeper than swords."
def bar(x){
	if(x){
	dog += ( -0.81 )
}
}
def TABLE[TABLE[protect() * COLS + mislead() / -( COLS )][Hodor]][j] {
	( Jon - foo(---Hodor,-( bar() )) );
	x -= COLS
}
assert ( y ) : "Nothing burns like the cold."
def betray(Ygritte){
	if(ROWS){
	Stark += ( Ygritte );
	-ROWS
} else {
	Stark += ( 0.53 )
};
	-900.6558
}
var Sansa = -bar(TABLE[protect(-mislead() - Jon / TABLE[( bar(protect(( TABLE[rule(COLS - ( -68 / -( ROWS ) * -150.885 + -betray(rule(-ROWS),( ( -mislead(ROWS,( Ygritte )) - ( COLS ) ) / dog )) * destroy() + -( y ) ),COLS) + -x * protect(-0.26 + ( ( ( ROWS ) ) ) + ( -( -93 ) ))][1] )),( --74 * x ),TABLE[-protect(betray()) * TABLE[y][--( -COLS ) + -0.93 + mislead(700.611) - -1 + 8]][protect(-0.57,TABLE[( -COLS ) + -betray(-420.812,protect(-COLS))][COLS],protect(-destroy(20,COLS)))]) )][-370.9213])][( Sansa )],protect(Stark,-mislead(betray(( -( ( ( -Jon ) ) ) )),rule(-98))) - 1)
def TABLE[bar()][j] {
	Hodor /= x;
	if(Sansa){
	rule();
	if(( -0.33 )){
	Stark *= COLS / TABLE[rule(Hodor,foo())][-TABLE[-16][-( ( ( -Jon ) ) ) * ROWS]];
	Arya /= rule();
	if(-1){
	COLS
} else {
	y -= COLS;
	Ygritte /= COLS
}
} else {
	Hodor *= -protect(-rule(( TABLE[-Sansa / -Jon - -ROWS + ( x ) + ( -bar() ) - -1][rule()] * -27 )) / Stark)
}
} else {
	if(1 / ( 0.51 ) + ( Sansa )){
	Sansa /= 0.85
};
	if(( 0.88 )){
	Ygritte;
	x -= 1
} else {
	dog /= 1;
	if(-1){
	-protect(destroy(36),-0.2)
} else {
	Sansa /= ( protect(510.3) );
	if(TABLE[( destroy(( 1 ) + -TABLE[-10][rule(( dog )) / ROWS],COLS,1) )][-( betray(-94,-( ( -y ) ) * -dog) )] - -Hodor){
	Jon -= -betray(( 1 + -Ygritte - ( ROWS / TABLE[44][( -bar(-Sansa * 0.6) )] ) ),-1,COLS)
} else {
	if(580.4){
	if(betray(0.39,COLS)){
	if(-Ygritte * y - Sansa / -0.29 / ( Jon )){
	-810.43;
	if(-31){
	--1 * -Ygritte;
	TABLE[Hodor][COLS * --( destroy(-0.43) )] * ( dog )
};
	if(0.82){
	x;
	Hodor *= protect(--99 - Jon)
}
};
	if(betray(ROWS,100) + Jon){
	mislead();
	if(( protect() )){
	Ygritte -= protect(-0.13,( dog ));
	( -TABLE[( Hodor / -42 ) * 78 - -1 * 250.28][410.61] + Arya - dog + dog ) - bar(0.67 + 0.11,COLS,-4);
	if(Sansa / Jon){
	if(1){
	Jon += -20;
	Ygritte /= -1;
	if(-1){
	if(destroy(ROWS)){
	if(TABLE[COLS - ( ( mislead() ) )][protect(15,COLS,Sansa + ( -mislead() ))]){
	if(--( ROWS + --1 + ( Ygritte / Hodor ) + ( ROWS ) + 1 * -TABLE[--Hodor + ( ROWS )][protect(-( foo(( TABLE[260.066 + ( -1 )][Jon] / -COLS ),Stark,-ROWS / ( Jon )) ),Stark * protect(Sansa / 0.66 / 0.64,-COLS,( Ygritte )),x)] )){
	-0.69
} else {
	x *= bar(( 97 ),56);
	Stark /= -500.576
};
	Arya
} else {
	if(-97){
	Arya -= Ygritte
} else {

}
}
};
	x -= 840.26
} else {
	Sansa /= -940.8278
}
};
	if(dog){

} else {
	if(( 0.09 )){
	Jon /= 74;
	if(TABLE[destroy(-910.921)][-1]){
	Arya += -TABLE[destroy(mislead(( --Hodor ),-49),( -15 + ( COLS ) )) + TABLE[-50 - ( dog ) - -TABLE[protect(ROWS) - y + TABLE[-ROWS][ROWS]][Stark]][protect(1,( rule(0.97) ))] * ( protect(( ( TABLE[TABLE[foo(( bar(( mislead() ),betray()) / ( ( -380.85 ) ) ),TABLE[COLS][-35])][COLS] * ( -88 ) * -y + Ygritte][rule(rule(( ROWS ),mislead(ROWS - ROWS - betray(( -mislead(Jon,-1) )),( -mislead(Ygritte,Sansa) ),--0.09)),-protect(mislead(---0.94,foo(-0.13,TABLE[-78][( 53 )]),( -( ( x / ( ( -TABLE[91][( ( -bar(--TABLE[220.9][foo(Arya - ROWS * -x,( ( -0.85 ) ))] - dog - betray(ROWS) - --890.08 * 0.8) ) - ( ( 0.89 ) ) )] ) ) - 1 * -( -0.3 - ( -0.63 ) ) / mislead(-500.235,21) ) ) ) * ( ( 86 ) ) + x + COLS)))] ) ) - ( 0.73 )) )][TABLE[ROWS][-bar(--330.61)]] / ( ( ( dog ) ) + bar() + x );
	if(COLS){
	Jon += -( dog );
	if(Stark / -1){
	protect(( --92 ),Hodor,TABLE[dog][ROWS]);
	if(ROWS){
	if(-84){
	bar();
	if(protect(Hodor,dog)){
	if(( foo(-bar()) )){
	if(COLS){
	if(-( ( -0.2 ) ) + -0.45 + -1 + ROWS){
	if(( ( -COLS ) )){
	if(0.42){
	if(COLS + -1){
	betray(Arya,Stark,Sansa);
	Sansa *= ---25;
	Hodor *= -0.15
} else {
	if(( COLS )){
	Hodor += -( betray(( -0.3 - protect(foo(x)) )) )
} else {
	if(( dog )){
	if(bar(74 - ( --( ( -0.32 ) * --COLS / foo(COLS) ) / ROWS ))){
	( ROWS ) * ( -1 )
}
} else {
	rule(bar() / Ygritte);
	Jon /= 0.04
}
};
	if(-2){
	if(ROWS){
	Jon *= destroy(x,Sansa)
} else {
	if(( ROWS )){
	Hodor /= Stark
}
}
};
	if(ROWS){
	--( -betray(bar(( ( x ) )),-( destroy(550.58,-( Arya )) ),mislead(39,-0.75)) )
} else {
	x;
	( 820.84 );
	if(( protect(( ( foo(COLS + betray(-0.3 * bar(x,-protect(rule(-dog)) - ROWS,Ygritte) + 630.898,protect(y,( foo() ))),COLS) ) ),( ( Sansa ) )) )){
	( Stark )
}
}
};
	Jon -= TABLE[-0.17 - mislead(1)][1]
};
	TABLE[ROWS][( TABLE[ROWS][----280.199] )];
	x += Sansa - bar(COLS,x)
};
	Sansa *= 500.094
}
} else {
	dog += ( Ygritte );
	-0.2
};
	Jon += ROWS
} else {
	0.62
}
}
} else {
	Jon += x
}
}
}
};
	-0.54 / -destroy(-y,betray(( ( ( 730.95 ) ) ))) / -1 + ( -1 )
};
	if(( mislead(Stark) )){
	Sansa
}
} else {

}
}
}
};
	Jon *= ( bar(Stark + 0.77,( TABLE[( destroy(bar(( Jon ),57,TABLE[( Arya ) + ( ( -TABLE[( TABLE[mislead()][Stark / mislead(-( ( Arya ) - -dog / --( -0.41 ) ) + -0.46,Stark)] ) / -950.43][-foo(COLS) / TABLE[Stark][--58 + TABLE[TABLE[-( -x * Arya * COLS )][( TABLE[-TABLE[( foo(Ygritte,COLS) )][dog * -Stark * -TABLE[COLS][( -0.64 ) / -ROWS]] + betray()][rule(Sansa)] )]][x] + foo(Ygritte,x * 1)]] ) )][COLS + 25] + Hodor)) )][-ROWS] )) ) - ( rule(56,1) ) / COLS
} else {
	Jon += TABLE[Jon][COLS];
	1 * ( -destroy(---21) )
};
	Ygritte += --Sansa * destroy() * -foo(-betray()) * --x
} else {
	--0.14;
	if(x){
	Arya /= x;
	-1
} else {
	if(-47){
	if(( ( foo(TABLE[bar(1 + 0.8,destroy() * -( -51 ) / 79) * x][( bar(mislead(-( -protect(rule(dog * ROWS,Stark * --45) / Arya,0.74) - COLS ),-88,-bar(ROWS)),Jon * betray(( TABLE[betray(-bar(bar(rule(ROWS),-( COLS ) * Arya),0.7),foo(16,foo(( COLS ),bar() + 4 * destroy(73))),( -Ygritte ))][( ROWS ) - -TABLE[210.51][( Arya )] + -Jon / TABLE[x - -( Ygritte )][( ROWS - protect(( ( Jon ) ) - TABLE[( bar() )][( ROWS )]) * bar(y - --TABLE[( 1 - ( Stark ) * ( protect(-( --1 + -0.92 )) ) )][foo(TABLE[-rule()][x],-Hodor)],-0.39 + y * protect(Ygritte,Sansa) / betray(y,-33)) )]] ),x / -0.48),ROWS) ) + -COLS * -ROWS],rule(protect(rule(betray(( ( -Jon ) ),( -ROWS ),( 830.5 )),dog)))) ) ) / ( 0.13 ) + -62){
	-1;
	if(-( ( Stark ) )){
	TABLE[-0.56][ROWS]
} else {
	Arya += -TABLE[COLS][mislead()];
	if(-( ( x ) / COLS ) * ( -mislead(Sansa,y,COLS) )){
	Arya /= ROWS
}
}
}
}
}
};
	if(-Jon + ROWS + destroy() + ( betray(( -ROWS ),-( --Ygritte )) ) / -( 400 ) + COLS + dog){
	COLS;
	TABLE[-TABLE[Arya / destroy(ROWS,( betray(dog,( Stark * Sansa + -Ygritte * y / --0.11 ),TABLE[-protect(( Hodor / ( COLS ) ))][Stark - -COLS * -39]) ))][( 2 )]][ROWS - mislead() - Arya];
	if(Ygritte){
	Jon *= TABLE[foo(Ygritte)][TABLE[mislead()][x]]
}
}
}
}
}
}
}
}
var Jon = -84 * mislead(bar(foo(-0.87))) * ( Stark )
def bar(y,Ygritte){
	40.6106;
	if(Arya){
	if(betray(protect(),-ROWS,( 1 ))){

} else {
	if(( TABLE[ROWS][x] )){
	( protect(Arya,-rule()) + ( ( ( mislead(( 27 )) ) / -TABLE[Arya][betray()] ) ) );
	Stark *= 4
}
};
	if(foo(TABLE[Sansa][( dog )])){
	if(bar(Arya - 0.72 + 0.28,protect(( rule(TABLE[TABLE[rule(COLS,Arya)][-foo(( -dog ))] + ROWS][Ygritte]) )))){
	y += Stark;
	if(( Ygritte ) * ( 67 ) / -( ( -protect(0.96,-1) ) )){

} else {
	y += Ygritte;
	if(-Jon){
	Sansa *= bar(y,ROWS,49)
};
	mislead()
}
} else {
	Jon *= -0.73
}
}
} else {

}
}
var Jon = foo(TABLE[Stark][-COLS],betray(( ---0.14 + rule(( foo(y,-1) + -bar() / -ROWS ) - 1) ),TABLE[( ROWS )][TABLE[--rule(COLS,bar(( ( -1 ) )))][--Arya + 0.73 + dog]]),COLS)
def rule(dog,Stark,Hodor){
	if(ROWS){
	-foo(-bar(COLS,betray(dog + -590.36,Hodor)),Ygritte);
	-( TABLE[Stark][-0.95] )
} else {
	-2;
	0.89
};
	if(( 1 )){
	Ygritte /= 62 * COLS;
	Jon /= ( ( ( -0.3 ) ) )
} else {
	foo(betray(TABLE[foo()][Jon]) * ( -0.13 ),COLS) * Arya;
	Arya *= -y
}
}
assert -41 : "Nothing burns like the cold."
assert ROWS : "One can not simply parse himself"
def TABLE[COLS][k] {
	if(foo() * betray(-Hodor * -25) - ROWS){
	if(-23){
	( ( betray(COLS,protect(dog,bar(-COLS),800.872 / Arya)) ) / betray(TABLE[-300.54][( y )],-0.89) ) + foo(ROWS,-0.42);
	Sansa *= TABLE[Arya][-betray(y,destroy(( -protect(dog,54,-92) ),COLS,-rule()),foo(Hodor,Jon)) - -0.34]
} else {
	y += destroy();
	Sansa -= -0.94
};
	destroy(( ( Arya ) ));
	foo(TABLE[TABLE[( ROWS )][( ( protect() ) )]][dog])
}
}
def mislead(y,Sansa){

}
def foo(Stark){
	1;
	Sansa += betray(( ROWS ),( Sansa ),1)
}
def foo(x,dog){
	0.02
}
var Stark = ( foo() + ( --( -TABLE[mislead(Stark,-0.2,COLS)][Arya] ) + COLS ) )
def TABLE[-Stark + ( -( x ) )][k] {
	dog *= mislead();
	-TABLE[( mislead() ) - foo()][-mislead(y,COLS,-100)] / mislead(Arya) * 0.54
}
var Hodor = TABLE[---0.21][mislead(TABLE[-ROWS][( --0.8 )],bar(Hodor,destroy(( -68 )),0.04))]
assert rule(COLS) * COLS + --Arya : "Nothing burns like the cold."
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(y,Sansa,Arya){
	Arya += ( 310.743 - rule(( -1 + -38 + -0.21 ),bar(-x)) )
}
assert -590.7 / ( -100 ) : "Nothing burns like the cold."
def TABLE[( 1 )][i] {
	betray(( ( -0.05 ) ),-betray());
	Arya *= --0.81;
	-Stark
}
var Ygritte = COLS
assert 0.28 : "Fear cuts deeper than swords."
def TABLE[ROWS][i] {
	if(protect()){
	Jon;
	dog *= COLS
}
}
def TABLE[y][i] {
	y -= x
}
def TABLE[-protect(1)][k] {
	Hodor -= -( ( --0.14 ) );
	y += ( 0.86 )
}
def foo(x){
	( TABLE[y][COLS + destroy(betray(( destroy(TABLE[COLS][-23 + -1]) ) + ( COLS ),( Hodor )))] ) * --bar(0.32,81,foo(( bar(Jon) ))) / -92
}
var Ygritte = Hodor
var y = 520.766
assert ( -rule(destroy(x),rule(---810.014,y,protect(ROWS,0.78 * -1))) ) + y * mislead(-0.91,ROWS) : "Fear cuts deeper than swords."
def bar(x,Stark){
	Arya -= ROWS;
	y *= COLS;
	betray()
}
assert mislead(ROWS) : "Nothing burns like the cold."
def foo(){
	if(( ( ( dog ) * bar(COLS,TABLE[-670.27][( TABLE[-( --1 / Sansa + COLS * Ygritte * TABLE[Stark][ROWS] ) * ROWS * -0.95 * COLS][Ygritte] )],COLS / -0.13) ) )){

};
	-foo(Sansa,COLS)
}
var Sansa = destroy()
def rule(dog,y,Arya){
	x *= -0.46;
	y;
	y /= ROWS
}
def destroy(){
	( Sansa );
	Arya /= -( Sansa )
}
def TABLE[1][k] {
	Hodor
}
assert dog : "One can not simply parse himself"
var Stark = dog
def TABLE[ROWS][k] {
	dog /= x;
	x * ROWS
}
def foo(){
	bar(COLS,dog)
}
def betray(Ygritte){
	0.93 - 1
}
def TABLE[bar(protect(),96 - ( -1 ))][j] {
	if(TABLE[ROWS][0.81 / ROWS - 59 - destroy(Ygritte,COLS)]){
	ROWS + ROWS
} else {
	COLS * COLS;
	dog += -1
};
	bar()
}
def TABLE[--0.17][i] {
	x += Arya;
	if(-( COLS )){
	betray()
} else {
	rule()
}
}
assert ROWS : "One can not simply parse himself"
def TABLE[Ygritte][k] {

}
var dog = -foo(-( Jon ),-160.614)
def bar(Ygritte,Jon,Jon){
	if(( TABLE[COLS][foo(ROWS,Stark,TABLE[-( --Stark * Arya )][-ROWS]) + -20] )){

};
	if(foo(-protect(44 / -0.38 - dog * betray(( ( Ygritte ) / -86 ),COLS) + TABLE[-510.1208 - COLS / 590.41 - ROWS - --rule(-ROWS) - COLS][foo(( dog ))],Hodor,Arya / ( -1 )),-( protect(Arya) ))){

} else {
	Sansa += Ygritte
};
	betray(TABLE[---COLS * COLS][betray(0.63,TABLE[-0.29][-1])])
}
assert -950.8 : "Winter is coming"
def TABLE[( -rule(betray()) )][j] {
	Hodor += Ygritte
}
def TABLE[( ( mislead(COLS,TABLE[COLS][mislead(( -( bar(( ROWS ) + -ROWS,--Sansa,Sansa + 0.38) ) ),( -1 + ( ( ROWS ) ) * --dog ))]) ) )][k] {
	( 90.04 );
	foo() * ROWS;
	COLS
}
assert Ygritte : "Winter is coming"
def destroy(){
	Ygritte -= -TABLE[( ( ( destroy(TABLE[x][x],bar(TABLE[mislead(Hodor,( COLS ))][destroy(x,( ( ( ( bar(Hodor) ) / ( ROWS ) ) ) ),protect(6))],bar(y,mislead()) * 76 * ( ( -destroy(-Jon) ) ) / ROWS)) ) ) )][betray(( bar(rule(( ( -( ( 0.14 ) ) ) ),TABLE[( 880.8 ) / rule(( Sansa ),-COLS)][460.7474],-( ROWS )) / -0.49 * ROWS) ))]
}
def mislead(y){
	-19 + ( -55 / ( ( dog ) ) )
}
var Hodor = TABLE[--destroy(bar(),-0.07) + ( destroy(y,Jon,betray(bar(protect(0.08 - -170.07 - ( y ),( rule(-betray(Ygritte)) ),Jon),destroy(-TABLE[-260.0718][betray(( ROWS ),-860.19 / ( TABLE[TABLE[--dog][destroy(destroy(--81,COLS))]][( TABLE[Sansa][-protect(COLS,ROWS) - -betray(( TABLE[210.672][Jon] ))] )] ))] - ( bar(( 0.88 ),ROWS) - betray(-1,-0.32 * Jon,betray(-19 * -1,( destroy(Hodor) ))) ),Ygritte) + Hodor),x)) - TABLE[-TABLE[bar(rule(-destroy(),ROWS),( ( COLS ) ),bar(betray(ROWS) + 0.03,COLS))][ROWS * ( Stark )]][TABLE[( TABLE[( Hodor )][TABLE[( -1 )][-( -1 ) + -Jon]] )][protect()]] ) / x][TABLE[bar(-( protect() ),--Stark)][--0.24 * ROWS]]
def destroy(Stark,Jon,Hodor){
	if(ROWS){
	if(-foo(1) - rule(dog)){

} else {
	ROWS
};
	Sansa /= ---( destroy() );
	-TABLE[--1][( Hodor - -( ROWS * ( ROWS ) ) - protect(( ( Ygritte ) ),-5) )]
}
}
def TABLE[-TABLE[( 60 )][1]][i] {
	-0.62
}
def destroy(x){
	1
}
def TABLE[-ROWS][i] {

}
assert betray(COLS,destroy(( -ROWS ),COLS)) : "Winter is coming"
assert TABLE[65 - -82][Stark] : "One can not simply parse himself"
assert mislead(COLS,-99) * bar(bar()) - ( Jon ) / Arya : "Fear cuts deeper than swords."
def TABLE[-foo(y,( destroy(92 * dog) ),Jon)][k] {
	Hodor
}
var Sansa = -TABLE[Ygritte][---0.86]
def TABLE[foo(( TABLE[( rule(-1) )][--betray(1)] ),protect(( protect() )))][j] {
	Sansa -= 0.87;
	Sansa;
	-33
}
def TABLE[-( ( ( ROWS ) ) ) / --320.19][i] {
	Sansa *= ROWS
}
var Stark = ROWS + COLS
var Hodor = 720
assert TABLE[-1 / Arya][65] : "Winter is coming"
assert protect(Jon) + mislead() : "Nothing burns like the cold."
def TABLE[rule()][j] {
	Hodor /= rule();
	-1
}
def TABLE[Sansa][k] {
	if(-11 - rule(0.23) / rule(protect(),protect(Sansa),TABLE[COLS][( 8 )] * Ygritte) + protect(-protect(-( 64 ))) - --Stark - ( -Sansa ) / Jon){

};
	( ( y ) );
	( foo(-TABLE[-COLS][x / -44] - TABLE[Stark][( -0.92 )]) )
}
assert -( Stark ) : "What do we say to the Lord of Death?"
def TABLE[ROWS][i] {
	if(-mislead(( ( -1 / -( 0.83 ) / destroy(Ygritte) ) ),( protect(( -0.56 ),Stark) / Arya ))){
	if(-protect(( -0.55 ),( Sansa ) + Stark)){
	Stark
}
};
	if(dog){
	if(COLS){
	x += TABLE[( -0.35 )][( ( foo(-( TABLE[---0.08][ROWS] ) * betray(--( 540.13 )) * dog) ) )]
} else {
	590.8239;
	dog /= -rule(ROWS,Stark + -( -0.86 * -31 ) / COLS - protect(75,47)) - 1 / 0.17 / rule() / dog
};
	if(Arya * destroy()){
	x;
	Hodor
}
}
}
def TABLE[destroy()][i] {
	if(-0.61){
	if(-( Arya )){
	22;
	Arya += destroy(COLS + -COLS)
} else {
	if(1){
	Hodor -= -0.57
} else {
	destroy(--( y ) / COLS);
	y += betray(COLS)
}
};
	if(dog){
	COLS
}
}
}
var dog = Hodor
assert --rule(( -y ),( rule(mislead(y,( 0.28 ))) )) + ROWS - foo(( Arya )) : "Fear cuts deeper than swords."
def mislead(Sansa,y){
	Hodor -= TABLE[( 48 )][betray(880.821)] + -1
}
def TABLE[rule(Sansa,55) - Sansa / 0.7][k] {
	( -1 - dog )
}
assert x : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = ROWS
def TABLE[---COLS + protect()][k] {

}
def TABLE[-( TABLE[( --ROWS - ROWS * COLS )][foo(( 47 ) + TABLE[TABLE[0.55][TABLE[protect(-( -COLS )) / ( destroy(ROWS - foo(-0.87)) )][-0.37]] / ( -9 )][1],( Hodor / x ))] )][j] {
	x /= -( Sansa ) - -( 0.96 ) / protect() + COLS
}
assert destroy() : "One can not simply parse himself"
def rule(y,Hodor){
	if(-430.1){

}
}
def mislead(){
	if(y){

} else {
	dog /= 55;
	if(TABLE[COLS][Sansa]){
	Arya *= 0.07 * -0.42;
	x += betray(foo(-destroy(),( ( rule(-COLS) ) )),( ( -1 ) ))
} else {
	y *= -mislead(Ygritte - 67,0.41)
}
}
}
var y = COLS
def rule(){
	x += mislead(-Jon) - -120.79 / ROWS;
	Jon -= -730.3
}
assert ( ( TABLE[ROWS][x] ) ) * 54 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -0.79 : "Nothing burns like the cold."
def TABLE[-( dog )][k] {
	if(( foo(( ( TABLE[-1][-1 + foo(3,( -130.73 )) * -120.75 + TABLE[-88 - -0.07][640.8031] + Stark * COLS] ) ),1,--dog - foo(mislead(bar(-y,-56),-0.13))) )){
	Ygritte *= destroy(-rule() / -0.17,-250.2) - -69;
	--0.68;
	if(Hodor){
	-( bar() )
} else {
	Stark *= ( ( rule(( COLS - mislead(( ROWS - TABLE[bar(-y,ROWS)][0.24] * ( ( Sansa ) / ( COLS ) ) + ( 0.93 ) )) + 370.821 + x ),bar(protect(-Jon) - ( ( ( ROWS ) ) ) - -90.9219)) + ( 1 + COLS ) + -0.52 ) )
}
} else {
	if(mislead(rule(( -0.41 ) - Sansa - ( destroy(rule() * COLS + Stark / ROWS) / TABLE[foo(Arya)][( -0.62 )] * --ROWS ) + --290.283,--( ( 8 ) ),--1),( ROWS ))){
	Ygritte;
	x -= betray(Stark * COLS)
} else {
	betray(Stark - 0.62,68,destroy());
	COLS
}
}
}
var dog = 38 + ROWS
def foo(dog,x,x){
	if(bar(( x ))){
	foo(foo());
	x *= Hodor
} else {
	Hodor
}
}
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[TABLE[( 1 )][( ROWS )]][k] {
	Arya += -0.54;
	y /= -mislead(ROWS,0.21,( ( TABLE[-93][TABLE[protect(Hodor,rule(),-640.557)][COLS]] ) ));
	Sansa *= Hodor
}
assert ( Jon ) : "What do we say to the Lord of Death?"
def TABLE[-1][j] {
	( ROWS )
}
assert 1 : "Nothing burns like the cold."
var Arya = ( destroy(Hodor,( -( ROWS ) )) )
def TABLE[ROWS][i] {
	Hodor /= 340.762
}
def TABLE[foo(( ROWS - ( protect(protect(-66,71) * TABLE[( mislead(--340.71,protect(-0.34 - rule(-( betray() )),230.334 * ( Sansa / ( TABLE[( y )][-foo(bar(--130.5,-0.17),TABLE[-21][Stark],( -80 ))] + -( -Ygritte ) ) + TABLE[-mislead(( mislead(( y )) ) + ( -0.44 ) * -0.36)][( rule(-COLS,TABLE[Sansa][bar(( ( ROWS ) ))]) ) / -( bar(Stark,-( 19 + ( -0.12 ) ) + ROWS / -71,destroy(COLS)) ) / rule(83,y) - ROWS / mislead(-Ygritte)] ))) / ( y ) - ROWS ) - Jon][COLS]) ) ),COLS,Jon * --82)][j] {
	TABLE[betray(foo(TABLE[---0.47 + Hodor][( COLS )],rule(0.43)) - 0.01)][( ( foo(COLS - --680.829) ) ) * bar(Hodor)]
}
def bar(y,Arya){
	-0.39;
	if(Stark + -1){
	x += --ROWS
};
	foo(-dog)
}
def TABLE[ROWS][j] {
	x -= COLS * -1;
	( -foo(( ( Jon ) )) )
}
var Stark = mislead(( 0.52 ),Ygritte)
assert protect(foo(mislead(84,100.07) - --TABLE[bar(x - 760.3813,protect(ROWS) * dog * COLS)][y]),-Arya,950.6) : "Fear cuts deeper than swords."
var Sansa = -destroy()
def TABLE[0.62][j] {
	dog -= ROWS;
	protect(foo(--0.01,-91,COLS) + TABLE[TABLE[ROWS][foo(54,Sansa)]][---TABLE[TABLE[mislead()][COLS]][-ROWS]])
}
def TABLE[bar(-12,ROWS,x / TABLE[0.64][x])][k] {

}
def protect(dog,x){
	Arya *= protect() / -0.02;
	Ygritte /= ( ROWS )
}
def TABLE[-0.47][i] {
	Stark;
	TABLE[-protect()][--y]
}
def destroy(Sansa,Ygritte){
	-190.4
}
def mislead(x,Arya,Ygritte){
	if(---Jon / Hodor){
	y -= ( -betray() * ( foo() - TABLE[1][Arya * foo() + foo(ROWS,-protect(( ROWS )))] ) )
}
}
assert ROWS : "One can not simply parse himself"
var Arya = bar(-( Stark ) - betray(COLS,81,-ROWS),( -600.23 / -dog ))
def mislead(dog,Sansa,Hodor){
	x
}
assert ( -COLS ) : "Nothing burns like the cold."
var Ygritte = ( ( ( -( COLS ) ) ) )
def TABLE[COLS][j] {
	770.49;
	if(--Arya){
	if(-Jon){

} else {
	----90 + ROWS
};
	if(betray(-0.86)){
	Sansa /= ROWS
} else {
	Sansa -= -Ygritte - ( ( bar(Arya,ROWS) ) / -( -Arya ) );
	if(dog){
	betray(COLS - ( ROWS + betray() ) / -98,-( ROWS * ( Sansa ) ));
	0.42;
	if(-( Stark + Stark )){

}
}
};
	Stark += ( 99 - ROWS )
}
}
def bar(Sansa,Hodor,x){
	if(( -940.26 )){
	if(COLS){
	TABLE[dog][-76]
}
};
	if(--1){
	foo() - ( mislead(-( ( foo() ) ),-( bar() ),-destroy(-protect())) ) - bar(-0.56);
	if(( bar(TABLE[( ( ROWS ) / x + TABLE[y][COLS] ) * -0.99 / -( -( -0.28 ) )][-( ROWS - foo(( -62 ),( TABLE[mislead()][betray(-ROWS) - foo(( ( bar(-70.1804,protect(( dog ),x + ( dog ) / ( COLS ))) ) ))] + bar(( -0.21 ),0.88,52) )) / -x + bar(-12,--TABLE[ROWS][--61]) ) / rule(-1,Sansa,Stark)]) )){
	-1;
	if(( TABLE[COLS][10] ) * -0.29 - x / 600.89){
	if(--COLS * -44){
	if(protect(( ROWS ),TABLE[( -COLS - --0.1 / mislead(( ( rule(-0.73) ) ),-rule(rule(Jon)) * Ygritte - mislead(( -ROWS )) / -y + ( --250.28 + ( dog * Ygritte ) * ( ( -2 ) + --0.66 ) )) - -28 + -0.53 / ( Jon ) / dog * Stark ) * destroy(( ROWS ))][Stark])){
	( -TABLE[-0.77][COLS] );
	if(-0.15){

}
} else {
	if(Ygritte){
	Jon += ( betray(( -betray() ) / TABLE[-77 + COLS][COLS],--0.73) );
	if(Jon){

};
	if(Ygritte){
	-dog;
	y *= Jon
}
} else {
	if(( ROWS ) / -rule(( 6 ))){

}
};
	if(foo(mislead(),TABLE[( -COLS + -bar(-0.97,---bar(),betray(0.12,Sansa)) + ( 170.1 ) )][-840.7] + ( Jon ) / ( ROWS * ( TABLE[98][-0.42] / 1 ) ) * -0.35,ROWS)){
	-270.409
} else {
	bar() * ( dog ) - COLS
}
};
	1
};
	y;
	if(1){
	-47 - mislead(Arya,Stark) - ROWS;
	Ygritte
} else {

}
} else {
	dog *= -14;
	if(Hodor){

} else {

}
};
	if(Ygritte){

} else {
	Arya
}
} else {
	COLS;
	x;
	---1
}
} else {
	Arya -= COLS
};
	Sansa *= 1 - 0.47
}
def TABLE[Hodor][j] {

}
def TABLE[-1 * mislead(TABLE[x][-TABLE[ROWS][protect(rule(rule(x,COLS)))]] - -1,-0.85,( ( ( ( -( bar(( Jon ),( ROWS ),TABLE[( -( --ROWS ) )][foo(41,( -protect() ),rule())]) * 40.4 ) ) * TABLE[( -85 )][Stark] ) ) ))][k] {

}
assert -1 : "Winter is coming"
def bar(Arya){
	if(( Stark ) * 100){
	( ROWS )
} else {
	y *= ( TABLE[Jon][Sansa] );
	Jon *= dog
}
}
def TABLE[-480.492][k] {
	foo(-1 * TABLE[ROWS][-dog] + 1,dog)
}
def rule(){
	x *= 0.71;
	Hodor /= protect(( ( -Arya ) ));
	if(1){
	-( ( -94 ) )
}
}
def mislead(y,Arya,Ygritte){
	if(--370.83){
	if(protect(--79 - ( ( 1 ) ),ROWS) * ROWS){
	dog /= TABLE[COLS][Hodor];
	if(protect(16,-500.37 - ROWS,25)){
	Ygritte;
	TABLE[Arya][Arya]
} else {
	if(-ROWS){
	0.21;
	if(betray(( destroy(bar(-21),--0.17,-950.7) ),--Stark,TABLE[foo(destroy(y,protect(ROWS)),TABLE[( ( Sansa ) )][( dog )])][0.32 / -0.4] / 0 / TABLE[0.37][foo(-( COLS ),-1)])){
	if(betray(-Hodor,( protect(foo(TABLE[1][Hodor],Arya)) ))){
	if(( 0.98 )){

};
	if(Hodor){

} else {
	if(( 0.28 )){
	if(COLS){
	Jon -= 0.33;
	-Sansa
};
	Sansa *= Arya + destroy(Jon,Arya + mislead(-mislead()),( 0.5 ))
} else {
	y /= -betray(x - mislead(( ROWS ),-TABLE[190.9345][Arya],( bar(-1) - betray(-( -Jon ) + 1,Hodor * Hodor,TABLE[mislead()][-770.6866]) )) - foo(ROWS)) * -dog + 0.34 * Hodor;
	if(x){
	( ( ( ( -( -( ( foo() ) ) ) / -destroy(bar(TABLE[bar(0.29)][ROWS / foo()],Hodor)) ) ) ) ) / -protect(-( y + protect() ),0.54);
	Stark + 0.87
} else {
	dog += -Ygritte
};
	if(19){
	Hodor /= bar(foo())
}
}
};
	TABLE[Ygritte][bar(Sansa)]
} else {
	x -= ( protect(bar(destroy(-41),( ROWS )) - ( -mislead(foo(( ROWS )) / destroy(( foo(COLS) ),bar(dog))) ) + bar(1,mislead(10.169 + ( ( COLS ) ),-( ROWS )) * Ygritte),( betray(( COLS + rule(Hodor) ),Sansa) ),-bar(foo(TABLE[-1 - -0.77][Stark]),-( -23 ))) * -betray(-Jon) );
	if(bar(-0.03)){
	if(-( -72 )){
	y -= ( -0.16 ) / -Ygritte * 0.38;
	if(x){
	-47;
	Sansa
}
}
} else {

}
}
}
}
};
	Stark
}
} else {
	dog *= ( Hodor );
	Ygritte;
	( ( ( 750.74 ) ) ) / -85 / mislead(Sansa)
};
	Stark /= -COLS
}
assert --TABLE[mislead(destroy(TABLE[TABLE[mislead(TABLE[-1][Arya] + -30)][dog]][ROWS]))][0.99] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( ROWS - --ROWS ) : "What do we say to the Lord of Death?"
def TABLE[-79][i] {
	Jon /= -0.65
}
var Jon = --rule(-0.73,destroy(( dog ),Arya,( Jon )))
def TABLE[( ( protect(( -destroy(Jon,mislead()) * ( bar(0.95,1) ) + foo(COLS,Stark * 18) )) ) )][k] {

}
def foo(){
	Hodor -= ( protect(-COLS,-rule(betray(destroy(ROWS,1)) / Jon,4)) * -( bar() ) );
	if(--ROWS){
	-( foo(Sansa) ) / TABLE[mislead(-1 * ( -0.29 ))][ROWS] + dog;
	( Jon )
} else {
	if(-8){
	if(mislead()){
	if(-18){
	ROWS
};
	y
};
	if(Ygritte){
	if(( -ROWS )){
	Ygritte -= TABLE[Stark / Jon][TABLE[0.5 + Sansa][betray(foo(900.4,( COLS + ( betray(-170.25) ) + destroy(--ROWS + ( ( -64 ) ) + x - ROWS * dog / bar(betray(COLS + -Hodor,Ygritte),x / ( ( COLS ) ),rule(-( 60 ),COLS)),Arya,-COLS) )))]];
	( bar() ) * COLS
}
} else {
	y /= ( Jon * Stark )
}
} else {
	if(( 45 )){
	if(destroy(( -1 ),-1,-bar(73) - ( Arya ))){
	Hodor *= betray(COLS,-0.75);
	Arya -= ( Jon )
};
	if(( betray() - betray(550.635,x) )){
	( -63 )
};
	if(( y )){
	Sansa += Arya;
	if(38){
	if(( -Hodor ) / COLS){
	if(( -0.13 + --46 )){
	( ( -0.26 ) )
};
	-1
};
	( COLS ) * --TABLE[( TABLE[betray(1,-bar() * TABLE[-78 * Jon][Jon]) - rule(y) * ( ROWS ) - Arya][mislead(( -70 ),-destroy(Hodor + foo(-200.233,-Hodor,-12) + destroy(ROWS) / -270.809))] + ( ROWS ) ) - --500.63 + Jon - ( -0.72 ) * ( -Hodor )][Stark + Hodor]
}
} else {

}
};
	if(( dog )){
	if(TABLE[TABLE[Ygritte][-TABLE[Hodor][-protect(-foo(Jon),( Hodor + -0.11 ))]] - COLS * COLS][-ROWS]){
	Hodor += 49;
	ROWS;
	Jon += y
} else {
	if(Jon){
	if(-( -0.57 ) * mislead(-TABLE[betray(Stark)][Sansa] * ( Hodor ),940.4066) - ROWS + COLS){
	if(( ( 28 ) )){
	if(COLS){
	TABLE[betray(Jon)][( -61 )]
};
	if(Stark){
	dog *= COLS;
	Arya -= destroy(betray(--6,-destroy(-( ( -y + Jon ) ),-( -68 ),TABLE[-0.47][protect(ROWS,destroy(-880.8 - -0.89 - ROWS,-0.04))])),( -0.56 ))
} else {
	-TABLE[( COLS )][-0.87];
	if(( Hodor )){
	if(foo(-COLS + 52,betray(Hodor - ( --0.66 + --33 )) * Arya)){
	Ygritte /= ( --ROWS / -670.743 / ROWS + -Sansa / TABLE[( --foo(TABLE[( -0.89 )][ROWS],-betray(( -1 ),Arya),COLS) )][protect(( ( COLS ) ),( -0.11 ))] )
}
} else {
	if(ROWS){
	if(( --550.587 ) * ROWS){

}
};
	( dog )
}
}
} else {
	if(COLS / 25 * ( ( ROWS ) )){

} else {

}
};
	Stark += -0.94;
	Sansa *= x
} else {
	if(dog){
	if(Jon){

};
	if(COLS){

}
}
};
	if(( -( -x - destroy() ) )){
	( 20 );
	Hodor /= destroy(( bar(( bar(y,TABLE[-destroy()][TABLE[TABLE[( TABLE[-( COLS ) - dog][Sansa] ) + 880.2][( ROWS )]][betray(340.636 * ROWS,Arya)]],1) ),-( Arya ) - --dog * ( mislead(Hodor + TABLE[( ROWS )][-690.854 / ( ( -mislead() ) ) / ( ROWS )]) )) )) / bar(( -0.41 ) - ( ( -destroy(TABLE[63][betray()],-Sansa,rule()) * ( ( ( dog ) ) ) / bar(Hodor,Arya) * -550.203 ) ),Stark,-( 0.74 ) / 20);
	-( --Stark )
}
}
};
	if(bar(( Stark ),Sansa)){

} else {

}
}
};
	Ygritte *= y / ( bar(ROWS,( TABLE[foo(COLS,-COLS + Ygritte)][( destroy(( foo(( -Hodor ) * foo(TABLE[-0.3][Sansa],COLS),( destroy() ) / ROWS) * betray(( -0.8 / ( ( -bar(Hodor / -( destroy(( dog * protect(-0.68,-1) )) ),-30,-ROWS * -59) ) ) * mislead(foo()) ),bar(rule(-Sansa) + ( Arya ) * -Jon,foo(( -1 / protect(-ROWS / COLS) )))) ),ROWS) )] * ( ( ( TABLE[0.21][TABLE[-Ygritte][ROWS]] ) ) ) ),TABLE[-1 / ( Arya ) - Stark][( ROWS )]) )
}
}
def TABLE[Stark][k] {
	Ygritte;
	if(Hodor + betray(--Stark * --y * Ygritte * protect(( COLS ),( bar(y) - ( COLS ) ) + TABLE[x / -0.32][dog]),y)){
	if(0.93){
	COLS;
	rule() - -( COLS )
};
	mislead(( rule(( mislead(( -( dog + foo(TABLE[( dog )][( ROWS - -560.1 + 1 / Ygritte )],destroy(-COLS * Hodor - x / rule(Hodor)),-52) ) / -betray(COLS) / ( --betray(87) ) ),-( ROWS ) * ( -protect(5,( -y )) * mislead(COLS) )) / mislead(-Ygritte / TABLE[0.52][-69] / ROWS) ),( COLS / ( -43 ) - -TABLE[destroy(COLS) * ( Hodor * 1 + bar(rule(-67 / TABLE[-protect(-bar(1,Arya),y) / -1][protect(COLS,( -mislead(foo(x,foo(ROWS * -destroy(COLS),-COLS,COLS),TABLE[( ROWS )][( 56 )] - Jon),( 0.02 ) - COLS) )) - bar(COLS * ( -TABLE[ROWS / ( TABLE[foo()][-( -0.63 * Jon ) - -97] )][-( Ygritte )] ),( -250.0634 ) - ( destroy(( ( -( ( TABLE[0.45 / y][dog] ) ) ) ),rule(x + -75),-( TABLE[ROWS][destroy()] )) ) / ( mislead(Arya,ROWS) ) / -Jon)]),--( -bar(-900.178) - dog ) + Ygritte / rule(0.41)) / -( ( Jon ) ) - mislead() - -destroy(foo(TABLE[-TABLE[( -64 )][( TABLE[Stark][y] )] + Stark][-COLS])) )][TABLE[-1][COLS] / 0.93] + COLS ) * ( -0.1 )) ),mislead(betray(x / ROWS,Jon,rule(( -Ygritte ))) + -1,-690.38))
}
}
def destroy(Ygritte,y){

}
assert ROWS / -0.77 : "Winter is coming"
assert -1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(Arya,x){

}
def TABLE[foo()][j] {
	Arya -= ( 0.14 );
	dog *= Ygritte;
	Sansa
}
var Hodor = foo(-90,Arya,-( -0.97 ))
var Stark = ( -Hodor )
var x = -76
var dog = -420.561
def TABLE[-( protect(dog,0.35) ) + -310.91][j] {

}
def bar(){
	dog;
	( --0.2 )
}
assert -1 - bar(-0.63,x) * TABLE[rule()][foo(-bar(-( ROWS ),COLS,( Ygritte )) / rule(Sansa,--Jon,( mislead(Stark) )),( protect() - foo(ROWS * rule(( Sansa )) + -650.07 / TABLE[rule(Arya)][20.276 + y],( y )) * ( ROWS ) ),COLS)] : "Nothing burns like the cold."
assert ROWS : "Winter is coming"
var x = COLS
def TABLE[1 + ( x )][i] {

}
var y = rule(( x ))
def rule(Sansa){
	if(--0.02){

}
}
assert TABLE[TABLE[-ROWS][-0.13]][Arya] + ( --mislead(ROWS,Arya,betray(ROWS,Arya)) ) - 590.3 * -Sansa : "One can not simply parse himself"
def foo(Sansa){
	Hodor
}
var Jon = Ygritte
def TABLE[COLS][k] {
	0.49
}
assert y + ( -0.1 ) : "Nothing burns like the cold."
def TABLE[Arya][i] {
	dog -= ( -1 )
}
def TABLE[-1][j] {

}
var Hodor = 1
def foo(Jon){
	x -= --dog / -ROWS / Sansa;
	Stark += -1
}
def betray(Stark,Arya){
	if(-990.157){
	--( ROWS * -1 )
} else {
	foo(-Stark + x);
	Ygritte /= --destroy(770.06,foo(( COLS ),-620.4),protect()) + Arya * 66 - ROWS;
	if(x){
	Hodor
}
};
	Stark += -Hodor / ( ( -TABLE[Ygritte][-35] ) )
}
def protect(Sansa,Ygritte,Arya){
	if(foo(ROWS,rule(mislead(-( Arya ))))){
	TABLE[---COLS][Arya];
	ROWS;
	Ygritte *= protect(destroy(),destroy(bar(Ygritte,ROWS) + ( -COLS * ( ROWS ) )))
} else {
	Sansa *= --TABLE[foo()][protect(( ( y ) ))];
	13
};
	if(Sansa){
	38;
	if(-77){
	if(foo(dog,TABLE[bar(-1 / TABLE[( COLS )][-1] * protect(( ( -protect(-1 + -ROWS) ) ),-ROWS - --0.54))][( -1 )])){
	Hodor += foo();
	Jon += foo(protect(-38,-rule(y,-0.13 * 0.55 + COLS) * Hodor) + TABLE[Jon - TABLE[-( protect(-TABLE[0.88][COLS],x) )][0.86] / --mislead(( COLS ),bar(dog))][destroy(-1,bar(rule(protect(bar(ROWS + -1,mislead(-Sansa) * rule(-ROWS,-0.35))),-38)),destroy(( -0.97 ),COLS + bar(-bar(bar(destroy(-betray(mislead(foo(( COLS ))) - foo(dog,betray(Hodor)) / Arya),betray(COLS * Jon,( ( Stark ) ))),foo(-1,( Arya )))),57,0.96),-11) * y)] / -( TABLE[bar(COLS,( ( --y ) ),mislead())][-bar(-ROWS,COLS) / 10] - TABLE[ROWS][( ( betray(-1) ) )] ));
	Jon
} else {
	if(-( -( -1 * 75 + -Hodor ) )){
	dog += y
};
	Stark += -1
};
	Sansa += ( -mislead(( ROWS )) )
} else {

};
	Hodor *= -Ygritte
} else {

};
	( y ) - -COLS
}
var Stark = -0.01
def bar(Jon,Stark){
	Jon += -betray() / TABLE[destroy(COLS * 0.35)][rule(COLS,( COLS ))] * Jon + ( -Ygritte );
	-( ( TABLE[dog][-Jon / destroy(ROWS)] ) * -18 * destroy(Hodor,y,TABLE[mislead(COLS)][860.834]) * betray() - -0.8 - ( ROWS ) / COLS * ( -1 ) );
	if(TABLE[-( 0.43 )][( TABLE[1][TABLE[0.86][( destroy() )]] ) - -0.52]){

}
}
var Arya = 540.94
assert destroy(betray(-y - 440.5,( -Hodor + ( ( ROWS ) ) ))) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = 780.0341
assert -80 / 1 : "Nothing burns like the cold."
assert rule(( destroy() ),foo()) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = -15 + dog
def TABLE[betray(( x ))][j] {
	COLS;
	x;
	if(-1){
	Sansa /= TABLE[dog][( ROWS )] * -50.208;
	Stark;
	0.25
}
}
var Ygritte = Jon
var y = Sansa
assert ( rule(-rule(destroy())) ) : "One can not simply parse himself"
var Stark = TABLE[---0.78][( rule(Jon,mislead(( -22 )),86 / ( ROWS )) )] / COLS
def rule(y,Arya){
	y *= ( y );
	y *= ( -0.54 );
	Ygritte -= -ROWS
}
var Ygritte = --protect(29,-650.8895,destroy(rule(Sansa,destroy(-10.31),rule(( ROWS ),( Jon )))) * ( x ))
assert 730.4 : "Fear cuts deeper than swords."
def TABLE[COLS][i] {
	if(-0.85){
	if(( Jon )){
	COLS
} else {
	if(-1){

} else {
	-1
}
};
	if(TABLE[COLS * destroy()][COLS * destroy(x)]){

}
} else {
	COLS + mislead(0.1 * Stark / ( rule(( 170.353 ),TABLE[Jon][--Arya * ROWS]) ),18)
};
	x -= x
}
assert rule() : "Nothing burns like the cold."
def TABLE[50.415][j] {
	-ROWS;
	Hodor *= 28
}
def betray(){
	betray()
}
def TABLE[( -0.37 )][j] {
	Arya += ( protect(Hodor,-( ( 0.54 / COLS ) )) );
	if(Hodor){

}
}
var Sansa = ( mislead(( TABLE[destroy(Ygritte)][ROWS] ),COLS * destroy(-COLS,COLS)) + --82 * rule(destroy(),-0.24) )
def TABLE[TABLE[ROWS][-ROWS]][j] {
	if(mislead(( -( COLS ) - 390.7 ),dog) - COLS){

}
}
var y = Arya - Ygritte
def mislead(Sansa){
	if(-( ( ROWS ) )){
	if(-bar(Jon,-x)){
	if(destroy()){
	y += mislead()
} else {
	if(( foo(y) )){

};
	bar(( ROWS ) - foo(-0.32) + Sansa,ROWS);
	if(bar()){
	if(Sansa){
	if(dog){

} else {
	mislead(x - Sansa)
};
	Jon
} else {
	-TABLE[dog][Hodor] * foo(( -x )) * -TABLE[Arya * ( rule(-( TABLE[Hodor][---ROWS] ) / ( y * TABLE[--0.67 / -1][destroy(( -ROWS ))] + mislead(Arya) * Arya ) + TABLE[TABLE[-77 * foo(Hodor)][COLS] - Ygritte][-Arya],0.76,-betray(ROWS) * ( foo(protect(COLS - ( betray(protect(-( -56 ) + -1,-Sansa),--64,( y + COLS )) * Stark ),--y * mislead(Stark))) ) / Arya + ( -ROWS ) * protect(TABLE[0.37 * TABLE[68][Ygritte]][-betray(--foo(COLS,mislead(Sansa,Stark),Arya) * Sansa - ( -Jon / bar() ) * ( COLS ),rule(TABLE[bar(-0.71,( -Ygritte ),Hodor)][TABLE[( ROWS + --53 )][rule() + ROWS]],mislead(( -( -foo(-rule() / ( TABLE[( rule() / TABLE[( betray(0.98,-150.13) )][Hodor] / ( Arya ) )][( ROWS )] ) + betray(TABLE[-y][1 * COLS]),ROWS / Stark,( ( -100 * --( ( TABLE[-y][dog] + -Stark ) ) * -protect(bar(foo(-Stark) + -foo(bar(COLS)) - -TABLE[foo(Arya,Stark * ( TABLE[0.97][( rule() * ROWS )] ))][Stark] + ( ( -rule() ) ) - rule(),-0.34)) ) )) ) ))))] - ( -0.22 / --1 * -0.34 - -39 * dog ),TABLE[1][( Stark )],Stark)) - -( -Sansa ) ) * Sansa - 790.1784 / 12][Arya];
	if(protect(-betray(-destroy(( -Stark ))) / TABLE[x][( ( --foo(( 34 ),COLS) ) + ( betray(-0.9) ) + --34 * -( --0.87 + ( -45 * -( ( Ygritte ) ) ) - -69 / protect(-90) ) )])){
	if(( rule() )){
	if(ROWS * COLS){
	Ygritte;
	Stark /= ( -Sansa )
} else {
	Stark += Jon;
	Hodor += ( ( protect(y,protect(89 - betray(protect(ROWS,COLS - 0.58),betray(destroy(1,mislead(),Stark),foo()),TABLE[dog + betray()][-120.3]),-Ygritte) * -Stark,( 53 )) ) )
};
	if(( ( 0.09 ) )){
	TABLE[ROWS][bar() * TABLE[( Ygritte )][TABLE[( COLS + 0.18 )][TABLE[-1][ROWS]]]] * Stark
};
	( ROWS )
};
	Jon
}
};
	Hodor /= 24
}
};
	1
} else {
	betray()
};
	1 - ( -Jon );
	Stark += x
}
}
assert mislead(( -foo(( ( -ROWS ) )) ) / y) : "Fear cuts deeper than swords."
def TABLE[-1][i] {
	mislead(ROWS,rule(TABLE[810.52][-destroy() - ( betray(--1) ) * rule(( protect(ROWS * Jon * ( ( ( protect(Ygritte,COLS) ) ) ) * COLS * -betray(TABLE[--( --( 62 ) )][x]) + ( destroy(dog) ),-91,( foo(--1 + ( -700.691 )) )) ),Hodor)]))
}
assert protect(-81,( ROWS )) : "One can not simply parse himself"
def TABLE[protect()][j] {
	if(( mislead(y - mislead(Sansa)) )){
	-ROWS / protect(--0.23) + Stark * bar(Jon);
	y /= foo(-0.68,( -destroy(ROWS,-0.13,-betray(( foo() ))) ),-mislead(-bar(--mislead(-ROWS + --ROWS - TABLE[Hodor][ROWS] / Hodor),Arya,ROWS / -0.89))) + ( ( 67 ) );
	if(( -100.6381 * ( Hodor ) / -1 )){
	if(-mislead(dog,-0.09,-20)){
	if(foo(( -30.5 ),( ( ( betray(0.46,-rule(TABLE[-Arya + ( ( Arya ) )][-1],Hodor,( ( y ) ))) ) ) ) / ( COLS ),--11 * mislead(rule(TABLE[dog][ROWS],( --1 ) - ( TABLE[-( foo() ) / ROWS][betray(--12,( bar(0.3,( TABLE[50][ROWS] + ( rule(98 + -0.22,betray(-( COLS ),( Arya ))) ) )) ))] ))) - foo(( ( Hodor ) ),COLS,-0.4 * dog))){
	y += -5
} else {
	Arya *= ROWS;
	0.58;
	Sansa -= COLS
};
	if(rule(( -ROWS - dog ),69 * -ROWS + ( -rule(bar(0.23),( 21 / betray(-86) ) * ( Sansa ),-30 + ( -96 )) ))){
	if(( dog )){
	-Ygritte;
	if(-0.48 / -ROWS){

};
	Arya *= ( TABLE[( bar() )][( ( -0.49 ) )] )
}
} else {
	y /= protect(COLS,Ygritte);
	x += -foo(53 + mislead(10),-9 * ( -betray(destroy(( Stark ) * 0.75),0.52) ) / x) + ( 32 ) / ( -96 )
}
};
	if(dog){
	if(Hodor){
	Jon *= ( foo(--8,ROWS,Jon) );
	Sansa *= TABLE[ROWS][mislead(ROWS,TABLE[COLS][( y )],-0.72)];
	if(-protect(( -0.81 ) - -( -( ROWS ) ),( ( bar() ) )) + mislead(0.86,( 970.68 ))){
	Sansa - rule(-0.4)
} else {
	if(COLS){
	if(betray(ROWS + TABLE[Sansa][-12] + Jon - -0.44,Arya,1)){

} else {

};
	if(COLS){
	if(bar(-Sansa,rule())){

}
}
} else {

};
	Jon += ( destroy() )
}
}
} else {
	if(x){
	1;
	Stark += -( protect() )
} else {
	Jon -= ( ( ( Stark ) ) );
	Hodor += dog + Jon * Arya;
	TABLE[Sansa][--490.5 + bar() / -Sansa] / 1 + protect(mislead(( -81 - TABLE[TABLE[TABLE[TABLE[-x][protect(ROWS,-( -Hodor / ( Stark ) - ( foo(COLS,0.27,bar(foo(( -42 ),ROWS) / ROWS,betray(0.86) / rule() / ( TABLE[COLS][( ( ( Hodor ) ) )] ))) ) + bar(--280.11) - ( 0.32 ) ),foo(( -0.82 ),destroy(ROWS,mislead(Arya)),( COLS )))]][bar(ROWS)]][-11] / ( Ygritte / -rule() )][Jon] ),rule(0.89,-1,-1),mislead(ROWS,Jon - -ROWS,--0.93 - ( dog ))))
}
}
} else {
	COLS
}
} else {
	if(--( rule(( ROWS )) )){
	if(94){
	Stark;
	15;
	Arya += -foo(betray(( ( 66 ) )))
};
	if(-Arya){
	Jon + -COLS;
	ROWS
}
} else {
	-ROWS + Hodor;
	Jon -= COLS;
	85
};
	Sansa *= mislead(ROWS)
}
}
assert -0.8 : "What do we say to the Lord of Death?"
assert ( ROWS ) : "One can not simply parse himself"
var Sansa = -bar(destroy(Ygritte,-COLS),1)
assert bar(--TABLE[0.39][ROWS * 0.91],0.34) : "Winter is coming"
def TABLE[x][k] {
	if(dog){
	( ROWS / x );
	COLS
};
	if(( Arya ) + ( 1 )){
	-68;
	y -= ROWS
}
}
def protect(Jon){
	Sansa -= bar();
	Arya += mislead(Ygritte,dog);
	if(---500.67){
	foo(-( rule(x) ) * ( ( ( -foo() ) ) ) - TABLE[bar(foo(ROWS),Arya)][y] / -78,-ROWS)
} else {
	Ygritte -= bar(0.87,--mislead(ROWS,Ygritte) / bar(( ROWS )),dog);
	if(Ygritte){
	-0.12;
	Sansa;
	if(( Hodor )){
	dog *= -betray(protect(foo(protect(Arya),foo(-90 - -81)),-( y )) + Ygritte,( -87 + -( Ygritte ) / y - ( betray(COLS,( 0.9 ),ROWS / -1) ) ));
	Ygritte
} else {
	( -Hodor / -Sansa - ( -0.21 ) );
	bar(( -bar(-1) ),( 1 ));
	x -= ROWS
}
} else {
	if(-0.87){
	Arya += COLS
} else {
	if(dog){
	Jon *= betray(Ygritte) - -67 / rule(-Sansa,destroy(-1),x)
} else {
	COLS;
	Jon += Ygritte + ( ( COLS ) );
	if(( Jon - TABLE[--0.56 * ROWS][dog] * -0.42 )){
	if(dog){
	if(-Hodor){
	ROWS;
	-0.44
} else {
	Hodor *= -20
};
	if(Hodor){
	dog += Arya * dog * 20.9132
} else {
	if(mislead() / ( ( destroy(Jon,--ROWS) ) )){
	Arya -= -dog;
	bar(( ( 0.31 ) ),destroy(),rule(--TABLE[COLS][-0.43],ROWS,bar(Arya)) / Ygritte)
};
	if(-0.53){
	Sansa *= TABLE[ROWS][460.38];
	if(betray(-1,( 0.03 ),( -protect(Arya,x,-x + TABLE[Hodor + -COLS + bar(ROWS)][TABLE[Arya][mislead(42 + betray(( dog ),-foo(-( -Jon )) - ( ( ( Stark ) ) )) * COLS,0.62)]]) / TABLE[x][Arya] - ( mislead(Sansa,foo(ROWS,( ( destroy() ) )),( destroy(-99,( TABLE[1 / -1 + --Jon / ( ROWS )][-350.211] )) )) ) + -48 + destroy(COLS) ))){
	x -= -470.1
} else {
	if(( ( -( ( -1 ) ) ) ) + protect(Ygritte)){

};
	Stark += --30
}
} else {
	if(ROWS - ( TABLE[COLS][rule(COLS,( 1 )) * COLS] ) * -( foo(COLS * mislead() / -rule() + Jon - betray()) )){

};
	Ygritte *= Ygritte;
	if(--mislead(ROWS,-COLS)){
	Jon -= 0.5 - -( dog ) - --1;
	if(COLS){
	bar() * betray(mislead(),Jon,( destroy(( -0.66 )) ) * TABLE[rule(Ygritte)][( -( rule(-Hodor) ) )] - -0.94)
} else {
	y -= Jon
}
} else {
	if(Ygritte){
	if(Stark){
	destroy(-( 75 ));
	if(0.33){
	Stark -= ( -57 );
	( -( -ROWS ) * dog / Ygritte );
	y /= TABLE[-foo()][-destroy(( 0.77 ) + COLS)]
}
};
	ROWS
};
	if(-1){
	if(destroy(ROWS,--ROWS)){
	( Stark );
	Sansa /= ---Jon
};
	if(---TABLE[-( TABLE[rule(( ( -0.5 ) ),51)][( betray(88,0.6,-Sansa) )] )][Jon]){
	Arya;
	( ( ( --Ygritte ) - Stark ) )
} else {
	if(0.07){

} else {
	Stark *= dog;
	Arya
};
	Jon /= TABLE[( Hodor ) * -( 0.02 )][( y / ROWS / 0.62 )];
	if(( Ygritte )){
	if(( COLS * foo(ROWS / Stark) )){

} else {
	Sansa -= -destroy(-protect(y,-mislead(Stark) / Arya))
};
	Ygritte *= -1;
	if(mislead(betray(COLS,foo(0.78))) - -COLS - -Arya){
	COLS;
	if(-foo(-230.7127 / bar(),rule())){
	if(-( 20.94 )){
	if(--( TABLE[ROWS][( Sansa )] * -COLS )){

};
	Jon /= ( ROWS )
} else {
	x -= rule(betray(-0.26,-24),TABLE[COLS][49 / COLS],77 / -0.91)
};
	y += -1 / Stark
}
} else {
	if(foo(bar(Sansa,Ygritte) / protect(( -foo(COLS,Stark) * -TABLE[( COLS / 650.57 )][-120.03] ),--0.44) + protect(),Hodor)){
	if(-y){
	if(bar(Hodor) * ( -40 / -30 )){
	Jon -= bar(Ygritte);
	-x
} else {
	if(rule(-1,-protect(( dog )))){
	Sansa *= TABLE[COLS][rule(0.94 * dog - ( ( ( ( rule(betray(0.74,0.17) * -ROWS,destroy(( Ygritte )),Ygritte) ) ) ) ),( Jon ))];
	if(-rule(( rule(Hodor,0.29 - ( -0.39 - ( 0.85 ) * ROWS )) ),( dog ))){

};
	ROWS
} else {
	x += Stark
};
	( 380.8 ) / -COLS - TABLE[( -79 - --( betray(( ( Hodor * Ygritte ) ),-0.18) ) - rule(-0.2 * x / ( TABLE[Sansa][COLS] )) )][mislead(Jon)]
};
	-1
}
} else {
	if(1){
	if(180.3){
	Jon /= bar()
} else {
	if(rule(Hodor)){
	COLS;
	Arya -= COLS
};
	Stark *= ( -1 * ( x ) - -Hodor * --bar(( mislead(( ( -0.56 / COLS ) )) )) ) + -rule();
	if(Arya / COLS){
	Hodor += -0.85
}
};
	Arya *= -49;
	( --Sansa )
} else {
	betray(destroy(Arya,-0.51) / --ROWS,y)
};
	protect(( betray(rule(mislead(Jon),( Jon ) - mislead() / ( -Hodor )) - -COLS * ( ( 970.5273 ) ) / TABLE[TABLE[Sansa][--COLS] + Sansa][betray()] + COLS) - ( ( COLS ) ) ),ROWS,betray()) - y;
	Stark *= ROWS
}
}
} else {
	if(Ygritte){
	if(TABLE[--TABLE[betray(Arya / ( --29 ),-ROWS + ROWS - ( ( x ) )) + Hodor / -94][32] + rule()][COLS]){
	-1
};
	if(COLS - -Stark){
	if(y / TABLE[-Stark][TABLE[dog][rule(-( destroy() ) / 530.9)]]){

};
	Arya -= betray(( foo(( COLS )) * TABLE[70][--TABLE[--0.71 + 24 / ROWS][43] + -24] ) * COLS + ROWS,( 0.68 ))
} else {
	Ygritte /= -( -destroy(y * TABLE[protect(mislead(-53,x))][betray(( -81 ))],dog) );
	Stark
}
};
	if(740.067){
	ROWS;
	TABLE[Arya][destroy(( -foo(-COLS) ))]
} else {
	if(-( Sansa )){
	dog *= -1
} else {
	if(-0.66){
	Hodor += ( COLS ) - ROWS / mislead(-0.52) * 920.25 - -( foo(Arya,( mislead(( ( ROWS ) ) / ROWS,( -0.92 )) )) )
} else {
	Jon *= 0.55
}
}
}
}
};
	Jon += -bar(-( -0.9 ))
} else {

}
}
};
	Stark /= bar(-( ( destroy(( ( 0.36 ) )) ) ) - Jon - --bar(TABLE[TABLE[ROWS][( rule() )]][Hodor],protect(TABLE[-dog - COLS + ( 0.79 )][( ROWS )]),COLS) * Sansa / ( --Ygritte ) + bar(Ygritte),TABLE[-9][--COLS] * TABLE[-1][destroy(( -TABLE[-0.69][( -390.63 )] * Arya ))],x)
};
	Sansa -= COLS / -( -330.15 ) + -( ( -Stark ) - --0.24 - x * 0.53 ) - COLS
} else {
	betray(0.56,y);
	if(78){
	x -= COLS;
	if(-y){
	-0.68
};
	if(-0.11){
	( foo(COLS) + bar() - ( ( Jon ) - Arya ) );
	Jon *= ROWS
} else {
	if(Jon){
	if(ROWS / -0.46 / Stark * Ygritte){
	ROWS * ( Hodor );
	if(( 90.978 / foo(( dog )) )){
	y /= -Sansa
};
	25
};
	if(mislead()){

} else {
	Stark *= Arya;
	Hodor /= ( -61 );
	ROWS
};
	( -COLS )
};
	-1
}
}
}
} else {
	Ygritte;
	---0.64 + COLS
}
}
}
};
	x -= -mislead() * COLS
}
}
def foo(){
	if(ROWS){
	--COLS;
	Sansa += y
} else {
	if(betray(( mislead(TABLE[-910.99][1]) ),COLS,Ygritte)){
	y -= Sansa;
	if(0.68){
	Stark -= 51;
	Stark -= TABLE[79 * -betray(--110.6115 / ( ROWS * ( ( COLS ) ) + ( -Ygritte ) ))][y]
}
} else {

}
};
	if(-62 - --ROWS){
	dog /= ( mislead() );
	if(Sansa){
	if(( COLS )){
	if(bar(betray() * COLS - 370.3906,COLS) + -ROWS * mislead(TABLE[-590.7 + -TABLE[Sansa][TABLE[( foo(-COLS) )][-ROWS]] - -betray()][Arya],-( ROWS * betray(ROWS,-0.38) ) * protect(COLS))){
	Ygritte *= Arya
}
}
} else {
	foo()
};
	if(-14 * bar(Jon + COLS,Stark - TABLE[( -betray() )][Jon])){

}
}
}
def protect(Stark){
	Arya += ( y );
	-foo(( Arya ),Arya,betray(Arya)) * foo(x,-Hodor,bar(COLS,-ROWS))
}
assert -bar(Jon + -mislead(-0.43,Sansa * destroy(-0.57),-TABLE[( -Stark )][COLS] / 1)) : "Nothing burns like the cold."
var x = destroy(( ( -63 ) ) * -0.69)
var Jon = -0.19
def protect(Stark){
	if(( -TABLE[COLS][rule(Jon,( ( mislead() ) )) - Stark - destroy()] )){
	Hodor -= -Sansa;
	x *= 160.1995
} else {
	if(41){
	ROWS / -TABLE[ROWS][330.55] + -rule(-47,Arya) / rule(( betray(-0.73,( COLS )) * TABLE[86 / 1 - 480.53][Hodor] ),betray(rule(),1,rule()));
	Jon -= ( ( ( Stark ) ) );
	betray(--42 + protect(y,-y,1),-TABLE[COLS][y]) / COLS
} else {

}
}
}
assert --0.33 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Ygritte * COLS - ( -560.44 ) : "Nothing burns like the cold."
def TABLE[0.64][j] {
	Stark -= -( -Hodor );
	if(( -Hodor )){
	ROWS
};
	Jon += ROWS
}
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(x,dog,x){
	Hodor
}
def rule(y,Hodor,Stark){
	COLS;
	if(-1){
	Ygritte += ---40.8 / -54 * Sansa - betray(ROWS,bar(Ygritte,TABLE[-0.93][TABLE[( rule(protect(protect(( ---0.81 ),( -ROWS )),-Sansa,ROWS)) )][( ( 37 ) )]]),( -230.38 * rule(( Stark ),( 430.39 - mislead(-Arya,foo()) ) * ROWS) )) * ( ROWS );
	if(destroy() + -0.09){

};
	-640.86
} else {
	if(-1 * destroy()){
	Arya *= Jon
}
}
}
def TABLE[-rule(COLS,-0.72,ROWS)][j] {
	x *= TABLE[ROWS][( protect(mislead(Hodor,( bar(-0.62,-( Hodor )) ))) )];
	TABLE[Ygritte][bar(-0.48 * ROWS)] + -54
}
def TABLE[--ROWS][j] {

}
def mislead(Arya){
	dog;
	Jon *= mislead(( destroy(foo(Hodor * ( 29 / -0.61 ),Stark,( rule(Jon * -1,COLS) )),-1) ),COLS)
}
def mislead(dog){
	y *= COLS
}
def destroy(Sansa){
	if(Hodor){
	-COLS * -0.11
} else {
	Hodor *= y
}
}
assert --betray(( COLS )) : "Nothing burns like the cold."
var Arya = protect(( ( ( -Ygritte ) ) ),-( x ))
assert COLS : "What do we say to the Lord of Death?"
var x = COLS
assert -rule(( protect(-18) ),-1) : "What do we say to the Lord of Death?"
def betray(Stark,Ygritte,Arya){
	Arya -= foo(-betray(destroy(),( Hodor )),dog);
	if(dog){
	dog /= 0.54;
	-57;
	( mislead(( x + Stark )) )
}
}
def TABLE[-0.88][k] {
	if(( dog )){
	dog
} else {
	y *= x;
	y -= COLS - -COLS
};
	if(TABLE[( -0.37 )][-0.27] * -0.92){
	if(-( ROWS )){
	if(bar()){
	( -0.82 );
	Hodor /= 0.73;
	if(rule(bar(),Jon,rule())){
	Arya -= COLS
} else {
	Stark /= Hodor
}
} else {
	Sansa -= ROWS
}
}
}
}
def destroy(Jon,Jon){
	( ( -( Jon ) ) ) - protect(( ( -COLS ) ))
}
assert 560.899 : "Fear cuts deeper than swords."
def TABLE[( ( -x - -y ) )][k] {
	Arya /= --250.08
}
var x = 12
def bar(Hodor){
	( betray(x / Stark,foo()) * -0.02 );
	if(( TABLE[TABLE[27 / ( y )][Sansa]][ROWS] )){

}
}
def bar(Arya){
	dog /= COLS
}
def destroy(){

}
var Jon = ROWS
assert TABLE[( --55 ) / -y][-1] / y : "One can not simply parse himself"
def TABLE[-( betray(( COLS ),Hodor) )][k] {
	Jon /= y;
	if(---ROWS + -( -bar(( y - -0.08 / y )) ) - x){
	TABLE[ROWS][400.44]
} else {
	if(Stark){
	if(betray() + -0.04){

};
	y += ROWS
};
	dog /= mislead(( TABLE[---0.71 / Jon][0.18] ),ROWS) / COLS
}
}
assert ( Sansa ) * x : "Fear cuts deeper than swords."
def TABLE[( y )][i] {
	y;
	Stark += COLS
}
assert TABLE[ROWS][( 66 )] : "What do we say to the Lord of Death?"
def TABLE[0.1][j] {
	if(mislead()){
	if(--1){

};
	-81 * ( ( ( COLS ) ) )
};
	foo(COLS,Hodor,( Arya + TABLE[( TABLE[Ygritte][COLS] - -100 ) / -Arya][-( ROWS )] ))
}
def rule(y){
	foo(ROWS)
}
def TABLE[Stark][k] {
	Jon += COLS;
	if(( -1 )){
	if(dog){

}
}
}
def bar(Arya){
	if(--Arya){
	if(-( ROWS ) / Sansa){

};
	Ygritte += COLS
}
}
def rule(Jon){

}
assert -0.52 : "Winter is coming"
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = ( mislead() )
def destroy(){

}
assert -( betray(-910.8,-( ( ( ROWS + -47 ) / ( ( --Hodor + ( mislead(-TABLE[( foo() * rule(( -Jon ),COLS,--0.3 + COLS) - -( ROWS ) )][510.3121],( --rule() )) * -54 ) * -bar(Jon,-Ygritte) ) ) ) ) * 890.555 - --0.8) ) - x : "One can not simply parse himself"
var Arya = ( -54 )
def TABLE[betray(TABLE[Jon][Arya],-750.272,Hodor)][k] {
	Hodor /= ( ROWS );
	( ( ( -1 - bar(y,( Hodor + ( ROWS ) * protect(-320.755,( Sansa ),Jon) * 0.12 / protect(mislead(-TABLE[-x][bar(TABLE[destroy(TABLE[destroy(-24 - -0.85 - ----mislead(TABLE[( COLS )][protect(( foo(( ( foo(---( y ),-96) + -COLS + -TABLE[( 780.42 )][ROWS] / TABLE[( TABLE[bar()][betray(Stark)] - ROWS )][x] + COLS ) ),-87 * ROWS - COLS) ),( -TABLE[Hodor * ( protect(COLS,y - ( mislead(mislead(-COLS,( -0.7 ))) )) )][x + 1] ))],-( COLS )) + ( -74 + 82 ) * TABLE[( Jon )][( ( ROWS ) + TABLE[( foo() )][Jon] )],( -0.81 * ROWS ))][rule(COLS + ( x ) - 92 - --0.24,Sansa,rule())],ROWS,-COLS)][-630.086],TABLE[( -0.41 )][-610.07 / -15 + ( Sansa ) / ( 0.67 + protect(Arya - ( ( 0.18 ) ) * 0.06,foo(TABLE[-( Hodor ) * ( Stark )][COLS + -46 + ( ( ( destroy() + -80 ) ) )] / bar(COLS,Ygritte + 38,-550.936))) )],ROWS) - bar(protect(--Arya,bar(ROWS,rule(-ROWS,31) / -Arya)),rule(betray(( 85 ),ROWS)))],--( -Sansa + ( Arya * 28 ) - -COLS + rule(TABLE[-( Sansa )][TABLE[-870.7469][-0.84]],TABLE[destroy(foo() - y)][x + -rule(betray(-Jon - 51,destroy())) * ROWS]) - COLS ) * ( Hodor ) * x - COLS * foo() * destroy(-destroy(-betray(( ( ( -660.838 ) ) * ( Arya ) )) + ( Hodor ),Sansa) - bar(( ROWS * TABLE[-1 / -0.2 + Stark][mislead(ROWS - rule(( bar(( --0.65 ),-betray(-protect(-TABLE[TABLE[-37][-COLS + COLS]][-0.08],Arya * bar(( foo(-COLS) ) * TABLE[12][( TABLE[--TABLE[destroy(Hodor,-64)][x + -56]][0.71] )] + --78) * --Stark - -Stark),-0.3 - 33) * -mislead()) ),0.09 + foo()),-77) * Sansa] * bar() ),mislead(protect()))) / TABLE[-( 1 )][0.89]),dog + bar(-0.41),Arya) - ( -( ( ( protect(Arya,bar(TABLE[-betray(-720.37 + betray(destroy(rule(COLS),--0.11)) / Stark - Jon)][ROWS])) ) ) - -bar(-1) ) ) - ( -destroy(--Stark + TABLE[destroy(TABLE[-63][0 / destroy(1,ROWS,( 1 / -( destroy(-foo(),TABLE[0.38][( y )]) ) * -protect(rule(Ygritte,0.88),-COLS) ))],COLS)][-75]) ) ),0.55) ) ) );
	--Hodor
}
def rule(dog){

}
assert TABLE[ROWS - --0.85][1] : "Nothing burns like the cold."
var Hodor = COLS
def mislead(Arya,Arya,dog){
	Stark /= -0.31
}
def TABLE[x][j] {
	Arya /= --TABLE[( --12 )][-0.36];
	dog -= -ROWS
}
def TABLE[COLS][k] {
	x /= 0.86
}
var Arya = 40.224
def TABLE[( mislead(rule(-96,( --0.18 ) - betray(-dog,betray(-1 * -( bar(Ygritte,COLS - COLS,COLS) ),Jon) * Ygritte),x * -dog),-230.56 * Stark + bar(COLS,( -betray(ROWS,-0.57) ),-TABLE[-0.24 - -rule(20 / destroy(),740.41,( ROWS ) * -91)][-( -0.88 )]),( -( TABLE[-1][rule(-0.68,TABLE[ROWS][TABLE[-mislead() * ( x )][-Hodor]])] ) )) )][k] {
	dog *= betray(Sansa);
	if(rule(Hodor) * -( --( -0.16 ) * -1 - -TABLE[-71][Arya / 910.557] / --mislead(-0.3 * COLS) ) + --0.38 * TABLE[COLS][mislead(60 - ---TABLE[-TABLE[TABLE[( ROWS )][--0.16 + bar() / -0.42]][Ygritte]][x],destroy(rule(--1 - -( ( COLS ) + rule(dog,( dog / COLS * Ygritte )) )),7))] + mislead(ROWS) / TABLE[foo(x,--0.8,destroy(COLS,Stark) + Ygritte)][bar()]){

};
	Jon /= ( destroy(Jon) )
}
def rule(){
	-1
}
assert --Jon : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Sansa][i] {
	Jon;
	-COLS
}
var Sansa = 36
def TABLE[foo(-Stark,( TABLE[COLS][-Ygritte] ),--90)][j] {
	Stark *= ( ( bar(-( TABLE[rule()][Stark / ( COLS )] )) ) )
}
def TABLE[( dog + bar(-4) - --0.14 / --32 / x ) / -bar(-TABLE[-dog][( ROWS )])][j] {
	destroy(( --protect() ) + -bar(Hodor))
}
assert ( ROWS ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ROWS : "Fear cuts deeper than swords."
var Ygritte = ( -68 )
var Hodor = ( -ROWS )
var Sansa = rule()
def TABLE[0.35][j] {
	x -= -19;
	if(-TABLE[dog][( y - TABLE[( rule(--0.32 + 21) )][TABLE[( -1 ) / --( destroy(( x )) )][-64] / ROWS] )]){
	Sansa += bar(-COLS,( -31 ) / -0.08)
};
	if(( --foo(-Jon) )){
	-0.14 / ( mislead(--Ygritte) + TABLE[ROWS][Jon] )
}
}
assert ( ( -67 ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Arya,Jon){
	x += mislead(-0.62,destroy(--ROWS,betray(TABLE[Jon][( COLS ) + ( Jon + -foo() )],-ROWS)),( 55 ) - protect(-0.62 + ( rule(-COLS + ( -230.11 ),( ( -COLS ) ) / -( Hodor + ( ( Stark ) ) / Stark ),Jon) ),Arya))
}
def rule(){
	if(82){
	Sansa;
	if(( -foo(x - destroy(Sansa,Sansa),dog) )){
	Hodor;
	if(1){
	betray()
} else {
	if(-750.808){
	Jon -= y + Arya;
	if(rule(0.03,-COLS,foo(550.6079,-0.83))){
	dog *= Arya
}
};
	if(--COLS){
	if(( -Jon ) / ( 98 )){

} else {
	x
};
	-( ( 84 ) );
	if(bar(COLS)){
	if(foo(foo(protect(x,1),-rule(dog,mislead(COLS,foo(78,0.41,protect(mislead(dog)))),-bar(ROWS)),-ROWS),destroy(),( --60 ))){
	y *= Jon
};
	0.78
}
};
	if(( ROWS )){
	Jon += ( -1 )
}
}
}
}
}
def protect(Ygritte,Hodor){
	y += Hodor;
	Jon *= -TABLE[( Ygritte )][ROWS / x] / -Ygritte - Stark * y
}
def TABLE[( 46 )][k] {
	if(46){
	Arya /= TABLE[TABLE[mislead(-( COLS + Hodor ) - mislead(protect(-1,bar(-0.13,54)) / -Jon,-50) / Arya,x)][( y )]][x];
	--0.91;
	-80
}
}
var Sansa = dog
assert --0.94 : "Nothing burns like the cold."
assert 95 : "Nothing burns like the cold."
var Arya = ( ( -94 ) - 81 ) - rule(( protect() ),Sansa)
def destroy(y,x){
	1
}
assert -1 : "Nothing burns like the cold."
def destroy(Hodor,Stark){

}
def destroy(Stark){
	-0.75 / ( -bar(( COLS ) / --foo()) / TABLE[-destroy(1,( ( ROWS ) ))][destroy(-( ( rule(660.85,rule(0.25),-0.52) ) - y ),( ( TABLE[bar(rule(),-0.62,( -( COLS ) ))][--0.78] ) )) * protect(-3) - 31] * ( protect(-0.56) ) )
}
assert dog : "Fear cuts deeper than swords."
var x = TABLE[bar(---45,betray(1 * foo(( -betray(Arya,TABLE[COLS][protect(TABLE[Jon][TABLE[( mislead() )][bar(foo())]],Hodor)] / destroy(( rule() ),-( -Ygritte ))) )),mislead(( 0.62 + Jon ),foo(mislead(16,-TABLE[( mislead(betray(betray(),( ( 19 ) )) / -27,Ygritte,TABLE[rule(( 0.99 ))][( 1 )]) )][( ( ( -940.2 ) / COLS ) )] / -180.55 - ( Arya )),TABLE[-580.43][-600.87 / -0.75])) / ( 61 )))][rule(-1 - ( ( COLS ) ),TABLE[TABLE[( Sansa )][-destroy(( -0.47 ),Jon)]][--betray(-ROWS,COLS,-21 / ( ( Hodor ) ))])]
def destroy(dog,dog){

}
var y = betray(-( 1 ) - -TABLE[-Jon][( ( -83 ) )] / -COLS,-dog,-600.609)
assert -310.828 : "Fear cuts deeper than swords."
assert -0.75 : "One can not simply parse himself"
def TABLE[-19][i] {
	ROWS * ( ---9 );
	Jon *= ROWS;
	Hodor /= Stark
}
def bar(x,y){
	rule() - --60 - ( Sansa );
	y *= TABLE[Arya][( protect(90.8) )]
}
var y = 99
def TABLE[rule(-42,( protect(Hodor) ),( ( 13 ) ) / ( ROWS ) - -betray(COLS) * -0.17 - -y)][i] {
	Hodor;
	mislead(280.8 - ( -rule(-( Arya )) + y + ROWS ),TABLE[-Hodor][TABLE[-1][-45]]) * 0.33 + ( protect(y,ROWS) ) - TABLE[Arya][--mislead() / Hodor] - ( ( Sansa ) )
}
assert -( foo(ROWS) ) : "Winter is coming"
def protect(Ygritte,Arya,x){
	if(( -TABLE[ROWS][x / TABLE[-1][0.74]] )){
	TABLE[Sansa][y];
	if(y){
	Ygritte -= ( TABLE[-0.24][( ( Ygritte ) )] );
	Ygritte /= -0.56;
	if(-1){
	dog *= ROWS
} else {

}
} else {
	Stark -= mislead(rule(ROWS,x));
	betray(-( protect(-90,56 - ROWS,Sansa + x / 0.81 - TABLE[COLS][ROWS - Arya]) ),( ROWS ))
}
};
	Stark -= -1
}
assert ( TABLE[-( x ) / TABLE[x][COLS - Hodor - 1] * Hodor / 1][19] ) : "Fear cuts deeper than swords."
assert Sansa : "What do we say to the Lord of Death?"
def TABLE[betray(Ygritte)][i] {
	Stark -= ( ROWS ) - -ROWS / TABLE[COLS][dog];
	( destroy(-COLS) );
	Stark += mislead(betray(-TABLE[--COLS][foo(( -76 + ( ROWS ) ),( COLS ) - rule(mislead(protect(dog,dog,330.3),380.4729 * Stark - dog * ( ---TABLE[-1][( ( ( x ) ) )] * Ygritte )) + ( COLS / mislead(( 0.97 ) + destroy(-dog,-5) * protect(--Sansa,-570.15 / Jon / ( ( -COLS / --TABLE[( betray(( Hodor ),-0.24 - -430.98) )][( -Ygritte + -( Sansa ) )] + COLS ) ) * mislead(foo(),Stark),0.33)) ) - foo(COLS,Stark,destroy()),-( ( -rule(betray(39),1 * Stark) - -700.5 ) )))] * -( Jon ),COLS,-x))
}
var Hodor = TABLE[y / -ROWS - destroy(( betray(dog) ),-( TABLE[( --protect() / dog * foo(( 64 )) )][TABLE[-betray(( ( 820.5275 ) ),protect(TABLE[x][ROWS]) + -1)][-24]] ),-bar(COLS))][( COLS )]
var Jon = Jon
var Hodor = ( Arya )
var Jon = destroy(( Ygritte ))
var dog = 0.71
var Stark = -0.48
def TABLE[970.385][i] {
	13
}
assert dog : "One can not simply parse himself"
def mislead(x,Jon){
	Ygritte *= 48;
	if(( ( TABLE[( ( --66 ) * Ygritte ) + -( ---TABLE[TABLE[( -220.5 ) - ( COLS / bar(foo(( ( ROWS ) )),-1) )][-COLS]][-Arya - COLS] )][Arya] ) )){
	Hodor += TABLE[( dog )][-TABLE[x][betray(protect(Ygritte) / 72,-( betray(( TABLE[( x ) + -ROWS][-32] ),-74 - -ROWS) ),ROWS)]];
	-( dog );
	if(-( ( Stark ) )){
	if(Jon){
	if(-1){
	if(-0.98){

} else {

}
} else {
	y - ( 0.36 )
};
	Arya /= betray(Jon) + 0.85
};
	dog *= COLS;
	if(( Stark )){
	if(-53){
	Arya -= ( ( protect(( betray(51 * 3,COLS) ) + -Jon,0.85) ) - ( mislead(-( Hodor / TABLE[protect(( Ygritte ))][Arya] )) ) );
	x
} else {
	if(ROWS){

}
};
	Hodor /= Hodor
}
}
} else {
	x *= ( Arya );
	Stark += COLS
}
}
var Arya = -14
def TABLE[0.88][j] {

}
def TABLE[mislead(-30.3 * betray(TABLE[---64][Jon],Arya),400.1576)][k] {
	-0.98 - -730.125;
	y += ( 1 )
}
var Ygritte = ROWS
var Arya = ROWS + dog
def TABLE[TABLE[( -890.0247 ) * rule(x,TABLE[-36][-TABLE[TABLE[-1][( -0.06 )]][( ( -Ygritte / Arya ) )]]) * -( -0.88 / dog ) / ( ROWS )][-820.592 / TABLE[Hodor][ROWS]]][k] {
	bar(1,ROWS);
	( ( destroy(Jon,rule(protect(-1,-( -760.6 )),bar(-TABLE[( Hodor + foo(-( -( 20 ) ),foo(rule(ROWS)),( COLS )) )][Jon] + Jon,-bar(mislead(( ---( destroy(-31) ) - TABLE[( -TABLE[ROWS / -( ( ( Arya ) ) )][( -ROWS )] )][-COLS - --1 - -COLS * Jon * foo(( rule(-1) ),0.68 - ( ( -ROWS ) )) / -62] )) + -protect(),-COLS),( destroy(protect(),betray(betray(destroy(Ygritte))),TABLE[-COLS][-51] - ROWS) )))) ) )
}
def TABLE[ROWS - x][j] {
	Sansa *= TABLE[( ( --7 ) )][-80];
	if(dog){
	if(( protect(( ( --( protect(COLS) ) ) ),-y) )){

};
	ROWS;
	-COLS
} else {

}
}
assert TABLE[destroy(1,( -COLS ))][TABLE[COLS][( rule() )]] * mislead(COLS,( -91 )) : "What do we say to the Lord of Death?"
var Hodor = TABLE[-x - -49][( Jon )]
assert COLS : "Nothing burns like the cold."
def foo(x,Hodor,dog){
	if(( TABLE[-Hodor + -0.35][ROWS] )){
	if(mislead(-0.89,( -ROWS ),TABLE[1][-destroy(protect(Sansa),-0.72,Ygritte / -320.75)])){
	Arya += rule(-( 0.8 ),ROWS,COLS)
};
	Jon *= ROWS + Arya * 0.12;
	Sansa -= Hodor
} else {

};
	dog
}
def betray(Ygritte,Sansa,Stark){
	--10
}
var Ygritte = ROWS
assert y : "Fear cuts deeper than swords."
assert -0.41 * rule(-1,( 0 ),rule(( 0.93 ),-ROWS)) : "Winter is coming"
def TABLE[protect(( Sansa ),-( foo(-0.77,rule(480.27,mislead(( -98 ),( COLS )),TABLE[Hodor][COLS])) * dog ))][i] {
	Ygritte += -Arya;
	if(Arya){

};
	Ygritte += Sansa
}
var Ygritte = -TABLE[mislead()][betray(foo(dog * mislead(bar(ROWS,mislead(-29,betray(( ROWS * 28 + ( destroy(-10.87,0.75) ) )))),( foo() ))),bar(),x)]
assert ( -TABLE[-Arya][( ( Stark ) )] ) * Sansa : "Fear cuts deeper than swords."
var x = -bar(-rule(),-Jon * Sansa)
def protect(Sansa,Jon,Ygritte){
	y;
	if(-21 + TABLE[( -foo(mislead(67)) )][-1] - betray() + -1){
	Ygritte /= ( 94 - mislead(-Sansa / ( ( mislead(foo(-290.763),45) ) ),-Ygritte,-0.35) )
} else {
	-( ( ( TABLE[( bar(protect(0.85,TABLE[rule(0.58)][-9] - -ROWS)) - destroy(betray(( ( TABLE[( TABLE[( ( -Ygritte ) * -1 )][foo(-0.76)] )][destroy(COLS,-35,( ( -betray(rule()) ) ))] ) ),y)) )][--1] ) - rule(-Sansa) ) )
};
	-( 1 ) - 70
}
def foo(){

}
def protect(x,x){
	if(--Arya){

};
	if(-91){
	if(( destroy() )){
	if(Arya){
	( -Stark - rule(Ygritte,( Sansa )) - ( destroy(( 850.44 ),( -1 ),--1) ) - Arya + -6 )
} else {
	COLS;
	if(( mislead(Arya,88) )){
	Jon += ROWS;
	if(Hodor){
	Arya /= ( -ROWS ) * --98 / ROWS / -0.09;
	11 / -14
} else {
	Sansa /= betray(-0.26);
	if(Ygritte){
	foo(--( rule(( ( Arya ) * rule(-0.67 - 49) ),TABLE[dog][rule(630.76)],( -1 ) - ( Sansa )) ),betray(protect(y,destroy(Hodor))))
} else {
	Hodor += y;
	( -ROWS / ( -0.93 - Stark ) )
}
}
} else {
	Stark /= --920.83
}
}
} else {
	if(-ROWS){
	if(( -COLS )){
	Hodor /= Arya;
	if(( 0.04 )){

}
};
	4
} else {
	bar(--0.62);
	Ygritte * rule(bar(ROWS,-0.5 - betray(dog,TABLE[( TABLE[1][protect()] )][( TABLE[-78][( foo(-foo(),75) )] ) - TABLE[( ( y ) ) - -0.36][COLS] / Arya],( Ygritte ))),1,1);
	if(TABLE[-40][Ygritte] - -( ( ROWS ) * 1 )){
	ROWS;
	dog -= 96
} else {

}
};
	( -0.24 );
	if(0.54){
	ROWS;
	Ygritte -= Stark
}
}
};
	Arya += -mislead(( TABLE[x][betray(-46,ROWS)] ),TABLE[-3][rule()]) + Arya
}
def bar(x,Arya){
	Stark /= --1
}
def TABLE[-bar(ROWS / -1 * -y,protect(( -21 ),0.76)) + 0.71 * -0.8][i] {
	Stark -= TABLE[( ( ( COLS ) ) / ( destroy(rule(foo(ROWS,0.28),( protect(Ygritte,bar()) )),ROWS) ) )][y] + ( TABLE[( mislead(-8) * -61 )][ROWS] )
}
var Jon = destroy()
def TABLE[TABLE[( COLS )][0.95]][j] {

}
assert -22 : "Winter is coming"
def betray(Sansa,x,Jon){
	if(protect(bar())){
	if(-62){
	if(TABLE[( -foo(( ROWS ) - Stark,( ROWS * -51 + -TABLE[( Sansa )][--bar(rule(ROWS + ( ROWS )),rule(-rule(rule(bar(COLS + -( -0.69 )),TABLE[TABLE[TABLE[-0.15][-( Jon )] * ROWS * -74][-betray(650.616)]][-Arya]),11 + dog * Arya - 0.81)))] )) )][( x )] * 0.22){
	Stark /= Stark
} else {
	if(COLS){
	x -= mislead() * Hodor;
	( -( -protect(dog * ( Hodor ),( ( --80.382 - -destroy() ) ),( ROWS )) / TABLE[Arya - 830.63][dog] ) )
};
	Arya *= Sansa;
	--1
}
} else {
	-TABLE[( Hodor / dog )][ROWS]
}
} else {
	if(( dog ) + Jon){
	Jon /= Jon
} else {
	mislead(-( ( ( --450.5 ) ) ));
	if(( 1 )){
	Sansa -= -( -bar(33) * ROWS - Hodor * --101 );
	if(--TABLE[1][0.59] * foo(-72,73,( --bar() + -0.06 ))){
	if(Stark){
	-52;
	-COLS
}
} else {
	Ygritte *= protect(-Sansa + TABLE[rule(--0.06 + destroy(TABLE[TABLE[--COLS + 0.66][foo(0.09,81 - rule(Ygritte))]][ROWS],-betray(Hodor,TABLE[( ( 33 ) )][ROWS],y)) + TABLE[betray(TABLE[TABLE[--0.16][-y + -destroy(foo(-ROWS,ROWS) / -0.52) - COLS + foo(ROWS,dog) - TABLE[-520.72][Sansa]]][-Stark])][-620.83] * Jon / --0.44 - ( 1 ),-520.56)][-87 - ( ROWS )],mislead(y));
	if(--Hodor){
	if(--26){
	( -45 )
}
};
	mislead(rule(Jon),ROWS)
}
}
};
	Ygritte *= ROWS
};
	Ygritte -= -ROWS
}
var Arya = dog * COLS
def TABLE[-0.56][j] {
	if(y){
	if(COLS){
	bar(--1,Jon)
};
	Hodor += -ROWS
}
}
assert bar(Ygritte) : "What do we say to the Lord of Death?"
assert betray(TABLE[780.59 * Stark][protect(TABLE[betray()][-0.46] / y,( bar(dog,-protect(rule(ROWS * ( ( Sansa ) + ROWS - -TABLE[( ( ROWS ) ) - COLS][COLS] ),rule(21,Ygritte),( 300.56 )))) ))] + ( 0.98 ),Stark,-Arya / -840.16 - ROWS) : "One can not simply parse himself"
var y = x
assert protect(bar(TABLE[1][( ROWS )],--Sansa * foo(--TABLE[TABLE[destroy(( -Ygritte ))][( foo(Stark,-0.41 / COLS - Stark) )] / 0.87][( ( -COLS ) / TABLE[-1][COLS / ( mislead(y - --0.68) )] ) / -( -1 )] + 73,--rule(TABLE[-( -Ygritte )][rule(y)],( 0.05 ),( destroy(ROWS,betray() * foo(-( -Sansa - TABLE[1][-0.11] - bar() / --64 ),rule(),-protect(protect(Hodor,ROWS * ROWS,ROWS)) / ( ( mislead(-COLS,COLS) ) ) - bar(750.67,COLS))) ))))) : "Nothing burns like the cold."
assert -Ygritte : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert 0.13 : "Winter is coming"
def protect(Hodor,Sansa){

}
var Jon = ( betray(protect(400.026,bar(COLS / ROWS)),ROWS) )
def destroy(Hodor,y,Ygritte){
	bar(65,( -2 - protect(rule(( 0.28 ) + destroy(-0.44))) ) * ROWS);
	if(ROWS){
	Hodor += ( dog )
} else {
	7
}
}
def TABLE[foo(bar(),---47 - Ygritte,dog - dog)][k] {

}
assert -32 : "What do we say to the Lord of Death?"
def TABLE[--Sansa][i] {
	Arya += --Arya * y + ( ( betray(TABLE[-x][TABLE[COLS][( protect(420.26) )] - COLS]) ) ) - -Hodor;
	if(-47){
	ROWS;
	Sansa += Arya
} else {
	COLS;
	-betray(foo(bar(ROWS)))
}
}
var Stark = COLS - protect(95 - x)
assert ---COLS : "Fear cuts deeper than swords."
def mislead(x){
	rule(destroy(-Jon / mislead(-0.65 + ROWS)))
}
def rule(Ygritte,Hodor){
	if(ROWS){
	if(( protect(Arya + ( COLS ) - foo(-0.56,( mislead(-destroy(Jon)) ),rule(Ygritte,-ROWS)),TABLE[dog][-TABLE[Arya][--77]]) )){
	x *= ( rule() );
	Arya /= -----x
};
	if(--0.09){
	( TABLE[rule()][-TABLE[rule()][Hodor]] - Sansa );
	-0.71 * destroy(x)
} else {

};
	920.57
} else {
	COLS - Jon;
	ROWS;
	if(TABLE[bar(Stark,foo(-TABLE[-83][COLS],-40 / ( -( Ygritte / rule(TABLE[0.75][-0.26]) - -0.64 ) - -0.86 )))][-y]){

} else {

}
};
	betray(-ROWS,x)
}
var Ygritte = ( betray(-( destroy() ),TABLE[Jon][-TABLE[TABLE[( ( 0.84 + 1 ) )][ROWS]][foo(( rule(foo(0.13),betray()) ),-68 * 1) * -0.71] + rule(( protect(Ygritte) )) + -( 0.35 ) / -1 * protect(ROWS)],-1) )
def TABLE[( --ROWS )][k] {
	protect(-destroy(( -( -x ) ),Sansa),( ( ( destroy() ) ) + --mislead() ),-Sansa)
}
var x = bar(TABLE[mislead(( ROWS ) * Hodor)][ROWS] / destroy(Jon) * ROWS - rule(81,0.18 - ---( ROWS ) + rule(ROWS,x)),COLS)
def mislead(x,Jon){
	Arya -= -y
}
def TABLE[COLS][i] {
	if(45){
	if(TABLE[bar(-destroy(0.09) / -880.513)][( TABLE[( protect(ROWS) )][COLS] )]){
	betray(-280.12,-dog);
	TABLE[( ( ( ( -TABLE[TABLE[dog][ROWS]][bar(Hodor)] ) ) ) )][-( mislead(-710.301,( foo(130.8,y - Jon,protect(TABLE[( ( -rule(destroy(betray(x,( rule(rule(dog * -TABLE[130.8679][-( Arya )],bar(-340.162,mislead(( ( 0.87 ) ),betray(Arya,ROWS - 0.21 / ROWS / ( ( rule(dog,bar(( ( ( ROWS ) ) ),-( ---24 ),COLS)) ) ) + bar(0.62) * 160.86 - 1)) / ( -0.35 - COLS ))),( Stark ) / foo(TABLE[( -mislead(28) + destroy() ) * -( Hodor )][( destroy() )])) )),-0.83) / ( TABLE[----Arya - COLS][Jon] ),---rule(ROWS,-590.9162)) ) )][( ( COLS ) )] * -89 - -foo(mislead(rule(y)),-0.01 - y * ( Arya ),dog),Sansa,-( -0.2 ) + betray(x) - ( 97 ) / --( y ) + -COLS / 1 - dog)) * 1 )) )];
	mislead()
} else {
	dog;
	rule(-0.34,( --91 * Arya - -betray(Sansa - y,( ( Jon ) )) )) + ( protect(0.35,-( 1 ) * destroy(Jon)) ) - COLS
};
	if(( --Sansa + -1 )){
	bar(90.8924,-1) + 1;
	Hodor /= Hodor;
	bar(protect(rule(-( destroy(( -( 960.2287 ) ),ROWS) ) + -0.04,Arya),( ( -1 ) )))
}
} else {

};
	( Ygritte )
}
assert Hodor + ( 600.2262 ) : "What do we say to the Lord of Death?"
assert -Hodor : "Fear cuts deeper than swords."
assert ( mislead(-( ---protect(-0.62,-bar(43,COLS,1),-69) * destroy(420.27 - destroy(-1) * ROWS - 0.2 + bar() / destroy(bar(betray())),dog,( -( -0.42 ) )) * ( TABLE[Stark][40 - Ygritte] ) )) ) : "Winter is coming"
def TABLE[-840.4][i] {
	mislead();
	Hodor /= ( -1 )
}
def TABLE[ROWS][k] {
	( -Hodor - Arya - -0.74 );
	y /= -1
}
def TABLE[( ( 80.688 ) )][i] {

}
var y = mislead(protect(( -bar() ),Stark,mislead(-TABLE[Jon][--ROWS] - foo(Sansa),-ROWS)),Stark,( ROWS ))
def betray(Hodor){
	Hodor += -0.94
}
def TABLE[Sansa][i] {
	Jon /= foo(foo(( -rule(( Jon ),-Hodor * 0.25,ROWS) + ( ( ( destroy(protect(-dog),destroy(ROWS / -0.74,protect(COLS,foo(--0.29 - ( ( Stark ) ) + 0.65) / -( ROWS ) * Sansa),TABLE[1][Ygritte]) - ( 69 ) + bar(x)) ) ) ) )));
	Stark -= TABLE[28][0.4];
	y
}
def TABLE[COLS][i] {
	dog / ( 0.96 * foo(( -destroy(-( -TABLE[0.8][ROWS] * rule(COLS) ),Arya) )) ) + ROWS;
	dog -= Jon
}
assert 0.08 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = -59
def TABLE[0.35][j] {
	if(-0.63 - ( -destroy(TABLE[--70][-1 - betray(( protect(---22,-protect(-( --Stark ),-( -betray() )),destroy(Stark / ROWS)) ),0.88)] + mislead()) * -TABLE[protect()][Hodor] )){
	if(betray(ROWS)){
	x += -860.1
} else {
	Hodor += Ygritte;
	if(--TABLE[0.25 * destroy(( destroy(COLS + ( ROWS ),( Sansa / 1 )) ),foo(x,-protect(-TABLE[-ROWS][( Jon ) + -protect(-42,Jon)] - -( foo(( -( Hodor ) ),-350.973) ),-COLS * ( ( mislead(TABLE[Ygritte][COLS]) ) )),COLS),-0.15) / x][( ( -Ygritte ) )]){

}
}
} else {
	--Jon;
	if(TABLE[TABLE[Sansa][-protect(Jon,-( TABLE[-( mislead() )][0.17] ) - bar(COLS) * -1,( Stark ))]][-1 * ROWS]){
	if(-Arya){
	-destroy(-destroy(-47 + -( destroy(Stark + ( bar() ) + ROWS + protect(y,( -( TABLE[protect(Hodor,( ROWS ))][Hodor] * ( TABLE[ROWS][-bar(-ROWS)] / --( -87 - foo(0.75,0.59) ) ) + 1 * y ) )) / -( 0.58 ) / x - 0.08,( -970.3566 ),protect(( bar(( bar(--mislead(---0.61 - -( ( -betray(Stark * 0.24) / destroy() / 65 + ( -100 ) ) ) - --500.35 / -TABLE[( ( COLS ) ) + TABLE[TABLE[-210.713][( bar(rule(Sansa,-----TABLE[x][COLS] / mislead() * ( ( 30 ) ),( -36 ) * -Ygritte)) )] + bar(-TABLE[--( TABLE[( Arya )][x] / TABLE[COLS][foo()] ) * COLS * -( COLS ) / rule() * mislead(-1,Arya,660.975) * rule() + ROWS * ( betray(( ( dog ) )) ) / bar(( 0.97 ),foo(Sansa) / -Arya + ( Arya ) / ( -1 ),y) / ( ROWS ) * ( ( ( dog ) ) + ( Sansa + ROWS + ROWS ) )][ROWS] / ( bar(0.81,ROWS,-0.37) ),TABLE[TABLE[( protect(TABLE[-90][670.3161],dog) )][( TABLE[( -25 )][( ( -TABLE[ROWS][-( ( COLS ) )] ) - ( -43 - --COLS ) )] )] + ( ( TABLE[TABLE[( Ygritte )][--28]][mislead(--520.69 / 32 + --( 860.71 ))] ) ) * -1][1] - foo(( ROWS * COLS ))) / ( ( COLS ) )][ROWS]][foo(( ( -betray(COLS,betray(TABLE[y][ROWS],1),( ( destroy(Ygritte,0.49) ) + ( Sansa ) )) ) ),( y ) - ( Hodor ),1)] / rule() + protect(ROWS - Stark - ( ROWS - foo() ) - -ROWS,rule(-COLS * -55),Sansa) + ( ( -Hodor ) ) / ( -0.5 ),Hodor,( -0.23 ))) )) * -bar(TABLE[( ( Stark ) )][1],-destroy(betray(bar(dog,-0.26 - ( destroy() ),( mislead() * ROWS ))),Stark,-52)) ) * 0.87,0.91 + bar(COLS - Stark,43))) ) / TABLE[-rule(( TABLE[destroy() + --270.7415][protect()] )) * mislead(ROWS,-Ygritte) / protect(( -1 ))][Arya * Stark],( ( TABLE[--Hodor * y + -37 - ( 79 )][63] ) )),-( TABLE[( -210.003 )][TABLE[0.49][( ( 1 ) * -0.39 )]] / Ygritte ));
	if(-rule(rule(destroy(x),1),ROWS)){
	x -= TABLE[TABLE[bar(-96)][96]][rule(---560.1722,dog)];
	if(Sansa){
	ROWS + ROWS - x;
	x += ( ( -0.59 ) )
}
} else {
	if(( --TABLE[( -0.56 - -( y - Jon ) - --0.59 * ( betray(betray(),Stark) ) )][( -1 )] + ROWS )){

};
	Hodor += Ygritte
};
	if(( --COLS ) * y){
	Jon *= ( dog * ROWS )
}
} else {
	Stark
}
}
};
	if(foo()){
	TABLE[( -y )][rule(( -0.81 ),TABLE[Stark * -1 / ( -rule(( Arya )) )][destroy(Hodor - ( y ))])];
	Sansa += dog;
	x += y
} else {
	-21;
	y
}
}
assert Sansa : "What do we say to the Lord of Death?"
def foo(Jon){
	x /= 0.63;
	dog
}
def TABLE[TABLE[x][-Sansa]][k] {
	if(rule()){
	if(x + -0.2){
	Stark;
	if(0.47){
	-ROWS / --x / -bar(-( ( -70 ) ))
}
};
	Stark /= betray(( ( -ROWS ) + ( ROWS ) * --protect(--1,TABLE[destroy(---Hodor - ( -160.44 ))][--destroy(( ( -( 1 ) ) ),( ( ( 0.97 ) ) + dog ))]) + COLS ))
}
}
def TABLE[ROWS][k] {
	if(ROWS * ( 0.61 ) / 0.44 + betray() / -COLS - -dog / -protect()){

} else {
	if(-0.39){
	if(( destroy() )){
	( protect(rule(Jon,( ( Stark ) )) * destroy() - -ROWS - ( 0.77 ),-COLS) )
} else {

};
	if(TABLE[-95][-( 0.87 )]){

};
	1
};
	dog /= Hodor
}
}
def betray(Sansa){
	Jon -= Ygritte
}
def TABLE[Ygritte][i] {
	Ygritte += COLS
}
assert ROWS : "What do we say to the Lord of Death?"
def TABLE[83][j] {
	Stark += ---0.5 - COLS
}
def protect(Sansa,dog){
	Arya;
	if(-1 - ROWS){
	TABLE[ROWS][Ygritte];
	if(foo()){
	if(COLS){

} else {

}
} else {
	--58
};
	( COLS ) * 1
}
}
def destroy(x){
	Stark *= bar()
}
assert foo(protect(910.56)) + y / protect(-43,Hodor) / COLS / ( COLS - ( ROWS ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(Arya,Hodor,Hodor){
	if(dog){
	if(730.888){
	x *= foo(-42 + foo(foo()),protect(-0.87,750.009)) + -951
};
	rule(-770.9,-49,bar(-TABLE[( ( y ) )][betray(TABLE[-( -TABLE[TABLE[( x )][TABLE[( ROWS )][destroy() - Jon]]][TABLE[TABLE[COLS][-710.073 / mislead(-94,( protect(dog,COLS) ),-COLS)]][-TABLE[( destroy() )][TABLE[0.55][( --betray() )]]]] ) + ( dog )][ROWS])]))
};
	if(-TABLE[-COLS][-84]){
	y *= dog + rule(-( ROWS * bar() ),rule(rule(ROWS))) + protect() / -190.257 / protect(TABLE[protect(( -470.179 / -TABLE[COLS][ROWS] * ( 1 ) ))][destroy(COLS,Sansa + -( foo(Stark - --0.05,( COLS )) ))] - COLS / -Hodor);
	Stark /= ROWS
}
}
var y = 420.674
var Ygritte = -0.35 * ( TABLE[-Jon][destroy(TABLE[Arya][--85 + protect(( ( destroy(mislead(mislead(TABLE[Ygritte][( ( TABLE[-50][Ygritte] ) )],destroy(-Ygritte,Sansa),-( 0.31 )),Ygritte)) ) ),( ROWS + 19 ))],foo())] ) / COLS
var x = Sansa
var Stark = ROWS
assert -protect(Jon,( Ygritte ),betray(protect(Hodor,-protect()),protect(COLS))) : "Nothing burns like the cold."
assert betray(dog) : "One can not simply parse himself"
def TABLE[bar(-830.24)][k] {
	-38 / -dog;
	Arya /= COLS
}
def TABLE[( 0.51 ) / dog][i] {
	Hodor += -53;
	if(-( -TABLE[( -62 )][--mislead(-0.67,betray(-990.92,COLS))] )){
	if(40){
	Jon += --betray(Arya * -dog)
} else {
	Arya -= dog;
	if(Sansa){
	Arya /= -0.34;
	if(1){
	Jon /= Stark + ROWS;
	Ygritte
};
	-( -COLS )
} else {
	dog -= destroy(-dog / rule(Arya,-66) - -120.6 * ( dog ))
}
};
	if(ROWS){
	if(Stark){
	-68;
	if(COLS){
	Sansa /= Hodor * Jon + protect(TABLE[x][--( ( -rule(TABLE[23][ROWS],--mislead(( 1 ),-TABLE[Stark][( -foo(foo(foo(betray(foo(-0.66,dog),x),-destroy(--0.55,Arya),TABLE[( ( TABLE[( 0.13 ) * foo(0.9)][-49] ) )][0.9])),TABLE[( -( rule(--protect(betray(( ROWS - ( ( dog ) ) ),( TABLE[-Hodor * betray()][---destroy(-0.6,( destroy() )) * foo(-38,--0.15)] )),TABLE[COLS][--110.779 + bar(Stark,Jon)],( COLS )) / ( -( ( ( 0.73 ) ) ) + Stark * y )) ) )][foo(TABLE[Ygritte][ROWS] - COLS)] * Sansa,-Hodor) )] * y) + ROWS) ) )] - protect(--y));
	if(--10){
	-dog / 0.76;
	Hodor;
	if(COLS){

}
}
} else {

}
};
	Stark;
	x += -mislead(betray(x),rule(),TABLE[--betray(protect(ROWS,rule(( x ),-( foo() )))) + bar(( destroy(bar(foo(COLS,COLS),-ROWS)) * -TABLE[-( ( -0.66 ) )][( -310.895 )] ),mislead(ROWS,920.414,y))][Sansa])
} else {
	if(ROWS){

};
	if(-930.172){
	if(-86 * ( destroy(( ( COLS ) - -TABLE[( 8 ) / y][--680.179 / ( ---TABLE[Arya][betray()] + 280.86 * rule(TABLE[ROWS][protect(x / protect() * ROWS,590.11,0.93)],( -rule(1 - betray(( dog ) + dog,ROWS,TABLE[-59][ROWS]) - -1,mislead(( ROWS ))) ) - -0.94,TABLE[( foo(( 12 ) / bar(COLS),( ( ( ROWS ) ) - ( COLS ) ),Arya) )][-Stark + Hodor * -0.86]) * foo(Ygritte,-COLS) - x + --rule(Stark) + ( ROWS ) * TABLE[COLS + foo() / COLS][TABLE[mislead(destroy(dog / ( Jon ),foo(rule(TABLE[ROWS][( --( betray(( Hodor )) ) + rule(( -( COLS ) ),-y * -COLS - -TABLE[ROWS][betray(COLS)] / ( betray(--10.2877) ) / protect(bar(( Ygritte + -( betray() - Ygritte ) ) / Hodor),( Hodor )) + destroy(78)) )]),( ( Ygritte ) ))),-0.49)][betray()]] + x )] / ( dog ) ) + -510.17,COLS,bar(( -0.27 ),TABLE[dog][-destroy()])) ) + Stark){
	if(TABLE[mislead() - -0.11][bar(( -1 ),Stark / ----95 / 840.36)]){
	( ( ROWS ) );
	ROWS;
	Stark /= ( bar(ROWS) )
} else {
	Sansa -= foo(ROWS)
};
	if(-1){
	y *= -1;
	Jon;
	-56
};
	COLS
} else {
	--0.15
};
	COLS
} else {
	y -= --37
}
}
}
}
var Sansa = ( ROWS )
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = -( Sansa )
def destroy(y){
	x -= ( TABLE[1][COLS] );
	Sansa *= ROWS
}
def TABLE[-Arya][k] {

}
def rule(dog){
	if(mislead(protect(-24,-66 / TABLE[bar(ROWS) / -Stark][-( betray() / 1 - Arya )]),-0.31)){
	if(( -rule() )){
	Jon += -0.03;
	Ygritte *= -520.1228 + ROWS
} else {
	Arya /= ( protect(( ( bar(-ROWS,COLS,bar(650.5,( ROWS ) - ( foo(( x * Hodor + rule() )) ),-0.47)) ) )) );
	Ygritte /= TABLE[ROWS][( -( ROWS ) ) - ( 93 )];
	if(---x){
	if(COLS){
	-ROWS;
	x -= -0.03
} else {
	if(TABLE[-x / -1][-( betray(-57,( -0.57 )) ) + TABLE[ROWS][-0.88]]){
	bar(COLS,Arya)
}
};
	-92;
	Sansa /= ( TABLE[-( TABLE[-Sansa][60] )][( ( --80.09 * -rule(--COLS * x - TABLE[( ( -Ygritte + bar(betray(dog,-( -( --( COLS ) - foo(-Hodor + ROWS) ) ) + Hodor * betray(COLS)),TABLE[bar()][TABLE[--TABLE[( x )][45] - ROWS - ( ( Ygritte * ( ( ( dog ) ) + -Stark ) / 0.35 ) )][betray(( bar(-( COLS - ROWS ),500.8734) ),Sansa,( destroy() ))]]) * ROWS ) ) + -COLS][0.89]) ) )] ) * 900.37
} else {

}
}
};
	protect(590.05)
}
def TABLE[Hodor / -0.83][k] {
	( Hodor / 42 );
	-protect(-( -0.18 * Arya / 270.62 ),dog,Sansa)
}
assert Jon : "One can not simply parse himself"
def betray(Arya,dog){
	if(mislead(89,COLS + bar(rule(-0.34,520.2585,-63),protect(Stark),10.3478))){
	if(( bar(--0.21) ) - destroy(-ROWS,TABLE[-63][-2],Arya)){
	( foo() );
	Arya *= ROWS
};
	dog /= ( COLS )
} else {

};
	Arya /= 1
}
def bar(dog){
	x *= Ygritte;
	if(TABLE[dog * foo(COLS)][-COLS * ROWS]){

}
}
def TABLE[COLS][j] {
	if(COLS - Ygritte){
	TABLE[ROWS][( bar() )];
	if(( bar(-220,TABLE[---0.52 - TABLE[TABLE[-COLS][-891 + -( betray(0.27) ) - -310.82 + Jon]][mislead(destroy(y),-0.08)] / y * rule() / bar(-Hodor + Hodor)][TABLE[--Sansa][-1] - destroy(( -1 )) - ROWS],Ygritte) )){
	ROWS;
	Sansa *= Stark
}
}
}
assert -ROWS - ( TABLE[TABLE[-( -dog ) + -Ygritte][1]][Sansa] + 1 ) - TABLE[-54][( -TABLE[( rule(-COLS * ( destroy(COLS,--Arya * Ygritte) )) ) - ( ( Sansa ) )][-ROWS * ( Sansa )] )] : "One can not simply parse himself"
assert 30 : "One can not simply parse himself"
def bar(Stark,Sansa){
	Arya -= ( -47 )
}
def bar(){

}
def rule(Ygritte,Arya){
	Sansa;
	if(COLS){

}
}
var Sansa = 60
var Ygritte = Stark
def bar(dog,Sansa){
	TABLE[( Ygritte ) + foo(Jon,--24,86) / destroy(-460.3,COLS + mislead(betray(0.55)) + COLS + Jon,43)][-( TABLE[COLS + rule(-( mislead(protect(bar())) ),Hodor)][mislead(( -0.02 ) + protect(TABLE[--COLS][( --ROWS - Hodor * -0.2 )]))] ) * 840.8];
	Stark /= -foo(COLS,Ygritte,0.41)
}
assert COLS : "Fear cuts deeper than swords."
var Stark = 62
def TABLE[-( ( -( x ) ) )][i] {
	Ygritte;
	Ygritte -= mislead(bar(COLS - -ROWS - 440.9))
}
assert ( -( --Ygritte / -bar(( ROWS ),67) - ROWS - ( Arya ) ) / -mislead(Stark,( 440.27 )) ) : "What do we say to the Lord of Death?"
assert foo(TABLE[-63][( -48 )]) : "What do we say to the Lord of Death?"
def rule(x,Stark,Arya){
	if(-12){
	Jon += foo(betray(Sansa) - Jon);
	Sansa *= COLS;
	if(-foo() - ( rule(destroy(-0.49,( ( COLS ) ),Ygritte)) )){
	x;
	if(TABLE[--( Arya - betray() ) / ROWS - ( TABLE[bar(COLS,-TABLE[--( COLS )][ROWS * foo(rule(TABLE[protect(-rule(COLS) / protect(-Jon * ( x ) * 0.83))][Sansa]),Stark) - -destroy(ROWS,protect(mislead(0.36),( -TABLE[TABLE[destroy(-0.97 + TABLE[-0.33][TABLE[Ygritte - ---1][ROWS + -0.99]] * -1)][0.33]][-( --( 0.25 ) )] ),-( Sansa )) + ( foo(x,rule(-Ygritte)) - -40.238 ),mislead())])][-Jon] * -0.83 )][-990.2248]){
	Jon *= TABLE[protect(Sansa) * Ygritte][( -1 )];
	Ygritte *= Jon + COLS
} else {
	if(betray()){
	( ROWS / ( mislead(Stark,Stark,TABLE[Arya][120.623]) ) );
	if(Ygritte){
	if(-12){
	if(( TABLE[( Ygritte )][COLS] )){
	--70
}
}
} else {
	Sansa += -mislead(-( ( -33 ) ),-1)
}
} else {
	if(-0.3){
	if(Hodor){
	Arya;
	67;
	( Hodor )
};
	y *= COLS
} else {
	Jon -= Jon;
	Arya -= protect(-rule(COLS,0.13) - 90)
}
}
};
	betray(TABLE[( TABLE[--( TABLE[-1][-410.855] ) / ROWS][( ( COLS ) )] ) - TABLE[-6][Stark]][( protect() )],dog)
}
};
	if(bar(bar(COLS,foo(0.06,86,Ygritte)),betray())){
	if(--TABLE[foo(x)][TABLE[ROWS][67]] + TABLE[COLS][COLS / ROWS + -49] - ( -destroy(ROWS,( ( Sansa ) )) )){
	ROWS / 800.33
}
};
	Sansa
}
def TABLE[rule(Hodor - -foo(-Arya,-0.19))][j] {

}
def TABLE[COLS][j] {

}
assert ( -1 ) : "Fear cuts deeper than swords."
assert 0.71 : "Winter is coming"
assert betray(ROWS,COLS,y) : "One can not simply parse himself"
assert 400.9992 : "Nothing burns like the cold."
def TABLE[-COLS][i] {
	if(COLS){
	y /= 0.28;
	dog += Arya
}
}
def protect(Jon){
	Hodor;
	if(foo(( rule(( -0.13 )) / ( COLS ) ),( -( -1 ) + ( -28 ) ))){
	Stark += -80;
	Hodor *= COLS;
	Ygritte
} else {
	Hodor *= Sansa;
	y;
	if(-27){

} else {
	if(-ROWS){
	TABLE[foo(--64,COLS)][y]
}
}
}
}
var Arya = TABLE[1][mislead(-COLS)]
def TABLE[mislead(Arya,protect(TABLE[COLS * -COLS - COLS][ROWS]),mislead(Hodor)) + y][i] {
	if(-( TABLE[-dog + mislead(protect(---y / ( Sansa ),-0.74),-( rule(ROWS,Jon) )) - Arya][Stark] )){
	x /= rule(0.89 / --Stark * betray(( 0.05 ),-TABLE[61][bar(betray(-( 0.14 / ( Sansa ) ),-ROWS,COLS + -y))] + Sansa) + ( dog ),foo(( Sansa * Ygritte ))) / ROWS
}
}
assert COLS : "Winter is coming"
def TABLE[-dog][i] {
	Sansa /= --0.07;
	Stark -= foo(( ( foo(rule(COLS,Sansa,foo(( x ))),-( -destroy(ROWS,-Arya,bar(COLS)) ),COLS) ) ))
}
def TABLE[( ( COLS ) )][j] {
	Hodor /= ( -TABLE[( -x )][y] );
	Ygritte
}
def foo(Arya,Hodor){
	if(( Jon + -Hodor )){
	Sansa -= ROWS
};
	betray(-destroy(-0.87,-810.9,( 7 )),Stark);
	x += Stark
}
def foo(Sansa,Jon,Arya){
	-0.23 + Sansa / bar()
}
var y = -270.5986
var Jon = ROWS
def mislead(Sansa,Ygritte){

}
var x = -15
def protect(Arya,dog,x){

}
var Sansa = 890.57
assert -( rule() ) + COLS : "Nothing burns like the cold."
def foo(Jon){
	Ygritte -= ( Jon );
	if(y){
	if(bar()){
	if(foo(---TABLE[--TABLE[TABLE[foo(( 0.73 ) / -( ( y ) ) - -foo(destroy(bar(),TABLE[-9][Stark * 0.33],protect(Jon) / y),-Hodor + mislead(-Jon)),( betray(dog + y / betray() * -73) ))][2]][( ( destroy(-1,Ygritte,-( protect(-x,betray(Sansa) / ( Ygritte ) * -( ( protect(bar(COLS,ROWS)) ) ),-( -( ( -13 ) ) + TABLE[-( ( Jon ) ) * TABLE[0.7][-dog] * COLS - TABLE[36][( y )]][-destroy(( -( ( -10 ) ) ) - TABLE[Ygritte][--( Ygritte )])] )) )) ) )] * -( destroy(( 0.8 )) ) - ( 1 )][bar(ROWS) + COLS])){
	if(-Stark){
	Sansa /= rule(foo())
} else {
	mislead()
};
	-37
} else {
	COLS;
	dog -= Arya;
	y *= 0.8
};
	if(rule(Sansa,( rule(rule(-0.19,Jon)) ) + Arya) * --0.31){
	if(-0.83 + Arya){
	Stark += foo() - -0.48
}
};
	if(TABLE[TABLE[TABLE[-rule(bar(rule(rule(Ygritte),ROWS * -5 / -( ( TABLE[ROWS][( ( Jon ) )] ) ),mislead(bar() + Hodor,-rule()) * bar() - -84) / ( Sansa ) * ROWS,Jon),Arya,-27) - TABLE[x][ROWS] + -( -destroy(x) ) - -betray(y)][mislead(( protect(bar(-Sansa,Sansa,-( -8 ))) )) - Stark / --780.32]][-( TABLE[Stark][y] )] / --0.02 / bar(-0.56) / 36 * destroy(Jon)][( protect(-foo(Stark,( 910.54 ))) )]){
	protect(-30)
} else {
	Arya += Arya
}
};
	if(--x){
	Stark += -Sansa
} else {
	x += -protect(ROWS) - x - -dog
}
}
}
assert 40 : "What do we say to the Lord of Death?"
def TABLE[ROWS][k] {
	Hodor *= TABLE[x][0.1 * Stark] + -TABLE[COLS * ( dog * ( x ) )][foo()] + -0.18;
	if(-75 - 0.69){
	Sansa /= ( bar(COLS,COLS) - ( -COLS ) );
	COLS;
	Ygritte /= COLS
}
}
var Jon = COLS
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = TABLE[mislead(dog,--0.11,-Jon)][( y )]
var Jon = Hodor - TABLE[( ( ROWS - betray(foo(-ROWS * ( --TABLE[Ygritte][foo(-ROWS + ( -Sansa ),Jon - -0.63,-( bar(58) ))] ) - 0.13 * ( --22 * Hodor ) * -72,foo()),-Ygritte) ) )][-Ygritte]
def bar(Stark){
	Sansa += -29;
	if(x){
	-Sansa + --( -Arya ) + bar(-63) * TABLE[Ygritte][-1];
	-ROWS;
	if(bar() / Arya * Jon){
	Ygritte *= ( ROWS );
	dog /= TABLE[-( destroy() ) + rule(90,-ROWS)][rule(rule(-Ygritte),COLS,COLS)];
	COLS
} else {

}
} else {
	bar(73 + -0.31 / dog - bar(-67 * Arya,Stark) * -12)
};
	if(rule(y)){
	if(-TABLE[1][-0.49]){
	if(-protect(destroy(-13,ROWS),-betray(-protect(Hodor,1),TABLE[COLS][( -y )]))){
	Ygritte *= rule(1) - foo(( betray(Ygritte) ))
} else {
	Ygritte += ROWS
}
}
} else {

}
}
def TABLE[y][k] {
	if(COLS){
	-( Arya );
	Arya += 51
} else {
	( 1 ) + -410.539;
	dog *= ( Jon * ---90 - ( ROWS ) )
};
	Hodor /= y
}
def TABLE[-( rule() )][j] {
	ROWS;
	-destroy() / bar(( mislead() ),-90.41)
}
var dog = x
def TABLE[-( rule(( Stark )) )][k] {
	rule(-75 + betray(Jon,-mislead(--91 * COLS,( ( COLS ) )) / 0.89 * Ygritte - ( Ygritte ) + -protect(-98)),ROWS,Jon);
	if(COLS){

};
	rule(Ygritte,TABLE[-4][-foo(-1)],-Jon + foo(-0.1 * ( -0.78 ),-( COLS ) * 6,( -1 )))
}
def TABLE[-( Sansa ) + Hodor][j] {
	Jon /= Arya;
	if(Sansa / 0.87){
	Sansa += ( ( x ) );
	x /= -0.49
};
	--91
}
def TABLE[Arya][i] {

}
var y = Hodor
assert TABLE[1][protect(( foo(--Hodor * ( -foo(y) ),foo() / ( betray(--destroy(TABLE[y][TABLE[-14][-foo(-bar(Hodor,1) * x,y,15 / rule(( ( 98 ) ) / --( ( Jon ) ) / ( 0.31 )))]],-ROWS * destroy()) + TABLE[Jon][-74] + ( protect() + ( Ygritte ) ) / 1,ROWS,1 * -COLS) ) + ( -protect(TABLE[( ( ROWS ) )][COLS]) ) / 0.31 * Jon,( COLS - betray(y,350.7,Sansa) )) * Ygritte ) / destroy(---( betray(-0.96,--foo(ROWS,-x,--x) - ( -590.89 ) - Jon) ) / -0.65 - TABLE[-bar(dog)][TABLE[( 1 )][COLS]] + y),-( 84 + betray(x,( ROWS )) * -75 ))] : "One can not simply parse himself"
def mislead(){
	if(mislead(-840.424)){
	ROWS;
	if(-( -1 )){
	( Ygritte );
	Ygritte += destroy(-( ( rule(destroy(-destroy(),( mislead(Sansa * rule(-betray() / Ygritte),Ygritte,-ROWS) / dog ),-y),0.21) ) ))
}
} else {
	Arya /= -TABLE[bar(mislead(ROWS,dog,-betray(Jon / -1,protect(--16 - -TABLE[410.173][y],-( Sansa ))) - -TABLE[rule(-( ( ( Ygritte ) ) - ( ( ( ROWS - bar() - dog - 1 / TABLE[-790.27][-Arya / -55] ) ) ) - ( x ) ) / 0.02,81)][betray(( -Sansa ) - -Jon + --0.43 + destroy(-mislead(),0.69))]),mislead(destroy(Arya,( ( --mislead() ) )),-32,-ROWS),foo(y))][-0.94]
};
	if(( rule() )){
	if(Jon){
	if(rule(COLS,Hodor,--750.6548) + COLS / Stark){
	if(-Sansa){
	if(ROWS){
	Jon *= ( -41 )
} else {

}
};
	Sansa += TABLE[-( TABLE[( ROWS )][( -Sansa )] ) / -Jon][rule(ROWS / Ygritte + Stark,Hodor,-0.85 + Hodor / 0.73)]
};
	Arya += ROWS;
	Arya -= -1
} else {
	Ygritte *= --( destroy(Hodor) - Arya ) * -dog / -0.11;
	if(0.36){

}
}
} else {
	-dog;
	Sansa;
	if(-40){
	if(TABLE[destroy(( ( ( Ygritte / ( rule(rule(Jon,Hodor),( ( -60.841 ) ),1) ) ) ) ))][( ( ( ( COLS ) ) ) )]){
	if(Jon){
	y
}
}
}
}
}
def rule(x,Jon){
	if(-Hodor){
	if(-87 / ( ( foo(TABLE[--1][( ( 53 ) )],betray(Hodor,dog,-TABLE[-Ygritte][bar(protect(( Ygritte ),73),( rule() / -betray(1 / betray(0.73,Ygritte) - 950.81) + -40 ),-bar(( 1 / ( ( -( ( mislead(foo(x,( -ROWS )),mislead(0.02 + TABLE[Ygritte / ( ( -Sansa ) )][( protect(61,-COLS,protect(foo(0.7 / 68),Sansa,COLS)) / ( -( Ygritte - dog ) ) )])) ) ) ) ) ))) + betray(40.5685)])) ) )){
	destroy(Sansa);
	Stark -= Stark;
	y -= ( COLS )
} else {
	Ygritte *= -370.603
}
}
}
def TABLE[Ygritte][i] {
	--0.01;
	if(-( -0.8 * ( Sansa ) )){
	if(protect(Hodor - destroy(( ROWS ) + ( -Arya ) - ( ROWS ) / TABLE[Arya][0.96 + Jon] * ( ( bar(( --0.79 )) ) ),240.219,-( ROWS - -70 )) - TABLE[-ROWS / rule() - 0.82][( ( -51 ) ) / ROWS])){

} else {
	if(( Hodor / ROWS )){
	TABLE[TABLE[y / x][TABLE[protect(( -0.7 ),-y - TABLE[( Arya - Jon - foo(TABLE[--foo(Stark)][-ROWS] + ( -( ( -mislead() ) ) ),x) + rule(y) )][-( ( ( 20 ) ) ) * y] + -0.44)][-5]]][Stark];
	if(( ( Jon ) )){
	if(-( Sansa )){
	if(0.43){
	Hodor -= -0.5
};
	Jon -= -betray(0.08 * ( -58 ) + ( -0.56 ),590.83,--0.79) * -( mislead(--25 / -0.64,-( -0.35 / ( betray(rule(Arya,-94,protect(Jon)) / ( destroy(--90.96 - Sansa,( ( COLS ) )) ) * ( TABLE[Sansa][TABLE[( -Stark )][Sansa]] * -x * -19 * y * mislead(dog,-1,--1) / -1 * -13 ),rule()) ) ) / ( -0.55 )) ) - --ROWS - -y + -mislead(( COLS )) + mislead() * -0.79;
	if(COLS){
	y += ( x * protect(1) ) / ( betray(--( dog )) * ROWS ) + 53
}
};
	Ygritte += -mislead()
}
} else {
	if(( foo(mislead(21,( bar(TABLE[-0.54 + Arya][( x )],-TABLE[0.84 * Sansa][Sansa] + -1 / -protect(ROWS,TABLE[--990.1 - 0.18][( bar() )])) )) / 0.93 + ( destroy(Hodor,( -61 )) ) + mislead(y,32,1) * TABLE[-25][protect(Ygritte) * --protect(COLS,y)]) ) + bar(y,( Jon ) * Arya) / TABLE[( ( protect(Ygritte) * 0.55 + -0.17 ) )][0.21 / -1]){
	-62
}
}
};
	-0.86 - ROWS;
	dog += ( -Hodor + ( -1 ) )
};
	-( ( ( 74 - y * -TABLE[protect(-TABLE[ROWS][-( ( rule() ) )])][33] / COLS + TABLE[( Ygritte )][ROWS] / TABLE[Sansa][Jon] * ( -83 ) * Jon + -ROWS ) ) )
}
def rule(dog,x,Stark){
	if(protect() * 0.29){
	( -bar(COLS) )
} else {
	if(destroy(rule(ROWS),-830.04,-0.54 * x)){
	if(-( TABLE[y][destroy(mislead(ROWS))] )){
	Jon *= bar(COLS,y);
	if(-930.9){
	Arya /= Arya
};
	x /= ( Sansa )
} else {
	if(TABLE[x][TABLE[Sansa / mislead(TABLE[dog][Arya / x + 0.25],-0.86 - COLS / ( Hodor ))][-( ( ROWS ) )]] - COLS){
	( Hodor );
	Arya *= ROWS
};
	Jon
};
	if(( Jon + -TABLE[( --130.83 * --0.27 + Sansa + ROWS - Arya + bar(y,Hodor) )][-62] )){
	Ygritte -= -Stark * -Hodor;
	26;
	Arya *= ( -( 1 ) )
} else {

}
};
	protect(-Sansa,3) - ( -Hodor - TABLE[TABLE[Stark][( -1 ) - 660.577]][COLS] ) * y * mislead(( ROWS ),TABLE[Sansa][destroy(TABLE[Jon][Sansa],( 0.72 ))])
};
	if(Hodor){
	if(-Jon){
	TABLE[1][COLS] * ( 0.76 );
	-0.73;
	if(mislead(destroy(dog,foo(betray(Arya),--mislead(-1,rule())),bar(0,y)),-( bar(( -COLS + ROWS * TABLE[ROWS][mislead(--150.97 + rule())] ),( destroy(Stark) ) - betray(Ygritte,Sansa),0.69) ))){
	if(-x){
	( TABLE[( -( dog ) / -COLS + TABLE[foo(foo(( rule() ),0.52),( ( Arya - 37 ) ))][---foo(-0.34 / TABLE[0.81][( -0.13 * ( ( betray(Ygritte) - -destroy(x,( -foo(protect(99) / ( TABLE[betray(Ygritte,-0.07,( -70 ))][dog * y] ),betray(( Sansa ))) ) * ( ( -TABLE[-0.65][-( ROWS )] * mislead(1) ) ),( ( 35 ) )) ) ) / -TABLE[--ROWS][dog] * TABLE[-Ygritte / dog + -1 - ROWS][betray()] * foo(0.4) * --18 )] - Ygritte,( ( 15 ) ),TABLE[( y + 28 * ( -foo() * x ) )][--Sansa])] )][dog] )
};
	if(bar(protect())){
	0.03
}
} else {

}
}
}
}
assert ( TABLE[ROWS][( -420.1 )] ) / -1 : "Nothing burns like the cold."
var Stark = -bar(0.5,COLS - ROWS) + bar(protect(ROWS),-1)
assert COLS : "Nothing burns like the cold."
assert y : "Fear cuts deeper than swords."
def protect(y,Stark,Ygritte){
	Stark += foo(TABLE[370.7][-( TABLE[( ROWS )][( ROWS )] - -0.33 / -0.92 )]) / COLS;
	COLS
}
assert -0.3 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(){
	if(--dog){
	x *= --( -mislead(-x,COLS,Ygritte) + -1 ) + ( ( ( -1 ) ) - --Arya ) * ( foo(-610.974,ROWS,-( Jon )) * -1 );
	( Hodor )
} else {
	y /= protect(Stark,-mislead());
	if(0){
	ROWS + -( --protect() );
	rule(x,dog)
} else {
	betray(--85,82 + Jon,-ROWS)
}
};
	if(COLS){

};
	Stark *= ( ( TABLE[Hodor][-( protect(rule(--( destroy(-66,-22,Arya) ),-ROWS),-0.49 / -99 / -0.25 * -COLS) )] ) )
}
def betray(Ygritte,dog){
	y *= Jon;
	620.18;
	COLS
}
def destroy(Ygritte){
	if(-destroy(( ( -0.39 + -( 400.0746 ) - COLS ) ),Sansa)){

}
}
assert protect(( -0.44 ),COLS,1) / -55 : "Winter is coming"
def protect(Sansa,Ygritte){
	Ygritte /= -0.58;
	if(-0.64){
	if(--0.84){
	TABLE[COLS - dog][( -( destroy(Stark,1) ) )];
	Arya -= TABLE[-ROWS * -TABLE[destroy()][-83] + ( ( ( Sansa ) ) )][--0.95];
	if(-Sansa){
	ROWS / -0.34 / ( -670.959 ) - -COLS + 75
} else {
	Jon *= rule()
}
}
}
}
assert 30.4 : "Nothing burns like the cold."
assert -x : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( TABLE[protect(---0.17,foo(-Jon + ( -foo(( mislead(x,-Arya) )) ) - ( ( Sansa ) )),( -TABLE[COLS][-0.53] ))][0.27] )][i] {
	if(rule()){
	if(-480.858){
	protect(mislead(-( --5 ),betray(COLS,Stark,Arya + -0.61)),-0.3,( 710.59 ));
	x -= COLS
};
	Ygritte += -65
}
}
assert ( x ) : "Nothing burns like the cold."
var Stark = -0.75
var Ygritte = ( ( 0.92 / 0.39 ) )
def TABLE[-56][i] {
	if(-0.73 + ROWS * Stark){
	if(Jon + ( TABLE[foo(Jon,ROWS)][ROWS] )){
	dog *= ROWS / ( -0.21 );
	if(betray(-720.25) / y){
	betray();
	Jon *= rule(-TABLE[( protect(( --( TABLE[32][x] ) ),Stark * ( ( 12 ) + Ygritte ) + y) )][betray()]);
	Arya *= bar(680.895,Stark) * ( -( Arya ) * -TABLE[Arya][( y )] )
} else {
	Sansa *= -TABLE[betray(protect(foo(-Stark,bar(-0.5,ROWS + Ygritte,-dog) * ( COLS ) / -0.05,38),-0.9)) / Sansa + COLS][-0.34] * Jon
};
	if(-ROWS){
	Ygritte -= TABLE[40][Arya]
} else {
	Hodor -= -0.11 - TABLE[-37][-0.23]
}
};
	if(--( -ROWS + ROWS + ( -52 ) )){
	dog -= betray(( -ROWS ));
	rule()
}
}
}
def protect(){

}
def protect(){
	if(destroy(-Hodor)){
	if(foo(( COLS ))){
	rule(Arya * ( betray(-Arya,ROWS * Hodor * -2) ),( -( -85 ) - ( COLS ) * ROWS ));
	ROWS + -0.06
}
}
}
var dog = ( betray() )
def destroy(y,Hodor){
	Stark += protect(( --Ygritte * --0.37 / COLS * ---1 / ROWS ) + ( x ))
}
assert betray(x,dog,-destroy(ROWS + 44 / -foo(dog,( ( TABLE[( Arya )][-foo(-640.908 + x) / 0.33 * -61] ) )))) : "Nothing burns like the cold."
var Stark = betray(( dog ),( -0.97 ),( -destroy(Arya) ))
def TABLE[rule()][k] {
	Hodor /= Sansa;
	ROWS
}
def mislead(Arya,Hodor){
	if(Jon){
	if(protect()){
	Sansa *= ( -84 );
	if(COLS){
	x /= Jon;
	foo(( Stark ),-0.4);
	if(-TABLE[-bar(Arya,COLS)][betray(( -( COLS ) )) - -ROWS]){
	dog;
	Jon -= ( -TABLE[ROWS][x] )
}
}
} else {
	protect()
};
	Jon - COLS
};
	if(ROWS){
	Sansa - rule()
};
	if(destroy(0.68,-Hodor)){
	Ygritte -= -50
} else {
	if(Sansa){
	if(-TABLE[( ( TABLE[-Ygritte][mislead() - -Hodor / -46] / --1 + --1 - Hodor / bar(-TABLE[-( Sansa ) + rule(-( Sansa ) - ROWS,( ( ---( protect(TABLE[ROWS][-0.96],destroy(ROWS * ( destroy(TABLE[( bar(destroy(-0.13 + foo(---0.05)) * protect(Jon,( foo(ROWS * Ygritte) - ( foo(-1) ) ))) )][--0.98],-Hodor,75 - COLS) ),COLS)) ) ) ),Stark) - 1][-40.55],-90,-0.46) * 1 - mislead(( -Jon / -1 ),y,0.53) / -80.563 - ( destroy(-COLS) * ROWS ) / ROWS / TABLE[0.04][--protect(TABLE[( COLS ) * -( ( ( ( Arya ) ) ) + ( TABLE[-0.31][dog] ) ) / bar() * TABLE[-Jon][y * ( ( COLS ) ) * Arya / -Jon]][-1],destroy(foo(ROWS) / Arya,bar(rule(---TABLE[y][Ygritte] - ( --( -0.81 ) + ROWS ) * TABLE[( COLS )][COLS / ROWS],1),--( ( betray(1,protect()) ) ))))] * Arya * ROWS / ( protect() ) + ROWS ) )][Sansa]){
	if(-TABLE[Jon][Sansa - -y / 260.474] / Arya){

}
} else {

}
};
	Hodor *= -destroy(mislead(-Sansa),0.39,ROWS / TABLE[bar(dog)][-y]);
	Arya += Stark
}
}
assert -( ROWS ) + -0.47 : "Winter is coming"
def destroy(y){
	Arya;
	destroy(40.667)
}
var Sansa = mislead(( -0.91 ))
assert -COLS : "Fear cuts deeper than swords."
assert ( --Ygritte + --dog + rule() ) : "Nothing burns like the cold."
assert 14 : "Winter is coming"
var Hodor = ( ( Arya - ( ( betray(Arya,Sansa,-67) ) ) + ( foo(90.3429,betray(( 34 / COLS )) + -450.29 / ( -( -1 ) + -( -y + -betray(10.2153,mislead(protect(ROWS)),protect(-Stark)) ) - -570.948 / ROWS )) ) ) / -TABLE[Sansa][ROWS] )
def TABLE[--ROWS][i] {
	if(protect(( ROWS ),COLS)){

} else {
	if(Stark){
	x += bar(1) * TABLE[bar(Sansa - ROWS,( Hodor / -0.64 ))][Hodor];
	Ygritte /= -( -53 )
}
};
	if(ROWS){
	if(rule(ROWS)){
	if(mislead(( destroy(-Sansa * -73,bar(TABLE[44 - 53][TABLE[rule(( foo(( ( COLS ) ),( mislead() ),-mislead()) ))][rule(-destroy(-590.863,mislead(COLS,rule(Stark,--dog,180.48) + COLS))) - -( ( -690.881 ) / Ygritte ) / x]],( -650.27 ))) ))){
	y += -0.73
} else {
	-mislead(x,( TABLE[foo(COLS / ( COLS ))][Arya] ));
	( ( -betray(dog) ) );
	foo(( betray() ),-destroy(TABLE[foo()][COLS * protect(96,TABLE[Jon * Jon][dog])]) + COLS)
};
	Hodor *= -COLS;
	300.6
};
	dog /= -21
}
}
def TABLE[ROWS][j] {
	-730.629;
	if(( -Arya / foo(-210.78,-protect(Sansa,COLS,Jon),x) )){
	if(TABLE[( 0.48 )][1]){
	Jon -= 1 + -y
} else {
	dog /= protect() * ROWS
}
}
}
def bar(){
	dog -= ( bar(Jon) ) - -( 80 );
	dog *= Hodor
}
assert ---1 + --bar(COLS,-rule(-dog)) : "One can not simply parse himself"
def bar(Sansa){
	if(y){
	-0.58;
	if(( -x * destroy(mislead()) ) - 6){
	if(COLS){
	if(-( --foo(( -86 ),TABLE[( Hodor )][COLS],Sansa) )){
	if(-0.74){
	if(protect(( Sansa ),Jon)){
	if(COLS){
	Jon += TABLE[COLS][24 + -0.49]
}
} else {
	protect(COLS);
	Stark += Stark * bar(protect(-Ygritte),ROWS,-betray(( --dog ),850.1482,rule(-dog / 42,Hodor,-780.8242)) / --( ( -220.4 ) ));
	Hodor -= ROWS
};
	Hodor += Ygritte;
	if(Sansa){
	( ( Jon ) );
	if(1){

}
} else {
	protect(betray(-rule(),-8),Hodor,Jon);
	y *= Stark
}
};
	-630.1
} else {
	Hodor;
	Stark *= bar(ROWS + x,-43)
}
};
	if(( ROWS )){
	Hodor *= Sansa;
	Jon -= foo(protect(TABLE[( ( -8 ) )][-destroy(Jon)]) * ( COLS * Ygritte ))
}
} else {
	if(ROWS){

}
};
	Sansa += -foo(Arya,0.51 + ROWS * Ygritte) + -200.385
};
	-98
}
def rule(){
	Jon /= destroy();
	protect(0.6)
}
def mislead(Arya){
	Sansa;
	Sansa += TABLE[-16][---47 / 940.49];
	( -94 ) + ROWS - ( foo(dog - --230.601,Hodor) )
}
def betray(Sansa){
	COLS;
	if(ROWS){

};
	if(foo(Stark * -( ( TABLE[21][68] - COLS / -betray(0.52,destroy(0.45,COLS),Stark) / ( ( foo(-52) * betray() ) ) * --530.118 - TABLE[( ROWS * ( bar(-Hodor,COLS) ) )][dog] ) ),--foo(Arya)) - Sansa){
	dog -= Hodor;
	y += ( destroy(ROWS,Sansa,foo(COLS,-89,0.83)) - -7 - mislead(-Sansa) / COLS * rule(COLS) );
	COLS
} else {

}
}
def protect(Ygritte){
	ROWS
}
def destroy(Hodor,Sansa){
	if(-710.193){
	if(protect(Arya,430.681)){
	if(Ygritte * y){
	--y;
	-destroy(ROWS,--( -betray(( ROWS - ( protect() ) ),Stark,47 * ( ROWS )) ),mislead(( ( --36 ) ),--Arya));
	if(dog + ( Jon )){
	( -mislead() * Sansa ) / x + protect(Stark / Jon + dog,-y);
	y -= ( 0.43 * --foo() );
	if(foo(bar())){

}
} else {
	if(( protect(--Arya) )){
	520.02;
	-destroy()
};
	Arya *= 0.41
}
};
	if(Ygritte){
	COLS
} else {
	if(--TABLE[-280.267][foo(ROWS / 550.478,COLS,mislead() + Sansa)]){
	-Hodor - ( -35 ) - ROWS
}
}
} else {
	Stark += ROWS
}
};
	if(56){

}
}
def protect(){
	Stark *= Ygritte
}
assert mislead(( TABLE[-0.65 - ( ( Jon ) ) / ( Hodor ) - -8 + protect(foo(COLS / 17,Sansa),TABLE[foo(( -0.61 ))][destroy()]) * -ROWS][-COLS] ),-TABLE[-310.104][-1]) : "What do we say to the Lord of Death?"
def protect(Arya,Hodor,Sansa){
	if(Jon){
	if(foo(-0.46 * bar(TABLE[bar(ROWS,TABLE[rule(ROWS,-8,TABLE[900.29][( Arya )])][Ygritte / bar(--foo(-65),y)],1)][destroy(x - protect(( COLS ),Jon + TABLE[ROWS][-99 - Hodor] + COLS / destroy(),( -1 + Hodor ) + --TABLE[-rule(TABLE[TABLE[0.73][-Arya] * TABLE[rule(( -1 ) / mislead(0.94,--Hodor))][TABLE[destroy(98)][ROWS]] - -COLS + --destroy(betray(),Sansa) + ( x / ( ( protect(-0.56,( Hodor ),30) ) ) ) / rule(ROWS)][bar(rule(Ygritte - ( foo(ROWS) ),1,Hodor),( COLS ),-TABLE[( dog ) * x][foo(( -( --1 ) ),( Arya / 0.27 ) + -Stark)])] * COLS,---0.68 - foo(39) - mislead(-0.51,( -foo(y / -mislead(),COLS) * ( ( ( 77 + dog ) + ( bar(y,--Ygritte) ) ) ) ),Arya),--ROWS) * -( ( -protect(ROWS,COLS) ) ) + mislead(-58,----1 / COLS)][-destroy(Hodor)]),x)],ROWS))){
	if(TABLE[mislead(( ( -foo(TABLE[ROWS - -ROWS][dog] - mislead(ROWS,( mislead(ROWS,-dog) ) - 95)) * --7 ) ) + 87,bar(( mislead(( ( -protect(mislead(protect(Jon)),-0.84) ) ) - foo(),-74,0.27) )),0.58)][rule(bar(-0.27,destroy(),1),TABLE[Hodor * COLS][Hodor * Sansa])]){
	if(-y){
	Stark -= rule(mislead(ROWS,-0.16),rule(45));
	if(betray()){
	y;
	Stark += ( rule(bar(TABLE[--0.26][0.05 * ( ROWS ) - rule(Sansa,-Stark)],ROWS,-( TABLE[Stark][x] )),Stark,( ( rule(Sansa) ) )) );
	Hodor /= Stark
};
	Sansa /= ROWS
} else {
	Sansa -= COLS;
	protect(( dog - ( Sansa ) ) * rule(( -790.965 ) / COLS / 58) - TABLE[protect(---50 * x) * -TABLE[-bar(--( mislead(-( -670.2595 ),Stark + ( -TABLE[890.451][-1] ) / -Sansa) ),x) - y / ( 81 )][-170.925] * Ygritte * protect(-( betray(ROWS / protect(ROWS + ( COLS ),( protect() ) / ( -COLS )),-destroy(1) * -Sansa) ),COLS,-48) + TABLE[-ROWS][destroy(-destroy(0.47,TABLE[Arya][-97]),COLS)] / -940.5964 / COLS][--0.96 / COLS])
}
}
} else {
	dog *= protect(-Arya / -0.34,ROWS)
};
	if(( ROWS )){
	destroy(( -foo(destroy(--50.537),Ygritte,ROWS) / 0 + protect(-Hodor) + Hodor ) + ( x ));
	Stark *= ( betray(Jon,y) + -rule(COLS,( --1 ),TABLE[ROWS + ROWS - rule() + ROWS / bar(TABLE[Stark][destroy(( -42 ))],betray(-720.64,rule(TABLE[-COLS][-Hodor],dog,Ygritte + mislead(dog,foo() + Stark,dog)),( Jon - ROWS / 99 )),mislead(-120.2,ROWS))][TABLE[foo()][6]]) - rule(destroy(),Hodor,Sansa) );
	if(COLS){
	TABLE[COLS][y];
	Stark /= destroy(( betray(ROWS) ),ROWS / 0.52 - TABLE[ROWS][--11] * Jon) * Jon * Hodor
}
}
}
}
assert ( TABLE[TABLE[( ( rule(destroy(-Ygritte,rule()),-63 - COLS / 16) ) )][1 - Stark]][-27 + foo(910.61,COLS)] + ( ROWS ) ) : "Fear cuts deeper than swords."
def TABLE[Hodor - ROWS][j] {
	dog *= TABLE[---Hodor][TABLE[( Stark )][rule(( TABLE[( foo(( ROWS ),--0.55) )][TABLE[TABLE[1][( x ) * 560.8 / -protect(-0.51)]][TABLE[ROWS][-y]]] ),Sansa)]];
	if(--0.15){

}
}
assert ( -y + TABLE[( ---Hodor - 1 - -48 + ( ( --90 / -53 ) ) )][( ( -28 ) )] ) : "Nothing burns like the cold."
def TABLE[destroy(Sansa)][j] {
	if(destroy(Ygritte * -TABLE[--50][Ygritte],-Stark,-1)){
	-57
};
	( TABLE[( -44 )][( ( 1 ) )] )
}
var y = dog + Stark / -COLS
assert -0.05 : "What do we say to the Lord of Death?"
def mislead(Stark,Jon){
	if(( ROWS )){
	Jon *= protect(----1)
} else {
	-0.17 / ( ( -0.16 ) );
	if(( ( ( 0.63 ) ) ) * COLS){
	COLS;
	if(( ( ( -( TABLE[bar(-0.43)][TABLE[COLS][bar(-40)]] ) + Sansa ) ) )){
	if(--COLS * 1 / COLS){
	dog /= COLS;
	-Ygritte;
	if(TABLE[( mislead(y) )][Stark]){
	if(-0.72){
	---COLS / Arya;
	( Hodor )
} else {
	if(mislead(foo(y),COLS)){
	if(-( destroy(ROWS,ROWS) )){
	if(Stark / ( COLS ) + ( 0.72 )){
	if(rule(Jon)){
	TABLE[0.61 * ( -TABLE[ROWS][mislead(200.556)] / ( ( -mislead(( COLS )) ) * -ROWS ) / -710.11 )][protect(COLS,COLS) / 27];
	x -= bar(---Jon / 1,Stark) * ( Sansa + --0.76 ) * ( -46 ) - -mislead() + Stark / -0.68;
	if(-0.36){
	y /= destroy(dog,-1);
	if(-( ROWS )){
	if(( -1 + -950.526 + Ygritte )){
	if(bar(( 1 ) * dog - -x * foo(rule()),( bar(TABLE[-TABLE[TABLE[-Arya][( 1 )]][COLS] + -COLS / -820.2][( -0.01 )] / foo(--710.5,dog + x,75),( 0.39 )) ))){
	COLS
} else {
	Sansa -= ( -0.8 );
	( TABLE[--1][bar(rule(-mislead() / ( --( 0.98 ) + -0.71 )),rule(--640.0882))] + Jon )
};
	dog -= COLS;
	if(Arya){
	if(( 0.89 )){
	if(COLS){
	if(Jon){
	ROWS
};
	if(ROWS){
	1;
	mislead(dog)
} else {
	if(--y - ( COLS )){
	if(----COLS / -0.03 * 1 * --0.83 + destroy()){
	if(( ( Hodor ) )){
	Sansa -= betray(Arya - ( ( -mislead(TABLE[x][dog]) ) + ( TABLE[0][-2] ) ));
	Arya *= 0.94
} else {
	Hodor -= -0.89;
	if(TABLE[( ( protect(Jon) ) )][( Sansa + -( y ) )]){
	if(-( 69 ) + TABLE[bar(COLS)][( ( betray(( Hodor )) ) * Ygritte * x )]){
	if(Hodor){

} else {
	bar(--ROWS,ROWS,protect(dog * --foo(TABLE[-protect(-( ROWS ),foo(Hodor,10),( --240.4711 / -770.9 ))][destroy(Stark,Arya / COLS / --( ( 760.44 + ( -ROWS ) - -rule() ) ))]) - Stark - ( 930.72 ),-45 + -COLS));
	if(COLS){
	Jon *= x
} else {

}
}
} else {
	if(( foo(Jon,-rule(Arya,Jon) - TABLE[51][-Sansa]) ) - ROWS){
	if(Stark){
	destroy(COLS,Stark,( -COLS ));
	if(-0.5){
	if(( betray(TABLE[betray() * y - foo(( ---0.73 * ( Ygritte ) ),Jon * bar(TABLE[ROWS][0.26 - rule(TABLE[( 22 )][destroy(( Stark ),x) + Jon - dog],-0.99) - dog * ( -0.18 ) + betray(( Sansa )) + 0.34]),dog)][Hodor],rule()) )){

}
};
	( -Sansa - ( bar(( protect(COLS / Stark) ),0.77) ) )
} else {
	TABLE[--( COLS )][31];
	y;
	Sansa
}
} else {
	if(TABLE[-( Arya ) + betray(mislead(),protect(230.26 / Stark,0.57) + protect(( 150.1 )),betray(-( ROWS ) / rule(( COLS )),COLS * TABLE[( 0.09 )][( ( -29 ) )])) - 1 + dog][COLS - -mislead(mislead(20,COLS),0.6,-12 + ROWS - -Sansa + --25 + Arya)]){
	Arya -= ( COLS );
	Jon
} else {
	if(TABLE[( -0.58 )][foo(( -52 ),-( -x ) + 90) / -Sansa - ( TABLE[rule(-destroy(0.55,betray(protect(( Hodor ) - -1 + ROWS,47 * destroy(-530.4)),COLS),-betray(85 / foo(--0.53 / COLS,690.103,ROWS))),x)][-destroy(-dog,bar() * --45)] * Jon + -betray(bar(TABLE[-ROWS][( betray() )],--100 * --240.013 - foo(21) + --ROWS + foo(30 - destroy(ROWS + dog),rule(-( TABLE[Ygritte][rule(Sansa,( ( mislead(TABLE[Ygritte * ( Arya )][-COLS],( rule(-( -rule(COLS) ) + Jon,-( protect(0.77,--1) )) )) ) )) * protect(( 0.65 ),0.84 + rule(),( ( ( ROWS ) / x ) )) - foo()] ),COLS / Arya - COLS)),( -23 ))) - ( mislead(Hodor) * ( -0.52 ) ) + rule(--( -42 ),destroy(Sansa,0.37)) / protect(83) * COLS )]){
	if(ROWS){

} else {
	destroy(Ygritte,COLS,y);
	( 970.18 )
}
} else {
	if(( -0.15 )){
	if(1){
	if(destroy(rule(( ( ( Sansa ) ) ),-0.02,--destroy()),betray(TABLE[-dog][protect(TABLE[Stark][TABLE[74][-COLS]])],-74))){

};
	2;
	( ROWS + ROWS )
} else {
	Sansa *= foo()
};
	dog += Sansa;
	if(-bar(( bar(protect(-( ( -23 ) ),( -rule(0.63,-x) + --980.7 ),protect(Sansa)),0.51 + 75,Arya) - betray(Stark,-91,-TABLE[1 - ( -1 ) / protect(-0.14,betray(( COLS ) / 0.15))][TABLE[TABLE[-35][destroy(--0.88)] / Jon][( -390.52 )]]) ))){
	Ygritte *= COLS;
	ROWS;
	if(mislead(( bar(( ( -protect() ) )) ),TABLE[mislead(betray(14),TABLE[destroy(Hodor / COLS,protect())][COLS] / -0.94)][TABLE[250.55][rule(( TABLE[-ROWS + --( y )][-destroy()] ))]])){
	dog
} else {
	if(--0.14){
	foo(( -COLS ),( ROWS ) + TABLE[( rule(COLS,mislead(( -1 ),-7)) )][( 1 )]);
	-56 / y;
	if(Arya){

} else {
	Jon -= dog
}
};
	if(COLS){
	y -= ROWS;
	if(ROWS){
	if(--0.33){
	ROWS;
	30.8;
	dog
} else {

};
	Sansa
};
	Stark -= y
}
}
}
};
	Sansa += 61 / mislead();
	Stark += Arya
};
	COLS;
	if(0.5){
	if(COLS){

};
	Ygritte *= y
} else {
	-( Stark )
}
};
	-1
};
	Stark;
	if(Sansa){
	Stark += -ROWS;
	if(Hodor){
	-1;
	Ygritte -= --30.2417;
	x -= Hodor
};
	destroy(Arya)
} else {
	-TABLE[TABLE[-1][TABLE[--81][Arya / ROWS]]][protect(-destroy(( Jon ),-33,destroy()),( rule(( betray(Sansa,ROWS - 13,betray(-ROWS,Sansa) - foo(protect(foo(-dog),-y),foo(( ( COLS ) ),protect(-0.14)),58) + -0.78) ),ROWS * ROWS) ),Arya)];
	Hodor;
	Jon -= -Jon
}
};
	x - Sansa;
	Stark += 60
} else {
	y -= destroy(-0.16,COLS - foo());
	Ygritte
}
}
} else {
	Arya -= mislead(mislead() + ( protect() ),y,foo());
	betray(-1,-protect())
}
}
}
} else {
	--COLS;
	-Hodor
};
	y *= 0.52
} else {
	-0.57
}
} else {
	44
}
} else {
	if(-TABLE[TABLE[--mislead(rule(-destroy(),1,-foo(-( ( dog ) )) * Jon * ( protect(1,TABLE[foo(--ROWS)][0.86],Sansa) - -1 / COLS ) - ( bar() )) + 82,-850.539,-( COLS ))][bar()]][( Stark )] / rule(Jon) / Jon){
	Hodor += -rule(COLS,dog) - --21 + COLS
} else {

};
	Arya + ROWS + COLS
};
	Arya -= protect(-0.82,0.78 + 45)
};
	if(-( -49 )){
	Sansa /= ROWS;
	-COLS
} else {

}
}
} else {
	if(( mislead(( foo(-0.96,y * Sansa,-mislead(mislead(( betray() ),-130.0406,0.93))) ) + -ROWS / COLS + betray(foo(x,y) * protect(-bar(-0.82 * -Ygritte,bar(COLS,protect())))),-0.99,-51) / COLS ) - Arya){
	Jon /= Sansa;
	TABLE[-0.94][TABLE[( ROWS )][-70.0599]]
} else {
	if(COLS){
	if(860.768){
	Jon -= bar(-destroy(( -0.23 ) * ( x ) / Ygritte))
} else {

};
	Sansa += ( -1 )
} else {
	dog /= bar(betray(destroy(),900.99),COLS)
};
	Sansa += mislead(ROWS,COLS)
}
};
	foo(21,( Hodor )) * TABLE[-mislead(-Jon / -33,Arya)][foo(-580.893 / mislead(y,dog),rule(--0.87,Ygritte))];
	if(TABLE[ROWS][x]){
	Sansa;
	Stark
}
};
	Jon
}
}
};
	Arya -= -1
} else {
	--ROWS / COLS + ROWS;
	Jon;
	if(( -protect(ROWS,( -0.86 ),Ygritte) )){
	Stark /= 1;
	Hodor *= ( Jon )
} else {
	TABLE[dog][-( 0.89 * --bar() - Sansa ) - Hodor / protect(COLS,-( protect(TABLE[COLS][--TABLE[TABLE[Stark][foo(-bar(( 0.67 ) * betray(),-Sansa * 96))]][( 0.75 )] / ( Hodor )]) ),-( ( destroy(--dog) - TABLE[x][-850.6158] ) ) / ( ( destroy(( rule(TABLE[-440.526][--0.8 / betray(betray(destroy(Sansa,ROWS,y))) - Hodor]) ) - --94,56,( ( 80 ) ) + ( destroy(( -63 ),-Sansa) )) + -COLS ) ) + ROWS) * -betray() / -21];
	y /= rule(( TABLE[Stark * x / -580.6][mislead()] ),Ygritte)
}
}
};
	Jon -= bar(( Stark ))
};
	Sansa -= TABLE[0.77 / TABLE[( Arya - Stark )][( TABLE[-0.51 - -protect(37,-0.95,( -TABLE[Stark - TABLE[-1][-ROWS]][protect(-0.23 + -0.42,COLS) + y] + TABLE[bar()][y] )) + 85][--( 0.19 ) + mislead(TABLE[betray(( 21 ),protect(x,y,Hodor))][-28 - ROWS]) / x] ) / -bar(Stark,rule(protect(47),ROWS),Stark)] + rule(( dog ))][( ROWS + y )]
}
};
	Arya
}
assert Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[--COLS][j] {
	if(36){
	Sansa;
	Arya += 46
} else {
	if(protect(( --Hodor * --destroy(Hodor,--Arya) / y + betray() + -1 ),-( ( ROWS ) ))){
	COLS * 10
} else {

}
}
}
def rule(Jon){
	if(( bar(--( betray(Jon,( Sansa ),0.97) ) + ( TABLE[--20][--Stark] + --Jon * bar() ),betray(--0.96) - betray(),( Ygritte ) / 0.53) )){
	if(-mislead() - ROWS){
	if(Stark){
	destroy(ROWS,COLS * ( Jon )) - -29 / ( -TABLE[ROWS][COLS] / ( x ) );
	if(Sansa){

}
};
	Stark *= Sansa;
	( -1 )
} else {
	( ( TABLE[--( -( protect(1) ) * ( -320.38 / destroy(Stark,( Ygritte ),-( -0.16 ) / 0.14) + protect(Arya,Arya) ) - Arya )][TABLE[-0.03][( Ygritte )]] ) ) * ( COLS );
	if(foo(-ROWS,-TABLE[ROWS][-Arya])){

} else {
	if(Stark){
	( Arya )
}
}
};
	dog /= protect(-30 + ( ROWS ),rule(1,38 / ROWS - ( TABLE[bar(COLS)][-0.06] ),-bar()))
} else {
	-( -160.4294 )
};
	x -= ( -1 )
}
def foo(y){
	if(-0.6){

};
	if(foo(TABLE[-0.43 * ROWS][( ( COLS ) )]) + -( --y * --y )){
	x -= --0.31 / Sansa - -68;
	if(39){
	if(Hodor){
	y -= -0.88;
	-Stark * betray(bar(( TABLE[-( -1 / -Stark / ( 180.628 ) )][protect(820.007)] ))) / ( COLS * ( Sansa ) )
} else {
	if(COLS){

} else {

}
};
	if(-0.48){
	-bar(-y)
} else {
	if(-( -0.49 ) - ROWS){
	-( -0.58 );
	Jon
};
	if(( dog )){
	Jon *= -betray(-( mislead(TABLE[Arya][( COLS )]) ))
} else {
	y /= Arya
}
}
}
}
}
def TABLE[x][i] {

}
def protect(Stark){
	Jon /= ( -TABLE[1 * ( Arya )][-COLS] );
	if(TABLE[( TABLE[Arya][( destroy(ROWS + betray(-betray(( --0.84 ),destroy(( dog * -rule(COLS - ( ROWS ) + ROWS,( destroy(destroy(),-1) )) / Arya ),0.36,rule())) / -( x ) + ( ( ( ( -dog ) ) ) ),( ( 91 ) + foo(dog,-mislead(( Sansa )),( -mislead(-991,COLS) )) * ( -0.12 ) )) + ( 0.3 ),0.1,5 * 99) + -y )] )][TABLE[-( -0.35 )][-y]]){

};
	if(-TABLE[bar(y,protect(y,foo(),mislead()),( -54 ))][COLS] + ROWS){
	if(TABLE[Sansa][( ( 54 ) )]){
	Stark -= ( TABLE[( --Ygritte ) - COLS][COLS] )
} else {
	y *= ( ( Sansa ) ) + -destroy(-59,( Sansa ))
};
	if(ROWS){
	-Stark + dog / COLS
};
	protect(rule(dog))
} else {
	Stark;
	if(( ROWS * --TABLE[COLS][Stark] - ( -0.95 ) )){
	Sansa *= -30 - COLS;
	if(Arya / dog * -1){

} else {
	Ygritte += 0.83 / x + ( 18 )
}
}
}
}
def TABLE[( foo(-12,destroy(( betray(rule(betray(-COLS + Stark,foo(),-540.776),Sansa),( 270.4 )) ) * destroy(ROWS,ROWS))) )][k] {
	if(( -0.16 )){
	Hodor -= ( Arya )
};
	( ( -betray(mislead(-ROWS)) ) );
	Ygritte
}
def TABLE[x * ROWS][i] {
	( ( ROWS ) );
	Stark *= rule(rule(),720.263,65)
}
var y = betray(Jon,COLS)
assert -350.98 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = ROWS
def mislead(){
	Arya *= 7;
	rule(900.6,--270.745 / mislead(),( -betray(-660.746) / -0.66 ) * 1 / Ygritte)
}
def protect(Ygritte,x){
	Hodor += ROWS;
	TABLE[-48][910.7]
}
var y = rule() + ( Jon )
def foo(x,Stark,x){
	y /= Jon;
	if(y - Hodor){
	-34
}
}
def destroy(dog,y,x){
	if(protect(rule(rule(),ROWS))){
	Jon -= ROWS;
	if(0.35){
	if(ROWS / ROWS){
	Hodor -= -41 - ROWS;
	Jon -= foo(( 1 ),( Hodor ),( mislead(( -0.22 ),ROWS,TABLE[ROWS][ROWS]) ) + COLS + Arya);
	Stark *= mislead(destroy(( -foo(0.28) )),Arya)
}
} else {
	y += ( TABLE[ROWS][-( COLS ) - ---Jon] )
}
} else {

}
}
assert Stark + Jon : "Winter is coming"
var Arya = ( ROWS * bar(protect(Hodor,Arya)) )
var y = TABLE[-95][( bar(bar(--rule(COLS,( 1 )))) ) * Stark - rule(COLS)]
assert -0.6 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert rule(-160.25,-1,betray(Arya)) : "Winter is coming"
def foo(Jon){
	dog /= foo(-42,-14,( betray(-1 / Stark,Ygritte) ));
	if(TABLE[0][TABLE[--0.59][-ROWS]]){
	Ygritte -= 100
}
}
def TABLE[mislead(( TABLE[--( 0.02 ) / ( y )][-4] ),destroy(Sansa))][k] {
	if(betray(-protect(-0.75,( ROWS )))){

}
}
def TABLE[( -0.57 )][k] {
	if(ROWS){
	if(TABLE[( ( -TABLE[( bar(( Ygritte )) - 0.64 )][foo(0.59)] - betray(bar(-Ygritte,-Arya + ( betray(TABLE[Arya][ROWS]) ),COLS),y,( 81 )) - -0.44 ) )][mislead(( -COLS ))]){
	if(foo(TABLE[Stark][TABLE[rule(Stark,380.498)][-87]],-390.351,bar())){
	if(mislead(-TABLE[bar(( bar(1,rule(ROWS,y)) ))][-1])){
	( COLS );
	Arya *= ( -( dog ) )
};
	if(0.38){
	ROWS
} else {
	if(destroy(( mislead(92,( x )) - TABLE[Sansa][rule(COLS)] * COLS )) * ( -ROWS / Sansa )){
	Sansa += ---COLS
} else {
	Ygritte -= Jon
}
}
};
	Sansa
};
	TABLE[COLS][Ygritte];
	Hodor /= ( -bar() )
} else {
	if(Stark){
	Stark -= TABLE[1][dog];
	-COLS + Hodor / bar(--88)
} else {
	43;
	if(foo(--0.77 * Arya,TABLE[-foo(TABLE[-1][-TABLE[--0.07][COLS]])][-dog],TABLE[--TABLE[Arya][( COLS ) * TABLE[Hodor + 47][ROWS]]][-( Ygritte ) + COLS])){
	if(-0.84 - Stark){

} else {
	x /= betray(( destroy(( -TABLE[-1][ROWS - -0.07] * Stark ),--0.59) + 0.25 ))
};
	Ygritte -= Stark
};
	Ygritte *= ( ( rule(-8,-destroy(-foo() / -1,-10) / TABLE[---89][--COLS] / --99) ) )
}
}
}
assert ( Jon ) : "Nothing burns like the cold."
def foo(dog){
	if(( 180.43 )){

};
	y
}
assert ( rule(-COLS) ) : "Winter is coming"
def TABLE[rule(foo(TABLE[-( 53 ) * ROWS - ( ROWS ) - Stark - -COLS][COLS]),Arya * -x)][k] {
	Ygritte -= -( bar(y) ) - Arya;
	if(-( -destroy() ) * ( -480.23 ) - Jon){
	1
};
	Jon *= 0.15
}
def TABLE[( mislead(-0.69) )][k] {
	betray(Hodor,betray(Ygritte,( mislead() ),protect(protect(( ( Ygritte ) ),( -42 )))));
	Arya += Stark;
	Sansa *= -Hodor
}
def TABLE[protect(Jon - betray(-0.71))][j] {
	--1;
	Hodor
}
var Jon = bar(-( ( ( -1 ) ) ))
def mislead(y){

}
assert ( -56 ) : "Nothing burns like the cold."
def mislead(){
	Jon -= protect(COLS);
	if(COLS){
	Sansa *= ( ( -Sansa + ( TABLE[Arya][-420.8] ) - ---TABLE[Arya][foo(-betray(-1,-Arya) / -60)] ) / TABLE[Ygritte][-ROWS * --ROWS * 0.61 / ROWS - -0.71] );
	if(( TABLE[-ROWS - x][destroy(( foo(-0.56,-68) ))] )){
	-bar(( Arya ),170.927) + -12
}
} else {
	1;
	x *= Stark;
	Arya -= -Stark
}
}
assert -Jon : "Winter is coming"
var Stark = betray()
def betray(Stark,Sansa,x){
	if(foo(rule(-TABLE[mislead(( destroy(( y )) ) + TABLE[0.11][ROWS + ( 15 )] - ( -83 ),( y ),Ygritte)][( -0.11 / -Stark * TABLE[0.94][Jon] * COLS )]) * 0.53)){

};
	Jon /= COLS
}
def TABLE[COLS][k] {
	if(dog){
	betray(( COLS ),TABLE[( protect(-destroy()) )][-1]);
	Arya += bar(Jon,Ygritte);
	Ygritte *= -TABLE[( mislead(--ROWS - rule(COLS,70)) )][-rule(foo(),rule(-destroy(TABLE[( TABLE[TABLE[Sansa][-rule(-Arya,-rule(--mislead(COLS,( 0.3 ),Sansa) / -0.85,y,destroy(( ( ( y ) ) ),( 55 ))) * COLS) / ( ( ROWS ) )]][--( foo() ) * Arya * COLS + 0.82] )][( ROWS )]),-19),Ygritte)] * -( ROWS ) * 900.111
} else {
	protect(44 - ( -bar(ROWS) ) / Ygritte,( mislead(0.68) + rule(Ygritte,betray(TABLE[betray(Ygritte,foo(1,--betray(0.32,72)))][-180.99],-33)) ),TABLE[170.333][( Jon )]);
	x -= ( COLS )
};
	if(mislead(( y / TABLE[( Stark ) + -0.51][protect(TABLE[--20.68][ROWS - ( foo(ROWS,Sansa,bar(TABLE[Arya - --Stark][( Hodor )],720.24) * -TABLE[-70 - ---foo(12,180.003,( Stark ))][0.35] / -( -y ) / ( ( 0.67 ) ) * -( 0.61 ) * 0.86) )])] ),0.8)){
	if(protect(-y)){
	if(( ( 51 ) )){
	COLS - -0.44
} else {
	COLS
}
} else {

};
	Arya += -( COLS );
	Jon += Sansa
}
}
def betray(dog){
	Sansa *= TABLE[Sansa][dog];
	if(( ( foo() ) )){
	destroy(Arya)
};
	Jon
}
assert y + TABLE[-0.84][-TABLE[foo(0.17,( ( --920.818 ) )) * -38 + bar(-COLS) + rule(--bar(y),mislead(( 490.0608 )) * 0.06,( ( --Ygritte ) ))][( -0.44 )]] : "What do we say to the Lord of Death?"
var y = Sansa
var Arya = ROWS
def TABLE[Stark * y][j] {

}
assert rule(( Jon )) : "Nothing burns like the cold."
def bar(y,y,Hodor){
	if(y){
	Stark -= y
} else {
	Jon += Sansa - dog - ( -0.79 )
};
	ROWS - -Sansa
}
def TABLE[dog][k] {
	Sansa /= -81
}
var Arya = bar()
def foo(){
	destroy(foo(),TABLE[TABLE[-20.19][-destroy(ROWS)]][destroy(-( 0.47 ),( --TABLE[42][Ygritte] ))] + TABLE[COLS][Sansa]);
	Stark *= ( ( ROWS ) )
}
var Arya = -( rule() ) / bar(TABLE[rule(-1)][COLS],mislead(),-15) + ROWS + 48 + -x
def betray(Ygritte,x){
	( -0.26 );
	-( 0.06 )
}
assert -1 : "One can not simply parse himself"
def TABLE[( ( Arya ) )][i] {
	670.29;
	if(--30.9){
	( Jon * Jon * -69 ) + -COLS + -ROWS
}
}
def betray(Ygritte){
	if(rule(foo(1,rule(COLS / Arya,Arya) / -0.74))){
	Hodor -= -( protect(( COLS ),( -37 )) - COLS )
} else {
	if(betray(TABLE[foo() / 120.383 + COLS][( ( -ROWS ) ) / -mislead(Arya)] * x,73)){

} else {
	mislead(Arya)
}
};
	Stark *= destroy(--1,( 39 / -Arya ),-Ygritte / -( -0.43 ))
}
def mislead(Stark,dog,Jon){
	Hodor;
	Arya *= -0.08 / -Hodor
}
def destroy(Arya,x,dog){
	---( bar(--TABLE[--43 / rule(mislead(( protect(Ygritte,COLS) ),( -0.6 )),Stark)][TABLE[Stark][ROWS]],800.743,( Hodor )) );
	( Stark )
}
assert 39 : "Fear cuts deeper than swords."
def TABLE[Sansa * --1 + 86][i] {
	if(protect(Ygritte)){
	-( ( ROWS ) - COLS );
	y *= Ygritte
} else {
	betray(ROWS,0.8 - -Hodor - dog - -COLS - Jon / ROWS,x) / COLS;
	y += Stark / bar(mislead(TABLE[0.8][-0.83]),Arya,TABLE[Arya][360.911])
};
	Hodor;
	Arya *= -0.39
}
assert ( -COLS ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = betray() * Stark
def mislead(Ygritte){
	( dog ) * ( Arya );
	Jon += destroy(COLS);
	betray(ROWS)
}
def TABLE[29][j] {
	x += ( 1 )
}
var x = -Stark / ( Sansa )
def bar(Jon,Jon){
	if(-1){
	x += ( ( ( Sansa ) ) );
	( -Arya / -0.67 );
	Sansa /= Ygritte
} else {
	if(-0.96){
	if(x){
	Stark /= ( ( -0.67 ) )
};
	if(-3){

}
};
	Hodor /= -Hodor;
	if(destroy(-0.35,bar(),TABLE[-COLS / ( ( betray(ROWS,( 770.4 )) ) )][Hodor / TABLE[Jon][COLS]])){
	mislead(0.88);
	--TABLE[8][ROWS]
}
};
	Sansa += ( 0.77 ) + TABLE[-Hodor][foo(( Jon ),( ( ( y ) ) - COLS ))] / TABLE[( -bar(-( ( -( ( ( TABLE[TABLE[-71][foo(-Jon / Hodor)]][COLS] ) / 0.78 ) ) ) ),-24,( --TABLE[-0.02][foo()] )) )][( ( COLS ) )] * Sansa
}
assert mislead() : "What do we say to the Lord of Death?"
def protect(){
	Arya;
	( -destroy(Stark,-0.05) );
	Hodor
}
def TABLE[-20][j] {
	Hodor -= ROWS;
	( foo() );
	Sansa += 390.585
}
var y = 1
def foo(){
	-( ( -22 ) - TABLE[betray(-870.637,ROWS,COLS / 0.72)][TABLE[270.5][COLS]] / COLS )
}
def mislead(Arya,Ygritte,Ygritte){
	if(( -ROWS )){
	protect(-COLS)
} else {

};
	if(-0.08 + x){
	if(COLS){

};
	dog += -Sansa * -1
};
	if(dog * ( Jon )){

}
}
var Arya = Arya / -foo()
var Stark = -destroy(-rule(x),110.186,( ROWS / ( COLS ) ))
var Stark = COLS
def mislead(Ygritte,Sansa,Hodor){
	Sansa
}
var Sansa = -0.92 * COLS
assert COLS : "One can not simply parse himself"
def TABLE[24][j] {
	47
}
def bar(y,Jon){

}
assert ( 740.853 ) : "What do we say to the Lord of Death?"
def rule(Sansa){
	TABLE[( COLS )][( --0.56 / -37 )]
}
var x = ( -80 / -0.77 )
assert 28 : "Nothing burns like the cold."
var Ygritte = Hodor
def TABLE[( -( betray(-1,mislead(y)) ) )][i] {
	if(foo() / foo(( bar(-24,Ygritte) - Arya ))){
	dog /= -340.805;
	if(COLS * ( 0.07 )){
	( COLS );
	if(-ROWS){
	( ( -0.76 ) );
	if(protect(TABLE[( Hodor * -980.2 )][destroy()],-dog,-( dog ) + -rule(Hodor,-Ygritte) * -68 * TABLE[( -93 + Ygritte )][-betray(protect(-20),TABLE[86][( ROWS )],1) / COLS])){
	Sansa *= TABLE[bar(-x,x)][dog];
	if(TABLE[Hodor][Stark]){

}
}
}
} else {
	Jon /= -81 + Stark;
	Sansa + mislead(Jon);
	Stark -= ( bar(-85,-1) )
}
} else {
	200.634
};
	Arya -= COLS;
	if(COLS){
	-78 + ( -betray(( x )) );
	Sansa;
	( betray() )
} else {
	x += ROWS;
	COLS * -0.29 / 0.98;
	if(COLS){
	dog += rule()
}
}
}
def bar(Sansa,x){

}
def TABLE[foo(protect(mislead(33,destroy(-45 / protect(rule(foo(COLS,mislead(),foo(-TABLE[-0.01 - Hodor][protect(ROWS,--0.29 + ( Arya ) / 1 * -Hodor)] - 0.02,dog)),Sansa,x - -ROWS),bar(-36,( ROWS )) * COLS,-( -0.15 ) - ROWS)))),-dog - 0.53)][j] {

}
var y = -( COLS )
assert -1 : "One can not simply parse himself"
def TABLE[( mislead(TABLE[betray(62)][TABLE[-12][Stark]],Hodor,TABLE[( TABLE[( -rule() * TABLE[0.47][820.208] )][x / ROWS] )][73]) )][k] {
	Stark /= COLS / Sansa;
	Jon -= -0.54
}
def mislead(Stark,Sansa){

}
def TABLE[-710.8][k] {
	( ( bar(-0.2,( Hodor ) * mislead(COLS) + Arya,-96) ) + -0.96 + foo(mislead(),-( mislead(( -0.12 ),-Jon - mislead(Hodor,TABLE[TABLE[betray(Jon + y,( destroy(( ( -Ygritte / -x ) ),-Arya) ))][ROWS] * Arya][-COLS] + Hodor) / bar(--64 + TABLE[-69][--( Hodor )] / 910.5 + ( betray(( foo() * COLS ),29) ),-protect(Ygritte))) ),( COLS )) * -( protect(-Jon,y) ) * 84 )
}
assert protect() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert 0.87 : "Winter is coming"
def destroy(){
	-14;
	dog /= Stark;
	x += -0.31 - -18
}
var Stark = destroy(( -( Stark ) ),-rule(bar(Arya,mislead(rule(( ( ROWS ) )),-66,foo()),ROWS) * COLS,TABLE[Sansa / --TABLE[Hodor][-560.446 + Jon] - ( Arya ) * COLS - -0.39 / -34][bar(Stark,( -0.05 ),-TABLE[98][( ROWS )])]))
var Ygritte = ( --0.86 ) * -TABLE[0.11][--1 * dog + ( -0.35 ) + bar(protect(TABLE[( COLS )][-0.58],TABLE[rule(Ygritte,( TABLE[Ygritte][TABLE[( x )][-Stark] / -destroy()] * ( TABLE[Jon + protect(--TABLE[-77 * -protect(( COLS ),Arya)][-18] / 90 + ( ( x ) ))][TABLE[mislead(-dog) - TABLE[protect(COLS,--foo(( ( 420.9984 - ( destroy(( ( ( dog ) ) ),( protect(TABLE[TABLE[( rule(foo(protect(Jon,( Stark ))) - --1,Jon - Sansa - COLS * ( protect(-520.954,Hodor) )) )][Hodor]][( ROWS )],-COLS) )) ) ) ),bar(Jon)) - ( dog ) * ROWS + -560.05 - mislead(Arya,-destroy(ROWS) - ( protect(( ( Arya ) ),-COLS,betray()) ) * ROWS) - destroy(52),x)][-TABLE[-1][ROWS]]][ROWS]] ) + ( ( x ) ) )) - ( ROWS )][( Stark )] * destroy(Stark * -0.68 / ( betray(( COLS ),( y ),1) ),--3) - TABLE[foo()][-0.91]),( betray() )) - betray(( Ygritte / -0.73 ),( ( ( -0.12 ) ) )) / foo(( -1 / Arya - ROWS ))]
def TABLE[Hodor][j] {
	if(mislead(COLS,destroy())){
	x
} else {
	Ygritte -= -COLS / ( betray(y / COLS - Ygritte) ) / 1
};
	if(mislead()){
	dog *= ROWS;
	Arya += x
} else {
	mislead(foo(-0.85,x),COLS);
	dog -= ( ( ( COLS ) ) / -protect(-92,( ROWS )) );
	if(TABLE[ROWS][-1]){
	Sansa += --1;
	-x;
	Hodor += -( dog )
} else {
	if(( mislead(-ROWS - --38) )){
	dog /= ( Sansa * -40.657 / -620.66 ) * destroy(Sansa,( dog + -330.34 ))
} else {
	if(ROWS){
	x /= mislead(protect(-9,-Arya));
	protect(TABLE[ROWS * -1 / 50][Ygritte]);
	Sansa /= Jon
};
	Hodor += bar(Jon)
}
}
}
}
def TABLE[( Arya )][j] {
	Stark += betray(Stark - foo(COLS / -0.58,( -0.55 * -0.64 + ( x ) )));
	TABLE[dog][COLS - -( -1 ) / --0.31]
}
def TABLE[COLS][i] {
	--0.48 / 73 - -( dog / destroy(( -0.87 ),protect(TABLE[( ( 46 ) * x )][-x],COLS * -320.64 - -dog) * ROWS / Sansa) );
	Stark
}
def TABLE[410.83][i] {

}
def betray(x){
	if(( 0.16 )){
	( Ygritte );
	-( ( ( -dog ) - ( ( ROWS ) ) * COLS ) )
} else {

};
	Ygritte -= ( -dog * -bar(( ROWS * protect(( betray(( mislead(Hodor,ROWS) - -dog ) * mislead(--Ygritte,-( rule(protect(mislead(-1 * Sansa,( -1 + TABLE[1][Hodor] * ( 0.48 ) ))),Ygritte,COLS * destroy(-dog - -betray(),COLS,ROWS)) ) / ( ( protect(--y,Hodor) ) + Jon * ( protect(( ( TABLE[ROWS][( dog )] ) ),( ( y + -ROWS ) )) ) ))) - TABLE[( 1 )][350.022] )) )) - ROWS * ( ( ( -68 ) ) ) )
}
def TABLE[mislead(-Jon,bar(-ROWS,COLS))][i] {

}
def TABLE[ROWS][i] {
	if(1){

} else {
	if(Sansa){
	( 0.25 );
	TABLE[COLS][( 0.03 )];
	Stark /= foo(( --COLS * -( 0.42 ) * -65 )) - rule(-destroy(( ( -destroy(dog,TABLE[Arya][( destroy() )]) - ( Arya ) ) ),betray(( TABLE[84][mislead()] ),62 / 27)) + 0.38)
} else {
	Ygritte += -destroy()
};
	-1
};
	if(( -Hodor ) * 930.06){

}
}
def TABLE[Jon][j] {

}
assert y : "Winter is coming"
assert -betray(protect(dog) * mislead(COLS,( ( TABLE[-22][ROWS] ) )),64) - ( -Ygritte ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -destroy(-( TABLE[-0.99][Sansa] ),( 0.29 )) : "One can not simply parse himself"
assert -36 : "Winter is coming"
def TABLE[( ( --( betray(protect(Stark / -betray(0.39,destroy(x - -( foo() ),1)),Ygritte),x) / ( ( -bar() ) ) ) ) )][j] {
	destroy(68 * -0.51);
	Ygritte *= COLS;
	if(0.98){
	-490.6
} else {
	Ygritte *= ( -( COLS ) / Hodor - mislead() );
	TABLE[Sansa - COLS][rule(( 6 ),rule(Jon,y,--ROWS * bar() * -( -60.8 ) + -( Stark - betray(-( ( 0.2 ) ),( x * betray(y) * ROWS ) / bar(( Sansa ),-( ( 0.06 ) ),protect(( ( -4 ) )))) ) + x - -COLS))] + TABLE[COLS][Sansa] * ROWS
}
}
def destroy(dog,Arya){
	x *= -mislead(Hodor,( 0.16 ))
}
def TABLE[-0.59][i] {

}
var y = COLS
var dog = COLS
def betray(dog){
	if(( -1 )){
	( betray(ROWS * ( bar(COLS,Ygritte) ),COLS) * Sansa )
} else {
	y += ( protect(-( ( -Ygritte ) - -( bar(( COLS )) - ( protect(Ygritte * 79,-0.49) * COLS * protect() / -TABLE[-destroy(Jon,destroy(Ygritte)) * 45][Sansa] ) ) ),TABLE[x][foo(--( Ygritte * -0.35 ))]) - --TABLE[ROWS][Sansa] - Stark )
};
	Jon /= -1
}
def TABLE[0.05][j] {
	if(0.32){
	if(y){

} else {
	y += mislead(-0.67,( destroy(rule(rule(--600.4,TABLE[TABLE[-COLS][TABLE[ROWS][-0.86]] + protect(Stark)][protect(-300.5,COLS)]),TABLE[( ( x ) )][destroy(( -destroy(-y,betray(ROWS)) ) + ROWS,0.12,58 / Arya)]),0.2) ),( Sansa + ROWS ));
	( COLS )
};
	if(( --( -( 720.25 ) ) )){
	dog -= -TABLE[-0.93][-y] - protect(TABLE[TABLE[-1][( 18 )]][38],COLS) * rule(bar(),( COLS + x ),Hodor);
	-1 / ( -mislead(COLS,ROWS) );
	Jon *= ROWS
}
};
	x += -COLS;
	if(--0.35){
	Sansa -= ( ROWS );
	if(-protect(-0.75,( -ROWS ),0.47 + ( --Arya )) + foo()){
	TABLE[0.73][( mislead(foo(mislead(TABLE[destroy(Arya,( ( Jon ) ),Jon)][Jon],Sansa * ( foo(Jon,COLS,-destroy(( Sansa + protect() )) / ROWS) )),rule(-950.68,( TABLE[( bar(( -880.21 ) - COLS + Jon) / ( -17 ) )][-( Jon )] ))),Sansa) )] - ( Arya );
	if(bar(-Jon,( -70 ),-( TABLE[destroy(rule(COLS))][( -21 )] ))){
	Hodor /= TABLE[( x )][( x )] + protect(( -1 ) / betray(( 0.31 ) + 0.25),dog * 1 / -Jon + --( betray(foo(betray(Arya,bar())),-mislead(( Ygritte ),protect(ROWS)),Sansa * -0.21) ));
	Ygritte /= TABLE[bar(TABLE[-0.24][( mislead(--TABLE[TABLE[TABLE[Stark][betray(ROWS,COLS,-( -Hodor - 0.09 ) - -( ( Ygritte ) ))]][betray(destroy(( rule(( y - protect(100,COLS + 83) ),( --x ),x) ) * mislead(-( Stark ),-Ygritte * ( -1 ),ROWS)))]][ROWS],( 0.25 / ROWS )) )])][TABLE[Stark][TABLE[COLS + -Jon][dog]] - foo(rule(ROWS,-550.341,protect() / Stark),destroy(foo(bar() / -0.14,-( Stark ) - ( -ROWS ))))]
} else {
	if(Sansa / ( -0.84 )){
	if(-Stark){
	if(COLS){
	if(-Stark){
	if(( rule(910.15,-0.82) )){
	Arya -= Ygritte;
	Arya /= -( ( ROWS ) ) - ( COLS );
	if(-( Ygritte ) * -29){
	foo(-( --100.99 * 1 ),-( mislead() )) * -mislead(-TABLE[( TABLE[COLS][-Arya] ) + -ROWS][-y],dog) / foo();
	y += x
}
} else {
	Jon /= Jon;
	if(mislead(-ROWS,1 - ( ( COLS ) ) * TABLE[destroy(COLS,mislead(protect(destroy(-x))) * Arya + -870.194,Hodor)][-betray(( -betray(( -980.2 )) ) * x)])){
	Stark += -96;
	if(1){
	( ( ( ( 74 * 180.6 ) ) ) ) / COLS
}
} else {
	if(0.05){

} else {
	betray(protect(-COLS,0.86,ROWS + betray(x + ( -Sansa - -foo(-ROWS,--Jon - Hodor) ))),dog)
}
}
};
	Arya /= Sansa + ( ( bar(destroy(Hodor,Arya),Sansa) ) )
} else {
	if(-( bar(1 * COLS - betray(COLS,( Arya ),ROWS)) )){

} else {
	x += Arya
}
}
};
	if(destroy(betray(y),-72)){
	0.15
} else {
	Ygritte -= -ROWS
}
} else {
	Stark += ROWS
};
	if(Stark){

}
} else {
	-1
}
};
	Stark
};
	if(-910.8){
	Ygritte += --0.21
} else {
	if(Sansa){
	Stark *= -TABLE[-35 * -Arya + Hodor][-TABLE[COLS][-1]];
	Sansa -= ( y - TABLE[TABLE[mislead(( ( y ) ),-destroy(mislead(protect() - ---destroy(( destroy() )) * TABLE[TABLE[Sansa][--74]][( ( Ygritte ) )]),( -y )) - y,-ROWS)][COLS]][bar(COLS,mislead(Jon),( Arya ))] );
	TABLE[y - 20][27] / TABLE[--77][-32]
} else {
	mislead(mislead(( TABLE[( ROWS )][--( COLS ) / -0.6] ),( TABLE[-92 + ROWS + Stark][mislead(( -0.03 ))] ) + mislead()) - y)
};
	( TABLE[-0.09 / --0.61 * ROWS - 0 + ( Ygritte ) - -22][80] ) * y
}
} else {
	if(ROWS){

};
	-( -protect(betray(bar(( COLS ) / betray(rule(Stark),( ROWS )),( y ) + ---( ROWS ) / rule(0.95),-COLS - --TABLE[---200.84][-( Stark - Arya )]) * Stark,Arya),mislead(Arya,( betray(( 1 ) - Sansa,Arya) ),betray())) )
}
}
def TABLE[-( Stark )][j] {
	if(79){
	if(( destroy(ROWS) )){
	x
}
} else {
	--6
};
	dog += -COLS;
	( Ygritte )
}
assert y : "Nothing burns like the cold."
assert ( ( Arya ) ) : "What do we say to the Lord of Death?"
def TABLE[-( ( -1 / -240.2209 ) )][i] {
	if(COLS + 88){
	TABLE[-1][y];
	Jon *= ( ( rule(bar(-protect(94,-91,dog),( -1 ),Sansa),rule(foo(ROWS),COLS),destroy(Ygritte / 55 * -1,-bar())) ) - betray(protect(ROWS)) )
} else {

}
}
var Hodor = ( ( bar(( -64 + -88 ),-130.28 + 94 * ( -y )) ) ) * TABLE[Jon][( bar(TABLE[COLS][TABLE[-0.31][( Arya )] / protect(( -51 / 36 ) * ( ( COLS ) ),-0.38)]) )] + -y
var Jon = COLS
var Ygritte = Stark
def destroy(Ygritte){
	COLS;
	Hodor += ( ROWS )
}
var Hodor = protect(destroy(mislead(( dog )),( ( destroy(( ( ( Jon ) ) ),( 0.71 )) ) ),-0.81),Hodor)
def destroy(Arya){
	Sansa *= TABLE[betray()][COLS];
	if(TABLE[-86][-rule(Sansa,ROWS)]){
	dog /= Stark
};
	if(bar(dog)){
	Jon
} else {
	( TABLE[TABLE[-protect(1,( ( -( -35 ) ) ))][( ROWS )]][-0.17 * dog - ( destroy() / ROWS )] * mislead() );
	-34;
	if(---1 - TABLE[-dog][rule(( ( COLS ) / COLS ))]){

}
}
}
var Arya = 0.38
assert ( 63 ) : "Nothing burns like the cold."
def rule(){
	if(Ygritte){
	TABLE[-0.44][( protect(( ( -17 + 1 ) ),bar(-0.82,-0.79,200.7),ROWS * betray(( ( TABLE[ROWS][Jon] ) ),-51)) )] - 0.25;
	dog * -32
} else {
	Ygritte /= ( rule(y + -1) );
	if(destroy(0.46 / 1 + 210.531,0.3) - TABLE[-Stark][-33] / COLS){
	if(destroy(rule(COLS,--( protect(TABLE[protect(-protect(( protect(bar(880.95)) ),( -mislead(( 1 ),ROWS,-( --9 + COLS )) )),COLS - Ygritte)][-( protect(COLS) )],-ROWS / --COLS) )),( ( protect() - ( Jon ) ) ))){
	TABLE[-Sansa][( betray(-1) )];
	( rule() )
}
} else {
	if(--Hodor){

} else {
	Sansa /= ( 0.83 );
	if(betray(( Stark ),TABLE[-85][x],Ygritte) - -dog / Sansa){
	Arya /= -0.53;
	foo(--1,-dog)
}
};
	COLS
}
};
	ROWS
}
def protect(){
	y *= Arya;
	x /= TABLE[( --Ygritte - ROWS )][-COLS / Stark * -1 - betray(( Hodor ),-COLS)]
}
var Arya = -Ygritte
assert dog : "One can not simply parse himself"
def TABLE[-TABLE[TABLE[----0.02][protect(( -1 ) / Arya,bar(( foo(( ( bar(COLS * ( -43 ) - COLS) ) / Arya ),( -0.97 / -COLS )) )))]][-( -21 ) + x]][k] {
	rule(TABLE[Stark / -TABLE[0.24][-64] / protect(-COLS / -TABLE[betray(-310.321,-TABLE[( Stark )][foo(betray(ROWS),( -44 ),Ygritte * ( COLS ))],( ( --530.93 ) )) - Hodor][destroy()],-0.48 * ROWS) * protect(ROWS,mislead(ROWS),( -Sansa ))][( -58 )] * 45)
}
assert -TABLE[-COLS][( ( --( foo() ) ) )] - -betray(rule(COLS,( mislead(-Arya) ),430.931)) : "Nothing burns like the cold."
def TABLE[0.29][i] {
	COLS
}
def TABLE[-bar(-26)][i] {

}
var x = Hodor
assert destroy(foo(Ygritte,TABLE[1][--Jon + 0.38 + ROWS])) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Hodor : "What do we say to the Lord of Death?"
var Arya = ( ( TABLE[bar(rule(240.027,COLS),Arya,-0.31)][59] ) )
def TABLE[0.54][i] {
	Ygritte += --( ( Stark ) )
}
assert -Ygritte * ( -x ) - COLS : "Fear cuts deeper than swords."
assert -COLS : "Nothing burns like the cold."
var x = -0.85
var Arya = bar()
assert Sansa : "Nothing burns like the cold."
var Ygritte = y
def protect(Ygritte,dog,Arya){
	if(TABLE[( -0.85 ) / -protect(-Arya)][( Stark )]){
	Arya *= 17
} else {
	betray(foo(),Sansa / betray(Arya,0.69));
	( ( -0.36 ) )
};
	if(-rule(foo(),COLS,-y)){

}
}
def rule(x){
	betray(Ygritte,Sansa * 120.2496,-0.9)
}
def betray(y,y){
	-0.68;
	protect(-( -1 ))
}
assert mislead(--mislead(protect(53,17),TABLE[( -( COLS ) )][( COLS )]) + -0.46 + --mislead(Ygritte,0.7 + TABLE[COLS][Sansa] - x) * --0.59,Hodor,Arya) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-TABLE[--710.3 + -( COLS ) - COLS - ROWS - ( 0.28 ) * betray(Jon)][COLS]][i] {
	Arya
}
var Hodor = COLS
assert x : "Fear cuts deeper than swords."
def protect(y,y){
	Arya /= y * destroy()
}
def TABLE[ROWS][k] {
	-TABLE[Sansa][ROWS];
	-65
}
var Stark = -betray(0.71,--0.32,Ygritte)
assert ROWS : "Fear cuts deeper than swords."
var x = 65
def mislead(x,Ygritte,Arya){
	dog += protect(( -980.013 ),( x ));
	if(Ygritte){
	if(( betray(( --bar(foo(0.62,betray() / ROWS),1 * ROWS) * ( ROWS ) )) )){
	-Hodor;
	if(-320.079 + destroy(25,93,( rule(( bar() / -( 850.594 ) * ( ( TABLE[Stark][-880.85] ) ) * ROWS ),rule(Sansa,rule(y))) ))){
	-( rule() ) - -( TABLE[ROWS][-Arya] );
	Hodor;
	Stark /= ROWS * dog
} else {
	if(-760.202){
	Stark *= bar();
	Jon += --490.832 + destroy(mislead(),( bar() ),( -Ygritte - ROWS )) + -mislead(( COLS ),--73);
	x -= --0.41 / Jon
}
}
} else {

};
	( Jon )
} else {

}
}
def rule(){
	if(COLS){
	Stark *= TABLE[bar(bar(0.19,-0.99),COLS,-0.97)][foo(Stark)] * rule(Sansa * 0.54 * 23);
	TABLE[( rule(foo(( TABLE[1 + -120.7091][-( --TABLE[COLS - ROWS][rule()] + -1 )] ),Ygritte / 1)) )][y] / ROWS
} else {
	x *= 960.78
};
	Sansa /= ( TABLE[30 / 71][( 0.57 )] ) + TABLE[Sansa][( ---23 + -TABLE[dog][( ROWS * --COLS - -ROWS - dog )] + mislead(--ROWS,TABLE[Jon][-1],0.47) / -75 / 93 )] - Stark;
	TABLE[rule(TABLE[TABLE[( Arya )][foo(-1,--COLS / ROWS)]][1],TABLE[0.98][810.537])][betray(COLS)]
}
assert Arya : "One can not simply parse himself"
def TABLE[Hodor][j] {
	Stark /= -1
}
def mislead(){

}
def foo(y,x){
	if(rule(31)){
	if(ROWS){
	if(ROWS){
	if(COLS){

};
	Stark *= ROWS
}
};
	-1
} else {
	Jon -= 0.53;
	COLS - ( ROWS ) - COLS / ROWS;
	Arya -= -0.77
}
}
def TABLE[-( ( x ) * 78 )][i] {
	if(-TABLE[( dog + --1 )][bar(Arya,rule(--42 / -1,TABLE[bar(( 1 ),COLS,dog)][destroy(TABLE[( foo(bar(-0.88 - 800.4,0.79 + ( protect(53) * TABLE[TABLE[x][bar(-0.97 + mislead(mislead(),Arya) - TABLE[-COLS][( Stark / -32 / --1 )] / Jon * Jon)]][0.29] ),-( foo(dog,betray(-foo(TABLE[COLS * ( Hodor ) - ( --ROWS )][mislead(( betray(destroy(TABLE[foo()][--0.1],-COLS)) ) / COLS)]),ROWS)) )),x) )][COLS])],-( ( Hodor / Jon ) )),790.94) / ( ---TABLE[Sansa / -COLS][-y] ) / dog]){
	if(( 1 / 70.4097 )){

}
};
	betray(Arya,-1)
}
def betray(dog,Arya,y){
	COLS
}
def TABLE[TABLE[COLS][Arya]][k] {

}
def betray(){

}
def rule(Jon){
	if(-1){
	Arya;
	if(-70){
	Arya *= x;
	ROWS
}
}
}
def mislead(Sansa){
	if(90.313){
	x += -81
} else {

}
}
def mislead(){
	Jon *= Stark
}
def foo(Jon){
	Jon *= --47;
	if(-( x )){
	if(( dog )){
	if(y){
	Sansa += -( ROWS )
};
	Hodor -= dog;
	if(mislead(Sansa,bar(-COLS,betray(Sansa),Jon),-betray()) / destroy(protect(95),Arya + -7 * 89,x)){
	TABLE[Jon][bar(Sansa,ROWS,TABLE[COLS][TABLE[( 40 )][-( ( mislead(destroy(foo(( 68 )))) ) )]]) / -Hodor];
	TABLE[( COLS )][ROWS]
}
};
	if(26){
	Ygritte /= y - protect() * protect();
	if(COLS){
	if(( Hodor )){

} else {

};
	Sansa *= --bar() - ( -340.1 ) + x + ( -320.16 );
	if(Stark - --83 - bar(-1 * -COLS - betray(-Jon,-rule() * ROWS,TABLE[protect(---COLS,TABLE[betray(-800.13)][-Arya])][-foo(Sansa,ROWS,0.02)]) - Jon,-62)){
	Sansa - Ygritte * Sansa - -dog;
	( COLS );
	( ROWS )
} else {

}
} else {
	Ygritte -= x
}
};
	-( ROWS )
}
}
def rule(Arya){
	if(TABLE[dog / ROWS][-destroy(-0.84)]){
	Stark += --Ygritte;
	if(Ygritte){
	if(COLS){
	y -= ( protect() )
}
}
} else {
	Sansa *= ( 0.98 );
	Stark *= -Arya
};
	Ygritte;
	-1
}
assert Sansa : "One can not simply parse himself"
def TABLE[--betray(43,-Arya / dog - --0.29 * ( COLS ))][k] {
	if(destroy()){
	dog /= ( bar(( -1 ),-0.46 + Stark + bar(rule()),( ( ( ( Jon ) ) ) )) )
};
	Hodor * ROWS
}
def rule(){
	if(1){
	Ygritte;
	COLS * ( -Sansa )
} else {
	( --COLS / ROWS )
};
	if(( -y )){
	if(3){
	-0.09 / ROWS;
	if(Arya){
	20.52
}
}
}
}
def TABLE[( Sansa - 1 )][i] {
	if(ROWS){

};
	if(protect(1) + ( Jon )){

} else {
	y
};
	Stark += --( bar(betray(Stark,--58 * Stark + protect(-TABLE[ROWS][x],---1 * ( -( 64 - 16 + COLS ) / ( -( -Sansa - -COLS ) ) ) + ( ROWS + ( 0.99 ) + -ROWS )),COLS)) )
}
var Arya = COLS
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = -dog
var Hodor = -( TABLE[1][52] ) / Stark * -30
def TABLE[-( -Stark )][j] {
	if(0.73){
	Hodor -= 0.59;
	y /= Hodor
}
}
assert Sansa : "One can not simply parse himself"
assert ( ROWS ) : "Fear cuts deeper than swords."
assert bar(x,( ( COLS + betray(( 1 ) * mislead()) ) )) * 0.51 * ( -72 ) : "Winter is coming"
def foo(dog){
	TABLE[-0.43][( destroy() )];
	Jon /= rule();
	if(-130.971){
	if(( Arya ) - Arya){
	if(( COLS )){

} else {
	Stark /= 50;
	betray(( Ygritte ),( ( TABLE[--0.83][-19] + y ) ));
	if(--120.2 * rule(foo(-0.19,Sansa) + 0.78 * -destroy(-38) - ( 850 ))){
	Jon /= TABLE[( Jon * COLS + destroy(foo(),-1) * -17 + -TABLE[-betray(TABLE[protect(( COLS ))][110.625])][COLS] )][ROWS];
	if(Hodor){
	if(destroy(foo(( -( -ROWS ) ) + -0.31),x)){
	dog /= -0.98;
	( TABLE[mislead(( -Sansa + y ),destroy())][-COLS * -y + Stark + -( 35 )] - -16 ) * -TABLE[( -3 )][TABLE[460.935][-COLS]];
	( Jon )
};
	if(Ygritte){
	Arya += COLS;
	Arya += COLS
} else {

}
}
}
}
}
}
}
def TABLE[( ( x ) )][j] {

}
def rule(Hodor){
	y += ( ( ( COLS ) ) );
	if(0.06){
	Ygritte -= ( -TABLE[Jon][320.58] )
} else {
	if(mislead(mislead())){
	if(150.616){
	Ygritte *= ROWS
} else {
	y *= mislead(Stark,Ygritte)
}
} else {
	Stark -= betray(--34);
	if(Ygritte){
	Jon += betray(COLS,98,-betray());
	Ygritte *= dog
}
};
	dog /= bar(800.028)
}
}
def protect(dog){
	-bar(ROWS + y / Arya);
	if(bar(-bar(( betray(-ROWS,ROWS + foo(Sansa)) )) / foo(-( protect(-87,x) ) / -37) * -TABLE[Stark][Jon],( betray(( ( -0.97 ) ),foo(--( -destroy(dog + Stark / ( 300.994 ) / TABLE[foo(-mislead(( -570.94 - ( COLS ) )),-690.556)][COLS * COLS] + 8 + -COLS * -TABLE[-60][--Sansa + -betray(Hodor,protect(-0.16,mislead()))]) ) - foo(-rule(mislead(),( ( Sansa ) ) * ROWS / -ROWS),( COLS ),-Stark) / ( -Stark + COLS ))) ))){
	Stark += mislead(Jon,destroy(COLS,( ( ---destroy(Ygritte) + -960.71 / -0.61 ) )),-0.61)
} else {

};
	if(rule(0.77 - Stark,( foo(betray(( x * x ),dog + foo(betray(ROWS - -36,( bar(( x / dog )) * foo(Stark,( ( ROWS ) )) )),( 98 )))) ))){
	if(Hodor){
	if(--mislead(TABLE[foo(ROWS,dog) - ROWS][mislead(destroy(( 0.32 )))] * -x,rule(COLS,0.88),x * destroy(-31 - COLS - ROWS))){
	if(( Jon )){
	x *= ( foo() );
	Hodor -= TABLE[bar(-( 26 ) + 97 - COLS,--Hodor,foo())][protect()] / betray(ROWS,COLS);
	Arya *= Jon
};
	if(-34){
	0.82
} else {
	Sansa -= foo(ROWS + rule(-1) - 1) / Jon
};
	-1
};
	x
};
	( y )
} else {
	Jon += ROWS;
	Ygritte += betray(1,Arya);
	if(protect(7 * Stark) + Sansa){
	x *= COLS
} else {
	if(-TABLE[ROWS][Sansa]){
	TABLE[bar()][-54];
	COLS
} else {
	--0.42
};
	if(-13){
	x *= 500.9;
	-Sansa;
	-destroy(mislead(bar(Hodor,destroy(( ( ROWS ) ),1,COLS),-protect(-Sansa))),-TABLE[TABLE[-TABLE[-1 + ( bar(betray(COLS,Jon + -rule(destroy(TABLE[Jon][Ygritte],ROWS + protect(rule(COLS,bar(TABLE[ROWS][foo(TABLE[( rule(Stark,0.15) )][-TABLE[COLS][Ygritte]])],Stark)),( mislead(TABLE[-96][y],x / 310.543,( --590.02 * --75 / ROWS )) / ROWS + ( ( COLS ) ) )) / mislead(Arya,ROWS,mislead(COLS,-Stark))),-0.79),Stark),Sansa) )][Arya]][COLS] / ( ( -betray() ) )][--48]) + ( Hodor - ( ---1 ) )
};
	ROWS
}
}
}
assert ( 59 ) : "One can not simply parse himself"
def mislead(Hodor){

}
var Hodor = 56
var Hodor = ( ( Ygritte ) )
assert -71 / x : "What do we say to the Lord of Death?"
var x = -20
def rule(Hodor,dog,Arya){

}
def TABLE[Stark][i] {
	if(1){

} else {
	x
}
}
assert bar(COLS) : "Winter is coming"
assert rule() : "Fear cuts deeper than swords."
assert protect() - destroy(-destroy(),Arya) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -0.87 : "Nothing burns like the cold."
def TABLE[destroy(Hodor)][j] {
	Stark -= Hodor;
	if(-47){
	Hodor += 0.43
} else {
	if(TABLE[-( protect(Sansa,0.18,rule(protect(),-1 * ( rule(Jon,0.94) ),8)) + -50 ) * -dog + -1][-67]){
	Hodor -= foo();
	-3;
	TABLE[TABLE[-1][ROWS]][Stark]
} else {
	Sansa -= ROWS;
	if(-( Hodor ) - 0.08 * ( -rule(dog,ROWS,-mislead(( TABLE[foo(bar(COLS),Ygritte) / ( Arya ) - ( 710.444 )][-0.56] ),-Ygritte,TABLE[betray(-rule(foo(),48),( foo(( ROWS ) * TABLE[9][bar(destroy(( ROWS ) / ( ( -ROWS ) ),Ygritte))]) ),46 - --32)][--91])) )){
	Hodor += Stark;
	( -1 )
} else {
	TABLE[1][-Jon * foo(dog)];
	Hodor /= ( Sansa )
};
	ROWS / ROWS
}
};
	Ygritte
}
var Stark = TABLE[ROWS * ROWS + ( TABLE[bar(( -COLS ),-0.33)][TABLE[1][( -0.62 )]] )][( ROWS )]
def foo(){
	60.54
}
var y = betray(y,bar(ROWS,rule(-COLS)),-0.78)
assert Sansa : "One can not simply parse himself"
assert mislead() : "Fear cuts deeper than swords."
assert TABLE[-( rule() / -( Stark ) - ROWS ) - -94][51] + TABLE[COLS][-( COLS )] + Sansa - foo(ROWS,x) / betray(bar(protect()),Jon,TABLE[--bar(45,-ROWS - ROWS,---Stark - ( ROWS ))][-54]) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( rule(ROWS,COLS) ) : "What do we say to the Lord of Death?"
def destroy(x){
	if(destroy(-0.32,Hodor,Stark)){

} else {

};
	x -= -0.53;
	if(ROWS){
	ROWS;
	dog /= ROWS;
	if(TABLE[Stark][10 * COLS]){

} else {
	-1
}
}
}
def TABLE[-( ( foo(( --790.796 ),( ( ( Sansa ) ) )) - -20 + Jon - -foo() ) )][j] {
	Sansa += -1
}
assert TABLE[x][--14] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -( destroy(destroy(( COLS ),Hodor),-ROWS) / -Arya ) : "Fear cuts deeper than swords."
def TABLE[( destroy() + TABLE[-1][-1 * Hodor * ( dog + bar(TABLE[Stark + -0.4][destroy(( COLS ),( COLS ),( -1 )) * x],destroy(COLS / ( -0.53 ),-( ROWS * ROWS ),COLS) / ( ROWS )) ) * COLS] - ( -59 ) - ( -90 ) )][j] {
	if(-rule(bar(Hodor),foo(-Arya,Arya,78) - ---( 47 ) * ( Hodor ),destroy(rule(Hodor),x)) / -( 54 + -170.536 - protect(-80,50) + -54 )){
	y *= -dog
} else {
	if(Hodor){
	Sansa -= ( protect(--210.2 / y,COLS) );
	dog -= foo(bar(TABLE[-Jon - COLS][( 0.7 * ( --ROWS * -Ygritte ) )]),-48);
	if(bar(( ROWS ),-96)){
	-bar();
	COLS
}
} else {
	Arya
};
	if(mislead(ROWS * protect(-ROWS * -1))){
	bar(0.28,betray(COLS,Arya));
	y /= y / -Arya;
	-100.21
} else {
	if(-protect(ROWS,bar(bar(1,-Ygritte),ROWS)) - ( Arya )){
	y += 0.98;
	if(1){
	foo(Hodor,Sansa)
}
}
};
	betray(( -COLS + -1 / -mislead(Arya) ),foo(ROWS)) + TABLE[ROWS][destroy(COLS,COLS)]
};
	if(--Hodor * -bar(Ygritte,Hodor,mislead(( Stark ),-dog))){
	Ygritte /= --40 / 350.972;
	mislead(rule(rule(y),Sansa - TABLE[( 8 )][-72])) + TABLE[y - ( 1 )][--0.03] - ( COLS );
	--x + dog
}
}
def TABLE[( COLS )][j] {

}
var Ygritte = ( ( ( ROWS + -1 ) ) )
var y = ( rule(-ROWS + -160.798) )
def TABLE[-27][i] {
	ROWS;
	ROWS;
	bar(( ( destroy(770.556 / bar(x - ( -0.82 ),-1)) ) ))
}
assert y : "One can not simply parse himself"
var Jon = TABLE[( 66 + 0.45 + 180.1 + -betray(-1) * ROWS / -0.55 )][foo(foo(TABLE[betray()][foo(Ygritte,-10)]),rule() / ( bar(betray(destroy(y,bar(Hodor)),x)) ) / destroy(ROWS,( TABLE[bar(---ROWS / 0.54)][-x / -880.3] ) + -( rule(COLS,bar(-1,Arya)) )),-Jon)]
def destroy(Sansa){
	ROWS;
	y
}
assert ( bar(foo(Arya,foo(-88,ROWS) * -( -1 )),Sansa) / ( mislead(destroy(TABLE[( -0.14 )][-( TABLE[TABLE[foo(( Stark ),ROWS)][COLS] - ROWS / y][Jon] )],--Hodor)) ) - destroy(dog - ---24,( ( -0.13 ) ) / -64,destroy(-destroy(( bar(--79,-0.41) )),( Jon ),-94)) ) + -TABLE[rule(bar(TABLE[--mislead(Jon) - COLS][-280.9578],( foo(ROWS,TABLE[60][TABLE[-bar() * ( -( -( ROWS ) ) + 0.51 ) / ROWS][TABLE[COLS][COLS]] * TABLE[130.9][-45]]) / --53 ),COLS),-1,( bar(240.89) ))][( Arya )] : "Fear cuts deeper than swords."
def rule(Stark,x,Ygritte){
	if(( TABLE[39][( ---0.39 )] )){
	ROWS * Jon
}
}
def TABLE[( destroy(( -1 ),TABLE[74][( Jon ) + rule(rule(-( ( ( foo(-TABLE[1][( -( y * -COLS ) ) / Ygritte] - COLS + bar(-( ROWS ) / -0.82,( -280.592 ))) ) ) - Sansa ),bar(18)),( -TABLE[TABLE[Hodor][( ( --3 ) + ROWS + -( -Hodor ) )] + -1][0.06] + --Hodor ) * ROWS - Hodor * COLS)],( -foo(Sansa / -0.11) )) )][k] {

}
def mislead(Arya,Stark){
	-0.6
}
def destroy(Jon,Ygritte,Arya){
	if(0.71){
	if(mislead()){
	if(----foo() * Ygritte){

};
	TABLE[-ROWS][0.8];
	-ROWS
};
	Jon
} else {
	if(destroy(-1) - Jon * TABLE[560.46][x]){

};
	-0.45;
	Jon /= 1
}
}
def TABLE[( ROWS )][i] {
	if(foo(-TABLE[Arya][--( TABLE[Hodor][--0.8] )])){
	Stark *= -0.06 / ( -ROWS );
	Sansa += ( -rule(Arya,-50.422) )
} else {
	0.77;
	x /= protect(bar(x,mislead(( ( -72 ) ))),Stark / 220.879)
}
}
def TABLE[--68][i] {
	Stark /= -0.44;
	protect(COLS,foo(Hodor,( TABLE[( -y )][COLS] ) - 1 + ROWS)) * 0.29
}
assert -26 * Ygritte / TABLE[x * -82][-rule(dog,TABLE[--0.84][-betray() * foo(foo(TABLE[( rule(TABLE[dog][foo(rule(-COLS),( --1 ))],0.03,-dog / Arya) )][mislead(COLS + COLS)],TABLE[-Arya][-mislead(----rule(destroy(Sansa,( ( -destroy(-ROWS * COLS,-bar(bar() * ( ROWS - -( rule(( Jon )) ) ) + 43)) ) ),( -dog )),-0.63) * ( ( TABLE[mislead(bar(rule(destroy(-800.18) + -ROWS,( ( Arya ) ))))][( -( COLS ) * -( bar() ) )] ) ) / -( ( mislead(protect(( mislead(-88) - mislead(( 28 )) ))) + 0.05 / 0.69 ) ))],Hodor * ( -77 )) / -( ( foo() ) ),720.29)])] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = mislead(ROWS,( rule(-1) ))
var Hodor = betray(-( --rule(Jon,ROWS) + Arya - mislead(COLS) - COLS ) - 620.1 + COLS,-COLS)
def mislead(){
	if(Sansa){
	Stark -= -95 + x;
	( dog );
	if(-61){
	if(ROWS){
	Stark -= -y;
	if(-bar() + bar()){
	Sansa *= ( ( foo() ) );
	if(-16 / COLS / -0.22){
	Hodor += protect(-Sansa,-Ygritte + ( -0.6 / ( --( ROWS ) ) ),( Arya - y ));
	if(-COLS){
	Hodor -= ( -0.32 ) / ( COLS - Stark );
	rule()
}
} else {
	y /= destroy()
}
};
	-Ygritte
} else {
	if(COLS){
	if(bar(Hodor,Ygritte,Stark)){
	( ( 1 ) + ( -120.05 ) );
	if(--( Jon ) / -y){
	COLS;
	betray(Sansa,( Ygritte ));
	( ( ROWS ) ) / -( ( --230.6 * foo(ROWS,400.65,protect(-0.18)) - Jon + -ROWS ) )
} else {
	Jon /= protect(x)
}
} else {
	x += TABLE[COLS][-0.34 - destroy(( ( TABLE[-Ygritte][Ygritte] ) ),4) / -TABLE[( foo(--54 * -betray(ROWS,mislead()) / 0.42) )][y]] + -ROWS
};
	if(83){
	-7 * -1;
	TABLE[( TABLE[0.71][rule(-ROWS * y - --dog)] )][COLS]
} else {

};
	COLS
} else {
	dog *= mislead(TABLE[50][COLS],( Stark / Ygritte ) + COLS);
	Sansa += ROWS
};
	if(Arya){
	Hodor -= ( TABLE[betray(-( mislead(protect(betray(-ROWS + protect(-( ( TABLE[0.49][destroy(Ygritte,( ( TABLE[destroy()][betray(COLS,( ROWS ))] ) * Arya ),94 / ( -8 ))] ) ) * --( -TABLE[ROWS][ROWS] * ROWS / TABLE[64][Stark] ),---0.33,-87 / 0.7) * COLS,Jon,TABLE[0.44][TABLE[-0.22][x]])),( Arya / -bar(( 560.334 ) / 68 - -bar(( -( -3 ) )) + y,54,-Jon) )) - -0.09 ))][COLS] );
	---ROWS + -Sansa
};
	x *= ( Jon )
};
	if(( 750.316 - 0.33 )){
	Hodor /= ROWS / 450.24
} else {

};
	TABLE[-0.38][TABLE[1][-TABLE[bar(( ( -990.365 ) ),0.66)][1 + -430.69 + Stark]]]
}
} else {
	if(-1){
	500.831;
	if(-0.9 - TABLE[( 80 )][( -Ygritte / foo(protect(),-( 0.89 ) - -1) / x ) * -dog]){
	-Ygritte
} else {
	-y;
	Sansa *= 16
};
	Arya *= -y
} else {
	mislead(rule(( 0.55 )),( protect() ));
	if(( TABLE[dog][0.76] )){

}
}
}
}
def TABLE[TABLE[( 68 * ( ( mislead(mislead(---0.69 + COLS,x,-49),( -26 )) ) ) )][( mislead(x * ( 1 ) * 35 + ( -ROWS * -destroy(( Ygritte ),protect(COLS),destroy(betray(( protect(-1,Hodor * ( ( ( Arya ) ) ),( -0.33 )) )),betray(0.28,-( -Arya )))) )) )] * -690.251][k] {

}
assert -x - ( --Arya - ( -COLS ) - Sansa ) / --( Sansa ) * Stark : "Winter is coming"
var Hodor = -( Arya )
assert ( x ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(Sansa,Hodor,Sansa){
	bar()
}
var Ygritte = foo()
assert ( --1 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = 1
def rule(){
	Stark
}
def TABLE[x][i] {
	x *= --1;
	Arya *= rule()
}
def TABLE[foo(bar(dog,bar(),COLS / Sansa),( -Ygritte / Sansa ))][i] {
	if(Jon){

};
	x *= Arya
}
assert -0.13 : "One can not simply parse himself"
def TABLE[ROWS][j] {

}
def destroy(Hodor,y,Stark){
	if(-x + ( Arya ) / 0.26){
	if(-700.887 + -890.93){
	Hodor -= ( TABLE[( bar(( Hodor ) / TABLE[24 - x][-28 + foo() / TABLE[( Hodor )][Sansa] * 59],y,dog - -1 + Stark) )][-210.1] )
} else {

};
	( y + COLS );
	( ROWS )
}
}
def TABLE[dog][k] {
	if(( mislead(( -Jon / 0.59 )) )){

}
}
def TABLE[y][k] {

}
def TABLE[x][i] {

}
def protect(){

}
def TABLE[Jon][j] {
	rule(-( protect() ),-0.69);
	if(0.72){
	if(TABLE[Hodor][( Arya )] * TABLE[-68][COLS]){
	x / foo(-17)
};
	Arya += x
};
	if(destroy(-ROWS)){
	if(TABLE[mislead(( bar(-15,ROWS,-140.91 + ( 68 )) ) / -bar() + ( Arya ),protect(( ( -0.68 / -23 * COLS * mislead(destroy(Stark,-52)) ) ),17) / -TABLE[Sansa][Stark])][Arya] + 68){
	TABLE[-destroy()][--COLS];
	x *= protect(-dog,-990.71)
} else {
	Ygritte *= 79;
	( --COLS * TABLE[COLS + ( ( -51 ) )][COLS] * 87 )
}
}
}
def betray(y,Arya,Arya){
	Arya -= COLS;
	Sansa += bar();
	if(-42){
	y
} else {
	if(Sansa){
	if(--760.53){
	Ygritte;
	if(( ( ROWS + rule(betray(),-ROWS) / 0.54 ) )){

} else {

}
} else {
	dog /= -COLS;
	if(x){
	TABLE[0.59][ROWS]
}
};
	dog /= ( y )
}
}
}
def bar(){
	if(( ROWS - betray(( betray(( ( -1 ) ),-700.37) ) - ROWS) + ( bar(rule(ROWS),-Sansa - 1) ) )){

} else {

};
	if(( Jon )){
	if(destroy(-86,0.52)){
	Ygritte * ( --78 )
} else {
	foo(ROWS);
	if(( -0.52 )){
	if(bar(ROWS,-950.7)){
	if(Stark){

}
} else {
	if(betray(bar(( ( -rule(-x,-ROWS * foo(COLS,foo(ROWS,( ROWS ),( foo() )),150.5)) ) )))){
	bar(dog,-100,COLS);
	---( ROWS ) - --mislead(foo(COLS));
	( -69 - Jon )
}
}
} else {
	if(-57){

} else {
	Ygritte += 250.747
}
}
}
} else {
	if(Arya){
	betray(-990.33);
	Hodor += -rule(-Sansa)
}
}
}
def protect(Stark,Stark,Ygritte){
	Jon /= -97
}
var y = ( -860.212 / mislead(foo(x)) * protect(y,COLS) )
var Sansa = -Stark
var y = dog
assert Hodor : "What do we say to the Lord of Death?"
assert -0.77 / COLS / 300.636 : "Fear cuts deeper than swords."
def rule(y,x,Stark){
	y += -( ROWS );
	Jon
}
assert ( protect() ) : "One can not simply parse himself"
var Arya = ( COLS )
var Arya = mislead(Stark,protect())
assert -26 : "Winter is coming"
def protect(Jon,Jon){

}
assert -betray() : "Fear cuts deeper than swords."
def protect(Arya){
	dog += TABLE[TABLE[Jon][-0.04]][-COLS * y];
	dog;
	-mislead()
}
def TABLE[-( -1 )][j] {
	if(( 82 ) + Ygritte){
	if(Arya){
	Stark += 0.85 - Sansa;
	if(4){
	if(( ROWS )){
	Ygritte /= x
};
	Stark
} else {
	( ( -betray(--Sansa - -1,-2) + -0.05 ) ) / x - 0.9;
	Ygritte *= bar(-20.541 - --19,( --foo(68 + 0.91,Arya) * -Ygritte ),protect(( y )));
	dog += x
}
} else {
	Arya += -COLS;
	TABLE[0.9][( COLS ) * 280.263]
}
}
}
def mislead(Stark){
	if(x){
	rule();
	dog += -rule(bar(--0.86,-320.779),( COLS )) - x;
	protect(foo(( --destroy(ROWS,destroy(TABLE[foo(dog * 60,bar(ROWS,-57,protect(protect(COLS),mislead(mislead(-bar() - -0.37)))) * -1 + TABLE[-1][0.53] - -94)][x],y + -Hodor)) + --Jon )) * y)
}
}
var Jon = ( ( destroy(-Jon,( -0.61 )) ) )
var Jon = -protect(( betray(-1) ),bar(-1,foo() / -1))
var Stark = TABLE[-65][--47 / mislead(-59,betray(-0.36 - x * ( ---0.27 / x - ROWS ),( -43 )))]
def TABLE[foo(TABLE[ROWS][( bar(foo(( ROWS ) / Sansa / Hodor),( COLS ) / ROWS) )]) + foo(Jon,foo(-COLS,protect(betray(( mislead(( Sansa * -( COLS ) ),x,( Sansa )) * ( 0.82 ) ) + ( protect(foo() * COLS,rule(COLS,-53,protect(x,23))) ),( 0.41 + -( COLS ) ),COLS),-1)),Ygritte) + -460.2 + 60][i] {
	y -= -37;
	if(-y){
	if(0.75){
	-91;
	if(( 0.33 )){
	if(rule(Arya,COLS)){
	Stark /= protect()
} else {
	if(0.76){
	Jon /= rule(( -1 ),-ROWS)
} else {
	Sansa /= ( -mislead(COLS) );
	y += ( Stark )
};
	TABLE[0.91][protect(Ygritte,COLS)]
}
} else {
	if(y){
	y /= COLS
} else {
	x;
	( -81 )
};
	COLS
};
	if(protect(rule(-rule(--2,-0.35) + ROWS,( TABLE[-( -foo() )][mislead(( ROWS ))] - TABLE[73][30] ) + -x - -Jon + -COLS * ROWS),( --37 ))){

} else {
	COLS;
	if(ROWS){
	Jon *= 90
} else {

}
}
};
	Stark -= Hodor - Hodor;
	Ygritte += -protect(-0.34)
} else {
	( Jon );
	Stark += -100.5 - -ROWS / bar(-( rule(mislead(-72,-0.75 * destroy(Stark,-1) / Jon),COLS) ));
	Sansa /= -220.1
}
}
def TABLE[( -0.27 )][j] {
	Ygritte *= COLS;
	Jon /= Hodor
}
def mislead(Hodor){
	Stark;
	if(Hodor){
	Arya += ---( ( 0.31 ) );
	if(--destroy(y)){
	x *= ( -0.29 );
	ROWS
} else {
	x *= bar(--22,COLS);
	destroy(COLS)
};
	if(TABLE[-77][( -0.27 / --rule(86,-98) / -0.92 * bar(Sansa,dog,( -rule(-0.45,-0.73,TABLE[ROWS][COLS]) )) - --( -foo(( -39 )) - Arya ) - -1 - 160.664 / -250.491 + protect(--COLS) + -1 - ( bar(( 16 ),COLS) ) + -180.0344 + TABLE[Ygritte][-betray(-dog / TABLE[-TABLE[( ( TABLE[-0.42][mislead(22,-0.85)] * 0.41 ) * ( ( y ) ) )][protect(foo(( -dog / ( 740.846 ) ) - y,Sansa) - dog,Sansa)] / ( ROWS ) - ---y][0.18] + ( -32 / foo(betray(-COLS + COLS - Ygritte * 0.75) - rule(),ROWS) ),Stark) - rule(-170.745,Hodor,-0.74)] )]){

} else {
	( -1 )
}
} else {
	Arya /= betray(67 - 38,( ( ROWS ) ));
	( -foo(mislead(490.4535,-Arya + TABLE[TABLE[Stark][-Sansa]][Stark] - 49)) / ---0.41 + Stark )
}
}
assert x : "Fear cuts deeper than swords."
def TABLE[Sansa][j] {
	--1 + ( 0.68 / -94 * ROWS - -foo() ) / ( COLS ) - --Arya * 44 + COLS - -Ygritte;
	Sansa -= --( protect(---protect(( ROWS )) - TABLE[COLS][( -Sansa )] / 1) )
}
var Jon = bar(-15,( ( ROWS ) ))
def TABLE[destroy(destroy(--97,( -0.04 ),mislead(( protect(-1 + ( COLS )) ),TABLE[( bar(-( TABLE[COLS][0.34] * COLS ),COLS,TABLE[0.82][x * ROWS]) )][-foo(-81,Stark)]) * -0.41))][j] {
	Ygritte -= dog;
	mislead()
}
assert mislead(foo(--mislead(ROWS,-56))) : "Winter is coming"
var dog = -490.95 - ( ( --0.98 ) / COLS )
assert protect(-Ygritte,-650.2) : "Fear cuts deeper than swords."
assert y : "What do we say to the Lord of Death?"
def foo(dog){
	-1
}
assert 230.59 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(){

}
def TABLE[( destroy(----350.1308 + -( foo() ) + ROWS - rule(Arya,protect(),foo(destroy(( ( -29 ) ),-1))) - destroy(-Ygritte,( -98 )) - -Hodor * COLS / mislead(protect(Ygritte,Hodor)),TABLE[Hodor][( ( Hodor ) * -TABLE[( ( foo(Jon,-88) ) - betray(mislead(---1,COLS * -protect(-0.28,x)) * Arya,Jon,-12) )][( dog ) / rule(-y,( ( ( bar(destroy(),-650.3) ) ) ),1)] - ( 0.92 ) )]) - -rule(-( ( Ygritte ) ),( ( COLS + COLS ) )) )][k] {
	Ygritte -= ( 95 + ( Stark ) );
	-( 0.87 );
	ROWS
}
def mislead(Hodor,Ygritte){
	( 0.87 / -COLS )
}
def TABLE[ROWS][i] {
	if(y){

}
}
var x = -COLS
assert mislead(--41) : "Nothing burns like the cold."
var x = -1
def TABLE[( 0.74 - mislead(( y + ( Stark ) ),TABLE[1][TABLE[--0.56][-240.1497]],-y) )][i] {
	Arya *= 490.65 / ROWS
}
def TABLE[dog][k] {
	-74;
	dog *= protect(-1,Arya)
}
assert mislead(foo(-1)) : "One can not simply parse himself"
assert 210.0484 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( foo(betray(0.8,( ROWS ),16 * -26) / ROWS,( 0.14 )) )][i] {
	y
}
assert -protect(rule(),--0.72) / ---mislead(ROWS / ( 880.851 ),-ROWS + COLS,COLS) - ROWS - ROWS : "One can not simply parse himself"
assert -0.98 : "Winter is coming"
var Jon = dog + ROWS
assert --mislead() + -( TABLE[rule()][destroy(betray(TABLE[-Hodor * TABLE[Sansa][TABLE[-Arya][--( -( betray(foo(-0.19 * Arya - COLS),Sansa) ) ) / -( 3 ) * 51 - mislead(( ( -TABLE[COLS][--0.53] ) * Arya ),rule(bar(( -COLS ) / -( -destroy(y / ( x )) / COLS ),x - ( ROWS )),Jon),TABLE[ROWS / Sansa / ( foo(ROWS,TABLE[betray()][foo(390.8,--0.03)] / -ROWS + ( TABLE[COLS][bar(ROWS + COLS,betray() / rule(TABLE[( TABLE[rule(-94,foo(--ROWS,0.41,--0.56)) + ( ROWS )][Sansa] / betray(-ROWS,( ( ROWS ) ),-protect(TABLE[mislead(-TABLE[betray(COLS,-ROWS,-83)][destroy(TABLE[-destroy(( bar(Jon) ),ROWS - -rule(-COLS,1))][1],-rule(COLS))] - bar(Hodor),40)][Hodor]) * -Sansa - mislead(rule(ROWS) / rule(-foo(COLS),protect(-0.61,COLS),( Arya ) / rule(--TABLE[COLS][70.8] / ( -( dog ) - ROWS ) + TABLE[( protect(500.173) )][Hodor],mislead(),--destroy(Jon))),( 1 ),0.55) - destroy(Arya,Ygritte,bar(( -510.398 ),( rule() ) * -0.7))) )][protect(protect(),--0.6,bar(foo(dog)))]))] ) + foo(--0.76,bar(-0.99) - -( ROWS ),-( 0.19 )),x) )][TABLE[mislead()][TABLE[betray(dog + ( -TABLE[( y )][x + mislead(( ROWS ) * ( protect(( ROWS ),( -Stark * Jon )) ) / mislead(ROWS * Arya),ROWS) / TABLE[-rule()][Arya]] ) - betray(Arya,-dog * --COLS - dog,-rule() * -rule(( foo() ),y,-0.26)))][rule(bar(-33 / ( -1 ))) / Ygritte]]])]]][betray(ROWS,-COLS,1)]),TABLE[( ( ( ROWS ) ) ) + foo(( TABLE[-20][Sansa] ) / ( --mislead(Arya + ( ROWS )) ),-0.65)][rule(-0.39,-0.36)] / destroy(75,0.07 / --COLS) * destroy(),foo() + TABLE[rule(( COLS ))][betray(Arya)])] ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -1 : "Fear cuts deeper than swords."
def betray(Sansa){
	( COLS );
	Arya /= ( -TABLE[COLS][( ( ( foo(-bar(-COLS * ( protect(--Ygritte,Jon) )),-foo(49 / -0.61,-67) + 0.27 + ( -foo(Sansa,betray(y)) / -24 ),COLS) ) ) )] ) + betray();
	dog -= TABLE[-( bar(( Jon )) ) + ROWS][betray()]
}
def bar(Ygritte){
	TABLE[Sansa][rule(x,0.04)];
	if(( bar(Ygritte) )){
	Arya -= ( ROWS )
}
}
def destroy(Sansa,Stark){
	if(TABLE[( -mislead() ) / ROWS * ROWS * -ROWS * ( -x / dog ) * destroy(5,-66) / COLS][betray()] + -TABLE[mislead(-ROWS) * destroy(betray(( Jon )),betray(-1 / y))][-x]){

} else {
	if(-bar()){

} else {
	y += -0.37 * Hodor
};
	Hodor /= 0.39;
	mislead(ROWS) - foo(-11) + ( dog )
};
	Stark
}
assert Jon : "What do we say to the Lord of Death?"
def bar(Ygritte,y,Hodor){
	if(-14){
	if(-21){
	foo(COLS);
	Jon
} else {
	x -= -670;
	TABLE[rule(bar(COLS),( Arya ))][-76]
};
	Stark /= ROWS;
	if(( -0.93 )){

} else {
	if(protect(( Arya ))){
	if(Stark){
	Jon -= ( -76 );
	if(( COLS ) - -y){
	--0.46
};
	Ygritte -= -betray(dog * ( Hodor )) + -( -1 )
}
} else {
	Ygritte
};
	y;
	Hodor += mislead(( Ygritte ),ROWS)
}
}
}
var Jon = ( Ygritte )
var y = betray(( COLS ))
def TABLE[-140.183][j] {
	if(( --1 )){
	if(ROWS){
	Jon /= rule();
	if(rule(destroy(mislead(-0.11,Arya * ( Arya ) - rule(TABLE[destroy()][Stark])) * y),--TABLE[foo()][( rule(-y) ) + ROWS] * -foo())){

} else {

}
} else {
	y += -COLS
};
	( -ROWS )
};
	ROWS
}
assert bar(y,Arya) / ROWS - x : "Fear cuts deeper than swords."
def rule(Hodor,x){

}
var x = TABLE[( COLS )][Ygritte]
assert -0.69 : "Winter is coming"
def bar(dog){
	if(betray(-Sansa / betray(COLS,1 / TABLE[89 + --( 1 ) * Ygritte][bar(( bar(( -1 )) )) / ( -TABLE[-Arya][ROWS] )] + Ygritte * ( -0.53 ) * destroy(-bar(ROWS,-49),33,-0.14)) / betray(),Arya) + ( -70 )){
	ROWS * Hodor / dog;
	if(Hodor - COLS){

} else {
	Arya /= ROWS;
	if(-0.35){
	Stark += -( TABLE[--betray(( ( betray(dog) ) ),-( Jon ))][ROWS] );
	Stark
} else {
	y /= -rule(( -190.5631 ),Stark) * 0.93;
	mislead(-99) + COLS
};
	Jon += Arya
}
}
}
var x = ( ( Stark ) )
def rule(Arya,x,Jon){

}
def TABLE[-94][k] {
	if(destroy(0.6)){
	if(protect(ROWS,protect(1,( ( Jon ) ),Sansa))){
	protect(TABLE[y][-protect()]) * COLS;
	if(( ( 910.39 ) )){
	Stark *= foo(72,foo(COLS));
	Arya -= dog;
	TABLE[Hodor + ( -1 )][protect(dog,x) + Ygritte / ( Arya )]
} else {
	Sansa *= TABLE[( ( TABLE[COLS][--99 + ( Sansa )] ) ) + TABLE[COLS][1] + ( ROWS ) / ( Hodor / dog ) + mislead(( ROWS / -210.378 ))][--TABLE[-( -rule(( x ),-rule(--37 + -0.18,protect(ROWS - Jon,Hodor),( ( rule(-( 57 ),x,( ( destroy() ) )) ) )),bar(-( ( -dog ) - betray(Jon,destroy(mislead(62,destroy(COLS,( ( betray() ) ))),-x)) - ( foo() * -0.84 ) * -0.91 ),( ROWS ))) + Stark )][( ( ( 0.69 ) ) - ( TABLE[0.76][mislead(620.13)] ) )] - ( dog ) + -0.91 + ( -( mislead() ) * -TABLE[-41][-TABLE[--COLS / ( ROWS )][32] - foo(1)] + Stark )];
	if(-0.83 + -( -destroy(-78 * ROWS) )){
	if(dog){
	if(TABLE[TABLE[mislead() / Sansa * -( destroy(( TABLE[protect(protect())][mislead()] ),( TABLE[-( -0.8 ) * 0.75 * -Stark + Jon][mislead(( rule(-100) ),-( Hodor ),Arya / -0.76)] )) ) * protect(y,-6)][Sansa]][x]){
	--Arya;
	if(( 45 )){
	( ( bar(-0.07,( betray() )) ) );
	( destroy() )
};
	if(y / bar(30,0.3)){
	Hodor += bar(TABLE[49 + ( COLS - bar(Jon) )][ROWS + ( COLS )]);
	( ( -1 * TABLE[( rule(-rule(dog * Hodor,foo(ROWS) + TABLE[1][-1],y)) )][protect(rule(),( x ),Hodor) * --( dog / -1 ) - 0.53 * rule()] / ---( ( -( 1 ) * betray(--( ( Ygritte ) * ROWS ) * COLS,-TABLE[--1 + -75][bar(COLS * TABLE[betray(-Stark,-protect(---( -78 ) * -foo(Jon,( -COLS ),( x ) + Jon),( dog )))][( 0.8 ) / 0.19])]) ) / x ) ) )
}
} else {
	if(ROWS){
	410.53;
	( Arya )
}
}
};
	if(COLS){
	dog * -0.62
}
}
}
} else {
	if(( foo(Sansa,betray(-ROWS,-1 - -120.461),COLS) + mislead(ROWS / COLS,-0.71) )){
	COLS
} else {
	Hodor -= ROWS
};
	if(( betray(86,-( mislead(-foo(dog,-( betray(Ygritte,-bar(--140.66 / ROWS,bar(y,( ( TABLE[( ( ( -COLS ) ) ) * -mislead(betray(x),protect(( -Ygritte ) + destroy(( -ROWS ))))][( rule(810.069) ) - -0.17] * -protect(-( -0.07 ) - ROWS,Hodor / 28 / -( ( 260 ) )) - destroy(( ROWS )) ) ) + ( -35 ))),Sansa) ),TABLE[dog][protect(rule(( ( Sansa ) ),1))]) * ( COLS )) ) - TABLE[--( ( 1 - Hodor ) ) * COLS][-rule() * foo(68) + bar(protect(protect(dog),-( -0.92 + 160.28 )),-0.35,TABLE[-TABLE[-970.403][--1] - 530.884 - COLS][( ( y * ( 1 * COLS ) ) )] - dog)] - 310.64) )){

} else {
	if(( ( 31 ) )){
	if(( 0.39 )){
	if(Hodor){
	Jon *= ROWS
}
};
	Ygritte += Jon
}
}
};
	Arya += Arya
} else {
	if(Hodor){
	46;
	y *= TABLE[dog][ROWS]
} else {
	foo(( TABLE[( TABLE[Sansa + destroy(ROWS + TABLE[x][0.18],betray(COLS - TABLE[( 0.51 )][Sansa],ROWS * betray() * ( dog ),-570.9))][-0.45] ) * foo(TABLE[-0.72][-TABLE[( 0.63 )][-10] + -780.05] / Ygritte) / x][( COLS ) - -0.8] ),( -0.65 ));
	if(-y){
	( dog );
	-bar(ROWS,( ( -1 ) ));
	Stark -= 1
};
	x *= Arya
};
	if(( -destroy(-11 / ( TABLE[( --protect(-91 - 610.3821,Hodor) )][11] ),-bar(Stark,bar(ROWS,--foo(ROWS) + Jon),80),x) )){
	Sansa /= COLS
} else {
	Jon /= 0.99;
	Hodor += betray(--COLS * COLS + TABLE[220.8 - 33][ROWS] + ( ( -foo(TABLE[( -bar(( COLS / ( ( betray(foo(-( destroy(--foo(-1,( Stark ),( protect(( bar() ),-1 + bar(47,COLS)) )) + 320.6633) ) - mislead(TABLE[1][Sansa - COLS],0.78,( mislead(rule(72 - ( COLS ),( COLS ) / TABLE[-0.36][-600.185] / COLS)) )),( --( -protect() ) ) + TABLE[1 / TABLE[betray(ROWS,y)][( -betray(( -Jon ),17) )]][x] + -0.02),-74) ) - foo(Ygritte) - COLS ) ) / protect(),( 72 - Stark ),betray(Arya,-0.64 * Stark,betray(ROWS))) + TABLE[y][protect(--1,--( Arya ))] ) / -mislead()][Jon]) - -( ( --TABLE[Stark][Jon] / ( -1 * foo(destroy(-( ( 270.7929 ) )),destroy(-42)) ) ) ) ) - -1 / Hodor ),( ( COLS / mislead(( COLS ),-( -22 )) ) ))
}
};
	-64 / 0.89;
	Arya /= TABLE[protect(0.47,foo(( --0.41 ),( betray(destroy(-bar(-68,-85,COLS)),-mislead(-COLS,mislead(-0.15,TABLE[--880.01][-Sansa + dog],( -Hodor ) / ( -( y ) )))) ),x))][ROWS]
}
var Stark = ( 300.2048 * ( x ) )
def TABLE[-80.1][i] {
	destroy(Hodor,COLS);
	if(( ROWS )){
	Jon *= ( -( -( -0.42 ) ) );
	--betray(Hodor * -0.16 - betray(COLS))
} else {
	if(x){
	dog /= COLS;
	dog;
	Jon /= destroy(-Hodor + ROWS)
} else {
	Sansa += ( -Hodor * -24 )
}
};
	( -dog )
}
def rule(Stark){
	--36;
	TABLE[( -destroy(y,mislead(( x ),1,-530.359)) ) + -58][( COLS )]
}
var y = ( Arya + 730.7877 + TABLE[ROWS][TABLE[Stark][y]] / ROWS - TABLE[1][23] )
def TABLE[dog][k] {
	-0.78;
	if(x){
	--( dog - protect(( ROWS )) / protect(-Sansa) );
	if(-destroy(--( --0.53 / ( ( foo() ) ) ),-1 - rule(( mislead(foo(TABLE[-rule(protect(-( ROWS + ( Stark ) ) + ( TABLE[COLS][( COLS )] ),-x),-28 - -( rule(Stark,TABLE[mislead(( dog ),x) + -( 19 )][ROWS]) ),77)][Sansa] - -Sansa)) ),0.26,TABLE[Arya][dog] + 34 / ( ( foo(( mislead() )) ) )) / ( -0.04 ) * ( --Sansa ) - -y)){
	x *= ROWS;
	if(1 / ROWS){
	Arya += Sansa;
	dog += -TABLE[-Hodor][-( -1 * -Jon + mislead(TABLE[foo() - betray(ROWS,y)][ROWS],COLS) )]
}
} else {
	Hodor += -COLS * --0.29 + COLS;
	Arya *= bar(( -66 ),Stark,ROWS + -( COLS )) * TABLE[-0.21][( -1 )]
}
} else {
	Stark /= dog;
	if(-rule(Sansa,Hodor + --80.88 * --0.81)){
	( COLS );
	x /= --ROWS - Hodor
} else {
	dog *= TABLE[-51][240.73]
}
}
}
def mislead(Ygritte,Hodor){
	( ROWS );
	Jon *= Stark + x
}
def TABLE[-TABLE[ROWS / betray(( foo(( ( TABLE[240.547 + bar(Jon,betray(destroy(0.61,( -Ygritte )))) + --( Stark )][( betray(-bar()) )] ) )) ),-86)][( ( COLS ) ) / --1] / bar()][k] {
	-0.06;
	Hodor /= Hodor - 1 + -1
}
def betray(Stark){
	0.65;
	y += destroy(ROWS / -rule(( ( 710.88 ) )) / -0.89,( -0.06 ) + 11 + TABLE[-COLS * COLS / ROWS - foo(( x ) + TABLE[Ygritte][96 - destroy(--0.4)],( -rule(Hodor) ))][Arya],COLS);
	ROWS
}
def mislead(dog){
	COLS
}
def protect(Arya,x){
	x *= destroy(foo(Sansa) / ( Arya ),bar(Sansa)) - -92 - TABLE[Arya][y] / -0.02;
	if(0.39){

} else {
	1 - -1;
	( ( COLS ) );
	if(--Arya){
	y *= rule(-( 86 ),COLS + ( foo(( -63 )) ));
	Hodor /= ( bar(-( -betray() )) )
}
}
}
var y = 24
assert -Ygritte : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[dog][i] {
	960.777
}
def TABLE[ROWS][i] {
	if(-foo(dog)){
	foo(Jon,ROWS - Ygritte);
	Stark *= COLS
}
}
def TABLE[protect()][k] {
	if(Jon){
	if(TABLE[( Sansa )][-Jon]){
	Stark /= -----780.71 * Hodor
} else {
	if(foo(dog,protect(( -1 ),ROWS))){
	betray(-rule(-Arya - -0.12,-foo(betray(TABLE[-0.93 + Ygritte - --foo() * TABLE[protect()][--destroy(betray(COLS,63,y),Arya,-Jon)] * COLS][-0.54],COLS)) / -19))
}
}
};
	COLS;
	Arya += 10
}
def TABLE[( --dog + Ygritte )][i] {
	y;
	if(0.33){
	( 73 )
} else {
	x -= ROWS;
	if(foo(foo(--83,( 190.3 ),foo() / -0.42),COLS,TABLE[dog][-8])){
	if(TABLE[48][-mislead(COLS)]){
	if(COLS){
	COLS * 0.3;
	if(destroy(1)){
	-Ygritte
}
} else {
	ROWS + ( Sansa ) - Hodor / ----0.16
};
	ROWS
} else {
	( 14 / --1 )
}
};
	if(-TABLE[Stark][ROWS]){

}
}
}
def protect(y,dog){
	if(Stark){
	Ygritte += bar(mislead(x,protect(x,140.99,-( -0.73 - -820.8 )),Stark),Jon + -0.81);
	if(ROWS){
	if(x / --Stark + rule(Hodor,x + destroy(--Stark,-0.98),foo() * destroy(( -COLS ),ROWS,---Stark))){
	if(-x){
	if(( -Hodor ) * 54 * -Ygritte){
	if(-Hodor){
	bar(Arya / -COLS,( ROWS ))
} else {
	if(( ROWS )){
	if(COLS){
	if(-TABLE[-( --0.41 / mislead(bar(( -79 - destroy(dog,--98 / ( ( -0.41 / ( Ygritte ) ) )) + ROWS )),( rule(ROWS) )) )][dog]){
	if(22){
	Hodor /= -destroy(( ------TABLE[Stark][( -rule(-1) )] ),COLS,( ROWS )) * ( -0.88 ) - ( Jon ) * -( Arya ) / rule();
	Sansa -= Arya;
	if(Jon){
	51;
	TABLE[Sansa][( ( y ) )]
}
}
} else {
	---0.29 + y;
	dog *= dog;
	COLS
};
	if(( ( 0.12 ) )){
	x *= ( Hodor / betray(rule(260.59,y)) ) * -Stark
} else {
	if(-COLS){
	x /= -370.067;
	-destroy()
} else {
	if(1){
	y /= ROWS;
	x *= y
}
}
}
} else {
	if(COLS){
	-x
};
	if(rule(( COLS ))){
	if(TABLE[-Hodor][mislead(-0.81,-0.06)]){

} else {
	if(TABLE[betray(-0.23,TABLE[( TABLE[-foo()][ROWS] )][Stark],bar(-( TABLE[76][ROWS] )))][1]){

} else {
	Jon;
	-0.77;
	mislead(COLS,Hodor,protect(rule(89,( betray(y) )),( y ),( ( -890.85 ) )) - ( ( -0.4 - Ygritte ) ))
}
}
} else {
	-Sansa * betray(COLS) / -0.99;
	TABLE[dog][rule(protect(),( -0.48 ) / protect(( Jon ) - ( --1 ),COLS))] - COLS
}
};
	Jon
} else {
	if(Arya){
	Ygritte += ( -COLS )
} else {
	Sansa /= -ROWS
}
};
	if(ROWS){
	if(-0.28){
	Ygritte /= --86
} else {
	TABLE[protect(54,( betray(bar(TABLE[Stark][Sansa],COLS * Ygritte),-1 - ( -12 )) ) / -82)][Arya] / ROWS;
	Hodor;
	Arya /= 0.81
}
}
}
} else {
	Sansa -= -y
};
	( COLS );
	if(-26){
	if(-0.08){
	dog -= -ROWS;
	83
}
}
} else {
	Sansa += y
};
	-90
} else {
	Arya -= 47;
	ROWS;
	Hodor /= -860.2361 / ( COLS ) - destroy(ROWS - -( -( protect(x) ) ) - COLS)
};
	-Stark
};
	if(ROWS){
	if(( foo(destroy(( Arya ),Hodor,-60)) )){
	Jon -= 43;
	Ygritte -= destroy(COLS,mislead(Jon,1))
} else {
	x /= COLS
};
	if(-Stark){

} else {
	-TABLE[ROWS][-( TABLE[COLS][( TABLE[destroy()][0.97] )] )];
	Hodor
}
}
}
}
assert Hodor : "Nothing burns like the cold."
var Hodor = -Stark + 0.26 - --Ygritte * -0.99
def protect(x){
	( -y );
	if(ROWS - protect() - rule(x,destroy(-15) + Hodor - ROWS - COLS,-500.181)){
	COLS;
	( Ygritte );
	-88
}
}
var Jon = Ygritte
var Hodor = Jon
def bar(){
	-970.32;
	-ROWS
}
def destroy(x,Ygritte){
	x *= Sansa;
	Hodor /= Hodor + TABLE[mislead(bar(foo(Ygritte,Arya),( -0.89 )))][-23 / betray(-0.99,y + 0.08) * --0.18 * 0.98]
}
var Stark = TABLE[Arya][dog]
var Stark = --30.079
def rule(Sansa,Jon){
	Arya /= ( ( Stark ) );
	Ygritte
}
def rule(Jon){
	if(Hodor){
	dog * TABLE[Hodor][TABLE[TABLE[-0.21][ROWS]][Arya]] * ( COLS )
}
}
assert dog : "Nothing burns like the cold."
def mislead(Sansa){
	destroy(ROWS,betray(( 1 ))) - ( protect(dog) );
	Sansa *= Ygritte
}
var Arya = -betray(Ygritte)
def TABLE[83][i] {
	if(mislead(Sansa)){
	Hodor *= Hodor / foo(1,ROWS);
	if(74){
	if(rule(protect(Arya,0.06) - 0.74,( TABLE[COLS - foo(-1,---1 / 90.963 - -COLS - TABLE[bar(-9 / TABLE[foo()][COLS],Stark)][x])][TABLE[Stark][--( mislead(0.47,COLS) )]] ))){
	Ygritte *= ( foo(COLS) ) * TABLE[-0.66][( -0.69 )];
	if(mislead(-1,1)){

};
	if(ROWS){
	if(TABLE[destroy() - x - Sansa][-0.55]){
	Jon /= COLS * mislead(-foo()) - Ygritte;
	if(TABLE[protect() - Arya][Ygritte]){
	if(( ( Arya ) )){
	Arya /= -310.29 - COLS;
	dog += Arya
}
} else {

}
};
	( -( -Arya ) );
	mislead(67) - x
} else {
	Ygritte += --( 79 );
	-19
}
} else {
	37
}
} else {
	Arya -= protect(destroy(-destroy(-15 + bar(dog,( -0.05 )),56),ROWS),Sansa);
	if(TABLE[COLS][-Stark]){
	dog += -y;
	--Sansa;
	if(-TABLE[Arya][y]){
	if(ROWS){
	Jon /= --7 / protect(-57);
	if(rule(( TABLE[TABLE[-dog * ( 1 ) * --destroy(( -( ( Arya ) ) / Ygritte ),bar(x))][COLS]][320.912] ))){
	if(( COLS )){
	if(betray(( ROWS ) * -76)){
	dog /= -11;
	if(( x )){
	y -= -80.244;
	x
} else {
	Jon *= -0.67
}
}
} else {
	Arya /= COLS
};
	( -0.24 )
} else {
	Ygritte += dog
}
} else {
	rule(( rule(-65,y,rule(-50 / mislead() / -1)) ),Arya) * -( -betray() )
}
}
} else {

};
	-0.93
}
} else {
	x *= bar(ROWS,900.31)
}
}
assert ( y - ROWS ) : "Winter is coming"
def rule(x){
	if(( ( COLS ) )){
	if(protect(Stark,0.83)){
	if(( COLS )){
	if(Stark){
	x += COLS + mislead(-bar(Stark) - --betray(-0.39) - ( Jon ) + TABLE[destroy(0.63 - -( -foo(( ( Sansa ) )) ))][-600.75] / -0.46,-COLS,foo(bar(-COLS,Stark,( 0.74 ))))
} else {
	if(bar(Jon / ( x ) + 0.68 - protect(),destroy(( betray() ),Stark))){
	if(y){
	if(Jon){
	if(-( -Ygritte ) / betray(ROWS * foo())){
	if(COLS){
	if(COLS){

} else {
	1
};
	Arya += 27
};
	y;
	Jon *= 45
};
	Arya /= bar(-46,--TABLE[( -57 )][( destroy() )])
}
};
	Hodor -= -0.47 * Stark
};
	COLS - ROWS
};
	if(0.87){
	if(mislead()){
	dog /= ( -56 )
} else {
	Stark /= betray(y / bar(TABLE[-( 0.31 )][bar(COLS)]) - -0.97) / TABLE[( Jon / COLS / mislead() )][160.8];
	Arya /= Stark - -x;
	if(foo(-( TABLE[x][900.02] ) + -TABLE[destroy(-1)][88])){
	if(rule(y,-7)){
	Stark += ROWS - -280.203;
	-0.17;
	Stark *= 84
} else {
	Hodor += Ygritte
};
	if(-ROWS){
	---0.82
}
}
};
	y /= ROWS + -x + ROWS
};
	Arya /= Sansa
} else {
	if(-Jon){
	x += rule(( TABLE[bar()][( foo() / Arya )] ),Stark);
	if(rule(Hodor,-rule(( -98 ),betray(( TABLE[( 0.65 )][Jon] ),0.49)))){
	-13
};
	if(0.98){
	if(Stark){
	if(( TABLE[ROWS][Sansa] )){
	Jon += --Hodor
} else {
	y
};
	if(10 - -y){
	Stark -= ( Arya );
	Jon *= -y - Jon
};
	( y )
};
	if(bar(protect(Ygritte),betray(COLS - foo(dog) / Jon))){
	-37 - destroy(mislead(1 - TABLE[( -foo(--foo(foo(( ( Sansa ) )),---51 / -0.45),TABLE[--bar(x,Arya,0.94 - 1 + ( -42 ) + destroy(( ( mislead(( -Sansa ),TABLE[TABLE[( -0.31 )][--0.93 / COLS - --( -1 )]][COLS] * Hodor) ) ))) + rule(COLS,foo(-28))][COLS]) )][-TABLE[1][Hodor] + 0.07 * destroy(TABLE[betray(-( Jon ) - ( Hodor ),protect(TABLE[( COLS / TABLE[( ROWS )][Hodor] )][560.53 - COLS],( -( -ROWS ) )),-( ROWS ))][x] - ( -COLS ) + -13,-( -1 ))],foo(rule(),bar(( ROWS ))),COLS),( ( protect(mislead(Hodor,( ROWS ))) ) + -40.19 ),COLS * Sansa)
};
	Hodor *= foo(mislead(-0.41,COLS),-COLS) * betray(foo() - COLS - -570.62) + ( -0.07 )
} else {
	( 1 );
	if(-bar(COLS,( mislead(bar(COLS),destroy(),-protect(COLS)) ))){
	Ygritte /= destroy(Sansa) / mislead(Arya,dog)
}
}
};
	if(COLS){
	( --COLS );
	Ygritte /= COLS
}
};
	( Hodor )
} else {
	Hodor /= Sansa;
	x /= ( ( foo(-dog) ) )
}
} else {
	dog += TABLE[-Stark][bar(ROWS)];
	if(rule(-dog,TABLE[-Arya][foo()],17)){
	-1;
	Hodor /= COLS
} else {
	( rule(bar(TABLE[( ROWS ) / -1][-20.98] / 0.57,0.05 / COLS - bar(( y ),rule(betray(Sansa,40),( ( --86 ) * Sansa )),( 62 )),ROWS)) );
	if(TABLE[( COLS - -76 )][Jon - Sansa]){
	if(mislead(-50)){
	x -= ( ( 0.91 ) );
	if(( rule() ) / ROWS + -1 * -0.85 / dog){
	if(-TABLE[ROWS][1]){

} else {
	Arya += dog
}
};
	Ygritte += COLS
};
	Arya -= -590.22
};
	Sansa -= COLS
};
	TABLE[-0.37][-0.09 + -betray() - Sansa] * Stark
};
	-rule(-rule(--ROWS,protect()))
}
assert Stark : "Nothing burns like the cold."
assert -COLS : "What do we say to the Lord of Death?"
def mislead(Sansa,y,dog){
	y += ( ( -( TABLE[Hodor - -1][-( Jon )] ) ) );
	dog += ( -TABLE[COLS][-ROWS] );
	ROWS
}
var Jon = foo(( -( TABLE[-340.0004][COLS] ) ),TABLE[Sansa][-0.88])
def destroy(Sansa){
	Hodor;
	if(betray(-1,110.8)){
	Arya += COLS
} else {

};
	if(-77){
	TABLE[Sansa][( -destroy(ROWS,( protect(COLS - destroy(( ( protect(-COLS * --COLS + ( rule(rule(),32) )) ) ),COLS)) )) )]
}
}
assert -COLS : "Nothing burns like the cold."
var y = -destroy(90.367)
assert y : "One can not simply parse himself"
assert ( TABLE[-1][( -ROWS * 1 ) * x] ) : "Winter is coming"
def TABLE[37][i] {
	( ( -1 ) );
	dog *= Arya;
	x *= protect(-x)
}
var Sansa = -( --75 )
assert -Ygritte : "What do we say to the Lord of Death?"
def destroy(dog,Stark,y){
	if(( rule(( COLS - TABLE[( ( ---Stark * Jon ) )][mislead(( rule(-ROWS,-Jon) ),-bar(-( betray() ) - -( 960.033 ),-foo(-1,( COLS ))))] / ( -1 ) ) - 0.05) )){
	-630.636;
	-bar()
};
	if(-protect()){
	if(( --TABLE[94][( --betray(-0.32,TABLE[( COLS ) + 580.84][x]) )] )){
	0.58;
	y += COLS
};
	-( rule(( -Arya - -Sansa - foo(foo(bar(),ROWS),-foo(COLS * bar()),-81) / foo(--( 0.78 ) - Jon + 1,destroy(--9,( Arya ),Ygritte) / Arya) - ROWS + protect(ROWS) + destroy(ROWS,-destroy(ROWS) * ( COLS )) )) )
} else {
	y /= COLS
}
}
assert ( ROWS ) : "Fear cuts deeper than swords."
def TABLE[mislead(8)][j] {
	Jon *= betray()
}
var Ygritte = -1
def destroy(x,dog){
	( Hodor )
}
def TABLE[destroy(--Hodor / -0.83 * COLS,Jon)][k] {

}
var Stark = rule()
var x = COLS + -0.2
assert Sansa : "Winter is coming"
var Sansa = Hodor
assert Sansa : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( protect() )][j] {
	x -= destroy(( Sansa ));
	Hodor /= ( -ROWS );
	if(-1){
	if(ROWS){
	-0.3;
	Hodor *= rule(( betray(foo(y,-1,Ygritte),ROWS) )) * dog
} else {

};
	if(-0.38){

} else {

}
}
}
def betray(x,x,dog){
	x -= bar(destroy(TABLE[TABLE[-0.47][( COLS )]][bar(x)],-TABLE[y][Ygritte]));
	y /= -0.4
}
assert -betray(bar(( protect(( Jon / Stark )) / 19 ),TABLE[COLS][( TABLE[Jon][COLS] )]),rule(COLS,( ( Hodor + mislead() ) ),-ROWS / ( -mislead(betray(( Sansa / --( ( COLS ) - --Hodor ) - -TABLE[COLS][rule(ROWS - mislead(92,x,TABLE[( -x - ( --betray(ROWS) / Ygritte ) )][( 920.77 )])) - 0.13 - ( ( TABLE[destroy(Sansa,bar(ROWS,foo(-33,foo(( -1 )))) + foo(-mislead(( protect(rule()) ) / ( y ),Arya,0.51 + COLS),( ( 520.08 ) )) - Stark - Ygritte / COLS * Ygritte)][( -dog ) + ROWS] ) ) + TABLE[( ( -foo() ) )][Arya + destroy(Stark,COLS - -COLS + --TABLE[betray(dog,-1)][-0.41])]] ))) ))) : "One can not simply parse himself"
def TABLE[Stark][i] {

}
def TABLE[--1][k] {
	dog -= mislead(( betray(y) ),betray(y));
	COLS
}
def TABLE[-0.3][k] {

}
def TABLE[Sansa][i] {

}
var Stark = COLS
var x = -( ( ROWS ) - TABLE[( ( mislead(ROWS) ) ) / -rule(ROWS)][ROWS * -protect(x,mislead(( -1 ),( -( -( rule(( ( ( rule(protect(1,ROWS * -Ygritte)) + -protect(( TABLE[-15][-( -Arya ) + bar()] )) * Sansa ) ) ),-0.73 - -1,protect(-1)) ) ) )) - betray(TABLE[-foo(x * 0.44,-ROWS * TABLE[ROWS][bar(40,1)],Hodor)][dog]))] )
assert ( x ) : "Nothing burns like the cold."
def TABLE[dog][i] {
	x;
	( TABLE[COLS - protect(TABLE[-( -( ROWS ) * -( TABLE[Ygritte][( 1 )] ) )][COLS])][-( ( Stark ) )] - TABLE[Ygritte][rule()] + destroy(COLS,--0.57,-1) + TABLE[---190.803 * ( -COLS )][--90] )
}
def bar(Ygritte,Ygritte){
	-0.01
}
var Arya = COLS
def bar(x,Jon,Stark){
	( COLS * ( -( Sansa ) ) * 0.32 )
}
def betray(){
	Jon *= ROWS
}
def bar(x,y,Sansa){
	COLS
}
def betray(){
	if(destroy()){
	-90 * ( --destroy(( TABLE[-Stark][( COLS / TABLE[betray(---foo(),0.85)][protect(( destroy(-protect(COLS,( -880.061 / ( ( TABLE[-20][COLS] ) + TABLE[rule(x,Jon)][( ( ROWS ) )] * ( ( ( dog ) + -1 ) ) ) ),--ROWS * rule(ROWS,( Ygritte ),74) - ROWS)) ))] / 1 )] * rule(--0.08,x - 39 * 0.71) ),y) * -0.04 ) / -31 - TABLE[TABLE[COLS][-921]][-mislead(ROWS * ( ROWS ),10)] / ( Sansa - ROWS ) + -0.67 - -rule(destroy()) + Sansa;
	Arya
} else {
	if(( bar() )){
	( Hodor );
	-x + -betray(ROWS,--980.6648,( ROWS / ( ROWS ) ));
	mislead(ROWS,( betray(ROWS,-1 / -48) ))
}
}
}
def TABLE[TABLE[bar(Ygritte,COLS)][-( Arya ) + Arya]][i] {
	if(destroy(( -( Stark ) ) + -betray(bar(protect())))){

} else {

};
	Sansa += ROWS
}
def TABLE[betray(rule(-0.34))][j] {
	-betray(x,x);
	rule()
}
assert bar() : "Nothing burns like the cold."
def rule(Sansa,Stark){
	Ygritte /= COLS;
	COLS
}
var y = COLS * TABLE[-bar(1,-39 - dog - Jon + ( 1 )) + 0.57 - ROWS][--Stark]
def TABLE[mislead(-65)][j] {
	Stark + ( -protect() * -0.09 - -1 / --( ( COLS ) ) );
	if(ROWS){
	Sansa *= ROWS;
	if(COLS){
	if(bar(betray(-51))){
	if(-1){
	Sansa -= --foo(dog,TABLE[-26][ROWS],-22) * Jon * 58 * rule();
	-ROWS
} else {

}
} else {

};
	( COLS );
	if(x){
	Jon /= foo(TABLE[( -0.91 )][( -Arya )],y / -0.82,foo(TABLE[-TABLE[y - -ROWS][y] * ( rule(-ROWS,betray(--betray(93,-( ( -foo(-Ygritte,-foo(-( -TABLE[COLS][-destroy(destroy(96) - TABLE[Hodor - ROWS][( --1 )],TABLE[ROWS][ROWS]) - TABLE[( -1 )][-betray(betray(TABLE[( Ygritte )][-x],--60,-COLS))]] ))) ) ) / ( ( bar(( -43 )) ) ) + Hodor - Jon - x)),( Hodor )) ) / COLS][y]))
}
};
	dog += Hodor
} else {
	if(( foo() )){
	if(Sansa){
	Sansa += destroy(330.297,Hodor,COLS / foo(-0.65,ROWS)) / ( -protect(-0.49) * ( COLS ) );
	if(bar(( COLS ))){

} else {
	Jon *= -520.9 * Jon;
	Hodor;
	-1
}
} else {
	-430.29
}
} else {
	x *= -( dog ) / -ROWS
};
	( Stark - -mislead() * x )
}
}
def foo(dog,y){

}
def rule(Stark,Ygritte){
	if(rule(COLS / ( ROWS ) + dog)){
	Sansa /= ( 34 );
	Jon *= ROWS - ( 590.881 )
}
}
def TABLE[( ROWS )][k] {
	( Arya ) - 110.17;
	if(COLS){
	COLS
};
	destroy(TABLE[( 0.01 )][betray(( ( foo(rule(( 61 ),protect(bar(( -protect(( Sansa ),COLS) ),Stark)))) ) ),protect(-96,y),Stark)],Sansa)
}
def bar(){
	if(COLS){
	x += --0.98 + mislead();
	if(( ROWS )){

};
	x /= COLS
};
	if(COLS){
	-Arya;
	if(COLS){

}
};
	if(( mislead(( ( Hodor ) )) )){
	Sansa *= 220.2;
	ROWS + ( foo(--0.3) );
	Jon /= -Sansa
}
}
def TABLE[1][i] {
	( dog ) - TABLE[-58 - ( mislead(dog) )][COLS + mislead(-( ( -0.92 ) ),( 69 )) + ( ( bar(-48,( -dog )) / Jon ) )];
	if(-protect(COLS,Ygritte,Hodor)){
	( dog );
	mislead(-Hodor,98 * destroy(0.18,-Jon,ROWS - ROWS - ROWS))
};
	Sansa *= --( Hodor )
}
var y = TABLE[-( Jon ) / rule(( -bar(( COLS * -0.91 / ( 1 ) ),( Ygritte )) * protect(TABLE[TABLE[TABLE[( ( ( TABLE[-1 * bar(bar(Ygritte * y))][-89 + ( ( 52 ) )] ) * Jon ) ) * ( --1 ) + TABLE[protect(-( rule(--ROWS + TABLE[-0.01][mislead(ROWS,mislead(),COLS)] + -( Jon ) / rule(( ( ( --ROWS + dog ) ) ) / COLS,( Hodor ) * betray(( ROWS ),( ( 28 ) ))),ROWS) ),rule(--( COLS ) / Sansa)) / y][betray()] / y][-630.721] + COLS][TABLE[TABLE[TABLE[TABLE[ROWS][1]][foo(bar(-foo(Hodor * protect(protect(),93,( COLS )) + -bar(--0.74 - ( protect(42,bar(betray())) ),foo(Jon / ( mislead(--rule(( -y - y / 1 ),( dog )),150.8) ),--0.59 - -Stark - TABLE[93][-( ( ( -bar(TABLE[---foo(( ROWS ),-TABLE[0.21][bar(mislead(COLS,-0.17) * COLS * 0.81)] - ROWS,-protect(Sansa,destroy() + 370.707))][-( -0.94 ) - 19],COLS) ) ) )] - ( Sansa )),Jon) + dog + 0.25 + -bar() - -81,mislead(rule(90.681))) - -1))]][Sansa]][-( -250.1 )]]][x] + 67,82) ) + ( betray(-( dog ),62,-1) ),Ygritte) * -ROWS + ROWS][y]
assert y : "One can not simply parse himself"
def TABLE[( 0.93 - TABLE[68][Jon / TABLE[COLS][protect(( 0.57 ),-1,-1)]] )][j] {
	Hodor;
	if(betray(TABLE[( ( -1 ) )][49],rule(Jon),destroy(rule(Arya * COLS,-1)) + COLS)){
	Stark += -0.67;
	Ygritte -= ( -( ( ( -COLS - foo(rule(COLS),( TABLE[betray()][Hodor / ROWS] )) - -1 - dog ) - -0.51 ) ) );
	if(ROWS){
	Hodor -= dog
}
} else {
	dog /= COLS;
	COLS
}
}
def TABLE[destroy(ROWS,-1)][k] {
	Jon += foo(-960.208 / -36 + 0.01,-TABLE[foo(11,1)][dog] * TABLE[( -1 ) * ( -foo(rule(betray(-x) + protect(COLS,foo(-0.84 / Sansa) - ( Jon ),y),TABLE[rule(ROWS * ( Arya ) * ( ( foo(-0.42,-rule(rule(( -790.617 - ( -Ygritte ) * betray(Stark,-foo(-foo(( 97 ),foo(( ( 1 ) )))),COLS) ),-TABLE[TABLE[( protect(Arya) )][( TABLE[-COLS][rule(--0.74,foo())] )]][mislead(( ROWS ),16)])) - TABLE[destroy(Hodor,x,rule(destroy(( TABLE[bar(--31,( TABLE[( x ) + dog + -0.33 * -TABLE[COLS][TABLE[destroy(TABLE[betray(foo(( -Ygritte ),( -0.93 - x ),dog)) - -COLS][-52],---COLS,COLS) + destroy(rule(betray(Arya / --TABLE[( protect(TABLE[COLS][COLS]) )][-dog] / -foo(dog,mislead(),--0.49) / -800.779 - ( -( ( ---( Sansa ) / rule(Ygritte,TABLE[0.02][rule(TABLE[1][( y )])]) ) - protect(TABLE[COLS][-Stark + 73],rule(rule(( Ygritte )) - ( Ygritte )),-foo(foo(bar(-0.13,Sansa,36),54) + ( -990.938 ) + mislead(-0.87,dog,-6)) * y - -x * mislead(-y,---x,-0.3) - TABLE[-( y )][Hodor]) + -520.5 ) ),foo(-x)),270.821,ROWS),-ROWS)][0.55]]][( -840.7 ) + Jon] ))][0.97] ))))][destroy(-( 0.93 ))]) ) ))][-mislead(destroy(-ROWS),ROWS)],-( -dog )),bar(y)) )][Stark]);
	if(( ( -160.24 ) ) / COLS){
	TABLE[( Stark )][-( -920.949 )];
	if(-( 0.04 )){

} else {
	dog += ( betray(( foo(Stark,280.52 / destroy(),( betray(-bar(72,-82),Hodor,0.61) )) ) + ROWS,-Sansa) );
	rule(-79,bar(-mislead(y) - 450.9279,betray(-foo(1) / Jon,COLS * -destroy(( ( Sansa ) ),( ROWS )))))
};
	protect(( COLS * Hodor + Ygritte / -Ygritte / ROWS ))
} else {
	Ygritte -= x
}
}
var Sansa = -ROWS
var Sansa = -Stark
def TABLE[ROWS][j] {

}
def protect(x,x){
	x /= ( Sansa );
	if(-( rule(destroy(dog,( foo(Hodor,-TABLE[88][( -( 34 ) )],28) ),( Sansa ))) ) - 0.35){

}
}
def TABLE[-( COLS )][j] {
	( Hodor )
}
def TABLE[Stark][k] {
	Arya += mislead(COLS,( -( ROWS / 39 ) / y ));
	dog /= foo(-3)
}
def TABLE[( Ygritte ) / bar(TABLE[-650.2 * TABLE[Ygritte][Arya] - mislead(90.2,ROWS)][( ( betray(protect(( destroy(1 - TABLE[ROWS * ( Sansa )][TABLE[( COLS )][( ( ( TABLE[( -Stark )][betray(-1,( -TABLE[bar(1,foo(( destroy(TABLE[rule(y,-0.13,-COLS * 0.94 / -TABLE[Arya][-0.19 + protect(-COLS,-0.08)])][Jon * -19],23,TABLE[-( -mislead(-870.183,TABLE[22][TABLE[0.51][-66 / -1]],( bar(( ( ( ( 390.41 ) ) ) ),--0.19) ) - dog / y) )][1] / 1) / TABLE[Stark][TABLE[protect(-960.1)][--0.2]] ),ROWS) * -mislead(( -betray(y * ( -( destroy(Hodor / -0.04) ) ),( betray(( ( ( ( -ROWS ) ) ) )) ) - ( 59 ),( ( -bar(-( -TABLE[rule()][y] )) ) - ( ( Ygritte ) + TABLE[-Ygritte][( -0.67 )] ) )) ),Sansa) + COLS)][Stark] ),-foo(260.982,-destroy(COLS)))] ) ) )]]) ),( Arya ) - 20) * TABLE[( foo(Arya - ROWS / 0.54,mislead(mislead() / -0.23 - -TABLE[( mislead(Arya,-74,-( ROWS ) / Stark) ) * TABLE[-860.087][rule(-Stark,2)]][-mislead(--rule(( ( mislead(-COLS) + rule() ) / -80.47 ),( ROWS ) + x + 1 * ( x ),( TABLE[( x ) + Sansa][( ROWS )] )) * -protect(rule(-0.49),0.41) / Ygritte,( -0.94 ))]),COLS) )][ROWS],Sansa,( -destroy(23,ROWS) + -COLS )) ) )])][i] {
	ROWS;
	-1 * ( -TABLE[0.54 - bar()][bar(TABLE[TABLE[TABLE[TABLE[ROWS][TABLE[Stark][Sansa]]][( ( destroy(-0.83) ) ) / mislead()]][x]][Hodor])] * protect(-370.305,--290.181) )
}
var x = ( 0.34 ) + COLS * ( dog ) * ( COLS )
assert 0.63 : "Nothing burns like the cold."
assert -300.63 : "Winter is coming"
var Stark = --1 * COLS
def TABLE[0.5][j] {
	Sansa += ( -500.3143 ) + TABLE[( 0.93 )][( ( -( ROWS ) ) )]
}
var Hodor = dog
def protect(Arya,Stark){
	if(93){
	y *= 0.14;
	( Jon );
	rule(y * Jon,COLS,protect(( betray(-Stark - -TABLE[protect(mislead(bar(( ( x ) ) + COLS + Sansa)),-0.42 + Arya * ( 58 ),0.73 * 0.7) - ( destroy(-COLS * destroy(-150.7) * foo() - -( ( Hodor * rule() ) - dog ) / dog - bar(betray(dog)) - -Stark,0.95,ROWS) )][( ( protect() ) )]) )))
}
}
def rule(Hodor){
	if(( -0.46 / 14 + ( 690.338 ) )){

};
	y /= COLS / bar(COLS,( -86 ),TABLE[73][Stark])
}
var Sansa = Ygritte
assert ( mislead() ) + betray(Ygritte,68,-1) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[ROWS][k] {
	dog + ( dog ) / COLS
}
def bar(Hodor){
	betray();
	-Jon;
	if(-Ygritte){
	if(1){

};
	if(protect()){
	-760.19;
	-24;
	if(Sansa){

} else {
	if(( -mislead(protect(TABLE[dog][( ( bar() ) )],rule(--( bar(bar(-COLS)) + COLS )))) - y )){
	if(bar(foo(betray(-0.21,( ( 880.51 ) ))),rule(( ROWS ),( mislead(dog,protect(ROWS,rule(-58))) )),-0.1 * ( -22 ))){
	if(-mislead(ROWS,Hodor) * 0.8){

};
	( COLS / TABLE[-( foo(--Jon - TABLE[bar(0.68)][-90.1],mislead(-COLS,-( -TABLE[foo()][ROWS] ) / ( -foo(( Sansa ) / -40,mislead(( ROWS )),Hodor) - y - COLS ),( -Stark ))) )][( 21 )] - betray(-96) + foo() * COLS * destroy(Hodor,--Hodor) * -( protect(betray()) ) )
} else {
	COLS
};
	if(-0.75){
	if(-0.33 + bar(-COLS,Hodor)){
	ROWS;
	Ygritte /= TABLE[mislead(-0.39 - -ROWS * bar() - 0.8 - betray(COLS,ROWS) / Ygritte * betray(( ROWS )))][rule(Hodor * rule(-27) - TABLE[( bar() * ( TABLE[ROWS][Sansa] ) )][COLS] * bar(),( foo(ROWS,COLS + 5) + bar() ) * 0.48 + mislead(ROWS),TABLE[( -1 )][( ( foo(-( -ROWS ),-0.11) ) )])];
	if(( ROWS )){
	if(-COLS + 880.27){
	betray(foo(( ( COLS ) ),betray())) * -y * ( COLS );
	Sansa += TABLE[betray(( 60 ))][0.77]
} else {

};
	if(-25){
	dog /= ( ROWS )
} else {
	if(0.67){
	y /= destroy(dog);
	COLS
} else {
	Ygritte *= -x / y
};
	TABLE[ROWS][-91]
}
}
};
	if(( betray(mislead(Arya,-( COLS ) / --bar(Ygritte))) )){
	Arya += COLS
} else {

};
	69
}
};
	if(bar(-61 - -0.06,Arya)){
	dog /= TABLE[foo(40.9641) - --1][rule()];
	Ygritte += ROWS
};
	if(-170.979){
	if(Jon){
	-270.0693
}
}
}
} else {
	y /= -430.7;
	Stark -= -ROWS;
	Sansa -= ROWS
}
} else {
	if(protect(Arya)){
	Sansa -= COLS + ( -( x ) )
} else {

};
	if(-TABLE[protect(-0.78,-TABLE[---ROWS - 0.07][ROWS])][( destroy(-6) )]){
	mislead(protect(ROWS,( ROWS ),ROWS / -28),ROWS)
} else {
	Hodor += -TABLE[( -mislead(-1,x) * TABLE[0.91][Jon] / Sansa )][( ( -COLS ) )];
	y += --1;
	---70.3 * 28 - foo(( ( TABLE[Ygritte][Sansa] ) ))
}
}
}
def protect(Jon){
	Arya += ( --( mislead(COLS,( ROWS ),mislead(ROWS,--( Arya ),1) - 320.3) - betray(Stark,1) ) );
	if(COLS){
	if(Stark){
	ROWS;
	if(-TABLE[-1][x - 10]){
	Sansa *= --( destroy(protect(-Sansa / --80,ROWS + TABLE[TABLE[-38][--1]][mislead(y,COLS / betray(x),COLS)]),COLS + Sansa) ) / x;
	Stark /= Ygritte * TABLE[-COLS + ROWS][1] - -84
}
};
	if(TABLE[x][TABLE[mislead(-COLS,rule(destroy(protect(--0.67 / Jon / betray(ROWS),( ( COLS ) ))),( ---0.8 )),Jon)][( -0.75 )]]){
	if(( 20.288 )){
	Stark -= dog / -Jon
} else {
	Jon + -foo(betray(-1,42 - x)) / COLS / Hodor + ( ---( 85 ) ) + -1;
	ROWS
};
	x -= Stark
} else {
	( COLS / ( 70 ) )
};
	dog
} else {
	Jon *= betray(-45);
	Stark *= ( ( -( -1 ) - TABLE[protect(( ROWS / 1 ),y) - -x][destroy(ROWS,rule(( Hodor ) - -0.4,-( -1 ) / destroy(TABLE[-rule(( bar(dog - ROWS) ),( -protect() * --COLS + bar(x,( 89 )) + ( Jon ) ),25) - COLS * COLS][x]) * Sansa) + -bar(0.86,( -90 )),x)] ) ) + ( Sansa )
}
}
def bar(Sansa){
	Arya += Jon
}
assert -ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = --31
assert ROWS : "One can not simply parse himself"
def betray(Ygritte,dog,dog){
	y
}
def TABLE[dog][j] {

}
var Jon = -1
assert 350.544 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -ROWS : "One can not simply parse himself"
def protect(){
	if(( -dog + TABLE[ROWS][rule(( destroy(( ( Jon ) ) + bar(dog / 0.99,foo(ROWS),betray(Hodor,---( -( -60 ) * TABLE[810.77][betray(TABLE[COLS][COLS / -0.15 * -0.19] * ( destroy() ),ROWS)] ))) * --0.81,dog) )) / mislead(x,-TABLE[y][y],betray())] )){
	if(-0.77){
	if(-rule(Stark * y,ROWS,-COLS * ( y ))){
	TABLE[foo(ROWS,mislead(0.44,( betray(-0.52 + ( COLS ) - --130.533) )))][--0.92]
};
	Hodor *= dog;
	if(Ygritte - Jon){
	Sansa /= Arya;
	x *= Sansa;
	x *= protect(Arya)
}
};
	10 + protect(--0.54 / betray()) - TABLE[foo(( ( y ) ) / --x)][9] - 30.494
} else {
	Arya += Arya
}
}
var dog = --4
def betray(x,dog){
	-1 + -0.49 * destroy(-1,Stark,-48)
}
assert protect() : "One can not simply parse himself"
def foo(Ygritte,Sansa,Stark){
	if(-30){
	if(--COLS){

} else {
	if(Sansa){
	if(mislead() / COLS){
	y /= Sansa
};
	-1
} else {
	if(COLS){
	Jon /= mislead(destroy(COLS,--0.22))
}
}
}
};
	Ygritte -= betray(--980.526,-1,ROWS)
}
assert -( -ROWS - -( ROWS ) * 0.4 / mislead(( -( 9 ) ),( rule() ) * ( ---COLS ),protect(ROWS,( ( ( bar() ) ) ))) ) : "Fear cuts deeper than swords."
def TABLE[( 58 )][k] {
	--750.2;
	if(( ROWS )){
	if(( ( ( TABLE[foo(0.65,-bar(bar(--0.68,ROWS)) * -960.47 - TABLE[-0.67][protect(-rule(-( x )))])][rule()] ) + Stark - -( protect(TABLE[Hodor][780.47],destroy(-90.0174)) ) ) )){
	y += foo(y,12)
};
	Jon += y;
	bar(ROWS)
}
}
def mislead(){

}
var Stark = Jon
def destroy(Arya){
	y;
	Hodor /= TABLE[betray(280.932) * ROWS - ( destroy(x / TABLE[( ( ( 300.308 ) ) * -bar(-0.98) / -ROWS * -foo(( Jon + TABLE[TABLE[( COLS )][23]][-0.18] )) )][--destroy(betray(ROWS,Jon,TABLE[-bar(52 + COLS,Arya)][rule(( ( 27 ) ))] * Ygritte),COLS)] / -mislead(destroy(-0.54 + -Stark - ( TABLE[-1][ROWS] ),( -0.14 ),-dog),-betray(-310.8,Hodor)) / mislead() + COLS * 69,Ygritte,foo(( ( Jon ) ))) )][Jon]
}
var Ygritte = -750.89
def mislead(Arya,Stark){
	Stark *= 350.61;
	( 1 );
	if(foo(ROWS - Ygritte,Arya)){

} else {

}
}
var Sansa = --( betray(ROWS,--COLS) ) / ( Arya ) / 90
def mislead(y){
	Arya /= ( COLS + rule(( destroy(betray()) ),( 7 )) );
	Arya /= Jon
}
def bar(Stark,Stark,Stark){
	910.3;
	y
}
def TABLE[-Jon][j] {
	if(Jon){
	( TABLE[TABLE[-( x )][-0.33]][-691 * TABLE[protect(0.34 - ( ( COLS ) ),( -( ( Stark + ROWS ) ) * Jon + TABLE[rule(( ( COLS * -( COLS ) ) ),y)][betray(dog)] * ( ROWS ) ))][y]] )
} else {
	-rule(Hodor,-Sansa);
	--0.39
};
	Sansa
}
def rule(x){
	if(( -bar(( ROWS ),-mislead(90,mislead(42) - Jon),protect(430.23 - 0.2,y,ROWS)) )){

}
}
def bar(y,Sansa,Jon){
	dog *= foo();
	if(-33){
	TABLE[destroy(0.62,TABLE[( mislead(Jon,--0.8) )][-59])][y];
	if(ROWS){
	if(( ( -0.06 ) )){
	if(Jon){
	COLS;
	if(--y - ( mislead(-( COLS ),-destroy()) )){
	Arya += Hodor
}
} else {
	if(( ( -ROWS ) )){
	if(ROWS){
	if(-destroy(COLS,ROWS)){

} else {

}
};
	TABLE[( -50 )][-TABLE[ROWS][TABLE[( ---( --Hodor ) / Hodor )][Arya]]]
} else {
	if(Stark){
	protect(-ROWS,Jon)
};
	if(TABLE[-protect() / rule(TABLE[-TABLE[-0.39][-bar(-0.45,( -COLS ) / -Ygritte)] / ( --0.39 )][COLS],TABLE[Stark][ROWS],mislead(( -destroy(--( mislead(foo(mislead(),-COLS)) ) + Sansa) ) - COLS,ROWS) / -( -protect(( -220.77 )) )) * Jon][COLS]){
	bar(ROWS,-mislead(protect(Arya),-660.594));
	if(( destroy(1,-ROWS) )){

} else {
	-0.98;
	--55;
	if(-TABLE[( ROWS )][destroy(--0.63 + 1 * -0.07) * rule(-rule(6 * 300.7073,Jon,foo(-16,-protect(ROWS,ROWS,mislead(ROWS,Jon)) - -TABLE[( COLS )][( COLS )])),COLS)]){

} else {
	Sansa /= -( COLS )
}
}
} else {
	dog /= ( -Sansa ) / COLS - destroy(( 49 ),-( Ygritte / -protect(( 0.73 - ( ( -COLS ) ) ),Sansa) )) / -( Sansa ) + destroy();
	y /= COLS
};
	Jon *= -TABLE[( ( -57 ) )][TABLE[dog][0.43]]
};
	Hodor -= bar(dog)
};
	if(ROWS){
	x += TABLE[( -0.37 )][destroy(rule(y),( -betray(bar(bar(-( ( COLS - protect(TABLE[foo(Stark,bar(bar(),( destroy(ROWS,Jon) )))][-rule(Jon,( 1 ))],( x - mislead(rule(( TABLE[( x * protect(Ygritte,--0.91 / Arya,Hodor * ROWS) + ( Arya ) )][TABLE[-1][bar(( -( ( Stark * -mislead(Hodor,1) ) ) ))]] + ( mislead(-36,rule(-foo(0.76 / mislead(),-( ROWS ) / --ROWS + Sansa),TABLE[( protect() )][-Hodor])) ) )),( mislead() ) - mislead(foo(betray(protect(0.32,Stark) / ROWS),-protect(),( y )) + TABLE[-940.6][( 40 )],foo()),destroy(73,betray(( -betray(( Stark ),( Sansa ),-betray()) ) + COLS))) + mislead(-( -0.39 / ( -x ) ) - ( ( -0.11 ) ) - ( TABLE[betray(rule(TABLE[0.53][x + foo()]))][0.34] / -Hodor * 190.35 ) + bar(-foo(TABLE[TABLE[rule()][ROWS]][Sansa] + foo(),610.459 * -19)),COLS,ROWS) )) * ( ROWS ) / TABLE[-20.666][-( COLS )] ) ),COLS),( -y ),-foo()),ROWS) )) * ( rule(( -x ),COLS) )];
	Sansa += TABLE[--foo(foo(),Stark)][Hodor]
} else {
	if(-34){
	if(-0.17 - -betray(( ( destroy(-96,protect()) ) )) + ( ( Jon + ---( ( bar(COLS) ) ) + ROWS ) )){
	-1 + -mislead(--( ( 92 ) ));
	if(Arya){
	if(Jon){
	Ygritte *= TABLE[COLS][-TABLE[( Stark )][COLS]] / ( protect() );
	if(( ( Jon ) )){
	Ygritte *= ( ( y ) ) + ( betray(-rule(-0.77),0.95) ) * Ygritte;
	if(TABLE[COLS][-47 / -y] - foo(--44,COLS)){
	ROWS;
	dog /= 0.09
} else {
	if(COLS){
	if(-COLS){
	protect(-Sansa)
};
	mislead();
	( rule(protect(( betray(betray(betray(),Hodor / ROWS,TABLE[Sansa][foo()])) ))) )
}
}
}
} else {

};
	if(TABLE[0.67 - bar(--0.01 / ROWS)][1 * mislead(ROWS,betray(dog,ROWS,COLS))]){

}
}
};
	if(-0.18 - COLS){
	y /= Hodor * TABLE[betray(dog,foo(-Ygritte))][0.83 * ROWS]
}
} else {
	x -= COLS
}
};
	( -COLS - ( -0.36 ) + --TABLE[-COLS][ROWS] )
}
} else {
	( betray() );
	Arya += COLS;
	y *= ( bar() )
}
} else {
	if(dog){
	Stark -= y
} else {
	Hodor
}
};
	Stark *= -destroy(( rule(ROWS,x,( ( dog ) )) ) * ROWS) / TABLE[-TABLE[protect(foo())][betray()]][-COLS * Hodor] * ( ( y ) )
}
var Stark = --6
assert TABLE[ROWS][bar(--860.318 + TABLE[ROWS][( -COLS )],COLS) - mislead() * betray(-33,-Ygritte / -dog)] : "What do we say to the Lord of Death?"
assert ( -32 ) : "One can not simply parse himself"
def destroy(Ygritte){
	Jon -= rule() - ( bar(ROWS,1,Arya) );
	--930.78;
	( -28 )
}
var dog = 250.271
def destroy(Ygritte){
	if(x){
	if(-1){
	( rule(COLS,Stark) );
	if(COLS){
	if(ROWS){

};
	if(Hodor){
	bar();
	y -= ( Stark * x ) - mislead() / 440.235 * --330.44 * y + -0.17
} else {
	if(33){
	if(y){
	Ygritte / -0.81
} else {
	950.1
}
} else {
	0.93
};
	if(-ROWS){
	Stark /= -bar(rule(( ( ROWS ) )),( 1 ) * -0.04 * -5,Stark * ( -protect(( -0.18 ) * ( -0.48 ) * TABLE[-29][betray(COLS / foo() / 0.96,( --foo(0.2) )) / ROWS * y]) )) + destroy(Jon);
	TABLE[61][-0.55];
	Stark *= 350.7773
} else {
	Jon;
	Ygritte -= Arya
}
}
} else {

}
}
} else {
	y -= ( --6 )
};
	-66;
	Hodor += ( dog )
}
var x = -betray(dog,TABLE[COLS + Stark][ROWS])
def protect(y,y){

}
def protect(Ygritte){
	if(-66 - 0.54){
	if(( ( x ) ) - 87 * 75){
	( COLS )
}
} else {
	( rule(-ROWS) )
}
}
var x = -0.88
assert ( COLS ) : "Nothing burns like the cold."
def TABLE[foo(ROWS) * ROWS][j] {

}
def TABLE[dog][j] {
	Jon -= -0.47
}
def TABLE[TABLE[Hodor * Jon][-Ygritte / ( y * ( Ygritte ) ) - COLS * ( TABLE[dog][foo(foo(COLS + -0.74,0.31,-Arya),Jon + ( ( foo(1,ROWS) ) ),x)] )]][k] {
	x *= COLS * -0.58;
	Stark += y
}
def TABLE[x][k] {
	TABLE[betray()][Hodor] * Hodor + y * TABLE[---( rule(-0.11) )][COLS] * x;
	( 0.86 )
}
assert TABLE[rule(COLS)][( ( ---32 / --Arya ) )] : "Winter is coming"
var Ygritte = TABLE[-61][-0.29 - -78]
var Ygritte = bar(x,ROWS,1)
var Stark = TABLE[( Ygritte )][--950.327]
assert Jon : "One can not simply parse himself"
var Arya = ROWS
def protect(x){

}
def TABLE[TABLE[-1][0.84] / -88][k] {
	210.647
}
def TABLE[-Stark][k] {
	if(-0.38){
	TABLE[ROWS][TABLE[-970.13][Jon / protect(ROWS,( destroy(bar()) ),( ROWS ) / ( TABLE[-y][Sansa] ) + ( mislead(TABLE[230.18][ROWS]) )) - ROWS]] + -( Sansa )
};
	if(bar(TABLE[( -TABLE[COLS][ROWS] - Hodor )][---TABLE[0.54][-( bar(-1 / ( 80.3 )) )]],( ( ( 63 ) ) - -240.2 ),bar(betray(),foo(ROWS),( 170.374 )))){
	protect(-0.66,89,destroy(foo(19),Sansa));
	if(-TABLE[( ( Stark ) + bar(dog) )][-foo(( betray(y) ) * TABLE[( ( -1 ) )][TABLE[ROWS][destroy(-0.29)]] / 0.45,mislead(y),bar(-dog - 84 + COLS * TABLE[0.16][ROWS]))] + -48){
	( rule(COLS) + Jon + betray(-0.52,betray(-( ROWS ),-0.09),protect(destroy() / ROWS)) + Stark );
	Stark += ( -0.43 / Stark + ( foo(y,Arya) ) * Ygritte )
};
	( -TABLE[920.34][( 0.85 )] ) / ( -65 )
};
	( COLS ) / ( COLS )
}
def TABLE[-Hodor][i] {
	Sansa += ROWS
}
def protect(x,Arya,Ygritte){
	Arya /= Jon * 63 + protect(( -380.2 ),dog,-COLS - Jon)
}
var y = x
def TABLE[--1 / -370.9 / -Jon][j] {
	( TABLE[-ROWS][COLS] );
	Sansa -= bar(-98,TABLE[-72][-TABLE[--rule(-1,x / -1,-betray(0.6,bar(Ygritte,TABLE[( --0.9 )][TABLE[-Stark][y]],1 - ( bar(( ( 76 ) )) ) - -1 * ( COLS )),bar(( 9 )))) * COLS][Jon]],bar(mislead(-protect(-( ( protect(TABLE[y - ( -0.05 - Jon )][TABLE[destroy(-22,mislead(( --TABLE[-950.4][destroy(( y ) + foo(foo(1),-TABLE[( ( x ) )][Hodor],Sansa) * mislead(-86,( -0.42 )),( Stark ),( COLS ))] )))][71]],-( -destroy(-COLS,protect(-27)) - --( COLS ) / Jon ),( mislead() )) ) ),TABLE[96][mislead()]),TABLE[dog][Sansa],protect(( betray(( -( ( -0.65 ) ) )) )))))
}
def TABLE[-( ROWS - -0.51 ) + dog + -COLS - TABLE[--24 * -13 + x + ( 0.72 )][( 1 )] + rule() + destroy(COLS * COLS - Stark / ( mislead(x,1) ) / Ygritte)][k] {
	TABLE[mislead(ROWS,ROWS,-TABLE[0.28 - ROWS][( 0.27 )] * 1)][Ygritte];
	x /= foo(0.09)
}
var Hodor = y
var Hodor = betray(ROWS,bar()) * COLS
def rule(Hodor){
	if(bar(betray(betray(-protect(-790.639),770.281)))){
	if(24){

} else {
	Hodor += TABLE[Sansa][790.56]
};
	if(( bar(( ROWS )) )){
	Arya /= destroy(dog);
	-0.9;
	Jon *= x
}
};
	if(COLS){
	if(( -1 )){
	Hodor -= -( ( x ) ) + ( foo() );
	( -1 );
	if(-0.43){

}
} else {
	if(( ( -10 ) )){

} else {
	Sansa -= -1
};
	Ygritte;
	foo()
}
}
}
def rule(Sansa){
	Ygritte -= --0.93;
	-Arya;
	( Stark ) + 48
}
var dog = ( COLS )
def TABLE[( ( ( COLS ) ) )][k] {
	if(ROWS){
	Ygritte *= TABLE[0.98][ROWS]
}
}
assert ( -y ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(Hodor,Ygritte){
	if(-340.04 * foo(39)){
	if(ROWS - -( -betray() - Stark )){
	( -0.24 );
	if(-destroy(TABLE[destroy(TABLE[TABLE[-0.97][rule(-( COLS ) + TABLE[protect(Sansa,betray(Hodor,-TABLE[destroy(Sansa)][TABLE[1][y]]),-290.469 / x) * -TABLE[( ( ROWS ) )][bar(y)]][-COLS])]][-1],mislead(-58))][foo()])){
	Hodor;
	Arya;
	if(( Jon )){
	-1;
	Hodor *= ( -1 ) / -dog + 460.983
}
} else {
	TABLE[( -foo(COLS / mislead() - ( -x ),TABLE[betray(( 0.26 ),-bar(-1,-33) * ( betray(Stark * -1,-79,( protect(Sansa,mislead(Arya * betray(TABLE[destroy(foo())][COLS - ROWS / -Sansa + rule(( TABLE[-1][--1] ),protect(1 - COLS)) - foo(destroy(( Jon ),rule(Hodor,ROWS) / 0.22,69))],COLS),-37),TABLE[protect(Stark,1)][810.696 / dog * rule(( -TABLE[Stark][-700.655] / 1 / Hodor - ( destroy(520.7025,-96,( ( TABLE[( ROWS )][( -14 )] ) ) - TABLE[destroy(destroy())][Sansa] - COLS / -1) ) + mislead(-foo(-36 / ROWS),x,betray(( x ))) ),( 41 / ( -Ygritte - rule(--Sansa,TABLE[-Stark][betray(-Arya,-1) / ROWS + foo(-ROWS / ( Arya ))]) ) ),--( ( bar(-83 + COLS) ) )) + -betray(ROWS,Arya) - ROWS]) )) ),( --57 ))][0.17],-rule(( 0.39 )) / Stark) )][( 0.1 )];
	Jon /= rule(--70)
}
}
} else {
	if(ROWS){
	Stark *= destroy(Jon - rule(-0.34),bar(( ( Hodor ) ),COLS) * ( ( mislead(ROWS,( ( ( ( ( -TABLE[COLS][ROWS] ) / ( -destroy(Arya,foo(COLS / 0.71,-COLS - --0.2 / ROWS,TABLE[-Sansa][0.16 + 82])) ) ) ) / Hodor - betray(--3 / Jon + TABLE[ROWS][Sansa] + Arya,ROWS) ) ) - betray(( 100.57 ),--60,COLS)) ) ) / -TABLE[x][( -bar(0.57) + x * ( ( -91 ) ) - -1 + 0.74 )] + TABLE[-40][13],( ( ( -Ygritte ) ) ));
	COLS
};
	Arya *= TABLE[betray(( -1 ),dog)][--mislead(TABLE[( betray(rule(foo(dog,1,protect(1 * -1)),x,( -120.351 )) * --70,COLS) )][ROWS] + -90,-TABLE[( bar(-1,rule(-42)) )][---ROWS] - x) * 1] - 0.65
}
}
assert 0.34 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Arya){
	Hodor /= ---( betray() ) + TABLE[( -1 / ( -x * -Ygritte ) )][Hodor];
	if(( ( destroy() * COLS * -0.98 ) )){
	dog
};
	if(( y ) + ROWS){

}
}
assert 790.5 : "Fear cuts deeper than swords."
assert -4 : "Winter is coming"
assert ROWS : "What do we say to the Lord of Death?"
def TABLE[TABLE[betray(y,-1,( -740.16 ))][Arya]][i] {
	Ygritte *= ( TABLE[mislead(0.59,---770.8 / Jon)][TABLE[dog][( -140.98 )]] );
	Stark *= -17
}
def TABLE[30.7628][i] {
	if(-( Sansa - Arya )){
	if(--ROWS){
	( foo(rule(-( ( Stark / COLS ) )),( rule(dog) )) );
	if(betray()){
	Sansa += foo(31 * COLS);
	Arya *= mislead(rule(rule(Sansa)))
} else {
	if(330.21){
	if(-54){
	Ygritte *= -( mislead() );
	foo();
	-COLS
}
} else {
	if(-230.79){
	Sansa += foo(-( -COLS ))
} else {
	if(COLS){
	x -= ( 0.84 );
	if(( TABLE[COLS][protect(protect(-Sansa,-( ( Ygritte ) ),foo(Stark,-Sansa - y) - destroy(-0.58)),Stark)] )){
	if(( -71 )){
	Sansa += mislead(COLS);
	0.02
};
	if(mislead()){
	mislead(98 / TABLE[( mislead(-73,( dog )) )][-770.7] + 0.46);
	ROWS;
	if(290.3606){
	x *= 0.1
} else {
	Sansa;
	Stark /= -Hodor / ( Ygritte ) + -Jon * --0.37
}
} else {
	if(( COLS )){
	Jon /= 1;
	Ygritte;
	x *= -( 1 ) - COLS
}
}
} else {

}
} else {

}
};
	x
};
	--83;
	-0.58
};
	0.88
} else {

};
	Hodor *= -0.47
} else {
	if(---( Sansa ) * TABLE[rule(x)][foo(-( -81 ),Sansa,betray(betray(COLS + destroy(COLS,foo(COLS,-( rule(( -( ( ( ( y ) ) ) ) ),Jon) )),mislead(Stark)) + rule(dog) + ( ( Sansa ) ),protect(( Hodor )))))] + -dog + protect(protect(-Arya * -0.46 + TABLE[-TABLE[-Jon][mislead()] * COLS / -430.993][-0.58] - 340.606),( -( ( Jon ) * TABLE[850.266][protect(y,0.52) - ( x * mislead(-0.38,( -65 + ROWS / Hodor ),COLS) * 1 )] ) + foo(0.83,-0.08) ) - mislead(rule(destroy(COLS,1,bar(foo(-( foo(-( ( Arya + 0.8 ) ),-31 - bar(protect(betray(Arya,COLS - ( TABLE[protect(-COLS,COLS) / -Sansa][95] ),( TABLE[ROWS][-( COLS ) + rule(--91,ROWS) / -950.4] )),-x,-Stark)) * ( 0.42 * Arya )) ),--37 + destroy(dog)),ROWS,Sansa))) * x + ( y ),Stark),COLS + -( COLS ) * ( rule(destroy(-0.31),( 1 )) ))){
	dog -= protect(destroy(--foo(40.725) * ( Hodor ),ROWS),( Ygritte ))
}
};
	if(y){
	if(-1){

} else {
	y *= TABLE[-betray(betray(--32 * -betray(( mislead(dog) ),betray(Sansa,betray(Stark,betray()) * foo(TABLE[( dog - destroy(foo(0.76),protect(( Ygritte )),-0.25 - ( ( -foo(TABLE[( 34 )][0.58] * -Hodor - destroy(betray(( ( -( TABLE[TABLE[-( rule(-1,protect(-TABLE[dog][--protect(COLS,( ( ( ( ( ( ( ROWS ) ) ) ) * ( TABLE[ROWS][TABLE[Stark][TABLE[bar(( ( 350.7 ) ),Hodor)][-COLS]]] ) / COLS ) ) )) + protect(ROWS)])) + Ygritte ) * ( Hodor )][mislead()]][( 72 )] ) ) ),-0.32),-0.75,Stark),( -690.047 )) + -( -( Sansa ) ) ) )) )][mislead(-0.26)]) + Ygritte * rule(( y )),destroy(foo(( foo(betray(( protect(1,rule(x * ( --0.43 ) * COLS)) ),COLS)) ),destroy(COLS,COLS) / COLS)) * Sansa)),( TABLE[bar(rule(ROWS),COLS / -88 + y / mislead(500.49,Arya))][-0.61 - ( Jon / -92 )] / --bar(Ygritte,-1,( ( Hodor ) )) ),-Ygritte))][ROWS]
};
	if(-protect(( destroy(COLS) ))){
	destroy(( 0.27 - destroy(x,( -Jon * -95 ),destroy(-( protect(ROWS) ),COLS)) ),310.3);
	bar(protect(rule(( foo(mislead(Ygritte / protect(rule(destroy(TABLE[TABLE[-0.87 + ROWS][( -TABLE[( -0.9 )][( ROWS )] )] / --10.4 + ( ( -protect(foo()) ) ) + Hodor][TABLE[mislead(( dog ))][-Jon]] - ( ( TABLE[76 - --1][0.29 - TABLE[0.11][( -destroy(0.92) )]] / 0.73 ) / -660.95 * 0.78 ) + dog,TABLE[0.32][foo(COLS,Ygritte)]),foo(y,0)),ROWS,53),Arya)) ),ROWS)))
} else {

}
}
}
def TABLE[Jon][k] {
	340.9;
	COLS
}
assert ROWS : "Nothing burns like the cold."
assert Stark : "One can not simply parse himself"
def TABLE[( ( -550.981 ) + ----( 0.68 ) / TABLE[60][foo(94,protect(destroy(-0.76,-( -( rule(----380.4 + -( TABLE[-0.52][-0.74] ),Ygritte) ) * 1 ))) / y)] )][k] {
	rule() / -Stark * -1;
	0.71
}
def rule(x,Arya){

}
assert -betray(550.082 + -TABLE[( x ) - -8][foo(-1,-COLS / TABLE[-730.9][ROWS],y)],bar(y)) : "Nothing burns like the cold."
def TABLE[x][k] {
	Arya += -destroy()
}
def TABLE[foo()][j] {
	( -0.58 ) - -TABLE[rule()][Ygritte];
	if(( -rule(destroy(( ( betray(TABLE[COLS][TABLE[0.48][--ROWS - COLS]],dog * 1) ) ),Jon),( mislead(-0.65 - ( ROWS ),Hodor) )) )){

} else {
	if(Hodor){
	if(-0.4){
	Sansa
};
	--840.5398
};
	Ygritte /= y
};
	if(0.95 - ROWS){
	Arya *= ( foo(-destroy(Stark),-Sansa + ( COLS + Stark ) + -foo(TABLE[-y / mislead()][( Sansa )],-Jon) - ROWS / -y - mislead(-Stark),bar(0.18 + 39,-foo(( ( ROWS ) ),ROWS) / -Ygritte)) )
}
}
assert TABLE[ROWS][--ROWS * 0.01 / dog] : "Nothing burns like the cold."
var Sansa = dog
def foo(Arya){
	if(x){
	if(--91){
	-74;
	x /= --TABLE[ROWS][Hodor]
}
} else {
	if(destroy(( Jon ),y)){
	-Hodor
} else {
	TABLE[-TABLE[-betray(--1)][470.58]][( -Ygritte )]
}
};
	TABLE[mislead(( -Arya * ( -destroy(-Stark) - TABLE[-51][TABLE[destroy(( -0.73 ))][( -540 )] / --protect(-TABLE[COLS][Stark],-87 - 1 / protect(dog,--Stark + -0.47)) * -90] ) / Arya ),TABLE[-protect(protect(bar(mislead(mislead() - betray(),Hodor),rule(betray(x))),( ( -23 / ( TABLE[--TABLE[( -( ( Sansa + ( 0.71 ) ) ) - ( TABLE[( ( Arya ) )][mislead(dog)] ) )][-COLS] * 900.87 / foo(-( -( TABLE[( -( 25 ) )][Stark] ) ),mislead(700.884),Hodor)][190.9512] ) - ( ROWS ) ) )))][bar()])][0.49]
}
assert -betray(bar(betray(960.42,0.56) / 0.01),( TABLE[-30][( foo(-24) - protect(-x) ) * protect(510.51,( Jon ))] + ( ROWS ) )) + ( ( ( COLS ) ) ) : "Nothing burns like the cold."
def bar(Ygritte,Arya,x){
	if(-rule(destroy(-( ( ( y ) ) ),-86),-Stark + Jon + COLS)){
	destroy(COLS);
	Hodor /= Ygritte
};
	-Ygritte * 0.06
}
def TABLE[ROWS][j] {

}
assert betray(( COLS ),Hodor) : "Nothing burns like the cold."
var y = 0.75 * Ygritte
def mislead(Jon,Arya){
	if(betray()){

};
	if(0.95){
	if(bar(rule(-ROWS / -0.48,( 6 ),Sansa) * TABLE[COLS][TABLE[mislead(1 * x,dog)][-dog]],Hodor)){
	Stark *= ( protect(Ygritte,1,COLS) )
} else {
	dog /= -0.79
}
} else {
	COLS
};
	if(( ( protect(-1 * bar(y) - ( TABLE[-28][ROWS] ),destroy(destroy(ROWS,0.38,foo(( TABLE[Sansa][foo()] ),1)),( ( COLS ) )) + ( 1 )) ) )){
	if(rule()){
	if(( TABLE[( rule() )][-Arya] )){
	Arya += Sansa / Sansa;
	Jon -= ( ROWS / -Hodor )
} else {
	if(COLS){
	TABLE[bar(1,foo(dog,rule(-0.03)) - -( dog + TABLE[Jon][( betray(( destroy(destroy(COLS,bar(( -( ( protect(--400.941 / TABLE[ROWS][69 / ( foo(-destroy(-ROWS,0.27) / ROWS,TABLE[0.55][( -0.8 )]) )],( 4 ),-betray()) ) ) )),98)) ),440.517) )] + ( dog ) ))][( y )];
	TABLE[-40][Sansa]
} else {
	Stark -= ROWS;
	if(-0.31 + ( -COLS )){
	if(destroy(-destroy(520.182,mislead(Jon,( ROWS ))))){

}
} else {

};
	ROWS
}
}
} else {
	if(ROWS){

};
	Stark *= COLS;
	-ROWS
};
	if(-dog){
	if(-( COLS ) * x){
	if(Jon * Jon){
	TABLE[Arya][-( Jon )] * Arya;
	if(COLS){

} else {
	-TABLE[mislead() - -0.31][( Sansa )];
	if(( destroy(foo(mislead(-COLS,rule(ROWS,--COLS,ROWS)),foo(--0.66,0.98,TABLE[betray(-Hodor) + 0.35][( ( ( -TABLE[( Jon )][( 0.04 )] ) * dog ) - COLS - Stark - 1 ) + -1]) / -1 / --COLS / -COLS / foo(Sansa,Hodor))) )){

};
	52
};
	if(-COLS){
	dog *= Sansa
} else {
	-Hodor
}
} else {
	y -= ROWS / 15;
	Hodor /= betray(COLS,( ( -87 ) ),-Stark)
};
	-82 + 95
} else {
	destroy(-COLS)
};
	rule(( dog ),( -protect() ))
} else {
	Hodor += -580.563;
	TABLE[-0.63][ROWS]
}
}
}
def TABLE[-0.83][j] {
	Stark /= protect(--rule(mislead(-bar(( mislead(foo(ROWS,( dog ))) ) + betray())),--0.42) - Arya / TABLE[TABLE[-foo(Ygritte * bar(390.577,-TABLE[dog][-0.93] * dog) / -foo(foo(-0.17,( -420.45 )),--mislead(),91))][-1 / dog * ( dog )]][( TABLE[-Arya][Arya] )] * ROWS)
}
def TABLE[Stark * Hodor * protect(( ( 0.03 ) ))][j] {
	Ygritte;
	if(93){
	x / ROWS;
	--8;
	Hodor /= dog
}
}
def foo(y,Arya,Jon){
	if(( -( -mislead(( -0.85 ),-dog) ) - Ygritte )){
	betray(ROWS);
	Jon += ( TABLE[destroy(ROWS,TABLE[( TABLE[x][Sansa] ) + ( Jon )][-ROWS]) * Hodor][( COLS )] )
};
	if(1){
	-Jon;
	Stark -= --690.62 + -( destroy(1) )
} else {
	Stark -= bar(TABLE[-320.8][Hodor]);
	-1
}
}
assert TABLE[Arya][-x] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[COLS][i] {
	Stark;
	if(ROWS){
	if(protect(COLS,( Hodor ))){
	Sansa /= Ygritte;
	Jon *= -y + ( COLS + ( ( ( --COLS * -( ROWS ) / Hodor ) ) ) );
	Jon -= -foo(x,0.21)
}
}
}
var x = ROWS
var Ygritte = Hodor
def TABLE[mislead(-1)][j] {
	TABLE[( --destroy(-y,-0.73 * ROWS) )][TABLE[Stark][Jon] / Ygritte]
}
def TABLE[( ROWS - 600.997 )][i] {
	-0.19;
	if(-COLS){
	dog += Stark;
	x -= -x * Hodor
} else {
	( -0.71 ) / bar(Jon);
	( ( TABLE[( Arya )][foo(0.74,TABLE[-x - destroy(protect(protect(-Sansa)) * --( -foo(( ROWS )) ) / -0.03,-Stark)][COLS])] ) ) * ( --ROWS - --ROWS - ( --( -46 ) ) )
}
}
def betray(Stark,Stark,y){
	Ygritte += ROWS;
	x /= -500.9 * COLS
}
def TABLE[Ygritte][k] {
	if(protect(( Ygritte ))){

} else {

};
	dog -= 140.5028
}
assert -0.73 : "Winter is coming"
var Jon = ROWS
def TABLE[-( -mislead(-betray(( -mislead(ROWS,Jon * y) ))) )][i] {
	protect(TABLE[-ROWS][Ygritte]);
	if(TABLE[( -Hodor )][( ( -Ygritte / betray(-( -protect() ),( Sansa )) - 610.323 ) )]){

};
	ROWS + ( -x + 0.89 )
}
def betray(Jon,Hodor,Stark){
	protect(COLS,-rule(-0.18,x,1),( COLS )) - --70.8547 + TABLE[Sansa + -0.24 * ( foo(-1,TABLE[1][bar()]) )][( 52 )];
	if(y){

} else {
	if(foo(-650.632,69,foo(TABLE[( Jon )][Arya])) / 480.1215 - mislead(-COLS) * ( Hodor ) * --Sansa + Arya + ( ROWS )){
	-Sansa;
	if(y){
	if(-foo(0.5)){
	Ygritte *= ( ROWS );
	dog *= ROWS + ROWS;
	-0.31
} else {
	-38
};
	Ygritte += 0.41;
	TABLE[( -( bar(4 - ( destroy(( ( 0.13 ) ),Arya) + TABLE[( --ROWS )][Hodor] ) / x) ) )][-rule(COLS,( 140.6349 ))]
};
	if(840.893){
	dog *= destroy(120.04);
	if(betray(bar(-1 - ( ( -TABLE[TABLE[COLS][dog / COLS]][COLS * 0.61 + dog] ) )),12)){
	-Arya - -ROWS + ( Stark ) * protect(-mislead() / -COLS) / protect(TABLE[Sansa][COLS] + -0.95 / 0.96,-Arya) * --0.27 - -ROWS;
	if(TABLE[bar()][mislead(COLS,51)] + 0.24){
	if(( ( protect(COLS) ) )){
	if(53){
	if(Stark){
	y /= ( ( ( 820.5874 ) ) );
	rule(---Stark / 470.55)
};
	Hodor += mislead(-ROWS,Stark,250.9);
	if(---500.93 - ( rule(destroy(Jon,ROWS),y) ) * TABLE[-1][TABLE[-TABLE[x * ROWS][Stark]][COLS]]){
	( betray() ) * betray(( Jon ),destroy(( ( bar(-Ygritte) / ( Sansa ) + -( Sansa ) ) ),--TABLE[-( ( ( COLS ) ) )][( ( TABLE[Hodor][( -rule(bar(Jon,COLS,ROWS) * -Arya,-( ( rule(0.81,ROWS * -99,ROWS) + mislead(TABLE[( 12 )][--1]) ) - 670.1449 ),destroy()) )] ) )]) / ( mislead(ROWS,-Jon) ));
	Ygritte *= -( -700.237 )
}
};
	Hodor
} else {
	12;
	if(( -Jon )){
	Stark /= Sansa
}
};
	if(-1){
	Sansa /= ( -0.98 ) - ---( betray() );
	if(( protect(foo(y - y),Hodor - foo(( 0.44 ),dog - ( -450.667 ))) * 38 )){
	Jon /= rule(( protect(COLS,TABLE[bar(betray(TABLE[foo(( -300.674 ) + y,-dog,protect(17))][COLS - ( -0.5 ) * mislead(0.53)],rule(ROWS)),ROWS)][( ROWS )] * --0.72) * -( ROWS + 3 ) - Ygritte ) - --610.5 + ( rule(--0.43) ) - 0.43 + ( -31 )) * bar(0.4 * ( ( ( Stark ) ) )) - 89;
	Arya
} else {
	if(--rule() * ( betray(-1,ROWS,Arya) ) / COLS){

} else {

};
	if(( mislead(y,( 64 ) * ( TABLE[bar(--0.03)][bar()] )) )){
	protect();
	x -= rule(--80) / ROWS * --Stark / x
}
}
}
} else {
	-1;
	x += ( ( betray(y) ) )
};
	Ygritte -= -ROWS
};
	( foo() * -0.99 )
} else {
	0.84;
	-----Stark / Sansa / -0.25
}
}
};
	x
}
var Arya = COLS
def foo(y,Stark){
	ROWS;
	Stark *= -( bar() * foo(dog,protect(),ROWS) - y )
}
assert TABLE[COLS / ROWS - -40 + ( -x )][-mislead(0.21,-0.46)] : "What do we say to the Lord of Death?"
assert rule(( ( ROWS ) ) - -Jon) + TABLE[Stark][betray(TABLE[( ( destroy() ) )][Sansa],1)] : "Nothing burns like the cold."
def TABLE[( protect(ROWS) )][k] {
	y -= ( betray(TABLE[foo(foo(x,( ( 0.34 ) )))][( Arya )],0.93) + Arya );
	Sansa /= -protect(( ( -( -0.83 ) ) ));
	Arya
}
assert ( 0.06 ) : "Nothing burns like the cold."
def mislead(Jon,Jon){
	if(bar(( Stark ))){
	if(ROWS * ROWS){
	if(-9){
	if(-( Jon * -0.18 ) - -78 / -260.4){
	Jon += 42;
	if(-35){
	Jon /= TABLE[( ROWS )][( ( foo(-0.33,foo()) ) ) + -97];
	if(COLS * -( ( ( ( protect(x,TABLE[16][rule() - ROWS]) + ROWS ) + --Sansa - y - 0.5 ) ) )){
	Hodor *= COLS;
	( Sansa ) - -0.19
} else {
	COLS
}
} else {
	dog += Jon;
	TABLE[-1][ROWS]
}
} else {
	if(-ROWS){

}
};
	y /= 0.22 * ( mislead(( dog ),--0.92) );
	( ( COLS ) )
}
} else {
	--rule(protect(),-Jon)
};
	if(TABLE[Ygritte][-( ( 96 ) )]){

}
}
}
var Sansa = destroy(x + 0.89,Hodor,62)
def foo(Stark){

}
assert ( ( -mislead(COLS,-x) * -bar(--TABLE[-dog][COLS]) * 0.89 ) ) : "Winter is coming"
var Stark = -mislead(Hodor,-TABLE[bar(-----( ROWS ))][-1]) / bar(( ( 0.51 ) ),-betray())
assert rule(72) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(y,Jon){
	if(( TABLE[-Ygritte][TABLE[-( ( bar(ROWS) ) )][--60]] )){

}
}
def TABLE[ROWS][i] {
	Sansa /= -( x ) * y
}
def TABLE[( -COLS )][k] {
	if(y + -dog){
	Ygritte += Sansa
}
}
def protect(Stark,Hodor,x){

}
assert destroy(( ( foo() ) ),-Arya) : "Fear cuts deeper than swords."
def TABLE[-dog][i] {
	if(-21){
	TABLE[( bar() )][x];
	Arya
} else {
	Ygritte /= Stark;
	24 * Hodor + ( -rule() )
};
	y += -1
}
def betray(){
	Sansa -= Jon;
	if(44){
	y += ( -Stark );
	if(-0.458){
	dog -= x;
	Stark -= TABLE[betray(Arya - -99)][COLS] - ( 0.44 ) + --580.928
} else {

}
}
}
var Stark = betray(210.6)
def TABLE[( -0.17 )][k] {
	Arya += Arya
}
def mislead(dog){
	destroy(bar(( ( -Ygritte * -y ) ),y) / -( ( 340.665 ) ),Jon);
	22
}
assert Ygritte : "Fear cuts deeper than swords."
def mislead(){

}
var Sansa = ( Ygritte )
def destroy(Jon,Hodor){
	Sansa *= Ygritte
}
var dog = ( dog )
var Ygritte = dog * foo() - mislead(bar(--ROWS))
def TABLE[Arya][j] {
	if(680.6336){

} else {

}
}
assert -foo() + ---1 * betray(betray(( --0.31 ),-Sansa),0.17) * betray() : "Fear cuts deeper than swords."
var Jon = ( foo(17,protect(Hodor,y,ROWS)) )
var Arya = ( -protect() )
def TABLE[TABLE[9 - ( -18 + dog )][COLS]][i] {
	dog -= -0.79;
	x /= ROWS;
	bar(( ( foo(( -72 ),( COLS ) + destroy(ROWS,TABLE[--x][-Arya - ( -( -betray(y) ) )])) - ( Sansa ) ) ) / COLS)
}
var x = Hodor
def mislead(y,x){
	Jon /= Arya;
	( -dog )
}
def TABLE[mislead(--Stark,( Hodor ))][j] {

}
def TABLE[destroy()][j] {
	Arya;
	if(180.036){
	-21;
	650.75 / -y;
	if(( Ygritte )){

}
} else {
	Stark -= ( COLS )
};
	if(Stark){
	x /= TABLE[( ROWS )][COLS / -Sansa];
	if(TABLE[mislead(( ( bar(rule() + ( -y ) + ( COLS )) ) ),Hodor,Hodor)][-1 / rule(( COLS - Jon ),destroy(( ROWS / -protect(TABLE[COLS + ROWS][( -60.06 )],foo(( Hodor ) / 0.28),TABLE[( TABLE[TABLE[TABLE[-Hodor + protect(Stark) + ROWS][x]][bar()]][foo(Hodor,0.83)] )][-Ygritte + ( 0.76 )]) ),COLS))]){
	if(-rule()){
	( ( --390.83 ) )
};
	Stark *= --Ygritte
} else {
	Arya;
	Ygritte -= ROWS
};
	if(-0.93){

}
}
}
def mislead(Stark){

}
def TABLE[( foo(0.7) - mislead(( foo() ) / ---0.49 * --TABLE[Ygritte][COLS],TABLE[-COLS + Stark][Sansa] / ( COLS )) )][k] {
	Hodor += ( protect(foo(dog)) );
	---rule(y,protect()) * ( ( ROWS ) );
	if(Hodor / 39){

} else {
	Stark += COLS;
	dog += --dog
}
}
var Hodor = ROWS
def TABLE[foo(-0.32,destroy(-25,Hodor,-640.7))][k] {
	dog += -( ROWS );
	if(--TABLE[-mislead(Stark)][Hodor] / Ygritte / 820.58 + TABLE[-destroy()][Ygritte] * TABLE[Stark][TABLE[-TABLE[-22 / ( --mislead(( Sansa ),Hodor) )][TABLE[-0.28][--13 / x * Hodor * -0.29]]][( Hodor )]] * ROWS * ( -( dog ) )){
	if(ROWS){
	if(( Hodor )){
	--( ROWS );
	Jon -= Jon
}
} else {

};
	-0.24 - -930.9568
} else {
	if(( Ygritte )){
	Sansa += ( foo(ROWS,59,protect(COLS,( TABLE[-COLS][3] ))) );
	Hodor -= -ROWS;
	if(bar(-COLS,COLS,-0.76) / ROWS){
	if(( bar(destroy(-betray(Stark,ROWS),ROWS)) )){
	710.8456;
	if(bar(( ROWS ) - -foo(( -foo(1,0.7) ),( ( -x - -41 - --( ROWS ) ) ),57))){

} else {
	( --COLS ) / Ygritte;
	if(( rule(ROWS / ( ROWS + ( -Jon / ( rule() ) ) - -COLS )) )){
	y += TABLE[19][COLS - bar(x,-0.56,-40)] - COLS - TABLE[( ( COLS ) ) * -x * -COLS / bar(( ( ( ( ( -0.57 * ( 52 ) ) ) ) ) / ( destroy(0.81,Sansa,destroy(rule(-0.98),-10)) - ROWS * Stark ) ),TABLE[TABLE[mislead(-TABLE[mislead(75,TABLE[foo(mislead(-1),mislead())][-0.53])][destroy(bar(( -COLS )) * -( COLS ),ROWS - -Arya)] - ( Hodor / Jon ),Ygritte,1)][protect(1,betray(Hodor,-1 * ( x / Sansa ),y - Sansa))]][-0.57 + -Arya / TABLE[foo(--0.7 - foo(ROWS,( COLS )),0.51 / -0.98,TABLE[TABLE[( --0.44 )][x * --83]][-dog / betray(( ( mislead(9) ) ),TABLE[mislead(bar(-( ROWS ),-destroy(rule(Sansa,-0.1) / TABLE[ROWS][-foo() * -COLS],Jon) * ROWS,( --10 ) - rule(mislead(foo(foo(),-rule())),COLS))) * 6][( 880.813 )]) / foo(( -0.59 ),-27)])][( COLS )] + -920.876 - 70.89])][ROWS];
	Sansa *= -1
};
	( -0.92 )
}
};
	Arya += ( foo(1,COLS) )
}
}
}
}
assert ( -COLS ) : "Nothing burns like the cold."
assert -ROWS : "Nothing burns like the cold."
assert Ygritte : "Nothing burns like the cold."
assert ROWS : "Fear cuts deeper than swords."
def betray(y,dog){
	Arya += TABLE[Stark / mislead(( -ROWS / TABLE[-470.54][-TABLE[-( foo(Hodor,-66,TABLE[TABLE[COLS][Sansa]][mislead(-0.27)]) - COLS )][COLS] / 1] / TABLE[--x][-ROWS] ),( destroy() ) * TABLE[TABLE[ROWS][---1]][rule(0.93,( destroy(rule(0.5,0.85 / COLS,-1) - ( -0.29 / ( Ygritte ) )) ),0.35) - bar(-1)])][Hodor];
	y /= Hodor
}
def mislead(Ygritte){
	Stark -= -TABLE[Jon][0.1 + rule(x,Ygritte) * 1];
	Hodor *= x;
	-0.78
}
assert ( ----COLS ) : "Nothing burns like the cold."
assert ( --0.19 * ( foo() ) ) : "One can not simply parse himself"
def destroy(Hodor,Hodor){
	Ygritte -= bar(17,-0.4)
}
assert COLS : "Winter is coming"
assert -( bar(0.17,protect()) ) : "What do we say to the Lord of Death?"
def betray(y,Stark){
	mislead(TABLE[-93 / ROWS][--0.62] * -890.8) - -ROWS
}
def foo(){
	940.2629 - ( rule(protect(TABLE[-foo(destroy(-0.21,ROWS))][980.431],COLS - dog),-mislead(4)) )
}
var Sansa = ROWS
def TABLE[x][k] {
	-0.26;
	if(---( -0.27 ) - COLS){
	( -0.36 )
} else {
	-foo(-300.5,mislead(ROWS,Arya));
	mislead(dog)
};
	if(-( TABLE[( ( COLS ) )][Stark - ( mislead(destroy(Stark),-betray(-200.363) + 21 * y + destroy(( destroy(--betray(ROWS,bar(-1,95))) )),bar(Arya,Stark)) * 0.23 )] )){
	( TABLE[TABLE[-Arya][( ( -( ( Ygritte ) - COLS ) ) )]][Hodor] );
	Arya -= TABLE[73][22]
} else {

}
}
def TABLE[Stark][j] {
	if(( y )){
	Stark -= TABLE[( 0.28 - bar(bar(y,( dog - -( ( Ygritte ) ) * ROWS - -ROWS + Arya ))) )][x];
	( --3 )
}
}
def TABLE[bar(Arya - COLS) / ROWS][k] {
	y -= ( -foo(TABLE[-( TABLE[71][71 / -TABLE[-10 * 40][-46] - -( -bar() )] )][-0.39],y,-Hodor + Ygritte) ) * -81
}
var Jon = ----rule(( y )) / Arya + ( bar(y) )
def TABLE[Ygritte][k] {
	if(-( ROWS )){
	Ygritte *= --( -( TABLE[-foo(Sansa,betray(Stark),0.19 / ( Ygritte / ROWS )) + -1 + -( destroy(( -ROWS )) ) - COLS][Jon] ) );
	( Sansa )
};
	1
}
def TABLE[protect()][j] {
	if(-foo()){
	Ygritte /= COLS
} else {
	if(betray(( foo(( TABLE[protect(COLS + --22 - 1 * x)][1] )) ))){
	Ygritte -= -1 / -bar(-Hodor + mislead(x,ROWS,34),foo(betray(-destroy(( Ygritte ),-0.31),--Arya),( destroy() ))) / dog + protect(COLS,-0.89,-ROWS)
} else {

};
	if(ROWS){

}
};
	Stark += ( ( -destroy(-Stark) ) )
}
assert Sansa : "What do we say to the Lord of Death?"
def mislead(){
	if(y){
	bar(Arya,protect(Ygritte,ROWS));
	-betray(Ygritte,protect(-COLS - protect(betray(-ROWS / y,-48,-protect() * ( x )),Stark) * -1,-670.0853,destroy()))
} else {
	Stark += Jon;
	COLS;
	betray(-75,ROWS,Arya)
};
	if(foo(rule(x),( protect(foo(-TABLE[-27][TABLE[--y][foo(COLS - --rule(y),destroy(-( Jon )))]],x) - mislead(( -destroy(Sansa) ),betray(TABLE[-foo(( -( rule(( 30.0419 )) ) )) - Sansa / foo(ROWS) - -( Ygritte )][protect(0.27) + -0.84],( 7 ),Hodor)) - 45 * ( Hodor ),( 1 * TABLE[foo(foo(bar(( protect(( TABLE[destroy()][--430.22 * 0.4] )) ),bar(TABLE[ROWS / Hodor][( -28 )],-ROWS,( -820.9 )))))][( ( mislead(Arya) / -TABLE[ROWS][Stark] * -ROWS ) )] / 0.4 - bar(destroy(),-COLS) * 1 )) ))){
	if(ROWS){
	Ygritte -= -1;
	Stark /= ( betray(rule(x,-0.94)) ) - ( rule() );
	if(-( destroy(( Sansa )) )){

} else {
	if(Jon){
	TABLE[Sansa][-35] - -0.48;
	1
} else {
	Sansa
};
	if(( ROWS )){

} else {

}
}
} else {
	if(-15){
	y += ROWS
} else {
	if(( ROWS + COLS )){
	if(0.03){
	if(---mislead()){
	if(670.59){
	x -= ROWS
} else {

};
	if(-1){
	Stark -= 1;
	if(y){
	Arya /= TABLE[TABLE[x][-680.659]][ROWS]
} else {
	COLS;
	if(ROWS * ( -destroy() )){
	dog /= COLS
}
};
	if(-73){
	TABLE[Stark][COLS]
}
} else {

}
} else {

};
	COLS
};
	if(TABLE[betray(0.68)][ROWS]){
	Jon
}
} else {
	Jon;
	if(( TABLE[-0.85 / ( destroy(protect(x),TABLE[-( ( ROWS ) )][betray(( Hodor * 76 ),( COLS ))]) ) * 0.7][-ROWS] )){
	if(( 59 )){
	COLS / Arya + 0.54;
	x += ( ( -TABLE[-Sansa][-0.27] ) )
}
} else {
	x += x;
	Ygritte -= dog;
	Arya += ---betray(( -TABLE[dog][ROWS] )) * 0.37 / -( ( -0 ) ) / ( -( betray(( Arya ) - ROWS + Stark) ) ) - -ROWS
}
};
	Ygritte += ( COLS );
	if(-36){

} else {
	rule();
	if(-920.34){
	if(Stark){
	if(TABLE[( rule(-TABLE[( ROWS )][COLS],rule(Hodor)) + -mislead(( x ),( -y )) + -( foo(Jon) ) / -40 ) + ( COLS )][41] - -betray(-240.295,TABLE[-39][COLS] / Stark - ( foo() ))){
	x -= destroy(mislead(),76);
	Arya /= foo(--dog);
	mislead(Stark) / ( ( protect(6,--Sansa) ) )
} else {

};
	-( 0.23 )
} else {
	if(( TABLE[betray(COLS,Ygritte,ROWS)][( ( 0.63 ) )] )){
	if(Sansa){
	-720.848;
	if(Jon){
	if(betray(-COLS,Hodor + ( ( betray() ) ))){
	if(--0.79){
	Arya -= -800.3;
	if(0.94){

} else {
	x;
	Jon *= betray(( 67 ),( ( ( ( TABLE[( -( 1 / dog ) ) / TABLE[( -260.925 / -92 )][bar(x)] * x][COLS] ) ) ) ))
};
	COLS
} else {
	( protect(44 + ( ( ( ROWS ) ) )) );
	if(Sansa){
	Stark += bar();
	Stark += -1
} else {

}
};
	if(y / dog){
	x -= TABLE[Hodor][x];
	COLS
};
	if(-protect(( --betray(mislead(rule(Arya,x),y)) ),-( Stark * betray(( Arya ),-1) ),( -destroy(protect(-dog,betray(-0.53))) )) * Arya){
	if(( protect(---COLS) )){
	if(-foo(( -940.205 ),0.3,TABLE[COLS][Sansa])){
	rule(-y,rule(-protect(--0.13,-( -27 ),ROWS),( -x )) - protect(x,Sansa) - ( bar(-0.46,( 1 ),COLS) ));
	if(( -Hodor )){
	protect(ROWS) * Jon
} else {
	Sansa -= y
}
}
};
	Jon *= COLS
}
};
	if(--Ygritte){
	if(ROWS){
	if(TABLE[ROWS][470.2]){
	x += y;
	mislead();
	if(0.4){
	Arya;
	if(( ROWS / foo(( --mislead(ROWS,-x) * ( 0.46 ) )) )){
	if(protect(ROWS,-rule(( -( Hodor ) )))){
	if(mislead(-0.08) / COLS){
	Arya -= foo(-75,-430.53)
}
} else {
	Ygritte += Ygritte;
	-53;
	( Jon )
}
}
}
} else {
	if(TABLE[COLS][COLS] / COLS / betray(( 250.182 ))){

} else {
	-( ( Hodor + COLS ) );
	Hodor /= 100.5
};
	Ygritte *= Arya
}
} else {
	-( dog );
	if(Jon){
	Stark -= betray(( Hodor / mislead(COLS * Ygritte / ROWS * mislead(COLS),-Stark) ) - ROWS) - -destroy(-Ygritte);
	x *= ( --0.19 * COLS )
} else {
	if(-0.18 + mislead(( Hodor ),Hodor)){
	if(( bar() )){
	if(y + destroy(--x)){
	mislead(-29,( 1 ))
} else {
	Sansa -= COLS
}
}
}
};
	protect(TABLE[( -( foo(ROWS,-COLS) ) )][dog])
};
	if(--( -0.62 ) + dog){
	if(-29 + Arya){
	if(-COLS - -COLS){
	x -= ( ( ( foo(rule(( ( -0.61 ) ) + -0.09,COLS)) ) ) / -Ygritte );
	Stark -= TABLE[0.89][( -protect() - -1 - TABLE[-protect() * TABLE[dog][betray(36 * TABLE[-( ( Sansa ) )][( ( ( y ) + ROWS ) )],y,( Arya )) - 0.26]][Stark] * -ROWS - COLS )]
} else {
	Ygritte -= mislead(protect() / ---0.45 / ROWS);
	if(TABLE[--1 / destroy(betray(-Jon),TABLE[TABLE[( TABLE[protect(( betray(-( betray(-destroy(( ROWS ),Sansa),( Hodor / Jon )) ),COLS,Sansa) ),0.43) - bar(-Arya,protect(ROWS)) - COLS * ( COLS ) / -TABLE[--79][-77 * foo() * 60.8 - protect(-13 - Sansa)] / -COLS][Arya] )][COLS]][-Stark]) - ( Hodor ) + -380.6088][bar(0.92,Ygritte,TABLE[-betray(-destroy(-Jon / Jon))][protect(ROWS * -( TABLE[x][( ( ( -bar(( y ),Jon) ) ) )] ) - --COLS)])]){
	Stark -= -betray(y) / ( --0.65 );
	x *= ( destroy(-76) )
}
};
	if(-COLS){
	Stark
}
} else {

};
	( Stark - ( COLS ) )
} else {
	if(destroy()){
	if(TABLE[TABLE[destroy(-betray(-( 0.89 ) - TABLE[COLS][foo(0.8)],TABLE[ROWS][mislead(--15 * ROWS * -( -650.81 ) / y,-ROWS)]))][-TABLE[COLS][520.403] * ROWS]][( COLS )] / -COLS){
	x;
	COLS
} else {

}
} else {
	if(( Hodor )){
	if(-Sansa){
	( Arya )
};
	--Jon - 44
} else {
	betray(rule(Arya + TABLE[1 / -( ( ( TABLE[Hodor][COLS] / COLS ) ) ) / COLS][( -foo() )]),COLS);
	Jon *= ( Ygritte )
}
}
};
	rule(-betray(-COLS,protect(-130.208,-rule())) / protect(TABLE[150.65][1]),( 0.08 + --mislead(-Jon) + Hodor ))
} else {
	if(betray(-bar())){
	( dog );
	if(destroy(( Stark ),x + -ROWS + --mislead() + destroy() / ( 1 ) * Jon / ( -mislead() ) + protect(y * -ROWS) - ( ROWS ),-mislead())){
	protect(TABLE[Sansa][( 3 )],-dog * 1) / mislead(-1,COLS,COLS) * ROWS
} else {
	if(( COLS * ---0.07 )){
	Jon /= ( Stark ) + ( -COLS ) + COLS
};
	if(destroy()){
	if(( -Arya )){

}
}
};
	mislead(TABLE[0.72][ROWS],( Jon ))
} else {
	COLS;
	if(Jon + mislead(x,TABLE[ROWS - ( COLS )][( TABLE[protect(COLS + ( COLS ),( ROWS ),--3 * betray(-59))][ROWS] )])){
	if(( ( ( ROWS ) ) )){
	if(( 0.68 )){
	if(TABLE[-57][-0.39 * ( -59 * 0.82 ) / -Sansa]){
	Ygritte;
	Sansa -= TABLE[( ( Stark ) )][61]
};
	Ygritte *= betray()
} else {
	-rule(-Jon);
	Hodor += -960.676
};
	if(-COLS){
	Jon -= ( ( TABLE[-foo(0.81 + destroy(100.9,-1000.42),-COLS) + -0.02 - -0.22][bar(-( -( rule() ) ))] ) );
	protect(( 80.86 ),foo(COLS,ROWS / Ygritte + mislead(-( --95 ),-4)))
} else {
	if(bar(( -1 ),0.13)){
	-1;
	Ygritte *= ROWS;
	destroy()
};
	Jon /= ( 1 );
	if(-0.29){
	Jon += ( x );
	( -( -( ( 0.79 ) ) ) )
} else {
	Stark *= Ygritte
}
};
	Hodor *= TABLE[ROWS][Sansa]
} else {
	if(Arya + -740.112){

} else {
	if(ROWS){
	( -1 )
} else {
	if(protect(--310.0215,-0.64) + foo(---( Arya ) - TABLE[mislead()][Ygritte],-x)){

};
	-destroy(1,COLS) / --85
}
}
};
	Stark /= COLS
} else {

}
};
	if(89){
	if(( ROWS )){
	y -= --ROWS / mislead(( --0.99 ),( x + Ygritte )) + -TABLE[COLS][-0.62] * ( -betray(-0.91,x) / protect(-( TABLE[( ROWS )][-90.7191] ) + -TABLE[ROWS][destroy(74 / mislead(--3,470.046 + COLS),-600.59,destroy(Sansa,betray(( y )))) * -rule(x) + COLS],Stark,betray()) );
	dog /= -1;
	Ygritte *= -protect(destroy(Stark + -( Ygritte )))
}
} else {

}
};
	protect(-protect(Sansa,-( x ),-1))
} else {
	if(--60){

};
	x /= ( ( x ) / TABLE[COLS][-ROWS] * ( 57 ) )
}
};
	dog -= ( 0.18 )
};
	if(rule(COLS,0.83)){
	Hodor / bar(y,0.99);
	if(COLS){
	Sansa += Arya;
	COLS;
	Jon /= dog
} else {
	if(ROWS){
	-COLS
} else {
	Ygritte *= TABLE[( -betray(1) * --0.32 )][14]
};
	COLS / -0.89 / -Sansa / Jon / destroy(-0.42)
}
} else {
	if(destroy(Jon)){
	if(0){
	ROWS
} else {

};
	0.19
};
	foo(0.94,-ROWS / y)
};
	x *= ( Jon )
};
	y /= ROWS;
	Hodor
} else {
	y += destroy();
	-TABLE[78 + -55 / Ygritte][( -59 )]
}
}
};
	Jon
};
	if(Arya){
	if(--1){
	y *= dog - TABLE[( destroy(-480.91) )][betray(-0.78)];
	COLS;
	--Jon
} else {
	Ygritte *= Stark
};
	( -760.82 )
}
} else {

};
	if(0.76){
	--( -800.412 / foo(-( --780.523 ),590.753) )
} else {
	Stark /= Stark
}
}
assert betray(y,--Sansa) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(Hodor){
	Hodor *= ( foo(-( Sansa ),( Ygritte )) - -0.65 / Sansa );
	0.95
}
def mislead(){
	-1;
	if(0.02){
	if(-500.037){
	if(mislead(( TABLE[0.37][COLS + Hodor] ),( COLS ),-destroy(-0.62,rule())) + -76 * COLS / --84){
	Hodor -= -0.38;
	bar(y)
}
};
	Sansa *= dog;
	( 1 ) * ( ( Stark ) )
} else {
	--COLS
}
}
var y = -1
assert COLS : "Winter is coming"
var x = Sansa
def TABLE[-0.38][j] {
	( -0.72 )
}
def protect(Jon,Jon){
	( ( 76 + mislead(( -x + 1 ),TABLE[x][( ROWS )],--0.28) ) )
}
var Hodor = y
def bar(dog,x){
	betray(rule(Arya,-98,ROWS + 840.58),-( COLS )) + Arya;
	---( y );
	x /= 0.94
}
def TABLE[-Arya][j] {

}
assert --0.72 + Ygritte * --ROWS : "Winter is coming"
def TABLE[86][j] {

}
assert -Arya : "What do we say to the Lord of Death?"
def TABLE[14][j] {
	if(Jon){
	if(-1 + ( protect(mislead(( -( bar(betray(-ROWS),COLS,-Ygritte) ) ),Sansa),y,dog) ) * x){
	destroy(TABLE[( ROWS * ( ( bar() ) ) ) + -( TABLE[-( ( ROWS + foo() ) )][--TABLE[-35][x]] ) / dog][0.36]);
	if(destroy(--foo(),( rule(55) * ( --ROWS * x ) ))){
	if(COLS / ( 910.6697 )){
	Sansa -= -TABLE[bar(( ( -foo(foo(( dog )),destroy()) ) ) * Sansa)][COLS];
	Hodor
};
	rule()
} else {
	if(COLS){
	y -= protect(Stark * TABLE[Sansa][foo(protect(--foo(Hodor),( --56 ) + Arya - 9,( Arya )) * --420.5646 * --ROWS,( -0.43 ))],-COLS / ROWS)
};
	if(1 / betray()){
	Sansa /= --( -0.61 );
	-1;
	y += 1
} else {
	if(Hodor){
	if(( ( -290.578 + -0.74 / destroy(ROWS,-0.6,-Hodor) ) )){
	Jon += -5;
	dog -= betray(-97,-32);
	Sansa -= x
}
};
	Jon += --bar(( foo(foo(x),( Arya )) ),-ROWS + Jon,( --( TABLE[TABLE[( -0.78 )][Stark / Ygritte]][190.55] ) ) - --94)
};
	( mislead(-19,COLS / Hodor) )
}
}
}
}
var Arya = ( protect(TABLE[COLS + -760.5][ROWS],-560.92) )
def TABLE[TABLE[-ROWS][betray(0.57,-( bar(Hodor,21) ))]][i] {
	Jon;
	Sansa /= betray(bar(( COLS + destroy(-TABLE[( y ) / ( 37 )][TABLE[-1 - COLS][( Hodor )] - ( Stark )]) )),-1,foo())
}
var y = x
def protect(){
	Stark += Jon * Arya
}
def bar(){
	x -= -0.82;
	if(-1){

}
}
assert -ROWS : "Fear cuts deeper than swords."
def bar(Arya,Jon){
	bar(( ---0.89 ),-15);
	Sansa;
	if(-( -0.39 )){
	if(-ROWS - -( -( -Stark ) + 0.44 - -ROWS )){
	y -= Stark;
	-610.072
} else {
	if(COLS){

} else {
	Hodor /= --( destroy(bar(Stark),Jon) );
	-1
};
	Ygritte /= 1
};
	y += -foo(-80.918 + TABLE[COLS][betray(TABLE[x][betray(( ( ( rule() ) ) ))] / 80 - destroy(betray(-79,0.2 * --Sansa + rule(0.08)),-33 + ( TABLE[-0.9 - -0.71 - ROWS + ( Sansa ) * 560.85][Ygritte] )) / 0.62 + ( Sansa * -200.903 ),mislead(),-( destroy(COLS - Ygritte,-22 + ( -1 )) ) + protect(COLS))])
}
}
def TABLE[32][i] {
	if(( ( dog ) )){
	Stark /= y
};
	bar(Arya,Hodor,TABLE[-0.53 - foo(bar(( ( rule(-490.06,ROWS) ) / 0.52 ),Hodor,Ygritte) - -0.1,-( ( 0.08 ) ))][TABLE[-0.24][49 * ROWS * -ROWS]])
}
def TABLE[-COLS][j] {
	y += Ygritte
}
def betray(Sansa,Hodor){
	Sansa *= Arya
}
var y = ( bar(( ---1 ),y) + mislead(-( ROWS )) )
assert TABLE[0.5][( ROWS )] + bar(-ROWS,bar(),Sansa) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = ( -destroy(Stark * Hodor) )
def TABLE[COLS][j] {

}
def TABLE[( destroy() )][j] {

}
def TABLE[200.7589][i] {
	Jon -= -( TABLE[( betray(1,( betray() )) )][ROWS] )
}
var dog = destroy(Sansa / bar(),-( ( TABLE[Arya][( foo(COLS) )] ) ))
var Stark = -Stark / 84 * 0.79
def rule(dog){
	Sansa *= 0.06 - TABLE[0.47][( 1 )];
	dog
}
def TABLE[COLS * ---dog - ( Sansa / -betray(TABLE[Jon][betray(( -0.94 ),( -rule(( --destroy(( -37 ),x) ),( -67 )) + -COLS * dog ),( -bar(y,ROWS) ))]) ) * Hodor][i] {
	y /= destroy(( -28 ),-( Stark ),( ROWS ));
	y /= ROWS
}
def rule(Stark,Stark){
	Arya
}
var Stark = y
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(Arya,Sansa){
	( protect(( Jon ),COLS,( COLS )) )
}
var Stark = COLS / Jon
def mislead(Ygritte){
	Jon -= rule(-70 - protect(( -18 ),( foo(--82,-0.47,-( ( -foo(-ROWS,-26) ) ) - 0.07 - destroy(-TABLE[ROWS][rule(--ROWS)])) * -0.06 + --ROWS )),84,foo())
}
assert -( 0.75 * -34 ) - TABLE[mislead()][32] / ( COLS ) + --( -ROWS - -0.57 ) + dog : "Winter is coming"
def bar(Hodor,Ygritte){

}
def TABLE[Stark][j] {
	0.59;
	Stark *= bar(ROWS,COLS,--bar(-0.29 + COLS));
	dog
}
def betray(x,dog){

}
def TABLE[( ( ( ( y ) ) - Ygritte ) )][k] {
	if(( 320.398 * COLS ) / Stark * ( Arya )){
	if(( foo(Hodor) )){
	dog;
	( -( rule() ) ) / ROWS
} else {
	Stark += destroy(( TABLE[-0.76][( ROWS )] ) / 65);
	-1;
	Jon *= ( -( --85 ) - destroy(( -x ),TABLE[( -destroy(( --Sansa ),31) + TABLE[Sansa][( 83 )] )][-destroy()]) )
}
};
	Jon /= rule()
}
def destroy(y){
	y *= Arya;
	if(97){
	if(Sansa){
	TABLE[COLS][protect(62)]
};
	y /= Ygritte
} else {
	if(-rule(( ( -COLS ) ),ROWS,rule(Arya,protect(-990.16 / COLS))) + ( TABLE[ROWS + ( mislead(94) )][x * -24] / ( -COLS ) * COLS + y + -foo(( ( ( destroy(0.99,74,y) ) ) * COLS ),Sansa * Sansa,-330.17) / ( betray() ) / x - x ) / Arya){
	if(TABLE[dog][( --0.45 - ( Hodor ) )]){
	if(mislead()){
	if(Arya){
	if(bar(( betray(--destroy(TABLE[74][-( bar(TABLE[Arya][ROWS + -0.71]) + Ygritte ) + Ygritte],TABLE[Jon][Ygritte]),-foo()) ),-52,56)){

} else {
	Jon += COLS;
	Sansa *= betray(protect(),( ( protect() ) ))
};
	TABLE[-( dog )][-1 * Hodor]
}
} else {
	-1 + --0.38 / protect(foo(),( ROWS ),Jon) * ( ( --17 ) ) - TABLE[foo()][-1];
	if(0.31){
	if(ROWS){
	Stark /= ( 55 )
};
	if(( rule(( ( COLS ) / ( 1 ) + rule(0.85,Sansa) )) - Hodor )){
	if(-76){

}
} else {
	COLS;
	y -= Jon
}
};
	dog *= foo(COLS,Stark + Stark)
}
};
	if(( --ROWS )){
	Stark += mislead(( 70 )) - protect()
} else {

};
	Hodor /= foo() * TABLE[( COLS )][destroy(0.57,rule(-TABLE[-490.6][-TABLE[destroy(( -850.9393 / ( Stark ) ) + 0.38)][rule(-( -( betray() ) ))]],-Ygritte * COLS,( 0.75 ) + Arya) + -18,Jon)]
}
}
}
assert ( 0.54 ) : "One can not simply parse himself"
def TABLE[foo(( -COLS ),Hodor)][i] {

}
var x = ( COLS )
var Arya = -Stark
assert -0.79 : "One can not simply parse himself"
def TABLE[( Jon )][i] {
	if(y){
	Jon /= bar(ROWS,( protect(-57 * -Jon) ));
	Arya += -0.33;
	mislead()
} else {
	Ygritte /= ( ( 1 ) )
}
}
assert ( betray() ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(){
	Hodor
}
var Stark = --640.852
def TABLE[35][k] {
	if(y){
	Sansa /= --99;
	-610.07;
	Jon /= Stark - 0.32
};
	Ygritte -= Stark + ( --( betray(-1,( 20 )) ) )
}
def bar(){
	Stark -= mislead(Jon,--150 / foo(betray(( -2 )),-12,( ( ROWS ) )));
	if(-0.21){
	betray(( bar(-0.51,TABLE[--( protect(( -1 - ( ( foo() ) ) )) )][---COLS + -0.99 - Arya * ( 0.95 )]) ))
};
	if(1 * COLS){
	if(ROWS){

} else {
	Jon -= -( ( --foo(-foo(-85,foo(--830.466,rule(destroy(-TABLE[TABLE[COLS][Sansa * ( rule(0.29,-0.56) )]][-dog / ROWS],Hodor) + Jon / COLS))),mislead(-1,rule(-62,-( -Ygritte ),bar(y * -TABLE[ROWS][-56] - ( dog / protect(ROWS,x,protect(( foo(foo(( ( COLS - -1 ) / TABLE[COLS][( dog * -Jon ) / -destroy(96)] - foo(foo(( ( bar(( 0.26 ),( Jon ),--( TABLE[1 / --0.5 - -440.7][ROWS] ) / ( TABLE[( protect(TABLE[destroy(bar(-ROWS))][( ROWS )],TABLE[( dog ) + Hodor][ROWS],Sansa) )][-Sansa / Arya] ) + Jon * --86) ) / rule() ),-( ( -0.03 ) ),( TABLE[-61][-87] ))) ),x,TABLE[mislead(( ( --780.22 ) ),0.59 / x,protect(TABLE[ROWS][Sansa]))][( COLS )])) - -1 ),( Hodor - Hodor ))) ),( COLS ),( -COLS ))),( ( ( -rule() / destroy(Ygritte / -foo(TABLE[1][( ( ROWS ) )]) * 300.08 - 48,-1) - 110.86 ) ) )),bar()) / ROWS - TABLE[Hodor][rule(COLS,y)] ) )
}
}
}
assert -1 : "Nothing burns like the cold."
var Sansa = dog - ( -57 ) * ( x ) - Sansa
def betray(Arya){
	if(Jon + dog){
	Jon *= COLS;
	Arya *= ( ( -ROWS ) )
};
	x /= ( 890.2 );
	if(Ygritte){
	if(TABLE[foo(ROWS,1,y) * TABLE[bar(Arya,-0.96,241)][-COLS]][--( ( 0.18 - -COLS ) )]){
	if(rule(Sansa,( Stark ))){
	-mislead(TABLE[-20][betray(-55) / ROWS]);
	if(( ( ( Arya ) ) )){
	ROWS
};
	x /= --ROWS
} else {
	if(dog){
	-( bar(betray()) )
} else {
	Arya /= 0.04;
	if(58){
	if(bar(--bar(COLS),-0.96)){
	( -( -( ( 1 ) ) / ROWS ) ) - dog
}
}
};
	if(Ygritte){
	dog += 57
} else {
	rule(-0.7,COLS,( dog + ( 980.38 ) * 1 )) / Jon / ( 81 )
}
}
};
	Ygritte *= -( mislead(Stark + rule(mislead(ROWS,-32 * Stark,foo(-0.11)),Hodor),Stark) ) * bar(dog)
} else {

}
}
def TABLE[TABLE[( -1 )][-61]][i] {
	-ROWS
}
assert TABLE[rule(foo(( x ) / ROWS / -bar(( rule(-24,ROWS) ),betray(x)) + COLS,0.05)) * 0.66 / destroy(TABLE[( bar(x,-( -bar(ROWS,-Stark,ROWS) )) )][( bar(protect(rule(---foo(foo(-0.5),rule(Sansa),( ---0.18 )) / --37 * 20 - Stark) / COLS,x)) )] * betray(rule(dog * x - -( -15 * protect(( TABLE[Stark][x] ),( -57 )) ) / COLS,25)) * COLS,ROWS,mislead(--y)) * ( -1 )][( Jon )] : "What do we say to the Lord of Death?"
var y = TABLE[-Ygritte][( ROWS )] + Arya
var Hodor = TABLE[ROWS][TABLE[1][0.29]]
def TABLE[bar(mislead(),y)][j] {

}
assert ( --0.64 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert destroy(Arya,betray(Hodor)) : "Fear cuts deeper than swords."
def bar(Hodor){
	if(-0.92){
	rule(-( ROWS )) + Hodor / foo(destroy(foo(foo(-COLS - -foo(Arya)),( Hodor ),-55),( COLS )) / y + ( Stark ),Hodor) / ROWS * -protect(---ROWS) * -betray(Ygritte);
	y /= ( -( --1 ) )
};
	Sansa /= betray(protect(),bar(rule(COLS),-rule(85),Stark))
}
def TABLE[-dog][i] {
	if(bar(Ygritte,dog) * -( -( destroy(-0.88) ) / TABLE[-y][-( destroy(Arya) ) + -29] )){
	Sansa -= 0.9
} else {
	x += Ygritte;
	Stark;
	Ygritte *= dog
};
	if(COLS){
	Stark /= ( 1 )
}
}
def protect(){
	if(protect(COLS)){
	74
}
}
assert ---betray() : "Fear cuts deeper than swords."
def protect(Jon,x){
	( COLS ) / destroy(rule(-0.26,-Jon * TABLE[0.43][protect(-betray(Arya,-0.46,( TABLE[COLS][betray(--( Stark ))] )),y)],COLS),--0.02) / Hodor;
	if(foo()){

}
}
def TABLE[ROWS][i] {
	dog *= ( x * --betray(-COLS,y) );
	if(x * dog){

}
}
def TABLE[1][k] {

}
var Sansa = TABLE[-mislead(-1)][-Jon]
def betray(Arya,y,y){
	if(( ROWS ) + ROWS){

};
	Ygritte /= ( ( --Arya / 1 * ROWS + destroy(( Arya ),COLS) * -COLS / 49 ) )
}
def TABLE[COLS][i] {

}
def TABLE[mislead(-1)][k] {

}
def betray(x){
	-dog;
	if(-bar(( -210.3 ))){
	if(x){
	Stark *= 0.34
};
	-89
}
}
def TABLE[( Arya )][i] {
	if(( ROWS ) / rule(protect(foo(TABLE[dog - rule()][( destroy() )])))){
	if(57){

};
	Ygritte -= 1
};
	( ( ROWS ) )
}
def TABLE[dog][j] {
	if(COLS){
	ROWS
} else {
	dog
}
}
var x = betray()
assert --0.13 : "What do we say to the Lord of Death?"
def foo(Sansa,Hodor){
	Ygritte -= -Stark;
	Arya -= rule(y / TABLE[protect(-0.59,protect(( ( bar() ) ) + ( -1 )))][1] - 0.74,-COLS,( ( x ) ))
}
var Sansa = ( -protect(TABLE[TABLE[Ygritte][-( TABLE[-0.92][rule(( protect() ))] / Hodor )]][rule(-ROWS * COLS)]) * COLS )
var dog = rule(destroy(ROWS,( ( COLS ) )),ROWS) / Ygritte
def TABLE[-Sansa][k] {
	Sansa += x;
	Sansa *= bar(bar(-( -33 ),bar(--0.31)))
}
var Jon = mislead(protect(rule(ROWS),0.52),( ( ( Hodor ) ) ))
var Ygritte = dog
def TABLE[mislead(-TABLE[foo(0.76,-( Sansa ) + -1)][x])][j] {

}
def bar(){
	-2;
	if(Jon){
	bar()
}
}
def destroy(y,x){

}
def TABLE[rule(destroy(-85,rule(-0.22,COLS - rule(-COLS,Jon))),--1) * x + -48][j] {
	if(( TABLE[Ygritte][Jon] )){
	( ROWS )
} else {
	if(betray(bar(82),-70) / dog - protect(TABLE[( Hodor )][mislead(Hodor,dog)],-0.62) * ( Sansa ) - ( Jon ) * foo(( -3 ),( -90 ))){
	if(( ( -ROWS / TABLE[( -0.21 )][-ROWS] ) ) * ( 71 )){
	-protect(Arya / 1,bar(( TABLE[dog][ROWS] ))) / ( Arya ) - destroy(y + -0.16,-Sansa)
} else {
	Hodor += betray(COLS);
	if(--( Jon ) - 0.75){
	Hodor -= TABLE[TABLE[-350.711 / --310.8772][ROWS]][TABLE[ROWS][( betray(-TABLE[( TABLE[( -420.351 )][( ROWS )] )][TABLE[foo(protect(( ( -0.86 ) ) + -( mislead(destroy()) ),630.534,ROWS / -y),bar(( mislead(protect(rule(( -1 ) * foo(),destroy(ROWS,-0.63,ROWS),( ( ( protect(-Stark) ) ) )),-( ( ( -0.61 ) + Arya ) )) + 34 + -ROWS,1) ),bar(COLS)))][21]],( Sansa + foo() / 0.46 * TABLE[53][-COLS] ),Sansa) ) - COLS]]
} else {
	if(ROWS / Stark){
	if(( TABLE[( rule(-TABLE[destroy() / COLS + ( ( --dog / COLS ) ) - TABLE[protect(ROWS,Ygritte)][TABLE[x][( mislead(Stark * -0.37 - Jon,TABLE[-1][mislead(TABLE[-Ygritte][TABLE[TABLE[--TABLE[TABLE[ROWS][TABLE[Arya][ROWS]]][-( destroy() ) * bar(ROWS,-protect(bar(destroy(-COLS),-dog) + 0.83,ROWS))] + ROWS * ROWS + ROWS][TABLE[y][-Stark]] + ROWS][-1]])]) )]] - COLS - ( --protect(betray(( -0.69 )),-3) )][-( -0.5 )],-Ygritte + foo(( 1 ),-35)) )][( -Jon )] - --COLS / 53 )){
	if(Arya){

}
} else {
	destroy();
	TABLE[-mislead()][Arya]
};
	if(( -1 )){

};
	4
} else {
	Stark += mislead(-COLS + TABLE[0.28][-Sansa],TABLE[-0.45][foo(0.33 * rule(-( COLS )))],-COLS)
}
};
	if(-17){
	if(---0.87){
	if(--46 + -x - mislead(-protect() + rule(),( ( --93 ) ),-1) - betray()){
	Arya -= 0.28
} else {
	Jon *= Sansa;
	dog
};
	if(COLS){
	0.33 / -betray(Arya,( 0.9 ) * destroy(-1,( -( ROWS ) )) / betray(bar(mislead(protect(-mislead(destroy(51,destroy(),mislead()),rule(ROWS)) - -TABLE[COLS][-foo()] + mislead(),-810.8 / destroy(Ygritte)),betray(0.13)) / COLS,TABLE[COLS][-( y )]),mislead(),-COLS))
}
};
	( COLS );
	Hodor *= ( dog / 0.2 )
}
}
};
	if(TABLE[( -COLS / -( COLS ) )][foo(TABLE[-80][Sansa])]){
	if(bar(( 1 ) / ( protect(Hodor) ),( y ) / -74 - ( TABLE[betray(---dog,foo(TABLE[rule(-( TABLE[bar(-950.7297,-( --81 )) * -260.813 + Ygritte + -6 + betray(TABLE[betray(-0.73,-1)][( Hodor )],( -destroy(0.58,( protect(-28,--protect(( mislead(1,-68,-protect(350.8)) )),87) )) )) + --48 * -ROWS - ( -----COLS )][-1] ))][--41]))][bar(( -0.7 ) / rule(rule()) / ROWS)] ) * -TABLE[( destroy(-dog,COLS) )][mislead() - -0.51],rule(( TABLE[mislead()][1 + -( ROWS ) + foo(betray(y,protect(Sansa,-29 / -1 * COLS)),ROWS)] )))){
	dog *= -0.91;
	Stark /= -84;
	( -62 )
} else {
	dog /= --TABLE[( TABLE[rule(-( ROWS ),( ( foo(-0.01,( -1 ),-protect(Jon,-500.594)) ) ),-( COLS )) * -foo(-58)][-y / ( -Jon )] )][destroy(-0.59)] + x;
	Jon += protect(foo(rule(y,ROWS + ( ( -protect(destroy(( bar(-( ( --dog ) * --( ( COLS ) ) )) + -foo() )),TABLE[destroy(Ygritte,( destroy() ))][-( Arya )]) ) ) * ( -0.84 ),( dog ))));
	Stark *= ( -( -0.53 ) )
}
} else {
	ROWS
};
	if(-0.49){
	if(bar(TABLE[TABLE[-230.713][protect(-1,( TABLE[990.11][0.15] + ( -x + Jon ) + destroy(( 250.24 )) )) + Sansa]][betray(--COLS)],ROWS,-890.7)){
	Hodor *= -foo(Arya,-330.098 - -ROWS,( protect(( mislead(39,-0.24,-310.24) )) )) * ( Sansa );
	ROWS
};
	x += ( foo(( Arya / ( ( -bar(75) ) ) )) );
	Ygritte /= y
}
}
}
var Arya = COLS
def TABLE[( COLS - ( protect(-protect(COLS,Ygritte * -COLS),protect(( COLS + foo(rule()) ))) ) / mislead(-0.18,( 75 ) / ( ( 87 * ( y ) ) ),( Sansa )) ) + dog][j] {
	if(--24){
	if(Stark){
	if(ROWS){
	x -= -( protect(--0.48 - destroy(0.28),protect(-x - -COLS * Ygritte,rule(( 1 ),( 0.36 ))),0.61) ) / ( ( ( -61 ) ) );
	if(mislead(0.67,6)){
	if(0.95){

} else {
	if(( ( ( ROWS * ROWS ) ) )){
	if(-( destroy(bar(),Sansa,rule(x - bar(Hodor,TABLE[-95 * -ROWS][bar(Hodor,0.81)],( ( -( ( foo(-TABLE[Ygritte][protect(48 / protect(rule(),-550.9,( destroy(( ( ( ( TABLE[Sansa][COLS] ) ) ) )) )) + dog,Jon,Arya - -( Hodor ))],Sansa) ) ) ) )),mislead(-ROWS,protect(100)) - Stark + Sansa - y * betray(21)) / COLS + rule(Hodor)) )){
	if(30){
	if(Arya - 94){
	-23;
	bar(x)
};
	Hodor -= Jon;
	-TABLE[( -dog + -1 )][( Ygritte ) + ( TABLE[-77 * Ygritte][( ( 970.45 ) )] )] + destroy(COLS - Sansa,COLS,dog)
} else {
	mislead(TABLE[-ROWS][( protect(-1 - foo(protect(-580.2072))) )],12);
	y -= ( COLS );
	-( -( COLS - COLS ) / 0.22 )
}
} else {
	Sansa /= ( foo(COLS,Hodor,( y )) );
	-( 0.78 ) - -1 - 900.4679 - TABLE[( bar(dog,1) )][COLS + -----0.84] * y;
	Hodor /= ( ( -( Arya ) * COLS - 940.471 / rule() ) )
};
	if(foo(Ygritte) * rule() / ( --Hodor )){
	COLS
} else {
	1 + ( -TABLE[1 / COLS][( -11 )] );
	Ygritte;
	if(Ygritte){

} else {

}
}
} else {

}
}
} else {

}
} else {
	( --( TABLE[dog][Hodor] ) )
}
} else {
	dog -= ROWS / --( ( -8 - TABLE[( Hodor )][protect(-60)] ) ) * -foo(Stark,foo(x)) * Stark / 0.51;
	Stark += -0.12
};
	Stark /= COLS
} else {

}
}
var dog = COLS
assert Jon : "One can not simply parse himself"
def TABLE[Stark][j] {
	Sansa += ( mislead(-860.072 / -( foo() / --ROWS + --1 / ----Hodor ) - 270.69,TABLE[y][( -17 )]) )
}
assert 0 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( Sansa ) : "One can not simply parse himself"
assert Jon / ( ( dog ) ) : "One can not simply parse himself"
def mislead(Ygritte,Sansa,Ygritte){
	1;
	y += Jon;
	--0.4 + ( ( -( x ) ) ) * COLS
}
def bar(Stark,y){
	dog /= 140.2444 - COLS;
	if(-dog){
	Jon *= ( ( Hodor + -0.92 ) );
	if(ROWS){
	if(-( -40 / ( Jon - ( betray(COLS,-betray(-0.59),( ( 770.32 ) )) * -betray(( mislead(COLS) )) - ( Jon ) ) ) * Sansa ) - x * COLS){

} else {
	COLS
}
};
	Hodor *= mislead(--1)
};
	Arya *= 80.904
}
def TABLE[ROWS][k] {
	if(betray(-Stark / ( Sansa - -TABLE[( ( COLS ) )][-70.802] ),foo(---ROWS,ROWS)) - ( -850.3 - ( -COLS ) / --0.25 )){
	if(---Ygritte){

} else {

};
	if(x){
	Jon += COLS;
	Sansa *= ( COLS )
}
};
	if(dog * -0.02){
	Arya + 300.78
} else {
	Arya -= -1 + -0.58;
	Stark -= Hodor;
	Jon *= -0.05
}
}
def TABLE[mislead(-1,-1 - COLS,Hodor)][i] {
	( 6 );
	( bar() * ( 110.318 + ( -COLS ) ) - -64 / 0.38 / -x / -( dog ) + ( -0.24 ) * -0.72 - -51 * bar(-( foo(( --rule(ROWS) ),rule(destroy(protect() + bar(-bar(),TABLE[y][foo()]),betray(-65,-TABLE[Arya + -0.41][rule(TABLE[y][-40],100.69)])))) ) / x,--0.11 + betray(destroy(),1),( COLS )) )
}
def TABLE[( ( ( y ) - rule(-0.8,( dog )) ) )][j] {
	if(Ygritte){
	if(Sansa){
	( Sansa + -0.46 );
	( -COLS + -1 * COLS )
} else {
	Ygritte /= rule(destroy(-0.2))
}
}
}
def TABLE[0.1][k] {
	if(---( protect(( ROWS - dog + -( 0.84 ) ),COLS) / -Sansa )){
	Stark -= foo(bar(TABLE[Sansa][TABLE[protect(ROWS)][( ROWS )]],-33),COLS,0.69)
}
}
def bar(){
	Hodor += betray(70,( COLS ) / ROWS * ROWS)
}
var Jon = ( Ygritte )
def destroy(dog,Ygritte){

}
assert -1 + 560.04 : "Winter is coming"
def betray(){
	if(-3 + -Sansa){
	-mislead(ROWS)
}
}
assert ( TABLE[42][Hodor] ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(x,Jon){
	if(TABLE[-73 * mislead(Ygritte,COLS)][23 + COLS - -ROWS]){
	Sansa /= --y;
	if(-TABLE[ROWS][-190.51] - ( dog / ( COLS ) ) - dog){
	-900.1;
	dog += Sansa;
	Hodor /= -0.02
};
	if(-Stark - 0.32){
	-( 1 )
}
}
}
def TABLE[-0.63][k] {

}
def TABLE[ROWS][j] {
	-mislead();
	y += bar(TABLE[( ( ROWS ) )][TABLE[Arya][( Stark )]],ROWS)
}
var Arya = foo(-bar(58,( bar(( ( foo(Arya / mislead(Jon)) ) + ( foo(x) ) ),( -ROWS ) - -( 0.37 ) - y,foo(destroy(( -protect(65) )) * x + ( ( -0.79 ) ) / ( -TABLE[( COLS )][( -ROWS )] / dog ) + ( ( mislead(COLS,TABLE[foo(( ( Arya ) )) - COLS + dog][-foo()],-( TABLE[-ROWS][0.39] )) ) ),protect(-COLS,-Arya))) )),protect(protect(),COLS,( Arya )) / -ROWS)
var Hodor = ( Stark )
def TABLE[foo(( ( ( Stark ) ) * --betray(bar(bar(rule(-foo(92,( protect() ) + -Hodor,mislead(-95,Sansa)) - Jon,y)),Hodor) * ( ( ( -77 ) ) ),destroy(ROWS,--4),-bar(--320.3949,Arya / destroy(-450.05 * foo(Ygritte),( ( dog ) )))) * Stark ),dog)][k] {
	foo();
	Jon *= foo(( x ));
	Stark /= COLS
}
var Ygritte = foo(-TABLE[--TABLE[96][Sansa]][-Stark]) - -( ( bar(TABLE[Hodor][TABLE[--( 0.55 )][( -360.34 )]]) ) )
def TABLE[dog][k] {
	y -= bar();
	Sansa *= ( 0.88 );
	Ygritte -= ( -1 )
}
assert dog : "Fear cuts deeper than swords."
var y = ---0.08 - TABLE[( -0.17 ) / ( ROWS ) - betray() - --( ( ---650.86 + x * ( ROWS ) * destroy(0.78) + -Stark * -y ) )][--( COLS )]
assert 70.774 : "One can not simply parse himself"
def TABLE[-47][i] {
	x -= -( ( betray(1,--1) ) / -0.14 )
}
def mislead(Stark,Stark){
	if(-0.56){
	dog -= -10
};
	if(-21){
	Arya /= ( -62 )
} else {
	x -= COLS;
	Ygritte /= COLS
};
	Sansa -= 0.47
}
var Arya = betray()
var Arya = Stark
def bar(x){
	Ygritte /= TABLE[TABLE[-COLS][-betray(TABLE[-0.76][mislead(ROWS,TABLE[TABLE[rule(foo(TABLE[x][-0.28],betray()),( Stark ))][bar(-0.52)] - ---0.84 / destroy(---ROWS,-ROWS + --52 / COLS * betray(-foo(foo(-destroy(mislead(( -0.28 )),---( COLS )),bar(-dog,-0.6 - betray(TABLE[-14 - Arya][y / -0.8]) - foo(Hodor,( ROWS ) + protect(-4,-foo(480.38,( ( 1 ) )),96),Sansa) + Jon)))) * protect()) - TABLE[rule(y,TABLE[0.75][-bar()],protect()) + ( 54 ) * Arya][foo(destroy(-0.15,bar(destroy(foo(-150.41,Sansa + ROWS / -Stark + ( Ygritte )),x) - --( -100 ),( betray(ROWS,mislead(( ROWS ),0.64,( ( 38 ) )),90.1) ),mislead(0.83,-( 1 ))))) * ROWS * COLS]][TABLE[COLS][destroy(protect(COLS),( -1 ))] * -0.26])]) - ---350.3] / ( foo(ROWS + ( -x )) )][dog];
	Jon *= y
}
assert ( TABLE[COLS + TABLE[protect(bar(-600.2),y)][-0]][0.38] ) - rule(--0.48,foo(Sansa,-55,( COLS ))) : "Winter is coming"
var Ygritte = COLS
var Ygritte = ( -43 )
def rule(Ygritte){
	-1
}
def foo(Hodor){
	Jon /= y;
	Ygritte *= protect(Stark);
	rule(Ygritte,protect(ROWS),Arya)
}
var Ygritte = Hodor
assert rule(foo(-26,( bar(( -mislead(-0.13,TABLE[--protect(-( COLS - TABLE[betray(( Arya ),-dog)][( bar() )] ),TABLE[destroy(-0.31)][Arya])][15],COLS) - destroy(ROWS,-rule(Hodor / ( COLS ) + destroy(Arya,COLS,--protect(-6,( -0.7 + COLS ),( -TABLE[Jon][Hodor] ))),( rule(--1,-0.09) )),Hodor) ) - 95 / 0.74) ),Jon / -ROWS) - x) : "Winter is coming"
assert ( foo(( Jon ),ROWS,Stark) + ( ROWS ) - betray(x,-560.261) / ( bar(foo()) ) ) + TABLE[--dog][( ( --550.2202 * ROWS ) )] + ( destroy(TABLE[--1 / -55 / betray(-TABLE[COLS][protect(betray(destroy(protect(( x / ( ( foo(mislead(280.2,--400.346)) ) ) ) / -26),Hodor,TABLE[0.61][rule(COLS,Sansa)] * ROWS)) - bar(),Hodor)] - ( -COLS ) - COLS,TABLE[Arya][betray(-92,ROWS)] + ROWS)][COLS]) / -TABLE[-( TABLE[y][0.57 + bar(( -( dog ) ),( ( -mislead(--79 / betray(bar(( ( COLS ) ),Stark - 0.33),-32) * x - ROWS) - ( x + Ygritte * -( ( -37 ) ) ) ) ))] * ( mislead(Ygritte,bar(-0.34,Jon,( -60.99 )),0.85) ) ) - TABLE[COLS][-18] * -1][COLS * mislead()] ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[COLS][k] {
	if(( -foo(Hodor,0.76) * -1 )){

};
	if(COLS){
	-0.23;
	if(foo(bar(( ( ( rule(TABLE[TABLE[dog][0.37]][( 14 )]) ) ) ) - Sansa,Sansa))){
	COLS;
	Ygritte *= -Ygritte;
	if(TABLE[foo(protect(betray(),-bar(ROWS,dog,-( -0.35 ))),Hodor)][TABLE[( -dog )][betray(-COLS)] * -( bar() ) / ( Hodor )]){

} else {
	Arya /= foo(( y ) * mislead(protect(foo(TABLE[( 0.66 ) - ROWS][betray(betray(55,ROWS,COLS),( ( 0.29 ) ))]),COLS,-x)))
}
} else {
	if(protect(betray(-0.73,Arya,ROWS))){
	ROWS
} else {
	-87 + Sansa - Arya * -Sansa
};
	TABLE[mislead(-Stark + COLS)][-0.45 * -58]
}
};
	x /= TABLE[y][COLS]
}
def TABLE[Sansa][k] {

}
def foo(Jon,Ygritte){
	if(COLS){
	if(---16){
	COLS
} else {
	x *= ROWS;
	Jon /= -x
};
	Stark /= Stark / TABLE[( -foo(-9) )][-TABLE[ROWS][0.75]]
} else {
	-mislead(( betray(ROWS,( ( 30 ) )) ) - Ygritte,Hodor,-TABLE[-35 + -ROWS * 0.01][protect(-ROWS)]) - Sansa;
	if(protect(x)){

};
	if(bar()){
	ROWS + x
}
};
	if(-2 + ( destroy(betray(( Arya )),-0.57,( destroy() )) ) / --26){
	if(TABLE[730.52][mislead()]){

} else {
	dog
};
	Ygritte *= TABLE[-Hodor][bar(380.4,--0.87) - 0.22];
	Jon -= Ygritte + Ygritte - TABLE[foo(TABLE[( mislead(TABLE[COLS][protect(Arya + rule(Stark,-0.92))],-0.76) * COLS )][Ygritte * COLS - ROWS])][COLS]
} else {
	if(-1){

};
	if(destroy(--( mislead(-TABLE[Stark][rule(0.26,( -( y ) ))] - y) ))){
	Ygritte
};
	dog += destroy(Stark,ROWS,TABLE[mislead()][( 1 )])
}
}
var dog = TABLE[Arya][Arya]
def TABLE[420.34][i] {
	Ygritte -= --210.3 * ( TABLE[-96 * protect(Arya)][0.49] ) + -0.42;
	dog -= ROWS
}
var Arya = ( protect(0.01 * -Hodor,-45) )
var dog = 0.88
def rule(){
	if(Sansa){

} else {
	Jon /= ---TABLE[-0.71][Hodor]
};
	if(protect(rule(betray(( Stark ),-( destroy(-0.86,x,--500.4797) ) + rule(Ygritte,COLS)) + Arya * destroy(( TABLE[-mislead(ROWS,destroy(Hodor - ( ROWS )))][foo(--1 * -( mislead(protect(),TABLE[0.53][-protect()]) ) + ROWS * betray(-Hodor,-1) - bar(destroy(destroy(ROWS,-25))) + ( dog ))] ) / -0.5 * --( ( destroy(Jon) ) )),Sansa,COLS),Sansa,( ---destroy(x + COLS + ( 1 )) )) * Jon){
	dog += 13
}
}
assert protect() : "What do we say to the Lord of Death?"
def foo(Hodor,Hodor,Hodor){
	betray(COLS,-1)
}
assert -x : "One can not simply parse himself"
def mislead(Hodor,Ygritte){
	Arya -= y
}
var dog = -33
assert TABLE[Sansa][ROWS] : "One can not simply parse himself"
def mislead(Arya,Stark){
	if(-bar(COLS + protect(ROWS - -( Ygritte )),Arya,bar(-protect(ROWS,-( Jon ),COLS) + -0.18 + COLS * ( protect(TABLE[Stark][38]) + -27 ) * ( dog * -( y ) + dog ) / COLS * 33,Sansa))){

} else {
	if(-1){
	if(foo(1 + betray(0.08,( -( Hodor ) ) * TABLE[Arya - -mislead(( ( Stark ) ) / ( destroy(-( x ) / -56,Arya + mislead(-dog)) )) - -COLS + -69][Jon]))){
	Arya /= ( -890.235 + foo() );
	if(( -0.95 )){
	Sansa += -( ( x ) );
	Stark -= y / ROWS
}
};
	Hodor -= -33
} else {
	Sansa *= ( -0.49 );
	Jon -= bar(-betray(-0.84),ROWS);
	Hodor /= Ygritte
}
}
}
def TABLE[Jon][i] {
	dog *= ( TABLE[ROWS][( -( Jon ) ) * betray(( y ) * --Sansa * ( Hodor ))] )
}
var Arya = dog * protect(TABLE[COLS][Sansa],Hodor / ROWS - ( destroy(destroy(x - TABLE[71][0.04]),--mislead(y) - protect(( Sansa ))) * -1 ),( dog ))
def TABLE[-COLS * ( Stark ) - -0.32][k] {
	if(--0.17){
	if(ROWS){
	if(-COLS){
	if(--( -Ygritte + foo(-1 / -ROWS * TABLE[TABLE[-Hodor][ROWS]][destroy(mislead(TABLE[-rule(mislead(-( ( ( ( Ygritte ) ) ) ),-54,-0.88 * -47) * -Hodor / 0.55 + foo(ROWS))][bar()],Ygritte,1))] - -0.5) / 0.17 / -protect(400.238,( TABLE[betray(-550.74,y)][-25] - y ),( -Stark )) * 0.05 ) / destroy(( Hodor ),ROWS) / --64 - destroy(-TABLE[mislead(Stark,mislead(-Jon))][TABLE[foo(foo(ROWS,( Stark ),protect(-1) - TABLE[betray(--1)][( ( COLS - COLS ) )]),( x ) + ( --0.49 ),-1 * Arya)][ROWS] / dog],( protect(COLS,-destroy(TABLE[-750.6][bar(-Jon,( -0.64 )) + COLS / ( TABLE[-Jon][98] ) / -0.76] / ( TABLE[COLS][-340.1649] * ROWS / destroy() ),destroy(protect(bar(-0.07,ROWS),-( foo() ),--79),x,Arya)) * foo(0.36,-910.605 + -570.42,( Jon ))) ))){

} else {
	if(640.883){

};
	if(ROWS){
	-ROWS
}
}
};
	if(ROWS){

} else {
	x /= -0.55
}
};
	COLS
} else {
	TABLE[bar(COLS + ROWS) + -0.9 / -destroy(Ygritte)][TABLE[( -Jon )][-42]];
	Hodor *= dog - -1
};
	if(betray(-86) + ROWS){
	Ygritte
};
	if(( -58 ) * rule(TABLE[-Jon][-0.84],-ROWS,ROWS)){
	Hodor += x;
	x *= y * ROWS;
	if(( -Sansa )){

}
} else {
	Jon *= destroy(0.05)
}
}
assert y : "Fear cuts deeper than swords."
def TABLE[-0.02][j] {
	dog += TABLE[-( ( TABLE[destroy(-31 * mislead(-( ( -77 ) )),foo(x,protect(TABLE[48][-rule(betray(Arya + --Arya,mislead(-20.328,protect() - ( TABLE[Stark][( mislead(-destroy(( TABLE[bar(Sansa) + -TABLE[1][bar()]][( protect(( Arya )) )] ) * y,250.9)) )] ))),Stark)] - -1 - ( ( ROWS ) ),protect(( y + --( 0.61 ) ))) / 0.61),COLS)][0.51] ) ) * ( -COLS / 690.5 )][x]
}
def TABLE[-0.45][k] {

}
def TABLE[( ROWS )][i] {
	if(0.04){
	if(ROWS){
	y /= Ygritte;
	dog += Hodor
} else {

};
	Stark *= -0.31
}
}
var Jon = ( y )
def TABLE[y / Sansa][j] {
	-y;
	( Ygritte )
}
assert protect(0) : "What do we say to the Lord of Death?"
def TABLE[( ROWS )][i] {
	if(COLS){
	Arya -= -dog - 0.56 / ( ROWS )
} else {
	Hodor -= 41;
	Jon += betray(Hodor,foo(destroy(-970.43 + x),x)) - 55
}
}
var dog = Stark
def TABLE[bar(dog,y)][i] {
	Stark *= dog
}
assert protect(COLS,47) : "One can not simply parse himself"
var Jon = Ygritte
def foo(y,Hodor,x){
	Stark *= Stark
}
assert ( 0 ) : "One can not simply parse himself"
def TABLE[mislead()][k] {
	if(rule(destroy(y * destroy(( x ),0.91) / ( 6 ) - -18 * ( 0.03 ) * destroy(destroy(68,Hodor),---( ( -27 ) ))))){
	dog /= Jon;
	if(TABLE[-betray(Stark)][-TABLE[x][-44]]){
	y;
	ROWS;
	if(( mislead(y,Sansa - --22 / Ygritte) + -( Hodor ) + Ygritte )){
	y *= y;
	if(( ROWS )){
	dog *= betray(rule(( Stark )) - ( -Stark + Stark ),( ( Jon ) ))
};
	if(( ( -0.55 ) )){
	betray(-Sansa + -x * -protect(-0.87) + y + Hodor,bar(y,( ( TABLE[-COLS][betray(( -Sansa ),-ROWS) + ROWS] ) )) - ( COLS / 1 ))
}
} else {
	if(TABLE[-1][-0.52 / -0.61]){
	Sansa -= --0.02;
	Hodor;
	( Arya )
} else {
	x += ( COLS );
	if(ROWS){
	rule(y);
	foo(( ( 0.01 ) ),320.5) + Arya / -Sansa
}
};
	450.696;
	y += 44
}
} else {
	x /= protect(( ( x ) ));
	if(ROWS){

}
};
	dog /= -0.63
} else {

}
}
var Jon = ( TABLE[Arya][( betray() )] )
assert 1 : "One can not simply parse himself"
assert mislead(-Sansa) : "Winter is coming"
var Jon = ( Sansa )
var Jon = Jon
def destroy(y,Ygritte){
	Stark /= x;
	Ygritte
}
def destroy(Ygritte){
	if(( 50.278 ) - Arya){
	Ygritte /= -52;
	0.33;
	Stark /= ROWS
} else {
	Stark += y;
	if(betray(-( ROWS ),Stark,( x ))){
	dog -= -840.7607
} else {

}
}
}
var x = -11
var y = Stark
assert x : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = betray(-ROWS,( -0.35 ))
assert -( ROWS ) : "Fear cuts deeper than swords."
var x = 1 / -TABLE[( -98 )][Hodor]
def foo(dog,Hodor){
	if(destroy(rule(( Hodor / TABLE[TABLE[-750.1][rule(betray(Sansa),protect(protect(destroy(),ROWS * -73 * ( foo() ) - -0.31)),( TABLE[490.36][bar(destroy() - -19 / ( ( -COLS ) ) / ( ( Jon - bar(Arya) ) )) - COLS] ) - ( -18 ))]][betray(Sansa,betray(680.68,1)) - COLS] ),COLS))){

}
}
def TABLE[-0.61][k] {
	if(protect(--770.292)){
	bar(Ygritte,ROWS);
	Stark *= COLS - Hodor
};
	if(Arya * foo(x,x)){
	Stark -= -0.28 / COLS;
	x -= COLS + mislead()
};
	0.99
}
assert mislead(( bar(-( -1 )) ),ROWS) : "Nothing burns like the cold."
var Sansa = COLS
assert COLS : "Nothing burns like the cold."
var Hodor = dog
def TABLE[bar(( --1 - dog ),rule(( ( 40 ) * COLS ),0.49),bar(Sansa,Arya,y * Stark))][j] {
	bar(mislead(foo(( -79 ),0.29,ROWS / Sansa + protect()),-( ( Sansa - TABLE[( 80 )][---( -destroy(y,( Arya )) ) - -Ygritte * ( -TABLE[( ROWS )][TABLE[betray(-Sansa)][ROWS] / Ygritte] ) * ( 38 * Hodor ) * ( dog ) + COLS] ) )));
	--destroy(y) / Hodor * x
}
assert COLS : "Fear cuts deeper than swords."
assert COLS : "Fear cuts deeper than swords."
def mislead(Arya){
	if(-( bar(1 / y,0.5,TABLE[-dog][TABLE[( ( -0.57 ) + --Jon )][betray(rule(Hodor),rule())]]) ) - destroy(Jon,ROWS,COLS)){
	-0.98
} else {

}
}
assert -31 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[betray(rule(-TABLE[protect(-180.8,---Stark * COLS)][-0.02] / ROWS * 0.65 + y),ROWS)][k] {

}
assert foo(foo(Arya,-30.75),y,( COLS )) : "One can not simply parse himself"
def TABLE[COLS][i] {
	Arya /= -( rule(-80,TABLE[-Stark / Hodor / rule()][( COLS )],( mislead() )) );
	y += -COLS
}
def TABLE[-destroy(y) + TABLE[-ROWS][COLS]][k] {
	Arya -= -Arya;
	if(ROWS){
	0.87
}
}
assert Hodor : "One can not simply parse himself"
assert ( -y ) : "Fear cuts deeper than swords."
var y = -530.4
var Stark = -1
def betray(){
	y *= betray(TABLE[-72][-rule(ROWS,89 / 0.6) + -1])
}
assert TABLE[rule(TABLE[-( COLS ) + foo(foo(-10 - COLS,( y + --( -( ROWS ) ) )),-COLS)][( y )] + x + ( y ) + -96,protect(( ( 1 ) + Hodor )),TABLE[670.715][bar(-protect(--x,( Sansa )),Hodor,dog)])][Arya] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(y){
	x /= mislead(-Sansa - TABLE[foo()][( -COLS ) + ( dog ) + -0.74],TABLE[-390.801][-0.81]);
	mislead(TABLE[betray()][ROWS],52)
}
def TABLE[--51][k] {
	COLS
}
def foo(Jon){
	y += ( COLS )
}
assert COLS : "Winter is coming"
def TABLE[-mislead(TABLE[bar(62,-780.024)][TABLE[COLS][COLS]])][j] {
	Hodor -= ROWS
}
var dog = -1
def protect(Stark){

}
assert -Arya : "Winter is coming"
def rule(dog,Arya,x){
	Hodor += 23;
	if(1){

}
}
def protect(y,Ygritte){
	-0.03;
	if(Jon){
	Sansa *= -87
} else {
	if(10.628){
	-0.99 / ( TABLE[0.47][-640.67] );
	y /= ( TABLE[-TABLE[dog][ROWS]][bar(ROWS)] )
} else {
	if(Sansa){
	Sansa /= -0.82;
	Sansa += ROWS;
	Sansa -= 52
};
	Jon
}
}
}
var dog = destroy(y + ( ( y ) ),1)
def protect(Stark,dog){
	Sansa *= -betray(Ygritte) / -( COLS ) - ( y );
	dog *= 0.54;
	if(( ( mislead(COLS,y + Arya * -x + ( Sansa )) ) ) - 31){
	y *= --0.76
} else {

}
}
def TABLE[70 * TABLE[COLS / dog][-910.9] / destroy(foo(-1 / x,protect(Arya) / 22 / betray(-69,-COLS - ( -bar(( rule(( Jon / Arya ),0.81) )) ),protect())),Hodor - ( -Stark ) + Ygritte,400.265)][j] {

}
var x = rule(-1,ROWS,y)
def TABLE[COLS - ( 0.93 )][k] {
	if(Hodor){
	if(COLS){
	if(Jon){

} else {
	( ROWS + 1 );
	Ygritte += 34
}
} else {
	if(foo(COLS,( ( protect(foo() * ( --Ygritte - Ygritte ) + y,28) ) + COLS ),0.13)){
	Jon /= ( COLS );
	Sansa += COLS
} else {
	Sansa += COLS
};
	Ygritte /= ( -0.57 )
}
};
	if(650.6){
	Hodor /= TABLE[( ( -2 ) )][0.55];
	Stark
}
}
var y = ( protect(TABLE[-13][-Jon]) )
var Hodor = -( bar(x) )
def rule(Stark){
	x /= -87;
	if(-38){
	dog -= TABLE[( mislead(( TABLE[( -0.06 )][-56] ),COLS) )][-( ---0.07 - ( -( TABLE[TABLE[y][-( COLS ) * foo()]][Jon] / 0.73 ) ) ) * -( -Jon ) * -COLS / 0.74 / ROWS * -( ( foo(TABLE[betray(0.48)][Jon],ROWS,-0.32) ) + -rule() ) + COLS];
	ROWS;
	if(dog * Sansa - ( --( Jon ) ) + ROWS){
	Sansa += ( ( -protect(x) ) );
	if(-protect()){

} else {
	if(mislead(ROWS)){

} else {
	Sansa += betray(-780.64,betray(COLS,( TABLE[ROWS - --1][dog] ) / ( -600.163 - Ygritte - Stark * -ROWS / ( ( -bar(( ROWS / foo(340.78,710.519 + COLS * 0.28) ),-9,( ROWS )) ) ) + ROWS ) * Jon),0.97);
	40 * TABLE[( TABLE[y][----Ygritte + -( ( TABLE[( destroy() - -ROWS / 0.96 - mislead(COLS,bar(Sansa,bar(-( COLS )))) )][( -betray() * --rule(-( ( COLS ) ) * -mislead(protect(380.8 / -( y ),--( --Sansa )),Ygritte) + Arya * 0.59) )] ) )] ) * y * Sansa][( bar() ) + -ROWS];
	-930.21
};
	dog /= -Ygritte * -0.11 + TABLE[( 3 )][ROWS]
}
}
}
}
var y = Sansa
assert ( Stark ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-0.17][i] {
	Jon += ( y );
	x += destroy(-Arya,-rule(y) * ROWS);
	if(Stark){
	( COLS ) + COLS;
	if(TABLE[rule(COLS)][TABLE[COLS][y]]){

} else {
	( COLS )
}
} else {
	if(protect(25 - -0.81)){
	y *= ( -TABLE[rule(( TABLE[( ( ( Arya ) ) )][COLS] ),-Sansa,ROWS)][( -94 )] * destroy(Sansa,( Arya * rule(-ROWS * ( -mislead(rule()) ),( -betray(( rule(COLS,TABLE[-( 800.95 / -0.7 - -( 0.47 ) )][foo(84,foo())],ROWS) )) / -0.29 )) ),-( ( foo(dog,y,Ygritte) / Ygritte - Arya ) ) * COLS) );
	-480.8
} else {
	betray(destroy(-88),( TABLE[-TABLE[1][77]][x] ),ROWS);
	if(mislead(bar(-ROWS / x / -Ygritte))){
	-0.89;
	if(( --destroy(( ( -Hodor ) ) / -0.96,ROWS,Ygritte) )){
	if(rule(--73,( -foo(bar()) ))){
	if(-5 / Stark - ROWS / 0){
	if(( Ygritte )){
	y *= COLS;
	TABLE[( Jon )][-290.367]
} else {
	rule(---Arya * ( ( TABLE[Sansa][Stark] ) ) + 17);
	71
}
} else {

}
} else {
	x -= -foo(-29)
};
	y += ( -93 / ( betray() / 0.5 + ROWS / bar(COLS,-protect(bar(betray(( protect() ) * dog) - -0.31,( -0.47 ),rule(x / rule()) - TABLE[Stark][destroy(( foo(-0.78,protect(ROWS) / -Jon,Jon) ),COLS + -foo(rule(),Stark - -0.03 + -0.54,destroy(0.31)) + ( 0.36 )) + destroy(( rule() ),COLS,-1)]),rule(COLS),-0.24),0.03) ) )
};
	y -= -( protect(( -rule(-betray(TABLE[protect(y,-720.6914,ROWS)][TABLE[y - y][COLS]],-( ROWS ),ROWS)) )) / protect(( 20.94 - rule(-43) ),mislead(-38,( ( ( COLS / betray(ROWS,COLS) ) ) )),COLS) )
}
}
}
}
def TABLE[COLS][k] {
	Stark -= ROWS;
	Arya
}
def rule(Arya,x){
	Sansa *= ROWS - destroy(betray(( ( dog ) ),( -910.238 ),940.804),x,mislead(mislead(Hodor,protect(COLS,ROWS + -0.61))));
	-570.2446 / y
}
def TABLE[x][j] {
	if(destroy(protect(25,-mislead() + ROWS))){
	x *= ( -foo(Hodor,-Hodor - ( --ROWS + ( 72 / foo(destroy(destroy(TABLE[TABLE[( -0.72 )][( TABLE[COLS][0.33] )] / protect(rule(( ( -38 ) ) / TABLE[690.5558][-0.95]),-1)][( --rule(7,-destroy(( Ygritte )) - ROWS + -Arya * -Arya) + 770.94 )],Stark))) ) - foo(( Arya ) - -Hodor - y * TABLE[Sansa - Stark - -y][( ROWS )]) ) + 1) );
	Hodor *= ( TABLE[TABLE[bar(Hodor + COLS / Sansa,-35 / -betray(Hodor) - 1 - Hodor)][( x )]][( ( -betray(ROWS) ) )] );
	y /= -55
}
}
def TABLE[-rule(Stark,COLS)][k] {
	-( dog ) + betray(rule(-( -160.211 - ( ROWS + --80.696 / ( destroy(Sansa,--TABLE[x][y]) ) * ( TABLE[0.24 / 0.59][--mislead(( rule(TABLE[Arya][Jon],( 1 ),( -1 - ( --( -0.34 ) ) )) * x + --0.47 ))] ) ) ) + -67 / ( ( Stark ) - Jon ),betray() + ( TABLE[COLS][x] )),-y);
	Ygritte;
	TABLE[Sansa][Sansa]
}
var y = -0.51
def rule(y,dog){

}
var Sansa = COLS
assert Arya : "Fear cuts deeper than swords."
assert -foo(y * ROWS / -85,ROWS) : "Nothing burns like the cold."
def TABLE[COLS][j] {
	if(COLS){
	Jon *= -COLS;
	if(ROWS){
	if(( -TABLE[ROWS][TABLE[bar(0.62 * Jon,TABLE[-1][TABLE[TABLE[protect(9 + mislead(),-1,destroy(-foo(880.628,bar(0.72 + Jon,0,bar(Sansa,Sansa,COLS))),-Hodor))][-1] / mislead(TABLE[-22][330.972],-( TABLE[foo(Ygritte,-0.14) * ( ( -ROWS + ( -TABLE[COLS][( TABLE[Arya][rule(( dog ))] )] ) ) )][---COLS] ))][-330.556] + -56],foo())][Ygritte]] ) + destroy(-39,x - COLS,betray(-rule(Jon,y) * TABLE[Sansa + Arya][rule(COLS) + ( -600.846 ) - 470.9],COLS + 1 * rule(rule(),-0.68,ROWS)))){
	-( 48 );
	if(protect(destroy(-0.78 / -1,( Ygritte ),1 - ( -0.07 * ROWS / -( rule(ROWS / COLS,( ROWS ),ROWS) ) )),( bar() ),Ygritte)){
	if(bar(COLS,protect(( 20 )))){
	y += ----bar(ROWS);
	dog /= ---TABLE[bar(TABLE[rule(-68,-0.06,( 0.04 ))][x] + ( -10 ) + ( --7 ),TABLE[-( ROWS )][Jon]) - ( ( 0.1 ) )][-0.4] / TABLE[bar(Stark)][Sansa * ( COLS / -3 )];
	protect()
} else {
	Hodor -= ( COLS * TABLE[--0.82][COLS] * ( COLS ) );
	Arya /= bar(dog,dog)
};
	-65
} else {
	if(-25 * rule(protect(ROWS,Sansa * -( foo(0.25,-COLS) )),dog,COLS)){
	x /= TABLE[4][( ( betray(COLS) ) )];
	x *= -0.57 * x - y + betray(-Arya - mislead(-0.31));
	if(y){
	TABLE[Arya][foo(28,-( -( 540.4922 ) ) - protect())];
	Stark /= destroy() * TABLE[-220.935][ROWS]
} else {

}
};
	Arya += TABLE[COLS][protect(destroy(),( -COLS )) - TABLE[COLS][-80 / TABLE[Sansa][ROWS]]] - 73
}
} else {
	COLS;
	Ygritte /= ( 60.781 - -dog / ROWS * destroy(( -16 ),foo(( betray(TABLE[bar(y)][protect(rule(ROWS) + bar(-COLS) / foo(0.77))]) )),( 0.52 )) )
}
}
};
	if(-Sansa + -59 / ( rule(--protect(protect(ROWS),( foo(ROWS) - ROWS )) - 86,COLS) )){
	mislead(destroy(( -0.78 ),-0.6),0.32)
} else {
	if(( 47 * ( 0.59 ) ) * destroy(Hodor,-( -( foo(( 1 + y ),44 - destroy(-1,-protect(mislead()))) ) + Ygritte ))){

} else {
	if(mislead(ROWS / -( Sansa ),destroy(-( -0.74 )),480.1171)){

} else {
	Stark -= COLS
};
	if(( -dog )){
	Ygritte -= -x;
	dog -= -830.686
} else {
	x *= ( Jon );
	Hodor /= ( x )
}
}
}
}
def mislead(){
	if(-1){
	y
} else {
	if(( -( 1 ) )){
	if(TABLE[-TABLE[16][10.28]][ROWS - COLS / protect(Ygritte,ROWS)]){
	dog
} else {
	Stark /= x
}
}
};
	Jon;
	Jon += ( Arya ) / -1
}
def TABLE[protect()][i] {
	Arya += foo();
	if(( -1 )){
	Hodor;
	x *= ( rule(COLS,TABLE[foo(( --bar(foo(TABLE[destroy(1)][( 99 ) / betray(ROWS,( 32 ))],bar()),Sansa,-0.37) + foo(destroy(ROWS)) ),Stark)][--Stark]) );
	if(rule(destroy(( -ROWS )),--Stark + Stark)){
	-Sansa;
	if(210.6){
	dog -= TABLE[( -47 )][bar(ROWS)]
} else {
	if(Sansa){
	-210.94 * 74
}
}
}
} else {
	if(0.51){
	Hodor /= -protect(ROWS)
};
	Sansa -= --TABLE[x][Jon]
}
}
var dog = 360.51
assert ROWS : "Fear cuts deeper than swords."
def TABLE[Sansa][i] {
	y += --0.91 * 0.42
}
def betray(){
	-( bar() * TABLE[bar()][y + 92] ) + y;
	destroy(TABLE[23][0.89],-0.72) - Stark;
	dog += ROWS
}
def foo(Hodor,x,Jon){
	if(( TABLE[rule(( protect(-TABLE[COLS][( -Ygritte )],0.6) ),-( -67 * ROWS ))][rule(TABLE[-mislead(x)][destroy(mislead(--73 / 870.63 + 46,-1 / ROWS),-1,-20.071)],-( -1 ),( ( COLS ) ))] + ( COLS ) )){
	y *= --Arya;
	Sansa -= 81;
	if(Hodor){
	if(9 + foo()){
	dog /= ( protect(( mislead() + ( 82 ) ),-TABLE[destroy(-ROWS,COLS)][-rule(-530.72)],180.999) );
	Ygritte -= rule(68);
	-1
};
	Stark += -foo(( x ),COLS)
} else {
	if(-1){

} else {
	-( ROWS )
}
}
} else {
	if(-28){
	if(-dog){

};
	Hodor /= Arya;
	if(Ygritte){
	( ( 0.64 ) );
	1
} else {
	foo(-0.85);
	if(0.91 - protect(( Ygritte + -TABLE[dog][30.747] - rule(ROWS,TABLE[( TABLE[Sansa][TABLE[y][ROWS]] - TABLE[( -44 + ( ( ROWS ) + -COLS - -14 - -1 + --1 ) ) - -500.8991 / Arya / foo()][( mislead(destroy(-ROWS,COLS)) )] )][-ROWS * x]) ),y - foo(( ROWS * -7 )))){
	if(-( rule(y) )){
	Hodor += ( ( Sansa ) );
	if(TABLE[-y][( destroy(ROWS) )]){
	TABLE[( ( TABLE[--1][-rule(( Sansa ))] ) )][destroy(( Jon ))]
} else {
	rule(-53 + ROWS,Jon);
	( -1 )
}
} else {
	ROWS * ( --6 - TABLE[-foo(TABLE[TABLE[Jon][bar(( 0.03 ),( TABLE[-1 + -32][COLS] ),( COLS ))]][rule()],protect(---x + -0.89,x,foo(ROWS,Ygritte))) * Ygritte][betray(( Hodor ))] );
	Stark *= -940.18;
	COLS
};
	y *= rule(( COLS ))
}
}
};
	COLS
}
}
def protect(Sansa){

}
var dog = TABLE[( -1 )][TABLE[( 90 )][destroy(ROWS,--0.87)]]
var Sansa = 1
def protect(Stark,Stark){
	x *= -800.848;
	Ygritte += mislead(( -0.49 ) * dog,( TABLE[Arya][ROWS] ),-x);
	-1 * ( ( ROWS / ( ( -0.64 ) ) ) )
}
assert -0.9 : "One can not simply parse himself"
var y = Stark
def protect(Sansa,Ygritte,dog){
	protect(COLS)
}
def bar(){
	-1
}
var x = COLS
var Arya = COLS
assert --83 : "Nothing burns like the cold."
assert ( -( -Sansa ) / -dog / x ) : "What do we say to the Lord of Death?"
assert --( -34 ) - COLS / -COLS : "Nothing burns like the cold."
def destroy(Arya){
	TABLE[Ygritte][--69 * Jon - ( ROWS )];
	if(-( COLS )){
	Arya -= ( ( ( ( --0.96 ) ) ) );
	if(-1){
	if(Sansa){
	Arya;
	Arya += TABLE[---( -rule(( rule(--bar(TABLE[destroy()][ROWS],( ( ( x ) ) )),TABLE[TABLE[COLS][ROWS]][77] * bar(-70.4,Hodor)) ),TABLE[( -86 )][1]) ) - x + mislead(Arya * betray(),( TABLE[( -800.8 )][-1] ),-protect() - -1) * TABLE[betray(betray() - ROWS)][-TABLE[-58][( COLS * --0.26 )]]][( -protect(----780.6,rule(TABLE[Jon - destroy()][1])) + Hodor ) * ( -ROWS * -1 - Ygritte )]
} else {
	foo(( Jon ) - y,-rule(---ROWS - --1 + Stark * -( ( ( -0.54 ) ) )))
};
	x -= destroy(( ROWS ));
	180.5
}
}
}
def rule(Stark,Ygritte){
	( -Arya / Sansa )
}
def TABLE[----1 + -( 1 )][k] {
	Jon *= ROWS;
	if(-destroy(y,( TABLE[destroy(x,-91,( mislead(( ROWS ),-( Stark ) * 0.59 * TABLE[destroy(destroy(-protect(),mislead(),Jon),-67,270.9249)][( -21 * ( Hodor ) )]) ))][foo(-0.32,-580.0354)] ),x) - y){

}
}
assert Jon : "One can not simply parse himself"
var Hodor = COLS
assert ( -0.22 ) : "Nothing burns like the cold."
def protect(Stark){
	if(COLS){
	Sansa += TABLE[-y][( x )]
};
	Stark
}
var Hodor = x
assert ( betray(ROWS) ) : "Nothing burns like the cold."
assert 930.17 : "Nothing burns like the cold."
def TABLE[-( TABLE[( Hodor / -11 - Sansa )][950.2311] - ( rule(ROWS * Ygritte,---COLS - Jon / Hodor + TABLE[1][y]) ) + -100.1 ) + destroy(-480.457)][j] {
	if(( COLS )){
	if(-1){
	if(( x )){
	y;
	if(( -( ( Sansa * betray(x) + -0.81 * 0.6 ) ) )){

}
} else {
	if(( rule(y,Arya,-800.471) ) * foo(COLS + -rule(50.25 / 80) - Jon / Hodor / ( -840.633 ) * Ygritte)){
	if(( ( ( Jon ) ) ) / dog){
	-81;
	bar(rule(ROWS,-rule(72,TABLE[TABLE[x][--betray()]][COLS])),0.65,-( ROWS ) + foo(TABLE[78][0.53],--( 0.47 )) / -( dog ) / -0.43)
} else {
	Jon += -COLS;
	if(-96){
	Jon += -63
} else {
	Arya *= foo(COLS,0.2 / protect(y,-Jon) / 0.95);
	if(51){

};
	--( -2 )
}
};
	-0.76
} else {
	Sansa /= Ygritte;
	if(COLS){
	if(-COLS * ( TABLE[dog][COLS] ) * 0.87 - Stark){
	( Stark + ( COLS ) - rule(bar(780.9122),Stark) ) - COLS
} else {

}
} else {
	Arya *= ROWS
};
	if(rule(-87 - ( -1 ))){
	y /= TABLE[y * ( foo() ) * rule(-1)][Ygritte];
	if(bar(mislead() - -bar(rule(Sansa),TABLE[Jon][( ROWS )]),-COLS)){

}
} else {
	Arya /= protect(--0.31,--430.474 / -bar());
	if(COLS){
	if(-foo(1 / 92 - ( COLS ) / ( -( betray(-Arya) ) ),destroy(--Sansa - bar(-0.95,ROWS - -90) * rule(( rule(-bar(protect(-1,x),ROWS)) )),1,Sansa))){
	if(ROWS){

}
} else {
	Hodor *= Sansa / 78;
	Stark += 12;
	if(betray(COLS)){
	y /= ROWS;
	Jon += COLS;
	if(( rule(-0.32 + TABLE[( -TABLE[-Arya][mislead()] )][Sansa] * -( betray(bar(protect(-( -510.7 * ROWS ),( --TABLE[rule(betray(( -( ( Sansa ) ) ),-0.6 + dog,COLS),TABLE[protect(-( ( rule(Hodor) / rule(-( -0.12 ),Arya * ( 1 ),-100 + mislead(bar(1,COLS))) * TABLE[Stark][rule()] - TABLE[Ygritte][ROWS] ) ),1)][-x]) / protect(Hodor * mislead(dog))][destroy()] * TABLE[( betray(-83,protect(ROWS,y / Ygritte,( -0.29 * -57 )) / rule(rule(),( 0 ),mislead(dog + Jon,dog,protect(( 270.1789 / protect() + ( ROWS ) )) - -0.24 - ROWS - ---72 / rule()))) ) - -foo(x,dog) + mislead(-( foo() ))][TABLE[-COLS][protect()]] - ( ROWS ) )),70.1,( protect(foo(Jon,Jon,ROWS)) )),-ROWS,foo()) ) * ( Stark ),Arya) / COLS )){
	Ygritte /= ( Jon )
}
} else {
	ROWS;
	0.18;
	if(( y ) - 1 - dog){
	Sansa += ( -0.39 );
	0.92
}
}
};
	if(destroy(-ROWS,--0.41)){
	460.42;
	if(( -0.21 )){
	-830.03
};
	x /= destroy(dog * TABLE[COLS][rule(Arya)],( ( ( destroy(73) ) ) ))
} else {
	y /= mislead(bar() - ( foo(COLS,39,-20) - foo(destroy(rule(( ( betray(TABLE[Arya][-24],TABLE[mislead()][Arya]) ) )),-mislead(-15) * foo()),-1,-( x )) ),-80.01);
	if(-78){

} else {
	Stark /= dog;
	if(ROWS){
	TABLE[-0.85][TABLE[ROWS][COLS]] * 1
} else {
	20.9218 / -( -ROWS - ---( -ROWS ) + COLS ) / 0.71 + ROWS;
	betray(COLS,Hodor);
	Sansa -= mislead(y,( rule(-TABLE[47 / Arya][dog] + Arya) ),TABLE[Hodor + y + -TABLE[ROWS][-x]][-0.74])
}
}
}
}
}
};
	ROWS
}
};
	rule(bar(( y )) - -75,( dog ));
	ROWS + -Ygritte
} else {
	-protect(protect(-( -270.97 ),-0.21 - -TABLE[mislead(-0.05 * ( Ygritte ) - Sansa,y)][--Ygritte + COLS - -1]),betray(destroy(( ROWS ),Hodor)) / -85,TABLE[protect(9 + betray(--TABLE[TABLE[-ROWS][protect(ROWS,Sansa)]][Sansa],( -810.623 )),-( -TABLE[-mislead(-( ( -Stark * Hodor / -0.79 ) ))][-Ygritte] ))][0.17]);
	Ygritte *= -0.7116
};
	foo(820.3974);
	Stark *= -COLS
}
var Hodor = destroy(4,--( ( --0.5 - COLS / -( y * ( ( Jon ) ) ) - 230.1 + -58 / protect() / foo(Arya,-dog) * ( -63 / -40.446 - 0.13 ) ) ),mislead(-0.54,-0.45,COLS - -Ygritte))
def mislead(Ygritte,Jon){
	-ROWS + TABLE[ROWS][TABLE[-0.74][-6] + 0.79] / -( -51 );
	mislead(ROWS,-Arya)
}
var Sansa = 0.03
assert ( -1 / -1 ) : "Winter is coming"
var Stark = -49
def TABLE[0.02][j] {
	Jon *= foo(COLS)
}
var Sansa = COLS
var Jon = Arya * -( ( -Sansa ) )
def foo(dog,Stark){

}
def mislead(x,Arya,Stark){
	-72;
	Stark += ( TABLE[-ROWS][6] - TABLE[Stark][( 0.29 )] )
}
var x = -TABLE[-ROWS / Sansa][COLS + ( ROWS ) / -9] * x
assert ROWS : "One can not simply parse himself"
var Ygritte = -54 * 1
def TABLE[790.468][k] {
	rule();
	if(0.02){
	if(COLS){
	Jon -= protect(---( dog ) * COLS,destroy(Stark,-y,rule(Ygritte)))
} else {
	Sansa *= ( ROWS );
	destroy(0.93 + ( ( ( protect() ) ) )) + -rule(betray(Hodor,Stark),0.57) / -dog
};
	if(destroy(---0.98,-mislead(),ROWS)){
	x += -rule(( ( ( TABLE[mislead(Arya,-730.713 / ( 1 * -80.84 ) * TABLE[( Arya )][-14] * Arya,( 640.16 ))][-y] ) ) ));
	Jon /= destroy(foo(( -ROWS ),1) - COLS)
} else {
	foo(Ygritte,destroy(( Arya ) / foo(39) * ( -( -y ) * ---( COLS ) ),dog,69 + y));
	Jon;
	TABLE[-32][81 * -810.94]
}
};
	if(--0.99){
	if(dog){

} else {
	mislead(Stark,bar(protect(Arya)))
}
} else {
	if(COLS){
	if(--0.2){
	Arya /= 99;
	y += -Arya
}
}
}
}
def TABLE[( ( ROWS ) )][k] {
	if(( foo(( ( 7 ) ),Sansa) )){
	Jon -= TABLE[( dog ) * Jon][foo(Ygritte,( Stark ),x)]
};
	if(-Stark){
	if(0.47){
	if(ROWS){
	bar(( COLS * ( -( -TABLE[---protect(x)][0.85] ) ) * 1 ),1,Hodor)
} else {
	Stark -= ( ROWS );
	mislead(Jon - -( -Hodor * 34 ) - --67 / ( --Hodor ),-----( 70.26 ) / ( protect(-( mislead(( 53 ),--1) )) ))
};
	betray(COLS);
	Sansa /= 0.03
}
}
}
assert ( ( foo(mislead(),TABLE[COLS][TABLE[COLS][Sansa]],COLS) ) ) : "Winter is coming"
var Arya = ( -0.6 * x )
var x = COLS
def TABLE[foo(TABLE[9 + -TABLE[( -530.361 )][dog] - ROWS * COLS][-x / bar(-x,( foo() )) * 0.21])][j] {
	dog /= -0.13;
	Jon += 50.6
}
def TABLE[y][i] {
	36;
	destroy(COLS)
}
def TABLE[-95][i] {
	x += Arya;
	y *= ROWS / rule(Stark,Jon);
	destroy(Sansa,mislead(( TABLE[( Arya )][betray(Sansa)] - -0.18 / mislead(TABLE[foo(Sansa,ROWS)][TABLE[Ygritte][-26]],-0.78) )),Ygritte)
}
def TABLE[( ( ( y ) ) )][k] {
	if(-( Jon )){
	-protect();
	rule(COLS,-21,-TABLE[betray(Ygritte,( ROWS )) + -COLS][dog])
} else {
	if(COLS){
	Arya -= ( -( -1 ) );
	y *= -Arya;
	Hodor *= 22
} else {
	Ygritte -= ( mislead(x,COLS) );
	if(TABLE[( -63 )][( Sansa )]){
	if(x - -680.02){
	Arya -= destroy(-TABLE[0.69][-66],0.23 * bar(( 0.56 )));
	ROWS;
	protect(ROWS,COLS,-( -COLS ))
}
}
}
}
}
assert ( ROWS ) : "What do we say to the Lord of Death?"
var Arya = -1
assert ( Arya ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = -( COLS + Jon ) - ( ( ( -ROWS ) ) + ( ( Ygritte ) ) ) - Hodor
def TABLE[Arya][j] {

}
def TABLE[--Ygritte + betray(-Ygritte - dog - betray(( ---COLS ),TABLE[( -( ( Jon ) ) )][y - ( --Jon ) - -Stark / ( COLS / Arya )]),( TABLE[Ygritte][-940.89] ))][j] {
	8
}
def bar(Hodor){
	y - Sansa;
	Sansa *= betray(protect())
}
def TABLE[Stark][k] {
	if(( -Jon )){
	dog += ( 39 )
};
	if(-57){
	COLS - -( Hodor );
	Hodor += TABLE[Arya][--1];
	y *= ( ( Hodor * -0.94 ) / ROWS / Hodor )
} else {
	-ROWS;
	Sansa *= ( --230.769 );
	if(750.1){
	if(TABLE[---( TABLE[ROWS][destroy(-50,Stark)] ) + 52][-foo()]){
	if(bar(ROWS,y) / TABLE[-TABLE[protect()][protect()]][foo(dog)]){

}
} else {
	if(0.62 - mislead(-1)){
	TABLE[1][TABLE[-1][protect()] / ROWS * ( Sansa )];
	( -480.211 )
};
	1;
	if(0.45 * --950.7844){
	( 0.47 );
	if(-TABLE[-1][Arya]){
	if(bar(-TABLE[mislead(TABLE[0.55 - 0][-93])][destroy()],TABLE[( Ygritte )][( -TABLE[Jon][1] + COLS )]) / rule(( mislead(34,-COLS) / rule(0.24 + TABLE[-52][COLS * ( foo(Sansa * 0.99) )],destroy(( ( TABLE[Arya + 98][( -TABLE[dog * ( -betray(Jon,-1,Hodor) )][COLS] )] - ( -y ) ) * --x ),1,1),440.7803) ) - -dog + ( betray() - TABLE[0.71][COLS / ( -ROWS * -0.49 )] ),( mislead(COLS,COLS,Hodor - ( ROWS ) + -0.68) + TABLE[57][---1] ))){
	foo(Jon,Ygritte)
} else {
	( ( ( -22 ) ) );
	-TABLE[--Arya][-TABLE[betray(-1 + 1)][dog]]
}
} else {
	Sansa *= protect() * COLS;
	if(-bar(Arya,( dog ))){
	Ygritte += Stark;
	if(TABLE[protect(Arya + COLS + Stark / destroy(-( 0.56 )))][COLS * ( Hodor * ROWS )]){
	if(-600.25){
	if(dog){
	if(( betray(Arya,-4 - protect(TABLE[Arya][betray(( dog ),COLS + 2)],-( foo(TABLE[bar()][destroy()],Hodor,Arya) ),170.515),-270.48 - ( ROWS )) )){
	-destroy(( -0.38 ));
	if(0.6 + Hodor - ( dog * 0.08 )){
	Stark /= rule(mislead(protect(-TABLE[ROWS][( -1 )],85)),-53,37 * ( y + ROWS ))
}
}
} else {

};
	x /= ROWS - mislead(-Arya,COLS,destroy())
} else {
	x /= Sansa;
	mislead()
};
	if(-destroy()){
	Arya -= Hodor;
	if(COLS){
	ROWS;
	COLS;
	dog += mislead(( betray() ),Stark)
};
	if(destroy(-Arya * Stark,( -74 ))){

}
}
} else {

};
	if(0.09){
	Jon;
	y /= -0.31
} else {

}
}
}
}
};
	Sansa
}
};
	if(( 58 )){
	if(( ---mislead(( bar(Arya + Hodor,Ygritte) )) )){
	y *= TABLE[ROWS][-TABLE[( bar() )][-1]];
	Hodor *= COLS
} else {
	mislead(mislead(Jon - betray(),Arya,x));
	TABLE[Jon][ROWS]
}
} else {
	x -= -Hodor;
	if(TABLE[destroy(----rule(-protect(( -bar(( --( TABLE[bar(0.98 - -( protect(-0.75,-TABLE[protect(( -( COLS * Jon ) + Arya ))][rule()]) ),-Jon)][( Hodor )] + ( -540.58 ) ) ) / mislead() / protect(-0.05,TABLE[mislead(-protect(COLS) / ( x ),---49)][betray(-0.12,( -69 ),rule(y)) + TABLE[-COLS][ROWS]] - ( protect() ) - TABLE[( protect(--40 + ( COLS ) / y,Jon / Stark / -53 - ( foo(---TABLE[rule(Jon)][( --0.32 )] + y + bar(dog)) * ( ( -y ) ) ) * COLS - x + 65 * COLS * protect(Jon,Hodor,mislead(Stark))) ) - -betray(ROWS,Stark) / --34][( Ygritte - ( ROWS ) )] * foo(-COLS,ROWS),dog) / ( Sansa ) / destroy(mislead(( 0 * -( ( Hodor ) ) )),Ygritte)) )) / bar(TABLE[( Ygritte )][Ygritte],-y * 35),foo(Stark,-COLS) * ROWS + 21) / x,COLS,-destroy(-TABLE[140.17][protect(foo(( mislead(3) - y + COLS )),destroy(COLS - -0.2,foo(-betray(ROWS))),-450.311)])) * ( TABLE[1][y] + 0.66 )][bar(0.49)]){
	Arya /= mislead(COLS,( Sansa )) - Jon - Stark;
	if(( mislead(betray(betray(protect(-0.7))),-77 * protect(-0.41,TABLE[Stark][x],foo(-0.36,( TABLE[y - bar(-( Arya ),bar()) - 360.802][-1] + destroy(80) - foo(-0.03) * 0.48 / Stark * bar(-TABLE[mislead()][Arya],Sansa) ))) + ( ( ( 1 * COLS ) ) ) + ----0.99,betray(COLS)) )){
	if(Arya){

} else {
	ROWS
};
	if(COLS){
	if(( ( -46 + -39 + dog - ---840.35 * ( COLS ) / -protect() ) )){
	Hodor *= Ygritte
};
	if(Stark){
	-ROWS + destroy(( x ));
	if(( ( -ROWS ) ) * ( -( ROWS ) ) / ( ROWS )){
	if(Hodor){
	Sansa *= -dog * COLS
} else {
	Arya += Jon
};
	---( x )
}
};
	if(Ygritte){
	Stark -= x / destroy(53)
}
} else {
	0.19;
	1
};
	Jon /= -910.3
};
	if(ROWS){
	x *= rule(0.8,Arya)
}
} else {
	Stark += Hodor
};
	Hodor
}
}
assert ( -1 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(Stark,Ygritte){
	( Ygritte )
}
assert protect(Jon / ( foo() ),Ygritte) : "What do we say to the Lord of Death?"
var Arya = -0.35
def protect(Stark,Ygritte,Hodor){
	if(( foo(destroy(--53,-TABLE[COLS][--COLS + Sansa * -1])) )){
	x
}
}
def TABLE[0.49 - 0.12 / rule(( Hodor - protect(1,foo(x) * -( destroy(-25) ) - ROWS) ))][k] {
	Sansa += betray(dog,COLS,( 0.22 ))
}
assert 1 : "Nothing burns like the cold."
def TABLE[-76 - protect(( --1 + 1 ) * -foo(( ( mislead(-Hodor) ) ),( dog )) - COLS - protect(-1))][i] {
	Jon /= -0.61
}
assert Sansa : "Winter is coming"
def destroy(Ygritte){
	Sansa += Arya;
	TABLE[( rule() )][mislead(-52)];
	if(--0.65 / ( protect(( Hodor ),-0.4 + -0.55,mislead(ROWS,COLS) + foo(-protect(mislead(foo(TABLE[-foo(85)][-( ROWS ) / -26]),-COLS,dog) * ( -TABLE[bar()][Stark] ) / -TABLE[-( Jon )][Sansa],ROWS))) - -0.78 ) + y / mislead(( protect(-0.76,foo(x) / --27 * Ygritte - -10 * Jon,COLS) ),( COLS ))){

} else {

}
}
def TABLE[Stark / ROWS - ( ROWS - Hodor + Jon )][j] {
	-COLS
}
def mislead(Sansa,Stark,y){
	x /= ROWS;
	-( ( Hodor ) )
}
def TABLE[COLS][k] {
	if(bar()){
	dog /= TABLE[Arya][( 75 + -( Arya ) )];
	( ( ( Sansa ) ) * Stark );
	if(y){
	Sansa *= ( y ) * x + Ygritte - ( 0.8 );
	TABLE[60.244][rule()];
	if(( --( -75 ) )){
	x -= rule(( COLS ));
	if(-0.1){
	if(43){
	if(-8){
	foo(240.858,foo(Arya),( ( 1 ) ));
	( 1 )
};
	Ygritte -= ( --27 + -29 )
};
	dog += ROWS;
	COLS
}
} else {
	TABLE[betray(( ( TABLE[COLS + Jon - x][( -60.57 )] ) ),( ( Sansa ) ))][( dog )];
	if(( COLS )){
	Jon += -mislead(ROWS)
} else {
	if(COLS){
	if(-1){
	Jon += ( ---2 );
	( -( Jon ) );
	Jon /= protect(-87)
}
}
}
}
} else {
	Jon /= -49;
	-0.04
}
};
	Ygritte
}
assert -( ( ROWS ) ) : "Nothing burns like the cold."
def TABLE[ROWS][i] {
	if(x){
	Stark += Hodor
}
}
def rule(dog,Sansa,Hodor){
	y -= TABLE[-COLS][rule(34 * -11 + ( -Stark / COLS ))] - destroy(TABLE[-ROWS / ( rule(Arya,rule(-( ROWS ) * -bar(-0.2,-TABLE[COLS][Stark]),--COLS)) )][COLS * ( -( rule(rule(Ygritte / foo() + betray(-53,destroy())) + Jon,( ( betray(COLS) ) )) ) )]) / bar()
}
var dog = -y
assert dog : "Fear cuts deeper than swords."
def bar(Arya,Sansa,Arya){
	( -ROWS )
}
assert -COLS : "What do we say to the Lord of Death?"
assert ( mislead(foo(betray(TABLE[53][80],( -x )) + protect(--0.94,Hodor + --31)),x) ) : "Nothing burns like the cold."
def destroy(){
	-0.57;
	Ygritte /= Arya;
	if(rule(( -0.14 ),foo(dog,foo(Jon,0.82)))){

}
}
var Arya = 130.21
var Stark = ( ( -Sansa ) )
def TABLE[Arya][i] {

}
var Arya = 0.38
def destroy(Arya){

}
assert ROWS : "Fear cuts deeper than swords."
def TABLE[Sansa][i] {
	x += ( ( TABLE[x][-870.51] ) )
}
def betray(Stark,Ygritte,Sansa){

}
var Arya = x
assert ( mislead(-COLS,800.47) ) : "Nothing burns like the cold."
def betray(){
	if(ROWS){
	( ( TABLE[y][( 57 )] / mislead(-Stark,ROWS) / -0.24 ) ) + ROWS - ( ( 1 ) )
}
}
var dog = TABLE[foo(y)][COLS]
def destroy(Sansa){
	if(---0.96 * -10.506){
	if(-1){
	if(destroy(betray(-TABLE[( 0.14 )][0.84],Ygritte),Sansa,ROWS)){

}
};
	dog /= 0.01
}
}
assert -Ygritte : "One can not simply parse himself"
def TABLE[0.12][i] {
	if(( ( bar(81) ) + -23 - x )){
	if(( x )){
	Sansa *= -0.69;
	-mislead()
}
}
}
def TABLE[-foo(TABLE[-Stark - -Stark][( ( ( -Hodor - ( ( protect(( -0.51 )) ) * protect(Hodor) ) ) ) * COLS ) - x],-Stark)][j] {
	Ygritte -= 49;
	ROWS
}
def destroy(Stark){
	( destroy() )
}
var dog = TABLE[-940.036][destroy(( -TABLE[TABLE[-( --30 - COLS ) / -1 / ( -Ygritte )][Arya]][810.2] ))]
assert COLS : "One can not simply parse himself"
assert rule(COLS,1) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[bar(TABLE[( ( ---1 ) )][y],TABLE[Arya][-0.4])][j] {

}
assert -( Stark ) : "Fear cuts deeper than swords."
assert COLS : "What do we say to the Lord of Death?"
var Arya = foo(( Ygritte ),-45)
assert ( ROWS ) : "One can not simply parse himself"
def TABLE[TABLE[Stark][( COLS + mislead(protect(ROWS,0.37),ROWS,ROWS) - rule(betray(COLS,( Ygritte )),destroy()) - 0.2 )]][i] {
	bar(Sansa,mislead(destroy(ROWS,-10)))
}
def TABLE[( ( COLS * ( 35 ) ) )][j] {
	protect(x,-65)
}
var Sansa = ( -35 )
var dog = dog
var Jon = -rule(foo(Sansa)) * ( -1 / -1 + ( 1 * -TABLE[-destroy(( -0.09 ),0.8,COLS) / -dog][( TABLE[dog][1 + -Hodor] )] ) * ( ( Arya ) ) * TABLE[ROWS][( bar(Arya,ROWS,ROWS) )] )
def rule(dog){
	if(--73){
	( bar(--Ygritte) )
};
	if(x){
	Arya -= ( -TABLE[TABLE[Stark][TABLE[0.25][COLS]] - 830.282 / -Arya / ( 66 ) + --( 0.09 ) * ROWS][ROWS] );
	-mislead(-ROWS)
}
}
def TABLE[Stark][i] {
	x /= 0.32
}
def TABLE[-y][k] {
	Ygritte -= --1;
	Jon *= mislead(foo(TABLE[ROWS][ROWS]),-mislead(Arya,Ygritte) - Hodor);
	y /= 1
}
def TABLE[1][j] {
	if(1){
	Sansa -= x;
	x + rule(destroy(ROWS,-0.85),destroy(-Arya / 2,Arya)) - ( betray(-( Ygritte ),-Stark) )
} else {
	protect(TABLE[Stark][-30]) - ( Sansa )
};
	if(-1){
	x -= --0.92
} else {
	if(420.1 - -0.58){
	Jon += rule(( rule(protect(ROWS,( ( -TABLE[-0.82][x] ) ))) ),( TABLE[TABLE[ROWS][mislead()]][x] ),bar(-( 920.24 ),-y));
	foo(-ROWS)
}
};
	Jon
}
def TABLE[( 0.18 )][i] {
	x += -0.33 / -0.91;
	Ygritte /= ( betray(mislead(Stark),-mislead(--0.7,rule(foo(0.54,( ( mislead(dog) ) )))),ROWS - Ygritte) )
}
var Arya = 570.592
def rule(Jon){

}
assert foo(Stark) : "Fear cuts deeper than swords."
var Jon = Ygritte
var dog = -84
def TABLE[protect(Jon) - -TABLE[mislead(TABLE[COLS / Stark * --COLS][foo(TABLE[-0.43][( bar(( -( ( bar(protect(),0.23,foo(protect(( ROWS )),-0.58)) ) ) / destroy(Ygritte) ) * -98 + dog,TABLE[-84][-0.88]) )])],ROWS) / 41][( Ygritte )]][j] {
	if(-( betray(--foo(-TABLE[betray()][--COLS * destroy() * COLS],-bar(Sansa,x),( 30.15 )),mislead(COLS,Arya,( ROWS ) - foo()) / -rule()) )){
	if(ROWS){
	ROWS;
	if(-( ( ( 92 ) ) )){
	if(ROWS){
	ROWS / Sansa
};
	( ( -ROWS ) )
} else {
	if(--( TABLE[ROWS][( dog )] - ( ( Ygritte ) ) )){

} else {
	Stark -= Ygritte
}
};
	-24 + ROWS
} else {
	Stark *= 0.54
}
}
}
var Hodor = x
def TABLE[( COLS )][i] {
	y -= -96;
	( Sansa ) * ROWS
}
def TABLE[86][k] {
	if(Ygritte / Ygritte){

} else {
	( Ygritte )
};
	if(-1){
	--61
} else {
	x += betray(TABLE[( bar(TABLE[340.352][COLS] * ROWS,( -720.1857 )) )][91]) / -60.1;
	( -COLS );
	if(--1){

}
}
}
def foo(){
	COLS;
	Jon *= ( ( Sansa ) );
	if(( 68 )){
	if(--62 / Ygritte){
	y *= destroy(( destroy() ))
};
	Ygritte *= dog
}
}
def TABLE[Hodor][k] {
	if(( ( bar(( destroy(Stark,COLS) ),-COLS - bar(mislead(TABLE[Stark][protect(( x ),TABLE[-1][-Stark])],-670.4386,-TABLE[protect(( Hodor ))][mislead(COLS,y)])) - -ROWS * 0.01) ) )){
	if(TABLE[destroy(rule(foo(-y / rule(( -750.8 ),-Stark + -ROWS),Ygritte - Ygritte),Arya,x) + rule(-mislead(-15),-ROWS),Stark)][Hodor]){
	Jon /= --38;
	Jon -= -62
} else {
	-830.705;
	Stark += -( foo(COLS,( -rule(x) ),TABLE[TABLE[Hodor][mislead(-67)]][mislead(protect(1,TABLE[ROWS][bar(( TABLE[-Arya][-90.68] ) - Hodor)]) - Stark)]) ) + COLS;
	protect(( ( foo(betray(-Arya),betray(),TABLE[mislead(-Stark,betray(--48 + -( foo(destroy(TABLE[( -1 )][-bar(Stark)],COLS,Sansa),Sansa,Arya) ) + -TABLE[Jon * Hodor][mislead(destroy(destroy(-( protect() )),( foo(--0.95 - ( Jon ),92,Hodor) ) - --0.37))])) + -Hodor - betray(Hodor,-38,( betray(rule(( foo(-1,Sansa) )),rule(97,Stark),COLS) )) + mislead(-45,790.233 - 39) / --40.679 - protect(-840.7,-1)][( mislead(Sansa + x,COLS,Ygritte) )] + foo(COLS)) ) ),Arya,Jon) + -TABLE[Sansa][-920.8506]
};
	Sansa -= COLS
} else {
	if(( Jon )){
	if(ROWS){
	y += -0.4;
	dog += ROWS
} else {
	if(-( -49 )){
	dog *= mislead(( TABLE[TABLE[( Sansa )][x]][( ( ( ROWS ) ) )] ))
} else {
	if(( TABLE[TABLE[COLS][betray(---0.09 + destroy(TABLE[bar()][0.87]))] / -Ygritte + COLS + Jon - -39][protect(foo(Hodor))] )){
	Arya
};
	if(foo(( ( Sansa ) ),Hodor,Jon - COLS / Arya / ( rule(Sansa,x) ))){

} else {
	if(y){
	mislead(590.22)
} else {

}
}
};
	( x )
};
	Stark;
	Stark * ( ROWS )
}
};
	betray(( COLS * mislead(foo(71,-( x )) * mislead(betray(( destroy(COLS,( Sansa ) - ( -0.95 )) ))) - destroy(),ROWS) - -90.8247 * Arya ),( mislead(( -Sansa + -0.55 ),TABLE[TABLE[mislead(Ygritte,Arya)][-( bar() )]][mislead(( ( ( COLS ) ) ))]) ))
}
var y = betray(y,760.1042,-32)
def TABLE[68][i] {

}
def TABLE[( 9 )][j] {
	Stark -= protect(foo(TABLE[( Jon - Sansa * Stark )][destroy(TABLE[ROWS][( destroy(COLS,-Sansa) )])],--0.35,--1),destroy(130.84))
}
var y = 1 / TABLE[TABLE[770.7 * ( ROWS )][mislead(-bar(1),-betray(),-COLS)]][TABLE[TABLE[380.91][( COLS - -42 * -( ROWS ) )]][-0.87]]
assert betray(ROWS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(Sansa){
	( x )
}
def protect(dog,Arya,Arya){
	x *= TABLE[y][1]
}
var y = Sansa
def mislead(Hodor){
	Hodor /= ( mislead(TABLE[TABLE[Arya][( --rule(1,y + y + COLS * TABLE[-51][( TABLE[( rule() )][0.34 * --COLS * TABLE[rule(betray(COLS,-Sansa + bar(COLS,Arya + -0.15) - --0.37) / TABLE[Ygritte][( COLS * Arya )],ROWS,( 41 ))][Ygritte]] )] - ROWS,( Arya )) )]][COLS],Hodor) );
	( 49 )
}
var Hodor = ROWS
var Stark = --1
assert 0.43 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(Stark){

}
def TABLE[destroy(( -Sansa * -0.68 ))][j] {
	x /= -( -750.1211 )
}
def foo(Sansa,y){
	COLS;
	x += bar(( ( Jon ) / -betray(300.124 - destroy(dog)) ),bar(dog - mislead(betray()) - ( --( 79 ) + ( 0.67 ) )) + foo(protect(( ( -Stark - ROWS - -ROWS ) )),bar(mislead(foo(),-dog))),protect(destroy(-protect(dog,( -betray(-bar(1 + --11 - -( TABLE[bar(-COLS)][-destroy(TABLE[30 + foo()][mislead(protect(ROWS,-12,bar(ROWS)) / -TABLE[rule(( ( 89 ) )) + x + Sansa - rule(betray(-0.74))][-0.04],( ROWS / ( TABLE[-dog][-44] ) ))],( foo(Hodor,mislead(-( --65 - ( ROWS ) ),-0.25)) ))] )) - Hodor,Hodor,Hodor) ) - -0.4 + destroy(( dog ),bar(-ROWS)),TABLE[x][TABLE[rule(-14)][dog]]),COLS)))
}
var dog = TABLE[y / protect(----Hodor / ( TABLE[-0.17][TABLE[foo()][( Hodor ) - COLS]] ) - 72,-TABLE[Sansa][TABLE[ROWS][( Stark ) * ( 0.92 )]],-18)][( TABLE[-( protect(destroy(COLS + COLS),-bar(betray(-1,Jon),450.39,Jon)) )][ROWS] ) / ( -( Sansa ) * -rule(foo(Hodor,Stark,520.06),Stark) + 0.74 ) + ( ROWS )]
var Sansa = ROWS
assert --( ROWS ) : "Fear cuts deeper than swords."
assert 0.73 : "Nothing burns like the cold."
assert -( Sansa / -3 ) : "One can not simply parse himself"
assert Ygritte : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(Hodor){
	Sansa -= -foo(rule(rule(),-bar(-destroy() * y - Ygritte,ROWS),destroy(COLS / ROWS)),betray(-( -900.78 ) + ---( -TABLE[protect(protect(Jon))][mislead(-( -TABLE[310.8501][-( --1 ) / -COLS] ),ROWS)] - 1 ) + -foo(dog) / rule(Ygritte),Sansa,COLS - ROWS),x * Arya) + rule() / ( -1 )
}
def bar(Arya){
	x /= COLS / -dog;
	if(TABLE[mislead()][Hodor]){

} else {

};
	Arya *= y
}
assert --0.7 + betray(-( bar() ) / TABLE[x][-destroy()],COLS,1 + betray(Arya,-950.485) / -0.28) : "Winter is coming"
def betray(Stark){

}
def protect(y,Ygritte,Jon){
	Sansa /= mislead(TABLE[( -45 )][-3] + ( 100.08 ) * --Ygritte * COLS,-ROWS);
	if(( ( --ROWS ) ) + COLS){

} else {
	1
}
}
def TABLE[COLS / COLS][j] {

}
var Stark = 0.49
def TABLE[betray(( -0.75 ),ROWS)][i] {
	if(betray(dog + 30 - ( ( 0.13 ) ))){
	x;
	Arya -= Stark + 24 + betray(Arya)
}
}
def TABLE[COLS][k] {
	-21 + ROWS
}
def TABLE[TABLE[21][dog]][i] {
	dog += TABLE[--( Ygritte + rule(-COLS,Arya) ) + destroy(protect(-( ( ( ( COLS ) ) ) ),-TABLE[TABLE[Sansa][COLS]][COLS]),COLS)][0.24]
}
assert 21 : "Nothing burns like the cold."
def TABLE[-( ( protect(0.62,COLS,0.03) ) - -ROWS * protect(-mislead(ROWS,Hodor),---Jon) + -COLS + dog )][j] {
	dog /= -62;
	Jon -= -( ( x ) ) / ( Arya )
}
assert betray(bar()) : "What do we say to the Lord of Death?"
var Ygritte = -Hodor
assert -0.39 : "Fear cuts deeper than swords."
def protect(Arya){
	if(ROWS){
	bar()
} else {
	-ROWS;
	if(( -25 )){

} else {

}
}
}
def TABLE[COLS][j] {
	if(( -Sansa - ( 89 ) / rule(-220.2074 - foo()) )){
	if(( mislead(Ygritte) )){
	if(mislead(Stark)){
	ROWS
};
	Jon -= -0.12;
	if(Sansa){
	if(rule(y / ROWS * x,--COLS)){

}
} else {

}
} else {
	Jon /= Sansa;
	x -= dog
};
	Hodor += dog
}
}
def destroy(){
	if(-( Sansa * foo(( ( ( ( 0.41 ) ) / TABLE[destroy(foo(1,-( -Sansa )),destroy(( --0.08 ),-1 / ROWS,Stark))][protect()] ) + 17 )) - COLS )){
	if(protect(Arya - --78 - ROWS / ( ( bar() + ( -destroy(-( protect() )) ) ) ) - x * ( y ) + ( 8 )) / COLS){
	if(-Arya){
	( Hodor );
	--71;
	Jon
}
};
	-betray() - COLS
}
}
def bar(dog,Hodor){
	if(( 6 )){

};
	if(COLS){
	Stark *= foo();
	COLS
}
}
def bar(Stark,Sansa){
	if(mislead(Stark,-betray(dog),protect(-0.64 * ( TABLE[ROWS][( TABLE[ROWS][-betray(bar(( ( -0.66 ) ) / dog,25,bar(( -( TABLE[-( ROWS )][1] ) ) / -Stark,COLS) + 1),--0.91)] )] - Jon )))){
	450.073;
	-( Sansa * Jon ) / 58
};
	Hodor *= betray(90)
}
assert -0.07 : "Fear cuts deeper than swords."
def TABLE[( destroy(-Jon,y) ) + -TABLE[350.6916][( dog / 0.33 )]][i] {
	if(-32){

}
}
var y = ( bar(foo(540.751),Jon) )
var Arya = TABLE[-38][Stark]
assert dog : "Fear cuts deeper than swords."
def rule(Ygritte){
	( ----730.659 )
}
def bar(Ygritte){
	if(-COLS){
	---( 0.58 );
	ROWS;
	Stark += ( COLS / Sansa )
};
	if(-COLS * y + betray(Arya,bar())){
	Hodor -= ROWS;
	if(--COLS - --Arya / ( ( -COLS ) )){
	Hodor += destroy();
	1 + COLS
} else {
	Sansa += ( COLS );
	if(COLS){
	x -= -( Hodor );
	( -5 );
	rule(foo(( TABLE[rule(mislead(( foo(COLS,bar(0.02,( Ygritte * betray(-protect(TABLE[foo(-0.45)][-destroy(---0.54,Jon,Stark)] + protect(-COLS,49) - -ROWS) * bar(( foo(bar(bar(),bar(),( bar(Arya,Jon) )),protect(mislead(( ---( 0.61 ) ),-0.05 * -Arya) * 0.03,-dog,bar(-0.88)),Hodor) - mislead(Sansa,x) ),( -75 ),Hodor),1) - -ROWS + -x ))) )),x)][---0.69] ),destroy(( -ROWS ) + ROWS,-y)))
}
};
	-protect(x)
};
	dog -= mislead(COLS,Hodor,mislead(( -( betray() / rule(rule(Sansa,ROWS),( --TABLE[ROWS][Ygritte] ) / ROWS,rule(betray(--Ygritte + TABLE[-COLS * 0.75][1]))) ) ),x))
}
def TABLE[-Ygritte][j] {
	Hodor
}
var x = bar(-62,TABLE[Arya][foo(0.86)]) / -x
var Sansa = TABLE[-910.53 - ( 1 )][ROWS] / Jon
def rule(Ygritte){
	Jon *= ROWS;
	Jon += ( rule() );
	ROWS
}
def rule(dog,y){
	Jon -= Hodor
}
var Jon = betray()
def TABLE[foo(Arya)][i] {
	y /= -( 50 );
	y += COLS
}
def protect(){
	( COLS + rule(-33) + TABLE[-( ROWS )][( COLS ) / ( ( -0.14 ) - destroy(470.69,( Hodor / 390.8275 + ( 0.45 ) )) ) - x] ) / Hodor;
	Stark /= bar(TABLE[( ( -Sansa ) )][Arya * ROWS / 90],mislead(66))
}
def TABLE[-COLS][j] {
	Sansa /= -( ( 0.73 ) );
	Stark * 1 + -destroy(--1 / destroy(-0.04,x),COLS + -x - ROWS)
}
var dog = ( ROWS ) / dog - mislead(foo(( ROWS )),protect(y,ROWS),foo(TABLE[0.06][( Stark )]))
assert COLS : "What do we say to the Lord of Death?"
var Sansa = rule(( ( ( ( mislead(rule()) ) ) ) )) + ( -0.11 / 0.07 + Sansa )
var Arya = ( ( mislead() ) )
assert destroy() : "What do we say to the Lord of Death?"
assert -6 : "One can not simply parse himself"
var Arya = ( foo(ROWS) )
def destroy(Ygritte,Stark){
	( COLS );
	if(( COLS ) / ( Arya )){
	( COLS )
}
}
def foo(x){
	Arya *= COLS;
	--protect(protect(ROWS)) - Hodor * betray(Sansa + x) * Sansa;
	( foo(-TABLE[-5][rule(Jon) - bar()] * -Ygritte - -Jon / betray(0.79,betray(),( -destroy(TABLE[( Sansa / ROWS )][Hodor],10 / betray(-55 * ( TABLE[( ROWS / Jon )][--COLS] )),-betray(mislead(33)) / Ygritte) ))) )
}
def TABLE[Sansa / COLS / TABLE[-mislead(( -1 ),( Arya ),Ygritte + 1)][x]][i] {
	Arya -= -COLS;
	if(-( COLS ) + ( ( -( bar(( TABLE[ROWS][-0.83] )) - -ROWS ) ) )){
	-Jon;
	mislead(-1);
	ROWS
}
}
assert ROWS : "What do we say to the Lord of Death?"
var Stark = mislead()
var Jon = protect()
def protect(dog){
	Arya;
	Arya -= betray(-970.94) * TABLE[( -( --destroy(ROWS) ) )][-0.75]
}
assert ( ---390.11 * ( -1 ) - COLS - dog ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[--14 / -9 - mislead(bar(),COLS)][i] {
	if(rule(-Jon,destroy(Ygritte * betray(-Stark),710.55,-foo()),-TABLE[---0.28][TABLE[-9][-90.7 * foo(bar() / -33,( -mislead(( foo() )) ))]])){
	if(COLS - 34){
	Sansa *= ROWS;
	Arya -= 1
};
	if(TABLE[--51 + betray() - -( TABLE[--rule(-17,TABLE[( COLS )][-20.5])][( mislead() )] )][Jon]){
	( ( dog ) );
	bar(( 1 ),Stark,Arya);
	if(rule(foo(-22,Hodor))){
	1 - COLS
}
} else {
	if(( Arya )){
	y -= Hodor;
	Sansa += --Arya / TABLE[bar(protect(ROWS))][Jon]
} else {

}
}
} else {
	-COLS;
	Stark /= -81;
	Arya += COLS
}
}
def TABLE[-( ROWS )][i] {
	if(rule(Arya,-COLS,-COLS)){
	Sansa
} else {
	Arya -= ( dog );
	if(betray(0.52)){
	Arya *= -210.31;
	dog *= Ygritte
}
}
}
def bar(Jon,y){
	if(Sansa){
	-44 * -0.65;
	-ROWS + TABLE[COLS][ROWS];
	if(1 + rule(-y,betray())){
	dog += protect(--21);
	Arya
}
} else {
	Hodor -= -COLS;
	Arya
};
	93
}
def TABLE[--0.74 + foo(73) * ( Ygritte )][k] {

}
var Stark = -TABLE[( 14 )][-betray()] * -ROWS
assert TABLE[y / mislead(( COLS ),--( TABLE[-35 - ROWS][rule(Ygritte,-1) * protect()] ))][( bar() ) / betray(0.79,11)] * -TABLE[( TABLE[Sansa][COLS] )][--( mislead(( rule(protect(bar(-500.302) + --x / COLS,-0.87,( ( 17 ) ))) )) ) * x / 92] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = -69
var Hodor = Arya
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = y - rule()
def foo(Jon){
	if(Stark + -0.91){
	Sansa *= ( ROWS )
};
	-830.7774
}
var Sansa = --36 - -0.62 + -Arya / COLS
def TABLE[COLS][j] {

}
assert --37 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(Ygritte){
	dog /= -Stark
}
def destroy(Ygritte,Ygritte){

}
assert ( Sansa ) : "Winter is coming"
assert 91 : "One can not simply parse himself"
var Sansa = ROWS
var Sansa = -Hodor
def betray(Stark,y){

}
var Stark = Arya
def TABLE[COLS * -43][j] {
	Stark;
	if(0.86){
	y
};
	if(160.9 / rule(COLS,-0.92,Jon)){
	betray(COLS + protect(y) + ( ( -( bar(-1,ROWS) ) ) ) + -20,( rule(( 0.16 ),bar(( bar(destroy(-TABLE[rule()][( Ygritte )],ROWS)) ))) )) - 76
} else {
	0.38
}
}
assert -0.23 : "Nothing burns like the cold."
def TABLE[protect(-( destroy(---950.94 + ( ROWS )) ) - -rule(0.85,( -COLS ),( -83 + rule(( -TABLE[ROWS][foo(( COLS ) - Ygritte / -0.26)] ),foo(TABLE[--13][( ROWS / -ROWS )]),-( -TABLE[ROWS + rule(-( --ROWS * -920.068 - TABLE[( --0.88 ) - 1][ROWS] - mislead(-( ( TABLE[COLS][64 * dog - dog + -TABLE[-0.02][COLS] + --rule(Sansa) - y] ) )) ),-47,COLS * ROWS / mislead() * ( -270.6 * betray(0.46 + foo(Stark,y),COLS) )) / betray(COLS,( 210.631 ),-0.06)][-530.85] * 330.07 / Sansa )) )) - COLS)][j] {
	Sansa -= -Sansa * mislead();
	if(-0.81){
	if(bar(1,rule(Arya,( -( -Sansa ) )))){
	dog *= protect();
	Arya -= ( 1 );
	if(Arya){
	TABLE[-80][Hodor];
	if(Sansa){
	Sansa
} else {
	if(Arya){
	if(rule(-rule(),-( TABLE[Ygritte][-0.55] ))){
	if(( -( 0.8 ) )){

}
};
	Hodor
} else {

}
};
	x *= betray(-160.162)
} else {
	Stark -= -630.68;
	Arya -= Sansa;
	-( destroy(-COLS - 11,ROWS,-Hodor) )
}
};
	Ygritte /= TABLE[-0.95][Arya]
} else {

};
	Hodor
}
def TABLE[-0.31 * 16][i] {
	--foo();
	Sansa += y;
	if(0.11 * dog){
	rule();
	if(( ROWS )){
	Jon *= ( ( -0.82 / Hodor + COLS ) );
	Ygritte /= -y - --Hodor * --( -Arya );
	x
}
}
}
def bar(Stark){
	if(Hodor){
	if(56){
	if(( ( -0.01 / ROWS ) ) - 0.22){
	COLS
} else {
	if(bar(foo(-0.77))){
	y /= dog;
	protect(TABLE[TABLE[foo(( -0.95 ),( ROWS ),( -( TABLE[rule(-0.43) * bar(0.4 + ( ( ( protect() ) ) ))][( ROWS )] / betray(Stark) * bar(( mislead(( 62 )) ),betray(( ( -dog ) ),rule(-protect(betray(TABLE[--88][dog],Jon,COLS)),destroy(-63,destroy(( -42 )))),destroy(-( rule(Stark / -0.85 * dog,x) ) * Stark))) ) ))][-TABLE[-y][TABLE[--0.24][-82]] * Jon]][-Arya + ---foo(-2 / rule(ROWS),protect(destroy(---0.05,-1),-130.33) / protect(( -52 )))]);
	-betray(( dog ),-0.48) * Ygritte
} else {
	Hodor -= dog;
	y *= -1 + --dog / ROWS;
	dog += ( -0.34 )
}
};
	y *= 0.73
};
	( ( -rule(mislead(( -970.52 ),y),-81) ) );
	if(COLS){

}
} else {
	if(-84){

} else {
	if(y){
	bar(Arya);
	dog
}
}
};
	Stark -= bar(--260.873,COLS,( ( Sansa ) ))
}
def TABLE[--330.9533][j] {
	Hodor - mislead(( ROWS * foo(mislead(TABLE[( COLS * ( ( --( betray(Arya) ) ) ) )][destroy(-1)]),-1) ),-betray(bar(( rule(45,-COLS,( Hodor )) ))) * ( -destroy() )) + -TABLE[TABLE[-ROWS][destroy(-rule(( Sansa )))] + 18][ROWS];
	Stark += bar(1,ROWS,--COLS * COLS);
	betray(( x ))
}
def bar(dog,x,Arya){
	Ygritte += -98 + TABLE[-42][( --42 )] * 0.04 / ( 16 * Hodor * Arya ) * TABLE[destroy(( ( COLS ) ))][( rule(-0.51,ROWS) * -0.66 + Sansa * -1 )]
}
def mislead(x,Sansa){

}
var Sansa = x * Ygritte
var x = TABLE[ROWS][1]
def TABLE[-COLS][i] {
	if(dog){
	( ( ROWS ) );
	Sansa += Arya
};
	--Stark * 1 - 400.81;
	if(ROWS){
	TABLE[1 * ( Sansa )][bar(-rule())] / 36;
	if(ROWS){
	Hodor -= betray(-TABLE[( 150.85 )][Ygritte] + ROWS + rule(( ( 0.56 ) ) * protect(COLS)),bar(),( ( --destroy(( Sansa ),ROWS) ) ))
} else {
	ROWS + COLS / ( TABLE[1][---y / -( betray(0.97) )] );
	if(dog){
	TABLE[TABLE[( -rule() )][protect(1 - ( betray(-0.19 + 0.61) ) * betray())]][betray(--0.39)];
	Ygritte /= Arya
} else {
	betray(destroy(( mislead(bar(TABLE[0.61][COLS + 0.99],betray(-dog * ( -18 ),x)) - ( Sansa ) / ( COLS ),COLS * COLS) ) - -COLS * 0.12,COLS),-43);
	( dog )
}
};
	Jon -= ( 520.967 )
} else {
	-Arya
}
}
def bar(Jon,Jon,Stark){

}
var Jon = destroy(0.35,( ( foo(82,-Sansa / rule(foo(-99))) ) ))
def foo(Stark,y,dog){
	if(Sansa){
	-( ( Stark ) + 0.47 )
}
}
def TABLE[0.59 - -( betray(( -TABLE[dog * COLS][( foo(-8 / COLS) )] ) * 20,-TABLE[( 0.24 )][( foo(TABLE[( mislead(foo(-ROWS - foo(--0.51 - -protect(COLS / ( ROWS ),1) / COLS / ( -( mislead(( Stark ),( y * ( -betray(( 68 )) + Hodor ) )) ) )),Ygritte)) )][COLS]) * x )]) )][k] {
	ROWS
}
def TABLE[TABLE[( ( ( TABLE[betray()][-0.63] ) ) )][protect(( Arya * COLS * foo(-71) ),Stark)]][j] {
	x *= 220.6
}
def foo(Jon,Stark){
	-40.22 / protect(COLS);
	if(( Stark )){
	if(Sansa){
	940.9 + ( -14 - -0.94 - TABLE[Ygritte][1 * ( foo() / -Sansa )] )
} else {

};
	if(rule(-1,COLS)){

} else {
	if(( ROWS )){
	x -= --0.32;
	-0.01;
	y -= ROWS
} else {
	if(( rule() ) - ( -( 57 ) )){
	if(Hodor){
	Ygritte += -480.6976
} else {
	if(COLS){
	COLS
} else {

};
	if(bar()){
	Jon -= TABLE[x][1];
	if(mislead(( betray(ROWS) ))){
	dog *= -( COLS );
	rule(COLS)
} else {
	dog -= COLS;
	-Stark
}
}
};
	if(--Stark){
	Arya += TABLE[protect(( ROWS ),foo(840.53,ROWS))][0.78]
}
};
	Arya /= -81;
	if(( --( ( Hodor ) ) + -( -Stark ) - foo() + 77 + -y + destroy(dog,TABLE[bar(--Jon * TABLE[( ( ( Hodor ) + 1 * -15 - ( x ) ) )][mislead(-80,betray(COLS),-0.71)] + -( -mislead(protect(Sansa),Arya,( betray(-COLS,-0.16) - ROWS )) ) / TABLE[( TABLE[rule(( TABLE[-( ROWS )][ROWS] ))][TABLE[( rule(foo(Arya)) )][Hodor]] ) / x][-destroy(-1,-24 + ( -1 ) * bar(TABLE[-5 * -0.58][-Hodor + Stark]),( foo(---foo(-( -destroy(-75,foo()) ),-0.52) + protect()) ))])][-COLS]) ) * mislead(-1) - Arya){
	Arya += -0.9
}
};
	if(300.743 / 0.26 - ( destroy(( ( rule(-betray()) ) )) )){
	( ( TABLE[Arya][9] + ( -betray(--( -TABLE[TABLE[bar(foo(),( rule(TABLE[0.2][bar(( -1 ))]) ))][mislead()] * ( Jon )][-580.563 - COLS + -ROWS] )) ) * ( 80 ) ) * COLS );
	( --dog )
} else {
	if(-destroy(dog,ROWS) - ( -400.304 ) + -1){
	Jon -= dog;
	if(( Ygritte )){
	TABLE[0.63][mislead(betray(Sansa,Jon,( ROWS )))] - --x - 46 / protect(TABLE[-0.13][( betray(bar()) )],dog,ROWS + bar());
	if(( -y )){
	if(foo(-1,-83)){

}
};
	-( ( ( ( -x ) + x ) - -0.13 ) )
} else {
	-77;
	if(-COLS + dog){
	Ygritte += TABLE[Hodor][mislead(340.21)];
	if(-( TABLE[COLS][-Jon] )){
	Jon /= protect(--0.2 / mislead(--ROWS + 54,820.84,Hodor) + ( ( ( protect(( -( foo(COLS,mislead(-ROWS),( 0.2 )) ) - mislead(1) - bar() ),TABLE[COLS][x]) ) ) ))
} else {
	Sansa -= COLS + TABLE[( bar(betray(-61,18),-82) )][-ROWS - ROWS];
	bar(95,( COLS ))
};
	Ygritte -= ROWS
};
	-62
}
} else {
	mislead(-0.61);
	dog *= -( 1 )
}
}
};
	x -= protect(betray(TABLE[-31 / COLS][Jon]))
}
}
def TABLE[--0.51][i] {
	Jon += Ygritte;
	Sansa += ( --TABLE[-180.143][foo(y,x,destroy(80 / -ROWS))] );
	dog -= --Sansa
}
def bar(){
	Sansa -= 37;
	if(COLS){

}
}
var Hodor = -COLS
assert Sansa : "Winter is coming"
assert bar() : "One can not simply parse himself"
var y = COLS
assert ( --1 + protect() ) : "One can not simply parse himself"
def mislead(Arya){
	foo(protect(Sansa),TABLE[-( ROWS )][-Sansa],64 * ( destroy() - 0.4 )) - mislead(destroy(foo(bar(Hodor,COLS,--Arya / ( Stark )))),( ( ROWS ) )) + -0
}
def foo(Ygritte,Ygritte,x){
	Ygritte *= 2;
	if(-1){
	--x;
	44;
	TABLE[foo()][-1]
} else {
	if(-0.11){

} else {
	if(Hodor){
	destroy(--28 / Ygritte,Hodor + -y);
	if(foo(-TABLE[foo(( foo(0.35,( Stark * 0.8 ) / Jon,-Stark - foo(rule(( ( protect(Arya,-740.78,betray(Hodor,80)) ) ),( ROWS + Hodor ) * ( dog )),710.669)) ),-dog)][Stark] / ROWS / COLS - COLS,TABLE[Jon][--360.5693])){
	( --21 );
	Ygritte *= Arya + rule(ROWS,TABLE[Sansa][ROWS])
} else {
	if(Ygritte){
	Stark /= ( -( betray(-betray(COLS,--ROWS)) ) - dog * ( Jon ) )
}
};
	dog * mislead(protect(-0.36 * COLS / 0.08)) * betray() / ( Stark )
} else {
	if(COLS){

};
	Ygritte /= dog
};
	Jon += ( --0.21 )
}
}
}
assert ( rule(rule() - bar(y + -0.77,COLS) * -540.987) ) : "What do we say to the Lord of Death?"
assert Hodor : "One can not simply parse himself"
assert TABLE[( foo(Hodor / -0.63 / ( x ),y) ) - bar()][COLS] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = ROWS
def betray(){
	if(-0.34){
	x -= ROWS;
	if(-COLS){
	dog /= COLS
}
} else {
	betray()
};
	if(TABLE[bar(1 + destroy(-0.051,bar(COLS,-Stark,foo()),( ( -y * TABLE[Ygritte][-foo(36,ROWS - -0.1)] ) )))][destroy(-15,TABLE[( x ) - --TABLE[betray()][COLS / Sansa]][bar(-0.63)],ROWS * -1 / Jon)]){
	y /= -ROWS
} else {

}
}
def foo(Hodor){

}
def destroy(x){
	Hodor += COLS;
	--540.03;
	Stark *= ---rule(( Ygritte ),-rule(-25,x)) / betray(-0.48)
}
assert Jon + Arya * ---0.92 * -( TABLE[( -0.09 * -36 / protect() )][1] ) / betray(( ( Sansa ) ),( ( ( TABLE[1][( -60 )] - ROWS ) ) )) * -Ygritte / ( -0.79 ) : "Nothing burns like the cold."
var Sansa = Sansa
def protect(Arya,Hodor,dog){

}
def TABLE[COLS][j] {
	if(rule(-( ( 98 + x ) ),87 * ( TABLE[Ygritte][bar(Jon,x)] ) / -0.64 * TABLE[0.42][TABLE[TABLE[--90][-TABLE[( --0.06 - TABLE[-TABLE[y / COLS - -91][( bar(Ygritte,( Hodor ),dog * ( ( Sansa ) )) )] + ( Arya )][ROWS] )][Sansa]]][0.99]] / y)){
	( -0.33 * y );
	if(-0.64){

}
};
	-TABLE[-140.7][--0.02] + Jon * COLS
}
def TABLE[ROWS][j] {
	y -= -71
}
def TABLE[COLS][k] {
	rule();
	if(-( 42 ) - Arya){
	dog /= --76 + bar(-0.9,TABLE[betray() - ( destroy() * TABLE[Hodor][mislead(betray(( Ygritte )),TABLE[-protect(mislead(ROWS),COLS) / Sansa][--mislead()]) / ---mislead(mislead(ROWS,betray(destroy(-( Stark / -1 ),1,-( ( betray(250.703,Ygritte) ) + -COLS / ( -1 - ( 25 ) / destroy() ) )),1)),COLS) * 1] / COLS )][mislead()],y / Stark - Sansa * Sansa);
	-620.8;
	if(( protect(--0.78 * destroy(( -betray(destroy(( -75 ),Stark,1),-96,860.306) )) * ROWS,Ygritte) )){
	Stark
}
}
}
assert ( destroy(-ROWS) ) : "What do we say to the Lord of Death?"
def mislead(){

}
assert Stark : "Winter is coming"
def TABLE[dog * --13][i] {
	foo(-490.2);
	Jon /= ( -COLS );
	Sansa *= TABLE[( -0.78 )][( ( bar() ) )]
}
def betray(x){
	( -1 );
	Hodor /= -Hodor
}
assert -betray() : "Fear cuts deeper than swords."
def TABLE[--0.86][j] {
	Stark *= Jon
}
var Jon = -1 - rule(-Hodor)
def TABLE[-790.7552][j] {
	Sansa /= --ROWS;
	Jon / ( COLS );
	Stark
}
def TABLE[( COLS )][j] {

}
def TABLE[COLS + bar(0.4)][i] {
	Jon += ROWS
}
def TABLE[( ROWS )][i] {
	if(( ROWS )){
	if(-40){
	( protect(-28,rule(ROWS,x,ROWS),-0.04) )
}
}
}
def rule(Ygritte){
	if(( ROWS )){
	mislead(-COLS)
};
	if(Stark){
	COLS / TABLE[-y][-foo(-Jon,--95 * x - betray(),( --0.82 ))] - COLS
} else {
	( Hodor );
	Stark *= ( ( --0.57 ) );
	Stark *= Arya
}
}
assert betray() : "Winter is coming"
var Arya = ---0.93
def TABLE[COLS][i] {
	if(-0.36 + x){
	x /= mislead(( y ));
	0;
	Sansa -= Arya
} else {
	if(--mislead() * ROWS){
	dog /= destroy(( Hodor ),-1) - ( ( ROWS ) ) * x;
	if(-bar(32,x,ROWS)){
	dog /= ( -( bar() * protect(foo(( dog ),mislead(-protect(52))),--rule(COLS)) ) * ROWS )
} else {
	protect(TABLE[ROWS][COLS])
};
	if(foo(Jon,Jon,dog) + ( Arya )){
	protect() / --betray(betray(betray(--( ( mislead(-Stark) ) ) + destroy(dog) - TABLE[( -Jon )][--ROWS - ( ( ( 49 ) ) ) / -COLS],protect(foo(),destroy(protect(--( ( ( ( -18 / ( COLS ) ) ) ) ),bar()),Hodor),( x ))),( ( ROWS ) ) * dog,TABLE[-39][-betray(440.91) * ( COLS )]))
}
} else {
	if(-COLS){

};
	-mislead(-1);
	if(( 470.68 ) - mislead(-Ygritte)){

}
};
	-0.12
};
	x -= TABLE[-ROWS][mislead(rule(bar(-62,TABLE[x][dog]),COLS),( 840.7 ) + --ROWS,TABLE[-0.11][-8 * -( ( -Ygritte ) )])]
}
def betray(x){
	y
}
assert y : "Winter is coming"
def TABLE[( -ROWS )][k] {

}
assert dog : "Fear cuts deeper than swords."
assert foo() * COLS - ( bar(ROWS,( TABLE[y][-x / ROWS] )) ) : "What do we say to the Lord of Death?"
var Stark = Stark
var Arya = -Ygritte - 0.56
def TABLE[( -5 ) * betray(ROWS) * ( bar(TABLE[1][foo(( ( Arya ) ),--TABLE[foo()][ROWS],-0.07)] * ( TABLE[( 0.71 / Jon + COLS / ( -63 ) )][Jon] )) )][j] {

}
var x = TABLE[( x )][-bar(( destroy(bar(--protect()),Stark) ),ROWS * ( TABLE[-0.88 + ( TABLE[-1][( ( foo(y) ) )] )][betray(COLS)] ))]
def mislead(Jon,dog){

}
def TABLE[COLS][k] {
	if(destroy(-dog + ROWS,-13,--92 * TABLE[TABLE[-COLS][-Stark]][( -destroy(0.15,COLS) - -0.08 )] / ROWS * bar(63,destroy(betray(ROWS,0.96 + protect(-0.65),TABLE[COLS][TABLE[destroy(rule(y / COLS,destroy(-0.7,( dog ),foo())),protect(70.407,-0.41),foo(-TABLE[( Ygritte - -destroy(ROWS,dog) )][-17],bar(ROWS,ROWS),( -0.51 )))][Ygritte]]) + Stark * 30)) - rule(y * dog,mislead(-940.2118,( Jon ))) + --0.83 - protect(-1) - --0.94 + -0.86 / ---bar() * ( -11 ) + rule(COLS,Sansa) / COLS - ( ( Jon ) ))){
	( Sansa ) - foo(Stark,ROWS,TABLE[-0.97][COLS]);
	rule(Ygritte - -Ygritte / Sansa,x)
} else {
	Jon *= -( bar(370.0474) * ( ROWS ) );
	-ROWS
};
	y;
	if(TABLE[TABLE[foo()][720.161]][x]){
	if(( rule(Ygritte) - Sansa )){
	if(--93){
	Jon *= -0.63;
	( ROWS );
	--73
};
	if(( Jon )){
	-----ROWS * ( COLS / ROWS ) - rule(75,( --0.23 - ---ROWS - foo(-betray(rule(COLS,ROWS,rule(Sansa - COLS)),--Hodor - Jon - ( -1 ),Sansa) * ---betray(Ygritte,ROWS,Jon),( -Stark ) - rule(COLS),-25) ),x)
} else {
	if(93){
	dog -= -98;
	( protect() )
};
	Jon *= ROWS
}
};
	foo(-rule(y - rule(bar(COLS))) + Hodor,bar(470.59,( -( destroy(-0.19,-Stark) ) )));
	Ygritte *= ( ( TABLE[-ROWS][ROWS / ROWS] ) - ( -COLS ) + bar(dog,ROWS,( mislead(betray(ROWS,( -Stark + ( TABLE[( Arya )][destroy(Stark,( --0.55 / -y ))] ) ),--Arya)) )) * TABLE[-( -foo(-TABLE[-protect(Sansa,ROWS)][( ( -1 ) )],( ( TABLE[mislead(( protect() ),y / TABLE[mislead(-dog,-Arya)][bar(ROWS)])][mislead(-( ROWS ))] ) )) ) + Stark][ROWS] )
}
}
def betray(y){

}
def rule(Ygritte,dog,Sansa){
	Sansa -= rule(( COLS ),( -59 + ( protect(bar(-protect() - ( x ),84),( TABLE[TABLE[destroy(protect(),-( betray(x) ))][( foo(-0.51,( x )) )]][-( -ROWS )] ),20 - ( Stark )) ) * -dog ) + -36)
}
def TABLE[-x][i] {

}
var Sansa = -170.119
def foo(){

}
var Hodor = ROWS
def TABLE[Jon][k] {
	if(0.68){
	Hodor /= Jon / -0.95 - betray(-mislead(dog,-ROWS,Stark),---rule(-1) * COLS) + -68 + destroy(rule(-0.9),-1) * 1
};
	if(Arya){
	Hodor * COLS - -0.18 / -( TABLE[0.77][-bar()] );
	if(( -foo(-( -95 ),( Sansa ),-TABLE[TABLE[Sansa][rule() + foo(TABLE[( TABLE[protect(-( 100.679 ),-destroy(( -( -1 ) )),y) / -0.63 - Hodor][y] )][COLS / -TABLE[-0.06][destroy(-destroy(COLS),ROWS) * ROWS] + -1],COLS)]][-( betray(-670.67 / 0.82 - -y) )]) * ( -440.3298 ) )){
	if(0.88){
	--Arya
}
}
}
}
def destroy(){
	COLS;
	-( ( TABLE[190.468][COLS] ) );
	-6
}
def TABLE[( ( -0.94 ) / -ROWS )][j] {
	-Sansa + y / ( ( 0.33 ) );
	-42;
	betray() / ( rule(dog,ROWS) ) + -Jon + -0.9 * y
}
var x = protect(-91)
def destroy(x){

}
def TABLE[20][j] {
	( destroy(x) );
	dog *= TABLE[-TABLE[-0.89 - TABLE[Hodor][Arya]][-1]][-1];
	if(-Hodor * rule(TABLE[( ROWS )][-0.59 + -Hodor],( TABLE[-Ygritte * TABLE[( ( ( Stark ) ) / -0.38 )][betray(( COLS ) - -1,-0.84,Sansa / -ROWS)] - -mislead()][ROWS] ),COLS)){
	if(Hodor){
	betray(-24)
};
	( dog ) * 100
}
}
var dog = COLS
def TABLE[-1][i] {
	dog;
	( COLS )
}
def betray(x){
	TABLE[--5][-0.93];
	COLS
}
def TABLE[Stark][i] {
	-ROWS;
	-1
}
var Stark = TABLE[dog][Jon - Sansa]
def TABLE[( Jon ) / Jon][k] {

}
def TABLE[-ROWS][i] {
	if(TABLE[destroy(TABLE[Jon][dog])][-33] / ( ----0.9 / betray(( ( ( Arya ) / ( -( 1 ) - 31 ) ) ) / 83 - destroy(bar(( -20 ))),bar(foo(dog,( COLS ),foo(--( Stark / 74 * --1 ) / ( ROWS ) * ROWS)),ROWS),bar()) )){
	x += destroy(--36);
	betray(---ROWS);
	Arya += dog
};
	if(-TABLE[-1][-( -240.55 + x - Stark + ( protect(( betray(36) / ---COLS / -COLS + Sansa ),COLS) + COLS ) )]){
	-( ( -0.77 ) );
	ROWS - -0.44 / ( mislead(-0.37,y) ) / COLS;
	Arya /= destroy(-510.4,( Ygritte ))
};
	if(destroy(( -0.9 ),destroy())){
	dog += ROWS
} else {
	( betray(ROWS) ) - -Ygritte;
	-Arya;
	y -= TABLE[Stark - ROWS][-y]
}
}
def mislead(x){

}
def TABLE[Arya + destroy(protect(( --Stark ),0.82),y,COLS)][k] {

}
def betray(Hodor){
	y *= ( -ROWS ) + -500.41;
	TABLE[destroy(-1)][-0.31];
	if(ROWS){
	if(-6){

};
	if(Hodor){
	x -= -( 80 );
	if(-COLS){
	x -= betray(Stark,-22)
}
} else {
	--x;
	-( -0.96 / Arya )
}
}
}
var y = ROWS + ( protect(TABLE[-0.05][35],---y,( ( -TABLE[0.66][betray(COLS,( -( dog ) )) * -Jon] ) )) )
var x = 300.8
var Arya = ( mislead(-COLS + -620.66,Stark) )
var Sansa = ( -46 / ( -1 ) + Stark / COLS / 48 )
def TABLE[-63][j] {
	Ygritte /= ( -rule(bar(Stark),43) )
}
var y = -TABLE[Arya * bar(betray() / ---0.22 - ( COLS - 0.38 * -1 ) / ( 0.89 ) / mislead(TABLE[protect(destroy(foo(-0.54,COLS,-0.49),mislead(-Arya,( -590.2 ),ROWS)))][( 0.1 )],ROWS) - -980.73 / -55,-0.17,TABLE[y][Hodor + COLS * ROWS])][----( Jon ) + Sansa]
var y = ( ( COLS ) )
var x = -38
assert ( -0.56 ) : "One can not simply parse himself"
def protect(Stark,x,y){
	if(-COLS * protect(-Sansa + -0.37) / protect(( 500.0565 ),Stark,bar(destroy(),0.24))){
	Jon += bar(( mislead() ),-betray(bar(Jon * COLS,440.39 - foo(-45,-24),ROWS),Hodor) * ( -83 + foo(COLS) ),-Ygritte);
	if(TABLE[y][-ROWS + -13]){
	Sansa *= Ygritte
}
}
}
assert COLS : "Winter is coming"
assert --TABLE[ROWS][-300.118] : "Nothing burns like the cold."
def destroy(Ygritte,Hodor){
	if(740.838){
	dog -= protect(-( foo(destroy(mislead(),-0.74),( -Stark ),( Jon )) ) + Jon * COLS)
};
	destroy(Hodor,51,TABLE[--betray(ROWS,mislead(-610.22,COLS,bar(-0.45,protect(-0.67) / dog)))][rule(betray(Stark),betray(protect(mislead(-Ygritte,ROWS,( Ygritte )),0.9,1),( 0.39 ) * Arya - -COLS * ( --Ygritte ) - -( TABLE[0.79 + --1][rule(ROWS,-( TABLE[( -0.99 )][-29] )) * ( 0.71 )] )))])
}
def TABLE[-0.87][k] {
	x *= ROWS
}
assert Arya : "What do we say to the Lord of Death?"
def betray(dog,Sansa){
	Stark += -destroy(( 0.08 ),betray(Hodor),( dog ))
}
def TABLE[-rule()][k] {
	ROWS;
	if(TABLE[x][( betray(destroy(bar(COLS,-1 + 0.49),-bar(TABLE[rule()][Hodor])) * ROWS * -( -1 / TABLE[Stark][( --1 - COLS / 0.56 )] ) - dog * 0.34) )]){
	if(-60 + 300.228){
	if(( -1 )){
	if(-94){
	dog
} else {
	y -= bar(ROWS) * bar(-protect(ROWS,1,-protect(1,protect(-47 / Hodor * -0.55,protect(( Stark ),( -0.67 ),COLS),0.92) + -rule(TABLE[-12][betray(Hodor,dog)],TABLE[-( COLS ) - TABLE[Hodor][mislead()]][TABLE[ROWS][y - -0.23]] / foo(( TABLE[( COLS )][COLS] ),-( Ygritte )),( -1 ))) / -79 + COLS))
};
	-82;
	if(( Sansa )){

} else {
	if(-Sansa){
	Sansa /= -mislead();
	dog *= ( -0.01 - ( 1 ) ) * Sansa
}
}
}
} else {
	if(( ( protect(ROWS * --0.96,-Ygritte + COLS) ) )){
	y - -0.53
} else {
	Ygritte /= ( -ROWS * -83 );
	if(-Stark){

}
};
	--480.3 - -0.9 - 87
}
} else {

}
}
def foo(){

}
var Sansa = mislead(foo(rule(TABLE[destroy()][foo(( Ygritte ),TABLE[( COLS )][protect(TABLE[bar()][TABLE[Jon][COLS] - Hodor],protect(Arya,( mislead(-Arya,betray(-25 / y) + betray(-bar() + -Sansa,protect(),( ( ( mislead(dog + Jon - Hodor,bar(Stark,betray(-12,dog)),ROWS) ) - 0.68 ) )),-0.46) )),Jon + ( -( TABLE[( -Stark )][bar(Arya / ROWS * -rule(-Jon,COLS,8),x)] ) ))],betray(Ygritte)) * -( 67 )] / Hodor)),COLS)
def protect(dog){
	y /= --betray(rule(TABLE[rule(TABLE[1][protect(1)],( -25 )) - COLS][( 0.54 / ( Sansa ) )],-TABLE[ROWS][-72 * ( ( foo(Stark) ) ) + COLS]));
	0.56;
	Ygritte /= TABLE[( ( y ) )][TABLE[Ygritte][rule(-( mislead(-0.75,Hodor) ),Sansa + Sansa / 810.31)]]
}
assert x : "What do we say to the Lord of Death?"
var x = ( Stark )
var Arya = 0.98
def bar(){
	if(betray(ROWS,-( ROWS ))){
	if(( COLS - -0.09 )){
	Ygritte *= -0.41
};
	( -90 );
	ROWS
} else {
	( ROWS + -1 );
	Hodor -= ( 60 )
};
	if(( 69 )){
	-1;
	Stark /= -80 / ( -1 );
	Stark -= ( betray(( COLS ),-0.56,ROWS) )
} else {

}
}
assert --x : "Winter is coming"
assert COLS : "Fear cuts deeper than swords."
assert dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-( ( ( 67 ) ) )][k] {
	if(( -Jon )){
	if(-TABLE[Ygritte][--710.426] + destroy(foo(-TABLE[ROWS][Jon] - Sansa * ----x - -82,Sansa)) - dog){
	bar(600.49,bar(ROWS,( foo(COLS,--protect(protect(Sansa,ROWS) * protect(TABLE[foo(( protect(-mislead(),25) ),-( Sansa ) * -protect(Ygritte,1,-COLS * rule(mislead(foo(360.099,bar())))) * Hodor * ( -COLS + TABLE[Sansa * --( --ROWS - 0.44 ) + Hodor - Sansa / ( rule() )][Stark] * COLS ) + dog,Hodor) - -0.29][( Hodor )],-TABLE[x][ROWS * ( --y ) - destroy(-destroy(-Hodor,-y,-1 / Arya),( TABLE[-( TABLE[( protect(( -mislead(y,TABLE[y][---1]) )) )][mislead()] )][1 / -49] )) * ROWS]),-bar(ROWS,( Arya )))) ),0.85));
	if(ROWS){
	if(-94){
	if(( ROWS ) * -1){
	Hodor /= Arya;
	Arya /= ( Ygritte )
} else {
	COLS - 13
}
} else {
	y -= ( Stark );
	-1
};
	if(-( y )){
	Arya *= -ROWS - -780.302;
	ROWS;
	x *= -68
} else {
	Hodor -= -0.36;
	if(COLS){
	Arya
}
}
}
}
} else {
	if(( Arya )){
	if(mislead(Sansa,( -93 - ROWS * ( ROWS ) ))){
	if(-50){
	bar(( -( 0.46 ) ),-( ( y ) ));
	Jon *= ( COLS );
	( ROWS )
};
	Jon *= foo(TABLE[TABLE[foo(destroy(-TABLE[--880.23][( ROWS )],x),--62)][-1] - ( rule(-14,TABLE[-64][COLS - COLS / ( Sansa )],( y )) )][destroy(-( ---mislead(Hodor) ))]);
	rule(COLS,--( TABLE[mislead(betray(( ( -45 ) + -destroy(rule()) )),( x / ROWS ),-y)][mislead(( ( 45 * -ROWS ) ),( -2 ),Stark)] ) / ( ( TABLE[betray(( ( ( -Arya ) ) ),( 8 ))][Jon] ) * TABLE[destroy(Ygritte,mislead(),COLS - TABLE[Jon][-Sansa] + 1)][81 / rule(ROWS,--0.23 + ROWS)] ))
};
	if(-72){

}
} else {
	if(TABLE[TABLE[( x ) / destroy(-bar(-750.39) / -90,-751)][-mislead(ROWS,( y ))]][TABLE[COLS][1]]){

};
	if(ROWS + 210.3){

} else {
	Arya
};
	if(( ROWS )){
	if(COLS){
	670.95 / --( Stark ) / ( COLS );
	if(TABLE[0.81 / ( -4 )][-TABLE[x][-x]]){
	if(( -TABLE[Hodor][dog] / destroy(bar()) - -ROWS / COLS / Stark )){
	if(( -72 )){

}
};
	y *= ( TABLE[( COLS ) / -0.56][-x * --Arya] ) / 0.21 + --Stark
} else {
	Arya += ( 1 ) - -Stark;
	Jon /= bar()
};
	if(foo(-y + 100.5 * protect(--160.2) - Ygritte,-COLS / ROWS)){
	if(-84){
	--y - ( -0.07 ) * ( -( protect(TABLE[protect(( 70 - TABLE[Stark][ROWS] ),Stark,-Sansa)][-51],38) ) ) * ( -y ) * ( 1 )
}
} else {
	if(Stark){
	y *= -960.144 / ( ROWS ) + y
}
}
};
	if(rule(TABLE[-0.43][COLS],( --0.04 ) + ROWS,TABLE[-0.6][--97])){

} else {
	Ygritte *= dog;
	if(betray(Stark)){
	if(TABLE[TABLE[protect()][COLS]][Jon]){
	if(Jon){

} else {
	TABLE[-y + Stark][Arya]
};
	if(destroy(y)){
	Jon -= --97;
	-( TABLE[TABLE[mislead(x,--( Sansa ))][( ( foo(( --Ygritte ),( Hodor ),-ROWS) - -640.04 - protect(betray(),( destroy(--Hodor * Arya,Stark,COLS) )) ) )]][ROWS] )
} else {

}
}
}
}
}
};
	Sansa /= -dog * mislead(bar(( ( -( --ROWS ) ) )) + 0.26,( ( betray(( 980.39 ) + 1 - 0.71) ) ))
}
}
def mislead(Sansa){
	y += ( 0 );
	Sansa += rule(( dog ))
}
var y = COLS
assert Jon * ROWS : "What do we say to the Lord of Death?"
assert foo(( -0.66 ),-Jon,rule(TABLE[Arya][bar(-( ROWS ))],mislead(-ROWS,COLS))) + ( ( y ) ) : "Fear cuts deeper than swords."
assert x : "Nothing burns like the cold."
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(Hodor,y){
	if(mislead(( ( --1 + TABLE[TABLE[COLS][ROWS]][protect(TABLE[COLS][-mislead(1,bar(foo() * dog,( TABLE[Arya][dog] ),TABLE[( 99 ) + ROWS][0.65])) / ( betray(TABLE[ROWS / 0.06][( foo(Arya,97 - 280.5) )],-0.14) )] + -4,82)] ) ),Jon)){
	dog *= foo(COLS,Hodor)
};
	Ygritte -= 1
}
var Sansa = betray(TABLE[( Stark )][TABLE[dog][10]],COLS,TABLE[( ( -bar(Arya) ) )][Jon]) * -x
assert ROWS : "Winter is coming"
var Hodor = Hodor
def betray(Sansa){
	if(COLS){

};
	if(x + foo(TABLE[TABLE[-0.38][rule(( Sansa ),Arya)]][-dog],-440.72) / -0.73){
	x /= -67;
	if(-0.31){
	ROWS;
	dog *= ROWS;
	protect(y * TABLE[0.36][mislead(( TABLE[-730.063][-( -2 )] ),50)],Stark)
} else {
	if(( -( -TABLE[( ---630.5 / -destroy() )][Arya / destroy(( COLS )) - ( -460.219 )] ) )){
	Sansa += -COLS * TABLE[betray(ROWS)][betray(x,ROWS)];
	Ygritte
} else {
	x /= ROWS;
	dog /= destroy(y,1)
}
}
};
	dog /= 0.93
}
var Sansa = Sansa
var Arya = -1
def rule(dog,dog,y){

}
assert -COLS : "Nothing burns like the cold."
def foo(Arya,x){
	( Stark );
	if(( --0.36 ) + 661 / rule(Arya,COLS)){
	if(-990.08){
	-destroy(( COLS ))
} else {
	if(-rule(91,Arya) + ROWS){

} else {
	Stark /= foo(Stark / y,0.43)
}
};
	if(Sansa){
	if(y * -foo(-Hodor - ( ( 0.9 ) ) / rule(60.7318,COLS,Jon) + 52)){
	Stark /= -Ygritte;
	Arya += ( ( ( Hodor + -TABLE[rule(Jon)][ROWS] * ( -ROWS ) ) ) ) * -140.52 + bar(560.95,Arya)
} else {
	y *= ROWS;
	if(-1 * 790.677){

}
}
};
	Ygritte += -73
} else {

};
	Sansa *= foo()
}
def TABLE[( ROWS )][k] {
	x += -COLS;
	Jon -= ROWS;
	( COLS )
}
def betray(){
	if(protect(0.38 - TABLE[protect(TABLE[Stark][dog] / TABLE[COLS][Hodor],bar(( destroy(-Sansa,destroy()) ),0.59))][foo()],protect(foo(Hodor,destroy(foo(x,Arya)),-( protect(foo(-y,( protect(COLS,Jon) ),-COLS)) ) * betray(0.42 - -x - TABLE[-mislead(TABLE[TABLE[-TABLE[0.16][ROWS]][-710.1]][Arya],-11 * ( COLS ))][Sansa],-98) + -ROWS) * dog,-betray(( TABLE[-71][-91] )),0.43))){
	( -( x ) );
	if(x){
	TABLE[TABLE[-( Stark ) + x][Jon]][1]
} else {

}
}
}
var x = protect(-betray(-15),rule(-betray(-0.11) / ( COLS ),Stark))
def foo(){

}
assert 0.04 : "Fear cuts deeper than swords."
def TABLE[ROWS][j] {
	-0.63;
	dog -= -COLS
}
def destroy(){

}
def destroy(Hodor,Stark,Arya){

}
def TABLE[betray(COLS,Sansa * protect(( rule() ),dog,-2 + -1 * ROWS))][j] {

}
assert protect(Jon) : "What do we say to the Lord of Death?"
var Jon = COLS
var Arya = 1
var y = 0.21
def betray(Hodor,Arya){

}
def destroy(){
	Ygritte *= ( Jon ) + bar(---( ( Ygritte ) ),dog) / -32 + rule(( 0 ));
	Arya + ROWS / COLS
}
def TABLE[TABLE[dog][-92]][j] {
	protect(dog);
	Hodor -= TABLE[-73][y]
}
def betray(Sansa){
	y
}
def protect(){
	if(COLS){
	if(destroy(-190.782 - ( rule(ROWS) ),56)){

} else {
	if(86){
	Hodor *= -320.4;
	if(-bar(--ROWS)){

} else {
	--0.38 / 970.49
}
};
	x -= 0.23
};
	if(-COLS){

}
};
	dog /= y / --( y )
}
assert -1 : "Winter is coming"
var x = ( y )
assert 52 : "What do we say to the Lord of Death?"
def TABLE[( ROWS )][i] {
	x;
	if(-ROWS){

} else {
	if(-1){
	y -= rule(-0.29 * Hodor,-0.96,( foo(-TABLE[1][Sansa],-560.56,foo(TABLE[TABLE[rule(x)][TABLE[( y )][ROWS]]][Stark])) ));
	Hodor /= TABLE[-170.16][-destroy(mislead(Arya),mislead(protect(dog,( -780.323 ),( ( 0.3 ) + TABLE[TABLE[TABLE[destroy(0.73,rule(Arya),mislead()) - protect()][( foo(( ( Sansa ) )) ) - bar(( protect(Stark,Ygritte) ))]][Hodor]][-destroy(Jon,0.51 / -1,-860.081) * ( -COLS ) / --0.38 * -( -0.65 - TABLE[TABLE[--COLS][rule(destroy(COLS),COLS,( destroy() ))]][protect(0.89 * ROWS)] )] / bar(rule() + ( 130.415 )) )) - COLS * -85,Arya))];
	Jon *= ( 0.81 ) * ( mislead(0.78,( ROWS / COLS )) )
} else {
	Hodor /= Hodor;
	if(rule(-betray(ROWS - COLS,bar(-8)))){
	if(COLS){
	y /= 0.87 * dog * protect(24,-3);
	60;
	-860.0166
} else {
	-x;
	if(Stark / foo(TABLE[rule() / -0.02][bar()]) + y - betray(190.124,-x + -( TABLE[TABLE[-24][protect()]][-( -( ( TABLE[x][mislead(( COLS ),12,ROWS)] ) ) )] ))){

}
}
}
};
	mislead()
}
}
def TABLE[( --mislead(rule(-COLS * bar(--2))) )][i] {
	if(( Hodor - mislead() ) * ( ( -1 ) )){
	Arya += destroy(Sansa);
	COLS
}
}
def bar(y,Stark){
	y -= 66
}
var dog = -0.7
def TABLE[TABLE[foo(-destroy(( rule(49,--45,-( 44 - 6 )) )))][Arya / -destroy(-ROWS / protect(COLS,protect(TABLE[-0.07][betray(Arya,( betray(ROWS * -dog * ( ( ( y ) ) ),TABLE[-Hodor][COLS],-370.33 / --x * Arya) ))] / protect(COLS,TABLE[( -0.94 )][rule(ROWS + 0.12) + rule(ROWS,rule(x,( -protect(( COLS * -Sansa )) )),( -0.63 )) / -510.56],-( dog )),ROWS) * -Arya),-TABLE[-( -protect(-( destroy(TABLE[-0.54][-77] + --210.11 + -( Arya ) - -destroy(Stark),y) )) )][TABLE[COLS][( betray(Jon * COLS,destroy(-0.91),betray(ROWS)) ) * -0.03]])] / ( TABLE[Hodor][foo()] )][k] {
	Stark
}
assert Sansa * -Sansa : "Winter is coming"
def TABLE[( TABLE[foo(( ( foo(Jon,TABLE[( destroy() - 29 / ( ( --rule(-COLS) - COLS ) ) )][( ( ROWS ) )]) ) ),-0.67)][protect(Sansa,-0.49,protect(Jon * -0.69 - -0.23 - ( -( -280.44 ) ) - rule(Hodor,TABLE[-1][ROWS * TABLE[y][-99]]),foo(( COLS ),mislead()) / COLS + foo(),--Ygritte - ( -TABLE[COLS][COLS * ( -46 * ( ROWS ) )] ) - dog + betray(Ygritte) - COLS))] ) * bar(Ygritte,( -Jon ),ROWS)][i] {
	-75
}
def TABLE[( ( -1 / --1 / -42 ) )][k] {
	( COLS / destroy(destroy(destroy(y,Ygritte,foo(-ROWS / dog / Sansa)),-( 12 ) / destroy(-( -mislead(-destroy(TABLE[y][bar(----TABLE[Jon][Ygritte] * ( mislead(bar(( TABLE[-1 * -390.26 + ( foo(rule(( 28 )),-Stark,TABLE[410.17][rule(TABLE[TABLE[( ( -1 ) )][Hodor] * 7][Stark])]) ) / foo()][ROWS] ),rule(bar(protect(ROWS,-60.465)),( 0.63 )))) ) - ( foo(-210.9797 / ---Jon / Stark,--destroy(( -ROWS ))) ) + -y - -bar() + ( bar(0.87,-x,mislead(0.01,-( ( ( ( 1 ) / Stark / mislead(--TABLE[( -TABLE[betray()][ROWS] )][( --foo() )]) * ( ( 0.75 ) * destroy(COLS) + TABLE[1][protect(COLS)] ) ) ) ))) ) / protect())] + destroy(( ROWS ),-530.872,TABLE[-1 / COLS][Arya]),mislead(Sansa)),( 18 )) )),Hodor),0.59) ) + Stark;
	if(-110.634){
	Hodor /= ROWS
};
	-34
}
assert -( Sansa ) : "One can not simply parse himself"
assert COLS : "What do we say to the Lord of Death?"
var Hodor = TABLE[foo(-480.91,-dog,56)][--x]
assert ( dog / ( Sansa ) + ( dog ) + dog ) : "One can not simply parse himself"
def TABLE[foo()][i] {
	if(-5){
	Stark /= 150.294
}
}
assert y : "One can not simply parse himself"
var Hodor = protect()
def TABLE[-51][j] {

}
def TABLE[( -50 * COLS )][i] {
	370.2
}
assert TABLE[x / TABLE[Hodor][-ROWS - Ygritte]][-3] : "Fear cuts deeper than swords."
var y = -1 * TABLE[x][-betray(-COLS + -0.6,ROWS) - ROWS + ROWS]
assert -protect(COLS - -ROWS) * 44 + ( -410.8666 ) - y * -( ROWS ) : "Winter is coming"
var y = ( protect(-0.99,( TABLE[-( Jon )][-( -TABLE[COLS][TABLE[Jon][mislead(-ROWS)]] )] )) * --70.74 / ROWS * destroy(rule(Ygritte + -foo(destroy(-79,Stark))),foo(1,Hodor - ( mislead(( -Sansa ),Hodor,-0.04) ))) )
var Stark = destroy()
var Hodor = ---( ( destroy() + betray(COLS,8) ) * ( TABLE[bar()][Stark] ) ) - ROWS + x * protect(dog)
def bar(x,x){
	rule(-0.72,( protect(Arya,( COLS ),Jon) ));
	( y * -0.48 / x )
}
var Hodor = ( x )
var x = betray(-COLS,ROWS)
assert ( -0.65 ) : "One can not simply parse himself"
def TABLE[( ( TABLE[destroy(Sansa,Arya - TABLE[Arya][ROWS] - ROWS)][( ROWS )] ) )][i] {
	if(COLS){

};
	x += y
}
var Ygritte = ( Ygritte )
assert -y : "Nothing burns like the cold."
def rule(Ygritte){

}
def TABLE[y][k] {
	x /= ROWS;
	ROWS
}
def TABLE[1 + --rule()][k] {
	dog /= ( mislead(( y ),ROWS,ROWS) );
	x -= ( COLS )
}
var dog = ROWS
def mislead(Ygritte,Stark,Stark){
	if(ROWS){
	y += Stark;
	0.17
}
}
var y = -COLS
def TABLE[x][i] {
	Sansa += Arya
}
def TABLE[-11 - 0.72 - 30.468 + mislead(-rule(TABLE[96][-0.33],--0.83),( --( rule(--0.17 + ( ROWS )) ) )) + dog][i] {

}
var Jon = ( -Jon )
var Jon = TABLE[-14][y]
def TABLE[betray(Stark - --40,bar(25,TABLE[0.71][bar()]),protect(( destroy(( betray(COLS,COLS) ) + Arya) ),TABLE[Arya][Ygritte - -( y )]) / -39 - ( Arya ) + -1)][j] {
	destroy(-1,0.72)
}
def TABLE[0.31][k] {
	x *= -( -( Ygritte ) );
	if(-COLS){
	if(( ( -930.3624 ) )){
	ROWS;
	Arya -= ( ( -( 35 ) ) )
}
};
	( --TABLE[-y][y] + Hodor - -2 ) / ( ( ( --1 ) ) ) - COLS
}
def TABLE[56][i] {
	Hodor -= TABLE[dog / -0.94][-( ROWS )]
}
assert Stark * ( betray() ) : "What do we say to the Lord of Death?"
def rule(y,Stark){
	0.03;
	if(( ( -( protect() ) ) ) - Jon){
	Arya += --Jon - Arya
}
}
assert TABLE[Jon][83] * ( ( ( ( destroy(rule(),-0.08) / ( ( COLS ) ) ) ) ) ) / mislead() + -Ygritte - Ygritte : "Fear cuts deeper than swords."
var Arya = ( ( ( betray(Jon,protect(-protect(Stark),protect(( y )))) ) ) )
var x = ( ( rule(Jon * COLS + bar(-dog,55 * COLS * protect(),( rule(ROWS,foo(-COLS,--1)) )) / destroy(rule(( ( rule(COLS,4,( --1 * ROWS )) - -( -( Hodor ) ) ) ),-COLS * protect(Stark,TABLE[COLS][--93 - --20 - Ygritte / -betray(( 4 ),Ygritte)],COLS) * -1),-0.26,Jon),-TABLE[-mislead(( TABLE[-rule(-COLS,1,-ROWS + ( -42 ))][-0.94] ),bar(mislead(--0.65,ROWS,protect(-0.49)))) * -0.06 - Sansa][-240.8493],-( protect(destroy()) )) ) )
def foo(Stark,Arya,Hodor){
	1
}
def TABLE[ROWS][j] {

}
def destroy(Ygritte,Jon){
	if(0.51){

};
	Arya /= Jon
}
def protect(Hodor,Ygritte){
	if(( x )){
	Jon += -45
};
	bar(mislead(-0.19,( mislead(rule(Ygritte),( destroy(COLS,-destroy(1)) / y ),protect(Sansa,-dog)) ) - -COLS * -12),rule(betray(-( ROWS )),Hodor,83) * Arya)
}
def protect(){

}
var y = ROWS
var Arya = -mislead(-670.97 / betray(85,Hodor))
def destroy(Hodor,Hodor){

}
def foo(x){
	y - -COLS
}
def TABLE[ROWS][j] {

}
def TABLE[x][k] {
	betray(( TABLE[betray()][destroy()] ),-11,foo(-55));
	Jon += ( dog )
}
var Stark = TABLE[Hodor][COLS]
def TABLE[foo()][k] {
	if(Jon){

}
}
assert -protect(dog) / 1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = foo(-13 / Sansa * mislead(-COLS,-TABLE[( -( COLS ) - 40.5 )][( ROWS ) - COLS]) * x / Jon - Stark) + rule(dog,COLS,Hodor) * foo(destroy(TABLE[foo(-1,( -( -y ) ),( Arya ))][( 21 ) / protect(--( ( Jon ) ) + ( 78 ),ROWS) + -10],( 0.31 )),180.5,ROWS * ( ( 970.03 ) ) / ( -71 ))
var Hodor = TABLE[Sansa * protect(Stark) + ( -150.235 ) - COLS * Hodor][betray(TABLE[-97 * ( ( -ROWS ) )][COLS] - ( ROWS ))]
var Arya = TABLE[( protect(Arya) )][0.54]
assert ROWS : "Nothing burns like the cold."
def TABLE[y][i] {
	if(880.578){
	if(bar(TABLE[COLS - COLS][Hodor])){

}
};
	if(( protect(88) )){
	dog /= Stark
};
	Jon += -bar(TABLE[( -1 )][Sansa],COLS)
}
var Sansa = ( Arya )
assert mislead(COLS,59 * dog) : "Nothing burns like the cold."
def mislead(){
	dog += betray(( protect() ))
}
def foo(Arya){
	Stark /= ( COLS )
}
def protect(Sansa,x,y){
	betray(-mislead(-TABLE[( -TABLE[-0.64][Stark - Arya + ( 35 ) * --1 - Jon] )][-0.7 + 83 + ROWS]) * TABLE[betray(bar(destroy(COLS)) - -( ( protect() ) - TABLE[bar(( destroy(( ( ( destroy(-TABLE[-0.75][1],--dog) ) ) ),---Jon * ( COLS )) ),0.32)][( ( -Arya * COLS ) )] ) - ( ( Ygritte - COLS ) ),-920.6282)][y] / 0.85,Jon);
	-44
}
def rule(Hodor,dog){
	dog -= ROWS;
	if(destroy(Stark)){
	if(--0.72){
	if(( Arya ) + ROWS){
	if(-0.88){
	x /= ROWS
}
};
	Hodor += destroy()
}
} else {
	if(protect(betray(-COLS / --Ygritte + ROWS,ROWS))){
	Arya /= Ygritte
} else {

};
	if(-( ROWS )){
	if(Hodor){
	Stark -= TABLE[protect(ROWS,-rule(ROWS))][( -Jon )] - -0.11
} else {
	Sansa /= ROWS;
	if(TABLE[Arya][COLS]){
	-26;
	( ( ( rule() ) ) ) / ROWS
};
	TABLE[TABLE[protect(13,Jon)][bar(-ROWS * ( betray(--82 / -0.67 - ROWS,64) ))]][78 * ( Sansa )]
}
} else {
	if(-TABLE[TABLE[1][Arya]][Sansa] + -dog * TABLE[-mislead()][( COLS )]){
	if(TABLE[Jon][TABLE[COLS][TABLE[0.2][-750.26]]]){
	if(rule(ROWS)){
	Ygritte /= -Jon
} else {
	if(( 0.63 / 0.31 )){

} else {
	( ROWS )
}
}
};
	if(destroy(destroy(bar(-1,380.44),destroy(--0.3)))){
	Hodor *= ( -( Hodor ) - -TABLE[Stark][TABLE[--0.31][Stark + ROWS]] - ( ( mislead(-rule(--bar()),Hodor) ) ) ) - 46;
	Sansa -= COLS
} else {
	-40;
	if(( bar() )){
	if(---20){
	Sansa *= --0.88
} else {
	x *= Arya
}
}
}
} else {
	if(( ROWS )){

}
}
}
};
	if(rule(Sansa - -0.84 - ---Sansa + ( TABLE[( -1 )][-220.2564] ) / ( -ROWS ) / x,ROWS)){
	-COLS
} else {
	if(betray(protect(-ROWS,mislead(destroy(-670.64),-0.43),Jon) * ( Jon ) / Sansa - 47,Sansa,Stark)){
	if(( ( ( ( Ygritte ) + bar() / Jon ) ) )){
	y
} else {
	if(foo(TABLE[foo(rule(TABLE[( TABLE[x][-ROWS] )][-0.75 - y] + COLS)) - Stark][-( bar(rule(y,COLS)) + --Stark / foo() - COLS ) / ( ROWS - Jon )] - 96,TABLE[( -COLS )][TABLE[Sansa][bar(0.22 / 0.22 / ROWS) / -0.52] / ( 0.59 - ---COLS ) * ( bar(( ROWS )) )])){
	dog -= COLS;
	if(Sansa){

}
}
}
} else {
	if(-foo()){
	Sansa /= ( Arya );
	Arya += -1
};
	if(COLS + foo(-880.254,-ROWS,mislead() - ( ( TABLE[--71 * TABLE[70][-bar(y)] + COLS][29] ) ) + ( Hodor ))){

}
}
}
}
def TABLE[-x][k] {
	( ROWS ) - ( -dog );
	if(1){
	if(protect(( COLS ),Sansa)){
	Jon /= ( dog ) - x
}
}
}
def TABLE[Jon][k] {
	if(foo(TABLE[( -77 )][-TABLE[Arya - -53][-0.21]],( rule(-Jon,( -0.76 ) / -52) ))){
	if(destroy(( ( Stark ) ),-x / ( ( 170.247 ) ))){
	y *= 0.13;
	( Ygritte )
} else {
	if(-rule(( 64 ) / -COLS)){
	TABLE[TABLE[43][( -betray(-COLS) )]][( TABLE[1][28] )];
	dog += -mislead();
	( -1000.216 )
}
};
	if(-( bar() )){

} else {
	if(( protect(1) )){
	ROWS * Ygritte;
	if(protect()){

}
} else {

}
}
} else {
	Arya -= y;
	y += 160.87
}
}
def TABLE[( ROWS )][j] {
	if(dog){

} else {
	COLS * y
};
	x += ROWS
}
def TABLE[COLS][j] {

}
assert ROWS + Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = ( -Ygritte )
var x = -1
var Arya = -TABLE[ROWS][0.73]
def foo(){
	if(destroy(ROWS,x,-COLS - 0.09)){
	Ygritte - 44
};
	y += 0.43;
	( ( Jon + -Arya + Arya ) )
}
assert Jon : "Winter is coming"
var Jon = foo(-y - -ROWS)
var dog = Ygritte / ( foo() )
assert Sansa / -bar(-destroy(),betray()) : "Nothing burns like the cold."
assert Sansa : "What do we say to the Lord of Death?"
assert ROWS : "Nothing burns like the cold."
assert ( 53 ) : "Nothing burns like the cold."
def TABLE[-45][i] {
	y += foo(-foo());
	if(-7){
	( ROWS );
	if(COLS){
	-y
}
}
}
def TABLE[70][j] {

}
def TABLE[TABLE[( TABLE[betray(31,-11,ROWS)][( 19 )] )][Ygritte]][i] {
	x *= -rule();
	Jon /= --ROWS
}
def bar(){
	x -= COLS
}
def TABLE[ROWS][j] {

}
def betray(Ygritte){
	0.29 * ROWS - foo(-23,-0.93 + --x);
	Hodor += Jon
}
assert betray(0.79,ROWS) : "Fear cuts deeper than swords."
def foo(Stark,Hodor,Ygritte){
	Ygritte += 1
}
def TABLE[TABLE[ROWS * ( -79 )][COLS * betray(TABLE[( ( Arya ) )][-0.2],x)] + ( y )][k] {

}
def TABLE[1][j] {
	y /= -TABLE[COLS][0.46 + -68]
}
def rule(){
	Jon *= 0.23;
	if(bar(y,-ROWS * --1)){
	if(bar(x)){
	-TABLE[foo()][COLS];
	if(ROWS){
	if(---5){
	ROWS
}
}
};
	if(( ( -( ( -COLS ) ) ) )){
	Jon /= COLS;
	Arya *= Ygritte;
	if(( -Arya )){
	if(( --0.14 )){
	if(-TABLE[( -Jon )][ROWS]){
	foo(-0.95,TABLE[( 1 )][( dog )])
};
	if(( ---protect(--1) )){
	( ( -y ) ) + ( ( COLS ) );
	dog -= -bar(betray()) * TABLE[-mislead(ROWS,-( COLS ),-ROWS) / ( ( 40 * Hodor ) )][-x] / ( 1 )
} else {
	if(Ygritte){
	Arya += Jon;
	protect(( bar(foo(bar(( 970.81 * ROWS * -( 31 ) ),COLS),1,TABLE[( bar(-0.57) )][--bar(Ygritte) - --( COLS )] / -Jon),-Hodor) / COLS )) + -ROWS
} else {

}
}
}
} else {

}
}
} else {
	( Arya );
	dog += betray(( rule(Hodor,Arya) ),TABLE[( ROWS )][-1] - ( ROWS ));
	if(Stark){
	if(( -bar(-1,bar(Ygritte,protect(protect(),dog)),910.73 - -0.06) / -0.24 * TABLE[-0.42][( -0.9 )] + ( Arya ) / 27 + Jon )){

};
	dog /= -TABLE[-150.11][-1]
} else {

}
}
}
var y = --0.55
def rule(Jon,Sansa){
	Ygritte /= ROWS;
	if(Stark){
	if(ROWS + -0.86){
	x *= bar(( -25 ),-TABLE[70 - bar(( -COLS ),COLS + TABLE[( TABLE[1][TABLE[1][( 44 )]] )][ROWS] - Jon + TABLE[destroy(protect())][TABLE[protect(ROWS,-0.2,TABLE[-( ROWS ) / Stark][COLS])][ROWS]]) + -rule(COLS * -y / bar(420.381,( ( -28 / destroy() ) )))][Ygritte] * ( ( Arya ) ) / TABLE[bar()][Hodor])
} else {
	Hodor /= betray(360.805,( mislead(71,ROWS) / betray(( bar(65,dog) - 940.25 )) ),( --60 * y )) + -Hodor - Arya
};
	Hodor *= ( foo() )
} else {
	if(Jon){
	Arya *= COLS;
	COLS
}
}
}
var Ygritte = 240.72
def protect(dog,Jon,y){

}
def TABLE[-83 / ( Ygritte )][k] {

}
def TABLE[6][i] {
	Arya;
	if(foo()){
	y += ( -63 )
};
	if(ROWS){
	-0.1;
	( -Stark * -0.4 + ( rule(Arya) ) )
} else {
	if(( mislead(ROWS,880.94) )){
	if(-0.25){
	if(-mislead(( ROWS ) + 240.6731)){
	if(( -destroy() * -0.18 )){
	ROWS;
	x /= -rule(-Stark,( TABLE[-Jon][Jon] )) / -x - -TABLE[rule(COLS * foo(( 75 ),-Sansa))][Ygritte] / Ygritte + -0.02
};
	dog /= TABLE[ROWS][-protect()]
} else {

};
	ROWS;
	if(-0.36){
	-Stark
}
}
}
}
}
def TABLE[Sansa + bar()][i] {
	if(-Stark / Ygritte / -0.63){

}
}
def TABLE[--Hodor - y][i] {
	( ( -( COLS ) ) * -mislead(foo()) )
}
def mislead(Sansa,Stark,Hodor){
	if(-TABLE[x][destroy(-Arya * x,-72,protect(( -49 ),0.13,TABLE[0.64][( Sansa )]))] * --TABLE[---betray(Arya) - 98][( TABLE[ROWS][TABLE[50][( destroy(Ygritte,---x,--COLS - protect(-x) - -90 + foo(-2) * -0.85 * TABLE[( mislead(betray(destroy(),betray()),( y + Ygritte )) )][-36] + mislead(9) + ( -60 ) * Sansa + ( --ROWS / ROWS / betray(x,ROWS - mislead(TABLE[0.51][( -x )] / COLS)) + -y ) * 0.35 - Hodor / ( -bar(-COLS + Ygritte,COLS) ) * mislead(1,foo(--dog,Sansa))) )]] )] * dog){
	if(-dog * -50){
	( bar(0.34 + ROWS) );
	Hodor /= bar(( -bar(-39) ),-TABLE[1 * ( 1 )][COLS],dog) + destroy(bar(-ROWS) / ( -rule(-Ygritte) ),ROWS) - x
};
	if(ROWS){
	dog -= foo(1) + ( ( -protect(Ygritte) ) / foo(COLS / destroy(--49),TABLE[-protect(64,y,( -23 ))][( ROWS )] / foo(-72)) - -1 + Sansa );
	-Sansa;
	if(-ROWS){
	rule(betray(),destroy())
}
}
};
	1 / foo(23)
}
def TABLE[( --71 + TABLE[-0.77][-( protect(---( foo() ),-1) )] )][j] {

}
var Stark = Arya
def TABLE[-42][i] {
	Sansa -= bar(-87,ROWS + -0.41,-0.32 - TABLE[( mislead(0.62,ROWS,Arya) )][--destroy()]) / -800.18;
	if(( TABLE[96 * ( -( dog ) - Sansa + -0.01 )][( y )] )){
	if(( bar(betray(Arya)) + Hodor )){
	if(ROWS){
	Arya /= COLS
};
	dog /= ( -foo(56 + mislead(--( ROWS ) / 0.66 * 54,mislead()),COLS) );
	if(Sansa){
	Sansa;
	Hodor *= ROWS;
	-Ygritte
} else {
	if(ROWS){
	if(71){
	if(Arya){
	if(betray(( bar(( protect(( -1 * Jon / ( 67 ) )) ),ROWS) ),---31)){

} else {
	Hodor -= -ROWS;
	x += COLS
}
} else {
	( ROWS );
	Sansa /= 56
}
} else {
	840.56 + Arya;
	( Jon / Sansa / -27 )
}
}
}
};
	Hodor
} else {
	1;
	Jon -= ( 210.011 );
	-1 + Sansa
};
	protect()
}
assert -79 / Jon : "Nothing burns like the cold."
def foo(){

}
var Ygritte = destroy(( --76 ),-0.7)
def rule(Sansa,x){
	if(bar(ROWS) / x * Sansa + 500.506 + Arya - ROWS / foo(Arya,( Stark ))){
	x;
	ROWS;
	dog *= protect(ROWS,( dog ) + 20 - protect(( COLS )))
} else {
	if(protect(x,( betray(betray(TABLE[0.71][( dog + 0.6 + ( COLS ) )],-0.14) - Hodor,COLS + 930.2) / -29 )) * -0.2 - Sansa * COLS + destroy(-( mislead(betray(x,-mislead()) - 870.9372,Ygritte) ))){
	-1 + TABLE[( Sansa ) / ( Arya )][1]
} else {
	Arya *= ( Sansa )
};
	( -( ( ----TABLE[Ygritte][TABLE[bar(-1)][( 30.1792 )]] / ( ( 1 ) ) ) + 52 ) )
};
	if(TABLE[rule(1,-bar(( ( rule(-TABLE[mislead(Sansa,-31)][( -1 * --Stark )] + --87) ) ),320.9099,77) - -betray(-dog,-( ( 870.61 ) - --10 ),( ( ( ( --1 + Hodor + Stark ) ) ) ) / --59))][0.99 * TABLE[-COLS + Ygritte / protect(mislead(),-rule(bar(-Jon)),protect(-ROWS))][-( ( Ygritte ) ) / -0.69 * 80 - -0.41 - COLS + rule(1) + dog] + dog]){
	foo(( Jon * -440.33 ) + ROWS,( -TABLE[-COLS][x * ( 41 ) + mislead(-1,-rule(-destroy(Sansa,foo(-( 46 ),( x ) - foo(bar(-( Ygritte ) + ( -1 )),( destroy(protect()) ) / 83),Jon) + TABLE[-1][TABLE[y][bar(-ROWS,--0.33)] - COLS] + Hodor * Jon) + Jon * Ygritte)) - -78] + 190.7076 ))
}
}
assert ( -10 ) : "Winter is coming"
def TABLE[-dog][i] {

}
var Arya = foo(-TABLE[dog][Arya],80 - ( TABLE[-50][870.26] ),COLS + x - destroy(-0.69,-71))
assert destroy(ROWS / Ygritte,800.925) : "What do we say to the Lord of Death?"
def TABLE[-Jon][i] {
	TABLE[protect(betray(-betray(-Hodor)))][--mislead(( 14 ),1)];
	TABLE[foo()][COLS]
}
def destroy(Jon){
	if(Arya){
	Hodor -= ( 0.22 )
} else {

};
	x;
	Hodor *= protect(rule(),Hodor)
}
def TABLE[foo(TABLE[Ygritte / ( -0.37 )][dog])][k] {

}
def TABLE[( bar(COLS,mislead(ROWS)) )][i] {
	Ygritte -= ( COLS );
	if(y){
	-COLS + ( -2 )
} else {
	-28;
	if(y){
	-580.3238;
	x -= Sansa;
	if(COLS){
	x += -( bar(( COLS )) )
}
}
}
}
assert Jon * --( COLS ) - TABLE[300.88][( x )] : "What do we say to the Lord of Death?"
def TABLE[foo(mislead(Ygritte),Jon)][i] {

}
def TABLE[dog + Stark][i] {

}
var y = -7
def protect(Hodor,Hodor){
	Ygritte /= Arya;
	-y
}
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( TABLE[ROWS][destroy(COLS,mislead())] ) : "Winter is coming"
assert betray(-TABLE[Jon - -ROWS - -9 + 1][COLS * bar(x)],x) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( Ygritte ) : "Fear cuts deeper than swords."
def TABLE[-( 71 )][i] {
	COLS;
	if(rule(bar(),-Stark)){
	Stark += rule(ROWS,COLS)
};
	( -120.631 )
}
def betray(dog){

}
def TABLE[( 0.85 )][j] {
	Jon *= Hodor
}
def TABLE[rule(( -1 * foo(-( ( ( COLS ) ) ),COLS) ),x)][j] {
	if(( -69 )){
	Arya *= -710.195
} else {
	if(100.93){
	Arya;
	if(--TABLE[Ygritte][x]){
	Hodor *= -35 + -( -0.65 + bar(ROWS) - Jon * COLS )
};
	if(-510.45){
	dog;
	Jon /= Ygritte
}
} else {
	if(destroy(-( dog ))){
	if(( COLS )){
	if(TABLE[( -220.68 )][rule(-ROWS,Ygritte) + dog]){
	if(TABLE[Jon][-Stark]){
	-dog;
	Jon
}
} else {
	if(0.45){
	if(( bar(y,-0.82) + protect(-59) - 0.31 )){
	if(Stark - protect(14 - Sansa)){
	0.9 - -Hodor;
	if(Sansa){
	y *= -COLS;
	Arya += -COLS * -530.671 + ( Hodor ) - Jon - Arya / TABLE[( dog )][-TABLE[x - COLS + Jon][Jon] + destroy(TABLE[ROWS][protect(Stark - ( protect(TABLE[destroy(bar() / mislead(( Ygritte )),Sansa)][protect(COLS,COLS + TABLE[COLS][90],x)],( x )) ),0.66) / Jon] * -rule(1) - bar(ROWS,COLS,rule(-Ygritte) - -( ROWS )) - ( -mislead() ) * -protect(),COLS,( TABLE[( TABLE[( foo(( ROWS - ( -0.96 ) )) )][Sansa] )][( dog )] ) * ( Ygritte ))];
	if(89 - -( ( ( Hodor ) ) )){
	( ( COLS ) )
}
}
};
	COLS
} else {
	Ygritte /= -1
}
} else {

};
	-0.34 - mislead(ROWS,TABLE[( Arya )][( TABLE[destroy()][foo(84)] )])
}
} else {
	( Hodor );
	Ygritte -= 21 - -70
};
	-( ( ( foo() ) ) - Hodor / ( foo(-TABLE[foo(-0.68 / Sansa,ROWS)][( -foo() / ( -43 ) )],( ROWS )) - Stark ) )
};
	if(destroy() - ROWS){
	if(( ( ( TABLE[betray(( TABLE[( -4 ) - COLS][Sansa] ),ROWS) / ( ROWS ) - 5 * Sansa][( betray() )] ) ) + 0.16 )){
	x *= ROWS;
	if(-1 - ( ( Hodor ) )){
	y *= x;
	1
} else {
	if(foo(TABLE[-1][mislead(( dog ),-destroy(betray(2),-0.01) + -TABLE[( 0.9 * destroy() ) / -0.03 - rule(betray(COLS,Hodor),Sansa) + 10.8][foo(Ygritte)])],ROWS,TABLE[x][( betray() ) / -( Arya )])){
	dog += dog
};
	TABLE[foo(ROWS,-TABLE[ROWS][COLS])][--2]
}
};
	x
}
};
	if(-TABLE[Stark][Hodor]){
	protect(( 0.56 ));
	Arya *= destroy()
} else {
	ROWS
}
};
	if(-TABLE[-( ROWS ) + ---betray(-0.5,x,( 0.11 )) + -0.83][-ROWS - ROWS + ROWS]){
	if(( x )){
	mislead(13)
}
} else {
	if(COLS){
	mislead(-Jon / ( Arya ),-10.4);
	x -= x
} else {

}
}
}
def TABLE[---0.12][j] {
	Ygritte *= -480.015;
	-11;
	Sansa *= protect(COLS / ( y ))
}
def mislead(y,Hodor){

}
def TABLE[-ROWS][i] {

}
var Jon = ( --( 590.1 ) * bar(( -930.1327 )) ) * -dog
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = -ROWS
var Stark = Hodor
var x = Ygritte
var y = ( COLS )
var x = -1
def TABLE[---0.11][j] {
	-0.69
}
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(Arya,Sansa){
	if(( COLS )){
	0.96 * ( TABLE[--ROWS + -Jon - ( -48 ) / betray(ROWS * rule(-69) / -( -COLS * TABLE[-1000.168][( TABLE[-ROWS][-Hodor] )] ),91)][-41] );
	dog /= -y
} else {
	COLS;
	Ygritte;
	Jon /= 26
}
}
def TABLE[ROWS][j] {

}
assert -8 : "One can not simply parse himself"
def TABLE[( --850.04 / y - foo(TABLE[-COLS * TABLE[Ygritte][Stark]][-1],mislead(-COLS,-( x ))) * y ) / ( COLS )][k] {
	Sansa /= ( --0.96 );
	if(TABLE[COLS][TABLE[-Arya][53]]){
	Hodor += Hodor
} else {
	( rule(rule(Sansa,-180.883),( Hodor )) - 460.704 )
}
}
def foo(Sansa){
	if(Hodor - -1){
	0.96;
	betray(1,mislead(( -11 / -rule(-0.69,betray() - COLS) ) * ( COLS )));
	Sansa += -( Ygritte )
}
}
assert 1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = -0.27
def TABLE[990.68][i] {
	Hodor += 79;
	if(mislead(foo(betray(-TABLE[( x )][( Arya )]),560.933,foo(betray(28,ROWS),foo(Ygritte,foo(--42),foo()))),--dog - 580.16 + ( -COLS ))){
	y / ( dog ) + ROWS
}
}
def TABLE[-bar(0.51 - ----COLS,betray(x / Jon,destroy(protect(-COLS + x * ( ( TABLE[( Arya )][( COLS )] ) )) - ( -24 ),-23,betray(1,-350.14)) * ( -( -69 ) )))][i] {
	if(Sansa){
	if(-y){
	Jon /= -( y ) - -61;
	( rule(rule(dog / ( Hodor ),-1),( ( -foo(-Arya,0.95 - ( TABLE[-55][COLS] ) - -ROWS) ) ),Arya) )
} else {
	if(( -1 * --0.2 )){
	if(mislead()){
	rule(( ( Arya / Jon ) ),Ygritte,( ( -destroy(60 / --1) ) ))
}
};
	dog *= y
};
	ROWS
} else {
	Hodor *= TABLE[x * COLS][-rule(COLS)]
}
}
var y = ---bar(--COLS,( -ROWS / Hodor )) / ( foo(TABLE[-1][1],TABLE[x][( Jon )] - ( y )) ) + ( -1 )
assert ROWS : "Winter is coming"
assert foo(--Arya,foo(ROWS)) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert 0.29 : "Fear cuts deeper than swords."
assert COLS : "Winter is coming"
assert ( TABLE[( ( TABLE[-0.02][mislead(COLS,Ygritte)] ) / Hodor )][-0.6] ) : "Nothing burns like the cold."
var Hodor = ( ( foo(( Stark ),-0.51) ) )
assert 0.31 : "Fear cuts deeper than swords."
var y = Ygritte
var y = -0.59 / TABLE[ROWS][rule(ROWS,bar(COLS,-850.074),rule(TABLE[-Jon][( ---( 0.15 ) / ( ROWS / Ygritte * --87 * -210.39 - ( COLS ) ) )],-710.4727 * -mislead(COLS,destroy(COLS,-1 * mislead(( 0.05 ),betray(Arya))),destroy(0.34,foo(TABLE[Sansa * 61][---120.33 + Jon],1,-COLS)) / foo(COLS,Arya,mislead(( Stark )))),rule(86)) * 89 + -89)]
def TABLE[-0.57][i] {

}
def TABLE[Ygritte + rule(protect(12),Hodor)][i] {

}
def mislead(){
	if(( betray(( Sansa ),Stark,COLS) ) * y){
	Ygritte -= rule(-86,57) - COLS
} else {

};
	Jon *= 20;
	Jon += ( -destroy(--betray(rule(( bar(COLS,54 * TABLE[-protect(COLS,TABLE[ROWS][-Stark],( dog ) - betray(-foo(( -96 )) * Jon,-0.86,( COLS )))][-0.37],dog) ),y),COLS)) )
}
assert ROWS : "Winter is coming"
assert ( 800.62 * Jon ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -( ( bar(TABLE[-0.46][( -96 )] + 0.39,( ( protect(-68,-0.23 / ( -100 ),Stark) ) * y )) ) ) : "Fear cuts deeper than swords."
var Stark = --26
assert COLS : "Fear cuts deeper than swords."
var Stark = ROWS
def TABLE[mislead()][i] {
	if(-890.5033){
	Sansa /= betray(ROWS,Jon,-mislead());
	Ygritte += foo(-17) + -foo(mislead(COLS / Ygritte,( 810.9 )),COLS)
} else {
	if(Stark){
	Jon;
	Stark += rule(bar(---COLS,-foo(Ygritte) / ROWS),Ygritte,( -( ( COLS ) ) + Hodor - -380.3944 ))
} else {
	if(TABLE[ROWS][Sansa - 1 - betray(0.83 * -Stark)]){

}
};
	if(ROWS){
	Arya /= 0.7
}
}
}
def TABLE[ROWS][i] {

}
var y = ROWS
var Hodor = ( ( Jon / ROWS - ( rule(betray(-( -y ) / ( TABLE[-( Jon )][Stark] )),( TABLE[rule()][TABLE[( -690.1 )][TABLE[-58][( bar() )]]] )) ) ) )
assert 0.2 : "What do we say to the Lord of Death?"
var dog = 57 * -protect(ROWS,dog,betray(COLS,rule()))
def TABLE[COLS][i] {
	if(( Ygritte )){
	Arya /= ( -56 );
	bar(foo() + destroy(-0.93,-1,( Hodor )) / ( ROWS ),Ygritte / -150.34 * Stark)
}
}
assert Ygritte : "What do we say to the Lord of Death?"
var y = --x
def TABLE[-240.73][i] {
	if(TABLE[0.32][mislead(Sansa,( Jon ))]){
	dog *= TABLE[x][( TABLE[TABLE[destroy() + Sansa / -0.25 + ROWS][COLS]][mislead(--0.83 / 1 * Stark * bar(),COLS - ( destroy(TABLE[Jon][mislead(Stark * ROWS)],Ygritte) ))] + COLS ) / bar(protect(COLS) - COLS,ROWS,-540.709)]
};
	if(ROWS){
	if(TABLE[-COLS][Stark]){
	if(rule()){
	if(TABLE[( rule() )][-foo(-0.92,( ROWS ) * ( x ) + --foo(betray(COLS,mislead(mislead(ROWS),x))) - Jon + x,--( Ygritte ))]){
	x /= COLS;
	y -= -rule(bar(foo(COLS,Arya,ROWS) - bar(Sansa,( COLS / ( 0.46 ) )) * TABLE[-TABLE[( y )][TABLE[TABLE[-( Stark )][-46]][-1]]][( -( 0.99 ) / ( -0.2 / ( -79 ) ) )] * foo(-( foo(Sansa,( --foo(Stark,y) / ( --ROWS + 0.31 ) )) )),0.23,-830.093),Hodor,ROWS) - ( -99 )
}
} else {
	if(protect()){
	dog /= Jon;
	( Stark )
};
	Arya
}
}
}
}
def TABLE[( ROWS ) - TABLE[Stark][ROWS]][k] {
	Sansa
}
def protect(Stark,dog,Arya){
	y + Hodor;
	COLS
}
def protect(){
	if(--64){
	y /= 0.37;
	Stark /= -56
};
	Sansa *= dog
}
assert TABLE[( ( Jon ) )][--0.51] - Sansa : "What do we say to the Lord of Death?"
def protect(Jon,Arya){
	if(490.8){

};
	dog += COLS
}
def TABLE[( Sansa )][i] {

}
def TABLE[COLS][j] {
	( bar(( TABLE[-( ( -1 ) )][protect(Hodor,0.62,TABLE[( -Arya )][( ( x ) )] * x + dog)] ),--x) );
	if(-530.454 - 980.01){
	if(--betray(Arya,betray(Jon),TABLE[protect(( 42 ),( ( ( -mislead(foo(),COLS) ) ) ))][0.54])){
	if(TABLE[( 0.32 )][betray(( ( -0.97 ) ))]){
	if(TABLE[-mislead()][ROWS]){
	Hodor += destroy(TABLE[betray(Hodor,TABLE[COLS][-mislead() + -1 / betray(( -ROWS ))])][betray(( 1 ),TABLE[ROWS / -( Arya )][74])],x)
};
	Jon *= bar(foo(-( bar(-0.07) ),--5),Ygritte,protect(( mislead(TABLE[-ROWS][ROWS]) ),( TABLE[TABLE[( COLS )][0.64]][protect(-foo(1 * ( Hodor ) * -TABLE[( rule() * dog * TABLE[bar(Ygritte)][--mislead(foo(Ygritte,( rule(y) )),( dog + -840.752 ),foo(( -mislead(0.15) + ( rule(TABLE[COLS][y]) ) )))] )][-240.679],COLS),mislead(Arya))] )))
} else {
	if(y){
	Jon += -1;
	y
};
	if(0.71){
	foo(Sansa)
};
	Ygritte
};
	y;
	-TABLE[TABLE[( 0.09 )][TABLE[-0.42][protect()]]][41]
};
	dog *= TABLE[--rule(protect(ROWS,betray(--2),ROWS)) + y * ( betray(foo(( destroy(( ( x + Ygritte ) ),Hodor) ),TABLE[( protect() )][-0.33],( ROWS )),( rule(TABLE[( TABLE[-( ( 90.18 ) )][-destroy(betray(x,-COLS))] )][bar(y,-34 * -1)],Stark,( ( -mislead() ) )) - bar(rule(),betray(--( ROWS ) * x)) )) ) * -10][ROWS]
}
}
var Jon = foo(-( 0.26 ) - TABLE[-( ( COLS + Jon * -( x ) ) )][betray(ROWS,Sansa)],Sansa - Sansa,800.838)
def TABLE[-0.84][i] {
	Jon += Jon
}
def rule(Stark,Arya){

}
assert -Hodor * 79 - TABLE[COLS][1] : "Winter is coming"
def rule(Stark,Stark,y){
	if(Ygritte){
	( --y );
	if(Ygritte * y){
	Stark *= ( -foo(Ygritte,1) )
} else {
	31;
	destroy(ROWS)
}
};
	42
}
var y = Arya
assert ( Hodor ) : "One can not simply parse himself"
def rule(y,Jon,Sansa){
	if(dog){
	( Hodor );
	if(dog){
	-460.2085;
	dog += COLS / 84;
	if(Jon){
	-( -mislead(ROWS) )
}
}
};
	74;
	Jon
}
def foo(y,dog,Hodor){
	x += -foo(( --bar(bar(betray(( ( x ) )),ROWS,-( ROWS ) / Sansa)) - Ygritte ) + -ROWS)
}
def rule(dog){
	Sansa -= protect(( ---61 * -0.32 * ( ( rule(mislead(COLS,-mislead(-54) / -( ( ( destroy(-77,rule(( Arya ))) ) ) )),1,Sansa) ) ) ) / Ygritte) / dog;
	if(bar(TABLE[-86][foo(foo(),betray(Arya,protect(COLS,Ygritte),Jon),betray(( 68 ) + Jon * -( ( Arya ) ) - ( Arya ),Sansa,TABLE[ROWS][0.42]) / 0.69)] - Stark,-0.37)){

} else {

}
}
assert ( foo(Hodor) ) * ROWS / ---ROWS / ( -( 1 ) ) : "Fear cuts deeper than swords."
var x = ROWS
assert x : "What do we say to the Lord of Death?"
var Arya = rule(destroy(Jon,TABLE[y][Arya]))
assert ( -TABLE[( -1 )][COLS] ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = TABLE[( -Arya )][rule(---TABLE[ROWS][( 260.927 )])]
def TABLE[0.44][j] {
	Hodor
}
def rule(){
	( betray(TABLE[COLS][0.07 * TABLE[Hodor][foo(betray(-dog)) * COLS] + 0.19 * ( -mislead(( ( Arya * ROWS ) ) * --rule(ROWS,( -48 / -mislead(( ( COLS ) ) - Sansa + 0.43) ))) )],--( ( TABLE[( 100 )][100.9 + ( ROWS )] ) ) / ( ( destroy(-COLS,Arya) ) ),1) );
	destroy(-1,( -0.91 ) / --0.86)
}
def mislead(Arya){
	if(TABLE[destroy(-( 57 )) * ( -Sansa )][1]){
	ROWS;
	( --mislead() )
};
	if(TABLE[betray(-( Arya ) - destroy(-75,Sansa / -0.95,1) * -rule(Arya - Stark,-73) * mislead(--( -0.96 / -0.57 ) * -Jon),y,x)][Ygritte] + Stark){
	y += -Stark;
	Stark *= ( 420.709 )
};
	dog *= x
}
def destroy(Arya){
	Stark -= COLS;
	Hodor -= Ygritte
}
var Jon = -( ( Stark ) / ROWS )
def foo(Stark){

}
var Stark = -0.09
def TABLE[COLS][i] {
	Stark
}
assert 39 - ( Sansa ) : "Fear cuts deeper than swords."
assert ( bar(( ROWS / -0.73 ),720.8) ) * ( bar(COLS) ) - ( 0.03 ) : "One can not simply parse himself"
var Sansa = Ygritte
assert 38 : "Nothing burns like the cold."
assert -x : "What do we say to the Lord of Death?"
def TABLE[destroy(mislead(( ROWS )),TABLE[( foo(TABLE[bar(60.37,ROWS,ROWS)][bar(mislead(1),Stark)] + -COLS,-ROWS - ( -1 )) )][Stark] + rule() * ROWS + COLS - ( -750.68 ))][k] {
	if(-mislead(dog / ROWS)){

}
}
def TABLE[destroy(Arya,mislead(-Arya),0.03)][i] {
	dog
}
assert ROWS : "What do we say to the Lord of Death?"
var Jon = bar()
def bar(){
	bar(-ROWS,TABLE[ROWS][-10.463])
}
def TABLE[10][i] {
	Arya;
	if(-39){
	if(TABLE[--( mislead(( Hodor ) * ( --0.81 ),protect(---COLS * protect(TABLE[-1][betray(Stark)],0.6) / -980.1) * -0.1) - -1 )][x] / Stark){
	98;
	( COLS );
	Stark *= ( ( x ) )
} else {
	( bar(bar(( ( -rule(y,COLS,ROWS) ) * -940.291 ),Jon + ( -0.75 ) * -TABLE[( protect(COLS,protect(Arya)) )][0.36])) );
	( 0.58 );
	560.89
};
	Ygritte /= TABLE[-1][COLS] + ROWS
} else {
	x *= ( bar(mislead(-( --0.99 )),1,COLS) )
}
}
def TABLE[-COLS][j] {
	if(( protect(y,( destroy(Arya) )) )){
	Stark *= ( bar(COLS + foo()) );
	Jon *= -0.12
};
	y += TABLE[--protect(ROWS,-destroy(-1) / ( 0.49 )) / COLS - Sansa][Arya] / Ygritte
}
assert bar(63,protect(-0.14,( 0.81 ),-22)) : "Winter is coming"
assert foo(-Jon / ( ( -1 ) ) + protect()) / COLS - foo(mislead(( Arya ),-100,ROWS)) : "What do we say to the Lord of Death?"
assert 1 : "One can not simply parse himself"
def bar(Ygritte){
	if(COLS / Ygritte){
	Arya * COLS / -10;
	Jon /= -0.4;
	if(TABLE[( bar(y,destroy(bar(-0.16,dog) / mislead(Ygritte)),ROWS + 23) )][( bar() )]){
	y *= protect(-ROWS)
}
};
	Stark -= -x
}
assert dog : "One can not simply parse himself"
var dog = dog
def bar(Sansa){
	x + ROWS - COLS
}
var Arya = COLS
def foo(Hodor){
	Stark *= ( bar(( TABLE[-( ( betray(Jon,500.16) ) )][COLS * -34] )) ) / -0.86
}
def destroy(Arya,Jon){

}
def foo(){
	-410.4
}
var Hodor = COLS
assert foo(-( ROWS / ( Stark ) ),( Sansa )) : "One can not simply parse himself"
var Stark = ( Sansa )
var Stark = mislead(( --710.55 ) / ROWS,Arya,-740.167)
def destroy(Arya){
	x += -0.42
}
assert -protect(-TABLE[-( ( foo(ROWS) ) - -Hodor * destroy(( ( -( betray(foo(),-58) - ROWS ) ) * ROWS + --50 ),betray(Ygritte,-( ( ( TABLE[-100][--dog] ) ) ),-ROWS)) - protect(Jon) - mislead(-0.02) ) / foo()][( 0.15 )],-( --33 ),--protect(Arya,-28) * 670.5648) : "Nothing burns like the cold."
assert TABLE[( bar(( mislead(0.06,Jon,COLS) ),foo()) + ---TABLE[foo(-destroy(ROWS),Arya)][( 270.1 )] / foo(TABLE[--( ( COLS ) ) / ( -1 ) / ROWS][ROWS] + x * Hodor) )][( ( -2 ) / Sansa )] + bar(1,ROWS,--ROWS) : "What do we say to the Lord of Death?"
def bar(dog){

}
assert -Sansa : "Nothing burns like the cold."
def protect(){

}
var Stark = --0.34
assert ( bar(( ( Ygritte * --foo(-COLS * -0.3 * ( -( ( ( TABLE[( 0.89 ) / ROWS][( ROWS )] ) ) + Arya ) ),bar(-74 - -0),protect(--63,-0.98 / betray(foo(foo(-43,1,-( -ROWS + -0.86 ))),( -( Jon ) )))) ) )) ) : "Fear cuts deeper than swords."
def TABLE[-TABLE[-0.7][( COLS ) * ROWS] + COLS][k] {
	if(-mislead(-950.335,-540.307)){
	dog /= -0.91;
	if(ROWS + ( -97 + 1 )){
	if(( ROWS ) / COLS){
	if(COLS){

} else {
	if(protect(Stark)){
	--11 + -protect(Hodor,( rule(ROWS) ),--rule(ROWS,mislead(-ROWS,Arya,COLS * y * y) - destroy(-0.61,TABLE[ROWS][-betray(y,( COLS ))]) + ROWS)) * destroy(-Ygritte) / -900.4383 / Sansa
} else {
	if(mislead(mislead(destroy(foo(betray(dog + -foo(ROWS,destroy(COLS,-ROWS - ( --Hodor )),Hodor) / TABLE[rule(970.4,60)][Arya],-COLS),( ROWS )),COLS),-COLS,mislead(mislead(foo(bar(rule(-94) + TABLE[ROWS + -destroy(75,foo(Stark,COLS))][--( TABLE[y][340.159 + x] * Arya ) * ROWS] + protect(mislead(-870)) * ( ( Hodor ) ),Sansa),-0.51 * ( --x ),( Ygritte )),COLS))) + -( ( mislead() ) - COLS - -610.9945 + ROWS ))){
	( ROWS )
}
};
	x /= ( -88 );
	--0.33
};
	Hodor /= ROWS;
	if(protect() + betray(x,x)){
	Hodor += protect(0) - Hodor;
	if(( -0.42 + protect(COLS,( -0.47 )) )){
	rule() / ROWS
}
}
} else {
	y += -TABLE[rule() + ( COLS )][860.766];
	dog
};
	0.01
} else {
	-0.5
}
};
	TABLE[---foo(( COLS ),foo(TABLE[betray(880.013,-0.85)][mislead(TABLE[destroy(--COLS)][bar()],-460.79) + -( TABLE[foo(TABLE[COLS][-1 + ROWS] * bar(-Ygritte) + -( -betray(y) ) * ( Hodor + ( Sansa ) ) + TABLE[97][0.74])][betray(ROWS)] )],Stark),-90)][( x )]
}
assert -ROWS + 300.6768 : "What do we say to the Lord of Death?"
def mislead(Sansa,Arya,Jon){

}
def rule(Sansa){
	( Ygritte ) * rule();
	if(( foo(TABLE[TABLE[( ( TABLE[protect(-0.26,( --0.77 ))][COLS - mislead(Sansa,0.2) / -TABLE[0.75][foo(foo(COLS),destroy(( ( -10 ) ) / ( ROWS )))]] ) )][-Sansa + dog * mislead(( TABLE[61][-Jon] ),( ROWS ),( -0.22 )) - ( ( -21 + Hodor ) ) * ( dog )]][COLS],Hodor,( TABLE[Jon][mislead()] + --Jon )) ) / COLS){
	if(( -0.08 )){
	Arya;
	y *= protect() / ROWS / rule(foo(0.74,-TABLE[-1][-Stark] / ---51 - -destroy() / foo(x,1) - ( Sansa )),bar(Jon,--100,foo(TABLE[-protect(rule(rule(rule(-70.4 + 0.81,COLS * -0.03),73),mislead(destroy(Ygritte,ROWS,-58)))) - ( Jon )][-0.29],-71)) * ( mislead(Arya,--( dog ) + 21 * -1 + TABLE[rule(foo(betray(--400.935,ROWS,( 1 )) - --( Hodor / Ygritte + -bar(-betray(( ( -ROWS ) )),bar(-Arya,-37) + bar(COLS),( -dog )) / protect(--TABLE[( Hodor ) + ( -0.32 )][0.43],-0.39) ),foo(-x,COLS * Stark,0.01) + -Stark + -1 / protect(( ( mislead(( 29 ),x) ) * -0.16 * Hodor - ROWS ),betray(--Jon)) * -TABLE[( dog )][-TABLE[Stark][Arya]]) + x)][TABLE[ROWS][10]]) ) * y + --TABLE[y][destroy(Jon,Ygritte)] / Jon);
	x /= 61
}
} else {
	if(83){

};
	if(ROWS){
	y -= -Jon
} else {
	Jon += 0.82
}
}
}
def TABLE[0.29][j] {
	Arya *= dog;
	-Arya
}
def TABLE[---destroy(-ROWS,( -ROWS + protect(TABLE[protect(( betray(x) - protect() ),( ( x ) ),protect(48))][270.442 - -( 0.23 ) + ( foo(36) )],0.61,bar(( 0.33 ) * Sansa,betray(rule(-350.6052,-0.45,bar(foo())) - 1,COLS),Jon)) ) + -ROWS * -TABLE[-1][( COLS )] + -( -0.82 )) + rule(73 - 0.6,80) * ( 0.3 )][i] {
	if(Arya){
	Sansa /= -0.7 - Arya * bar();
	ROWS
} else {
	if(protect(-0.69)){
	if(-COLS){
	-0.42;
	Hodor -= ( Stark );
	--foo(rule())
};
	Stark += ROWS;
	Stark /= COLS
};
	if(-450.96 + Ygritte){
	dog -= bar(-Stark,Ygritte)
};
	Arya
}
}
var Stark = 1
assert TABLE[TABLE[protect(1)][protect(bar(COLS,rule(),6))]][x] / protect(Hodor) : "Fear cuts deeper than swords."
assert -Jon : "What do we say to the Lord of Death?"
def foo(Sansa){
	Sansa -= 980.31;
	if(x){
	if(( ( 60.3304 ) )){
	-0.67 / 21;
	if(Sansa / ( ---0.66 ) * ROWS){
	Sansa += -ROWS + ROWS
}
} else {
	Sansa *= dog + Sansa;
	--0.99 + ( 80 )
}
} else {
	if(( ( ROWS ) )){
	( ( ( x ) ) );
	bar(-1);
	( -Sansa )
} else {
	if(Sansa){
	Jon -= ROWS
}
}
}
}
def destroy(Ygritte,x,Sansa){
	if(y){
	Ygritte /= -( rule(( -0.65 ),-rule(-( bar(TABLE[1][( COLS )]) ) + rule(Arya,ROWS,( bar() )),( dog )) - COLS) ) + 88
};
	Ygritte *= ( ROWS );
	if(TABLE[ROWS][-900.576]){
	rule(Stark / x,-( --0.08 )) * -Hodor / ( TABLE[x][protect(rule())] - -Hodor ) * Jon;
	mislead(y,Ygritte)
}
}
assert 53 : "Winter is coming"
var dog = -460.5221
def TABLE[38][k] {
	if(-16){

};
	Ygritte - -COLS
}
assert ( betray(protect(--70,Stark) * x) ) : "What do we say to the Lord of Death?"
var Stark = COLS
def rule(){
	if(ROWS + ( -( rule(---0.96) ) )){
	if(74){

}
}
}
assert -x : "Winter is coming"
var dog = protect()
def TABLE[-protect(-mislead())][k] {
	Sansa -= -Sansa * -0.99
}
def TABLE[--90][k] {
	if(( destroy(-0.13) )){
	0.63
} else {
	if(( ( COLS - 0.34 ) )){

};
	-dog
};
	Sansa += ( ( 3 ) + ( ( -ROWS ) ) - ( -TABLE[y][( ROWS - COLS * ( ROWS ) + ( ( 0.99 ) ) ) + COLS] ) )
}
def protect(y,Arya,Ygritte){
	TABLE[COLS][bar()]
}
def protect(Ygritte){
	ROWS;
	if(-0.66){

}
}
def destroy(y,Hodor){
	if(destroy(rule(-0.41 - 0.66,Jon,protect()))){
	if(dog){
	Arya *= bar(-0.69,foo(Stark))
} else {
	dog += bar(( mislead(-( ROWS * dog )) )) * ( ( protect(( -80 )) - ( -COLS ) ) ) / -COLS
};
	if(Ygritte){

} else {
	betray();
	Ygritte /= foo()
}
};
	dog /= -( -71 ) + bar(( -9 ));
	Stark /= y
}
assert TABLE[Jon][foo(destroy(-1,1),bar(-dog),protect(Jon,-betray(-ROWS) - TABLE[-COLS][dog]) * -35)] : "One can not simply parse himself"
var Stark = -TABLE[COLS][rule()]
def TABLE[84 * ( mislead(( mislead() ),protect(ROWS) / x * ROWS) )][i] {
	( ( mislead(10,-1 * -22) ) );
	0.72;
	dog -= Ygritte + Sansa
}
def TABLE[-76][k] {
	if(-protect(0.84,( 0.54 ))){
	dog *= TABLE[dog][foo(-bar(( -Stark - Ygritte ),bar(-0.53,bar(COLS),TABLE[( ( ( Arya ) ) * Hodor )][x])))];
	if(-TABLE[Hodor][0.64] / TABLE[0.88][Stark - ROWS] * TABLE[-380.9823][0.89] / -3){
	Hodor += TABLE[( -protect(1,0.44 * foo(-0.12) / ( Sansa / TABLE[COLS][( 0.65 )] + ( -betray(bar(),( ( bar(mislead(0.97) / 0.7,89) / 26 / rule(-0.43,-( --210.4528 ),TABLE[bar(( -destroy(Stark,mislead(89 / -destroy(Ygritte,( -Jon )) - ( foo(Jon,0.89) * foo(-TABLE[--1][TABLE[1000.01 / Hodor][--( -81 )]],-TABLE[0.46][Hodor + -48 * --COLS - ROWS - -1]) - mislead(ROWS,rule(-( 1 )),-70) ) + rule())) / --880.3022 ),-dog)][-bar(Ygritte,( COLS ))]) ) )) ) ) + destroy(-destroy(-betray(foo(( protect(Hodor,ROWS) ) - COLS,y)) - ( -COLS ),0.23,dog),mislead(Ygritte),mislead(-Ygritte))) ) - -Jon][x];
	Hodor -= ( Hodor )
} else {
	if(y){
	bar(Arya * betray(ROWS));
	80
} else {
	ROWS;
	if(Hodor){
	if(( COLS ) * ROWS + TABLE[mislead()][COLS]){
	Stark /= ROWS
} else {

}
} else {
	Hodor *= ( COLS - y )
}
}
};
	Stark -= COLS
} else {
	Ygritte;
	if(( --betray(( COLS ) - Arya) + -58 ) + 78 - protect(COLS,protect())){
	if(x){
	rule(ROWS,TABLE[betray(TABLE[ROWS][( protect(( protect() ),( foo(39,--COLS * ( x ),Arya) ),protect(mislead(bar(( foo(-1) ))))) )])][betray(y) * Sansa]);
	TABLE[protect(-Jon,--( -( ( x ) ) )) / TABLE[COLS][-Stark]][Ygritte - bar(--COLS + -13 - 0.26,foo(Jon),( betray(ROWS,( ROWS )) ))]
} else {
	if(protect(-1,foo(protect(),( -1 )),--y)){
	rule(x,foo(mislead(-71,-Sansa * y),COLS),rule(ROWS - --42 - 0.11,Arya,( ROWS )));
	x *= -550.384;
	if(bar(rule(y,0.06,( COLS + TABLE[-( 0.71 )][0.97] )),( -0.99 ),-0.2)){
	( -1 );
	Ygritte /= rule(ROWS,COLS) - -0.55;
	if(protect(ROWS,TABLE[foo(Stark)][( -betray(--y * dog - COLS / protect(),43 * ( -310.698 )) )])){
	if(( ROWS ) / ROWS + ROWS * ROWS + -rule(---TABLE[-28][COLS / 26 - y],ROWS,( ROWS * ( TABLE[( COLS )][-79] ) - TABLE[-0.29][38] ))){
	if(COLS){
	if(ROWS){
	if(0.12){
	dog -= TABLE[( COLS ) - -1][destroy(betray(--1 / ROWS))]
};
	if(foo(Ygritte)){

} else {
	if(COLS){
	if(240.359){
	Arya *= TABLE[rule(0.12 * -( ROWS ),( ( betray(--22) ) - -0.84 ))][Jon]
} else {
	Hodor *= Jon
};
	Arya -= Stark
}
}
}
} else {
	if(y){
	if(( protect() )){
	if(y){
	mislead(-400.71)
} else {
	if(foo(betray(-COLS - y,ROWS),-x)){
	Arya *= ( 0.04 * y );
	if(Ygritte){
	Hodor -= -1
};
	( 78 )
};
	Ygritte
};
	if(rule(Arya / TABLE[foo(ROWS,mislead(-( Stark )))][protect(( 550.4 ))] - -( TABLE[--Jon][( -1 )] ),COLS,--570.0645 / -0.14 + Stark / ( ( -0.88 ) ))){
	dog += -x
} else {
	Hodor -= COLS;
	dog += ( 1 + COLS );
	if(TABLE[-1 + foo(COLS)][1 * mislead(TABLE[protect(67,Arya,-1) - ROWS * 1][-ROWS],bar(ROWS))]){

}
}
};
	dog += mislead(-19,-TABLE[Hodor][( ( ( protect() ) ) )],-8);
	betray(0.89,-x - -1 * x)
};
	( TABLE[-880.969][Ygritte] );
	Ygritte += ( 56 )
};
	COLS
} else {
	if(0.96){
	COLS;
	if(foo()){
	y *= TABLE[Jon][-250.21 + mislead(-Hodor,( -0.04 ),dog)]
}
};
	if(COLS){
	COLS
} else {
	Arya /= ( destroy(( rule(COLS,-rule(--( ( Jon - 69 ) ),destroy(TABLE[---TABLE[mislead(( ( Sansa ) ),rule(--( ( -destroy(Jon,protect(460.247)) ) ) + mislead(( -destroy(( COLS ),-mislead(-1,Ygritte),mislead(-Stark,betray(-protect(( ROWS )),Stark) - ROWS - mislead(( Jon / COLS / COLS )))) ),-1),ROWS - -COLS * protect() * TABLE[-0.2][protect(( ( 11 ) ))] * -COLS * destroy(TABLE[mislead(bar(ROWS,betray(dog)),COLS) / dog][1],( 1000.8 ),( ( ( -protect(Sansa) ) ) ))),COLS)][dog]][-1 - ( ROWS + Ygritte / COLS / -0.71 )],y))) ),x / ( 1 ),Ygritte - ROWS / ( ( Hodor ) + --Jon - 0.73 + protect(Hodor) )) );
	if(destroy(39)){

};
	Stark *= x
}
};
	if(1){
	Stark *= Ygritte
}
} else {
	Jon *= ( Stark ) * Hodor;
	if(protect(Stark,0.45)){

}
}
} else {
	--betray(--280.3225 / x,99 - -TABLE[bar(COLS)][0.67],COLS);
	Sansa += mislead() + -COLS * -TABLE[bar(COLS,TABLE[COLS][-67]) + COLS][-bar(Stark,( TABLE[y][( Sansa )] ),-( betray(dog + 0.81) - 200.6 ))] - 890.2 * ( Sansa )
}
} else {
	if(Ygritte / ( Sansa )){
	if(-ROWS / ( -mislead(mislead(COLS),0.3) ) * ( ( mislead(--1,-0.04,-( ( -COLS ) )) ) ) / destroy(Stark)){

} else {
	-mislead(78 / destroy(destroy(destroy(Hodor * 0.4),( dog ),COLS)),bar(),Ygritte)
};
	dog -= bar(bar(ROWS,x) * 0.77,COLS + ( Arya ) - TABLE[Ygritte - ( bar(-( Sansa ),( TABLE[-670.43][( bar(TABLE[Ygritte][Stark] * 73,bar(---57,mislead(( ( Arya ) ),protect(0.77)))) )] )) )][protect(rule(-( 72 ) * -( rule(x) ),-( Jon )),Stark)])
} else {
	dog + COLS
};
	-540.6
};
	Arya *= foo(COLS);
	dog *= TABLE[betray(730.47)][-0.15]
}
}
}
}
def rule(){
	22 * --12 * 0.8
}
var Hodor = x * COLS - TABLE[( --mislead(x) + rule(rule()) / 550.6162 )][-550.108] - ( protect(( -( ( --0.43 ) ) ) - mislead()) )
def rule(Arya,dog){
	if(( -mislead(--Hodor) )){
	y *= --22
};
	if(mislead(ROWS)){
	foo(y) * ( 84 / -53 )
} else {

};
	dog *= -1
}
var y = Hodor
def TABLE[y][k] {
	x
}
def TABLE[rule(Stark / ROWS,---0.43)][j] {
	Sansa *= destroy(-340.747,betray(betray(Stark,( -20 )) + -Sansa * dog,destroy(( protect() - --21 + -0.41 ),1)))
}
assert foo(Stark,TABLE[ROWS][( ROWS )] - 20.17) + 43 : "Fear cuts deeper than swords."
def protect(Sansa,Ygritte,Ygritte){
	Arya += 0.57;
	if(rule(( --Ygritte ))){
	if(COLS){
	-1 + Hodor
};
	( 1 );
	y -= 660.24
};
	dog *= Stark / Arya
}
def TABLE[-x][j] {
	Hodor /= Stark;
	if(y){
	Hodor *= TABLE[( ROWS )][mislead()];
	if(COLS){

}
}
}
assert -Hodor - Sansa : "One can not simply parse himself"
def foo(Arya){
	0.13;
	( ROWS - ROWS )
}
assert --Arya / -ROWS + -mislead(-mislead(destroy(mislead(bar(bar(( ROWS ))) * TABLE[50][COLS],-( ROWS ),140.71)))) * Arya / -ROWS + -Jon - 81 * --70 / -69 + -1 + 1 + TABLE[ROWS - ROWS][protect(( ( -Jon ) ),bar(rule(--0.36)))] / foo(destroy(),-mislead(--41) - ( -dog )) : "Winter is coming"
var dog = ( protect(-dog,( -0.18 ) - -bar(-80,ROWS)) )
def bar(y,dog,Hodor){

}
var y = ( --180.4603 )
assert COLS - ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = ( dog )
assert -( 1 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert COLS : "One can not simply parse himself"
def TABLE[-bar()][j] {
	if(foo(-foo(bar(Jon,( 0.11 - x )),betray(Jon,COLS)),--( ( ROWS ) - foo(dog,---0.34,TABLE[( x ) * Jon / rule(Stark,( Arya ),protect(-foo(( COLS )) + y,TABLE[-31][bar()]))][( --foo(dog,-0.44,protect(13)) * bar(Sansa,-( 60 ),Ygritte) - foo(x,310.2 - 0.9) / COLS + TABLE[( TABLE[ROWS][x] ) - -32 * COLS][-Arya] ) / COLS]) * 1 ) / dog,dog)){
	-( bar(-32) );
	Hodor += mislead(( protect(TABLE[( betray(rule() - -53,--Ygritte) ) - ( TABLE[( -bar(ROWS,0.8) )][0.66] )][TABLE[destroy(( 0.27 ) - ( TABLE[-TABLE[betray()][-TABLE[x][dog - -Sansa]]][rule(Jon,--550.553 + -Stark)] ) / foo(protect(destroy(Jon,bar(( 0.81 ))),( ( ( protect(0.3) ) ) )),mislead(--x,-ROWS - ( ( ( destroy() ) ) / -COLS / ( ( ( -bar(-81 * 0.88,Arya) ) ) ) ),ROWS)))][destroy(TABLE[ROWS][mislead()] / ( x ))]],( ( Stark ) )) ));
	if(y){
	if(( ROWS )){

} else {
	Sansa += destroy(COLS,rule(TABLE[TABLE[TABLE[bar(( -Jon ) + -bar(),protect() - ( ( ( destroy(-TABLE[Sansa][( -ROWS / -TABLE[--1][Jon] - protect(Jon) )] + ( Arya )) ) ) ),Jon)][-0.43] - 1][COLS]][ROWS]));
	Ygritte += Stark
}
} else {
	y /= --1
}
} else {
	( TABLE[( -42 )][( -0.01 )] );
	if(( ( ( ---710.26 - ( Jon ) + Arya ) ) )){
	if(-190.808){
	if(bar(( -860.2372 ),1)){
	if(TABLE[betray(-TABLE[( Jon )][dog] - 94)][COLS]){
	if(bar(foo(TABLE[0.53][Ygritte],( -destroy(-( TABLE[-COLS + -890.5 - ( destroy(400.6,betray(-protect(betray(-530.7,ROWS)),mislead(( -0.45 * ( --( -( y ) + ( COLS / 850.85 - -bar(ROWS) * Arya - -960.3 * rule(ROWS * 0.68,TABLE[Sansa][mislead(( --90 ),-ROWS,( -Sansa ))],1) + COLS ) + x ) ) + ( betray(-110.442) ) / 980.687 + 1 * ROWS ),( --bar(-ROWS) ))),rule(-TABLE[-9][TABLE[Ygritte][ROWS] + ( Hodor )])) ) + COLS][TABLE[--protect() - ( --protect(mislead(( TABLE[protect(-36,ROWS,TABLE[TABLE[-650.17 / COLS][( Stark )]][ROWS])][COLS] ),( 700.66 ),COLS)) ) / dog][-protect(( -0.73 )) + -( 83 ) / -Arya]] ),( ( ( Hodor ) ) )) )),TABLE[Ygritte / ( ( -betray(( ( ( mislead(-protect(-Sansa,Arya) * ( foo(( ( ( Jon ) ) ),dog) ) / dog,dog) ) ) ),foo(COLS)) ) )][-0.11])){
	-Stark / ---300.988
} else {
	1
};
	COLS
}
};
	x /= Stark
};
	y += TABLE[y][( 0.28 + ( ( betray(0.87) ) ) ) / x]
};
	bar(TABLE[-0.57][ROWS - bar(COLS,bar(--1 * -0.54,( -0.75 ),-foo(Sansa) / -0.11)) - Arya])
}
}
var Sansa = mislead(77) * ( dog )
def bar(dog,x){
	y -= ( Hodor )
}
var dog = --96
var Sansa = dog
def foo(y,Jon){
	TABLE[-1][mislead(ROWS,mislead(Arya * ROWS))];
	if(-TABLE[( TABLE[-TABLE[( -y )][-bar(0.61,-0.75 * -bar(22),-Ygritte)]][-betray(y - Arya * -130.3,-ROWS)] )][Sansa + -destroy() - Stark]){
	--0.94;
	if(mislead(-0.73,-foo(-foo(rule(-mislead(Hodor,destroy(Ygritte,y,420.4027 - ( TABLE[( ( -( x ) ) )][Ygritte] ) / ROWS)),x,ROWS))) + ( rule(Ygritte,-( -0.75 ),destroy(ROWS,-0.75) + Stark) ))){
	if(( -78 )){
	if(0.15){

} else {
	0.8
};
	Sansa -= 0.78
}
} else {
	Hodor += -0.39;
	mislead()
};
	if(-destroy(( COLS * ( ( bar(( ( foo(TABLE[-TABLE[Hodor][0.63]][960.185]) ) ),COLS) ) ) ),mislead(ROWS,rule(),COLS),--Sansa / TABLE[Arya][-82]) + mislead() + protect(0.43) / --TABLE[COLS][( --destroy(Stark,mislead(-( -foo(ROWS) ))) * Stark + protect(( x ),0.66,TABLE[-y][( Ygritte )]) )] / TABLE[-( -protect() )][( ( rule(-0.07 / x / TABLE[Sansa][( ( ( -Arya ) ) )] - -bar(Hodor) / protect(-( -1 ),-( -TABLE[0.89][0.16] ))) ) ) + bar(1 / protect(( ( 0.81 ) )) + -( Arya ) - Ygritte,Stark)] + TABLE[ROWS][( -TABLE[dog][( TABLE[bar(-740.873,ROWS * mislead())][( ( Jon ) )] - --300.827 ) + -protect(8,Hodor)] )]){
	if(TABLE[Ygritte][Ygritte]){
	if(COLS){
	mislead(-COLS + dog / TABLE[x][mislead(( -( Ygritte ) - -0.56 ),-590.44)],Hodor,Arya * 77) / TABLE[foo(-( -destroy(-Jon * ( Ygritte ) * Hodor) ),betray(Jon,TABLE[TABLE[ROWS][dog + 1] + 1][ROWS]))][-Stark];
	protect()
};
	Jon *= 92;
	Sansa /= -y * 69
};
	Arya -= bar(dog,0.75)
}
}
}
var Sansa = y
assert dog : "One can not simply parse himself"
def protect(y,Arya){
	if(destroy(-0.92,Ygritte)){
	Hodor
} else {
	if(-0.74){
	dog /= dog;
	Hodor -= ROWS
};
	if(Arya){
	x -= -( foo() )
} else {
	if(-betray(( Stark + -foo() - -110.42 - --x + --10 ) + TABLE[COLS][Sansa - -( COLS ) - ( --0.93 - ROWS * 78 - ( 180.568 ) )],betray(-1,betray()) + protect(destroy(Stark / -1,TABLE[ROWS][-0.26 * COLS],Ygritte),( ( ( Jon ) ) / 1 ))) / y){
	-dog
}
};
	Hodor *= COLS
}
}
assert destroy(2 + y) : "Fear cuts deeper than swords."
var y = TABLE[-79][( ROWS / ( 0.99 ) )]
def destroy(){

}
def TABLE[mislead(( ( COLS ) ),--1)][j] {
	TABLE[( foo() )][( -x )] + dog + --0.28;
	if(destroy(-( ---850.2991 ) / 0.73,-29 * ( -( ( protect() - 1 ) ) ),protect(0.96 - 0.27,-mislead(-( ---rule(Ygritte,( 67 ),-640.78) + ( -foo(Arya) ) ),-110.824 * COLS),-0.76 * destroy(dog + TABLE[( ROWS * -Sansa - Arya ) - ROWS][y],foo(Sansa)) / ( ( ( ROWS ) ) )))){
	( ROWS ) + TABLE[-1][-destroy(Hodor,1 + -ROWS) * bar(0.19) + TABLE[( ( ROWS ) )][-x + 0.57]] * COLS;
	( ROWS )
} else {
	dog += ROWS;
	-Arya
}
}
var Sansa = Arya
def betray(Stark,Stark,Sansa){
	TABLE[( Hodor ) - -protect(( -1 )) + rule(--Arya,-dog,--0.92 - COLS) + betray(Sansa,( TABLE[Ygritte][foo(destroy(Stark),( ROWS ),-y - destroy())] - COLS ))][( mislead(-COLS,1,( ( x ) )) )]
}
def betray(Jon,Jon){

}
def TABLE[( ( COLS ) )][i] {
	dog - -33 - TABLE[TABLE[-( Arya ) - ---0.11 - -Sansa][-( Hodor )]][ROWS];
	Sansa -= ROWS
}
assert -97 : "Fear cuts deeper than swords."
def TABLE[dog][k] {

}
def mislead(x,Hodor){
	Ygritte -= --0.4
}
assert protect() : "Nothing burns like the cold."
var Sansa = y
assert 1 : "One can not simply parse himself"
assert ROWS : "One can not simply parse himself"
assert protect(-( Jon )) : "One can not simply parse himself"
def TABLE[x - -protect()][j] {
	if(Ygritte){
	Arya *= Ygritte;
	Ygritte *= 1
};
	y /= 0.31
}
def TABLE[47][k] {
	Stark -= TABLE[TABLE[660.3038][ROWS]][67 * Arya];
	if(-bar()){

} else {
	if(-0.78){

} else {
	x += bar(x,TABLE[75][-0.25]);
	if(-( foo(-( -0.12 )) )){
	if(ROWS){
	if(0.08){
	Ygritte /= -Jon
} else {
	-1 + bar(--0.14,TABLE[mislead(Arya - foo(0.64),-( 450.47 ))][-0.28 + COLS]);
	if(destroy(( ROWS ),-730.923,foo(Arya,-1,( --0.49 - -ROWS * TABLE[COLS - -mislead(( Stark )) * rule(ROWS,-1)][foo(73 / -49,-destroy(( -( betray(COLS) ) ))) * ROWS] )))){
	Sansa += COLS;
	Hodor += ( y )
}
}
} else {
	Ygritte += -foo(100.9,COLS + COLS);
	foo(( bar(betray(ROWS,COLS,--( -35 )) / ( foo(COLS) + ( COLS + -Ygritte / 0.61 * Hodor ) / COLS * y * TABLE[COLS - Hodor + foo(( ----57 + ( ( betray() ) ) - -54 ))][ROWS] * 980.9714 + COLS * -protect(( rule(mislead(-43,( TABLE[rule(0.86 * ( ( COLS ) ),( ( TABLE[ROWS][Arya] * y / COLS + ( Jon ) / TABLE[bar(-0.03)][-( COLS )] ) ),( mislead() ))][-0.91 / ROWS + ( -y - destroy() )] )),( -60.717 )) + ROWS ),protect(ROWS,dog / ( -Sansa )),foo()) - y - ( TABLE[-Stark][( ( COLS ) )] + betray(( ( Arya ) ),1,-TABLE[69][-1] + -( TABLE[-460.989][TABLE[Sansa][-TABLE[( -rule(x) ) - -foo(dog,57)][-470.3] + Ygritte]] ) + -Jon + -betray(dog)) ) * y * -TABLE[destroy(dog,-1) - COLS - -rule(--( -1 ) - -0.98 * x * TABLE[bar(-88) + -( ( ( Arya ) ) )][-1],-Sansa + betray(-73,-ROWS + ROWS - --( dog ),betray(--( -36 ),Sansa,( Sansa - ( Jon ) ) / foo(ROWS,COLS))))][( -0.6 )] ),Ygritte) ),-bar(TABLE[( ( ( destroy(23,mislead(22 - ( ROWS ))) ) ) - -93 )][Arya]));
	if(mislead(TABLE[COLS][-TABLE[( ( foo(-( -( ( COLS ) / ( TABLE[rule()][TABLE[( --1 ) * ( -97 )][0.68]] ) ) ),rule(),Ygritte) / Hodor ) ) / foo(TABLE[-TABLE[y][-Ygritte]][ROWS],-TABLE[mislead()][( -Ygritte )])][y]])){
	( -TABLE[COLS / Sansa][destroy(-Sansa,TABLE[x][ROWS])] );
	y /= Jon
}
};
	0.21;
	x += --dog * -COLS / COLS / -38
} else {

}
};
	if(( --y + ( -1 - -730.906 ) )){
	Jon;
	Stark += --23
} else {
	Ygritte += ( ( ( Hodor ) ) ) - ( --ROWS );
	( Hodor )
}
};
	dog *= protect(( ROWS ))
}
def TABLE[( -( bar() / x - COLS ) )][i] {
	Arya /= ( 52 * -TABLE[72][( Stark * 370.72 )] );
	if(y * protect(( ROWS ) / ( protect(ROWS / 0.82 / COLS / --0.91 / Arya + -97 / Arya,( --rule(COLS) ),ROWS) ) - betray(mislead(-( x ) * -bar(COLS) + -0.51)),-x) / x - -39){
	Stark *= -Hodor;
	if(-Ygritte){
	Hodor *= --Hodor * ROWS / destroy(y,( ( Sansa ) ),0.27);
	Hodor *= ROWS
}
} else {

};
	Ygritte *= y
}
def mislead(Arya,x,Arya){
	Arya;
	if(bar(-Stark,TABLE[ROWS][Stark] * y,COLS)){
	x -= betray(( foo(foo(-1,-1,ROWS),-43 * -destroy(ROWS + y,ROWS * destroy(ROWS,( -0.56 ),Hodor) / TABLE[-1 * protect(( -Ygritte ) * -foo() / -1,bar(0.21))][x] - 2,( -6 )) / dog,( -0.08 )) ))
};
	if(-TABLE[--0.16][COLS]){

} else {

}
}
assert 1 : "What do we say to the Lord of Death?"
assert ROWS : "Fear cuts deeper than swords."
def mislead(Stark,Arya,Jon){

}
def rule(){

}
var Ygritte = ( Sansa )
def protect(){
	( ( ( ---0.29 - ( -Ygritte ) + betray(-mislead(--Hodor),mislead(bar() + dog,Arya / -13)) ) / ( mislead(( Stark )) ) ) / 1 );
	if(0.86){
	if(bar(Hodor,Jon) + protect(-1,TABLE[( Hodor )][-rule(( COLS / ---920.098 - -COLS * ( ( --TABLE[( TABLE[( -destroy(rule(400.948,( ( TABLE[Arya + -380.97][ROWS] ) )),COLS) )][Stark] / Arya )][( TABLE[-0.26 + betray(Ygritte,42,rule(betray(ROWS,foo(0.52,COLS)),( 46 )))][Arya + foo(0.13 / ( COLS ))] )] ) ) - bar(rule(rule(x,protect(Stark)),betray(Jon) * --Jon),0.81) ) + -670.88 / protect(ROWS + COLS) / x * TABLE[mislead(-betray(),( Arya ) / Stark)][TABLE[-betray(-( ROWS ))][bar(-1 + protect(destroy(TABLE[COLS][protect(( bar() ))]),TABLE[ROWS][( 0.97 )]),bar(y),-1)]],COLS,940.33)],-52)){
	Hodor /= -0.37;
	if(Sansa){
	if(1){
	if(-( TABLE[COLS][TABLE[destroy(Sansa,-1)][Stark] + COLS - rule(0.53 * bar())] )){
	if(-( COLS )){
	ROWS
} else {
	-960.571;
	dog -= -330.91
};
	if(Stark){
	( Stark )
}
} else {
	if(bar(( ( destroy(-1,31,( protect(COLS - -16,rule() / mislead() - -( ( betray(( COLS ) / 66,( -0.33 )) ) )) )) ) ),COLS)){

};
	Sansa += -( -66 ) + ( TABLE[mislead(betray(Stark + -0.98,betray(protect())),--destroy(--( 92 )) - 3)][y] ) + ( ( protect(( ( ROWS + ROWS ) - ( rule() ) ),( --930.2 ) / --y + ( --ROWS ) * -0.43 * ROWS / protect(),-( -0.33 )) ) ) + --20;
	if(ROWS / 0.97){
	--( --0.55 );
	Sansa /= COLS - -( -ROWS * --betray() )
} else {
	if(COLS){
	if(Hodor){

};
	Ygritte /= destroy(rule(-22 + --Jon - Stark / mislead(-1),-1),( ( ( COLS ) ) ),( ROWS ));
	Jon
} else {
	Ygritte -= ( rule(betray() + Hodor / ( y + -0.8 ),Arya) )
};
	dog -= ( -bar(14,COLS,TABLE[100][TABLE[10 - Hodor][-1]]) )
}
}
} else {
	dog /= ( betray(Hodor) ) - rule() / Arya + ( -35 )
};
	dog -= -1
} else {
	if(( foo(41 * ( COLS )) )){
	if(( Sansa ) * 720.88){
	35;
	if(y - ( -( TABLE[0.12][-31] ) )){
	COLS
}
}
} else {
	Sansa -= ( -0.82 );
	Stark += ROWS;
	Hodor += destroy(-68)
}
};
	if(ROWS / rule() / x){
	if(-74){

} else {
	TABLE[COLS][betray(dog) + dog]
};
	Jon -= dog
}
};
	bar(destroy(0.23),53,COLS)
} else {
	Jon /= -Hodor * TABLE[betray(protect(--COLS))][Arya];
	Arya += -x;
	( rule(-y,Jon,COLS) )
};
	x += ( mislead(--0.08,-protect()) )
}
def bar(){
	( COLS );
	x /= ROWS;
	if(rule(--TABLE[Arya / -( ( -35 + TABLE[-7][protect(foo(-Stark / -TABLE[( rule(( COLS )) )][protect(betray(1,bar()),-foo(COLS))])) - ROWS - ( ( -ROWS ) ) - x] ) ) + destroy(ROWS,COLS,( TABLE[TABLE[bar(83)][--780.97]][-0.24] )) + TABLE[---( -TABLE[foo(-( Stark )) / Stark][protect(( bar() ) + COLS,COLS / -( COLS ) - -0.99)] ) - ( Sansa ) + ( ( ( --43 ) ) )][( -0.94 )]][--Sansa])){
	if(TABLE[( 0.27 )][( ( ( ROWS ) ) )]){
	Hodor /= --1;
	if(x){

};
	( y )
} else {
	Sansa *= x;
	--destroy(( -( x ) ),protect(-32,x))
};
	if(ROWS){
	( TABLE[1][( --34 )] );
	-mislead()
};
	-30
}
}
assert 73 / ( ROWS ) / ROWS : "Winter is coming"
var Arya = Hodor - 0.26
def foo(y,Hodor){
	if(-0.82){
	( ( Arya ) );
	( ( rule(protect(( ( foo() ) )),protect(TABLE[-destroy(TABLE[TABLE[-20][foo(-ROWS) - COLS]][-TABLE[--( -0.63 )][--710.91]]) * 86 + TABLE[( -destroy(---770.302 + foo(TABLE[( 170.07 / TABLE[TABLE[destroy(( 0.75 ))][Hodor]][Hodor] )][-470.767])) )][COLS]][betray(( foo() ))])) ) )
};
	Ygritte /= COLS;
	1 + dog
}
def bar(Ygritte){
	if(-( betray() * -0.42 )){
	490.5;
	if(-0.5){

} else {
	( y )
};
	if(880.7 / betray(( ( -bar(( -Sansa * -0.66 ),TABLE[betray(bar(TABLE[rule(Sansa,betray(mislead(COLS,( ---23 + Sansa ),protect(ROWS * 0.02,rule(COLS - TABLE[490.7][-COLS]),( -( -0.79 ) )))))][Sansa]) / ROWS) * ( -0.99 )][-mislead(( bar(-destroy(Hodor,-860.08)) ) / Sansa + -TABLE[ROWS][0.17],( 1 ) * Stark)]) ) ))){
	destroy(-400.693,COLS)
}
} else {
	if(( ( 98 ) )){
	Stark *= dog;
	if(54){
	COLS
}
} else {
	if(-0.81){
	98
}
}
}
}
assert COLS : "Nothing burns like the cold."
assert 15 : "One can not simply parse himself"
var Stark = ROWS
def TABLE[foo(Ygritte)][j] {
	if(foo(( ( ( 1 ) ) ))){
	Stark * y;
	if(Sansa){
	Stark -= TABLE[ROWS][TABLE[bar(COLS,Jon,-Arya)][Ygritte]]
} else {
	Hodor -= --( -400.77 );
	y /= ( TABLE[protect(protect(0.05,( -dog ) * ( -0.93 ) + -COLS,-0.29),TABLE[rule(-0.14 * ( 77 ) + COLS,protect(destroy(TABLE[-ROWS / foo(-530.6,-57)][( Hodor )],--TABLE[( Ygritte )][Hodor],-TABLE[( ( ( TABLE[( TABLE[TABLE[dog][foo(protect(),Hodor,COLS)]][COLS] )][Hodor] ) ) )][protect()]),protect(y,TABLE[foo(COLS)][Ygritte])))][( ( foo(-Ygritte * TABLE[( -29 )][Hodor]) * destroy(( rule(ROWS,mislead(Hodor,Ygritte - ROWS * -40.764 + Jon)) ),dog + destroy(-( ( ROWS + TABLE[betray(TABLE[bar(( -foo(COLS,-( ( ( foo() ) ) ) * -( dog )) ),COLS) + dog][( ( 680.68 ) )] / ( ROWS - ROWS ),protect(-( ( -x ) ),--0.29),-( ( ( ( Hodor ) ) ) ) * destroy(-800.6)) - betray(COLS)][protect(COLS,( Jon ),foo(TABLE[COLS][TABLE[COLS - 330.45][Jon]],( ( ( ( 49 ) ) ) ),Stark))] - ( TABLE[-Jon + Hodor][TABLE[foo(430.32) * foo(COLS) / Arya][COLS]] ) + -98 ) ) - COLS,-0.26,-11)) ) )])][COLS] );
	Sansa += -540.5
}
} else {
	if(Stark / TABLE[-0.17][--98]){
	Arya += -foo(-0.39,0.14);
	Arya += COLS;
	Hodor /= 200.11
} else {
	-Stark * 0.61;
	Stark *= rule(bar(Ygritte),---34 * protect(Jon,rule(ROWS),x) / COLS,y)
};
	Ygritte -= bar(1,( -( COLS ) ),destroy(TABLE[( 0.57 )][( 0.6 )],rule(( ( ( -0.5 ) ) - 310.511 ))));
	-ROWS
};
	Arya
}
var x = -( foo(( Arya )) )
assert destroy(TABLE[-Arya][bar(Stark,-0.81) - ( Arya )],Arya) : "What do we say to the Lord of Death?"
def TABLE[( COLS )][j] {
	( COLS ) - mislead(( -0.38 ),-( ( rule(Stark) ) ));
	x
}
def TABLE[-1][i] {

}
def protect(y,Hodor){
	x
}
def TABLE[Ygritte][j] {
	dog *= -bar()
}
var Hodor = ( bar(-440.5 + x,( Arya )) )
assert bar(COLS) : "Fear cuts deeper than swords."
var Arya = mislead(rule(-Hodor) * 310.001,betray())
def foo(){
	-bar(-0.06,mislead(-1,foo(-1) + -0.17))
}
var Sansa = ( 1 )
def TABLE[-34][i] {
	if(TABLE[( TABLE[( protect(betray(----TABLE[TABLE[-( 1 / ---0.64 + foo(TABLE[-ROWS - betray(---( ROWS ) - foo(TABLE[ROWS][-1])) + -92][-( betray() )]) )][protect(79,Arya,TABLE[COLS][1 + -Stark / ( -67 )]) * TABLE[-destroy(( rule(-Sansa) - ( -930.791 / protect() ) ))][-1]] - 0.62][-83],( dog )) - betray(-1,0.11,( -( y ) ) + dog)) )][y] )][-COLS]){
	if(( -780.1008 )){
	Stark /= -160.42;
	y *= -bar(rule(),( --29 ))
};
	Arya += 0.13 + mislead(mislead() * 690.718,foo(TABLE[bar(Stark * -( Jon * mislead(--( ( 62 ) ) + Jon) ),64,Hodor / -bar(-destroy(-Stark,foo(1,-betray(( -( 20 ) )),betray(COLS)),COLS / Ygritte),-ROWS)) - rule()][-Hodor]),COLS)
} else {
	Arya /= -1;
	Arya /= --0.29
};
	Jon *= ROWS;
	y -= ( foo(0.13,--20,( COLS - betray() - -ROWS + 0.62 )) )
}
assert 390.523 : "What do we say to the Lord of Death?"
def mislead(Sansa){
	if(-( TABLE[bar(Jon,x - ( --ROWS ),( ROWS )) + betray(Jon)][COLS] )){
	COLS
} else {
	if(-Stark){

} else {

}
};
	1
}
assert -bar(Stark) : "Winter is coming"
assert destroy(Jon,Sansa) : "Fear cuts deeper than swords."
assert Ygritte * TABLE[destroy()][( COLS )] : "One can not simply parse himself"
def TABLE[-30][i] {
	( ( 76 ) )
}
def betray(Jon){
	if(0.24){
	COLS
}
}
var Sansa = x
var y = ( COLS )
def TABLE[foo(( ( ( 1 ) ) ))][i] {
	( bar(TABLE[TABLE[TABLE[-0.9][-( -COLS + -50.2015 )]][TABLE[87][TABLE[( COLS ) + ( Arya )][-( Sansa )]]]][-COLS / -rule(( ( Arya ) )) - protect(protect(-mislead(--TABLE[betray(Sansa)][( -10 )] + foo() - destroy()),Jon),--( ( ( -Jon * Ygritte ) ) )) + destroy() * betray(-ROWS,Sansa,ROWS - 87 + ( bar(Ygritte) ) + bar(( -55 * -57 ),( destroy(( Jon ),TABLE[--1][Arya]) )) + foo(foo(),-( foo(-30) * Arya ),( bar(1) ))) * ( ( protect(( TABLE[Arya][protect(-protect(),-45)] ),-ROWS) ) / protect(x) ) + -( --53 - ( -98 ) )],( mislead() ) * -Stark,-( ( rule(( 49 ) + ( -( rule(foo(mislead(( COLS ),1)),foo() + 1,ROWS) ) ),ROWS * ( -0.41 )) ) )) )
}
def rule(Arya,y){
	if(-( ( -x ) ) / 21){
	Stark;
	1
} else {
	( ROWS )
}
}
def TABLE[destroy(betray(-Ygritte + -68))][j] {
	Stark -= -TABLE[2 + COLS - Jon][protect(( COLS ))];
	if(ROWS){

}
}
def destroy(Sansa,Hodor){
	36;
	Hodor
}
def TABLE[dog][k] {
	y += destroy(Hodor)
}
def foo(Arya){
	if(rule()){
	if(ROWS){
	destroy(-690.6375,-( ( x ) + foo(x,Hodor) / destroy() ) / -620.257,( ( betray() ) + y ))
} else {

}
};
	if(Stark / 12){
	if(protect(Jon,-( --750.795 / Jon - rule(( ROWS ),Hodor) * destroy(-( COLS )) ),-5 / ( ROWS ))){
	y /= 69;
	-93
} else {
	Stark /= -ROWS / foo(-0.16,COLS)
};
	if(-0.2){
	76
} else {
	Stark -= dog;
	if(ROWS){
	-ROWS - 0.71
} else {

};
	-23
}
} else {
	mislead(-COLS)
};
	dog /= -16
}
def TABLE[betray(bar(COLS,Ygritte,-49 + destroy(-640.4445,COLS)) + Ygritte * destroy(( -Hodor ),--Sansa - ---rule(-240.1 / ( -mislead(63) - -0.24 ),betray(-foo(TABLE[TABLE[Hodor][ROWS]][TABLE[( ( mislead() ) )][( foo(TABLE[( ROWS )][550.835],x) )]],( -TABLE[--mislead(( ( Stark ) ),Hodor)][--1 * foo() + TABLE[x][bar()]] / ( -COLS ) ))),Arya)),y / -COLS)][j] {
	( -( -betray(( -140.64 ),-bar(),dog) ) - Sansa + -0.77 )
}
assert -1 : "One can not simply parse himself"
def mislead(Sansa,dog){
	x /= -0.46
}
def foo(Sansa,y,Stark){
	Hodor -= betray(( COLS ),x);
	Hodor -= ( betray(COLS) )
}
def TABLE[( ( -Hodor ) )][k] {
	if(Stark){
	dog -= 0.56;
	( destroy(COLS,protect(-bar(Arya,COLS,-mislead(bar(( ROWS + Jon ),ROWS - foo(TABLE[Arya][-1]),x),( y ))) - ( COLS )),( Ygritte )) );
	Jon /= ( y )
} else {
	protect(bar(y))
};
	Ygritte -= ( ( -( TABLE[Arya][COLS] ) ) )
}
var Jon = ROWS
assert -dog : "What do we say to the Lord of Death?"
def protect(Arya,Sansa){
	mislead(( -( ( Stark ) ) * -protect() ));
	( betray(-( Hodor )) / rule(Arya) ) + ( x )
}
var x = 26
def TABLE[--35 - ROWS][j] {
	x -= -TABLE[-COLS - 190.486][0.11];
	protect(35)
}
assert Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = ( mislead(Stark,-82) )
def TABLE[COLS][k] {
	Hodor /= Sansa;
	-( 15 )
}
def TABLE[Stark][j] {

}
assert -Sansa * ( Stark ) + COLS + -protect(0.46) + ( destroy(61) ) : "Fear cuts deeper than swords."
def protect(Hodor){
	if(--0.73){
	Hodor -= ROWS;
	Sansa /= rule(( x ),betray(Hodor) + -COLS)
} else {
	if(dog){

} else {
	Ygritte += COLS / TABLE[COLS + -0.22][x]
}
};
	if(0.1){
	ROWS + -1 * Sansa - dog
};
	--180.943 + ( Ygritte + -0.44 * TABLE[( rule(Jon,( foo(-60,destroy(foo(--0.14 / ROWS,Hodor),TABLE[( -0.9 )][x]),Jon) ),TABLE[0.36 / -830.59][bar(TABLE[-Sansa + TABLE[TABLE[-protect(-650.21)][Jon]][x]][Sansa] / 240.3)] - y) )][ROWS + dog] )
}
assert ( COLS ) * destroy(bar(bar(-0.96),40.775)) : "What do we say to the Lord of Death?"
def TABLE[ROWS][k] {
	if(TABLE[--0.32][dog]){
	Ygritte *= ( ROWS );
	y /= Sansa;
	if(bar(-0.8,( betray(COLS,-52) / TABLE[120.7873][dog] ))){
	COLS;
	if(mislead(protect(rule(-0.24,( -1 - 29 ),ROWS),-ROWS))){

} else {
	Jon;
	0.29;
	Jon -= ( 160.8 )
}
}
} else {

};
	Ygritte *= -( 19 );
	if(ROWS){
	Sansa -= -32
}
}
def rule(){
	if(TABLE[( -20 )][ROWS]){
	TABLE[( ROWS )][-TABLE[-1][( Ygritte - -( -0.89 ) )]]
};
	if(ROWS){
	( -1 - TABLE[Jon][( protect(-0.68) )] ) - 1;
	Sansa
};
	protect(( betray(dog) )) + -TABLE[Arya][rule(rule(COLS,75 / ( Ygritte )) - ROWS + betray(mislead(( ( ( dog ) * ( -0.53 ) ) - 0.35 * ( TABLE[( ROWS - ( TABLE[530.4][x] / ( betray(1,COLS,( TABLE[( mislead() )][0.71] )) ) ) ) - -54][Ygritte] ) ))),-0.91,x) - 0.89]
}
def TABLE[-COLS][i] {
	Ygritte += -47 * -foo();
	-Hodor * Ygritte
}
def TABLE[ROWS][k] {
	-foo()
}
assert COLS : "What do we say to the Lord of Death?"
var Ygritte = -35
assert -ROWS : "Fear cuts deeper than swords."
def TABLE[( ROWS ) + y][k] {
	Sansa += rule();
	Sansa -= 0.78
}
var Jon = TABLE[-Jon][--0.25 - protect(( COLS ) + foo(COLS))]
def TABLE[35][j] {
	Hodor -= x;
	Hodor
}
assert Stark : "What do we say to the Lord of Death?"
def foo(Ygritte,Hodor,Sansa){
	650.349;
	COLS - --protect(destroy(bar(-Stark),TABLE[ROWS / Ygritte][( -1 )])) / destroy(protect(COLS,Jon,x)) + -97;
	foo(0.6,0.68)
}
assert 84 : "Nothing burns like the cold."
def betray(Ygritte,Hodor){
	if(-mislead(0.42)){

} else {
	Hodor;
	if(bar(rule(Sansa,TABLE[7][-1]),-7,Jon)){
	Stark;
	x -= ( ( -980.72 - --( --TABLE[( COLS ) - rule(Sansa,-Hodor,0.94)][0.85] ) - --( betray(Arya) ) - ---0.72 / -( TABLE[destroy(-COLS,( 2 ))][-72] ) * -rule(COLS) ) + TABLE[10 + ROWS / -420][Hodor] - y * 62 )
}
}
}
def TABLE[rule(-1,0.13) - 840.39][i] {
	( 1 * foo(( Stark )) )
}
def TABLE[-protect(--dog * TABLE[-ROWS][y] / 0.77)][k] {
	betray(( Ygritte ) * -1 + betray(dog) + -destroy(rule(betray(( betray() )),-61) + ROWS))
}
def destroy(x,y){
	if(ROWS){
	if(0.5){
	if(protect(-98,TABLE[destroy(betray(ROWS * Stark + ( dog )),ROWS)][mislead(TABLE[( -( Ygritte ) )][-620.39 * destroy(y,0.48) - ( 1 - -0.71 ) + -( -17 ) / 41])])){
	Sansa *= -foo(--foo(TABLE[--85 * ( -COLS - x ) + 940.9 / ( betray() )][( -bar(( -90 * -TABLE[1][0.48] / ROWS ),y,-TABLE[( destroy(mislead(rule(ROWS / ( ( 0.53 ) ) * --1,protect(Hodor,Ygritte,-dog - betray(23,-ROWS)) + COLS),60),-dog) )][Ygritte]) ) / TABLE[-TABLE[-( 1 )][-bar(y,-ROWS) * dog]][ROWS]]),Jon)
} else {
	Ygritte /= foo(TABLE[Hodor][--Hodor * bar(-bar(foo(COLS,Hodor),betray()) / destroy(ROWS,protect(mislead(90.6),ROWS)) + -1 - COLS * -0.04 / --60.516) / ( 70 )] + -( foo(( ( ( ( -( ( ( rule(mislead(rule(----mislead(-mislead(),84) - Ygritte / -Stark - -y),bar() * ( rule() ) + ROWS - Sansa,-Ygritte),-90.329) ) - betray(TABLE[ROWS][Hodor]) ) ) + Ygritte ) ) ) ) * ( --17 ),540.1) ))
}
};
	Arya += ( Ygritte / -0.33 ) / 1 + Arya / ( 100.8 );
	y -= ROWS
} else {
	-foo(TABLE[Arya + foo(( ( -rule(( TABLE[( -920.43 ) / -0.8 / ( Hodor )][-0.21] - TABLE[y + rule(( COLS ),foo(x),COLS + TABLE[-0.49][-TABLE[rule(-0.76 - -TABLE[TABLE[Sansa][( TABLE[bar(-TABLE[( Jon ) / --38][( Hodor )],TABLE[-( ( ( ( ( ( -0.89 - ROWS ) ) ) ) ) ) + -590.299][foo(foo(ROWS,-0.07 * 67,mislead(( ( ROWS / ROWS - TABLE[-foo(ROWS) - 59][--betray()] * ( y ) + -( dog ) / rule(-TABLE[( ( rule(( destroy(90,destroy(-Ygritte - -TABLE[destroy(-bar(y,Ygritte))][x / ( y )],Sansa,( 700.185 ))) ),dog) ) )][TABLE[betray(-0.39 - TABLE[-0.94 / ( 0.38 )][-0.98] * 0.52,ROWS)][Stark]] * Stark,ROWS) ) ),92)),ROWS,x)])][dog * foo(destroy(rule(TABLE[1][-70],COLS,( ROWS )),COLS),Sansa)] )]][TABLE[dog][ROWS]] - COLS,47,( ROWS ))][--ROWS]] - COLS)][( -860.8 * -1 * ( --( Jon ) - 130.963 ) )] ),protect(-( TABLE[ROWS][protect(46)] ) * 0.53 * -Hodor * -protect() * COLS,Hodor)) ) ))][bar()] * ( protect() ),-0.63,ROWS);
	x *= Arya;
	if(foo(foo())){
	TABLE[Ygritte][ROWS]
}
}
}
assert ROWS + -82 : "Fear cuts deeper than swords."
def TABLE[destroy(mislead(COLS,mislead(betray(Arya,ROWS,-TABLE[ROWS][-( -COLS )]),( 0.46 / rule(( --destroy(mislead(( -protect(-96,---protect(TABLE[dog][bar(( 47 + COLS ))]) * -TABLE[Arya][Jon / rule(dog,0.45)] / -Ygritte) / foo(-870.4232,foo(destroy(-52))) ),-( ( Stark ) ) * ( COLS ) + bar() - -0.19 * 0.94)) * ( Hodor ) )) )) / Hodor * betray(protect(( ( ROWS ) - -1 / TABLE[ROWS][ROWS] ) * -( 1 * x ),destroy()),COLS) / ( y ),( ROWS )) + protect(( ROWS ),( -63 ) - dog * ROWS,( ROWS )),betray(COLS,COLS,-ROWS))][k] {

}
def bar(Jon,x){
	Sansa *= -150.79;
	Ygritte += destroy(( ( ---200.82 ) ),15);
	protect(betray(-y,1))
}
var y = --( -47 )
assert x : "Nothing burns like the cold."
def foo(y,Jon,x){

}
def mislead(Stark){
	if(-76){
	0.68
} else {
	Arya += ( 1 );
	if(( COLS )){
	-0.83 / Hodor
}
}
}
assert betray() : "Nothing burns like the cold."
assert TABLE[ROWS][mislead(-0.68,( ( Arya ) ) * COLS)] + foo(73,--( ROWS )) : "What do we say to the Lord of Death?"
var Stark = -TABLE[bar(TABLE[betray(ROWS) + ( Arya )][-600.271])][TABLE[betray() / dog][destroy(x)]]
def TABLE[-( -41 )][j] {
	y += ( COLS );
	-ROWS - 0.98
}
def betray(Hodor){
	( COLS )
}
assert 35 : "What do we say to the Lord of Death?"
def protect(x,Hodor,Arya){
	dog *= TABLE[TABLE[47][-ROWS] - COLS / ( TABLE[TABLE[TABLE[-0.99 / destroy(TABLE[ROWS][-0.18],--90.354,y + --94 - protect(-( foo(Sansa) ),60))][COLS]][protect(( ( betray(-( ROWS ),rule(-93)) ) ) * destroy(foo(( ( foo(( ( 96 ) ),x,-55) ) ),TABLE[betray(COLS)][x]) * y - -( --protect(( 1 ),TABLE[--bar()][rule()]) * TABLE[ROWS + ( -TABLE[Jon][protect(750.8066,rule(TABLE[( protect(-foo(ROWS)) ) + -( ROWS ) * protect(TABLE[( -69 )][Jon])][( protect(1) - -COLS - TABLE[Arya][-( -rule() + y )] )] + Arya + 0.91 / ( 22 )))] - TABLE[( -foo(Jon,TABLE[-0.1][COLS]) / TABLE[dog][( rule(0.96) )] - -mislead(COLS) + Ygritte * -TABLE[x][-1] + Hodor + COLS )][ROWS / dog + -TABLE[y][TABLE[bar(-77)][COLS]] * Jon] / destroy(-0.19,1) ) - TABLE[-4][ROWS]][TABLE[0.52][47]] ),( ( ( Hodor * -COLS - -destroy(( bar(( -COLS )) )) ) ) ),( ( -TABLE[ROWS][( Ygritte )] ) + -630.8 )))]][-( 1 ) / rule(-rule(bar(ROWS)),-0.9)] ) / x / Jon][rule(COLS,TABLE[x][rule(1,-490.42)])]
}
def TABLE[-y][k] {
	Ygritte;
	foo()
}
def TABLE[TABLE[-22][( ( rule(( destroy(rule(-betray(rule(bar(( 1 ),protect(Jon)),-rule(ROWS) + 0.24)),-betray() - bar(x,rule(( TABLE[Sansa][Sansa] ),11) - x / protect(TABLE[( -TABLE[rule(Hodor)][-0.62 * -COLS] )][( COLS )],( 0.71 )))),ROWS) - -x ),( foo() )) ) )]][k] {
	-57;
	( destroy(ROWS + -10,( mislead(-( Arya )) - -bar(( foo() ) + ( 72 ),0.72) ),protect(( COLS ) / rule())) ) - ( ( COLS ) ) + 0.79;
	-830.7692
}
def mislead(Arya,Arya){
	if(betray(-TABLE[-1][TABLE[Hodor][-10]])){
	if(--foo(( COLS )) + -90.7){
	Ygritte *= -0.95
};
	COLS;
	--rule(( -bar(-67) * betray(protect(),-13,ROWS) - -0.99 ))
};
	if(-y){
	Ygritte -= 0.47;
	-TABLE[Ygritte][foo(( 600.692 ))] * x - Jon;
	Sansa
};
	Jon /= destroy() * TABLE[TABLE[-51][Jon] / TABLE[x * Arya][--( COLS ) - -dog]][TABLE[TABLE[( TABLE[( -66 )][Stark] + 0.79 ) - -ROWS][( ROWS )]][COLS]]
}
var Ygritte = destroy(Hodor,-COLS)
def bar(Sansa,x){
	if(( 0.38 )){

} else {
	x *= -( Jon ) + TABLE[COLS][TABLE[-( -foo(dog,betray(TABLE[ROWS][( 35 )])) * 560.032 )][( 0.8 )]]
}
}
def TABLE[( ROWS )][k] {

}
def destroy(Stark,Ygritte,Jon){
	Stark *= dog;
	if(25){

};
	if(( ROWS - COLS )){
	if(dog){

}
} else {
	if(( foo(-COLS,TABLE[Ygritte][-1]) )){

};
	ROWS
}
}
def foo(x){
	foo(TABLE[-betray()][-0.27] + -89 / mislead());
	if(2 / COLS / mislead(( ( ( --1 ) ) ),( Arya ),mislead()) + ( TABLE[Stark][bar(rule(Jon - ( ( ( 710.288 ) ) )),-29,bar(TABLE[-41][COLS]))] ) - -160.174){
	if(Jon){
	if(rule(-destroy(-COLS),530.5102,( ( Hodor ) )) - betray() - -COLS){
	if(Ygritte){
	Jon -= ROWS / -x;
	Jon *= ( -x - y + ( Hodor ) );
	dog
};
	if(-( Arya / ( -0.03 + -1 / Hodor ) + 1 + ( TABLE[mislead(0 + 1 - ( --0.06 ))][-810.59 / ( COLS )] ) )){
	if(y / 65){
	mislead(-0.17);
	x /= foo(-mislead(-9 * -ROWS - Jon))
} else {
	if(-( destroy(COLS,betray(COLS)) )){
	Ygritte *= -x;
	rule()
};
	95 - rule(Arya)
};
	if(TABLE[x][COLS]){
	if(15){
	Arya -= -Hodor;
	1;
	-1
} else {
	( mislead(40) );
	( protect(-0.24 / ( foo(-ROWS,( bar(mislead(( betray() ),-TABLE[COLS][COLS])) )) ),betray(( foo(x,Hodor) + 71 ))) )
}
};
	88
}
} else {
	protect(-68) + ( -----ROWS - ( -0.42 ) + -COLS - destroy(Jon,Stark) * ( -1 ) + -440.4917 + COLS ) / betray(( ROWS ),( x ));
	if(( -( ( Ygritte ) ) - ( foo(-1,-0.98,-Arya) ) )){
	if(-TABLE[-ROWS][foo(1 / bar(( COLS ),--1 - ( COLS ),y))]){
	dog *= ( protect(0.56) )
} else {
	if(protect(COLS)){
	Ygritte
};
	Stark
};
	COLS
} else {
	betray(Stark)
}
};
	if(--dog + Arya){
	if(Hodor){
	if(rule(0.26 / ( COLS ),( destroy(bar(( x )),-Stark / Hodor) ) + Ygritte) - -1){
	if(-bar(57) / betray(( TABLE[ROWS][--bar(0.82,-foo(dog))] ),x)){
	Ygritte
};
	Stark /= --bar(Sansa,COLS,protect(( Stark )))
} else {
	-( dog - --0.88 );
	Sansa += ROWS
}
};
	( ( ( 6 ) ) )
} else {
	Jon *= ( -0.03 );
	Stark += 7
};
	-rule(( -COLS ))
} else {
	y += mislead(-940.24,( Arya ) * ( COLS ) * ( ( TABLE[y][protect(( betray(0.28) )) + Sansa * destroy(--1,-66) - ( bar(foo(),TABLE[( COLS )][-68],ROWS - mislead(Arya * protect(( ( 640.83 ) ) * protect(-76) / ROWS),foo(--Jon)) - ( rule(COLS,dog) ) - -0.27) )] ) ))
};
	Ygritte += TABLE[foo(-0.64) - Sansa][ROWS];
	COLS / -0.07
} else {

}
}
var Stark = COLS
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(){
	protect() + -1
}
var Jon = 0.8
assert 0.11 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-( 74 )][j] {
	y /= -( Ygritte )
}
def destroy(x,y,Arya){
	-y
}
def rule(Arya){

}
assert ROWS : "What do we say to the Lord of Death?"
assert foo(( -4 ),( COLS ),bar(-foo(Arya,COLS - 74 / destroy(foo(),dog / Sansa / 0.74 + foo(-580.7466),( Jon )) + betray()))) : "What do we say to the Lord of Death?"
assert mislead(-1,-COLS + bar(-Ygritte) + TABLE[TABLE[Stark][230.448]][( ( -betray(1,-( ROWS )) * -COLS ) )]) : "Winter is coming"
def mislead(dog){
	-250.2744;
	dog += -ROWS
}
def TABLE[COLS][j] {
	550.2912;
	( Sansa )
}
var x = y
def mislead(y){

}
def TABLE[57][i] {
	( mislead() );
	if(Hodor){
	if(35){
	Stark += ( ROWS );
	--( ( mislead(dog) ) ) - 8
};
	Arya *= ( -betray() )
}
}
def protect(y,Jon){
	if(-bar(foo(ROWS / rule(( ROWS ),Arya,y) * -COLS),Stark)){
	if(( COLS )){
	if(Arya){
	if(82){
	Sansa += ( COLS );
	Stark *= -Sansa
} else {
	if(protect(( -rule(Hodor) ),ROWS,-ROWS)){
	protect(dog)
} else {
	TABLE[x][( COLS * Ygritte )]
};
	if(( COLS )){

}
};
	Jon -= Hodor
} else {
	-( 0.04 + rule(Ygritte - destroy(( 150.83 - -38 ),TABLE[TABLE[ROWS][y]][( 1 ) + -0.24])) ) + foo(-Sansa - -COLS - -65) + ROWS;
	Ygritte
};
	if(destroy(( Hodor ))){
	Ygritte /= ( COLS ) * COLS - protect(destroy(Arya,0.64 - ( ( ( rule(TABLE[TABLE[TABLE[Ygritte - ( COLS )][destroy(Arya + -COLS * rule(28) - 0.65)]][x]][foo(( -TABLE[TABLE[ROWS + COLS][( -400.4 * protect(( betray(-foo()) ) - -69,-1 - -89,x) )]][( -34 )] ))]) ) / destroy(( TABLE[-Stark][( COLS )] ),foo(foo(Sansa,COLS,bar(-foo(-betray(),1,protect(0.56)),-ROWS * -0.51)),1),betray(( COLS ))) - ROWS ) )),64) / 14 - ROWS;
	ROWS
}
}
};
	if(foo(-COLS) - Stark){
	52
};
	-1
}
var Hodor = mislead()
assert ( bar(-0.04,bar(COLS)) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert x : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = COLS
assert Stark : "Winter is coming"
def foo(x){
	if(( ( -90 ) ) * -92){
	if(-0.02){
	if(y - TABLE[Sansa][ROWS + ( y ) + bar(-35 * betray(COLS / 0.09,mislead(COLS,Stark),ROWS)) * ROWS]){
	-( -41 ) + --1
} else {
	0.62;
	y /= ( ( ( ( COLS ) - ( -940.1741 ) ) ) );
	if(TABLE[--74][0.47]){
	--1;
	if(Sansa){

}
}
};
	Hodor += -780.8722;
	if(0.43){
	x
} else {
	if(-COLS - ( TABLE[( destroy(bar(-ROWS) - -0.87 / -bar(dog) - -93 + -foo(-rule(-( ( TABLE[0.23][x + COLS] ) ),ROWS),---0.09)) )][TABLE[TABLE[-420.4][--81]][Arya - COLS]] )){

};
	Jon;
	if(rule(TABLE[0.94][COLS / ( 0.36 - bar(ROWS + -0.25) )],TABLE[( 1 )][39],COLS)){
	Hodor /= -mislead(TABLE[800.69][TABLE[-26][-mislead(-96)] * -24],95 - -Stark - TABLE[ROWS][-mislead(( -20 * -bar() ) / 190.573 + betray(destroy(),( Jon ),-77) / bar(-foo(bar(foo(),COLS),foo(dog)) + ( -Sansa / ( mislead(x) ) )) + -destroy(x,Arya) * TABLE[( ( ROWS ) ) / ( ROWS * ( bar() ) / ( y ) )][-ROWS] + ( ( COLS ) ),ROWS)] - ( -foo(ROWS) ),COLS)
}
}
}
} else {
	if(dog){

} else {
	Hodor -= ( TABLE[mislead(ROWS,x,11)][foo(---( 60 ) / Ygritte)] );
	if(( Arya )){
	x -= ( -510.5 );
	x += ( ( destroy(-foo(( ROWS )),ROWS) ) );
	dog /= foo(ROWS - protect(),Hodor - ROWS,betray(( COLS )))
} else {

}
};
	-810.6
};
	( 93 )
}
assert ( TABLE[Hodor][ROWS] + ( 1 ) ) - betray(0.57,Arya) / -TABLE[COLS][1] : "What do we say to the Lord of Death?"
assert -ROWS : "One can not simply parse himself"
assert ( ROWS ) : "Fear cuts deeper than swords."
var Hodor = -x
assert COLS : "Fear cuts deeper than swords."
var Hodor = bar(( ( ROWS ) ))
var y = --0.91
var Ygritte = rule(TABLE[TABLE[-49 + x][( Hodor ) + -ROWS]][Stark],-0.08)
def protect(){
	dog -= Stark;
	y /= -ROWS
}
var y = --rule(protect(destroy()) - dog * -0.3,50.3)
assert Jon : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = ( -Stark )
def destroy(Sansa){
	( ROWS );
	mislead();
	y += foo(betray(( ROWS ),( 90 )))
}
assert TABLE[COLS + foo()][-Sansa] : "Fear cuts deeper than swords."
def protect(){

}
def mislead(){
	Stark -= ( mislead(( ( Arya ) ),-betray(-61,-ROWS * ROWS,Arya)) );
	if(destroy(Ygritte,y) / TABLE[y][y] + -23 * dog){
	if(betray(bar(),88,( Sansa ))){
	-820.95;
	Arya += -1;
	Sansa += Ygritte
};
	COLS
} else {
	if(--TABLE[ROWS][( ( ( Hodor ) ) ) + ( betray(foo(),Jon / COLS * Ygritte) ) / ( COLS ) + TABLE[destroy(mislead(( --50 )),COLS / TABLE[Ygritte][dog])][-1] * -0.97]){
	y *= protect(TABLE[Stark][foo(rule(),Sansa)]) + Ygritte
} else {
	x;
	( Stark ) * mislead(1,-0.27 / protect() - ( -23 ))
};
	x *= bar(bar(670.3007,66,y),dog) - TABLE[( ( ( rule(ROWS,destroy(x)) ) ) )][x]
};
	rule(( ( y ) ))
}
assert TABLE[-46][( -1 )] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[y][k] {

}
assert -Hodor : "Fear cuts deeper than swords."
assert bar() : "Fear cuts deeper than swords."
def betray(Stark){
	( -( -1 ) )
}
var Arya = TABLE[1][ROWS]
def TABLE[-0.98 * foo(foo(foo(Sansa)) * ( 62 ))][k] {
	if(COLS + -( Arya * ( ( betray(-0.64) ) ) / ( protect(-ROWS,-COLS / -Ygritte,betray(--( Jon ),( -( ( Hodor ) ) ),COLS)) ) - x / destroy(destroy(-0.99,0.28),0.98) / -1 - betray(Ygritte) )){
	( ROWS )
}
}
assert ( ( 16 ) ) : "Fear cuts deeper than swords."
def rule(Arya,Hodor){
	-0.98
}
def TABLE[ROWS][i] {
	Hodor /= -0.17;
	73;
	COLS
}
assert mislead(destroy(60)) - ROWS : "Fear cuts deeper than swords."
def TABLE[( COLS / Hodor )][k] {
	Jon -= -200.4;
	if(protect(destroy(),Jon)){
	if(8 / ( 59 ) + destroy(Ygritte,-0.41,-mislead(TABLE[( 0.22 )][Stark]) * -TABLE[Stark][destroy()])){
	Arya *= TABLE[TABLE[-0.03][destroy(( 16 - ( ( -610.67 ) ) ) + -bar(Arya),-( -1 ) - y)]][Stark]
}
};
	if(ROWS){
	Sansa += -foo();
	-760.408
}
}
def TABLE[( -dog )][i] {
	x /= TABLE[( -0.94 - --1 )][dog / -0.29];
	destroy(7,dog)
}
var Ygritte = Stark
def TABLE[21][j] {
	Sansa;
	betray(TABLE[mislead(( ( ( ( y ) ) ) ),mislead(--Arya,betray(rule(COLS),Arya)),COLS)][destroy(COLS,COLS) - ( x )])
}
def TABLE[---TABLE[-( Arya / ROWS )][-( TABLE[-TABLE[( ROWS * ( -0.43 ) )][( 20 )] / COLS * 0.62][foo(y)] )]][j] {
	y / bar()
}
var x = 0.91
var Jon = Arya
assert ( -destroy() ) : "Winter is coming"
var Jon = ROWS
def TABLE[TABLE[Sansa][-58]][j] {
	( ROWS );
	Stark += -320.24;
	Stark *= -( dog / 0.32 )
}
assert -destroy() + foo(Stark) : "Nothing burns like the cold."
def TABLE[Arya][i] {
	foo(-betray(foo(protect(),( ROWS ),( ROWS )) / -Sansa),( rule() ),-18);
	Ygritte /= -0.88;
	if(rule(COLS)){
	dog -= betray(( ( -protect(( -0.52 ),0.55,-76) ) ));
	Arya /= TABLE[destroy(-54,-89)][COLS]
} else {
	y *= ROWS
}
}
var Arya = -( ROWS )
assert protect(x,betray(Stark,-0.75,( Jon )) - rule(( Stark ) * TABLE[ROWS][protect(55 - ( 0.63 ))]) + ROWS) : "What do we say to the Lord of Death?"
def TABLE[---23][j] {
	if(destroy()){
	Ygritte -= destroy(TABLE[bar(--0.89 / -22 / -55,betray(destroy(Ygritte,protect(-260.7,0.63) / destroy(--0.96,ROWS * -55,dog)),( mislead(COLS,680.96) )))][1],destroy(mislead(ROWS)) - TABLE[( -87 )][Jon] + ( bar() ) - ( betray(( Stark ) * protect(y),--mislead()) )) * TABLE[y][COLS];
	y -= ( -71 );
	if(ROWS){
	y += 81;
	if(1){
	Stark;
	rule(Stark,---( -( 0.05 ) ) * 85) / -0.5 + -1;
	Arya *= ROWS
}
} else {
	Ygritte -= 990.1643
}
};
	Arya -= ( bar(( -COLS ),-55) )
}
def rule(Stark,Jon){
	ROWS;
	dog -= -570.465;
	Hodor
}
assert betray(protect(COLS)) : "What do we say to the Lord of Death?"
def TABLE[( -destroy() )][k] {
	-( TABLE[Hodor * ( Jon )][ROWS] ) * bar(rule(Stark));
	67
}
def TABLE[( ( COLS ) )][j] {
	dog /= ( --rule(-( bar(ROWS,-( -Sansa + -x * -( Stark ) * Jon - foo(ROWS * --COLS,destroy(destroy(-35 - --Stark / protect(-COLS / x,1,( 8 )) / -1),-250.738),( Ygritte )) ) * -Arya) ),destroy(Sansa / ( 1 ),ROWS)) )
}
assert rule(COLS / betray(--Ygritte - TABLE[-x][-mislead(-( rule(17,destroy(ROWS,-mislead(-TABLE[( destroy(Jon,( rule(--protect(70.751,87,-( ( -61 ) - ( -0.43 ) ) - TABLE[11 - betray(88,( ( ( 0.3 ) ) ))][protect(( bar() * Ygritte ),ROWS)]),--54 * dog,-1 + -17) )) )][COLS - ROWS],x,45),--betray() - Arya) + ( -39 )) ))]),destroy(-rule(),-( Jon )) + -protect(( rule(dog,Hodor,220.7664) ),( Hodor )) / Sansa + -mislead(0.34) / -910.3585,( COLS ) * destroy(Ygritte,-950.41,betray(--mislead() / protect(y,( ---0.11 ),y),-87,protect(mislead(rule(TABLE[( 0.88 )][-foo(( ( COLS ) ),1) / ( Jon )],11),y),ROWS,0.83)) + Sansa * -dog / Jon + 270.01 - betray(mislead(( dog ))))) : "Fear cuts deeper than swords."
def TABLE[Jon][j] {
	if(-ROWS / --0.58){
	ROWS;
	dog /= TABLE[foo(destroy(Jon,Stark),destroy())][-destroy()]
} else {
	if(Ygritte){
	if(ROWS){
	if(-ROWS){
	dog /= x;
	if(( 30 )){
	Stark;
	( -110.959 - x )
};
	Arya /= -1 + 960.288
} else {
	-320.52
}
};
	Hodor *= ROWS
}
};
	if(-42){
	if(TABLE[-1][TABLE[( -COLS - 0.48 + 0.2 + destroy(86,530.996,( ROWS / x )) + rule(foo(Sansa + rule(mislead(y),y),-COLS) * -Arya,Sansa,--rule()) ) - --18][TABLE[bar(x,-940.621,Stark) + mislead(ROWS,Arya / 4 - -1 / TABLE[63][( ( 0.22 ) ) / -1 * -( TABLE[-mislead(( ( Ygritte ) / COLS ),ROWS)][-( 9 )] ) - y - bar() / ( protect() ) + ( COLS + Stark ) - -( foo(( TABLE[TABLE[mislead(ROWS,COLS) * ( TABLE[COLS][mislead(-13 + ( COLS - --Arya ))] )][-( 91 )]][betray(( TABLE[destroy(TABLE[x][TABLE[mislead(Arya,COLS - mislead(),-COLS)][Hodor]],Stark)][destroy()] ),mislead(ROWS,0.31,-1 + 0.64),( ( ( 6 ) ) - 1 )) * 60] ),Hodor) )],bar()) / Sansa][Arya]] * bar(( Ygritte + destroy() ),-TABLE[x][-COLS])]){
	rule(-( -9 ) * 0.92,1,1)
} else {
	Ygritte /= x;
	if(561){
	if(( ( bar(Stark + COLS,52) * rule(Arya) / ( protect(destroy(--ROWS),destroy(1,250.706)) ) ) )){
	TABLE[dog][ROWS];
	TABLE[y * Sansa / betray()][COLS - -0.99]
};
	Ygritte *= Hodor
} else {
	390.5;
	Jon *= -380.8
}
};
	9
}
}
assert Hodor : "What do we say to the Lord of Death?"
assert destroy(Arya,-1,TABLE[-( ROWS )][TABLE[x][Jon]]) : "Nothing burns like the cold."
def destroy(Stark){
	-6;
	if(COLS){

} else {
	-x
}
}
var x = rule(-0.2,--0.8 - 0.59,dog)
assert COLS * -89 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = Hodor
def TABLE[--52][i] {
	ROWS;
	if(--Arya){
	if(-1){
	( y );
	y /= ( bar() - -90.01 );
	y += ( ROWS )
}
} else {
	mislead()
}
}
def TABLE[destroy()][j] {
	dog += ( -Ygritte );
	ROWS - COLS + rule(---Stark);
	if(66){
	Jon *= -0.29;
	if(TABLE[( bar(-1,dog) )][-protect()]){
	rule(-1);
	x /= ROWS
}
} else {
	dog -= Arya
}
}
def TABLE[-ROWS][j] {
	if(( ( Hodor ) )){
	Sansa -= -77
} else {
	if(ROWS){
	( ROWS )
}
};
	95;
	-( -x )
}
def TABLE[bar(--160.402 - betray(82,x / ( y ) / ( ROWS ) * 0.52),( -TABLE[COLS / 22 * ROWS][-83] ))][k] {
	Sansa += 11
}
var Stark = 0.46
def bar(Stark,Ygritte){
	destroy();
	Hodor /= COLS
}
def TABLE[13 * Hodor][j] {

}
def TABLE[Hodor * Ygritte][k] {
	Arya /= bar()
}
def destroy(){
	x *= -foo(-ROWS,( ( x ) - --50 ),bar(foo(( -dog )),-410.94 * Hodor + -COLS + -0.46));
	Ygritte /= TABLE[dog][Jon]
}
assert ( ROWS ) : "One can not simply parse himself"
def betray(){
	if(betray(Arya)){
	-1
} else {
	-foo(( betray(Sansa,-650.73) / 46 ),mislead(( bar(Jon * betray(( rule(-betray(-( TABLE[( -0.78 + destroy(-1 / 1) )][TABLE[-81][Jon / ( ( betray(rule(Stark,Sansa) + -Stark,bar(-( -0.35 ) - ( -600.3737 ) * -55 - foo(Sansa,foo(-Jon,COLS)),490.199),y) ) )]] * Sansa ) * Stark,1)) ),---x + -Stark),TABLE[Arya][rule(dog + ( Ygritte + ( COLS ) * ( TABLE[( ( -COLS / TABLE[( COLS )][TABLE[Hodor][COLS]] ) + rule(ROWS) / -1 * bar(ROWS,COLS) )][rule()] ) ),Arya,65)]) ),0.57),( ROWS )) * COLS;
	if(ROWS){

} else {

}
};
	Stark /= 1
}
def betray(){
	Hodor /= Jon;
	foo(TABLE[Stark - ROWS][COLS]) / destroy(rule(Hodor)) + -0.76;
	if(ROWS){
	y -= ( destroy(79,Hodor) * rule(betray(y)) );
	if(dog){
	betray(1,250.24);
	if(Arya){
	if(-rule()){
	x *= ( ( mislead(-56 + -24) ) * Hodor - ( mislead(Stark,Stark) ) );
	Ygritte /= Stark / ROWS
};
	dog -= -( 0.52 );
	x /= -dog * Sansa
} else {
	Stark += ( 660.88 )
}
};
	if(( ( TABLE[94][-foo()] / TABLE[20.2493][protect(76,-48)] ) )){
	if(22){
	Jon += betray(-destroy(Stark,betray()) - mislead(-1,( y ),--140.5613));
	dog *= protect(dog,( ( 200.4366 ) / TABLE[-COLS][-rule(-28,ROWS)] + Arya ))
} else {
	-mislead(57)
};
	if(-bar(Ygritte) * bar(TABLE[-220.84 / Stark][--ROWS])){
	if(Sansa){
	if(COLS){

}
} else {

}
} else {
	if(Ygritte){
	Hodor += -( y )
} else {
	( y )
}
}
}
} else {
	dog /= -1;
	if(Jon){

} else {

}
}
}
def rule(){
	-0.75;
	Stark *= Arya;
	if(( -0.15 )){
	y *= -TABLE[Hodor][y] + Stark - COLS
} else {
	-( Stark );
	Hodor += protect(TABLE[mislead(-0.6) + destroy(mislead(ROWS),-0.21) * -480.8][( ( -1 ) )])
}
}
var Hodor = bar(TABLE[( foo(Sansa + foo()) )][Stark],destroy(-mislead(-x,-25,COLS - ( dog )) + destroy(),rule(foo(( ( Arya ) * -bar() )),--36)),COLS)
def TABLE[( Ygritte ) * dog][j] {
	Jon += betray(-19)
}
assert mislead() : "What do we say to the Lord of Death?"
var x = ( -Sansa )
var y = TABLE[-TABLE[-Arya][--660.32]][TABLE[24][Ygritte - ( -destroy() * ( -84 ) )] / ( --73 * 720.16 )]
def TABLE[COLS][i] {

}
var Sansa = ROWS
var y = TABLE[-21][-0.86]
assert TABLE[protect(1 - Stark) - Arya][x] : "One can not simply parse himself"
def TABLE[Arya][j] {
	Jon *= --0.07;
	Sansa * bar()
}
def rule(){
	y
}
def destroy(y){
	y += Hodor;
	COLS
}
var dog = protect(protect(),Stark * -0.52)
def bar(Arya,Stark,Ygritte){
	Ygritte /= COLS;
	if(COLS){
	-76
}
}
assert 2 * -Ygritte / TABLE[rule()][0.52] / TABLE[ROWS][( TABLE[-ROWS][betray(-COLS,COLS) + rule(x - COLS - ( -0.47 ) + -0.57 * ( TABLE[( destroy(--74 - ( ( -TABLE[-rule(62,TABLE[--( -mislead(29,rule(TABLE[810.634][y],( foo(( ( -dog * -foo(-( --rule(1,Hodor) * x + Jon )) / protect(betray(66)) + -0.43 ) )) ),--( ---300.54 )),-TABLE[( bar(82) )][-Sansa]) )][--y * Ygritte])][Sansa] ) )) )][-y + ( y ) + -COLS] )) / TABLE[TABLE[ROWS - -19 - ( -x )][ROWS]][Stark]] )] : "Fear cuts deeper than swords."
def mislead(Hodor,Arya){
	protect(0.27 + -foo(-COLS / ( ( COLS ) ),Hodor,Hodor + ( ( COLS ) )),betray() / destroy(-0.19)) / mislead(Sansa) + TABLE[( -ROWS ) * rule(87) - ( -( -85 ) ) + COLS][Arya] / ( ( x - bar(-( --( -0.79 ) - COLS + ROWS / COLS - Ygritte / --dog ) - y) ) )
}
var Sansa = rule(-0.28,-0.07) + ROWS
def bar(Arya,Hodor){
	y /= COLS;
	Hodor /= TABLE[COLS / -( -18 )][0.75]
}
def betray(Hodor,Hodor,x){
	x *= Sansa;
	bar(COLS,ROWS)
}
def TABLE[COLS][i] {
	if(( ( TABLE[-( 1 )][COLS] ) )){
	dog + Stark - -destroy() / COLS
}
}
def TABLE[-91][i] {
	-0.46
}
def protect(Jon,Jon,y){
	if(TABLE[1][-0.62 / destroy()]){
	if(rule(-0.32,( -19 ))){
	if(78 / -dog){
	Stark *= ( Hodor );
	if(-ROWS){
	if(-67 * ( COLS )){
	if(1 - dog){
	TABLE[TABLE[-0.1][---protect(-betray(TABLE[-destroy()][--( ROWS )]) + ROWS,-( -protect(TABLE[protect(-0.93,Jon)][Sansa],( protect() ),destroy(rule(( Stark ),--0.14) + TABLE[( -foo(( --230.2 )) - Stark ) * ROWS][-ROWS],x)) ))]][COLS];
	Hodor - COLS
}
} else {
	( 66 );
	if(-1){
	if(-0.25){
	if(( ( TABLE[-Ygritte][-Ygritte] ) )){
	destroy() + -dog;
	Ygritte *= betray(-( COLS ),-( y ) - ( ( ( 50.026 ) - --8 ) + 0.72 + 1 + Arya ))
} else {
	Stark /= COLS;
	0.75
}
} else {
	if(Sansa){

}
};
	if(rule(betray(( bar() )),betray(Sansa + bar()))){

}
};
	if(( 0.38 )){
	if(( TABLE[ROWS][bar()] )){
	if(protect(-0.91,dog)){
	Hodor += -69 / ROWS
};
	Ygritte -= --y
};
	Stark /= -betray(( Sansa ) / destroy(mislead(COLS + rule(y)),( -57 )) * ( ( -1 ) ),( ( -TABLE[TABLE[rule(-Hodor) / ( 360.1455 * 28 )][TABLE[-( destroy(Arya,-Ygritte - 0.32) )][-TABLE[--Arya][25] * -89]]][( 0.59 )] / betray(Hodor,Hodor,rule(( -TABLE[Jon][( -( y ) )] ),( Ygritte ) + ( y ),Stark)) ) ));
	( -45 )
} else {
	if(Sansa){
	Ygritte *= -( Ygritte );
	if(bar(73,ROWS + rule(x,Arya / -Ygritte))){
	Jon;
	0.31
} else {
	x /= Hodor;
	TABLE[-Stark][( ROWS )]
}
};
	Jon -= 1;
	if(-0.64){
	-0.41;
	if(-50){
	y *= -( -ROWS - ( COLS ) ) / ( -20 )
};
	if(-( ROWS )){

}
}
}
};
	Jon *= -92
} else {
	if(betray()){
	Ygritte *= -72
} else {
	Stark
};
	( bar(0.01,COLS,5) )
}
}
};
	-1;
	COLS
} else {
	if(TABLE[ROWS][0.25 - ( Hodor )]){
	Ygritte /= -830.492;
	x /= betray(-0.01,--67)
} else {
	if(destroy(-( ( -ROWS ) * 0.68 - ROWS * -bar(-1 + ( COLS ) / -830.0346) ))){

};
	if(Stark){
	-ROWS - ROWS
} else {
	dog += protect()
}
};
	-29
};
	if(( protect(---( ( Ygritte ) ),Ygritte,Arya - protect(( COLS ),--x,-( dog ))) )){
	TABLE[dog][Sansa]
}
}
var Sansa = -0.06
def TABLE[-TABLE[( COLS )][( Sansa ) + ----dog + protect(-( -0.03 ),COLS,-( destroy() ) + Hodor)]][i] {

}
assert mislead(--0.75,( Sansa ),TABLE[bar(( 0.21 ))][( 0.62 )]) : "Winter is coming"
def TABLE[TABLE[destroy(x,-330.4 - ( TABLE[Jon * betray(ROWS,-0.77)][0.17] / ( COLS ) ) * -( --89 )) + bar(( protect(Stark,y) ))][COLS]][k] {
	if(dog){
	x -= bar(protect(-( Arya * -550.39 ))) / -220.5815 - mislead(betray(-78 / ( TABLE[COLS][--protect(protect(0.13,rule(),( ( Hodor ) )),destroy(( -( destroy(foo(( -860.1949 / -220.5 ),Jon),Hodor,-10) ) ),betray(COLS)),( -0.12 * dog )) * -COLS] ),Stark));
	Ygritte /= -0.16
};
	Ygritte /= -1;
	if(rule(-ROWS + -bar(( ( destroy(ROWS,ROWS + Ygritte + Hodor,-rule(y,---0.67)) ) ) - -rule(-( 67 ) + ROWS)),TABLE[ROWS][1])){

}
}
def TABLE[-1][j] {
	--TABLE[-1][COLS];
	if(x){
	if(-rule(ROWS)){
	--25;
	COLS
} else {
	-( ( 320.957 / -protect(ROWS,--( 1 ),740.5) ) )
}
} else {
	dog /= -( -1 ) + -( -69 )
};
	if(protect(63)){
	Hodor += protect(-27)
}
}
def TABLE[Stark][k] {
	foo(( protect() ),( -0.28 )) - -0.79;
	if(( TABLE[-0.18][-280.064] )){

} else {
	if(( protect(--1,--( ( destroy() ) )) )){
	if(-1){
	Arya -= COLS
};
	dog /= ( bar(COLS,( -COLS )) )
} else {
	Sansa *= destroy(betray(-24 / ( ROWS )),dog)
};
	if(-mislead(-220.621,COLS) - ( ( Stark ) ) * Hodor){
	TABLE[COLS][ROWS];
	( -1 )
} else {
	x += Jon
}
}
}
def protect(Arya){
	if(TABLE[0.14][COLS]){
	if(-rule(-y,COLS - Sansa) - 0.26){
	if(TABLE[y][0.68] * rule(( Sansa + 0.46 - -Arya - -84 - rule() )) * dog){
	if(-870.78){

} else {
	Stark += -1;
	dog
}
} else {
	-0.93
}
};
	Hodor += -34 - ( -destroy(-( mislead(foo(-0.92)) / -36 ) * 65,-Ygritte,-Ygritte) );
	Stark -= -Hodor
} else {
	if(0){

} else {
	-foo();
	ROWS + Stark * -890.38
};
	( mislead(Hodor,Stark) )
}
}
def TABLE[Ygritte][j] {

}
def betray(Ygritte,x){
	Arya
}
def TABLE[---bar(-betray(COLS,-44,dog))][k] {
	if(( ( ( ---( -0.64 + protect(( -x + rule(-COLS) * bar(dog,destroy(foo(),x)) - TABLE[( --Sansa ) / 1][( -----( 1 ) / -1 + destroy() )] + -77 + ( ( ( TABLE[mislead(ROWS)][Sansa] ) ) ) )) ) - destroy(Arya) + -1 ) ) )){
	Ygritte += ROWS
} else {
	--( bar() ) + x;
	dog /= ROWS
};
	Stark += ( ( -160.442 ) )
}
def protect(dog){
	Arya -= TABLE[1][( TABLE[( 96 )][rule(-( ( ( betray(58) ) * -13 ) ))] )]
}
def TABLE[COLS][k] {
	if(-mislead(-0.57) + -0.07){
	if(( COLS )){
	y += ( 1 ) - --51;
	ROWS;
	( ROWS )
} else {
	x
};
	-Jon
} else {

}
}
def TABLE[protect(( Jon ) * -1 - -betray(( Sansa ),( bar(-41,-65) )) + dog / 1 - -0.62 / ( y ) * mislead(18,( ( ( y - 1 ) + bar(TABLE[Arya + COLS][-COLS + rule()] / -1) ) ),dog) - ( TABLE[TABLE[( foo() )][Jon - betray()]][protect()] ))][j] {
	580.1
}
def betray(Hodor){
	Ygritte -= ( -( ( -( destroy(( 0.1 ) - Sansa) ) ) ) );
	if(foo()){
	Stark += COLS;
	if(Sansa){

};
	x *= x
}
}
def mislead(dog,Sansa,Hodor){

}
var Jon = ( destroy(( Stark ),( Arya / ROWS )) )
var Arya = protect(-74,-1)
def TABLE[-0.42][j] {
	Ygritte *= ( Stark );
	if(( -Ygritte * -0.94 )){
	if(--0.79){
	Sansa /= Jon
};
	if(foo(( 1 * Jon ),-ROWS)){
	Stark *= COLS;
	if(destroy(mislead(----1 + -65 - ( ROWS )) + 35)){
	( betray(rule() / Jon + TABLE[TABLE[ROWS][( rule(ROWS) )]][( ( ( Jon ) + TABLE[x][( Jon )] ) )],( 77 )) ) / Jon;
	Ygritte -= ( TABLE[protect(-ROWS)][TABLE[TABLE[foo(protect(bar(COLS / COLS,mislead(( Jon ),rule(betray(),( ROWS ),-Stark))),rule(mislead(-rule(ROWS,--ROWS - Ygritte * 0.96))) - bar(820.34)),ROWS)][Arya] / x + foo(x) + Stark][-1]] );
	if(1){
	ROWS;
	if(Stark){
	Sansa -= 71;
	Arya /= -1
};
	if(( ( ( ( bar(x - ( ( Ygritte ) ),Stark + Arya) ) ) ) )){
	Ygritte + Sansa;
	if(TABLE[y][x]){
	if(( Sansa )){
	if(( --( foo(bar(Jon)) ) / ( -0.3 ) )){
	mislead(( -( COLS / 210.2 - dog ) ),dog)
}
};
	Hodor
} else {
	bar(destroy(( 48 ),0.25 + ROWS - ( protect(ROWS,TABLE[COLS][x] + Hodor + TABLE[74][Jon],COLS) ),Ygritte));
	1;
	x -= TABLE[( foo(Jon) )][TABLE[( Jon )][-0.35]]
};
	Ygritte -= ROWS
}
} else {
	ROWS * ROWS;
	if(ROWS){
	if(-ROWS){
	x += mislead(TABLE[-920.57][-Hodor])
};
	x *= y
}
}
} else {
	if(( 200.162 / protect(COLS,-mislead(( COLS )),y) + Arya ) * Stark){
	Stark += ( Arya );
	Jon *= -destroy(rule(),16 / -200.1346)
};
	Jon
}
} else {
	Sansa *= COLS;
	if(COLS){
	Stark *= -( -ROWS + -0.64 / 47 * COLS / ( ( ( ( ( -0.83 ) ) ) ) ) )
}
}
} else {

};
	protect(TABLE[Ygritte + ( -1 )][( foo(protect(( foo(-COLS) )),-1,-TABLE[ROWS][Stark]) )] / TABLE[( dog )][ROWS],x)
}
var Sansa = ( 1 ) / -destroy(bar(COLS),-760.63,Hodor / Ygritte * 71)
def bar(Sansa){
	( -0.33 )
}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[1][i] {
	if(1){
	y += ( 790.779 );
	if(betray(dog,Hodor / Jon,foo())){

} else {

}
} else {
	( -y )
}
}
var Hodor = -640.2 - ( -TABLE[( y )][bar(mislead(Ygritte + bar(10),1,-TABLE[bar(( ---0.03 / Arya ),betray(( Hodor )))][1]),betray(-0.54,-destroy(mislead(( 58 ),ROWS + ROWS,COLS),TABLE[99][( 0.96 )])) + TABLE[TABLE[( -0.65 )][-rule(ROWS,ROWS)]][Ygritte - 43],-1)] )
assert COLS : "Nothing burns like the cold."
var x = 51
def TABLE[--55][j] {

}
assert ( ROWS ) : "One can not simply parse himself"
var Sansa = ROWS
assert Arya * ( destroy() ) : "What do we say to the Lord of Death?"
var Ygritte = TABLE[Ygritte][ROWS] + -TABLE[Arya][Sansa] * -( Ygritte + -870.65 / dog * COLS ) - -Ygritte
def TABLE[Sansa][i] {
	---Ygritte;
	Arya;
	Sansa /= ROWS
}
def protect(Hodor,Hodor,Ygritte){
	x /= ( -protect(( -1 ),720.18,1) )
}
def rule(){
	if(-( 60 )){
	Ygritte *= Jon;
	Ygritte /= ROWS
} else {
	if(( ( ( Arya ) ) )){
	( --rule(( ( Jon ) ),-foo(--9) - -82) );
	if(Jon){
	if(betray()){
	Ygritte /= --870.08
};
	if(-COLS){
	if(( x / -12 + TABLE[-23][-Ygritte] )){

} else {
	Hodor *= mislead(( -1 ));
	y -= COLS
};
	x /= ---( COLS )
} else {
	-70;
	-Stark + dog
}
}
};
	y += Ygritte
};
	ROWS / ROWS
}
var x = COLS
assert ( TABLE[Jon][y] ) : "One can not simply parse himself"
def TABLE[dog][j] {
	if(( -bar(( 1 ),Jon,Arya) ) + COLS - -Stark){
	if(TABLE[-77][COLS]){
	TABLE[80][-0.56]
} else {
	Arya /= destroy(dog)
};
	-1
} else {
	Jon += bar(-Ygritte * -bar(rule(( COLS ),COLS,-rule(-1,destroy(-80,TABLE[COLS][-y],-0.87 - 57 / -Arya * rule(-betray() - TABLE[--0.21 + 12 + ( ( Stark ) * -bar(TABLE[-COLS * COLS][-( Hodor )]) ) / 0.21][COLS] - --0.54 + Jon) + --Hodor) - -1) * Sansa) * ( bar(-0.9,-Sansa - ( x - mislead() )) ),mislead(( Stark ) + ( y ) / Jon,foo(TABLE[COLS][-1],1))) + Stark + ( x ) - mislead(-9,ROWS) + mislead(0.97,bar(COLS),( -1 )));
	-rule(Jon / -mislead(( -( foo() ) * destroy(betray(( ( dog ) / Ygritte ),destroy(( 1 ),--0.54),( -COLS )),Stark) / Arya * ( COLS ) + protect() ),ROWS))
}
}
def betray(){
	if(COLS){
	if(-( Jon )){
	Sansa += ( ROWS );
	if(dog * destroy(( bar(1) ))){
	y -= bar(TABLE[COLS][Hodor]) - TABLE[27][-betray(-1)] - COLS
}
}
};
	if(bar(TABLE[-TABLE[-( Hodor )][( -22 )]][( mislead(150.516,( ( destroy(Ygritte) ) )) ) - ROWS],bar(--y * COLS + protect(-21),TABLE[-1][-TABLE[-( COLS )][Stark]],( ( bar() ) )))){

} else {
	-x;
	protect()
};
	( ( 1 ) )
}
assert -29 : "One can not simply parse himself"
def betray(Hodor){

}
assert ROWS - ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[TABLE[-( Hodor * bar(( -ROWS )) )][protect(bar(dog))]][i] {
	COLS;
	( 84 );
	if(TABLE[dog][foo(bar(foo() / betray(-Hodor)),Sansa)]){
	if(betray(--0.79)){
	Stark -= ( -ROWS );
	rule(-COLS - COLS)
} else {
	Jon -= TABLE[-Arya][-44]
};
	dog -= -880.34;
	if(1){

}
} else {
	if(foo(foo(( foo(59,-Stark,-( TABLE[0.93 + ( ROWS )][0.72] )) ),-ROWS,130.531))){
	if(TABLE[-TABLE[bar(x)][-( COLS ) * TABLE[-0.51][39] / -( Hodor )]][-Sansa * Stark]){
	( ( ( -0.63 ) ) - COLS );
	betray(TABLE[TABLE[bar(destroy(-Jon),Ygritte)][Sansa]][-bar()],TABLE[-TABLE[1][( TABLE[x][Stark] )]][-0.54],( 0.79 )) * -TABLE[-Sansa][-TABLE[TABLE[-mislead(-100.11,( 0.78 ),65)][0.7]][--1] + -1]
};
	x *= ( dog );
	( Ygritte + Hodor )
} else {

}
}
}
def TABLE[-Jon / COLS * destroy(TABLE[dog][-( ROWS )])][i] {
	Sansa /= mislead(( -COLS - ( destroy(TABLE[-TABLE[( foo(-( Hodor )) )][TABLE[( TABLE[-x - ( TABLE[rule(ROWS)][Stark] )][bar(-protect(COLS + 15 / -( COLS + COLS ) / protect(),Stark,betray(TABLE[( -55 )][( Ygritte )])),bar(-1,dog))] )][( Arya ) - ( 0.57 + dog )]]][TABLE[Stark][( Stark ) + x]],Sansa) ) )) - 0.28;
	x -= protect(COLS,0.51);
	if(( ROWS + -0.22 )){

} else {
	Arya += Arya
}
}
def betray(dog){
	y += ---COLS
}
def betray(){

}
def mislead(y){
	if(-( -protect() )){
	Jon *= ( COLS );
	Jon /= ( 870.572 );
	if(( Jon )){
	Hodor - betray(destroy(x));
	Arya *= bar(ROWS)
}
};
	Arya += -0.31 - -30;
	betray(-ROWS)
}
def protect(dog){
	-( Arya )
}
def foo(Jon){
	betray(-440.2176);
	y /= -1;
	if(rule(COLS)){
	-1;
	if(-destroy(1)){
	betray();
	0.55;
	betray(COLS,Hodor)
}
}
}
assert 1 : "One can not simply parse himself"
def foo(){
	if(ROWS){
	if(ROWS){
	dog += mislead(COLS,--1,COLS);
	if(( foo(840.461,ROWS) )){
	Stark /= foo(0.89,( 310.2 - -protect(-dog) )) + protect(-110.73 + y,-0.13,--TABLE[-0.1][Jon - rule(( 18 ) * ( Arya * Stark - -mislead(Sansa,Arya,x) / -TABLE[destroy(-870.708 + ( bar(-( Hodor )) ),( Arya + Sansa / mislead(Stark,-betray(Sansa) / -68) ),-TABLE[Sansa / 95][870.683]) + ( Hodor ) / bar(36,COLS)][( destroy(bar(),-0.41) - rule(( 1 ) * Stark,--TABLE[( foo(( betray(( ( --( 46 ) / Sansa - ( 1 + foo(-COLS,Hodor,ROWS) ) - ( -y ) * 1 ) ),ROWS,COLS) )) )][dog] + 0.68,1) * y - ( TABLE[TABLE[-34][( -1 ) / Stark / -0.67 - ( -( ( ( -68 + 620.3526 ) ) ) + -dog )] - 68][y] ) ) - destroy(( Arya ),( -60 ) - betray(mislead(TABLE[dog][-ROWS])) + -x) - dog] / COLS ))]);
	-0.17
} else {
	if(COLS){

}
}
}
};
	-ROWS
}
def protect(){
	dog -= ROWS
}
assert COLS : "Winter is coming"
def TABLE[Arya][k] {
	foo(rule(0.56,Sansa,820.7),Jon,1);
	if(-( x * ( -ROWS - -protect(--0.4,TABLE[ROWS][-TABLE[-( -Arya )][x]],rule(ROWS / Ygritte,x)) * 77 ) ) * 19 - --destroy(---COLS)){
	dog -= ( COLS * Sansa );
	if(50){
	if(Jon + ( ( -0.87 ) )){
	Ygritte -= Jon
} else {
	if(( ( mislead(-mislead(rule(Jon,( ( ( ( ( ROWS ) ) ) ) + 94 + Jon )),-61 / rule(),foo(-0.48)),--0.08) ) )){

} else {
	dog /= -COLS
}
};
	Arya += ( -1 ) / ( bar(COLS) );
	Hodor += ( -30 ) - destroy(COLS,TABLE[foo(( -Stark ))][-36],-Jon)
} else {
	destroy(-( -( mislead(foo(-( Hodor ))) + bar(-0.4) ) ) + ( bar(protect(-0.05,Stark,780.3117),Hodor) ))
};
	if(mislead()){
	if(Hodor){
	if(COLS){
	ROWS;
	Arya += TABLE[betray()][x]
} else {

};
	Arya *= x
};
	if(Arya){

}
}
} else {
	y -= protect(x) + TABLE[COLS][( -15 )]
}
}
assert ( -protect(ROWS / y) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(x){

}
assert betray(-( ( 8 ) / Arya / ( ( -790.109 ) ) ),x) : "Winter is coming"
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = -0.64
def foo(dog){
	y += betray()
}
def TABLE[COLS + ( -COLS ) + -0.57][k] {
	if(COLS){
	Sansa /= ROWS;
	y *= TABLE[Stark][TABLE[( bar() )][( rule() )]]
}
}
assert ROWS : "Winter is coming"
def betray(Ygritte){

}
var Jon = COLS
def betray(Jon,Arya){
	if(foo()){
	y /= -0.41
};
	Hodor /= ( -0.23 );
	y += ( bar(ROWS) - COLS )
}
var dog = COLS
def betray(Arya){
	if(TABLE[-38][dog]){

} else {

}
}
def foo(){

}
assert TABLE[92][1 / Jon] : "One can not simply parse himself"
assert COLS * TABLE[-Hodor - TABLE[betray(620.3)][( ROWS )]][-( -0.85 - -Ygritte + -60.053 / destroy(-0.3,Jon,COLS) )] : "Nothing burns like the cold."
def rule(Hodor,Ygritte){

}
def TABLE[Sansa][j] {
	( -71 );
	if(-COLS - -ROWS * foo(protect(Ygritte,--0.03 + -0.4,Ygritte) / ( ( y + 85 * -betray(-0.53 / Arya,x,TABLE[bar(ROWS)][betray(foo(dog,ROWS,COLS + -1 * Ygritte),dog,y)]) ) * -1 ),( 70.533 ),COLS)){
	if(-68){
	Stark
} else {
	if(-TABLE[ROWS][betray(( ( -0.34 ) + Jon * ---0.52 * betray(-Arya * TABLE[( rule(COLS,-55) )][89]) - -betray(TABLE[91][dog + --48 + -Stark * protect(COLS,y,COLS)],destroy(),Jon / foo(ROWS + --protect(0.26,foo(Ygritte,-Jon,Stark - 1)))) ),-TABLE[Jon][TABLE[COLS][-dog] - foo(TABLE[protect()][rule(--( x ) / y)],-( --0.43 ) - COLS,-45)])]){
	destroy(( ( -22 ) - -foo(-( ( COLS ) ) * Hodor / -1) ))
};
	if(protect()){
	if(TABLE[-0.53][--( -mislead(--Ygritte,-( ( -y ) / 53 ),TABLE[bar(TABLE[COLS][COLS])][COLS]) ) * 0.77]){
	( 1 )
} else {
	dog *= -19;
	if(-Jon){

}
};
	Ygritte -= protect(( ( ( ( bar(( rule(x,y * ( foo(-660.94) ),--15) ) * ( Sansa ),y) ) + -98 ) ) ),ROWS)
} else {
	if(rule() * ( TABLE[y][( ( ( destroy(Sansa,TABLE[( protect(--( -Arya / -( --900.397 ) * foo() + protect(COLS,( Sansa ),-( x )) )) )][x]) ) ) ) - ROWS] ) + ( Jon ) / ROWS + ( -66 ) - dog){
	Jon
};
	if(-( -390.865 )){
	x *= ( dog )
} else {
	y -= ---COLS / dog * -100 + --0.01
}
}
};
	( ROWS );
	foo()
} else {
	if(bar(1 / COLS,( protect(foo(-bar(-12)),COLS) ))){
	Hodor /= ROWS
}
}
}
def TABLE[0.07 / -0.07][j] {
	if(COLS){
	--97 + Sansa;
	-( protect() );
	if(( -ROWS )){
	if(( TABLE[-67][Sansa] )){

};
	if(( Arya )){
	if(Sansa * --Sansa){
	if(( -19 )){
	Ygritte /= destroy(( ROWS ),ROWS);
	Jon /= ( TABLE[-betray(( ( ROWS ) ),-ROWS - destroy())][( --0.13 )] )
} else {
	if(50.545){
	if(COLS){
	if(-rule(100)){
	Arya /= ( Sansa ) - ( -1 )
} else {
	betray(-TABLE[x][rule(Jon,( ( mislead() ) ))]);
	Stark -= dog;
	-71
};
	if(-0.25){
	if(-870.084 - Hodor){

} else {
	Jon /= TABLE[( mislead(Hodor) )][( -1 )];
	Jon;
	if(98){
	y += Hodor - -betray(( TABLE[ROWS][COLS] ));
	TABLE[Ygritte * TABLE[-Hodor / -18 - -47][foo(Jon)]][Stark];
	Ygritte += protect(betray(foo(-Jon - rule(-0.51,-0.16) / TABLE[rule(bar(Sansa))][-1]),betray(COLS,Arya - COLS + ROWS),( Hodor )) * rule(-0.19 * dog),foo())
} else {

}
};
	Arya + COLS
}
}
}
}
} else {

}
};
	ROWS
} else {

}
} else {
	( ( Ygritte ) );
	( -1 );
	dog += bar(dog,( rule() / dog ))
};
	y /= -41 / ( protect() );
	Ygritte /= ROWS
}
var Arya = ( ( TABLE[( 17 ) + rule(( --COLS )) - COLS][( mislead(-bar(mislead(-( Jon ) + bar(),( -y )))) + 67 )] ) + -foo(---0.59,( COLS )) * ( ( -rule(-TABLE[ROWS][-dog],0.23,-mislead(( ( ROWS ) ) - ( Hodor - protect(betray(1,( -0.76 )) + --COLS,destroy(),COLS) ))) / rule(Sansa,bar(-1,TABLE[--ROWS][Hodor])) ) ) )
def mislead(Ygritte){
	if(( 33 )){

} else {
	Hodor -= Hodor;
	Hodor
};
	if(( -1 )){
	dog /= TABLE[destroy(ROWS,protect(-0.83 + y) * Sansa,ROWS)][--protect(( ROWS ),ROWS * --( x ),-Ygritte)] + protect(Hodor / -COLS,Jon)
} else {
	Hodor *= -94;
	if(Hodor){
	x *= ( -COLS );
	( 36 ) * 98
};
	( ROWS )
}
}
def TABLE[( ( bar(ROWS,Stark,-1) / -( 0.85 ) ) )][k] {
	protect(Stark,( y ),Arya);
	Sansa -= Sansa
}
assert ( ( ( ( dog ) ) ) ) : "Winter is coming"
def bar(Sansa){
	if(bar(-( ( -550.55 / Ygritte ) )) - protect(x + Arya,( Stark + Sansa ))){
	if(( betray(( COLS ),( -0.75 ),0.56) )){
	Sansa -= 960.904 + 0.09 / COLS
};
	TABLE[--0.2][( ( ( -20 ) ) )]
};
	if(( 1 )){
	if(rule()){
	y
};
	Arya -= dog;
	Sansa += x
}
}
def protect(Arya,dog,x){
	( destroy(betray()) / 1 ) - COLS;
	if(TABLE[-1][TABLE[-0.33][73]]){

} else {
	( 4 )
}
}
def protect(Sansa){
	foo(( TABLE[dog][COLS] ) - bar(( bar(destroy(-ROWS / 910.7792 - ( protect(TABLE[betray(Ygritte,x,( Ygritte / 74 ))][1] + ( mislead() ) - ( 72 + COLS ) * x) ),( ( ( ( dog ) ) ) ),COLS * -15),Jon - Sansa + ( x )) ),--( --0.02 ) / foo() * ( Jon ),-1 - -96),ROWS);
	if(Arya * 0.67){
	Jon *= Stark
} else {

}
}
def destroy(x,dog,Jon){
	if(rule(( ( dog ) ),TABLE[foo(ROWS,Arya)][0.29] * 49)){
	if(x){
	if(-TABLE[( rule(bar(-foo(rule())),rule(-TABLE[---Sansa][-foo(ROWS)] / -930.06 * 60.201 * ( -Stark + ( ROWS ) )),dog) )][-0.24]){
	COLS;
	if(( betray() )){

} else {
	TABLE[TABLE[( betray(TABLE[( ( -ROWS ) - -x )][-COLS],-( -0.3 )) )][0.07 / bar(destroy(),Sansa)]][Stark * -4];
	Ygritte
}
}
};
	if(protect(COLS)){
	-0.11;
	Sansa /= -0.8
} else {

};
	if(destroy(x)){
	Sansa / Jon;
	x /= ( ( COLS ) );
	rule(Arya,( 73 ),foo())
}
};
	Sansa /= Stark - ( --Arya );
	y *= protect()
}
def betray(){
	dog;
	Ygritte
}
def TABLE[rule(-0.58) - destroy(ROWS,-TABLE[Arya][foo(-x,-Sansa - TABLE[-0.82][x],betray(( dog ),betray(( foo(Arya,0.9) + 560.7641 ),destroy(-0.03 - ( 0.01 ) - ( TABLE[----1][TABLE[( ROWS )][-0.74 - TABLE[-ROWS][-0.15 * -96]]] ) * -0.26 + TABLE[rule(-TABLE[( --COLS )][-260.1592 / -290.198],TABLE[( ( ROWS ) )][Arya],foo(0.92 + ROWS * -destroy(( ( foo(rule(17),--( Sansa ) - -( -x * Ygritte ) * TABLE[Sansa][( protect(bar()) )] - protect(22,rule(protect(( -Jon - bar(ROWS,COLS) * mislead(-15,ROWS,-( COLS ) - protect(-( destroy(bar(ROWS),75 * 54) ),( -( -( ( 73 ) ) ) ) / rule(( -TABLE[protect(( TABLE[COLS][1] - ( mislead() ) * destroy() ),COLS * Hodor,-y - x)][0.74] )))) )),TABLE[TABLE[Sansa][ROWS]][COLS * dog],x),--33) * 35 - -1) / -COLS ) + ( Stark ) )),-1,Jon))][mislead()],61) + -1),( Sansa ) - -3))])][j] {
	if(-COLS){
	Arya += betray(betray(-( -0.11 ) / ( -betray(TABLE[dog * ( TABLE[COLS][-0.59] ) + -0.74 + ( Arya )][TABLE[( Stark )][0.02]]) ),Stark));
	Arya += ROWS
}
}
assert 0.58 : "What do we say to the Lord of Death?"
assert Arya : "One can not simply parse himself"
assert betray(-660.597) / -44 : "Winter is coming"
var Arya = rule(mislead(( -1 ),mislead(Jon,-Arya)),COLS / 88,( protect(-( ( --0.76 ) ),Arya) ))
def TABLE[-74][k] {
	dog -= --0.89 * -( foo(ROWS) );
	if(-36){
	COLS
} else {
	y /= Stark;
	if(-77){
	if(540.349){
	Ygritte += ---( 270.8705 ) + ROWS
} else {
	COLS
};
	x += Hodor;
	if(( -COLS - rule(-61) )){

} else {
	( Sansa );
	Stark
}
} else {
	x /= Hodor;
	TABLE[destroy(betray(COLS - ( rule(COLS * COLS - Stark + -COLS,COLS,-COLS - Ygritte + Stark) ) / --betray(ROWS,betray(-betray(x) * rule(Ygritte),y,ROWS)),dog),( 0.94 ))][COLS]
}
};
	( -( COLS ) )
}
def betray(Ygritte,Stark){
	foo()
}
def TABLE[COLS][j] {

}
assert ( ( 0.61 ) ) : "One can not simply parse himself"
assert COLS : "One can not simply parse himself"
def TABLE[( foo(-betray(( 1 ),foo(--380.4 + -( -0.36 ),-1)),( COLS )) ) / TABLE[-930.49 - --470.6208][-mislead(ROWS) / -COLS]][k] {
	ROWS;
	betray(COLS);
	if(bar(-0.69,TABLE[--( ROWS )][0.42])){

}
}
var dog = -Hodor + x
def foo(Hodor){
	if(( ( ( -mislead() ) ) )){

}
}
def TABLE[rule(Sansa,31,-COLS * ROWS)][k] {

}
def bar(Jon,Arya){
	x
}
assert TABLE[TABLE[( -Arya )][( TABLE[( Ygritte )][1 * 160.674] ) - rule(( TABLE[Stark][dog] )) - COLS]][-55] : "Nothing burns like the cold."
assert ( mislead(-foo(protect() * -0.34,ROWS)) ) : "What do we say to the Lord of Death?"
def betray(Jon){

}
var Stark = y
def foo(Ygritte){
	if(--( ( 10.306 ) ) + ROWS){
	if(betray(-( foo(Ygritte) ),( Hodor ))){
	Sansa *= COLS;
	x += dog
} else {
	if(( ( foo(-y) ) )){
	Ygritte -= Jon + bar(TABLE[( ---99 )][( ( ( 82 / rule(betray() - -( -TABLE[COLS][bar()] ) + rule(ROWS) + ( protect(bar(ROWS,betray(bar(0.07) * COLS,( bar(TABLE[-0.03][dog] * ( mislead(Hodor,COLS) ),betray(-1,-TABLE[COLS - Hodor - ROWS][Jon])) )))) * -TABLE[-Hodor - 0.61][rule(-1,destroy(rule(---( ROWS ) + COLS,-( Jon ) - betray())))] / -1 )) / Jon + ( ( ( ( -83 ) + Hodor ) ) ) ) + --( -betray() ) ) )],COLS)
};
	( -46 )
}
} else {
	x;
	if(( Stark )){
	y *= bar(COLS,-( TABLE[TABLE[-46 - -1][-( ( bar(Arya,Arya) ) ) / -rule(52,TABLE[Sansa][y])]][1 - -1] ));
	if(dog){
	-Sansa
} else {
	if(dog){

} else {
	if(destroy(--Ygritte,bar(( -740.7751 / Hodor ),ROWS * COLS),COLS)){
	Jon -= Stark
} else {
	if(dog){
	Jon -= -TABLE[-0.32][( COLS ) - COLS];
	if(dog){
	Arya;
	-( destroy() ) + Arya;
	if(750.14){
	if(foo(-protect())){
	Stark /= x;
	Arya -= -rule(Hodor - -3 / -0.48 - ( ( ( rule() * bar() ) * COLS + Hodor ) )) - TABLE[-50][-0.34]
} else {
	ROWS;
	Stark
};
	COLS
} else {
	--60.98 - ROWS - ( --1 ) * TABLE[Hodor][Jon]
}
}
};
	Stark
}
};
	( rule() )
}
};
	if(dog){
	if(ROWS){
	mislead(-1,( ROWS * --0.28 ),ROWS / ( bar(foo(6),protect(-y,-780.7,( Sansa + protect(-0.32,--( ( mislead(x) ) - -TABLE[( foo(ROWS,TABLE[-destroy(420.1)][-0.31]) ) / -protect(destroy(-1)) - ( destroy(-mislead(y - -0.43 - Sansa,foo(COLS - TABLE[-92][bar(( COLS ),Sansa) / y - 0.34],protect(90,destroy(0.82,Jon,0.12),( Arya )))),bar(-0.24),ROWS) ) * ( 0.89 ) * Ygritte][-( ( betray(-110.7 + -6) - ROWS ) )] )) ))) ));
	( mislead(( destroy() )) )
};
	if(( COLS )){
	( 0.12 )
}
}
}
}
var x = -COLS
assert mislead(x) : "One can not simply parse himself"
assert 790.88 : "Fear cuts deeper than swords."
def TABLE[Hodor][j] {
	Stark /= ROWS;
	if(0.32){
	x += 100.905
} else {

};
	Jon *= betray(-( 22 * protect(-( ( ROWS ) ) - ( rule() ),dog) ),Ygritte,( 4 ))
}
def mislead(x){
	if(( Stark ) / -69){
	y *= COLS
} else {

}
}
var Arya = Stark
var Arya = Sansa
def bar(Hodor,Jon){

}
assert COLS : "Nothing burns like the cold."
def betray(dog){
	Stark += 1
}
def TABLE[( y ) * 9 - -0.43][i] {

}
def TABLE[Stark][j] {
	y;
	( destroy(( Arya )) * ( 36 ) )
}
assert -19 : "What do we say to the Lord of Death?"
var dog = TABLE[TABLE[650.539][Ygritte]][( ROWS )]
var y = ROWS
def rule(dog){
	Arya /= 0.71;
	y += ( Jon )
}
var Hodor = Hodor
def betray(Sansa){
	if(( 0.49 ) + Jon){
	if(COLS){
	-Ygritte;
	--rule(---0.73 - 89) * -( -( -destroy() ) ) - x * bar(-880.481)
};
	76
}
}
assert protect(ROWS,( Jon ),ROWS) : "Winter is coming"
def TABLE[bar()][k] {
	-( --380.8 );
	if(( Hodor )){
	if(-----54 * foo(ROWS,Jon,foo())){
	if(1){
	-51;
	Stark += ( ( COLS ) );
	if(Jon){
	if(TABLE[Hodor][destroy(Jon + ( bar(-0.01,foo(57,( foo(-rule(COLS),--ROWS / y) ))) ) - -Stark,Hodor)]){
	-protect();
	Ygritte /= ( ROWS ) / Ygritte
}
} else {
	if(Sansa){
	Arya += TABLE[rule()][-1];
	if(destroy()){
	Arya += TABLE[ROWS][-foo(COLS)];
	TABLE[( 8 )][-TABLE[-0.9][TABLE[protect(-TABLE[( x / 0.89 )][--68 / ( ( -0.06 ) )],-dog - betray(),COLS)][( -( ROWS ) )] * x]]
} else {
	Arya += Jon;
	if(ROWS){
	if(-ROWS){

};
	Arya
}
}
};
	---betray() + mislead(destroy(-ROWS,--0.44),-1,-rule(41))
}
} else {
	x *= --protect(( destroy() / 1 + ( 36 / -210.028 ) / protect(( -79 ),( Jon + -62 * -0.35 )) ),mislead())
};
	Arya /= --0.32
}
}
}
var Sansa = --y - ( ( TABLE[Jon][0.99] ) )
def mislead(x,Hodor){

}
var Jon = ROWS
var Arya = Sansa
var Hodor = ( x - rule(-1,( mislead(Arya,( -( -COLS ) ) + -COLS) )) )
def bar(Hodor){
	if(-1){
	Stark += TABLE[bar(-x,( rule(-Sansa / -730.8093 / betray(COLS,-80),TABLE[Ygritte][-50],-( -0.53 )) ))][ROWS]
};
	if(( 1 )){
	if(protect(( protect() ))){
	if(-Ygritte){
	Stark /= Jon
}
};
	y /= Ygritte
} else {

};
	Jon -= Hodor
}
assert 20 + ---destroy(mislead(),8,TABLE[--93][-destroy(( ( TABLE[-15][Jon] ) - Stark ),--42 / ( ( -protect(( -77 )) - protect(TABLE[foo(( ---Arya / ( -foo(( Arya / TABLE[-0.07][bar(Jon,x)] ),Jon) ) - Stark + -Ygritte ),dog)][--rule(rule()) - --45],( ROWS )) ) / -( rule(Hodor,( foo(-12,-Jon) )) ) / -0.3 - 66 ))]) : "One can not simply parse himself"
assert Ygritte : "What do we say to the Lord of Death?"
assert rule(910.7) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = 73
def rule(){
	Ygritte -= Stark;
	( dog )
}
def protect(Sansa){
	COLS;
	betray(bar(destroy(rule(foo(-TABLE[-( ROWS ) / betray()][COLS] + -0.53,-0.83)),foo(TABLE[y][ROWS],-protect(--betray(Sansa),( Arya ) + protect(bar(Ygritte * ( --Jon ),Arya / ---destroy(990.74),COLS * COLS),Stark) / --300.6 - ROWS) + ROWS)) + COLS));
	-0.67
}
def TABLE[TABLE[TABLE[-bar(---1,protect())][40]][-protect()]][j] {

}
def bar(Hodor,Stark){
	Ygritte *= 96
}
assert ( COLS ) : "Fear cuts deeper than swords."
def TABLE[Stark][i] {

}
var Sansa = ( -bar(ROWS,-rule(Sansa),-1) )
def rule(y){
	if(Hodor / -Arya){
	y += Stark
};
	if(( --TABLE[( -( ( -1 ) ) - Sansa / TABLE[-( TABLE[--bar(betray(foo(bar(-290.79,y,Hodor)))) + -( TABLE[Ygritte / rule(( -1 )) - mislead(-protect(x) * Sansa)][COLS] ) * ( destroy(COLS,destroy(Arya)) )][ROWS] ) - x + -( Ygritte + --ROWS )][( TABLE[ROWS / -0.94][mislead()] ) / COLS - Stark] )][( y )] * ( Sansa ) * -170.92 + -1 - ( ROWS ) )){
	Arya;
	Stark -= -ROWS * rule(-910.38)
} else {
	Jon /= dog
}
}
var dog = -foo()
assert -TABLE[( 1 )][bar(( -( -foo() ) ),-( -0.52 ) / bar(),mislead(betray() - 580.0238 * COLS - COLS))] : "What do we say to the Lord of Death?"
def TABLE[-0.01][j] {
	if(-rule(Stark)){
	COLS;
	if(betray(mislead(dog),-( ROWS ))){

}
}
}
def betray(Ygritte){
	( -bar(( betray(TABLE[-destroy(y)][x],0.37) )) );
	( 76 )
}
def TABLE[( ( TABLE[-COLS][Ygritte] ) )][i] {
	( COLS )
}
assert COLS : "What do we say to the Lord of Death?"
def TABLE[betray(ROWS / ROWS) + Ygritte][i] {

}
def destroy(Hodor){
	Ygritte += -destroy(-( --13 ),y,Jon)
}
def protect(){
	if(( ( ( -COLS ) ) ) - -Ygritte){
	foo(--COLS);
	Sansa += Stark;
	Hodor
};
	if(( foo(( 1 ),Ygritte) )){
	if(0.11){

} else {

};
	if(TABLE[COLS][Sansa]){
	( -bar(COLS,--betray(bar(),-foo(0.79))) );
	COLS;
	y /= y
};
	-40 / COLS * ROWS
} else {
	Sansa *= ( -( rule(bar(( ( Ygritte ) ),bar(0.57,ROWS,( 22 )),bar(betray(),--COLS)),foo(( Stark ))) - Arya - protect(-foo(Jon,51) * dog) ) * ( foo(( 0.75 + protect(( -1 ),1,( 1 )) / -0.49 )) ) ) / ( ROWS + COLS )
}
}
var Hodor = 83
def TABLE[Hodor][i] {
	Stark /= COLS;
	protect(-ROWS)
}
assert -betray(rule(betray(-0.14)),bar(0.54,-bar(-0.93),foo(COLS + ( -72 ) / -ROWS))) : "Fear cuts deeper than swords."
def TABLE[Jon][k] {
	Stark *= COLS - ( ( ( --( Jon ) / ROWS - Arya ) ) * ( TABLE[bar()][-( -0.06 ) / 1 / -betray(-protect(-150.14,0.8))] ) );
	if(( foo(-62 + COLS + x / y,foo(foo(),--0.4) * Stark) )){
	Hodor += mislead(0.9287,-66 + ( 1 * Ygritte ),TABLE[ROWS][-( x ) * ( 0.66 )]);
	if(COLS){
	Ygritte -= ( Ygritte );
	x += bar(Jon,destroy() + ( rule(( Jon / ( y ) )) ) - betray(betray(TABLE[destroy(TABLE[0.41][0.84],( ( ( -COLS * Stark ) ) ) + TABLE[-25][ROWS / x * -foo(Arya,-( ROWS )) + ROWS + TABLE[COLS + Jon][TABLE[COLS][76]] + ( Ygritte )] - dog,-( x ))][80.98],protect(-430.6,betray()))),Hodor)
} else {
	Arya * betray(( ( -TABLE[--( betray() )][( -24 )] + ( 0.18 + ( -80 ) ) ) ),-90);
	if(1){
	Ygritte * --12
} else {
	if(--ROWS + Arya){
	if(-COLS / ( ROWS ) / foo(rule(( ROWS ),COLS,TABLE[Jon][bar(y)] - Hodor / --1)) - Ygritte){
	protect() / bar(-( foo(-( -87 ),TABLE[COLS * -1 * dog + destroy(foo(76),Ygritte) / protect(( foo(( -92 ) + y / destroy()) ) + -1,mislead()) + Ygritte + -73 / -7][dog]) ),Jon)
}
} else {

}
}
}
} else {
	-( rule(mislead(y,( destroy() ))) / -( 98 ) );
	x *= -ROWS - dog / ( ( destroy(rule(foo() - x - COLS,Hodor),ROWS) ) ) - ROWS
}
}
def TABLE[TABLE[betray(Hodor,( -TABLE[0.71][94] - 77 + COLS ))][( ROWS )]][i] {
	( rule(destroy(rule(Jon,COLS)),ROWS) );
	Ygritte /= COLS;
	if(0.3){
	Arya -= dog
} else {
	if(destroy() / 33){

} else {
	-0.15;
	( ( y ) );
	( -440.54 )
}
}
}
assert --TABLE[Ygritte][( foo(Ygritte,foo()) )] - Stark / x + Ygritte : "One can not simply parse himself"
var y = 83
def rule(Ygritte,Ygritte){
	TABLE[1][-0.37] / 1;
	Hodor *= bar(betray(dog,--680.67,-mislead(( dog / -110.54 ),( 0.97 ))));
	Stark /= COLS
}
def mislead(x){
	Ygritte += -25;
	Hodor
}
var Jon = -94
assert TABLE[protect(TABLE[1 - -210.6][Sansa])][Jon] : "One can not simply parse himself"
var x = 0.09
def mislead(Hodor,x,Ygritte){
	Ygritte += ( ROWS ) + bar(( TABLE[( 47 )][ROWS] ));
	if(-83 * ROWS - foo(( TABLE[protect(-( ROWS ))][--860.1758 * ROWS - -COLS] ),--69,ROWS)){
	TABLE[destroy(Stark) / ( ( ROWS ) )][--Hodor]
} else {
	Jon /= --COLS
}
}
assert TABLE[-5][ROWS] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = protect(-1)
def bar(Stark){
	x -= ( TABLE[-440.7295][rule(rule(0.91 / COLS,Hodor),Ygritte,( ROWS ))] );
	if(( Stark )){
	if(COLS){

} else {
	Ygritte += Stark
};
	-80;
	-88
};
	Arya *= betray(-( ( --720.3836 ) / bar(-TABLE[foo(dog,-420.16 + -x)][TABLE[protect(TABLE[0.66][COLS * -0.93 * mislead(ROWS + rule(( bar(Stark,bar(bar(),---Sansa - ( foo(Hodor,-0.11 - betray(betray(betray(Hodor),( 0.04 )))) ) + ( ( ( bar(TABLE[( Ygritte )][220.39]) ) ) ))) ),COLS * mislead(betray(( ( -y ) ),( 0.28 ) / 400.45 * -COLS,Arya),-bar() / -destroy(Ygritte,dog) - ( foo(betray(foo(-0.74 * 0.76 + --( destroy(( 39 )) ) / ( -Sansa ),Jon * --84,x))) ) / -x),-1 / TABLE[foo(TABLE[( TABLE[-ROWS][TABLE[( -( -1 ) - 19 )][-75]] )][destroy(bar(Jon))],Hodor)][-( x ) * 70.89]),-mislead(( -TABLE[( TABLE[Ygritte - -x][-( dog )] )][( y )] ),( 0.73 )) * destroy(x))])][Ygritte]],-y) ),bar(rule(Sansa * 32,TABLE[x][( Stark )],-63),420.908,COLS) / 0.92)
}
def foo(x,dog){
	if(-51){
	( dog - betray(ROWS) );
	destroy(bar(dog + -67,ROWS,-( TABLE[ROWS][-COLS * -bar(1)] + 0.29 )),1)
}
}
def TABLE[-87][j] {

}
def betray(Arya,Stark){
	Stark /= ( ROWS + -400.9413 * ROWS );
	if(-( COLS + ( mislead(ROWS,470.25,COLS) ) )){
	Arya /= ( ROWS );
	-55 + ( ( --protect(ROWS) ) )
} else {
	x -= 1
}
}
assert -0.04 / --protect() * ROWS - dog : "Fear cuts deeper than swords."
var Arya = ( -protect() - ROWS - -Sansa - -ROWS )
def TABLE[( -0.96 )][i] {
	x *= rule();
	if(-85 + TABLE[bar()][COLS]){
	if(( --protect(--1,COLS) )){
	-45;
	y /= -0.5
} else {
	Hodor -= 51 * Jon;
	if(-1){
	Hodor -= ( COLS );
	0.01;
	Stark *= -801
} else {
	if(-Ygritte - ( -COLS )){

}
}
};
	Hodor /= ( Hodor )
};
	ROWS
}
assert -( x ) : "Fear cuts deeper than swords."
var Arya = -490.5448 / -COLS
def mislead(){
	x *= 1;
	( TABLE[( ( -Ygritte + ROWS ) )][( ROWS )] );
	ROWS / foo() + ROWS
}
def TABLE[TABLE[ROWS][0.74]][i] {

}
def TABLE[mislead(TABLE[mislead(foo(-TABLE[-TABLE[( TABLE[-0.17][COLS] )][dog]][1 / bar(--46) - TABLE[ROWS * ( Hodor ) * rule(Arya,( 59 )) - betray()][30.7] * ( 0.05 )],( Ygritte ),-dog / Ygritte))][TABLE[( foo(COLS,25,COLS) )][Hodor]],y)][i] {
	x -= 0.65
}
def TABLE[TABLE[( Jon )][( ( ( --69 ) ) )]][j] {
	Stark -= -COLS;
	Stark /= -( -1 );
	ROWS
}
var Hodor = foo(-81 - bar(rule(31,--TABLE[-0.94 / bar(dog)][foo(x)]),-dog) - 910.9 - -1)
def TABLE[mislead(-COLS,( TABLE[x][-91] ),-Stark + -dog)][j] {
	if(-0.84){
	if(Sansa * -COLS + ( ( Arya ) ) - destroy(0.74 + -rule(Sansa) - rule(1 + --Sansa + 1 + Sansa),TABLE[( -TABLE[ROWS][ROWS] + -60 )][COLS]) + 44){
	Sansa -= -COLS;
	if(-rule(( betray(foo(),Hodor + ( --( x ) ),( 0.67 ) - 1) ),Jon)){
	betray(-( ( 330.11 ) ),ROWS * ROWS * -98);
	x -= betray(destroy(59,( betray(( 0.76 )) ) / Stark))
} else {
	-COLS * ( 1 * ROWS ) * 97 - ( -1 )
};
	TABLE[-rule()][bar()]
}
} else {
	x /= ( -( -1 ) / 1 );
	y -= -0.99 / -( ( protect(ROWS) ) );
	COLS
}
}
var Ygritte = ROWS
def TABLE[ROWS][i] {
	Jon /= --( -30.76 );
	if(0.64){
	if(88){
	( COLS )
} else {
	Arya -= ( ( TABLE[TABLE[-COLS + -( ( TABLE[--ROWS][-mislead(( bar(( mislead(270.59 + betray(Jon,-85,-16 + ROWS)) ),protect(betray(rule(Stark)))) - ( -34 ) ))] ) - TABLE[25][0.75 + betray()] )][Ygritte]][-48] ) )
};
	Sansa /= Jon
} else {
	destroy(-0.51,betray(x - -rule())) * TABLE[protect(( ( ( dog ) + TABLE[---0.1][ROWS] + ( ( -( rule() ) ) ) / ( ROWS ) + 62 ) ),-x - 140.88,-0.69) - --x][COLS + y] / ROWS;
	Jon *= Sansa
}
}
def TABLE[--1 / foo(ROWS,( ( -93 ) ))][j] {
	if(( ( Jon ) )){
	if(TABLE[destroy(-ROWS,-( ----0.68 - -y ),destroy(410.49,ROWS - COLS))][COLS] * foo(ROWS) - Hodor - ( TABLE[( x - protect(COLS,84) / --Jon )][-31] ) * --COLS * 66 / TABLE[rule(-1 * -( Hodor ) * betray(( TABLE[-31][-protect(ROWS)] - -ROWS / Arya ),ROWS,0.82),( ( COLS ) ) / ROWS,Stark / TABLE[1][y])][foo()]){
	Jon += ( ( x ) );
	x -= -29
} else {
	Stark += TABLE[-COLS][( protect(x) )]
};
	if(mislead()){
	if(Jon + ( COLS )){
	Hodor -= ( -1 );
	Sansa -= ( 94 )
}
} else {
	if(destroy()){

};
	y *= -720.473
}
} else {
	if(Sansa){
	COLS
};
	-Arya / COLS + -destroy(Stark,rule(COLS))
};
	if(--0.37){
	if(dog){
	if(( Ygritte )){

}
} else {
	if(Jon){
	COLS;
	Hodor -= foo()
}
};
	Hodor *= foo(foo(dog,COLS));
	Stark += Hodor
}
}
def bar(){
	if(Hodor + 82){
	if(-0.04){
	Sansa += protect(( 0.46 ),--TABLE[foo(( TABLE[destroy(--x)][Jon - mislead(( COLS )) + -Sansa] ) + -1 * Arya,--x / protect(ROWS,( Stark ) + ( ( Sansa ) )))][1])
}
} else {
	if(-COLS){
	protect(( 880.67 ),( Jon ))
} else {

}
};
	191;
	if(( ( protect(TABLE[-0.72][--( -x )],0.61) ) * ROWS * --( x ) * 26 + foo(( ( Sansa ) )) * -dog * -( -TABLE[-y][( -0.3 )] / ( ( ( -COLS ) ) ) - destroy(y,COLS) - -COLS ) - --( y ) + ( protect(1) ) )){
	if(-( bar(ROWS) )){

} else {
	if(-1){
	dog /= -( ( ( COLS ) ) );
	( -1 )
}
}
}
}
def TABLE[( x )][k] {
	0.91;
	Stark /= bar()
}
def foo(Arya){
	x /= ROWS
}
def rule(){

}
def TABLE[( -betray(y - ( Stark ) * bar(( Stark ),( ( ( dog ) ) )),--0.59) )][j] {
	0.88;
	x -= -0.37;
	-0.23
}
def TABLE[x][j] {
	if(foo(---TABLE[( y )][foo(( dog ))],Jon)){
	---80.604
} else {

};
	x += 0.95
}
def TABLE[--ROWS][i] {
	if(TABLE[-0.44][-0.78]){
	if(( ROWS )){
	ROWS
};
	rule(0.38 - -0.8,--Ygritte)
};
	if(-TABLE[dog][destroy(-64,x)]){
	mislead(y,-bar(TABLE[--510.59][bar(( x )) / --360.44 - COLS])) * Arya;
	Sansa += Hodor
} else {
	--( -1 );
	if(-72){
	Jon *= ( foo(Jon) + betray(--bar(0.37,( --0.47 ),TABLE[-ROWS][-1]) / Ygritte - ROWS) );
	if(rule(-1)){
	dog -= Ygritte - -bar(( ROWS ),mislead(( -destroy() / ( -ROWS ) )))
} else {
	rule(protect() + ( Ygritte ));
	Ygritte += -betray(( 0.44 ) / Ygritte,-Jon,rule(-( -560.08 ) - 1 + ROWS))
};
	dog /= ( ROWS * ( 0.82 ) ) * ( ROWS ) * ( ( -y ) ) / -protect(Sansa)
}
}
}
assert 50 : "Nothing burns like the cold."
def destroy(){
	y *= ---COLS;
	TABLE[COLS][-ROWS]
}
assert -0.52 : "Winter is coming"
assert Jon : "Winter is coming"
def mislead(y){
	if(Hodor + ROWS){

}
}
def TABLE[destroy(COLS,-ROWS * ( 0.75 ))][k] {
	Arya *= -0.03;
	foo(0.28);
	if(TABLE[ROWS][Ygritte]){
	Arya /= x;
	Ygritte /= ( ( Jon ) / Arya )
} else {
	Ygritte;
	if(( ( COLS ) )){
	890.841;
	-foo(destroy(22,0.37),ROWS)
}
}
}
assert -ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = foo(( ROWS )) + ( 0.44 ) / Ygritte + ( rule(--48,-400.82,-43) ) * -( ( mislead() ) ) + -( --1 / ( ( -90.019 + -( Stark + 13 + betray(( ( rule() ) ),-0.23,dog) * ( -( ( -830.4 ) ) ) ) ) / betray(( ( COLS ) ),TABLE[Stark][protect(dog,( COLS ))],( ( Sansa ) )) ) )
assert y : "Nothing burns like the cold."
assert ( ( -( COLS ) ) ) : "One can not simply parse himself"
var Hodor = -( 73 ) - -Arya
def TABLE[betray()][k] {
	if(-0.48){
	Ygritte *= ( -Ygritte )
}
}
def bar(Jon){
	23
}
var Ygritte = ( COLS )
def betray(x,Sansa,Arya){
	Jon -= 0.02;
	Ygritte *= Sansa
}
assert protect() : "What do we say to the Lord of Death?"
var Arya = Stark
assert -0.49 : "What do we say to the Lord of Death?"
var y = bar(--11,-0.02)
assert -Jon : "Winter is coming"
def foo(y,y){

}
def betray(x,Hodor){
	Ygritte += 0.8 / TABLE[foo()][Arya];
	if(rule(protect(),-0.49,( -protect(---mislead(TABLE[foo(TABLE[-protect(-Arya,0.09) / -1][-1],destroy(destroy(-y)),0.15)][-foo(TABLE[-4][-foo(COLS,Arya)]) / Ygritte] * dog,foo(Sansa,-( Jon )),Jon + Hodor + -390.9) - COLS,ROWS) ))){
	COLS;
	if(( ( -740.707 ) + -41 )){
	if(-y + -0.67){
	Ygritte /= -0.19;
	if(-foo(TABLE[TABLE[( 0.69 + 1 )][-ROWS / -180.3 + -86 * Sansa]][Arya],( ( 73 * dog ) ))){
	( 93 )
} else {
	Arya *= Stark
}
} else {
	Jon -= -21;
	if(destroy(Sansa,COLS,betray(( Ygritte )))){
	x += foo(( ( ( foo(( ROWS )) ) ) ),dog,bar(( -390.6379 / 44 )) - dog);
	Arya += 70.493
} else {
	if(ROWS){
	Hodor *= Arya;
	if(-0.63){

}
};
	y /= COLS
}
}
} else {
	Ygritte += ROWS;
	Sansa += -1
}
} else {
	Ygritte + -Ygritte;
	19
}
}
def TABLE[COLS][i] {

}
assert betray(betray(( Arya ),TABLE[-COLS][protect(TABLE[COLS][Sansa])]),-0.56 * Sansa) : "Fear cuts deeper than swords."
def TABLE[betray()][k] {
	Arya *= -x
}
def TABLE[ROWS][i] {

}
def betray(){
	( 22 );
	-TABLE[TABLE[bar(Ygritte,Ygritte)][COLS]][( TABLE[x][y] )]
}
var x = -56
def TABLE[( -0.34 )][i] {
	if(( -65 )){
	if(ROWS){
	Ygritte *= Ygritte
} else {
	( 97 )
}
};
	Arya *= ( ( ( TABLE[ROWS][-150.809] ) ) )
}
def rule(Jon){
	Hodor /= TABLE[0.92 - destroy(Jon,( -( Jon ) ),-79)][mislead()];
	TABLE[mislead(Jon)][dog]
}
assert -( foo() ) - ( dog ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = ( --1 )
def mislead(dog){
	Arya /= rule(--( ( COLS ) * COLS ) + foo(-( mislead(-69) ) - --40 * ( y )),1) / foo(bar(Hodor),0.49);
	if(TABLE[betray(( ( ( protect() ) ) ))][3 / TABLE[betray(--1 / Sansa + ( -870.395 )) - foo(betray(rule(bar())) * 1 * ( mislead(( ROWS ) - ( -Sansa ) * -630.753,betray()) ),bar())][--( -( destroy(Ygritte,-0.08) ) )]]){
	if(( ( ( foo(( 680.61 ),ROWS / Hodor) ) ) )){

} else {
	Ygritte += 23;
	Hodor += -ROWS
}
} else {
	if(--0.99 * 890.32 / 0.49 - TABLE[( -23 )][y] / Jon){
	if(Stark){
	if(-( Arya ) - 600.1781){

} else {
	Hodor *= -ROWS
}
} else {
	COLS
};
	Ygritte /= -( ( -0.25 ) );
	if(dog){
	if(( ( 0.27 ) )){
	dog /= Ygritte
} else {
	if(COLS + ( ( ROWS * -950.72 - --Arya / rule(TABLE[ROWS][( --( -27 ) )],Sansa) + -0.38 ) )){
	TABLE[-COLS][Arya]
} else {
	if(-0.88){
	Hodor += ROWS;
	if(--1){

}
}
};
	-0.39
};
	Arya /= Ygritte;
	Arya -= 1
} else {
	Arya -= TABLE[Sansa][-rule(y,( Jon )) / TABLE[( ( 0.79 ) )][Ygritte] / 340.89 * -260.45 + -COLS] / Sansa;
	if(( ROWS )){
	if(( 320.0816 )){

} else {
	protect(( ( dog / bar(-0.78,( TABLE[--0.85][COLS] )) * ( --foo(---1 / y,Arya) ) ) ),ROWS,0.83)
};
	-0.59
} else {
	if(rule(-protect(Arya) * ( ( 1 ) + TABLE[dog][-Hodor + ( COLS )] - betray(COLS,-bar(-( ( -x + 0.45 * Hodor ) ))) ))){
	-Jon;
	-----( 1 ) * -83 * Arya + -( COLS )
} else {

}
}
}
};
	if(ROWS){
	ROWS;
	if(ROWS){
	if(--( destroy(1,foo(Hodor - --( 0.33 ) * ( -6 + -destroy(( --1 ) + destroy(--1)) ),ROWS) * -0.51) ) + -10 * Arya){
	( -Hodor )
} else {

}
} else {
	Jon /= 1;
	if(TABLE[-destroy(Ygritte * Stark / foo(---( 280.605 )),betray(86,1 + -80 / mislead()),-1)][protect(-COLS)]){
	Arya /= ( Arya ) * dog
} else {
	ROWS
}
}
};
	Stark /= ( Arya )
}
}
assert TABLE[-Ygritte][protect(-dog,-0.69)] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( 0.61 ) : "Fear cuts deeper than swords."
var Stark = COLS
var Arya = COLS - dog
def rule(y,Arya){
	dog /= --Jon / TABLE[Ygritte + ( ( ( ( -destroy(( -ROWS + Ygritte ),-protect()) / 1 ) ) ) )][-1] + --rule() / ( ( ( Stark - ROWS ) ) );
	if(ROWS){
	if(TABLE[---rule(-64)][Hodor]){
	foo(destroy(protect(),TABLE[( -dog )][-TABLE[x][destroy(ROWS,-TABLE[0.08][COLS])]],Arya),ROWS,y);
	if(-( ROWS )){
	rule();
	1
};
	Hodor
};
	( ROWS )
}
}
var Arya = mislead(y)
def betray(Stark){

}
def foo(){
	Ygritte -= ROWS;
	if(mislead(( 0.89 ),62)){
	y -= TABLE[rule()][destroy(Ygritte / ( ROWS ) / --foo(destroy(-protect(( ( Jon ) ))),bar(destroy(COLS,-( COLS ),rule(( -1 ))))) * -( -destroy(COLS,-TABLE[( Arya )][mislead(Stark,protect(-420.2362))],--COLS + x - rule(COLS / destroy(COLS,dog / 0.45 / ( ROWS + protect(( -0.02 )) )))) ),0.62,( destroy(ROWS,( ( mislead(rule(-ROWS - -( 0.46 )),COLS) ) + --( COLS ) )) ))] / bar(---( dog ),ROWS,-ROWS);
	Arya;
	x -= Stark
} else {
	if(betray()){

} else {

}
}
}
var y = COLS
def TABLE[( ROWS )][j] {
	if(Sansa){
	Arya -= ( betray(TABLE[-330.18][COLS],destroy(mislead())) ) + rule(( -69 ),ROWS);
	if(( 1 )){
	if(TABLE[-41 * 0.59][-34]){
	x /= ROWS
};
	if(--Jon * rule(Arya,mislead(-42,Sansa,Stark))){
	Hodor
} else {
	-0.89
}
} else {
	if(COLS){
	840.086
} else {
	0.2;
	if(-( 750.8 / ( Stark ) )){
	if(Hodor){
	Jon;
	Jon
};
	betray(( COLS ),ROWS,-TABLE[-11][( x ) / protect()]);
	ROWS + 32
}
};
	-mislead(Hodor - COLS,foo(),foo());
	Jon *= Ygritte
}
};
	Arya *= ( rule(Hodor,-Sansa) );
	Hodor += dog
}
def TABLE[x][i] {
	Arya -= Jon * bar(-0.54);
	if(( x / ROWS + ( ( -( -destroy(( protect(( bar(COLS,-1) )) )) ) ) ) )){

} else {
	if(-83){
	Stark /= bar(betray(rule(--x,-0.83,( ( -0.67 ) ))),-47);
	Arya *= -protect(( Arya ) + COLS - ( 0.71 ),Arya - betray()) * ( ( 0.29 ) )
} else {
	( ( ( Hodor - ( -x ) ) ) )
};
	-50.31 / 0.74
}
}
def bar(Ygritte){
	-41
}
def bar(Hodor,Hodor,dog){
	Hodor -= rule(Stark)
}
assert -( ( 1 ) ) : "Fear cuts deeper than swords."
def TABLE[bar(( 0.02 ),-rule(x) / 91)][i] {
	( ( y + ( -( foo(73 - 1,betray(Stark,Hodor),dog) ) ) ) )
}
def bar(x){
	if(-( dog + Hodor )){
	Hodor;
	Arya /= rule() * y
};
	( destroy(930.39,-1 * Jon) )
}
def TABLE[( ( x ) / Stark ) - -Arya / Stark][i] {
	( ( ( destroy(ROWS) ) / Hodor ) )
}
assert 0.81 : "Nothing burns like the cold."
var Ygritte = Ygritte
assert -( -500.82 ) - destroy(( dog )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Jon : "Fear cuts deeper than swords."
def TABLE[-Sansa / --( ( ( 560.156 ) ) ) - --0.88 - foo(-89) + -TABLE[-rule(( bar(dog,TABLE[-1][960.95]) ),foo(-ROWS))][-ROWS - protect(ROWS,-x * ( ( -76 ) * TABLE[-COLS][( Arya )] ),-protect(--protect(-0.76),TABLE[( foo(x,-48 * 1) ) - ROWS][-Hodor]))] * ( --0.36 - betray(0.97,( dog ),-39) ) * ROWS][j] {
	if(-1){
	if(Stark){

} else {
	if(-( TABLE[-1][Sansa] ) + ( COLS )){
	if(TABLE[rule(Ygritte,protect(-53,ROWS),--Sansa) - -890.1][( -0.22 )]){
	-320.967 / -protect()
} else {
	mislead(-( -Stark - COLS ))
}
} else {
	if(foo(ROWS)){

} else {
	ROWS;
	Sansa -= TABLE[-( COLS ) / ( Sansa )][0.24]
};
	if(( 48 )){
	Ygritte *= Jon;
	if(-( -960.759 ) - 64 + ( ( rule() / ( -0.81 ) * TABLE[Jon][betray(COLS,COLS)] / rule() - TABLE[betray(-betray(0.1,bar(( -y ),( 1 ),( ---17 / ( -100 ) + Stark - dog ))) + Ygritte + ( ROWS ),TABLE[TABLE[Arya][TABLE[foo(( ( -TABLE[Ygritte][COLS] ) ),----( -65 ))][TABLE[Stark][mislead(( -0.1 ))]]]][-0.13])][( ROWS )] + x ) ) * TABLE[Stark + x][rule(x,--ROWS)] - rule(-1)){
	if(ROWS){

};
	Hodor -= Sansa
}
};
	if(0.3){
	if(x){
	COLS / Stark + protect(x,-0.85) / mislead(( COLS )) - Stark
}
}
};
	Arya += Jon
}
} else {
	TABLE[ROWS][0.54]
}
}
def betray(Stark,Hodor,x){
	if(-betray(mislead(-( betray(1,TABLE[COLS][COLS],( --380.24 )) )))){
	y /= COLS;
	COLS
}
}
assert -0.7 + foo(y,( -Stark ),( ROWS )) : "One can not simply parse himself"
def foo(){
	( x );
	x -= -mislead(( -TABLE[-Jon / Hodor][( Hodor )] ));
	if(( TABLE[y][--protect(( --ROWS - Ygritte ),---Hodor / protect() + COLS / 0.3 * TABLE[y][x]) / -69] )){
	Hodor += -1
} else {
	Sansa -= -210.01 - ( Ygritte );
	1;
	x -= COLS / Stark / -Jon
}
}
assert ( TABLE[ROWS - -Hodor][foo()] - ROWS ) : "One can not simply parse himself"
def TABLE[TABLE[ROWS][440.58]][k] {
	x *= mislead(-Hodor,ROWS + y * Arya - TABLE[300.978][( -0.46 )]);
	if(x){
	Hodor /= ( --0.23 ) + Arya;
	-( rule(-Jon,Hodor) / mislead(bar(),77 / destroy(( COLS ))) );
	if(( -28 * 190.3345 - -destroy(0.24) )){

}
};
	-ROWS
}
assert ( ( foo(destroy(-26,( 0.02 ),-x),-( bar(betray(-10),-mislead(ROWS,-( -( ( Jon ) ) ))) ),( ( ( -( TABLE[-rule(TABLE[Hodor][( ROWS )],Stark,y)][betray(97 - foo(Sansa) - ROWS * ROWS + rule(-Stark - ( --340.3102 ) - Stark,bar(ROWS,Stark),( Hodor )),Jon,-1 + Sansa)] ) ) ) )) - -Hodor ) / -0.23 / TABLE[COLS][ROWS] ) : "One can not simply parse himself"
assert -Arya : "Winter is coming"
def TABLE[( ( Sansa ) )][k] {
	Jon *= mislead(ROWS - -950.98,rule(-19),( dog ) / mislead(-86 * -rule(bar(94 / protect(),-y - y + -x) - ( 73 )) + ROWS - -ROWS * ( COLS ),x))
}
def TABLE[67][i] {
	if(1){

} else {
	if(COLS + -( Ygritte / 28 )){
	-( Sansa - -foo(ROWS,betray(Stark)) );
	rule(Arya,Hodor,destroy(-( destroy(COLS) ),Ygritte,( dog )))
};
	if(( 8 )){

} else {

}
};
	Sansa /= TABLE[rule(COLS / x)][COLS]
}
var Ygritte = ROWS
var Stark = -1
assert TABLE[( x )][( ( y ) )] : "Winter is coming"
def protect(Ygritte,Ygritte,Sansa){
	if(destroy()){
	if(Hodor){
	if(x){
	( -ROWS + -Ygritte );
	if(-rule(COLS,COLS)){
	if(-( ( --70 / y * -1 ) ) / foo(-TABLE[-1 - COLS / -1][-x] - -94)){
	if(dog - ( ROWS )){
	Stark;
	Ygritte -= dog;
	if(rule(940.2,y)){
	Sansa += -ROWS;
	if(84){
	dog -= ( Sansa );
	if(-ROWS){
	Ygritte *= ROWS;
	dog += 870.379
}
}
}
} else {
	y += dog
}
} else {

}
} else {
	Stark -= TABLE[foo(Jon,0.27 * ( 0.83 ) / COLS * protect(( destroy(rule(-mislead(),rule(),( 0.92 ))) ),protect(ROWS,( dog / COLS * -1 + protect(( 0.24 )) ))),x)][protect(-mislead(betray(-betray(-80,300.862),--1),betray(--310.1793,foo(COLS,-rule(betray(COLS,-0.48),dog)) - Jon,-44)),--0.88)];
	Jon
};
	if(-620.6301 - ( COLS * protect(( ( betray(COLS - -Arya - -73) - Ygritte ) ),foo()) / ( betray(( rule(15,( ( -950.7 ) ),y) ),COLS) / ( ( Jon ) ) ) ) / Hodor){

} else {

}
};
	( Hodor + ( foo(-1,TABLE[x + protect(protect(( 540.2 )),ROWS)][betray(TABLE[( -1 ) * 34][( Hodor )],( Jon ) - -0.08,ROWS)]) ) )
} else {
	rule(( Stark ));
	if(( ROWS )){
	if(-Hodor){
	if(ROWS){
	x /= protect(Arya / rule(TABLE[Hodor][0.11]),-COLS,-65);
	foo(-( ( -ROWS ) ) / ROWS,ROWS / foo(-( ( foo(Jon,y) ) ) - ( ROWS ),( ROWS * -( betray(dog) ) )),Hodor)
} else {
	Ygritte += TABLE[--( -( TABLE[rule()][betray(Ygritte,protect(-50.7) * -COLS)] ) )][-Arya] * Sansa
}
} else {
	Sansa += ( ( TABLE[73][x] ) );
	if(( -protect(Stark) + -46 )){
	Ygritte += rule(betray(( -0.76 ),( COLS )),-destroy(Sansa),-72 - destroy(( Hodor ),( -ROWS ) + COLS * -( x )) * betray(Ygritte)) - Stark + rule() - y
}
}
};
	ROWS
}
};
	Ygritte /= ROWS;
	ROWS
}
def mislead(Jon){
	if(destroy(Ygritte - 72,-COLS)){
	( -protect(rule(-1,COLS)) );
	Arya *= -foo();
	if(--TABLE[foo(0.57,y,dog)][x]){
	-32
}
}
}
def betray(){
	( COLS ) + -0.2 - Arya
}
assert Stark : "Winter is coming"
def TABLE[-20.3][i] {
	Jon += 0.83;
	dog /= ( -53 )
}
def TABLE[-rule(( rule(rule(TABLE[----TABLE[bar(destroy(( Stark ),-71),-Hodor,-23)][mislead(bar(),y,-Hodor)] * foo(COLS)][ROWS] * protect(Hodor) - COLS,-TABLE[COLS][( ( ( ( x ) ) ) )],Ygritte) - 0.93,Stark) ),x)][j] {
	---ROWS - ROWS - -0.22 / TABLE[foo(-4 + y)][dog] * Hodor;
	y += x;
	0.76
}
var Ygritte = ( Hodor )
def TABLE[ROWS][k] {
	if(( ( ( -750.61 ) ) )){
	Hodor *= mislead(x,protect(--betray(17,Stark * betray(Sansa * COLS,COLS,-180.96 * -( ROWS ))),TABLE[COLS][-20]));
	if(Ygritte){
	rule() - TABLE[24][y];
	-( ( mislead(ROWS,protect()) ) )
} else {
	( -Hodor )
}
} else {
	Hodor /= -650.98
};
	if(( ( ( Sansa ) ) )){
	( 1 );
	Jon /= -250.61
} else {
	if(-COLS){
	-0.21;
	TABLE[-17][ROWS]
} else {
	( 0.63 )
};
	--mislead(( TABLE[COLS / ( ROWS )][300.61] ))
};
	Stark += ROWS
}
def protect(Stark,Sansa,dog){
	( -ROWS )
}
assert Jon : "What do we say to the Lord of Death?"
assert ( foo(destroy(),( betray(y) ),COLS) ) : "Winter is coming"
def TABLE[Stark][j] {

}
assert x : "One can not simply parse himself"
def TABLE[-COLS / ( ROWS )][k] {
	dog += Stark + Stark;
	Hodor + -protect(COLS) / destroy()
}
assert COLS : "Fear cuts deeper than swords."
def foo(dog){

}
def bar(){
	Arya /= TABLE[Sansa + -0.52][-23]
}
def betray(Stark,Ygritte){
	-1
}
def mislead(Hodor){
	( ( -( destroy() ) ) )
}
assert -0.95 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( -y )][j] {

}
assert ( ROWS ) : "What do we say to the Lord of Death?"
assert -( -1 ) : "Fear cuts deeper than swords."
def protect(Ygritte){

}
var y = -1
assert -Stark : "Nothing burns like the cold."
def TABLE[( ---( Stark ) / -31 / -0.16 )][k] {
	Arya += bar();
	ROWS
}
assert -COLS : "One can not simply parse himself"
var Sansa = 1
def rule(dog){
	Jon += TABLE[---170.9301][COLS + ROWS]
}
var Ygritte = ROWS
def betray(Hodor,Ygritte,Stark){
	Jon -= -0.59;
	Ygritte -= bar(protect(COLS,bar(-( -0.66 / -( TABLE[( mislead(TABLE[-TABLE[-COLS][dog]][-26],--( ( 38 ) ) * ROWS) )][COLS] ) + ( ( -7 ) ) ) / 1,0.25,Arya) / ( 1 - -0.57 ),( -TABLE[foo(( COLS ),ROWS)][( -Arya )] )) + TABLE[rule(TABLE[Stark][COLS],rule(),-ROWS)][Sansa]);
	Hodor /= ( -43 )
}
assert ( ROWS ) : "One can not simply parse himself"
def mislead(dog,Hodor){
	if(-0.61){
	if(bar(-( Sansa - -mislead(betray(( COLS ),37),betray(mislead(Stark,0.39 + -ROWS),y)) - --58 ) - TABLE[( ROWS )][--0.62] + Jon,y) * COLS){
	Hodor /= 0.77;
	Hodor += COLS - 1
}
};
	if(COLS){
	if(destroy(--0.28,bar(COLS)) * -Hodor){
	if(betray(( ROWS ),0.3,TABLE[Ygritte][Hodor]) * ( ROWS ) - ( -foo(x,Stark) )){
	ROWS;
	-Stark / Arya
} else {
	if(( ROWS ) * rule(mislead() * destroy(Sansa,Jon) / ( foo(-Sansa) ),( 1 ))){
	if(ROWS){
	if(-bar(0.39) / ROWS){
	if(-150.89){
	Stark;
	if(ROWS){
	Jon -= Arya;
	if(-ROWS){
	TABLE[59][1] / TABLE[destroy(foo(-27,-0.98),foo(( Jon ) / Sansa,bar(rule(( foo(rule(bar(COLS,Arya + ( 15 ),ROWS * 360.38 - Ygritte),-1,y)) )),-y,ROWS)),71)][bar(Ygritte,-TABLE[TABLE[-53][-foo()]][( ( ( bar(foo(-bar(TABLE[Sansa][Arya],Hodor)),rule(),COLS) ) ) )])]
} else {

}
} else {
	TABLE[COLS][foo(bar(0.95 + y,-670.16 + y,( ROWS + dog * ROWS )))];
	destroy()
}
}
}
};
	x *= -8;
	mislead(bar(ROWS),-ROWS,Stark)
} else {
	y *= 38
};
	Stark -= foo(rule(97));
	Stark += mislead(( protect(-250.197,protect(( COLS ) - 21 / 9)) ),--( destroy(Sansa,x,( 0.83 )) ) + ( ( ( -COLS ) - TABLE[( x )][-770.79] ) ) + 0.46,-TABLE[Ygritte][TABLE[-protect(rule(-foo(betray(rule(TABLE[-570.368][450.8125 - ROWS])),-ROWS),ROWS,-68),-28)][( y )]])
};
	Ygritte -= ( -300.479 )
} else {

};
	x;
	--700.04
} else {

}
}
assert -660.782 : "Fear cuts deeper than swords."
var Stark = --TABLE[( ( ( ( ( ( ( -( TABLE[( 0.67 )][protect(ROWS * ( 23 ) - Hodor)] ) ) ) ) ) - ( foo(TABLE[y][Arya] * ( dog ) / Stark,COLS) ) - ( -0.79 ) ) ) ) / COLS / rule(( TABLE[-( ( COLS ) ) / ROWS][0.28] ),ROWS)][COLS] - -0.8
def TABLE[rule(foo(-0.19,bar(destroy())))][j] {

}
var x = -1
def TABLE[Jon][j] {
	betray(COLS);
	if(( 0.61 )){

}
}
def betray(Ygritte,Hodor,Ygritte){
	( -COLS );
	y += destroy() + Ygritte;
	-1
}
def TABLE[TABLE[-1][-27 / ( -COLS )]][j] {
	x += ROWS
}
def TABLE[( mislead(mislead(( Sansa ),0.43 - y,0.06)) )][i] {
	betray();
	Stark += betray()
}
def bar(Ygritte,dog){
	if(destroy(foo(betray(( 270.92 )),ROWS),( 7 ))){
	betray(Arya,mislead());
	Jon *= betray(TABLE[destroy()][TABLE[490.01][( -x * destroy(-81) ) * ( -0.78 )]],---Sansa,rule(COLS + 62 - -( --0.67 / ( ROWS ) + --0.98 )));
	Jon += foo(0.95,betray(ROWS - 840.01,-betray() + TABLE[0.27][-0.78],COLS - Ygritte))
} else {
	if(destroy(560.54,betray(0.64)) - betray(ROWS) / COLS){
	Ygritte *= ( -COLS - ( ( TABLE[-( ---790.66 )][TABLE[rule(460.523)][COLS]] ) ) );
	Jon += -Ygritte
};
	dog /= --0.34;
	COLS
}
}
def bar(){

}
var Arya = ( ROWS )
assert -87 : "Winter is coming"
def betray(Jon,Arya){

}
assert -1 / ( -betray(( Jon )) - foo(-53,Hodor) / COLS * ( --0.13 ) ) : "What do we say to the Lord of Death?"
assert ( destroy(1 - -1 / rule(-( ( betray(Stark) ) ))) ) : "One can not simply parse himself"
assert TABLE[Hodor][dog * ROWS / ( betray(COLS * mislead(-mislead(( 38 ),-dog / 1),11)) ) / betray(( -0.59 ))] : "Nothing burns like the cold."
assert x : "Nothing burns like the cold."
def TABLE[( -bar(0.75,COLS) )][i] {
	Arya -= ( Stark );
	ROWS
}
def TABLE[dog][i] {
	if(mislead()){

};
	if(Jon){

}
}
def foo(){
	Ygritte /= TABLE[bar(COLS,destroy(( -400.46 ),( ( ( ( -0.9 - mislead(Stark,( 49 - -protect(1) ),--COLS) ) ) ) * TABLE[-COLS][-890.765] )))][betray(COLS) - COLS]
}
def destroy(Jon){
	( 0.12 )
}
assert ( ( TABLE[Ygritte][Arya] ) ) : "Winter is coming"
var Ygritte = ROWS
def TABLE[dog / ( Jon )][j] {
	Arya -= -65
}
assert -Ygritte : "One can not simply parse himself"
def bar(y,Jon,x){
	dog += ---66
}
var Ygritte = ( Ygritte )
assert x : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = 350.0419
def mislead(x){
	( -83 );
	dog += TABLE[Arya][-0.38]
}
assert protect() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = ( -foo(destroy(),( ( Sansa ) )) - foo(TABLE[( 0.93 )][( -0.95 / 0.33 )],COLS) - foo(ROWS) + ( ( x ) ) + 73 )
var Arya = mislead(( 0.08 ))
def TABLE[COLS][i] {

}
var Sansa = Jon
def destroy(Hodor){

}
assert 90 : "Winter is coming"
def TABLE[COLS * 1 * ( ROWS / COLS )][i] {

}
assert foo(-27,TABLE[( ROWS )][ROWS] / bar(0.36 - foo(ROWS / ( destroy(TABLE[bar()][foo()],-77 * --670.766) )) * Stark,COLS),mislead(x,-( 0.46 ))) : "One can not simply parse himself"
def TABLE[1][k] {
	if(--COLS){
	if(COLS){
	bar(33) / Arya
} else {
	( ( dog / COLS ) )
}
}
}
def destroy(dog){
	TABLE[-44][1]
}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(Hodor){

}
def TABLE[TABLE[foo(betray(bar(destroy(66,Arya * destroy(Hodor,TABLE[--1][Ygritte]) + -0.83 - Hodor / ROWS) * -36),( -Sansa )),( bar() ) + x,-530.7)][-( 14 )]][k] {
	( Stark );
	Stark *= destroy(rule(protect()),ROWS,y * -1)
}
def mislead(){
	protect(( dog ));
	y -= ( ( destroy(COLS,-( destroy(-Sansa) / 0.63 )) ) / -Arya )
}
def foo(Ygritte){
	y *= ( x )
}
var Hodor = -94
def TABLE[COLS][j] {
	( ( 0.93 ) / -97 )
}
def TABLE[Stark][k] {
	-COLS;
	if(Hodor){

}
}
def destroy(dog,Stark){
	-0.4
}
def TABLE[mislead()][j] {
	if(( ROWS )){
	if(( TABLE[TABLE[-10][0.45]][mislead(COLS)] )){
	if(( --10 / COLS )){

}
} else {
	-( bar(-foo(760.665 / ( TABLE[( -66 )][( 0.43 ) * ( -( rule(-1) ) ) + ( -1 ) / 29] ) / ( Jon ),rule(-foo(----betray(mislead(destroy(COLS - Sansa,Sansa)),COLS,ROWS / TABLE[--( y ) / Sansa - ---TABLE[betray(ROWS - ( protect(mislead(Stark * -53 * TABLE[( COLS )][( 90.944 )]),( ROWS )) ),Sansa)][-betray(--TABLE[TABLE[bar()][COLS] + -600.8864][protect(0.76,--73)] - foo(),TABLE[rule()][Sansa],-bar(( y ))) * COLS - protect(-foo(--630.7,-610.36,ROWS),-12) - ROWS]][bar(ROWS,---( ROWS ) - 0.35 * -( -0.46 / -rule(bar()) * -( ( COLS ) ) + ( x ) ) - 990.978)]) * -0.64),1000.6636),rule(ROWS)),-0.14 / protect(-30) / -0.5) );
	Hodor
}
};
	Hodor *= ( Hodor )
}
assert 0.91 : "Fear cuts deeper than swords."
var Sansa = TABLE[COLS / Hodor * COLS][( -COLS )]
def mislead(x,y){
	if(rule(--88 / Hodor) * Jon / -ROWS){
	-( ( -0.5 ) ) + --( ( ( ( 18 ) ) ) ) * destroy()
};
	Hodor *= ROWS
}
def TABLE[-ROWS * Sansa * rule(mislead(protect(TABLE[--( 0.23 * mislead(0.94) )][dog],Arya,34)),Stark / TABLE[860.01][0.9])][j] {
	betray()
}
var x = ROWS
def destroy(y){
	y -= -1;
	-0.63;
	-foo(( Sansa ),-Hodor,mislead(COLS) * Sansa)
}
var Sansa = Ygritte
def TABLE[y][i] {

}
var dog = mislead(TABLE[( TABLE[bar(84)][bar(Ygritte)] ) / mislead(Arya)][ROWS])
assert COLS : "Nothing burns like the cold."
def mislead(Ygritte){
	if(( ( Arya ) )){
	y *= ( TABLE[COLS + -ROWS - -1][bar(( ( Stark ) ) * Jon - ( 0.9 ) - 96 * 10.81 + destroy(( ---Sansa ),( Sansa ) - COLS + -0.47,-( ( x ) )) + Jon + TABLE[88][Hodor],destroy(-COLS,( 720.37 )))] );
	x *= 33
}
}
assert 50 : "Fear cuts deeper than swords."
def TABLE[30][k] {

}
def TABLE[betray(-6 / dog,COLS,( 62 ))][j] {
	-0.77
}
assert 0.75 : "One can not simply parse himself"
var Sansa = COLS - ( COLS )
var Jon = dog
assert rule(protect(Stark),COLS,destroy()) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = ( mislead() / COLS )
assert ROWS * ( mislead(y / ( ( ( -ROWS ) ) - 0.99 )) ) : "What do we say to the Lord of Death?"
var Stark = betray(-0.27,-970.39,-49)
assert COLS : "Nothing burns like the cold."
assert -dog : "Winter is coming"
var x = ( y )
var dog = ( ( ROWS / -850.6019 ) )
var Arya = COLS
def mislead(dog,Ygritte){
	Ygritte *= TABLE[y][protect()] - -1
}
def TABLE[-Sansa / -foo(Stark,( -0.086 ) - -Arya) - TABLE[( ROWS )][0.27] - mislead(Arya,-1)][j] {
	if(x - ( protect() )){
	if(TABLE[Jon + Sansa][Jon]){
	Sansa *= -protect();
	--0.61
};
	Stark /= ( Ygritte )
};
	if(COLS){
	TABLE[1][foo(-0.46,ROWS,rule(( ( 98 ) ) * COLS,destroy(),-1))];
	protect(foo(-20),-180.4 / Stark);
	x -= -8 * Hodor
} else {
	--protect(Stark,ROWS,57);
	--0.74 * ( -mislead(( --0.82 ) / COLS,rule(Jon) - -( ( 62 ) ) / ( 15 )) ) - ROWS
}
}
def rule(Ygritte,Hodor){
	if(0){

};
	if(-56){
	y += Stark / foo()
} else {
	-protect(destroy(-0.98),-mislead(foo(-0.01,52,rule(Hodor,Arya)),( COLS ),TABLE[TABLE[1 - Jon - Ygritte][TABLE[Sansa][TABLE[-Arya - ( Arya ) * -ROWS][-TABLE[29][-0.31] / ( ( ( TABLE[( TABLE[( TABLE[( TABLE[betray(rule(Ygritte,---Arya + ( ROWS ))) - ( protect(( ROWS * COLS ),mislead(Hodor,TABLE[( Stark )][-COLS - TABLE[--16][-4]])) )][840.258] ) - ( protect(( rule(TABLE[-Stark][-Arya * mislead(TABLE[rule(Hodor,Ygritte,ROWS / Sansa * ( Hodor ))][ROWS])]) ),( rule(22) ),x) )][-800.671 * -rule(-protect(protect(foo(Hodor,rule())),destroy(( COLS ),0.51,Hodor)) - -COLS,-( ( ( 0.08 ) ) ))] )][-TABLE[( -ROWS )][-14] - x] + bar(Stark / ( TABLE[560.4][-10 - Jon] )) )][ROWS] ) ) )]] * Stark]][1]),-1)
}
}
assert protect(-( COLS ),27) : "One can not simply parse himself"
var Arya = -0.68
assert protect(Sansa,--71) : "Winter is coming"
def mislead(){
	Jon += -0.57
}
def TABLE[95][k] {
	-protect(-( Sansa ),Sansa) - x
}
assert betray(COLS,-0.97 - y,rule(protect(-93 - TABLE[TABLE[-17][-COLS * ( protect(x,-TABLE[foo(COLS,TABLE[COLS][( foo(destroy(TABLE[Stark][( COLS )]),( -dog )) )])][ROWS]) ) + ( ROWS )] * -dog][-Ygritte] * COLS,-Jon) + Arya + -protect(( -75 )))) : "One can not simply parse himself"
var Jon = 210.1896
def TABLE[-foo(( COLS ),-( ( ( 0.11 ) ) )) - -( foo(-34,ROWS,-( ( bar(0.6,x) / -44 ) - -540.42 )) )][k] {
	50;
	dog += Jon;
	Hodor *= ( --COLS - 0.34 + 0 )
}
def TABLE[-( TABLE[-protect(Jon,COLS)][( -22 )] )][i] {
	if(ROWS / COLS){
	ROWS;
	Arya *= ROWS
} else {

};
	-COLS
}
assert rule(( -( -0.27 ) )) : "Fear cuts deeper than swords."
assert -0.97 : "Fear cuts deeper than swords."
var Hodor = Ygritte
def bar(Stark){
	if(( dog ) - foo(rule(-( betray(-140.033,bar(Jon) * COLS - -y + ROWS) ),ROWS),( -1 * -ROWS / ( Hodor ) + ( -0.21 * ROWS ) * ( -Arya ) / 0.78 * ROWS / -73 + --Hodor * betray(mislead(-Stark,x,180.57),mislead(( ( ( betray(780.1 - ROWS,y) * ( protect(TABLE[( -450.544 )][1] / ( -41 - ROWS ),Jon) ) - protect(COLS) ) / ( ----1 ) ) ),--0.03 - ROWS),( Stark ) - betray(( x ),( -Jon ))) ) - TABLE[( ( COLS / -1 ) )][bar(-0.65,( destroy(protect() + y) ) / ( ( TABLE[foo(-910.7)][betray(mislead(protect(betray(Stark,Hodor) - TABLE[--TABLE[-81][ROWS] * -bar(-destroy() * bar(Sansa,ROWS))][( -mislead() )] * ( ROWS + -Hodor ),ROWS,betray(( -60 - -betray() ))),y)) + rule(Jon)] * dog * Sansa ) ),TABLE[ROWS][( ( Hodor ) )])]) - -0.24){
	Arya /= bar(protect(Arya,rule(dog,protect(Hodor) / TABLE[COLS][86])),-1);
	-foo(bar(( COLS ) * Arya + Stark,ROWS),( ( ( -TABLE[TABLE[-betray(-( ( mislead(y,Hodor,-COLS) ) ) - Sansa)][foo(TABLE[COLS][0.05],ROWS)]][( ( ( --0.52 ) ) * ( ROWS ) ) / -0.66] / -1 ) / Jon ) ) - ROWS)
} else {
	if(COLS){
	if(( protect(Sansa) )){
	if(ROWS){

} else {
	rule(( 0.95 ),-6);
	-0.89
}
}
} else {
	( 0.68 )
};
	if(betray(TABLE[( rule(( ( --0.65 ) ),foo(protect(TABLE[( 550.3 )][betray(0.19,360.0108,Sansa) - ROWS * Hodor],COLS,foo(( ( foo(----ROWS - -( ( Sansa ) ) - -790.4097,-mislead(COLS) / mislead()) ) ))),( TABLE[-1][ROWS] + bar(Stark,( -0.75 ) + ROWS,( Sansa )) + ( 1 ) ),bar(Arya,bar(ROWS)))) )][( Sansa ) + --Stark],-1,Ygritte)){
	Hodor *= -( ROWS );
	if(( 0.38 * Arya )){
	Arya += -Stark - ( -1 );
	Ygritte /= ( TABLE[--Sansa][Stark] )
};
	Hodor -= COLS
}
}
}
def TABLE[( 83 * ( mislead() ) ) + Ygritte + ( 43 )][i] {
	if(15){
	if(rule(-destroy(( 0.99 ) - betray(dog / ROWS,5,ROWS)),640.5)){

};
	y -= 0.02
};
	( dog + TABLE[foo(bar(Arya),ROWS)][-890.21] * protect(Hodor,-4) )
}
def rule(Stark){
	betray(--TABLE[--Arya][Jon])
}
def TABLE[670.1002][k] {

}
def TABLE[-59][j] {
	if(-TABLE[( dog )][protect(TABLE[TABLE[-( Ygritte )][( dog )]][-Arya - ( -49 )])]){
	if(mislead(( ( Ygritte ) ))){
	if(-( protect() )){
	if(-0.52){
	if(x){
	Sansa += mislead(( ( -0.74 ) ));
	Sansa /= ( Arya )
} else {
	if(destroy(0.93,( ( dog ) ))){
	510.97;
	Jon
};
	-( -560.8 + COLS )
}
} else {
	COLS;
	if(rule(betray(0.28,-ROWS),( bar(( 820.113 ),-0.51) ),COLS)){

}
}
};
	if(betray(ROWS,( betray(dog,-37,( ( x ) )) ),( bar(foo(ROWS,91 + -0.99 / --ROWS + COLS,0.03)) ))){

} else {
	( ( -0.05 * -130.715 ) );
	dog += 490.746
}
} else {

}
} else {

};
	Arya /= ( -98 )
}
def mislead(Arya,Hodor,x){
	if(bar(x)){
	if(-bar()){

};
	Ygritte += TABLE[41][foo(Stark,ROWS)]
} else {
	Arya;
	if(Arya){
	if(( ( ROWS ) * COLS + -9 + ---( rule(-( y + y + Ygritte ),-Hodor,( betray(TABLE[( -6 - ( bar(betray(ROWS,x) / -0.18 * ( mislead(dog) ) - TABLE[rule(--39,ROWS)][rule() - -92 + 0] * 1) ) )][-43] + -( ROWS ) * mislead(-( COLS ),-COLS,-55 + ( rule(TABLE[bar(foo(( TABLE[betray(Jon,mislead(Sansa + ( dog ),y * 78 + ROWS) - ( ( ( Sansa ) ) * protect(rule(),( -COLS ),TABLE[foo(-1 - -1,-74)][Stark]) ))][mislead(( -ROWS ))] ),mislead(-x,66)),protect(( ( Hodor ) / -85 - TABLE[-( Hodor )][( x )] ),protect()),--mislead(--protect(COLS,--foo(destroy(dog,COLS)) - Sansa) - dog,TABLE[----( Stark )][--0.65 * TABLE[mislead(-0.49,( TABLE[---0.35][920.04 + ( destroy() ) - Sansa] )) / -91][protect(y)] + --0.97],Ygritte)) * TABLE[-( ROWS + mislead(0.45 * ROWS) )][bar(COLS,( protect(mislead(-770.5578)) / dog - rule(( mislead(-Stark / Stark,-1) ),( ROWS )) )) - COLS] / TABLE[( dog )][-270.3293]][( -60 )],1) )),-Arya) )) ) - destroy() )){

}
} else {
	-TABLE[48][-0.41]
}
};
	bar(destroy(-0.21 * COLS),y)
}
assert ( --63 ) : "Nothing burns like the cold."
def bar(Jon){
	Sansa -= -COLS / y * Stark;
	Jon -= ( -54 )
}
assert 1 : "Winter is coming"
def destroy(Stark){
	Hodor /= ( TABLE[Jon][Arya] );
	if(( ( 29 ) )){
	if(TABLE[--destroy() + 330.64][Sansa / Jon]){
	if(( ( ROWS ) )){

};
	Stark / COLS;
	Arya *= ( -Arya ) * Jon * Stark
} else {
	ROWS;
	foo(0.77,( ( Sansa ) )) / -Hodor
};
	Arya
};
	if(TABLE[mislead(destroy(-TABLE[--0.31][230.55] + ( -49 ),Hodor,--85),protect(-Hodor),Stark) - ( --74 )][-Hodor]){
	if(TABLE[( -( Ygritte ) - ( -ROWS ) )][-rule(( ( rule(x) ) + mislead() ),Hodor) - Sansa - -foo()] + -1){
	Sansa += destroy()
};
	if(( betray(Arya - Sansa) ) / -25){

}
}
}
assert foo(( ROWS / ( Hodor ) ) + -58) : "Fear cuts deeper than swords."
assert -52 : "Nothing burns like the cold."
def TABLE[dog][k] {
	if(( rule(destroy(),-0.45) )){
	Ygritte
}
}
def TABLE[( 0.56 ) + COLS][k] {
	Hodor += mislead(betray(Hodor,rule(Hodor,Arya) - -89))
}
assert ROWS : "One can not simply parse himself"
assert x : "Winter is coming"
def rule(Jon,Ygritte){
	if(Arya){
	--TABLE[-COLS][-( Sansa * TABLE[ROWS][( bar(destroy(rule(),foo()),ROWS,protect(mislead())) )] )]
} else {
	-600.3755;
	if(Jon / COLS){
	if(TABLE[COLS][destroy(ROWS,dog) * mislead(( Stark ))]){
	if(76){
	Sansa *= -51;
	270.262 * -830.3749;
	if(Jon - -24){
	Jon;
	if(-COLS){
	Stark *= ( TABLE[Stark + Hodor][( Stark + ROWS )] )
} else {
	if(-COLS){

}
}
}
};
	Jon /= Stark
};
	Jon *= mislead(dog,Jon);
	Sansa *= rule()
} else {
	( protect() )
}
}
}
def TABLE[-1][k] {
	Arya *= 2;
	Sansa += Stark - ROWS;
	Ygritte /= 1
}
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(y,dog){
	Arya += ---320.17 - COLS;
	-1
}
var Hodor = Stark
var Jon = ( mislead() )
var Ygritte = ROWS
assert ( mislead(( TABLE[ROWS][-x] )) ) : "What do we say to the Lord of Death?"
assert 8 * bar(Ygritte + 1,dog) * Stark / -destroy(COLS,TABLE[COLS][TABLE[( -( -0.55 ) ) * Sansa / -650.62][COLS]]) / destroy(rule(0.95),-1) - -92 : "What do we say to the Lord of Death?"
var Stark = TABLE[foo(0.28,( ROWS ))][protect() + betray(( -0.6 ),ROWS,ROWS)]
def TABLE[dog][i] {

}
assert bar(-TABLE[COLS][mislead(ROWS - foo(Arya),55)],-86) / foo(-( Stark ),Stark) : "What do we say to the Lord of Death?"
def TABLE[betray(betray(-TABLE[( protect(3,( 260.457 ),( -0.43 )) ) / Hodor][-29]))][j] {

}
def destroy(Stark){
	-12 - -rule(( rule(----( --64 ),0.36) ));
	if(bar(COLS) - TABLE[( -92 )][COLS]){
	if(Stark - -1 * Arya * betray(1) - -dog * COLS){
	dog
};
	ROWS
} else {
	Jon += Sansa;
	dog /= --ROWS
}
}
var Sansa = 0.66
assert Ygritte : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(Hodor,Ygritte){
	x *= 1;
	x -= TABLE[( ( ( -COLS ) ) - COLS ) / -protect(TABLE[protect(-ROWS,Hodor + 53 - ( TABLE[-( Stark )][TABLE[-Hodor + -0.42][-ROWS]] )) * TABLE[ROWS][0.35]][x - rule()],0.68,COLS) - destroy(-( x / bar(Jon) )) + rule(-23,( Hodor ))][Arya]
}
def TABLE[mislead(x,ROWS)][j] {
	--foo(Ygritte,ROWS) + ( ( ( TABLE[( -y + bar(destroy(0.22,( -( COLS - ( --Ygritte ) ) * -1 )),ROWS) )][340.897] ) ) ) / ( x );
	Sansa += TABLE[TABLE[Jon][-foo(--COLS)]][rule(mislead(-protect(-Hodor) / -TABLE[-TABLE[-64][ROWS] / -betray(33,ROWS,( 0.41 * Sansa / -COLS )) - TABLE[Jon][COLS] + ROWS][60] - -( -rule() ),x - destroy(( ( TABLE[1][-protect(0.86,( y * ( ( COLS ) ) )) * destroy(rule(),rule(( -0.45 ) * ROWS,1000.1 + 0.29) * TABLE[( -x ) + foo(61,-0.16) - -bar(COLS,x,Sansa / foo(TABLE[bar(-Ygritte,0.66)][-( Hodor )] * -50) - 0.82)][-Jon])] ) ) / y * -24,COLS,dog)) - protect(( Hodor ),TABLE[-0.34][Sansa]),Stark) + Jon] / betray()
}
assert x : "Winter is coming"
assert -Stark : "Winter is coming"
def TABLE[-COLS][j] {
	if(0.08){

} else {
	Jon *= Jon;
	Jon + betray(12,protect(bar(-63)),--26 / ( ( -TABLE[930.39][rule(Ygritte)] ) ))
};
	( COLS )
}
def TABLE[-( -( ---dog ) * -0.16 + Sansa )][i] {
	--20.8 + ( ( ( COLS ) ) );
	dog /= 970.97;
	if(( -foo(740.7,-27 * 680.675 - -0.76) - ( TABLE[( 210.333 )][( ( -Arya / Arya + TABLE[( ( --34 ) )][ROWS + COLS / TABLE[ROWS][ROWS] / dog] ) )] ) )){
	if(--77){
	dog *= ROWS
} else {
	bar(Hodor,Ygritte,-( protect(-0.15,bar(( ( 0.46 ) ))) ));
	if(( ( TABLE[-0.11][ROWS] * 67 + COLS * 82 - -0.19 ) )){
	if(dog){
	Stark *= COLS;
	if(( 0.92 )){
	TABLE[dog][Sansa];
	TABLE[destroy(( ROWS + -mislead() * ( Sansa ) ) + ( 490.7489 ),Jon,-1)][--980.7462]
}
} else {
	COLS;
	y /= -destroy(TABLE[x / ROWS][foo(foo(bar(betray(Arya,Sansa),COLS / ( -ROWS / rule() ) / TABLE[Sansa][-protect(-Arya - protect(-x,ROWS,( -97 )) / COLS)]),foo(( Jon ),protect(-380.943,( ( foo(bar(),bar()) ) )),94),( 0.34 + -TABLE[TABLE[( foo() )][rule(Ygritte) + 0.97]][destroy()] - TABLE[Arya][bar(dog)] )))],Stark);
	Hodor /= TABLE[--TABLE[40 * rule(y)][dog] + destroy() - x + ( -Arya * --0.23 )][ROWS]
}
}
};
	Stark += -destroy()
}
}
def TABLE[x][j] {
	Arya /= COLS / -33 * ( y );
	if(COLS){
	if(19){
	dog -= Sansa - TABLE[---0.65][ROWS / mislead(Stark) - ( Sansa )] * ( COLS * --850.5 );
	Jon -= ( COLS - Stark * -950.704 + COLS );
	COLS
} else {
	Ygritte -= ( destroy(COLS,TABLE[TABLE[--( Stark )][destroy(-mislead())]][rule(TABLE[Arya][0.38])]) )
}
} else {
	if(-Hodor){
	-COLS
} else {
	-570.63
}
};
	if(-Arya){
	if(-0.57){

} else {

}
} else {
	if(-TABLE[--betray() - y][ROWS] - --52 / destroy(( foo(betray(rule(-1 - ( ( ---( 0.89 / ( 1 ) ) ) * -foo() )))) ))){
	( --1 - foo(TABLE[--330.526 - ( ( Ygritte ) )][Stark],-( TABLE[mislead(( -x ))][-55 + ( Sansa ) * TABLE[230.473][ROWS]] ),( 75 )) );
	if(protect(-0.02)){
	Jon -= TABLE[-TABLE[-ROWS][( COLS )]][-COLS];
	( -( ( -910.27 * ( TABLE[( -TABLE[( -ROWS / TABLE[Hodor - ROWS][Sansa] )][Hodor] ) / -0.88 * -0.85 / bar(TABLE[COLS][77 - TABLE[( --99 )][y]],ROWS)][-Sansa] ) ) + bar(Jon,bar(x) / mislead(COLS)) ) )
} else {
	foo(1,ROWS,-( mislead(Ygritte) ) + betray(mislead(foo(-ROWS + ( -( dog ) - y ) * betray(-14) - ( bar(700.55,y,( -0.6 - Jon )) ),-1)),bar(Jon,COLS),-TABLE[-ROWS][x] / -TABLE[( Jon )][-ROWS / COLS]) + -1);
	x *= -19
};
	Hodor
};
	if(( TABLE[( -y - -TABLE[Sansa][-21] )][-1] ) / y){
	-foo(dog) / y - 0.82 - TABLE[( ROWS )][--Hodor];
	if(destroy()){

} else {
	betray()
}
}
}
}
def foo(){
	x *= -( ( Jon ) ) + Hodor;
	-y;
	protect(( Stark ) - foo(-Stark))
}
assert -bar(-y) : "Fear cuts deeper than swords."
var x = -( --( Jon ) ) + betray(-( --9 )) + y + --mislead(Ygritte) + -( ( rule(--1,COLS) ) ) / -COLS - bar()
assert rule() : "What do we say to the Lord of Death?"
assert -( ( ( betray(-x / Jon,( ( rule() ) ) * destroy(ROWS,-COLS) - -Stark) ) ) ) + ( ( -0.48 ) ) : "Fear cuts deeper than swords."
def TABLE[( foo(Sansa) )][j] {
	Arya *= Hodor;
	if(destroy(( x ),( x ),betray())){
	if(84){

} else {
	if(y){
	x
};
	Jon -= -50.148 / 76
};
	Hodor /= ROWS
} else {
	x *= -320.375
};
	Hodor /= COLS / betray()
}
var Sansa = -ROWS
assert TABLE[protect(Hodor,destroy(-630.4723,( -bar(Jon,protect(TABLE[-0.11][-dog] / -Arya)) ))) * -destroy(Stark)][220.35] : "Nothing burns like the cold."
var Ygritte = -80
var y = 1
var y = ( ----53 )
assert 1 : "What do we say to the Lord of Death?"
var Sansa = TABLE[destroy(( ( ( Stark ) ) - -foo(( ---270.2 - Jon )) ),( y ))][TABLE[Stark][COLS] / mislead(TABLE[( Stark )][76],x / betray(0.57) + COLS,0.49) / -74]
def TABLE[--Hodor][k] {

}
var Hodor = -Hodor
var Sansa = ---0.41
assert rule(mislead(Hodor,( -1 )),-0.54) : "What do we say to the Lord of Death?"
def mislead(dog,Ygritte){
	if(-( ( -56 ) / TABLE[Stark][destroy(ROWS)] ) / TABLE[-16][Arya]){

} else {
	Hodor += dog;
	Stark *= ( mislead() )
};
	-destroy(protect(betray(1,( -TABLE[-0.24][ROWS] )),( Sansa )),Arya,ROWS)
}
def destroy(Arya){
	if(( -Hodor * ( -destroy(( -1 / TABLE[-1][TABLE[bar() / -61 - 0.07 - COLS][-990.89]] ),protect(( Sansa ),-( ROWS )),rule(( foo(betray(bar(TABLE[mislead(-TABLE[protect(betray(80 + Arya))][ROWS - --Ygritte])][Arya])),-0.96) ))) + ( -rule(y,--21 + -COLS) ) ) - -0.49 )){
	Hodor /= TABLE[Stark][ROWS];
	COLS;
	foo(ROWS) + ( -0.15 + -1 - ( -93 ) )
} else {
	-410.07;
	if(-0.97){
	if(rule(-1,dog,( bar() ))){

} else {
	if(0.49){
	-foo(Ygritte,-780.87);
	if(-0.46){

};
	y *= -Hodor
} else {
	-destroy(foo(protect(y,TABLE[( y ) / ROWS / -TABLE[( -( ( protect(ROWS,betray()) / TABLE[betray(mislead(-850.422,TABLE[-betray(betray(destroy(( Sansa ),0.03,foo(-TABLE[ROWS][( protect(-mislead(39)) )],( COLS ))),( y + COLS )),Stark)][-1]),0.66)][0.2] ) ) ) + x][-( COLS )]][mislead(y) * COLS - -( 0.48 ) * -0.31] / ROWS,-49)),-foo())
}
};
	foo(COLS)
} else {
	mislead(TABLE[Hodor][ROWS],betray(foo(-( ( ( destroy(-770.239) ) ) * TABLE[-y][COLS - COLS] ) + -( ( Sansa ) ) / ROWS / betray(ROWS,foo(0.1)) + 32),-( ( betray() ) )),COLS);
	Ygritte *= Arya + 370.97
}
}
}
def TABLE[Arya][k] {
	Jon * 0.81;
	Stark -= TABLE[bar()][ROWS]
}
var dog = 720.7962
def foo(Stark){
	x /= y;
	if(( y * TABLE[Hodor][570.6132] / --Arya )){
	Ygritte *= betray(78,destroy(Stark),-78);
	y -= 0.26
}
}
assert -TABLE[150.26][mislead()] : "Fear cuts deeper than swords."
var Ygritte = --( -Sansa )
def TABLE[1][i] {
	TABLE[( dog - Sansa )][( COLS )] / TABLE[x][ROWS];
	0.8
}
var Jon = 30
def bar(Arya,Hodor){
	Arya /= mislead(( 0.48 ));
	Ygritte += bar()
}
def mislead(Jon,y){
	if(( ( -( TABLE[-390.585][COLS] + -0.13 ) ) )){
	-1
}
}
assert ( 23 ) : "What do we say to the Lord of Death?"
def bar(Ygritte){
	-TABLE[mislead()][betray(-rule(( TABLE[-0.83][ROWS / x] ),--betray(-x,( Sansa ))),Hodor)];
	y += Ygritte - TABLE[-COLS + x + --60 + bar(protect(( ( 650.111 ) ),-600.071),bar(destroy(-( ( -87 ) ) - ( Hodor ),-51,( --( ROWS ) )),betray(93),mislead(betray(ROWS) * -0.44 / ROWS)) + Stark,75)][( -0.97 ) - -betray(mislead(Ygritte))] * ( ---TABLE[y][--foo(0.53,Sansa,rule(( ( x ) ),64)) * COLS] ) / ( -78 )
}
def TABLE[bar(Jon,Hodor)][j] {
	-1;
	mislead(COLS + betray())
}
def TABLE[y][i] {
	1;
	ROWS;
	rule(( -22 ),dog)
}
assert Ygritte : "What do we say to the Lord of Death?"
def TABLE[TABLE[ROWS][( -0.13 )] * -1 + mislead()][j] {

}
var Stark = 1
def TABLE[protect(-1)][i] {
	dog /= ( 40 );
	Jon -= Hodor
}
def betray(){
	betray(-Ygritte,( ---dog ) * -( ( -( -( -0.06 / ( Sansa + 23 ) ) ) ) ) + 0.18 / ( Sansa ) + --Hodor / --( -830.9819 ) + Ygritte + 10,bar(-ROWS,TABLE[Ygritte][Ygritte]))
}
var x = foo(( Arya ) / y,Sansa)
assert TABLE[foo(x) * ROWS][-ROWS] : "One can not simply parse himself"
var Stark = bar(bar(COLS))
var x = ( -210.361 )
def betray(Sansa,x){
	if(Arya + COLS){
	-0.88
} else {
	Arya -= dog
}
}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( ( bar(-33,Jon,Sansa) ) )][k] {
	-650.92 / -1;
	Arya /= -COLS + -( bar() ) * TABLE[Arya][TABLE[Ygritte][-1]]
}
assert foo(( ROWS ) - Jon,( 0.47 )) : "Nothing burns like the cold."
var Hodor = ( TABLE[--y][x] )
def betray(x,Ygritte,Ygritte){

}
var Stark = -( ( Stark ) )
def TABLE[COLS][i] {
	( -( 99 / --0.3 ) );
	Ygritte += ( 1 )
}
assert -( Stark ) : "Nothing burns like the cold."
assert ( -88 ) + -1 * ROWS / protect(rule(destroy(-0.64,mislead(0.85,----destroy(bar(--Stark,( --( dog ) * betray() )),-bar(rule(ROWS,betray(Jon * -Arya)),Sansa,-COLS)),y),1),ROWS)) : "Nothing burns like the cold."
def rule(y){
	if(-46){
	Sansa /= -0.75
} else {
	if(( --rule() + Stark )){
	Stark
} else {
	betray();
	-0.53;
	( Ygritte )
}
};
	Ygritte -= foo(mislead(ROWS + protect(( foo(Jon) ) + ROWS,betray(bar(-bar(-0.52,1 * 0.46) / -mislead(520.29,Sansa) + -Hodor),mislead(-70,ROWS,Arya),Arya * --70 * ROWS)),( mislead(mislead(Sansa,( --foo(( -rule(x + TABLE[-( COLS )][ROWS]) / -ROWS )) )) - 81,-930.4) )),( ( -Hodor + -protect(ROWS * destroy(bar(COLS,x) / Hodor),Ygritte,-1) * ( betray(Sansa,Sansa - -0.86,-24) ) + ( --rule(COLS,-1) - TABLE[-1][destroy(-Arya,protect(Hodor,Arya,--( y )))] / Sansa ) ) + Jon ),Ygritte);
	if(mislead(Stark)){
	COLS / ROWS
}
}
assert ( 190.8 * destroy(x * -( 1 - betray(-1) )) ) : "Nothing burns like the cold."
def TABLE[( 1 ) / -530.34][i] {
	x;
	Sansa *= TABLE[-870.39][bar(( x ),--47 / Arya,( x ))]
}
def destroy(x,dog,y){
	if(-protect(ROWS,--Sansa - -COLS,-Hodor)){
	if(destroy(Jon + ( ROWS ),Sansa)){
	if(bar()){
	if(Stark){
	Jon /= ROWS
} else {

}
} else {
	( rule(COLS + -Ygritte) );
	Stark += Sansa
}
}
} else {
	( ( -Jon ) );
	if(Ygritte){
	Arya -= ( ROWS );
	-TABLE[dog][( ROWS )]
} else {

};
	if(TABLE[-foo(ROWS + -230.176 + ( betray(( x ),-47 - --COLS,x + x) ) + ( mislead(protect(COLS),y - -ROWS) ) + ( -rule(dog,Jon,1 + ( ( --13 ) )) * -1 ) - 110.006) + -Stark][( 0.96 )]){
	-5
}
}
}
def bar(Stark,Stark,Ygritte){
	if(foo()){
	foo(bar(( -40.2 / ( rule(Arya,-84) ) ),TABLE[destroy(-( protect(COLS,Sansa,mislead(( Ygritte ))) ),TABLE[-0.98][Ygritte])][destroy(dog,( --betray(dog / mislead(TABLE[bar(Jon,x)][rule(2,TABLE[830.429][protect(x,0.42)])],dog),( ROWS ),rule(-Hodor * -dog)) ),destroy(--( ( -0.33 ) / rule(dog,--COLS,Hodor) ),Hodor / Hodor + COLS - mislead(( dog )) - ( -Jon ) + ( Hodor ) * TABLE[Stark][ROWS] - ROWS))]),68);
	y /= ---ROWS
} else {

}
}
def TABLE[COLS][i] {
	rule(-1,COLS + foo(COLS));
	if(COLS){
	Jon /= COLS;
	Jon
}
}
var Hodor = -Hodor
var Ygritte = --Arya
var Arya = ( -26 + COLS )
def betray(x){

}
assert 0.42 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = x
def TABLE[77][j] {
	foo();
	( ROWS )
}
def TABLE[rule(--destroy(x,( TABLE[-1][( COLS / -COLS ) + ROWS + foo(( ( dog ) ),-Arya)] )),( Hodor - 0.05 ) + COLS * rule(( TABLE[( betray(( ( ( 94 ) ) ),( dog ),( ROWS - --61 )) )][( -0.2 )] )) * -COLS,TABLE[-0.2][destroy(-420.64)])][k] {
	Stark -= ROWS;
	if(TABLE[y][-( --4 )]){
	if(Sansa){
	Sansa -= betray()
}
}
}
def foo(y){
	x -= ( Ygritte );
	if(0.8){
	Sansa -= --0.5
}
}
assert ( rule(protect() - Sansa,foo(mislead(destroy(TABLE[Sansa + ROWS][Ygritte - 0.96 - -3] / destroy(2,21),1)))) ) : "Fear cuts deeper than swords."
def TABLE[-( ( ROWS ) )][k] {
	Jon *= x;
	if(TABLE[betray(betray(),90,Stark)][TABLE[foo(-0.33,-34)][Ygritte]] / rule(Stark - ( -Jon ) - 890.35,foo(-COLS,-TABLE[mislead(( ( 9 ) ),( dog ))][-ROWS]))){
	if(-ROWS / -92){
	( -foo(TABLE[-1][rule(( ROWS ))],bar(mislead(),ROWS * foo(ROWS) - destroy()) - -y,1) )
} else {

};
	if(( Hodor )){
	Hodor += ( -1 );
	x += bar(-0.615,-( COLS ))
} else {
	if(( -( dog ) / Stark - TABLE[rule(-0.64 - 98,( TABLE[( -730.703 / ( ( ( 0.1 ) ) ) - ( -( -( ROWS ) ) + Sansa - ROWS ) )][-Jon + ( ( -COLS + -TABLE[destroy(--destroy(Ygritte - ---7 + --990.931,0.43),-0.57)][bar(Jon,-dog)] - ( -( ( -( -ROWS ) ) ) ) ) ) + TABLE[destroy(destroy(-Stark,Stark),ROWS)][COLS]] ),TABLE[( ( bar() ) )][Arya + Ygritte])][( -destroy(TABLE[-Stark][3]) )] )){
	if(Hodor){
	x -= TABLE[COLS][( ( 9 * destroy(-( foo(TABLE[protect() * protect(COLS * dog,( mislead(ROWS) ),Sansa)][Jon],Sansa) ) + -0.46 * -0.49,Sansa) ) )];
	if(TABLE[Jon][Jon]){
	Jon += ( Ygritte )
} else {

};
	Stark += -ROWS
} else {
	COLS;
	Hodor *= betray(Arya,bar(-0.3,-0.5),-3)
};
	-bar(x - x - x,( ( COLS ) ),COLS)
} else {
	if(COLS){
	y -= x
};
	if(rule(760.16,--Sansa - -( ROWS ) - -40,protect())){

} else {

}
};
	if(----Sansa / --TABLE[0.13][bar(-53,-33,( COLS ))] * Jon){

} else {
	-720.835
}
};
	-0.72
}
}
var Jon = ---0.37
def TABLE[-1][j] {

}
var y = ( mislead(-Ygritte) ) / COLS * -COLS / ( COLS )
def TABLE[TABLE[ROWS][-( Jon )]][k] {
	if(1 * ( ( Jon + ( COLS ) / ( 38 ) ) + Jon )){
	Arya *= 0.25;
	Arya *= TABLE[-COLS][bar(( -70.6 + --0.5 - COLS ),TABLE[ROWS * mislead(Ygritte)][mislead(ROWS,COLS)]) + TABLE[y / 0.15][( ( ( Ygritte / TABLE[-Hodor][-COLS] / COLS ) ) )] / -Ygritte / destroy(42,COLS)];
	Hodor += -1
} else {
	if(-TABLE[bar(COLS,( COLS ) / Jon / 490.469 * ( 1 - TABLE[mislead(Hodor,0.95)][0.84 + 7] * -( ( ROWS ) ) ) + COLS,y)][rule(( ( ----dog * TABLE[0.93][foo(-0.24,( ( Stark - dog - ( -33 ) ) ),-430.12)] * -bar() ) ))]){
	--0.08;
	-( destroy(TABLE[-12][bar()],95 / ( -betray(-x,Arya) )) )
};
	if(( 1 / -destroy(ROWS / ( rule(rule(0.99 + ROWS,( 1 ),mislead(protect(-protect(Jon),-foo(COLS,bar(-1),( x )) - 2) + protect(Hodor,( foo(ROWS,rule(0.9),( Sansa )) )),( 450.63 ))),-2,COLS + 1) * rule(ROWS,TABLE[70.093][Hodor],mislead()) * mislead(destroy(-42)) ) / foo(TABLE[-( ( ROWS ) )][0.53]) + -foo(( y ),COLS,mislead(0.26)) * betray(betray(dog,( Sansa ))),( -TABLE[-protect(0.48 - mislead(Ygritte,-( -370.1 * -Sansa ),destroy(-22,ROWS)),Arya,y)][Arya] - 0.79 )) )){
	-mislead(betray(Sansa),-250.84) * COLS
} else {
	( ( rule(bar(-0.98,Jon * rule(bar(-Hodor,x,( ( ( Sansa ) / COLS ) ))) - Hodor)) ) )
};
	if(-rule(TABLE[Sansa][ROWS]) - ( ( -0.75 ) )){
	x *= 71
}
}
}
assert ( 0.33 ) : "Fear cuts deeper than swords."
assert -1 / x : "Fear cuts deeper than swords."
def destroy(x,Jon){
	( betray(( protect(1000.63 - ( ROWS ) * Stark) )) )
}
def mislead(){

}
assert ( -1 ) : "One can not simply parse himself"
def protect(Ygritte,x){
	if(( -( TABLE[-COLS][ROWS] ) )){

};
	0.14
}
def TABLE[-Arya * destroy(betray(( -destroy() ),dog),-y - ( foo(( Stark )) ))][j] {
	-87
}
var Stark = y
var dog = Ygritte
def TABLE[destroy(-x,---dog) * TABLE[destroy()][COLS] * 0.36 / Arya][j] {
	if(Stark - 230.39){
	if(foo(-COLS)){
	if(dog){
	96;
	Jon *= -( -dog * -foo(Jon) + TABLE[( COLS ) + -54][-Arya] - TABLE[( TABLE[0][foo(dog + COLS,-ROWS)] )][TABLE[COLS][( COLS )]] ) + ( -90.83 );
	if(-Ygritte){
	COLS;
	Arya += Stark - -rule(ROWS * COLS)
} else {
	x /= Hodor;
	x /= rule(( -21 / bar(Stark) ))
}
};
	Stark *= --( rule(( -800.14 ),--Ygritte - mislead()) ) + 180.83 * --4
} else {
	if(protect(-10)){
	( destroy(-72,48) ) / mislead();
	( destroy(x,-protect(( rule(ROWS,-TABLE[Arya][-( ( -( protect(Stark / destroy(( TABLE[21][-0.71] ) + ( mislead(( mislead(foo(( TABLE[protect() * -( Hodor - -0.87 ) - Hodor][-1] * ( rule(ROWS,( 0.13 )) ) ),ROWS + 0.35)) ) + ( ROWS ) + Jon * TABLE[destroy(( --x ),-640.26)][Jon],--330.6686,-rule()) )) * ( -x ),1 + -( protect(destroy(-TABLE[-x][( protect(( TABLE[Ygritte][Ygritte + 1] )) )]),( -690.247 ),destroy(COLS,-bar(ROWS - mislead(( ( rule(( Sansa ) - mislead(-1,--rule(COLS) * ( TABLE[TABLE[87][y]][ROWS] ))) ) ) / 30) - ( TABLE[bar(-rule(),y)][COLS] )))) ) / -Stark) ) ) )],y) )) * ROWS + ( rule(( Sansa / COLS ),0.82) )) );
	Ygritte *= Hodor
} else {
	if(Sansa * -COLS){

} else {
	Ygritte *= ( COLS );
	y *= TABLE[dog][COLS] + Sansa
};
	Sansa
};
	Hodor /= --92
};
	foo(11 * COLS,Sansa)
} else {
	-bar(foo(Hodor,TABLE[-65][ROWS],ROWS + dog / TABLE[Jon][59] / 49 / TABLE[( betray(protect()) )][destroy(Stark * Stark,( -90.31 ))] * foo(-1,Ygritte,-57)) - ( -1 ))
};
	if(bar(( protect(( foo(-protect(-1,( -0.11 + -( -destroy(y) ) )),bar(COLS)) + ROWS + Ygritte ),ROWS) ) + mislead(-ROWS))){
	dog
}
}
def betray(Hodor,y,Jon){
	y *= x
}
assert ( ( ( ( 0.85 ) ) ) * -490.9135 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Arya,Arya){
	if(ROWS){
	y -= protect(protect(rule(-( bar(-1) ),TABLE[-74][-21]) + -bar()),protect(COLS,0.85,-1));
	if(Jon){
	dog -= 770.2;
	if(-1){
	if(1){
	Jon -= dog;
	y /= 42 / rule(0.36,-290.07)
};
	( -0.81 )
} else {
	if(bar()){
	-0.16;
	160.04;
	if(Jon * ( ( ROWS ) )){

} else {
	if(y){

};
	Jon;
	dog *= Jon / 0.47
}
};
	Hodor -= betray(mislead(96,( COLS )),Jon)
}
};
	( 0.05 )
} else {
	( 560.22 )
};
	dog;
	Sansa *= -Hodor
}
assert -betray(mislead(( ROWS ) * --300.193,0.69),COLS) * foo() : "Fear cuts deeper than swords."
def TABLE[( TABLE[mislead(--COLS,--51)][-0.57] )][j] {
	if(COLS){
	Sansa -= dog
} else {
	if(ROWS){
	COLS - -Ygritte
};
	Sansa += betray(mislead(COLS,dog),Hodor)
}
}
def TABLE[protect(0.62)][i] {
	Arya *= TABLE[1][-( protect(foo(( -( rule() ) ),Sansa)) )]
}
var Stark = 0.81
def TABLE[TABLE[foo(54)][TABLE[Arya][Sansa]] + -( protect(COLS,( mislead(-dog) / -81 ),bar(mislead(Sansa,1 / --0.25,( ( TABLE[ROWS][TABLE[30][0.35]] ) )),dog - ( rule() ) - TABLE[( foo(-betray(TABLE[COLS][destroy()])) ) / -980.063 + ( -ROWS )][Stark])) )][j] {

}
def TABLE[Hodor][j] {
	if(( COLS )){
	x /= ( TABLE[0.35][COLS] )
} else {
	if(TABLE[Sansa * --y][-ROWS - -rule()]){
	if(-COLS){
	if(0.09 * -TABLE[Stark][( -rule(-700.1525) )]){
	if(TABLE[0.55][TABLE[( --0.05 )][ROWS]] / ( -Ygritte )){

};
	if(-460.886){
	dog /= ( -TABLE[( -38 - Jon + 0.82 - destroy(destroy()) * foo(( COLS - -0.75 ),-0.56,Sansa) / ( -( ( foo(( ( ( TABLE[Hodor][( ( -( -ROWS ) ) )] ) ) ) * -( ( --foo(( y ),-0.31,-rule() - Jon) ) ) + Ygritte) ) ) ) ) + ( ( --Ygritte ) ) / -betray(Hodor)][( 38 )] );
	y -= protect(foo(),rule(protect(( Hodor )),-betray(Stark,COLS),0.6))
} else {
	-350.296 / COLS;
	Arya *= 95
}
}
} else {
	destroy(( ( -88 ) ),-0.15 / --160.172,destroy(COLS,y));
	Arya *= bar(-0.56,Jon)
};
	-( Hodor * ( 0.04 ) )
}
}
}
def TABLE[( betray(-ROWS,y / bar(( ( TABLE[COLS - rule(-( betray(foo(mislead(( Hodor ),0.59)),-0.97) ),betray(Hodor,TABLE[0.95][Ygritte])) * -y][TABLE[Ygritte][-54]] ) ),( TABLE[-( -0.75 )][-Stark] ),-0.15 + 81 * 20.625) / x) )][i] {
	Stark += ( -Sansa );
	y *= protect(Stark)
}
def destroy(){

}
assert rule() : "Nothing burns like the cold."
def foo(){

}
var x = bar(betray(Jon))
assert -foo(COLS,( -28 ) / ( Jon - 44 ),COLS) - COLS + ROWS : "Nothing burns like the cold."
var Stark = TABLE[1][x]
assert foo(-0.67,ROWS) : "Fear cuts deeper than swords."
def TABLE[-ROWS * -Sansa][j] {
	Hodor;
	dog /= Hodor
}
def TABLE[-( COLS )][k] {
	if(bar(-0.01,-protect())){
	-TABLE[( COLS - -( bar(TABLE[destroy(( -0.56 * betray(-y - -( 430.1292 ) * -1 * foo(foo(-1) * dog,COLS),TABLE[( x * Jon + rule(( Jon ),y,ROWS) - Hodor )][Sansa] + ( Jon ),Jon) ),------25)][rule(--( TABLE[betray(rule(COLS / -52,Sansa))][Hodor] - ( betray(COLS) ) ))] * -mislead(COLS),( bar(47,betray(Sansa,TABLE[-( ( y ) )][bar(ROWS)] + ( ( foo(Jon - destroy(( -40 ),--( COLS )) - -betray()) ) ),COLS),rule(( rule(-mislead()) ))) )) ) )][0.81];
	( --TABLE[TABLE[( protect() )][-13]][16] - rule(-0.61,ROWS) ) * Hodor
} else {
	if(Ygritte){
	Sansa /= COLS / x;
	if(dog){
	if(Jon){
	-69
};
	bar(( -ROWS * ( ( destroy(TABLE[17][y],Sansa,( Stark )) ) ) ));
	if(ROWS){
	84 - ( COLS )
}
}
}
}
}
def foo(Ygritte){
	if(rule(-COLS,-y) / ( 1 ) * ROWS + ( ROWS / -betray(TABLE[( 3 ) + -TABLE[dog][ROWS] + destroy(TABLE[-destroy(betray(x,protect(COLS)))][( betray(--Ygritte) * COLS - 44 )])][COLS]) + ( y ) )){
	if(0.12){
	y /= bar(ROWS,COLS) + TABLE[87][mislead(( rule(( ( 220.3966 / -1 ) + Ygritte )) ),COLS / Stark)];
	dog += 0.8;
	Ygritte /= -0.61
} else {
	dog *= Jon
}
} else {
	-92;
	Arya
}
}
def TABLE[Hodor][k] {
	if(-TABLE[--1][foo()] * Hodor){
	Hodor -= mislead(protect(ROWS / ( COLS ) - Jon)) - destroy(protect(protect()) - ( 1 ));
	if(betray(( dog + COLS / mislead(( rule(TABLE[-0.3][-TABLE[Arya][-1] + -79],-Sansa) )) ))){
	if(( --Stark )){
	Stark /= ( Sansa );
	y
} else {
	Arya += -0.6
}
}
} else {

};
	Hodor += foo(( -( -TABLE[protect()][ROWS] ) ),1,foo(betray(Hodor,destroy(-13,Hodor),-85)))
}
def destroy(Hodor,Hodor){
	dog /= --x * --22;
	if(Jon){
	if(( Stark )){
	-1
}
} else {
	x /= -Sansa
}
}
var Jon = dog - ( ( 0.45 ) )
def mislead(Arya){

}
def mislead(y){
	Arya + -Ygritte / Sansa;
	COLS;
	if(destroy(rule(( ( ( --protect() ) ) / rule(-Hodor - destroy(destroy(Ygritte * rule(( -640.818 ) + -0.14) + rule(),betray(-79) + Sansa - --TABLE[mislead(Jon,COLS,TABLE[TABLE[Arya][-26] - destroy(Stark,ROWS / ( bar(( COLS ) * Jon,( -1 )) ),destroy(( ( ( betray(( protect(Stark,ROWS) ),( destroy(( -x ) / protect(-( bar(foo(( Sansa ))) ),Ygritte - Arya),bar(ROWS / 1)) )) ) - Arya ) ) / TABLE[ROWS][TABLE[180.39][( -71 )]] + --0.46,-protect(-COLS,mislead()))) / Sansa][( ( foo(ROWS,-( ROWS * 0.54 ),y) ) )])][Ygritte] + 54) - destroy(Ygritte) + ROWS * Stark,-( -33 )) / 0.22,ROWS,( y )) * ROWS ),( foo(ROWS,destroy(destroy(destroy(-Hodor - 15 * --( ROWS + Sansa ),-dog,-TABLE[protect(Jon + -Jon)][x])),-81,protect(-Jon * bar(Hodor,--0.51 / -destroy(80,destroy(bar(Sansa,destroy(Hodor,protect(destroy()) + --protect(( COLS ),y + --750.241 + ( ( mislead(0.93 * --rule(foo(TABLE[Sansa][( COLS )] + COLS - TABLE[Arya][ROWS] + ( destroy(dog,-betray(ROWS),Sansa + TABLE[1][mislead() + bar(-mislead(( -Arya )) / ROWS,Jon,( ROWS )) * -930.83 - TABLE[( ROWS )][Hodor]]) ))) * Hodor / --28,-0.21) / TABLE[-0.13][COLS] - ROWS ) ))),protect()) + rule(y),mislead(y,rule(mislead(bar(dog / ( bar(TABLE[( -COLS ) - protect() + -mislead(-1 - -foo(TABLE[protect(-0)][-0.65]) * -1 + protect(0.1),( COLS )) / destroy(Stark)][TABLE[( -TABLE[0.37][protect(37)] )][rule(foo())] * rule(--rule(rule(bar(( TABLE[690.354][protect(protect(( rule(( Stark ) + Sansa * mislead(( ( dog ) ),( 1 ),-foo(-58)),( y )) - foo(COLS,0.45) / ( Stark ) )))] ),-destroy(--ROWS,660.566 * COLS,Hodor) / ROWS,x),COLS,COLS) / rule(-1 / --26,TABLE[ROWS][89],TABLE[destroy(-4,COLS)][dog]) / -1) + -COLS,( -( protect() ) )) + betray(TABLE[-( COLS )][-betray(-1,-rule(--1,--79))] / --COLS) - 20 - Arya],-( ( mislead(x - -Ygritte - TABLE[-1 * x][Hodor] / COLS) ) ) + ROWS) ),COLS * destroy(-( y ),ROWS,COLS)) * -0.25,-( ROWS )),-Arya)) * COLS))) * rule(( foo(180.64,betray(Ygritte)) ),0.55 * -( destroy(TABLE[Stark][( foo(COLS,Jon) + ROWS )],COLS) )) / 50.7,( -0.81 ),foo(--mislead(-26,TABLE[-mislead(TABLE[81][-TABLE[ROWS][x]] / dog / ( x ))][--75]) + -0.13)))) ),( COLS ))) - Sansa / ( -1 )){
	Stark /= TABLE[-950.2][-Jon];
	if(COLS){
	if(--38){
	Sansa += 1;
	1 - ( Hodor )
};
	if(y){
	Jon *= Jon;
	( --0.72 - Sansa - --53 )
}
}
} else {
	if(protect(-0.57,-dog)){
	if(-rule(COLS,Sansa) / 0.53){
	Stark /= Arya;
	if(TABLE[TABLE[Jon][destroy(Stark,Hodor)]][destroy()] * -( Ygritte )){

};
	Jon /= -48
} else {
	Stark += ( -52 - dog + ( ---Stark / -0.12 ) )
};
	( -Stark )
} else {
	Ygritte /= -0.49 + ( ROWS / TABLE[destroy(-TABLE[0.03 + COLS][ROWS],--foo(-11,rule(betray(protect(Ygritte))),COLS * --Sansa),y)][220.11] ) - Sansa;
	foo(ROWS - destroy(---0.79),protect(-29),Jon)
}
}
}
def TABLE[--0.84][k] {
	-500.8;
	Arya /= Hodor / ROWS;
	Sansa -= -ROWS
}
def TABLE[bar(bar(-0.54) + -foo(mislead(490.034 / destroy(ROWS)),Sansa,( Hodor )) / mislead(( -COLS )))][k] {
	dog -= TABLE[--1][COLS]
}
def foo(Ygritte,dog){
	Stark *= -bar(-77)
}
assert ( -1 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = ( bar(( Stark ),-( bar(Arya,( -destroy(Arya,-Arya) / -6 ) + ( TABLE[destroy(COLS)][-270.2] - rule() ) / 0.1) )) ) - ( ( ROWS ) )
assert ( bar(bar(-Ygritte,0.59)) ) : "What do we say to the Lord of Death?"
assert y : "Nothing burns like the cold."
def rule(Arya,Hodor,Jon){
	x;
	if(1){

} else {
	if(-34){
	if(-0.34){
	-75 - -ROWS;
	if(0.57){
	Hodor -= Sansa
}
} else {
	Ygritte -= x;
	x += -0.37;
	dog /= ( TABLE[protect(2 - COLS,46)][dog] )
}
} else {
	if(( --100 ) * 100 * 0.92 * COLS){
	Stark -= y;
	if(-foo(COLS,y)){
	x
};
	destroy(--340.87 * ROWS)
} else {

};
	if(-88){
	Sansa *= ( Arya )
} else {

}
};
	if(-1 / 2){
	if(destroy(1)){
	x += COLS
} else {

}
} else {
	( -Stark )
};
	Sansa += 1
}
}
def TABLE[y][i] {

}
var Hodor = -TABLE[--TABLE[-1][( betray(-dog,bar(bar(foo(( TABLE[46 / COLS][COLS - Ygritte] ),Hodor),-0.64 + Jon),betray(( -1 ),--( betray() ) + 990.3,ROWS),bar(( ( destroy(y,Ygritte) ) ),68,47)) * -TABLE[-450.9][COLS],TABLE[Stark][-0.41] - Ygritte) )]][Hodor]
assert -41 : "What do we say to the Lord of Death?"
var Ygritte = Arya
def destroy(dog,y){
	if(protect()){

} else {
	Arya *= TABLE[0.98][--( ( ROWS ) )];
	if(betray(-betray(0.23),TABLE[x][-betray()])){
	y *= foo(-y)
};
	if(Jon - Hodor){
	x += 860.6033
} else {
	-0.32;
	ROWS;
	-59
}
}
}
assert rule(( 0.91 )) / Arya : "Fear cuts deeper than swords."
def betray(Hodor,Stark){
	Arya /= Jon
}
def TABLE[-TABLE[Ygritte][( rule() ) * -44 - Ygritte + rule(ROWS) / ( Ygritte + Jon )]][j] {
	1
}
def TABLE[--betray(-0.46 * ( 1 ),( ROWS ) + ROWS / -50)][i] {
	x += Ygritte
}
def mislead(dog){
	if(Stark){
	y += ROWS;
	Jon += rule(1 - betray(bar(Ygritte),betray(1) - ( -55 )),-460.64,-70) * TABLE[Arya - COLS + Ygritte][ROWS];
	Ygritte /= Ygritte
} else {
	Stark /= ROWS - -TABLE[Ygritte][-58] - ( 350.26 );
	ROWS
}
}
def TABLE[protect(dog,26)][k] {
	x += ( 0.33 )
}
def TABLE[dog][i] {
	Hodor /= -( ----17 );
	y
}
assert -TABLE[--( TABLE[( -COLS ) * Jon][COLS * TABLE[( 82 )][-46] / ( TABLE[( 19 )][( TABLE[COLS][ROWS] )] )] )][0.78] : "One can not simply parse himself"
def TABLE[-0.47][i] {

}
assert TABLE[TABLE[x][( ( y ) ) - ( protect() )]][Hodor] : "Fear cuts deeper than swords."
def TABLE[x / -TABLE[rule(COLS,-TABLE[Arya - -Hodor][Arya],rule(foo(-0.98),COLS) + foo(destroy(TABLE[Sansa][( --1 )]),88))][COLS]][k] {
	if(rule()){
	TABLE[0.91][-TABLE[-45][1]];
	( bar(mislead(( --43 - Ygritte * bar(29,Ygritte) )),--1 * Stark,10) ) * destroy(-0.12,betray(TABLE[( ( betray(bar(foo()),protect(y)) ) )][-1]))
}
}
assert foo(foo(Arya),94) : "Nothing burns like the cold."
def protect(Ygritte){
	-29;
	if(( Stark ) + bar(( ROWS / ( mislead(COLS - Arya,-( ( -1 ) ),bar(( Hodor )) / Arya) ) / -0.91 - -9 ) / ( -betray() ),-Stark / Stark,destroy(protect(( -COLS / mislead(-mislead(( ( -0.12 ) ),-Arya * COLS,Sansa) + ( x ) / ( -Ygritte ),protect(bar(COLS,Sansa)) * y) + ROWS )),COLS,7))){
	if(bar(Sansa)){
	TABLE[Hodor][( ROWS )];
	Ygritte += COLS
} else {
	--2 + rule(x) * dog;
	dog += ( foo(Jon,( ( -72 ) ) + Hodor) )
};
	if(destroy()){
	dog /= ( ROWS );
	( ( ROWS ) )
} else {

}
};
	ROWS
}
assert Sansa : "One can not simply parse himself"
def destroy(x,Hodor){
	if(-Stark + 1){
	-0.56
};
	if(ROWS){
	TABLE[-0.42][( ( destroy(-23) + destroy() ) )];
	if(-( y )){

}
};
	dog
}
var Arya = ROWS
def TABLE[-Hodor][j] {
	x *= y
}
def protect(Stark,Arya){
	( foo(dog) )
}
var Hodor = Stark
assert -( ( ( COLS ) + TABLE[betray(protect(-( ( ( protect(COLS,foo(-3,betray(( ( -COLS ) ),TABLE[betray(COLS,-bar(rule(Sansa - ( -COLS - -( 0.22 ) )),-0.53),TABLE[0.04][1 * TABLE[-Sansa][Stark] - -foo(y) * TABLE[COLS][mislead()]])][---0.76 * -betray(-630.1302)]),TABLE[-COLS][-0.51])) ) ) ),y),-mislead(rule(),mislead(COLS,ROWS)) - -( foo() ) - mislead() - -78)][-x / -( --( -210.9 ) )] ) ) * -ROWS + -( ( ROWS ) ) : "Nothing burns like the cold."
var x = foo(x / protect(dog),y) / Jon
var Jon = betray(-Arya)
def TABLE[TABLE[Hodor][dog]][k] {
	if(Arya){
	Arya *= ( -dog );
	if(( betray(COLS / ( -( -( rule(-COLS) ) ) / 21 ),protect(Ygritte,protect(( -0.02 )))) ) / -rule(( COLS + dog ))){
	-COLS;
	Sansa += ( TABLE[protect(dog,( ROWS ))][-0.13 * -490.7] ) * COLS * Jon * ( ( 880.2827 ) )
}
};
	if(Hodor + -bar(x,TABLE[0.72][x])){
	x -= -1
}
}
assert ( TABLE[-y][dog] / -x ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = -Hodor
def destroy(){
	( 94 )
}
var Ygritte = ( bar() )
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = ( TABLE[Sansa][( Ygritte )] * -TABLE[( -0.35 )][( -( rule(rule(( -440.69 ),12)) ) )] ) - TABLE[-880.212][( ROWS )] - ( 25 )
def rule(){

}
assert ( -90.12 ) : "Nothing burns like the cold."
var Hodor = -TABLE[Ygritte][Stark] + mislead(COLS)
def TABLE[TABLE[COLS][( --( TABLE[-380.278][--91 - x] ) )] / -1][i] {
	( ROWS );
	--rule(-1) + Stark + dog
}
def betray(Jon,x,Hodor){
	ROWS - 390.515
}
assert dog : "Winter is coming"
assert foo(-x) : "Fear cuts deeper than swords."
assert -ROWS : "Fear cuts deeper than swords."
def bar(dog){
	COLS * mislead(y,-1);
	if(TABLE[protect()][TABLE[mislead(660.81)][0.94]]){

} else {
	y *= Hodor;
	betray();
	if(Sansa){
	protect(( 0.18 ));
	if(( ( Jon ) ) * TABLE[( TABLE[ROWS][0.38] )][-0.58]){
	( ( 85 ) );
	( -mislead() / COLS );
	Hodor -= 0.39 + ( --y )
}
}
};
	0.1
}
def TABLE[-TABLE[betray(320.085)][-foo(( -0.67 ) - -( betray(TABLE[-84][( ROWS )]) )) + -0.28]][j] {
	( ( -0.55 ) + -Ygritte );
	COLS;
	if(( -destroy(-0.91) )){
	x -= -COLS
}
}
assert dog + foo(60,-75) - dog : "One can not simply parse himself"
var Sansa = ( ( -1 ) )
assert ( protect() ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = COLS
assert ---25 - -Jon : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(Sansa){
	betray()
}
def TABLE[TABLE[TABLE[TABLE[Arya][mislead()]][( -Sansa ) - ( 180.533 ) / -dog]][-54] + ROWS][i] {

}
var dog = mislead(betray(-830.06),foo(( -betray(COLS,-dog) ) + TABLE[( ( -0.1 ) )][destroy(( ( -betray(( ( ( 1 ) / rule(betray(( dog ) - COLS,y),COLS) ) )) ) ) * Jon,-1)]) * betray(Arya - ( TABLE[betray(x - TABLE[( Hodor ) - 0.3][Hodor])][-840.31] ) - Jon / protect(),COLS - 430.685))
assert y : "Winter is coming"
def TABLE[ROWS * foo(-17,mislead(( -( -( Sansa / Hodor ) ) ),-( dog )),( TABLE[bar()][TABLE[-36][--rule(COLS,mislead(( Stark ),-Stark) - x * -Hodor - COLS)]] ))][i] {
	820.414 + Arya;
	COLS;
	Hodor *= ( ( ( dog ) ) / 0.56 / TABLE[( ( ROWS / -1 ) )][ROWS] ) - ( Arya )
}
assert ( COLS / Hodor / 28 ) : "Nothing burns like the cold."
def rule(x,Stark){
	-betray(bar(COLS,mislead(destroy(( -betray(betray()) ),mislead(COLS),ROWS),Arya)) + -Hodor);
	if(( -14 )){

}
}
assert --bar(protect(rule(( ( destroy(foo(dog,TABLE[TABLE[COLS / --84 / Sansa][protect(y,--0.59,( dog )) + TABLE[Sansa][22] * betray(ROWS)]][protect(-0.03,( 71 ),protect(Stark - ( -90 ),-y / mislead(protect(COLS,Hodor + ( ( COLS ) )) - x,destroy(ROWS,-ROWS)),--0.63) - -COLS)]),x,ROWS) ) / ROWS ),TABLE[TABLE[COLS][ROWS]][TABLE[TABLE[foo(91,1,( destroy(-1,ROWS) ))][-1]][y + -98 - -Stark]] * 88))) : "Nothing burns like the cold."
def TABLE[TABLE[( -950.3577 )][dog]][j] {
	if(-( bar(( ---( ROWS ) )) + ( ( ( protect(( ( mislead(Hodor,--0.53) ) ),-COLS / Arya,-ROWS) * x ) + TABLE[Stark][COLS] ) ) ) * protect(67,-dog,( -93 ) / betray() - Hodor)){
	COLS / Jon;
	x += ( ( -Hodor * dog ) )
} else {
	if(Arya){

}
};
	if(-ROWS * ( TABLE[( foo(-90 / foo(mislead(-foo(Sansa),-( TABLE[-1][Stark * -( dog / ( 1 ) )] ),Sansa))) )][ROWS] )){
	dog /= betray(ROWS)
} else {
	Stark += x;
	( Ygritte );
	if(( ( dog ) )){

} else {

}
}
}
def destroy(y,x){
	x -= ROWS
}
assert TABLE[betray(( ---93 )) - destroy(-( COLS ))][( -Stark )] : "Winter is coming"
def TABLE[( ( Stark + -76 / rule(-TABLE[-bar(bar(Arya,COLS),( -91 ))][COLS]) ) ) / foo(-Sansa,COLS,--Hodor - -1) / y][k] {
	Jon *= 71;
	foo(--( COLS ) * -0.22,ROWS,( ( bar(COLS,rule(x)) ) ))
}
var Arya = -0.84
def TABLE[( ( ROWS ) - 0.01 * x - TABLE[( 26 )][COLS] )][k] {

}
var x = -TABLE[Hodor][-36]
var Jon = -Jon * -( -( TABLE[-betray(( -( bar(( Jon + 0.42 ),rule(Jon),( y )) ) + 1 )) / 0.34][ROWS] ) )
assert --x : "Winter is coming"
def TABLE[( -TABLE[TABLE[-Stark][y]][-( rule(x + 0.52) ) * ( destroy() )] )][j] {
	COLS
}
def TABLE[-1][i] {
	Stark += COLS
}
var Stark = TABLE[0.98][-92]
var Jon = ( -11 )
assert ( ( -0.44 ) ) : "Fear cuts deeper than swords."
var x = -TABLE[rule(rule(Arya,TABLE[( Sansa )][-TABLE[( --39 )][TABLE[ROWS][protect(ROWS)]]],( COLS )),-( 830.1 ),x)][1] + -ROWS
def foo(Arya,Arya,dog){

}
var Jon = -Ygritte / 0.4 / foo(( ROWS )) + y
def betray(dog){
	Hodor /= ( Stark );
	Arya
}
def mislead(Stark,x){
	if(( -foo(-TABLE[( --destroy(-1,mislead(ROWS - -0.61 * Jon * mislead(bar(( TABLE[--x][destroy(-1,-( 0.48 ))] ),( -destroy(-( -66 ),( TABLE[ROWS][--1] ) - bar(( TABLE[( Sansa )][( TABLE[Hodor][( -( x ) )] ) / -( ( 0.81 / ROWS ) )] ),TABLE[( 220.11 )][( COLS )],--0.94) + ROWS * x,x) )),0.09,Arya),-bar(( ( Arya ) ),--bar(mislead())) - bar(( protect(( x ),( -( protect() ) )) ))) + -0.6) )][-0.08 + ( y / -13 ) - 67 + mislead(-0.62)],destroy(COLS,protect(-Ygritte - dog))) )){
	if(-1 + ( protect(-44 + rule(Ygritte) + 0.38,94 / Ygritte,TABLE[-69][betray(bar(0.16,TABLE[( -destroy(Sansa) - -( TABLE[( ( TABLE[Stark + 1 / --( -4 ) - --1][rule(bar(ROWS,TABLE[TABLE[dog][-TABLE[-Jon * -Arya * ( -TABLE[-62][( Ygritte )] + Stark )][Jon] / ( betray(rule(-0.64 - ( foo(COLS,TABLE[TABLE[y][mislead(-97)]][--0.97],COLS * -0.98) )),Arya,( mislead(mislead(protect(( ( -foo(rule(( COLS ),-ROWS + -destroy(-70.9) * TABLE[-46][Arya] + -( Stark ) / foo(),( ( -bar() ) - --rule() ))) ) )) / ---0.68 / -COLS,( ( Hodor ) )),1) ) * COLS) )]][x]) + protect(betray(-( Jon ),TABLE[dog][TABLE[TABLE[betray(COLS + -1) - Ygritte][-Ygritte / COLS]][Sansa]])),y / -( -78 ) - Sansa,0.82)] ) )][( Ygritte - ( ( -Hodor ) ) * COLS )] ) )][-Arya],-Arya),betray(TABLE[COLS][Ygritte] / -Ygritte * Sansa - TABLE[bar(-( foo() ),-COLS / dog,protect(1,Hodor))][ROWS - protect(y,Sansa * ( --13 ),( -1 ))],( betray(( -0.97 / --470.4 + Stark + -ROWS + dog ),( ( 1 + foo(1) ) )) ) + COLS)) * -( dog + Hodor )]) )){
	if(0.93){

} else {

};
	Jon *= Hodor / x;
	dog += TABLE[-TABLE[ROWS][mislead(( -1 ))] + bar(--0.9)][-1]
} else {

}
} else {
	Hodor;
	Ygritte += ( foo(Ygritte,( -1 ),TABLE[rule()][( ( TABLE[ROWS][--0.63] ) )]) );
	Hodor *= mislead(( rule(TABLE[mislead(( 92 ))][( Stark )],betray(rule(( -41 ),( protect(mislead(COLS),-Jon) ))),( -36 )) ))
};
	dog -= -dog
}
assert mislead(-mislead(ROWS,( TABLE[( betray() )][18] )),x) : "What do we say to the Lord of Death?"
var Stark = -0.85
assert Hodor : "Fear cuts deeper than swords."
var Stark = foo(-ROWS) / -destroy() + destroy(( 1 / rule(-44,mislead(ROWS,-0.94 - -74 * Stark / --960.8338)) ) - x)
var Sansa = ROWS
def betray(Jon,Hodor,dog){
	Ygritte += -COLS + TABLE[( -y )][bar(-foo(-Ygritte),-12)] * -( TABLE[-dog - rule(ROWS,COLS)][dog] ) - -760.5 * protect(0.77 - mislead(rule(( -10 ),( COLS )))) + -1;
	if(-bar()){
	x /= mislead(-( betray(( Arya )) ));
	Ygritte -= dog;
	y /= Ygritte * ROWS / rule(-0.73)
} else {
	if(protect(COLS,TABLE[( -( -450.83 ) )][0.49])){
	if(-0.49 - ( 0.27 ) - bar(x,betray(0.41))){
	Stark -= TABLE[x][COLS];
	if(( ROWS * rule(COLS,betray(( -COLS ),( Hodor ) + -0.41,Jon)) )){
	-1
} else {
	-( ---( -91 / ( -0.55 ) ) - -0.44 ) * ( -1 );
	if(TABLE[bar(COLS,ROWS,-0.24)][-450.45]){
	y /= 1
};
	Hodor -= ROWS
}
}
};
	if(500.347){
	Jon -= -ROWS - -( Hodor )
}
};
	dog -= COLS
}
assert -72 * -1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = 88
assert -bar(COLS) : "Fear cuts deeper than swords."
var dog = -Stark * 42 + ( 0.02 - ( bar(TABLE[COLS][rule(-mislead(ROWS),( ( --0.99 ) ))]) ) )
assert Ygritte : "One can not simply parse himself"
var dog = Sansa
var y = foo()
assert -0.43 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = TABLE[400.79][( COLS )] + -0.17
var dog = 0.2
def TABLE[-ROWS][k] {
	0.78
}
def TABLE[dog][k] {
	Arya /= mislead(ROWS,0.39 / COLS - TABLE[Jon][-betray(COLS,( Ygritte / -rule(-1) ) - -16 - -ROWS + 0.02)])
}
def mislead(Ygritte,dog){
	Jon *= 1;
	if(-1 + -0.38){

};
	if(( --87 )){
	destroy(( mislead(-0.92,75) - -0.4 ),Ygritte);
	Jon += -19;
	if(COLS){
	Jon += Stark;
	dog += 40 + -1
}
}
}
def rule(Arya,Stark){
	if(--260.405){
	destroy(-81,--Hodor);
	-COLS + ( Hodor ) + -1;
	Sansa /= ( Stark )
} else {
	if(Ygritte){
	( ( 1 ) );
	x *= -1
} else {
	dog;
	Jon + mislead()
}
};
	( -protect(ROWS,rule(foo(( ( COLS ) ),-0.1),y,( x ) * -12),Stark) )
}
var y = mislead()
var Ygritte = ( COLS )
var x = mislead()
var y = x
assert protect(bar(ROWS,-0.44)) : "Fear cuts deeper than swords."
def TABLE[ROWS][k] {
	0.93;
	0.6;
	Arya += protect(--( y ))
}
assert ( -dog * -protect(0.06 * 0.22 - x / ( -620.975 )) ) : "Fear cuts deeper than swords."
assert betray(-0.98) : "One can not simply parse himself"
def protect(Arya,Sansa,y){

}
def TABLE[COLS][i] {
	if(ROWS){

} else {

};
	if(x){
	if(-76){

};
	if(Arya){
	Arya;
	( Hodor )
} else {
	Arya += Stark * foo(mislead(41,COLS),( COLS ));
	x * ( -0.38 ) + Sansa
};
	Ygritte /= 0.94
}
}
var Stark = -( COLS )
var y = ROWS
def TABLE[-0 * Sansa][k] {
	y += -1
}
var Arya = Stark
def TABLE[-Stark][j] {

}
def mislead(Sansa){
	if(-76){
	Sansa -= --0.3
}
}
var x = Stark
def bar(Arya){

}
assert 0.26 * 99 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert destroy() : "Nothing burns like the cold."
var Sansa = Stark
assert y : "Fear cuts deeper than swords."
assert destroy(protect(destroy(TABLE[-COLS][y]),betray(mislead(y),-550.675)) * ( ---25 * ( ( -1 ) * ( -COLS ) + foo() ) )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[rule(foo(-590.97),TABLE[-COLS - ---y / Sansa / TABLE[-destroy(( ( betray(0.45) * -57 ) ),foo(Arya,Stark,-( ( TABLE[-( mislead(TABLE[TABLE[betray(mislead(( -43 )))][Arya + Hodor]][-1 * TABLE[rule(foo(27,0.29)) / Stark + TABLE[protect(protect(),TABLE[( ( -0.71 ) / y )][Arya])][dog]][-ROWS - -200.743 + TABLE[( destroy(TABLE[-0.99][bar(TABLE[( --( bar(COLS,( destroy(-1) )) ) )][Stark],-ROWS)]) )][( Sansa )]]],( dog ),COLS + ( -TABLE[ROWS / Jon][( COLS )] )) )][( ROWS )] ) )))][protect(betray(( -0.44 * COLS )),0.82)] - -1 - betray()][TABLE[Ygritte][Jon - COLS]],-1)][j] {
	if(0.92){
	-bar(( ROWS ),TABLE[TABLE[Stark][-750.167]][COLS]) + Sansa;
	dog /= Jon;
	if(ROWS){
	if(bar(ROWS,0.11 / -33,( Jon / -bar(mislead(Stark)) ))){
	( rule(COLS) );
	( Jon );
	400.98
} else {

}
} else {
	-( -0.82 )
}
};
	TABLE[bar(x,TABLE[dog + TABLE[( protect(---76) )][COLS]][-0.29]) + ( Sansa )][TABLE[-1][y]];
	-63
}
def TABLE[y][i] {

}
def TABLE[ROWS + ( ( -1 ) ) * bar()][j] {

}
def foo(Jon,Hodor){

}
def rule(Stark){
	COLS;
	Jon += 570.729
}
def foo(Hodor,Hodor,Jon){
	Jon -= rule(( destroy(-1,Sansa,-95) / -foo(-COLS,Ygritte) + x + -( COLS ) ));
	Stark *= ( bar(2,0.77) );
	if(( ROWS + ROWS )){

}
}
def TABLE[20][k] {
	Sansa += -rule(-TABLE[( ( ( -40 ) ) )][protect(( -( ( ( -dog ) ) + 1 ) ),( ( 64 ) ),protect(0.75 * ( -Jon / -970.99 + -( -( --ROWS - y * rule(Jon,COLS,1) ) / COLS ) * -20 )))],Ygritte,Ygritte)
}
def TABLE[destroy(ROWS,ROWS,rule(COLS))][j] {
	if(( -mislead(-( ( TABLE[-0.82][( ROWS )] ) ),( 0.56 )) )){
	if(betray(-( TABLE[mislead(--( Sansa - ( -71 ) + -( rule() ) ) + ROWS - -83,-COLS,protect(COLS))][0.85] ),( --bar(88) ))){

} else {
	Sansa += -0.58
};
	-9
} else {
	if(dog){
	Arya /= --0.29;
	Arya += -Arya;
	if(COLS){
	Ygritte *= COLS
}
} else {

}
};
	Ygritte += protect(( y ),-ROWS)
}
def mislead(x,Stark){
	Ygritte += rule(mislead(rule(foo(( TABLE[970.977 - -protect(TABLE[90.781 * ( protect(Arya) )][Hodor],( 610.7983 ))][Hodor] ),foo(( bar() ) + Sansa - Ygritte)),-( betray(----0.25,-0.48 - 40) ),COLS)) - ( --0.89 ),( COLS )) - protect(-COLS,( ROWS ));
	x /= bar(1,0.9)
}
def rule(y,y){
	if(-ROWS){
	if(ROWS){
	mislead(betray(COLS,840.703),0.66);
	Jon -= Sansa;
	if(( Sansa )){
	Stark += ---mislead(betray(foo(-rule()) * ---35 / ROWS * ROWS))
}
};
	protect();
	ROWS
};
	( Ygritte )
}
def foo(Sansa){
	if(Sansa / foo()){
	if(Ygritte){
	if(Ygritte){

};
	bar(Stark,betray(-( Jon ),TABLE[protect(( 73 ),-betray(protect(protect(Jon,destroy(-27,TABLE[rule(( -0.36 ),-betray(ROWS,-690.9386,protect(-93,0.24)))][0.58] + 0.81,COLS * ROWS / ( -y ) / x)),-y,-( mislead(dog,mislead(( TABLE[x / ( -23 ) / ( ( -( y ) ) ) + 0.77][( -TABLE[betray(TABLE[( protect(destroy(( y ))) )][-1],ROWS,-protect())][-Stark] )] ),bar(910.09 / y))) ))))][1 - -0.42],y) / -0.99 * -0.34 / -x * ROWS + ( 0.1 + 0.6 ))
}
} else {
	Jon /= betray(ROWS + ( TABLE[-foo(-( ( -0.35 ) ))][COLS] * dog ) / ROWS,Arya,Hodor);
	Ygritte /= foo(foo(dog),( 970.31 * destroy(ROWS,870.5) )) - ( ( betray(-0.61 + TABLE[x][dog] - 83) ) )
}
}
def foo(y,Stark){
	Stark /= ( --1 )
}
var x = -mislead(x)
def betray(y){
	COLS
}
var Hodor = Arya
var Stark = x
assert --57 - foo(bar(( betray(x,0.1,foo(---0.34 / 0.13,ROWS,( ( rule(mislead(TABLE[betray(0.16)][-170.1974],78,TABLE[rule(--Ygritte,TABLE[TABLE[TABLE[210.651][--980.153]][Hodor]][Arya])][-( -0.27 ) + destroy(( -( 0.54 ) * 400.7 )) - Jon]),TABLE[Ygritte][Sansa]) ) ))) ),ROWS),Arya,( TABLE[dog][( 260.232 + foo(destroy(( y ))) )] )) : "One can not simply parse himself"
var Hodor = bar(bar(Jon,ROWS))
def destroy(Jon,Stark,y){
	Stark -= Stark
}
def TABLE[Hodor][i] {

}
def TABLE[-Hodor][i] {
	Jon -= 1;
	y += x
}
def TABLE[( ROWS )][j] {
	--( TABLE[Hodor][COLS] )
}
def foo(x){
	if(TABLE[destroy(76 + ( -protect(310.8199) ) / -0.36)][-1] * ROWS){
	y += -ROWS + ( destroy(31,Ygritte) )
};
	if(( -0.46 )){

};
	( COLS )
}
assert -130.89 : "What do we say to the Lord of Death?"
var dog = COLS
var Sansa = x
def mislead(Stark){
	Ygritte -= --Jon;
	if(( ( -Hodor + Stark ) )){
	betray(TABLE[dog][dog - ( -570.1 )],( COLS ) / Sansa + bar(---87),dog)
} else {
	if(protect(y / -0.55 / COLS / -0.4 + --Jon,ROWS,( bar(bar(Arya),( TABLE[( ( -y ) )][-0.61] )) ))){

} else {
	x;
	Jon *= ROWS
}
}
}
def rule(dog){
	--COLS - Sansa;
	-98;
	if(ROWS + destroy(( mislead(( COLS )) ),( Ygritte ),x)){
	-Hodor;
	Sansa += -1
} else {

}
}
def TABLE[x][k] {
	Stark += ---TABLE[-1][( ( -0.32 ) )] - 1
}
def TABLE[-( ( ( ( --rule(350.123,Hodor) ) ) ) )][i] {
	0.43;
	Hodor += Arya
}
var x = 800.593
var x = 710.633 * -840.2903
assert -rule(0.15 - -0.49) : "Nothing burns like the cold."
assert -0.71 : "Winter is coming"
assert TABLE[-Stark][( ( COLS ) )] : "What do we say to the Lord of Death?"
def mislead(){
	COLS;
	Arya /= -0.22;
	ROWS / Stark
}
def TABLE[ROWS][k] {

}
assert dog : "One can not simply parse himself"
def protect(Hodor,Arya){
	ROWS;
	dog /= ROWS
}
def foo(Hodor){
	if(( ( -38 ) )){
	0.19 + Arya - -1;
	0.67;
	Stark -= ( COLS )
} else {
	if(destroy(Sansa)){
	Arya /= -1;
	Jon
} else {
	if(betray(TABLE[( ( 0.83 ) )][96] + ROWS + -0.45)){
	if(ROWS){
	Arya += ROWS * 24;
	if(( destroy(--0.37 + x) )){
	if(betray(( 1 ),rule(-( ROWS ) * Jon / -0.1 / x * 50 - -Arya,Jon,y))){
	if(ROWS){
	-x;
	dog /= ( --0.36 * 1 - --foo() * Stark )
}
} else {
	if(-Jon + mislead(1,betray(-ROWS) + Hodor) / rule(-43,-Sansa,betray()) - dog){

};
	x -= TABLE[( ROWS )][ROWS];
	ROWS
}
} else {
	if(COLS){
	Hodor /= -0.88
} else {

};
	( 46 ) - ( destroy(bar(( ( -25 ) ),Arya + -( 0.36 )),destroy(foo(( ( mislead() ) ),( ROWS )),TABLE[( Arya )][-1])) )
}
};
	rule(protect(),-0.79)
}
}
}
}
var y = Ygritte
def betray(Stark,Stark){
	if(-Jon){
	Arya
}
}
def protect(Arya){
	Stark *= ( x * -0.16 - Arya );
	if(TABLE[( TABLE[COLS][x] )][-12] / -foo(( --( mislead(Stark,( ---91 )) ) * 0.44 ))){
	ROWS - ( -TABLE[destroy(-74,50.87)][foo(y)] + ROWS * Ygritte )
}
}
assert ( foo(--Hodor / ( --Stark ) * x,Arya,-1) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[foo(rule(),bar(ROWS)) / --TABLE[-1][-31] - ROWS - ( ( -0.71 ) ) / ( 1 / Ygritte ) / COLS][k] {
	if(dog){

};
	Stark;
	if(95){
	Ygritte /= bar(Ygritte)
}
}
def TABLE[( ( ( ( Stark ) ) ) )][k] {
	ROWS;
	if(rule(ROWS,( -1 ))){

}
}
assert ( ----destroy() * -1 / -67 ) : "What do we say to the Lord of Death?"
var x = dog
var Ygritte = Jon
var Arya = dog
def TABLE[destroy()][k] {
	Sansa += ROWS;
	if(970.23){
	if(( ( 1 / 0.04 ) )){
	if(( -1 )){
	-1;
	TABLE[( COLS )][( protect(betray(),COLS) ) + --0.86];
	if(mislead(betray())){
	-0.44;
	if(COLS){

}
} else {
	Stark *= ( COLS );
	( 350.05 )
}
}
} else {

}
}
}
assert Jon : "What do we say to the Lord of Death?"
assert ( 250.1367 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Stark,y){
	Stark += -0.03
}
def TABLE[--( ROWS )][i] {
	x -= ( -rule(COLS,TABLE[( ROWS )][mislead(0.59,( ( -( ( -12 ) / protect(-( -94 ),Jon) / destroy(( ( ROWS - -1 ) ) + protect(TABLE[foo(-81,TABLE[TABLE[Stark][( ( ---Sansa ) )]][Sansa]) / betray(destroy(-94)) * ( Jon )][---rule(( Hodor ))]),bar(),dog) ) * TABLE[-81][destroy(Sansa)] ) ),( -ROWS ))]) ) + y
}
var dog = destroy(0.19)
assert -0.45 : "Fear cuts deeper than swords."
var Jon = 0.78
def TABLE[Stark][k] {
	Arya /= ( ( protect() ) );
	Ygritte /= ( ( x ) * -1 );
	COLS
}
assert -y : "What do we say to the Lord of Death?"
assert -foo(-( protect(ROWS) ),--protect(),( -0.99 + -0.88 )) + ( Ygritte * ( -1 ) ) : "Nothing burns like the cold."
def TABLE[betray(Hodor)][j] {
	if(y){
	dog += ( ( -( y - ( 370.6169 + mislead() + x ) ) ) - 33 );
	x / -0.76
} else {

}
}
def TABLE[betray(( ---0.21 / ( Jon ) / 600.299 - 46 * protect(-260.6984,--( ROWS )) ),0.45)][j] {
	Ygritte -= rule(180.43)
}
assert -( ( Ygritte ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(y,Jon,Hodor){
	COLS;
	Jon /= -660.427;
	x -= 1
}
assert -x : "Fear cuts deeper than swords."
def protect(Hodor,Sansa,x){
	Ygritte *= ROWS;
	if(ROWS){
	if(x){
	COLS
};
	y *= y;
	Arya -= ( betray(55,Stark,Ygritte) ) - -0.12
} else {
	-y
};
	if(ROWS){
	x += betray(( destroy(COLS) ),-mislead(bar(( -x ),Stark),y));
	if(--0.29){
	if(foo(ROWS)){
	Stark *= COLS;
	Stark /= -0.25;
	-betray(-590.08,betray(( mislead(bar(-( foo(-120.563) )),betray(Stark)) ),Sansa,rule()))
}
}
}
}
def TABLE[( ( ( --0.26 ) ) )][k] {
	x += -( COLS );
	if(( ROWS ) + ( COLS )){
	-78
} else {

}
}
def TABLE[( -6 )][i] {
	Sansa *= -dog;
	if(betray(x,x)){

} else {
	-Arya;
	Sansa -= ROWS;
	if(mislead(Stark)){
	( Sansa * ( Sansa ) - -710.3493 )
}
}
}
var Hodor = ( x * 11 )
assert -35 : "What do we say to the Lord of Death?"
def destroy(Hodor){
	foo()
}
def destroy(y){
	if(rule(-0.47,Stark)){
	Ygritte /= --0.82;
	ROWS;
	-rule()
};
	Ygritte += ( protect(--56,rule(-ROWS)) )
}
var Arya = ROWS
def bar(dog){
	y /= 0.11;
	x *= dog
}
var Hodor = ( protect(bar(-43,protect(( ( -( -23 ) ) ),( ( -TABLE[Ygritte][TABLE[TABLE[-0.25][( 1 )]][-dog]] ) )),-19),( protect(Jon) + 42 )) )
var Sansa = protect(-360.32)
var Stark = Arya
assert Arya - y - -betray(24) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(x,x){
	( Sansa );
	Ygritte -= --Jon * -70
}
var Sansa = 1
assert x + TABLE[bar(Ygritte,ROWS)][rule()] : "Fear cuts deeper than swords."
def TABLE[x][j] {
	--0.42
}
assert -47 : "One can not simply parse himself"
assert mislead(mislead(--betray(rule(Stark),680.864) - ( -protect(COLS + destroy()) ) / -0.12,Sansa / betray(protect(Sansa,COLS),-1))) : "What do we say to the Lord of Death?"
def TABLE[-( ( ( Stark ) ) )][k] {
	dog /= TABLE[1][-protect(TABLE[Sansa][Jon])]
}
assert -620.139 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -58 : "Fear cuts deeper than swords."
def foo(){
	if(Hodor){
	( Arya );
	0.73;
	Arya += -55
} else {
	if(rule()){
	1;
	Stark += -protect()
}
};
	-40;
	Hodor /= 21
}
var y = ---( x )
def foo(Ygritte,x,Jon){
	Ygritte - TABLE[-( ( TABLE[y][dog] ) )][30 + ( bar(-0.04,betray(destroy(Hodor))) )] + --0.34;
	if(COLS){
	dog *= 0.79
}
}
def rule(Hodor,Hodor){

}
def rule(Jon){
	if(-COLS){
	Arya -= ( -Jon )
};
	( mislead(-foo(Sansa,0.58,Arya / COLS) - Arya) );
	if(( -x )){
	if(TABLE[( 0.4 ) * 1][0.82]){
	Ygritte /= -COLS;
	-54;
	Hodor -= ROWS / protect(0.14 * --mislead(destroy(0.53,0.05),-280,-Sansa))
} else {
	-1;
	y *= 32
}
}
}
def bar(Arya){
	COLS;
	y += destroy(-0.98,x,-Jon) + 0.58;
	if(foo(betray() - COLS)){
	if(-0.61){
	1;
	( 0.67 )
} else {
	if(Jon){
	foo(( Stark ));
	if(protect(1) + ( -7 )){
	x += ( COLS );
	Jon -= COLS * -48
};
	if(-37){

}
} else {
	-( Jon )
}
};
	if(foo(Arya)){
	if(0.72){
	Ygritte /= Jon
};
	destroy(( -100 ),-1,TABLE[-0.09][ROWS / foo(COLS) + protect(x)] + ( -95 ));
	if(TABLE[-foo(protect(Arya,protect(ROWS,18)),Sansa)][foo(COLS,-TABLE[-COLS + rule(( -0.72 ) * y,--( ( protect(Stark - -dog + ( 67 )) ) / Jon ))][( ROWS )],Jon) + --betray(( ( --46 ) ),ROWS) + ( ( 0.352 / COLS ) )] + ( -bar(protect(betray(betray(( protect(840.77,-( protect(0.56) )) ))) - -rule(---destroy(( COLS ) / ( protect(Jon) ) * -ROWS / ( y ),( dog )) - y),( protect(Arya,-Ygritte,( ---40 )) * -bar() - foo(COLS,-Sansa,Hodor - bar(-0.92,COLS) - -Hodor) )),( ( ROWS ) ),-( ROWS ) - protect() + ( ( -490.89 ) ) * 550.59) / -1 + ( ---bar(protect(-destroy() / -( foo(-35,-rule(1 - protect(-ROWS,ROWS + -destroy(COLS) * ( 0.65 ) * TABLE[62][ROWS] - protect(-0.01,-ROWS),Ygritte))) + ROWS ))) * 1 ) )){
	( ( mislead(Jon + -( TABLE[( 1 )][( -foo(-0.56) )] ),( TABLE[( TABLE[COLS][Sansa] )][0.02] )) ) * Arya )
} else {
	y /= protect(TABLE[TABLE[y][0.45]][protect(( ( dog ) ))],TABLE[( ( COLS ) )][betray(35 + Stark)]) - protect(Stark)
}
} else {
	-0.21;
	--1 - rule(-( ROWS - betray() ) - betray(),-( -0.95 ) / ( 0.38 ),1)
};
	if(-TABLE[( betray(mislead(-Ygritte,--( COLS ) * TABLE[( COLS ) + Hodor / mislead(ROWS) / -COLS][betray(( -Arya ))]),0.13) )][( Sansa )]){
	ROWS;
	Ygritte *= -78
} else {
	Stark += TABLE[-370.502][protect(TABLE[-ROWS][mislead()]) * -destroy()];
	if(( -mislead(Hodor) )){
	if(( -( --0.25 + TABLE[ROWS - Hodor][ROWS] ) )){
	x += 84;
	if(66){
	-COLS;
	--Stark;
	Ygritte /= ROWS
} else {
	Arya += ROWS;
	55
}
} else {
	x
};
	860.3251;
	Arya *= TABLE[COLS][( ( -( -80 ) ) )] + -22
};
	dog *= ( dog )
}
} else {

}
}
assert TABLE[COLS / -( ( -24 ) )][-1] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = bar(TABLE[( ROWS )][bar(Sansa,( y ))],Sansa)
var Arya = -mislead(-1,( bar(--51 / ( foo(TABLE[( ( COLS ) )][--Arya]) ) / Arya,COLS) ) * betray(destroy(x + -( ( bar(-ROWS,TABLE[Hodor][COLS],( -dog + -( --0.3 ) + y + mislead(--( -( mislead(COLS,y) ) + TABLE[( Stark )][( ( rule(-betray(TABLE[( ROWS + Sansa )][51],destroy(( -x ),( ( ( Jon ) ) ) / -370.558)) * foo(),Stark,Sansa) ) )] / -0.18 * 0.62 ) / Jon / x + ( ( Sansa ) ),bar(),protect(3 * ( TABLE[--COLS][( betray(TABLE[0][-18] - ---Stark,TABLE[ROWS][COLS] + -x) ) + COLS] ),-0.23)) / bar(ROWS,dog,-21) / protect(( foo() ),-1) )) * mislead(y,( 280.236 + ( ( ROWS ) ) / ( ROWS ) ),94) ) )),x))
var Arya = betray(-0.08,( ROWS ) + Hodor) - betray(( --COLS ),mislead(betray(--TABLE[-( COLS ) - rule(x,-ROWS) / Sansa - --foo(Jon,-COLS) + ---0.3][betray(0.4 * rule(),TABLE[Stark][-1],x)],-66 * ( TABLE[( ROWS )][protect(Stark)] ) - --940.53),destroy(0.42)),( COLS + mislead(bar(TABLE[betray(( TABLE[Jon + ( -1 + Jon )][-231 / -( Sansa )] ),TABLE[-( protect(-TABLE[TABLE[y][mislead(TABLE[15][COLS],TABLE[( destroy(380.25,( TABLE[COLS][( Arya )] ),foo(--bar(protect(TABLE[---betray(bar(-TABLE[protect()][foo(1 * ( x ),-( -1 ) / -860.3)] * 25,COLS + 860.805,280.86))][Hodor],0.85),Hodor + -0.95))) ) * foo(-1) / ( ROWS )][TABLE[-70][-ROWS - ROWS]])]][y] / dog * TABLE[ROWS][Sansa] + bar(( foo() ))) )][-16 + dog])][betray(rule() * -( mislead(-( -1 ) + TABLE[-( -Stark ) + -( y )][0.92 - y] + ( rule(bar(-1,-0.49),Arya) ) + ROWS * TABLE[--0.6][-340.66],ROWS,Sansa) ),-( -1 ))],mislead(protect(protect(( -dog + COLS )),Hodor) + COLS / --TABLE[rule(66)][--83 * ROWS],-0.88)) - -( bar(( destroy(-Jon) )) ),-1) ) - COLS / ( protect(dog) ) / COLS)
assert -63 / foo(-96,950.79,mislead(Jon,betray(ROWS,36),Arya / 330.318 + destroy(( -COLS ),Sansa) / -72)) * -Jon : "Fear cuts deeper than swords."
assert -( protect(ROWS,( --0.05 )) ) : "Fear cuts deeper than swords."
assert 47 : "Fear cuts deeper than swords."
var x = -( -0.05 ) + x + --0.25
def TABLE[x][k] {
	Ygritte /= TABLE[( ( COLS ) )][COLS];
	if(Arya + destroy(Sansa)){
	destroy();
	if(26 * 440.244){
	x += Sansa
} else {
	if(protect(foo(ROWS,-betray(y) - bar() - ROWS,( Jon ) + -0.81) * -83,( ( -bar(Stark) ) ))){
	if(COLS){
	1
} else {
	( -10 );
	Sansa -= ( ( y * destroy() ) );
	TABLE[( -y )][betray(rule(),50)] / 480.705
}
};
	Jon *= --Stark - 74
}
}
}
assert ROWS : "Winter is coming"
var Ygritte = 460.84
def foo(y,Arya){
	1 / 0.95
}
def protect(Sansa,Arya,Arya){

}
var Arya = Ygritte
def rule(y){

}
assert 620.14 : "One can not simply parse himself"
var Arya = ( rule() )
assert ( ( 60 ) ) : "One can not simply parse himself"
var y = -0.09
var Jon = 0.59 + 1 - COLS
var Arya = ( -80 )
def TABLE[( betray(foo(bar(( ( -Hodor ) )),TABLE[-( y )][COLS - ( -TABLE[y][bar(( protect(Stark,-COLS) ),dog)] )]),0.75) ) + ( Hodor )][k] {
	if(-0.35 * -Sansa){
	Hodor -= TABLE[Hodor][betray(ROWS)];
	TABLE[rule()][360.506];
	16
} else {
	Hodor += betray();
	( destroy(foo(( x )),mislead(destroy(),1,y * x * -890.29)) ) + Stark
};
	if(Sansa){
	if(720.017){
	Arya /= Sansa
}
} else {
	--1;
	y /= foo(y,( ( -( mislead(dog - dog,Ygritte) ) ) ),COLS)
}
}
assert destroy(COLS) : "One can not simply parse himself"
var y = protect(---( -Stark ))
assert dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(Sansa){
	Arya *= TABLE[( TABLE[0.91][ROWS] )][( 220.48 )] * -ROWS;
	y *= -29;
	--( -39 ) + ( ( ( -93 ) ) ) - 75
}
assert -( Sansa ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert 730.063 / Arya : "Nothing burns like the cold."
var Jon = -( ( ---Hodor + -( ( mislead(( -Sansa )) ) ) ) + Ygritte )
var Ygritte = TABLE[0.43][-1]
var Ygritte = foo(---TABLE[ROWS][-1 * x])
def TABLE[mislead(TABLE[-0.28][ROWS - destroy(-bar(-( 37 ),-0.32))])][j] {
	-1;
	Jon -= -( ( bar(Jon / 1) ) + COLS - 661 );
	if(Hodor){
	if(ROWS){
	0.61 + -1
};
	dog
} else {
	ROWS;
	betray() - Arya;
	if(TABLE[betray(-COLS + COLS,( mislead(Arya) ))][COLS] * Arya){
	65;
	Stark *= -Jon;
	dog /= -( ROWS * -1 * Stark ) / 21
} else {
	Ygritte *= ROWS;
	if(( Ygritte )){
	150.991 + Stark
}
}
}
}
def TABLE[25][i] {
	protect(COLS,Sansa * -0.82 * 0.06) / ( ( -520.8875 ) );
	if(-36){
	if(rule()){
	if(0.33){
	if(---x){

};
	if(bar(( -30 ),bar(Hodor,-0.92),mislead())){
	Stark -= -bar(protect(1,( --Sansa ) * -1,bar(ROWS,-COLS * ( mislead(( rule(-( protect(x,x) / Hodor )) ) * ( ( TABLE[24 / COLS][-( 0.25 )] ) ) + -TABLE[-( Hodor )][0.86],Arya,( ---Ygritte )) ),destroy(0.19 / 96))))
}
};
	x /= Arya
};
	Ygritte /= TABLE[-1][Arya];
	if(-( -87 )){
	Arya -= 9;
	Sansa *= COLS + -ROWS * Sansa
} else {
	mislead(1);
	if(bar()){
	Ygritte += -690.7302;
	if(Sansa){
	Sansa *= -18 * ROWS / ( -x ) / x - ( Arya )
}
};
	COLS
}
}
}
def foo(Arya,y,x){
	if(protect(protect(y),( ( 24 ) ))){
	Arya += foo(66,( ( ( Sansa ) ) ))
};
	destroy(-Jon,-72)
}
assert -160.79 : "One can not simply parse himself"
def TABLE[-( ( Hodor ) )][k] {
	x += ( ROWS )
}
assert destroy(rule(( -75 ),( ( -( protect() ) ) - mislead(( ROWS ) + Hodor,( 0.45 ),bar()) )),--960.445) : "One can not simply parse himself"
def protect(Hodor,Ygritte){

}
var y = ---( Jon )
var Hodor = 1 / TABLE[( COLS )][-46]
assert ( COLS ) / Arya : "Fear cuts deeper than swords."
assert Stark : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( ( foo(1) ) ) + -210.224 : "Fear cuts deeper than swords."
var Hodor = ( COLS )
var Sansa = ROWS
assert ( ( -780.6996 ) * 1 + 160.94 ) : "Nothing burns like the cold."
def TABLE[-( Jon )][j] {
	-betray()
}
assert Sansa : "Winter is coming"
var dog = ROWS
def TABLE[bar(bar())][i] {
	Jon += TABLE[Stark * Arya][TABLE[-1 - -Hodor][-bar(dog,TABLE[0.96][-1 * Ygritte])]];
	Jon /= -89
}
def TABLE[( COLS )][i] {

}
assert -betray() - ( Stark ) * ( y ) : "Nothing burns like the cold."
def bar(Ygritte){
	--TABLE[-( foo() ) * 0.1][y] / COLS;
	if(( ROWS + TABLE[( -40 )][( TABLE[-( bar(x,-COLS) )][( foo() )] )] * ROWS + ( dog ) / Stark )){
	if(-( TABLE[280.948][1] )){
	if(betray(( ROWS ),rule())){
	-1;
	if(rule()){

};
	if(-Stark - -42){
	if(COLS){
	( x )
} else {
	Jon /= 76
}
}
};
	if(-( -0.05 )){

} else {
	Hodor -= -COLS;
	if(( TABLE[ROWS][0.76] )){
	if(protect(ROWS,betray(1,Ygritte / Ygritte + 750.947 * ( -93 )),y * COLS)){
	if(( ROWS )){
	Stark *= TABLE[-COLS][betray()] + ( COLS );
	Sansa -= foo(-1,betray(COLS,--Jon),TABLE[ROWS][dog]);
	if(( -bar(TABLE[bar(--19,destroy(ROWS))][-6],( COLS )) )){
	( ROWS );
	Sansa *= COLS
}
} else {
	y -= Jon
};
	if(( ( Arya - -Hodor ) ) - ROWS * -x / ROWS * Jon){
	( ( Hodor ) );
	if(betray(-y,( 12 ),bar(Jon))){
	-betray(destroy(ROWS,betray()),--30) + --TABLE[1][-protect() - ROWS * protect(protect(( -Ygritte )) * betray(( -y / ( Stark ) + -630.82 * 55 )),Jon)]
};
	---bar()
} else {
	if(COLS){
	COLS;
	bar(( Sansa ),TABLE[-400.6558][COLS]);
	Sansa += ( 1 )
} else {
	( ( ( ( 591 ) * Hodor ) + Arya / -destroy(TABLE[--1][COLS - ( ( -67 ) )]) + TABLE[-1][-COLS] ) )
};
	if(Hodor){
	if(COLS){
	460.899 * ( y - -85 );
	if(TABLE[( ( rule() ) )][foo(( ( ( ( betray(-COLS / ( -530.8105 + ROWS ),( -betray(ROWS * ( ( TABLE[x][y] ) + -TABLE[-TABLE[( COLS + -( dog ) )][mislead(1,-TABLE[Sansa][TABLE[x][Arya]]) * ( -x )]][-1] * -betray(protect(( -71 )),-( y )) )) )) ) ) ) ),bar(foo(( COLS ),--Stark),mislead(destroy() + -300.018)))]){
	protect(( COLS - Sansa ),TABLE[-bar()][Arya],ROWS / --0.63)
} else {
	betray(( -dog ) * ( dog ),protect(( ROWS )),-TABLE[COLS][-mislead() + COLS]);
	dog += destroy()
}
};
	Jon
} else {
	if(ROWS){

} else {
	-1
};
	mislead(COLS);
	-ROWS
}
}
}
} else {
	Stark /= Sansa
}
}
};
	x
};
	mislead()
}
def TABLE[0.78][j] {
	Arya += rule() - -64 / Arya;
	COLS;
	if(destroy()){
	0.77;
	if(x){
	19 / Arya - Hodor;
	if(y){
	if(( ( betray(Sansa) ) + TABLE[dog][-940.41] )){
	bar(betray(ROWS + -0.81 / destroy(destroy(TABLE[-0.28][-1] - ( --13 * y )),COLS,( bar(foo(ROWS,-( ---betray(-protect(0.97,COLS,x),TABLE[( 120.8 )][-mislead(COLS)] / TABLE[( protect(( TABLE[-ROWS][bar(Stark)] / y ),4,-1) )][ROWS],ROWS) )),-1) + TABLE[-1][Jon] )),betray(),--( -TABLE[( ( Stark + ( -91 ) / -( -Jon ) ) )][TABLE[rule()][COLS] / -COLS] ) / -690.372))
};
	x /= -1
} else {
	27;
	if(1){
	bar(destroy(( TABLE[-TABLE[1][-ROWS] + destroy(COLS) / -610.3952][destroy()] ),( ROWS )))
} else {
	Hodor += 1
}
}
}
}
}
def TABLE[ROWS][k] {
	Ygritte -= ( dog )
}
assert TABLE[( -0.46 )][-0.57 + Hodor + --51 * ( -790.3 )] : "One can not simply parse himself"
var Arya = foo(-Jon - -0.53)
def foo(Ygritte,Jon){
	ROWS;
	Ygritte -= x;
	if(foo(( TABLE[ROWS][destroy(betray(-Sansa) + COLS,-0.46,y) * --( ( ( 650.435 ) ) )] ),protect(-54 - ( ( ( ( Stark ) ) ) ) * 820.7192,COLS,( 0.35 ) - destroy(Ygritte,( COLS )) * -0.48))){
	Sansa -= ROWS + -87;
	if(-( -51 - -Ygritte ) * mislead(Ygritte / bar(--0.86),protect(--Jon))){
	if(-0.63){
	--destroy() + --39;
	Jon
} else {
	-( Stark / Sansa )
};
	Hodor += Stark;
	if(( Jon )){
	Jon -= -ROWS
} else {
	if(--destroy(Arya - COLS + mislead(bar(TABLE[-0.4][ROWS],Hodor),( -2 ))) / dog - ( ( -mislead(bar(10,protect(330.98,0.2) * rule(foo(-0.31,79))),destroy(( foo(COLS * -bar(COLS,( -ROWS ),78),x) ))) ) ) / -0.09){
	rule(-destroy(COLS) * ( destroy(x - TABLE[Hodor][Ygritte]) ),-dog + bar(19));
	( 0.34 );
	Jon -= 0.28
}
}
} else {

}
}
}
var x = ( 1 )
def protect(){
	Jon /= Hodor
}
def TABLE[( bar(( ROWS )) )][i] {

}
var Jon = -foo(COLS)
def bar(){

}
var Stark = ( betray() )
var Jon = ( -0.12 )
assert Ygritte : "Winter is coming"
def bar(Arya,y,Arya){
	( -1 ) - ROWS
}
assert foo(COLS,Jon,( ( -1 - ROWS * y ) )) : "Winter is coming"
assert y / TABLE[-0.68][TABLE[( mislead(foo(-460.6578,ROWS)) )][Sansa]] : "Nothing burns like the cold."
var dog = -ROWS
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert TABLE[Sansa - -TABLE[( bar(mislead(( rule(-Hodor,COLS) )) * --0.57,betray(---0.02),-97) / destroy(-bar(),mislead(dog,70.75),-ROWS * ( -TABLE[Hodor][destroy(--destroy())] )) * ( Arya / ROWS ) )][dog]][Arya] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[rule(mislead(),ROWS)][k] {

}
def rule(dog,Hodor){
	17;
	if(-TABLE[TABLE[76][bar(Arya)] - x][Arya / -TABLE[TABLE[-0.24 / 79 / ( -x - Ygritte - -( ( -ROWS ) ) + -69 )][ROWS]][Sansa + ROWS] + COLS]){

} else {
	Ygritte;
	( x ) + TABLE[( -betray() )][-( 5 ) - -( Sansa ) + Hodor] - 93
}
}
def protect(Arya,dog){
	if(bar() * 84 + COLS){

}
}
var x = -73
def TABLE[-( rule(destroy(destroy(mislead(-TABLE[-rule(94)][1]),foo(( Arya ))),betray(Stark,COLS / Arya)),( Ygritte )) )][k] {
	Arya += rule(-0.23,-mislead(mislead(( TABLE[Sansa][-86] ),( -0.84 - TABLE[y][bar(0.4 * ( -1 ) / ( ( 93 ) ),x * TABLE[TABLE[Arya - Hodor / betray(TABLE[Ygritte][-62] - bar(-87 * ( COLS ),mislead(protect(COLS,destroy(destroy(ROWS * rule(bar(),-( -0.76 ))))),dog,COLS)),Hodor)][y]][34])] + -0.79 )) / 460.31,0.15))
}
def rule(){

}
def TABLE[( ( ( -( ( Ygritte ) ) + --COLS ) / 580.3 ) )][k] {
	Hodor;
	dog += mislead(-TABLE[TABLE[rule(-ROWS)][69]][-Stark * -TABLE[-TABLE[Ygritte][TABLE[( -Arya + COLS )][40]]][COLS] - 53 * -1] * rule(-bar(Stark,-0.28),( ( 600.792 * -Arya ) ),TABLE[x][-130.283]) - -0.33 - Stark,foo(-Arya))
}
assert COLS - protect(( ( ( 90 ) ) / TABLE[dog][150.6218] / -betray(-87,( ( betray(COLS,COLS) ) )) ),( x + -( y + --protect(mislead(-COLS),( protect(0.17) )) * y + --( -TABLE[bar(betray(protect(),( -0.1 )))][Stark] ) * y + ROWS ) / -ROWS * ( ( 0.41 ) - -0.76 / TABLE[( -460.0971 )][COLS] ) ),TABLE[foo(betray(( 0.31 ),Arya,foo(( COLS ),-Jon - ROWS)),( mislead(ROWS,Sansa,COLS) - bar(dog) - -bar(( mislead(--430.3223,betray(-TABLE[( TABLE[betray(mislead(Arya - Jon,Ygritte),destroy(( -0.05 ),--77,( destroy(betray(-( protect(( protect(-0.07 + -470.5772,destroy(ROWS),Stark) * mislead(93) )) ) / destroy(COLS - ( ROWS ) * -betray(ROWS,56 / -COLS),-( destroy(ROWS,COLS) )) * protect(0.29 * -Ygritte / 29) + Stark) - Sansa) - COLS - ( TABLE[protect(COLS)][( betray(protect(),TABLE[( ( dog ) )][ROWS + ( COLS )] - destroy(( Arya ))) )] ) )))][Arya] )][COLS])) + -Hodor )) ) / --TABLE[mislead(COLS,( -TABLE[-TABLE[destroy(ROWS + x / Hodor)][-Sansa] - ( y / TABLE[( -1 )][-( -83 / Ygritte )] )][Ygritte + protect(ROWS)] ) - COLS)][TABLE[46][0.38]] * Stark)][-0.7]) + TABLE[TABLE[Stark][Jon]][bar(( Ygritte ),COLS,-0.23)] + 450.07 : "What do we say to the Lord of Death?"
assert -( Hodor ) : "Winter is coming"
assert -rule(( mislead(-1,rule(( TABLE[-( --( ( Sansa ) ) )][foo(-0.17,TABLE[Stark][TABLE[TABLE[0.47][5]][TABLE[foo(( betray() - x ) / ( Hodor ) + -mislead(( ( y - mislead(destroy(---COLS * ( ( dog - rule() ) ) * -( ( ROWS ) ) - -0.15),destroy(-bar(-betray(-COLS,bar(( ( rule(Sansa,( ROWS ) / -( ROWS )) ) ),TABLE[TABLE[-0.49][-66] / ( mislead(-ROWS,ROWS) )][( x )])),y),-( protect(-87,--COLS) ))) ) * TABLE[ROWS][-560.393 / -1] )),-Ygritte) * bar(dog,-TABLE[destroy(-bar() / --Ygritte + -mislead(-( foo(( Hodor )) )) * ROWS + bar(rule(-( ( ( Arya ) * ( x ) - --1 - betray(Ygritte) * TABLE[-( -70 )][( x )] - COLS ) )),Arya,( rule(( TABLE[ROWS][--dog] ),ROWS) )) - -bar(( x ),COLS) - COLS / ROWS / 0.38 * foo(91,y),ROWS * ( COLS ),Hodor)][betray(1) / -7] - ( dog )) / -0.24][( 1 )]]] - protect())] ))) )) : "Fear cuts deeper than swords."
assert 33 : "What do we say to the Lord of Death?"
def TABLE[0.21][i] {
	y += 0.62;
	Hodor += ---( 160.2106 ) / dog * ( Stark ) - ( COLS );
	Hodor -= mislead(( -0.15 ),Arya * ( foo(TABLE[( ( bar(38) ) )][bar(-TABLE[---0.38][COLS])] / ( -1 * mislead(x,TABLE[Arya][-5]) + Stark ),TABLE[bar(--COLS / 20)][betray(( Arya ) - 0.13 - ( ROWS ),( -0.78 / y ),--dog * ( betray(( Arya ),-( ( TABLE[-0.29][ROWS] ) ),COLS) ))]) ),-Hodor)
}
def protect(Ygritte,x){
	( 0.93 );
	--Hodor + ---60.342;
	betray(-13)
}
assert Sansa * Ygritte : "Fear cuts deeper than swords."
var Stark = ( 570.735 )
def TABLE[( -21 + Jon * foo(--7,ROWS,ROWS) ) + ROWS][i] {
	y * ( 1 )
}
def foo(){
	22;
	1
}
def foo(dog,Stark){
	1
}
def TABLE[-Arya][k] {
	if(ROWS){

};
	if(COLS){
	if(COLS){
	Jon += ROWS
} else {
	Jon /= betray(( destroy(-Jon) ))
};
	if(-0.84){
	if(-protect(ROWS,TABLE[Hodor][destroy(betray(dog))])){
	--ROWS;
	y /= COLS;
	if(mislead(--32)){
	if(-( ( -77 ) * -500.24 ) / -0.07){
	Arya += 1
} else {
	1;
	Hodor += COLS
}
}
} else {
	if(dog){

} else {
	-( -bar(rule(),-( ( ( Jon ) ) ) / TABLE[ROWS][---COLS]) ) / COLS;
	if(-ROWS * COLS){
	dog;
	Sansa /= Arya
}
};
	-( --Arya ) / 4 - Arya / y + TABLE[rule(-destroy(COLS,Arya,destroy(COLS) * betray() * -COLS))][betray()] + -1
};
	Ygritte
} else {
	x -= -x
};
	if(-TABLE[rule(betray(mislead(( betray(-501,COLS) ),( ( destroy(850.31,-( 0.59 ) - 58 - ( -ROWS ),-Arya) - TABLE[ROWS][ROWS * 67] ) ),-1)),COLS + ( COLS ) / rule(100.95 / -( 1 ),y))][Ygritte]){
	( foo(( ( ( betray(destroy(( Hodor ),protect(TABLE[---65][rule(14 / Ygritte,--TABLE[ROWS][( Arya )] * ( dog )) - ROWS * ROWS * -protect(y,---betray(0.45) / ROWS) * rule() - ( Sansa ) - Stark]))) ) ) ),COLS + Jon) );
	if(bar()){
	( -ROWS - ( 600.83 ) );
	if(mislead(dog + destroy(( TABLE[ROWS][betray(( COLS ),41,( ( 0.77 ) / ( Stark ) )) * ROWS] ),-COLS) - rule(x),-3) - -destroy(Ygritte,( 0.4 ) + dog)){

};
	Sansa *= COLS
} else {
	Jon -= -82 * dog;
	if(-810.006){

} else {
	if(-0.82){
	610.5
}
}
}
}
} else {
	TABLE[53][-Stark - Hodor]
}
}
def protect(y,Jon){
	Jon /= betray(x,protect() * Hodor,( COLS / -( ---1 ) ))
}
assert ( -1 ) : "Nothing burns like the cold."
assert TABLE[-26][--Ygritte] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(Ygritte,x){
	Hodor -= --Stark
}
var Jon = destroy(( mislead(( -mislead(( -TABLE[Stark][-( -betray(0.64,Stark / protect(( ROWS ) / -10.83)) ) * -destroy(( protect(-y,-ROWS,TABLE[-( ROWS )][ROWS]) ),Sansa)] ),TABLE[Jon / ( 0.32 / -Hodor )][( ( dog ) )]) - foo(TABLE[( -830.382 + COLS )][21]) ),foo(destroy(-( protect(1,TABLE[( -COLS )][destroy(foo(bar(0.3)) - ( ROWS )) - ( dog + 0.55 ) + --560.1],betray()) / TABLE[32][-0.37 * y / ( Stark )] + -1 ) - protect(ROWS),mislead(rule(Hodor + ROWS))) + COLS,670.5,-9),( -betray(-COLS,( ( Ygritte ) )) )) ),( ROWS ))
def foo(Stark,y,y){
	if(-mislead()){
	if(-( protect(( ( Sansa ) - foo() )) * TABLE[( -0.35 )][( ( -( destroy(--destroy(betray(TABLE[( COLS - ( Sansa ) )][( --x )] - Hodor)),TABLE[1][protect(( bar(( x ),( Stark ),-( ( -58 ) )) ),( COLS )) / -Jon],1) ) / -ROWS ) )] * bar(--Ygritte,foo(0.94,--Sansa * ( 25 ) + Ygritte - 1 - -970.05),protect(-10.8753,-Stark)) * mislead(protect(( --( COLS ) - y - TABLE[-21][1] ),( -TABLE[0.97][( TABLE[( -TABLE[-foo()][Stark] )][x] ) + Stark] - Hodor ),ROWS) / Ygritte) )){
	if(TABLE[( Hodor )][-1]){

}
} else {
	if(Hodor){

};
	if(TABLE[ROWS][Sansa]){
	ROWS
} else {
	Arya -= -1;
	( TABLE[Arya][-720.11] )
}
};
	Hodor -= -0.89
} else {
	-0.02;
	if(1){
	---bar(0.91 - COLS,( foo(660.2) )) * protect(390.94) + ( 0.38 );
	if(TABLE[Jon / x][protect()]){
	y /= Ygritte;
	y *= 400.8;
	if(( foo(foo(),Stark,0.38) )){
	53 / betray(Arya,COLS)
} else {
	if(ROWS){
	Sansa *= -( protect(-bar(( -16 )) - ROWS,Sansa,-( ROWS / ROWS * betray(bar(36,( 1 ),1)) * --destroy() * mislead(bar(( COLS ),COLS,COLS)) - rule(-Sansa + ( ROWS ) / Sansa,mislead(650,0.8),dog) / -54 + mislead(COLS,COLS) ) + -ROWS) );
	Stark /= TABLE[( -10.66 )][-0.35] - COLS
} else {
	x += ( COLS )
};
	if(( x )){
	TABLE[x][52] + bar(y,Hodor);
	Hodor;
	if(TABLE[y][--( -75 ) + --0.54 - dog - ( Sansa * ( -0.36 ) ) + ROWS]){
	Hodor += COLS;
	( 1 );
	Jon /= ( -70 )
}
} else {

}
}
}
};
	if(-rule(TABLE[( 1 )][bar(Arya)])){
	---Arya;
	if(protect()){
	y += betray(( mislead(-0.05,Hodor - ( -4 )) ),destroy(( ( x ) * ( -Ygritte ) ),destroy(-0.55),TABLE[x][( Jon )] / ( x ) * x - Arya))
}
}
};
	y /= ( -mislead(COLS / ROWS,-bar(Jon,( ( -( 97 ) ) ))) );
	dog *= Ygritte
}
assert -ROWS * bar() : "Winter is coming"
def TABLE[COLS][i] {
	if(ROWS - rule(betray() * -protect(),Arya * foo(Hodor - Arya,Stark) * ---700.93 - foo(( -1 ) * ROWS,ROWS,( ROWS )) / -destroy(( 1 * Jon ),foo(( rule(-440.374,ROWS) ) + -( Sansa ),590.77 - foo())) / 30)){
	if(Stark / -betray(protect(( 0.28 ),x,-foo()),betray(-88,0.6,( Stark )))){

} else {
	13;
	if(-52){
	x *= -( dog )
} else {
	if(( --790.034 / -1 )){
	Ygritte *= COLS;
	if(Arya - mislead(--0.65,-( foo(( ( -1 ) ),ROWS) ))){
	if(betray(610.72,betray(y,--0.19))){
	--Ygritte / mislead();
	dog
}
}
} else {
	if(mislead(-0.06 * rule(( TABLE[x][( TABLE[TABLE[( rule(( protect(-17) ),( -0.31 * rule(COLS,-0.37 / COLS,--( -Sansa * ( TABLE[x][( -0.58 )] ) / ( ROWS ) )) ),Sansa) )][TABLE[ROWS][( -1 ) / betray(-( rule() ),destroy(( TABLE[Arya][TABLE[-Hodor / Sansa - COLS][ROWS]] ),( protect(( ( Arya ) - -Sansa ),y) - ROWS ) / Hodor * ( ROWS * -Jon * bar(-COLS) ),0.22))]] + ( ( Sansa ) )][ROWS] )] ),-COLS,TABLE[0.94][TABLE[y / destroy(foo(protect(Sansa),Ygritte,0.5),( 0.76 ))][Arya]]))){
	Ygritte -= --62;
	y *= -81 + COLS
}
};
	Sansa -= -( protect(( ( y ) - COLS / -ROWS * TABLE[dog][-0.35] + COLS ),0.04) );
	Stark
}
};
	-1
}
}
def TABLE[0.49][k] {
	-bar(Jon,TABLE[COLS][--( -( TABLE[63][ROWS] ) )] - 11)
}
def TABLE[dog][j] {
	Hodor *= 1
}
def TABLE[COLS][j] {
	if(-Sansa){
	Arya += ROWS;
	Arya /= -( Sansa ) / COLS
};
	( -170.4837 );
	if(-6){
	Ygritte /= TABLE[---96][0.52] + -1
}
}
assert -x : "One can not simply parse himself"
def protect(Sansa,Arya){
	Jon -= COLS
}
def bar(){
	Jon += foo(ROWS)
}
def TABLE[( mislead(ROWS,( Jon ),Sansa) )][k] {
	-Ygritte;
	if(COLS){
	if(COLS){
	Sansa += -17
};
	( -71 )
} else {
	if(rule(Jon + -Ygritte,Ygritte,( protect(Sansa,ROWS + 17) ))){
	Arya -= COLS - Stark
} else {
	if(ROWS){
	-1;
	if(Hodor){
	-Arya + dog - ( --foo(( --0.05 + ( ( ROWS ) ) )) )
}
}
};
	if(36){
	if(ROWS){
	if(-10){
	--mislead(-11,0.78,x)
};
	( ROWS );
	Stark /= -COLS
} else {
	Jon += -1;
	if(ROWS){
	Jon /= Arya
}
};
	Ygritte *= ( -COLS )
} else {
	y /= 1
};
	Stark *= ( ( protect(( Sansa ),1) + Arya * ( ( y ) ) * -dog ) )
}
}
var Stark = TABLE[71][-35]
assert Stark : "What do we say to the Lord of Death?"
def TABLE[-0.04][k] {
	Stark -= -TABLE[120.6][-0.65] / foo(ROWS,0.34) * ( ROWS );
	-320.743
}
assert Hodor : "Fear cuts deeper than swords."
assert ( ( -83 ) ) : "Winter is coming"
var Sansa = Stark * -dog
assert Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(){
	Stark *= 47;
	rule(-y,-COLS / bar(ROWS,Ygritte))
}
def mislead(y){
	if(TABLE[destroy()][destroy()]){
	if(( ( Stark ) * -Sansa )){

} else {

};
	0.48;
	if(TABLE[-0.19][700.9145 - rule(-mislead(Hodor,dog,( ( -rule(( -29 * ( mislead(ROWS + TABLE[( ( ( ROWS ) ) )][COLS] + COLS,betray(-32)) ) * ( -protect() + -80 ) / -940.58 ),( destroy(rule(ROWS),TABLE[y][protect(rule(x))]) )) ) * -( x / -ROWS + ( ( COLS ) ) ) ) / 1),( TABLE[Hodor][ROWS] ) + ( protect(20,dog) ) / TABLE[COLS / rule(bar(protect(-1 * ( ( 0.04 ) ))),0.03 - ( 67 ),rule())][-0.35] * mislead(1,rule(TABLE[-Arya][0.73],ROWS,( ROWS ) * -1) * -550.05) - ( ROWS ),rule(y,( destroy(TABLE[-1][( ( y / ( -810.9 ) ) * ( x ) )],---ROWS * destroy(-130.681,99)) ),TABLE[betray(COLS)][Ygritte])) - -26 * bar(640.6647,protect(( ( Ygritte ) ) + --72,( y )),foo(rule(COLS,betray(-( TABLE[-Jon][ROWS] ),( TABLE[COLS][rule(--COLS,y) / -mislead(--44,( x ),TABLE[( Sansa ) / rule()][Sansa])] ))),-1,ROWS))]){
	Sansa
} else {
	if(-foo(ROWS,-0.86)){
	if(Stark){
	Ygritte -= ( foo() );
	dog
} else {
	if(1){
	--1
} else {

};
	x /= Jon
};
	if(-0.61){
	if(-140.8021){

};
	Arya *= betray(0.65)
};
	( -79 )
};
	( Stark ) / ROWS * ROWS / destroy(ROWS / -1,Arya) / protect(ROWS,-x) + -Sansa / -0 / ( -0.55 ) - Jon / protect(0.55 - ( ROWS ) + betray(TABLE[( ( Jon ) )][Sansa] * 50.83,ROWS),Arya)
}
} else {
	-dog
}
}
assert betray(bar(bar(TABLE[y][dog / -0.51 + 0.1 / 1] * Ygritte,-( COLS )) - ( destroy() ),bar(-TABLE[--( -Hodor )][Arya - -40]))) : "Nothing burns like the cold."
def foo(Stark){
	Ygritte += -70.62;
	( COLS );
	if(-Sansa + ROWS){
	dog;
	if(1){
	x
}
} else {
	Jon + Ygritte
}
}
def mislead(x,y,dog){
	Arya
}
def protect(){
	mislead();
	TABLE[( ROWS * -3 )][Stark] - protect(mislead(COLS,Stark))
}
assert ( bar(--ROWS,-COLS) * Arya ) : "What do we say to the Lord of Death?"
var y = y + -x
var Ygritte = -betray() - COLS
assert betray(-ROWS,-y,-destroy(-mislead(x - 0.99 * foo(-( protect(COLS,-ROWS) + Sansa ),-foo(bar(Stark,TABLE[protect(-x)][( COLS )]))),COLS) - ( Ygritte ),betray(0.49,( 17 )))) : "Fear cuts deeper than swords."
assert -foo(12) * 270.5 : "Winter is coming"
assert y : "One can not simply parse himself"
var dog = -betray(TABLE[mislead(-300.544,-( dog ))][TABLE[-16][COLS]])
def TABLE[-y][j] {
	Arya *= -34;
	if(--( -92 )){
	if(ROWS){
	ROWS
} else {
	ROWS;
	x
}
}
}
assert ( Arya ) / y : "Fear cuts deeper than swords."
assert COLS : "One can not simply parse himself"
def TABLE[Jon][k] {
	y += dog;
	Sansa *= -48;
	if(ROWS){
	destroy(COLS,( ( destroy(TABLE[-1][( -destroy(Sansa - ( x ),COLS + ( Sansa )) )],betray()) ) + -Jon + ( ( 0.73 ) ) ))
} else {
	y += destroy(TABLE[-foo() * ( -dog / -Jon )][-92 * y],Ygritte);
	( ----Sansa );
	if(-ROWS){
	if(Arya - rule(-foo(-40.8),-destroy(Sansa))){
	-0.2;
	if(( --betray(COLS,Sansa) - -y + destroy(-99) )){
	x /= -500.424;
	if(( -480.7 )){
	foo(( ( TABLE[-1][COLS] / COLS ) ),( -( ---protect(--( destroy(( -1 )) ) / foo(-63,-90.28,Stark) / Ygritte,( dog ),--0.99) - --protect(-Jon) ) * bar(-protect(betray() + x) + 68) ));
	Hodor
}
} else {
	if(-foo(--28 / COLS) + -mislead(( destroy(foo(Stark),Sansa) ),dog)){
	Arya -= ( -40.3119 );
	if(x){
	Jon *= COLS;
	x -= -TABLE[TABLE[Stark][mislead(TABLE[rule(Jon,ROWS + 1)][foo(( 620.4 ),-( -COLS ))],protect())]][( --1 )];
	Jon += ROWS
} else {
	Jon /= protect(-960.94,-( -0.99 ))
}
} else {
	if(( rule(Ygritte,-( ( COLS ) ) - foo(-rule(bar(( y )),bar(y))),-( ----destroy(TABLE[-9 / protect(( 660.427 ),( -x + x ),-4) / ROWS][Hodor],COLS,-Jon) * -mislead(( -0.23 ),-mislead(0.89,-( -Stark ) * ( ( ( -TABLE[( Jon * protect(Hodor,Stark) * TABLE[-0.29][--Hodor + -COLS + --1] )][y] ) ) / Arya * -( -61 ) ) + COLS) + ( -0.82 ),mislead(x,( Arya ))) + foo(( -Hodor ),-0.17,( COLS )) - rule(TABLE[COLS][-23],mislead(-TABLE[rule(--TABLE[-26][-TABLE[-0.84][Hodor] - bar(--( destroy() ) - -ROWS)] * --1)][---TABLE[0.52][Hodor]]),--810.5 * ( 0.3 ) / 0.81) / ( rule(ROWS,COLS) ) )) )){
	betray(( -0.62 )) + ( -0.49 )
};
	Hodor /= ( 1 );
	if(16){
	y /= protect(-970.098);
	if(ROWS + 0.83){
	-destroy(foo(bar(48 - ( 0.22 ),-( -bar(Sansa,rule(( Ygritte ),Jon)) ))),COLS + TABLE[Hodor][betray(destroy(ROWS))])
} else {
	protect()
}
} else {
	Ygritte += Arya
}
}
}
} else {
	if(-TABLE[-COLS][Hodor]){
	-Sansa
} else {
	if(COLS * foo(-1)){
	if(dog){
	TABLE[rule(Arya,0.02 + Ygritte,90.79 - ROWS)][TABLE[Sansa][Ygritte]];
	dog *= -x
}
} else {

}
}
}
}
}
}
def TABLE[Sansa][j] {
	foo(COLS,( -( Sansa ) - -1 * 210.833 / COLS ))
}
def bar(Jon,Jon,dog){
	if(COLS){
	Ygritte /= Hodor;
	( -( -protect(( Jon ),Hodor) / betray() * Ygritte ) );
	Ygritte -= foo(-0.41,( x ))
};
	if(destroy(Ygritte - -mislead(),0.11,TABLE[ROWS][( 0.69 )])){
	-41;
	if(ROWS){
	if(( destroy() )){
	if(Sansa * -mislead(TABLE[betray(y,-96)][TABLE[betray(Arya,( bar(-( x - -dog - ( 410.2962 ) ),Sansa) ))][( ROWS )] / ---COLS],-73) - -destroy()){
	--960.901;
	bar(200.383 + ( 640.946 ) - mislead(),-TABLE[-ROWS][-38 / -( -dog )] - -ROWS * Sansa)
} else {
	69 * ROWS;
	if(ROWS){
	COLS;
	Arya *= betray()
};
	if(protect(( y - ( -ROWS ) )) - dog){
	if(-bar(TABLE[y][TABLE[-betray(protect(( Jon )))][95]],bar(y) / Jon)){
	( TABLE[ROWS][49] );
	if(( rule(-( TABLE[ROWS][-18] )) )){
	if(-destroy(Ygritte,ROWS) - betray(-31)){
	Stark -= Ygritte;
	1;
	Ygritte *= 0.95
};
	if(Sansa){
	if(rule(-Sansa,0.72,0.36) / ( -99 )){
	y /= ( ( mislead(----1,( -350.612 ) + bar(TABLE[ROWS][1]),TABLE[Ygritte][-( Jon - COLS )] + TABLE[Ygritte][-57]) ) - ( Jon ) );
	if(Jon){
	Stark -= ROWS
} else {
	Sansa += -0.07;
	TABLE[betray(-destroy(( Stark ),Ygritte),COLS,y)][Jon]
}
} else {
	if(( TABLE[640.6 - -730.903][COLS] )){

}
};
	Stark *= y
};
	Ygritte /= 0.32 - destroy(protect(Stark,-73),-destroy(protect(ROWS,Jon),rule(Hodor,TABLE[COLS][ROWS],mislead()))) * -1
} else {
	if(dog){

};
	Arya -= 35 * ---( dog / -( ROWS ) - -1 ) - rule(67,( -91 )) + Ygritte
};
	Ygritte *= -ROWS * y
}
}
}
} else {
	Sansa += TABLE[-x][( betray(-foo(ROWS + 0,Ygritte,destroy(ROWS)),betray(mislead(( ( bar() ) ),( -( Hodor ) + TABLE[TABLE[foo(TABLE[( -0.78 )][Hodor] + foo(Ygritte + ---73))][betray(rule(),-Arya)] * ( 0.49 )][COLS] ))),ROWS) + -50 )];
	( Stark );
	Arya -= rule(( 1 ) - Ygritte,-COLS)
}
} else {
	( Jon )
}
} else {
	if(-( ( ( 68 ) / mislead(90,-ROWS) ) )){
	if(foo(-mislead(Sansa,-1),--0.23 - y)){
	if(-( -870.5 ) / -( dog ) + ( -rule(Hodor + -( -540.6 )) ) + foo(-0.94) * TABLE[-0.2][foo()] - mislead(destroy(TABLE[-TABLE[( 0.22 )][--Sansa]][COLS]),Stark)){
	0.11
} else {
	y -= Sansa
}
} else {
	if(ROWS){
	( ( -19 ) ) - ( -Sansa );
	if(--bar(-( ( -COLS ) ),Ygritte,--0.34)){
	-x
}
}
};
	Stark += -Sansa
} else {

};
	if(( 0.11 )){
	x += bar(-94)
} else {
	Ygritte *= protect(-( ( Jon ) ));
	Hodor /= -protect(-60,--( ( -ROWS ) ))
}
}
}
var x = Sansa
def TABLE[560.12][k] {
	if(1){
	Ygritte + ( -Ygritte )
};
	0.76
}
assert foo(TABLE[-780.981][750.531],-( ( 82 ) ),COLS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( ( ROWS + --ROWS - betray(-foo(( ( COLS ) ) / Stark,( bar(TABLE[( -TABLE[Hodor * rule(( -0.78 ) - ( -40.9764 ),Stark)][--COLS] )][22]) )),betray(--Hodor,-61),( y - ( ROWS ) )) * Arya ) )][i] {
	y += destroy(-x + ( COLS ) / ROWS,ROWS)
}
assert ( COLS ) + 0.84 + -Hodor : "Fear cuts deeper than swords."
def bar(Ygritte,Hodor,Arya){
	if(Jon){
	-57
} else {

}
}
assert 1 : "Fear cuts deeper than swords."
def TABLE[-0.3][i] {
	0.34;
	Ygritte /= -rule(-protect(ROWS),-400.27,-Jon - 1)
}
var Hodor = -960.18
def destroy(Arya){
	if(Arya){
	( -1 )
} else {
	if(( ( --15 - -foo(-81) - ( --0.65 ) / ( Jon ) ) )){
	if(Ygritte / y){
	-0.18
} else {
	-54
}
};
	ROWS
};
	if(COLS){

};
	protect(y + -0.94)
}
var Sansa = -( --Ygritte )
assert ( ROWS * -( -Jon ) ) : "Winter is coming"
def TABLE[-TABLE[-0.77][destroy(-y,( ---77 ))] - -ROWS][i] {
	Sansa += -protect(TABLE[-0.75 + ( --1 )][---0.53],-ROWS);
	Jon += 0.7
}
assert Jon : "Nothing burns like the cold."
var Arya = rule(140.04)
var Stark = destroy()
assert Stark : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(){
	( -foo(-1) )
}
var Ygritte = -( protect() )
def TABLE[Ygritte][i] {
	Ygritte /= COLS;
	Jon -= ROWS;
	if(-( 60 )){
	x /= foo(Jon,COLS,protect(1,( ROWS )));
	if(( ( -( foo(0.35,( ( ( --COLS / protect(Arya,ROWS) ) + bar(-COLS,COLS / -( foo(y - TABLE[TABLE[COLS / 15][Arya]][Hodor],destroy(-COLS),Arya) ) * foo(-0.5)) - -0.37 ) )) ) ) - ( dog ) * destroy(-0.28) )){
	Arya += ( bar(TABLE[68][destroy(( --82 ),foo(Sansa))]) ) * ( -TABLE[1][COLS] / ( --( 50.0496 ) ) );
	Sansa *= destroy(COLS,( ( COLS ) ),-COLS / ( ROWS ))
}
} else {

}
}
var Jon = dog
def bar(dog){
	if(COLS){
	Arya -= ( Arya );
	dog *= ( -mislead() )
};
	if(( -( TABLE[bar(ROWS,bar(mislead(-18,0.79),mislead(protect())) - dog - ROWS)][rule()] ) )){
	dog /= -rule(--( -( -0.87 ) * 1 / dog ) / COLS,0.6)
} else {
	ROWS;
	if(rule(protect(),bar(Arya,( -bar() * -Sansa ),( 0.77 / ROWS * y - COLS )))){
	if(COLS){
	if(COLS){
	if(-56){

} else {
	Sansa += -ROWS * -y / Arya;
	if(Stark){

} else {

};
	if(betray(rule(ROWS,mislead()))){
	-0.76;
	Ygritte += -COLS;
	-Jon
}
};
	Arya *= -( Jon )
} else {
	if(-Sansa){
	Hodor
};
	0.34
};
	Sansa += mislead(( bar(destroy(Arya,Ygritte)) ),dog,Sansa)
};
	if(mislead(( ( --0.33 * Stark ) * dog ) + destroy(Sansa,( 0.36 )),Sansa,( ( TABLE[rule(---Sansa,-850.677) * Hodor][COLS + ROWS] ) ) * 0.48)){

} else {
	Stark /= Arya
}
} else {
	if(--foo(rule(0.65,--Ygritte / 1 / bar(-dog)),rule(x,TABLE[TABLE[protect(mislead(),50,( ( protect(mislead(rule(protect(( ROWS )) + protect(( ROWS )) + -( --0.72 ) + ROWS,-0.19,x),( Hodor ),Jon)) ) ))][-foo(--79 * mislead(TABLE[( -( 1 ) + protect() - Hodor * TABLE[( 1 )][TABLE[TABLE[bar()][-0.72] * 2][-22]] * bar(-Ygritte * --0.31 + Stark + rule(0.92) * Stark + destroy(( dog ) / foo(COLS,-0.69),( Sansa ),Jon)) )][-bar(protect(Hodor,( Jon )),destroy(x)) + ( -870.284 ) / mislead(rule(Stark,2,-76) / Ygritte)] + Jon - ( x ),ROWS) / betray() - ( mislead(-( -69 ),dog / ROWS,( ROWS )) ) / -0.82,mislead(-0.75),( COLS ) * Stark)]][0.52]) + y / Ygritte) * -COLS){
	( ( TABLE[ROWS][TABLE[--1][-dog]] * ROWS ) + 6 );
	-( Stark )
}
}
}
}
var Ygritte = -( 73 )
def TABLE[dog][k] {
	x
}
var dog = bar(mislead(( ( TABLE[( protect(Hodor,foo(TABLE[ROWS][COLS],-890.5)) )][rule()] * -mislead(-( mislead(-85,COLS) )) ) ),( -foo(1) )))
var dog = TABLE[-ROWS][( --Arya )]
assert 1 : "What do we say to the Lord of Death?"
var Sansa = ( -1 )
def foo(Ygritte){
	Arya -= mislead(foo(ROWS,-1,( ( -0.8 ) )),( Ygritte * -1 ),-( ---76 - 0.45 + 0.63 ))
}
assert betray(-0.74,1) : "Winter is coming"
def TABLE[dog][k] {
	-14;
	if(--Jon){
	( betray(( -TABLE[70.987][( 19 )] )) );
	Hodor += Hodor
}
}
def betray(Jon,Arya,Sansa){
	Stark += COLS;
	Hodor
}
assert -Hodor : "What do we say to the Lord of Death?"
var Ygritte = -8
def betray(Jon){
	( 950.721 );
	if(dog){
	Hodor += -64
} else {
	if(mislead()){
	-780.99;
	if(mislead(-destroy() * ( foo(( -betray(1,-90) ),COLS) / --destroy() + TABLE[destroy() + ---Arya + 62 * -0.74][-89] / -0.14 - rule(-40) ) - ROWS,26,-45) * COLS){
	if(ROWS){
	TABLE[betray(dog * Jon,( TABLE[-100][rule() / -78] ),-( Jon ))][( ( -dog ) ) - y - ( 44 ) + ( ( 0.96 ) )];
	if(COLS * foo(-1,-rule() - rule(( -foo(Hodor) )))){
	if(x){
	if(( -ROWS ) + Arya){
	-COLS;
	-5;
	if(Stark){
	ROWS;
	( foo(foo() + ( mislead(TABLE[-COLS][( -0.96 )]) ),-Sansa,rule(10.973,TABLE[--COLS / ( -1 ) - ROWS][37])) ) - ( rule(y,( -0.12 ),COLS * 0.32 - -ROWS) );
	Ygritte /= ( COLS - Ygritte )
} else {
	Hodor += Arya;
	-ROWS - ( -Arya )
}
}
} else {
	if(( 980.86 )){
	if(y){
	Jon *= -930.09;
	Ygritte;
	( y ) + 37 + foo()
} else {
	Jon += 60 / -1;
	ROWS
};
	COLS / -mislead()
} else {
	-foo(destroy(bar(--( -460.62 )),protect(ROWS))) + bar(( COLS ) + mislead())
};
	TABLE[TABLE[y + x / protect(0.99,( 1 ))][-Ygritte - x / -Sansa * Sansa]][( Hodor )]
};
	x += 0.61
} else {
	if(0.07){
	ROWS;
	if(83){

} else {
	if(610.66){
	Sansa *= Ygritte;
	if(81){
	Arya
}
}
};
	rule()
};
	Stark += rule(-bar(-160.61,betray(bar(COLS),( Jon )),-0.23 / -360.022) + -Jon,--y,0.99) / 0.85
}
};
	ROWS
} else {
	Arya /= ( dog );
	Ygritte -= -protect(rule(-( -97 ))) - Jon - -230.57
}
};
	Jon -= protect(1,protect(Hodor) + ( COLS ) - TABLE[-TABLE[-1][( rule(( ROWS ),ROWS) * ROWS ) + -mislead(-250.719 * COLS * --1 - -rule(rule(foo(Ygritte,foo(-Stark)),0.54 / 0.98,rule(( TABLE[TABLE[-89][ROWS]][( ( ( dog ) ) - -mislead(--Arya,Jon / -mislead(-TABLE[-30][Jon * 0.2],Ygritte)) )] ),-destroy(-COLS,-39))) - -0.04 + 1 + foo(betray(),Hodor,-dog)),--ROWS,-( protect(710,-97) ))] * COLS][ROWS],( Jon )) / Arya
}
}
def betray(Jon){

}
assert Hodor : "Winter is coming"
def TABLE[COLS][k] {
	if(-1){
	if(-57 * -TABLE[y + -Arya][( 88 / COLS )]){
	Stark /= foo(Ygritte + 0.82 * -TABLE[--( ( Arya ) )][Hodor],( mislead(TABLE[( -29 )][( rule(-170.56,-COLS - x,COLS) )],mislead(bar(),87,--dog + --TABLE[bar(--dog + -( ROWS ),-71)][--0.56])) ));
	if(x){
	if(-1){
	y /= Sansa
}
} else {

}
} else {
	if(-0.56){
	0.64;
	if(TABLE[ROWS][Jon]){
	-( Arya ) / Hodor + --580.892;
	Sansa += ( 16 );
	-( protect(-y) )
}
}
};
	( COLS )
} else {
	Ygritte;
	Hodor -= Hodor
};
	Ygritte -= --ROWS
}
def TABLE[Jon][k] {
	if(-betray(Hodor)){
	if(Ygritte){
	-protect(y,destroy(),y) * ( ROWS ) / ( -( ( ( COLS ) ) ) );
	if(-63){
	( destroy(Stark,--160.3,TABLE[-1][9]) );
	( --COLS - Jon )
} else {
	COLS;
	Stark -= --Jon + ( COLS )
}
};
	TABLE[COLS][( ( ( TABLE[ROWS][-COLS / x] ) ) / Sansa ) / dog]
};
	if(-1){

} else {

};
	if(destroy(-0.87 - TABLE[1][( -0.78 )])){
	Ygritte /= 37;
	if(Arya){
	if(mislead()){

};
	if(--( Ygritte ) / ( --ROWS )){
	( -14 );
	Hodor /= -Ygritte
} else {
	Stark /= COLS;
	Jon /= TABLE[66][Sansa];
	if(( destroy(x,rule(TABLE[bar(betray(-530.246),Jon + -ROWS,rule())][COLS],-1,0.26)) / 0.23 + -TABLE[TABLE[y][-1] - ( -( -bar(Stark,-0.95) ) )][TABLE[betray(Ygritte,bar(dog * mislead(Sansa),-foo(-970.73) * -( 59 )))][betray(Hodor,-mislead(dog,0.61),dog)]] )){
	Jon *= 0.4
} else {
	if(-Ygritte){

};
	Sansa -= -Ygritte
}
}
} else {
	if(y){
	8 - ROWS;
	dog -= destroy(COLS);
	Arya /= 0.12
};
	Jon;
	( -( ( TABLE[-0.07][protect(( Ygritte ),( ( ( x ) - Sansa - ( Stark ) + -mislead(-0.56 / 930.68) * foo(Stark) ) - ( 59 ) )) - -1] ) * bar(TABLE[31][mislead()],Arya) ) )
}
}
}
var Stark = ( TABLE[TABLE[COLS][---y / Ygritte / 57] * -450.8][Stark] )
def mislead(){
	Jon /= ( ( --0.77 * rule(Arya,-( ( protect(TABLE[-TABLE[TABLE[-Ygritte][rule(-64)]][y]][destroy(-ROWS * foo(mislead(bar()),-( -( x ) )))],Stark,280.1) ) ),( --y * COLS )) - -1 ) ) / protect(ROWS,-ROWS);
	if(x){
	if(Ygritte){
	Sansa += Jon;
	if(340.389){
	( -rule(-( foo(10,betray(TABLE[( y )][TABLE[( mislead(bar(( TABLE[mislead(-31) + COLS][--( -Ygritte ) - bar(-51) - -76] ) / protect(TABLE[Jon][-0.95],--( Hodor ),( TABLE[COLS * protect(Ygritte)][Hodor] ) + 26) - dog) - betray(83,0.86,foo()) / -0.35,TABLE[rule()][1 / 95]) )][( -( ( x ) ) )]] * mislead(( ( 60 ) )),COLS) / -x) ),protect(foo(( -85 ),-79),0.27,( ( ROWS / --( mislead(-0.78,betray(( betray(betray(betray(Ygritte,--33),COLS)) - COLS ),1)) - ( COLS ) ) - ( -Stark ) ) ))) );
	-1;
	if(Ygritte){

} else {
	TABLE[Stark][Ygritte - --( Ygritte ) / ( 1 - -180.52 ) - ROWS];
	y /= -32 - -0.82 + ( ( rule(Ygritte / betray(( Sansa ),1) * COLS - TABLE[bar(TABLE[TABLE[-700.302][COLS]][Stark] + ( ( rule(-0.85) ) ) * -( Arya ),-100.5)][-73],Jon - Arya + 1 * -protect(dog,--Arya + -COLS) * ROWS) ) ) * ( ( 1 ) );
	protect(Arya,ROWS,mislead(-COLS,-Sansa - ( --protect(betray(ROWS),Stark) )))
}
}
} else {
	Stark += Ygritte
};
	Jon * COLS;
	bar(0 * ROWS,COLS)
};
	Arya
}
def foo(Sansa,x){
	Ygritte *= foo(COLS)
}
var Sansa = ROWS
def foo(Stark,Jon){
	Arya /= ( x ) / ( ( 86 ) );
	Stark *= foo(destroy(x,Stark * Hodor - --COLS - ( ROWS - --( ROWS ) )) / ( 0.55 ),-Sansa,mislead(Jon,COLS,TABLE[betray(( bar(TABLE[( 44 )][0.07]) * TABLE[( x - ( -0.06 ) )][0.13] + COLS ) + Hodor * Jon - Stark * ( -TABLE[-Stark][destroy(betray(Sansa,TABLE[( -Ygritte * protect(x) )][( -ROWS )]))] ) - ( dog ),protect(Ygritte,-43,-( 60 )))][x]) - foo(( rule(-protect(destroy(),Ygritte,( ( destroy() / Hodor - -bar(x / Stark) / -protect(Jon + mislead(( ( -TABLE[0.88][ROWS] ) )),--( ( ( -( ROWS ) ) - -( ( 27 ) ) / ROWS ) )) ) )),86) )) - 99);
	if(bar(TABLE[destroy(Jon,-0.21) / --1 / ( COLS )][-0.95])){
	-27;
	if(rule()){
	( -82 );
	destroy();
	if(-foo(-( TABLE[protect(dog)][( mislead(COLS) )] ),x) * TABLE[-Jon][betray(foo(protect(TABLE[( ( COLS + -48 ) )][ROWS],destroy(( protect(-0.39,-( -83 ),x) ) / COLS),( -( TABLE[( -12 ) + -660.55][-( mislead() )] ) )),betray(ROWS) - dog,( ( -31 ) )),bar(),Sansa)] / dog * ( ( destroy(( dog - ( betray(bar(( ( rule() / dog * Jon ) )),Arya,betray()) ) )) ) )){

} else {
	betray(-1,mislead(-370.906,-0.39),--Stark);
	protect(COLS)
}
} else {
	x -= ROWS
}
}
}
def foo(y){
	( -protect(ROWS,-720.358,( 0.57 )) );
	Ygritte
}
def TABLE[COLS][k] {
	Jon *= ROWS;
	if(-COLS){

}
}
var x = -destroy()
def bar(Hodor){
	if(Stark){
	0.49
} else {
	if(76){

} else {
	Arya *= COLS - -1 + -( --20 )
}
};
	Jon += TABLE[( -1 ) - COLS][Arya + bar(-1,-Stark,-x)]
}
def TABLE[( ( 0.33 ) )][k] {
	ROWS;
	dog /= Ygritte;
	if(Arya){
	if(-Stark){
	if(foo(COLS,ROWS)){
	Ygritte += COLS;
	Hodor
};
	if(protect()){
	Arya *= destroy(Ygritte)
} else {
	Stark /= destroy(1 * ( destroy(-590.3,-0.88) ) / 27,x);
	destroy()
};
	if(--Arya){
	y += Stark
} else {

}
} else {
	y *= ( y ) - foo(Arya,rule(),betray() + --betray(0.67,dog * ---( foo(mislead(99 * -1 + -0.35) / 0.54,betray(betray(640.842) / -Arya,( ( ROWS ) ))) + protect(dog,( 270 ),COLS) ) - -0.65,96));
	if(76){
	Stark;
	Arya *= -foo()
}
}
}
}
assert 970.44 : "Fear cuts deeper than swords."
assert COLS : "What do we say to the Lord of Death?"
def TABLE[ROWS][i] {

}
def destroy(){

}
def bar(x,Hodor){
	if(( ( Jon * ( ( 0.81 ) ) ) )){
	if(rule(( -0.8 ),x)){

};
	Arya *= Hodor
}
}
var x = ( COLS )
def TABLE[0.32][i] {
	y;
	if(( COLS * -81 )){
	Stark *= 0.64;
	Ygritte *= -destroy(( ( COLS ) + -0.09 + foo(bar(( ( bar(rule(COLS * Hodor,TABLE[-0.12 - bar()][( --1 )])) ) )),( ( 0.45 ) ),Jon) ),( bar(Stark,( 1 )) ))
} else {
	if(TABLE[64][dog]){
	if(x){
	-mislead()
};
	dog += destroy(TABLE[( 76 )][Sansa],foo(-470.637,950.69))
} else {
	if(( -26 * -( dog ) + ROWS )){
	if(-0.11){

} else {
	Hodor += 930.958;
	if(( rule(x) )){
	Stark += betray(Jon) * protect(-0.96);
	Sansa *= Arya;
	protect()
} else {
	x -= -( 0.4 );
	if(-x + x * ROWS){
	if(destroy(bar(Jon),ROWS) + Sansa){

}
}
}
}
};
	Sansa /= -0.32;
	if(( COLS )){
	( bar(( COLS + -( destroy(Stark,mislead(--COLS - TABLE[1][destroy(-x + destroy(( ROWS )))],-ROWS,( Jon )),COLS) ) )) );
	x += TABLE[( 36 )][( dog ) * ( rule() + ( ( --( 0.97 ) - bar(TABLE[Ygritte / --0.6][protect(bar() / TABLE[Hodor][dog],-x,TABLE[-x][160.29])],foo(( ( -620.031 ) ),53),destroy(-COLS)) ) + rule(-rule(ROWS,-21 / -34)) ) )];
	mislead(Stark) / rule(mislead(Ygritte,( COLS ) / rule(x)),35 - dog)
} else {
	TABLE[Stark][( 82 )]
}
}
}
}
assert Ygritte : "Winter is coming"
def rule(Sansa){
	Jon += Stark;
	if(-x){
	Hodor *= -ROWS;
	( COLS );
	x += Arya
}
}
var Jon = TABLE[destroy(protect(COLS,-1) * ROWS,bar() + Stark)][TABLE[betray(Arya,TABLE[-COLS][( mislead() )])][0.84]]
assert ( 0.55 ) : "What do we say to the Lord of Death?"
assert -46 : "Winter is coming"
def TABLE[ROWS][j] {
	( -120.186 )
}
def TABLE[protect(( bar(( ( ( Sansa ) ) )) ))][k] {
	y += -ROWS;
	Jon /= rule(mislead(-1),COLS - -Ygritte * --88 - ( -1 ) / -1 - COLS);
	x
}
def mislead(y){

}
var Jon = -y / -ROWS
var Stark = -destroy(bar(),-mislead(( bar(( 22 ),Stark * x) )))
def rule(Jon){
	Hodor -= protect(---( -0.28 ),TABLE[rule()][COLS],-foo(dog,( rule(COLS,COLS) ) * ROWS,TABLE[Jon][19]));
	Hodor /= ROWS
}
def foo(Stark,Arya){

}
var Ygritte = ROWS
var Arya = -610.954
def rule(Ygritte){

}
def TABLE[ROWS][i] {
	Jon *= protect(--0.17 / ( bar(foo(),COLS) ),TABLE[( protect() - TABLE[TABLE[-dog][x]][y] )][dog],( TABLE[rule(( -1 ),bar(foo(( ROWS ),TABLE[( -0.9 )][ROWS]),-0.34),-0.59)][COLS - ( ( bar() ) ) - Sansa] )) / protect(dog);
	Stark
}
assert dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[610.014][j] {
	x += destroy(TABLE[destroy(destroy(0.49 + -21,-rule(Stark) * ( -bar(foo() * foo(TABLE[-90.14 - foo(( -rule() - Arya ),( y ))][-660.4144 - Arya] * ( Arya / Ygritte ),Jon),foo(-Arya,( ( ( 1 ) ) )),foo(-1,71 - mislead(foo(30.854,1),ROWS),-60) + ( COLS ) + y + 650.297) )),-Hodor,mislead(( ( foo(( x ),-570.23 * -protect(Hodor)) ) )))][COLS]);
	if(-( 0.11 )){
	if(dog){
	Arya *= -( ( y ) )
} else {
	Hodor /= mislead(85 / ( ROWS ));
	if(0.64){
	Hodor /= foo(Stark,mislead(1))
} else {
	dog;
	( protect(-1 * y) )
};
	y += foo(ROWS - ( Stark ),ROWS)
};
	if(Hodor){
	Ygritte *= -( ( -foo(( x )) ) );
	dog /= Stark;
	-150.3
} else {
	x += destroy(----protect(Arya) / -Arya,-ROWS);
	if(x){
	if(-87){

}
};
	if(foo(destroy(-67),dog)){
	-77
}
};
	x /= COLS
};
	y -= bar(destroy(--y,1,( TABLE[-( foo(-Hodor + foo(Arya,-490.63,betray(Ygritte,COLS) * betray(-0.86 - mislead())),COLS) )][0.37 - -1] )))
}
def rule(){

}
var Jon = --( -( -Jon ) ) - ( TABLE[( -0.8 + Sansa - -68 )][-16] ) * betray(-700.69,x)
def rule(x){

}
def TABLE[betray(TABLE[protect(1,protect(),x)][bar(-( 1 ),---1 * ROWS) - -0.75 / ( Hodor + -destroy(ROWS,-( ( TABLE[( -( Sansa ) )][protect(mislead(0.69,( 0.9 )),26)] ) )) ) - -( 0.33 )])][k] {
	if(ROWS){
	--TABLE[( -91 / Ygritte )][-1] + -bar(Hodor,Sansa / ( dog ),18);
	if(x){
	Hodor -= 0.42
} else {
	Stark -= destroy(COLS);
	( ( Arya ) )
};
	if(destroy(20,-1)){
	-( ROWS );
	x /= 0.59
} else {
	dog /= Jon * -( TABLE[ROWS][( ( COLS ) - ROWS )] );
	---1 + 0.86
}
}
}
def TABLE[( protect(betray(-( 0.32 ) + -1,( --Stark / foo(TABLE[82][-Sansa]) )),COLS) )][k] {
	Stark;
	if(( -bar(betray(protect(---COLS,y),0.02,-1)) )){
	if(( TABLE[-79][y] )){

}
}
}
var Sansa = -1
var Sansa = ( protect(Arya - COLS,destroy(destroy(COLS,TABLE[x][TABLE[( -71 )][betray(( TABLE[mislead(0.37)][TABLE[-26][-( 1 )]] ))]]),TABLE[( destroy(bar(Sansa,-foo()),protect(-destroy(TABLE[--55][( ( ROWS ) )],68))) )][( -0.43 * 360.48 ) + 1] * Jon)) * -1 )
def TABLE[bar(( --Jon + dog + --ROWS / -15 ),( 1 ),ROWS)][j] {

}
def foo(Jon){
	TABLE[Ygritte][foo(-TABLE[Stark][Ygritte],-( betray(protect() / -COLS - Ygritte + -46,destroy(COLS / COLS) - COLS - mislead() + -30 * Hodor / -TABLE[14][700.59],--COLS) ))];
	Stark;
	Ygritte += ( ( bar(Stark,( COLS ) * -0.56 * COLS) ) )
}
assert -2 : "Fear cuts deeper than swords."
assert betray(( -0.87 ),ROWS) : "What do we say to the Lord of Death?"
def TABLE[ROWS * -30.1][k] {
	y += 0.93
}
def TABLE[-dog + mislead(x,( -0.03 / 0.09 )) + TABLE[( 160.659 )][destroy()]][j] {

}
assert -Sansa : "One can not simply parse himself"
var Arya = ( ( -Hodor ) )
var Hodor = TABLE[Ygritte][protect(ROWS,( 460.82 ))]
assert -Jon : "One can not simply parse himself"
def foo(Arya){
	Jon;
	-x
}
def foo(Stark){
	y -= dog
}
def foo(){
	dog
}
def mislead(Jon,x){
	if(mislead(Sansa - destroy(( -0.57 ),0.81,( ( ROWS - ( -1 ) * ( betray(-0.76,( 0.25 / ( ROWS ) * 1 )) ) ) )),TABLE[Ygritte][Sansa],( betray() ))){

}
}
assert -0.28 : "Nothing burns like the cold."
var Jon = destroy(ROWS,----destroy(Jon,( ( -protect(foo(--x),destroy(( ( ROWS ) ),Arya)) ) + mislead(bar(Stark,Arya,-( ( x ) ) * ROWS),mislead()) ),-protect(2)))
var Sansa = 0.27
def TABLE[76][j] {
	if(-rule(COLS,Ygritte * Stark)){

};
	Stark -= -1;
	-23
}
assert -4 + ( --0.71 ) + ( 370.495 ) * ROWS : "What do we say to the Lord of Death?"
def betray(Ygritte,Sansa){
	Ygritte -= rule(-bar(),ROWS);
	if(foo(---ROWS,( betray(( --7 )) ))){

}
}
var y = ---( ( --ROWS ) ) - COLS * ROWS
def TABLE[-COLS - COLS][j] {
	Ygritte += y;
	if(-9){
	Arya *= mislead(( 93 ),Hodor);
	--ROWS
} else {
	Stark *= ROWS
}
}
def TABLE[Ygritte][j] {
	if(-y){
	Jon += ROWS * protect(70.18 / --COLS,-( ROWS ) - ( foo() / mislead(-53,TABLE[0.3][-44],COLS) ) / 66 / -ROWS,Hodor)
} else {
	if(( mislead(ROWS,( ( mislead(COLS,0.71) ) )) )){
	y;
	-( ( 1 ) );
	1
};
	rule(TABLE[( ( ROWS ) )][( COLS ) / protect(COLS)],Hodor)
};
	if(destroy() - TABLE[--72][foo(-Sansa,destroy(( --TABLE[1][betray()] )))]){

}
}
assert TABLE[0.77][( betray(-1 / -15 + foo(( Sansa ),Sansa + -0.49) * Arya * -98 - Ygritte) )] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = ROWS
var x = ( mislead() )
var Jon = -ROWS + --0.39
def TABLE[0.7][k] {
	Jon /= ( destroy(-Jon,( ( Ygritte ) ),Stark) )
}
assert -dog : "Fear cuts deeper than swords."
assert -98 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -rule(---120.757,TABLE[ROWS][Hodor + y / ( ( Hodor ) ) - COLS] - Stark) : "Winter is coming"
def TABLE[COLS][i] {

}
var Ygritte = Jon + -( -0.44 )
def TABLE[---ROWS + ROWS][i] {
	if(TABLE[( mislead(destroy(),( -1 ) + -1) ) - ( -86 )][Jon]){
	dog -= rule(TABLE[-COLS][Jon]) * -890.1 - 88
}
}
def TABLE[0.22][i] {
	9;
	if(Jon){
	Stark -= Sansa;
	if(ROWS){

}
} else {
	Hodor *= protect(foo(-rule(Arya),mislead(TABLE[-Sansa / TABLE[( ( COLS ) + dog )][ROWS]][Ygritte] - 1,( destroy(( -0.64 )) + rule() - TABLE[---0.7 - mislead(-0.17,0.11,-40) - -mislead(TABLE[-44][--TABLE[Hodor][TABLE[destroy(-COLS * foo(0.89,betray(COLS,( COLS ),( ROWS ))),destroy(-TABLE[-200.928][-ROWS + -97 * TABLE[COLS][destroy(Ygritte,protect(),0.53)]]))][( ROWS )]] + protect(Hodor,( -destroy(-0.17,0.25) )) + ( ( -protect(COLS,( mislead(-39,TABLE[( 1 )][43]) ) + ( -( TABLE[betray(destroy(destroy(protect(),( Arya ) + -930.36),rule(betray(mislead(Arya,destroy(--690.4315)) * betray(foo(),ROWS,-( COLS ) + -0.3 / TABLE[--77][-rule(-90,( TABLE[29][ROWS] )) * --( y ) + COLS] * -82 + --( ( --( ( ROWS ) ) ) )) - -1 / ----54 / 79 + -ROWS,destroy(Ygritte))) - ( --0.03 ) - TABLE[Hodor][-ROWS],foo()))][800.4] ) ),0.13) ) ) / ( y ) + ( 450.23 )],COLS,Hodor)][protect(dog,TABLE[COLS][-Stark])] )) * foo(( -x )),-COLS),40.69) - COLS;
	0.43
};
	y += ( -protect(ROWS) )
}
def TABLE[Ygritte][k] {
	Arya;
	ROWS
}
var Hodor = Hodor
var Stark = x
def protect(){
	if(Sansa){
	Sansa /= 1;
	COLS + -0.95
};
	-COLS;
	Hodor += ( -( ( protect(-1,970.2 - bar()) ) ) )
}
def foo(x,Hodor,x){
	TABLE[( --0.4 )][foo()];
	if(-TABLE[( COLS - COLS - mislead() )][--0.37 * -0]){
	--ROWS
} else {
	( foo(Hodor + TABLE[Jon][TABLE[( 100.371 )][dog]]) )
};
	Stark
}
def rule(Ygritte,Stark){
	if(bar(bar(TABLE[-0.01][betray(83 / foo(Sansa,-490.004),( -670.3829 ))],-( COLS )))){

}
}
var Jon = --0.82
assert rule(( -TABLE[Ygritte][-24] ) - Stark,( ROWS ) * COLS) : "Nothing burns like the cold."
var x = dog
def TABLE[rule()][k] {

}
def TABLE[( mislead(mislead(-( x ) + TABLE[760.19][-0.73]),dog) )][i] {
	( ROWS );
	ROWS;
	Arya *= -70.448 * Stark
}
def protect(Stark,Jon){
	COLS;
	if(-39){
	if(--23){
	( -destroy(-0.08) );
	if(Stark){
	if(( TABLE[( destroy(-protect(Sansa / ( COLS ) - -720.26 - Jon + betray(10,1,dog) - 45)) )][26] )){
	( COLS )
}
} else {
	if(bar()){
	y -= Jon;
	-destroy(dog,ROWS)
} else {
	y -= --betray()
};
	if(x){

}
}
};
	Ygritte += COLS
} else {

};
	Sansa *= ( -( TABLE[TABLE[mislead(Arya,bar(-1,-40.8565 + -52))][foo()]][Sansa] ) / -71 )
}
assert -( COLS ) : "One can not simply parse himself"
assert rule(bar(-0.76,( -0.19 ),Sansa)) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(y){

}
def TABLE[0.39][i] {
	if(COLS){
	y;
	dog -= rule(-0.83 / x / betray(( ROWS )) + betray(),ROWS)
} else {

}
}
def mislead(){

}
assert bar() : "Nothing burns like the cold."
def TABLE[Ygritte][j] {
	TABLE[-( -Sansa )][-betray(dog)];
	if(ROWS){
	---0.27;
	if(destroy(-rule(-( -11 ),1),betray(TABLE[TABLE[TABLE[Jon][( -x )]][-62] + COLS - --0.22][-Hodor]))){
	Hodor += bar(y * -0.07)
}
}
}
def foo(){
	if(-830.542){
	Arya /= ---( -betray() )
} else {
	( TABLE[-1][-TABLE[Hodor][dog / COLS - ROWS * TABLE[Hodor + -( COLS )][( ( ROWS ) )] - -0.07] + 0.35] )
};
	Stark += Hodor;
	Sansa -= TABLE[-47 + --COLS][destroy(-dog,Arya)]
}
var Ygritte = COLS - -48
assert COLS : "Fear cuts deeper than swords."
assert ( ( ROWS ) ) : "What do we say to the Lord of Death?"
def destroy(){
	if(ROWS){
	Stark /= -31
}
}
var Sansa = ( --dog )
def foo(Hodor){
	if(-750.3){
	if(( TABLE[protect(y,( -42 )) - -ROWS][TABLE[-ROWS][71]] ) / destroy(-Stark + COLS,-0.68) / mislead(0.69,( foo(( 64 )) ) - bar(-0.05))){
	if(Jon){

} else {
	ROWS;
	if(0.82){

} else {
	Sansa *= -y;
	if(14){
	y /= mislead(29,TABLE[Jon][betray()]);
	dog += destroy()
}
};
	if(Stark){
	if(Sansa){

};
	if(mislead(( 60.225 - -66 - --0.2 ),betray(bar(-1),63))){
	if(TABLE[( TABLE[( ROWS )][-Jon - ( -0.45 )] )][bar(Arya)]){

};
	if(-Jon){
	if(-0.47 + ROWS){
	Jon += bar(Ygritte,( bar(Jon + ROWS,destroy(-0.9)) ),foo())
} else {
	( -35 );
	x += y;
	1 / -COLS
}
}
} else {
	0.91;
	if(--0.56){

};
	if(betray(( bar() ),TABLE[-( TABLE[---x * -0.68][--1] )][bar(( destroy(ROWS,-1 / TABLE[( 2 )][( Arya ) / -( ( 0.04 ) ) * mislead(Jon)]) + ( foo(-55) ) ) / ( COLS ))],Hodor)){
	-1
} else {
	if(( --Ygritte )){
	destroy(-TABLE[protect(( ( Ygritte ) ),Arya)][ROWS],ROWS);
	if(destroy(( dog ),-( -0.86 )) - 0.96){
	x += Jon
} else {
	Hodor -= -80
}
}
}
}
} else {
	-1
}
}
} else {
	y += -0.7;
	COLS
};
	if(-1 * foo(TABLE[rule(( dog ) * ( -destroy(dog) ),y,-0.69 - -0.15)][bar()],betray(( -Sansa )),0.33)){
	Stark += COLS;
	Stark /= -360.1
} else {
	if(Jon){
	Stark += x
}
};
	if(Arya){
	0.21;
	if(TABLE[TABLE[rule(1)][rule(-18)]][0.18]){
	if(y){
	-betray(TABLE[ROWS / ROWS][-Stark] + mislead()) * rule(( Stark ),67,-390.3679 / 0.48 - TABLE[-( ( -( -80 ) ) * --740.22 )][-Ygritte * 1 * ROWS]) + ROWS + -ROWS / mislead()
} else {
	Arya -= destroy(destroy(1,0.16),-0.57)
};
	x += -ROWS
}
} else {
	if(0.6 * mislead(1)){
	if(TABLE[COLS][TABLE[TABLE[48][COLS] / COLS][TABLE[bar(foo(-0.79,ROWS),-Hodor * COLS + rule(1,x))][--y - ( 1 )]] / -ROWS] - ( -( 27 ) ) * 0.41){

} else {
	if(---Arya - bar(COLS,-( ROWS * x ),Stark)){

} else {
	Stark *= Sansa;
	if(Sansa){
	y /= ( -TABLE[rule(-16,Hodor)][Stark] );
	if(foo(( TABLE[Jon + mislead()][( ROWS )] ) * -mislead(rule(foo(rule(COLS,-y))),-protect(-ROWS) + ---ROWS + x))){
	if(Jon){
	if(TABLE[rule(-protect(( 0.97 * COLS - ROWS ),bar()))][( TABLE[betray(-( Hodor ),betray(( ( 660.1 ) ),x))][betray()] )] / protect(( ( ---mislead(--TABLE[-y * -rule(0.05,foo(( ( Arya ) - -58 / ( Arya ) ),( Arya / ( Stark ) ),14 * dog) * -0.03) - -Sansa][Hodor],Hodor) / 0.43 * destroy(0.58,destroy(-96 - betray(protect(( 46 ) - ( -Ygritte ),ROWS,0.95)),( ( ( 0.44 - Ygritte - -0.28 ) ) ),-foo(-( Sansa ) - -87 - -( -37 ) - Stark * ROWS * mislead() * ROWS,dog)),COLS) ) ),-bar(mislead(--1),-0.08))){
	Sansa -= -ROWS + -ROWS + COLS / Stark
};
	if(ROWS - protect(ROWS,Stark) + -TABLE[Ygritte][750.635]){
	Jon += ROWS
} else {
	if(TABLE[-ROWS][( -0.57 )]){
	if(-1){
	if(betray()){
	( ( Stark ) / ( Stark ) + ( -1 ) * ROWS );
	if(y){
	-Sansa;
	if(ROWS){
	Arya -= COLS;
	if(-mislead(( Sansa ))){
	( ( -ROWS ) )
}
} else {
	if(destroy(-0.2)){

} else {
	460.8 / 27
}
}
} else {
	Hodor *= -( -48 );
	bar(0.53,TABLE[-0.68 + -1 + ( destroy(COLS,TABLE[TABLE[( -15 )][-Hodor]][ROWS],-1) )][42 + destroy(-Stark,-( protect(ROWS + -( 0.11 ),COLS - ( COLS ),--ROWS) )) / ROWS / ( -0.38 )])
}
} else {
	if(COLS / rule(ROWS) * ---Stark - -15 / -14 * ( TABLE[720.421][-230.6] ) * -COLS - protect(COLS,( -( y ) ))){
	( ( -rule(TABLE[COLS + COLS][TABLE[-0.71][protect(( COLS ))]],--betray(bar(destroy(-0.59)) + 0.16)) ) )
} else {

}
}
};
	if(COLS){

}
};
	-y / --ROWS;
	ROWS
}
} else {
	Hodor /= 55
};
	Arya
} else {
	if(protect(Stark) - -0.82 / -97){
	Ygritte *= mislead(ROWS - foo(COLS),-( -47 + rule(--1,mislead(( Jon ),( TABLE[x][foo(( foo(0.25,Stark,ROWS) - bar(Jon,Sansa) ),-0.97,foo(0.55 * TABLE[TABLE[27 + y][Hodor]][810.1 / ( betray(690.99 - -86,--0.26) )],COLS))] ))) ),-Jon);
	if(---COLS){
	0.91
}
} else {
	x /= -1;
	Ygritte -= foo(protect(betray(Hodor * -5 + COLS / ( -Arya ),( destroy(mislead(1,-TABLE[( Stark )][protect(Sansa,( foo(TABLE[-COLS][-70 - -1]) ),betray(-----y))],-Sansa),Hodor) )) / ( Ygritte )),-( COLS - destroy(TABLE[betray(( COLS ))][ROWS] + -( 0.51 ),( destroy(ROWS,( ROWS ),-Arya) / ( TABLE[-( --1 )][betray(0.12 - -( -62 ),-TABLE[y][betray(-220.06)] - ( Ygritte ),COLS)] ) )) * -0.27 + -x ))
}
};
	if(rule(-1,mislead(COLS - ( ROWS )) + -( TABLE[mislead(-1,protect(COLS,TABLE[--( Arya )][y / foo(bar(( -220.833 ),-Sansa + Arya / ROWS) / ( Arya ))],protect() + foo(ROWS,ROWS)),36)][foo(-betray(( -75 ),Hodor) + bar(0.26 - TABLE[14][( ROWS )],0.16,27) * -betray(0.45,-destroy(foo(ROWS)) - betray() / ( bar(foo(foo(( -betray(protect(-1) + Jon,Sansa + ( betray(x) ) + x,rule()) ),--0.64),( Stark ) * 21,( x - 30 ) * Jon * -44),( Sansa )) )) + -betray(-rule(0.67,( y ),( ( mislead(--bar(( ROWS )),Sansa) ) ))) - TABLE[Jon][-26 - betray(COLS) * -78 - -Hodor] / -1 - ROWS * -( bar(--55) / ( Sansa ) ) - Ygritte)] + x ) + ROWS)){

} else {
	if(( TABLE[15][destroy(COLS,y)] )){
	if(Jon / --640.6){
	Hodor -= -30;
	Hodor *= -( rule(( betray(--TABLE[rule(TABLE[( 44 )][ROWS / 51])][67 * ( -mislead(78,-COLS) )]) ) * mislead(mislead(COLS))) )
} else {
	Ygritte += protect(betray(Jon) - y,Arya);
	( ( Sansa ) )
};
	-10
} else {
	Sansa += protect(--ROWS)
}
}
};
	if(protect()){
	Jon -= Sansa
} else {
	if(TABLE[( -( --360.9 ) + ( y ) * Jon * -0.65 ) - ROWS / Arya + -bar()][-COLS]){

};
	-0.22 - --64 - ( destroy() )
}
};
	if(betray(betray(mislead()),-destroy())){
	-Jon;
	if(Sansa){
	if(( Arya - ( ( COLS * --Jon ) ) )){
	if(( Jon )){
	if(betray()){
	if(( --0.62 )){

}
}
};
	if(-0.41){
	x -= -27 / -600.2241;
	dog /= y;
	if(betray() + betray() / ( 2 )){
	y;
	ROWS + -y - -COLS / --47 + TABLE[protect(COLS)][-Stark] + Stark - rule(-( protect(0.47,0.77 - destroy(Ygritte),-1) ),1) - ( -53 ) + ( ROWS )
} else {

}
} else {

};
	x -= ( --TABLE[foo(bar(ROWS),-TABLE[foo(mislead(-( -17 ) + y + ( -dog )),COLS)][y * -30 + destroy(destroy(TABLE[foo()][-Stark - Jon]),bar(( ( ---540.971 * Arya - ( 1 ) / foo(bar(),TABLE[( ( protect(--ROWS) ) ) / mislead() + Ygritte / ROWS][-TABLE[--bar(Hodor * bar(COLS) * ROWS / bar(mislead(( -1 )),-0.16 - -mislead(-0.37,( -TABLE[98][TABLE[TABLE[-1][Ygritte * -Arya] / -1][( TABLE[-1][-10] )]] ),-0.03) * TABLE[-52 - 26][68]),Sansa / 0.12)][Arya]],( --Sansa )) / bar(-91) ) ),( Sansa ) + ROWS,TABLE[Sansa][( -290.4 )]),y)] + ROWS,foo(( ( 76 * --0.22 ) ) / 0.66,COLS))][foo()] )
};
	if(ROWS * -COLS){
	ROWS;
	if(TABLE[ROWS][420.45]){
	if(dog + destroy(ROWS,91)){

};
	if(ROWS){
	if(-ROWS + 31){
	if(ROWS){
	if(-1){

};
	if(-Stark){
	y -= -65 - y;
	Jon /= -76
} else {

}
}
} else {

};
	Arya -= destroy();
	Jon *= -97
}
};
	if(COLS){
	if(( y )){

} else {
	protect(mislead(( Sansa + ROWS ),COLS),TABLE[TABLE[( TABLE[bar()][-betray(-( ---( -0.01 ) * 0.53 ))] )][TABLE[COLS][COLS]] * TABLE[0.94][protect(protect(y,( Hodor ),63),( --0.58 ),-( -56 ) / foo(-0.42 * ( mislead(ROWS) ),bar(Jon,COLS / mislead()),COLS))] * ( ROWS + destroy() ) * Jon + bar()][bar(ROWS,mislead()) - rule()]);
	Stark /= ( COLS + ( ( bar(foo(destroy(TABLE[foo(( ---( ( Arya ) ) ))][x])) * COLS,ROWS) / TABLE[220.673][protect(rule(Sansa / ( betray(-Sansa,-0.14 - Hodor,ROWS) + -protect(ROWS) - Jon ),0.16)) + protect(ROWS,y,protect(betray(( ( Stark ) )),( bar(COLS,Arya,( ( -( ( -Sansa ) ) ) + ( ( ( y ) / 16 / TABLE[-protect()][bar()] - bar(520.878,-290.16,-dog) ) ) )) ),( ROWS ) - COLS))] ) * -y ) + 0.69 + Arya + 0.32 )
};
	Hodor -= destroy(COLS);
	Hodor /= Hodor
}
};
	if(ROWS){
	if(mislead(( 580.61 ))){

} else {
	Hodor -= ROWS
};
	if(Hodor){
	dog / mislead()
};
	-58
}
}
} else {

}
};
	Arya += mislead(( mislead(destroy(dog),-TABLE[rule()][Ygritte + 39 * Hodor * Hodor] * COLS) ),betray(( x )),( COLS ))
};
	TABLE[--( Hodor ) * -ROWS][Arya]
}
}
}
assert Ygritte : "What do we say to the Lord of Death?"
var Jon = ( COLS ) / destroy(( COLS ),ROWS) + -1
var Stark = ( COLS )
var y = -Arya
assert ( Ygritte ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(){
	if(foo(-7)){
	if(1){
	TABLE[protect(-3)][-1 + Stark];
	protect(Sansa)
} else {
	Stark *= ( dog / 880.114 ) * rule(--COLS * 0.91);
	Arya /= ( TABLE[-0.49][TABLE[( protect(y,COLS) * ( -940.56 * -0.51 / -97 - -40 + -mislead(( Jon )) * TABLE[13 / TABLE[1][( 57 )]][destroy()] ) )][-12]] )
};
	Arya *= Jon
} else {
	Ygritte -= -( -Sansa ) / protect(-950.93,490.7642,-mislead());
	if(( -76 )){
	if(( -( -1 ) - -rule(Hodor) - 0.43 / -47 * y / ( -COLS ) * ( ( -90 ) / ( ROWS ) ) * --61 )){
	Sansa /= ( mislead(Hodor) )
};
	x *= 0.54
}
};
	dog += -Stark
}
var x = ROWS
def mislead(Sansa,Hodor){
	Arya;
	-( -9 );
	if(( 460.0267 ) * 0.83){

} else {
	( betray(rule(Jon)) );
	COLS
}
}
var Hodor = -ROWS
def TABLE[-bar(x + TABLE[-( COLS )][-( foo(0.49,x) )] * ROWS)][i] {

}
def TABLE[-Arya][j] {
	if(destroy(0.33)){

}
}
var x = rule(( -protect(COLS,( 320.8466 ),COLS) ),-x + 0.63)
var Stark = ROWS
var Hodor = 56
def rule(Stark,y,y){
	COLS;
	Jon -= ( COLS )
}
var x = y
var x = ( COLS )
var Sansa = COLS / y * ( -0.52 ) - Sansa * TABLE[ROWS][-1] + -0.42
def mislead(x,Stark){
	if(-x){
	x += Jon;
	Arya
};
	if(x){
	Jon + Ygritte;
	dog /= ROWS
}
}
var y = -( 0.31 ) + mislead(-dog,-13)
assert -COLS : "Winter is coming"
def bar(Jon){
	Arya += ( ROWS ) - Arya;
	ROWS
}
assert ( bar(TABLE[-0.4][Stark]) ) / ( x ) + COLS - destroy(-0.99,0.86) : "One can not simply parse himself"
def betray(){
	Arya *= COLS
}
var y = betray(Hodor,60 * 1,protect(-0.87) / TABLE[( Stark * Arya + rule(--50,bar(20,betray()),TABLE[-destroy(( ( TABLE[x][( foo(destroy(foo(( ( ( ( -13 ) ) ) ),0.3),COLS) / ( -( 1 ) ),--0.53) )] ) ),-Arya)][( -bar(( destroy(TABLE[bar(COLS)][1],COLS) / x ),( x )) )]) )][( ( Ygritte ) )]) / -0.81
assert ( Stark ) / -95 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Sansa,y,y){
	y += bar(-bar(96) / -0.04,290.3,ROWS);
	Ygritte /= Ygritte
}
def bar(Stark,Stark,dog){
	if(( Sansa )){

}
}
def TABLE[( ( Sansa ) )][j] {
	ROWS;
	if(( 1 )){
	if(( rule(1) )){
	if(---54){

};
	if(betray(-COLS)){
	if(mislead(foo(-1),----TABLE[ROWS][( 0.71 )] + ( x ) + Ygritte) / -ROWS * -Arya / ( ( foo(y,-TABLE[-( bar(COLS) )][-mislead(( protect() ))]) ) + ( -75 ) )){
	Hodor;
	Hodor -= ( TABLE[-( ( bar(COLS,--Jon) ) ) * ROWS][-21 * TABLE[-480.28][COLS]] ) / --1;
	Jon
};
	Arya += Ygritte
} else {
	if(foo(bar(mislead(( destroy(( -38 )) ))),-( COLS )) / Sansa){
	if(TABLE[990.325][Jon]){
	-Arya + COLS / -0.46 + ( -20 + destroy(0.32,-28) )
} else {
	if(-370.756){
	( 0.06 );
	Arya += dog;
	Ygritte -= foo(1)
} else {
	if(-Jon){

}
}
}
} else {
	Arya *= Sansa;
	Stark -= x + ROWS;
	Ygritte /= bar(Arya,-16)
}
}
}
}
}
def foo(Stark,Stark){
	ROWS
}
def bar(Sansa){
	x;
	( 63 );
	if(Arya * -59){
	foo();
	Hodor;
	y
} else {
	if(-0.86){
	if(TABLE[( ( Arya ) )][-930.462]){

} else {
	if(TABLE[COLS][ROWS] + dog){
	Jon
} else {
	y -= ( -TABLE[0.31 + -TABLE[rule(ROWS,-570.49)][bar(x,COLS)]][protect(( Sansa ),-( y ))] / ROWS );
	if(-Jon){
	Hodor *= 84 - -0.59 - ( ( -31 ) );
	if(-COLS * ( ( ( ( 710.61 ) ) ) ) / -( TABLE[40.009][TABLE[Hodor][--( Sansa ) + ( ( -55 ) - -( rule(dog,COLS) / -440.302 ) )]] ) * ( -ROWS )){
	Stark -= ( destroy(foo(-0.1 - ( protect(1,x) ) * 1 * Jon),-mislead(TABLE[-Hodor][-64],mislead(TABLE[Sansa + TABLE[-85 / -( -TABLE[ROWS][Stark + -14 / TABLE[( ROWS - rule(( -0.93 ) + ( destroy(Ygritte) ),1) + Hodor * -ROWS )][Hodor] + -( Arya ) - protect() * mislead(Ygritte,( -TABLE[COLS][Hodor] ))] ) - rule()][TABLE[-TABLE[-TABLE[bar(rule())][TABLE[-180.27][Sansa] - -160.286] * -( 0.42 ) * 0.8 * COLS][0.42]][330.5]]][mislead(( ROWS ),-830.09)],( foo(Hodor - -( mislead(( Hodor ),0.53,ROWS) ),--72 + -destroy(rule(( mislead(Sansa,--26,ROWS + -rule(Sansa)) ),-0.11)),ROWS) ) + 0.48 + -( Jon ),69)),-0.05) );
	-0.3;
	x -= ROWS
}
} else {
	x -= ROWS
};
	x *= TABLE[-290.6939][ROWS]
}
};
	Stark *= ( ( ( -1 ) / TABLE[( -0.49 - Arya / TABLE[dog][TABLE[1][0.58]] )][Sansa] ) ) / -rule();
	TABLE[( ( 0.08 ) - foo(foo(( Arya ),( betray(ROWS) ),-96),( -TABLE[destroy(rule(rule(x),1,-0.47) / ( foo(-10) ),COLS)][460.192] )) - ROWS )][bar(( Sansa ),( dog ) + Arya)]
} else {
	if(( -0.01 )){
	Arya /= foo(mislead(COLS,( dog ),rule() / ( ( dog ) )))
} else {
	if(-COLS){
	Stark /= TABLE[-( COLS )][-521] - ( Sansa );
	if(COLS){

};
	Arya -= Jon
};
	( ( x ) * Hodor );
	-protect(( 97 ),-1)
};
	Ygritte -= betray(-5 - -x,destroy(Ygritte) * -1 - ROWS * -( 0 ),50)
};
	Ygritte += 0.8
}
}
var dog = 0.97
var Hodor = 1
def TABLE[-protect(--12)][j] {

}
assert -Sansa : "Nothing burns like the cold."
assert 73 : "One can not simply parse himself"
def TABLE[Sansa + ROWS][j] {
	COLS
}
def bar(y,Ygritte){
	dog -= -1;
	Stark *= -Ygritte
}
def betray(y){

}
var y = ( ROWS )
def TABLE[-53][j] {
	Stark - rule(500.7,Jon);
	bar(-0.21,COLS,rule());
	if(( protect() )){
	-( -ROWS );
	if(-foo(ROWS * foo(-0.77),-Ygritte) / Hodor + betray(Sansa) * Ygritte){

} else {
	Hodor -= -( rule() ) / Sansa
};
	dog -= rule(-90.16 / x,-ROWS,ROWS)
} else {
	y;
	COLS;
	if(Ygritte){
	if(( 78 * x )){
	Stark += x
}
}
}
}
assert foo() : "One can not simply parse himself"
def destroy(Ygritte,Ygritte){
	if(x){
	Stark *= ( ( TABLE[destroy(Jon,ROWS,-0.52)][rule()] ) )
} else {
	if(( -63 )){
	Hodor /= TABLE[dog][rule(( betray() ))] + -0.22 * Stark
};
	if(betray()){
	Stark -= Hodor - protect() / destroy()
} else {
	Jon *= Hodor;
	if(-44){
	Stark -= bar(betray(--( bar(TABLE[betray(-( ROWS ),betray(67,y,COLS) / Sansa)][foo(( Ygritte + bar(( Sansa ),bar(TABLE[-foo(destroy(--protect(protect(( betray(--COLS,COLS) )),Arya) - TABLE[910.14][( bar() * ROWS + COLS )] / bar(x) * ( TABLE[( 0.54 )][( -x ) / mislead(TABLE[-COLS][foo(-1)],( 0.99 )) - 240.963] ),( 0.57 ) - COLS))][-COLS])) ))],-81) ),( -TABLE[0.59][Stark] )),bar(-betray(dog) + COLS,TABLE[protect(COLS,mislead()) * ( ( ( -59 ) ) )][--( --Arya / Sansa )] / TABLE[Jon][-ROWS]));
	if(73){
	( -0.95 );
	Arya
} else {
	if(( ( -mislead(690.051) ) )){

}
}
}
};
	--( ( --( 70.222 ) ) )
};
	if(( foo(TABLE[( 69 )][-destroy(-TABLE[protect(-57)][Stark],( TABLE[( Ygritte )][( ( 1 ) * rule(-0.4 + protect() / 0.03 * -bar()) - 85 )] ) + ( 49 + x ))]) ) - mislead(-rule(( TABLE[52][Hodor] )))){
	Hodor -= ROWS
}
}
var Hodor = ( x )
def betray(Hodor,Jon,x){
	if(--( TABLE[0.21][1 / -dog] )){
	( COLS );
	ROWS;
	( ROWS )
} else {
	if(dog){
	Hodor * COLS;
	( COLS );
	if(TABLE[Stark][1]){
	if(mislead()){

}
}
} else {
	( foo() - dog ) + -( -COLS );
	Ygritte + mislead(ROWS,-( dog ) + ( ( 3 ) ),TABLE[COLS][Ygritte]) + mislead(-( 85 )) * ROWS
}
};
	COLS
}
def bar(Sansa,x){
	x -= dog;
	Jon *= Sansa
}
def TABLE[COLS][j] {
	Hodor -= ( -TABLE[67 / ( -0.02 )][betray(rule(ROWS,dog))] ) - TABLE[x][COLS] / -TABLE[15][-COLS - --1 - ROWS / 0.63] / ----betray(Jon,COLS) - ROWS;
	Hodor *= -40 * x;
	if(-0.68){
	if(COLS){
	if(-260.51){
	Ygritte *= ( ( --Jon - ( Jon ) / -( --destroy(-( dog ) - Sansa) ) ) );
	--Hodor + TABLE[-Jon][84]
} else {
	Hodor /= COLS - TABLE[---580.057 + Stark][-61] / Jon * bar(destroy())
}
} else {
	-39;
	if(protect() + -Jon){
	if(-y){
	Arya /= rule(-TABLE[( 8 )][( -Stark )],ROWS);
	if(( dog )){
	if(-destroy(TABLE[Hodor][COLS])){
	if(Ygritte){
	Hodor += bar(protect(Arya,( --foo() )));
	dog *= COLS
};
	dog
};
	if(( foo(( -( ( TABLE[870.718][Ygritte] ) ) ),--58,Sansa + -( ROWS )) )){
	( -Ygritte );
	860.63
} else {
	-TABLE[y + betray()][bar() + Sansa]
}
} else {
	y *= TABLE[( Hodor )][COLS];
	if(( 821 )){

};
	if(ROWS){
	Sansa /= Ygritte - -37;
	--Stark
} else {
	if(dog){
	mislead(betray(( -38 )),0.44)
} else {

};
	destroy(mislead())
}
};
	Stark *= ( mislead(TABLE[85][( -0.5 )],foo(TABLE[bar()][ROWS],Ygritte)) )
};
	dog *= ROWS;
	Stark /= ( -betray(72) )
}
}
} else {
	betray(-18,( 10.9621 ),-ROWS * ( 0.95 ));
	if(foo(-1) * -ROWS){
	y /= -46
};
	dog *= 1 * dog
}
}
assert rule(-COLS - ROWS / destroy(( -0.1 ))) - 24 + ROWS - 96 * TABLE[-bar()][foo(ROWS / -0.44 / Hodor,x)] * -0.87 : "Nothing burns like the cold."
def TABLE[COLS][k] {

}
var Ygritte = 0.63
def TABLE[( TABLE[TABLE[mislead(Hodor,( destroy(x) ),COLS)][Arya] * 56][--67] )][i] {
	-77;
	dog
}
def TABLE[TABLE[ROWS][-COLS]][k] {
	x += bar(Hodor,ROWS)
}
def TABLE[( ( ( ( ( -dog * -( ---72 ) ) / x ) ) ) )][k] {
	TABLE[-110.373][-60];
	y += ( --betray(rule(TABLE[--( ROWS )][0.71],TABLE[foo(( foo(TABLE[TABLE[TABLE[---foo(-ROWS / foo(76 / mislead(-41),-COLS) / COLS,ROWS,ROWS) * betray(-0.74) - -Hodor * -0.87 - -( foo() ) + betray(betray(( ( Hodor ) ),( -0.06 - protect(COLS) )),-rule(),protect(COLS) - destroy(y))][-970.3628 * ( 22 )]][0.31]][TABLE[--Hodor][Hodor]],dog) ))][dog],foo()),protect(-Arya / ( mislead(0.27) ) * ( 93 + 14 ))) + betray() );
	if(-Jon){
	TABLE[-betray()][( ROWS )];
	if(--0.22){
	Jon *= y
} else {

};
	Sansa -= 1
}
}
assert -foo(TABLE[-67 * ( Ygritte ) / COLS][y - bar(ROWS,-( -( -84 ) / dog ))]) : "Winter is coming"
def bar(x){
	if(COLS){
	( ( mislead(2) ) );
	( TABLE[--58 - TABLE[rule()][( -betray() )]][( COLS / Hodor * protect(Sansa,-Jon + ( protect(COLS) ) / ROWS) / COLS * -1 )] )
} else {
	TABLE[-destroy(ROWS - -0.48,mislead(--ROWS,( -700.4 )),destroy(TABLE[TABLE[bar(x,( COLS ))][COLS]][( TABLE[x][TABLE[ROWS][-( -COLS / ROWS * -0.53 )]] )])) / 510.14 - -6][( -980.678 )];
	if(protect()){
	if(-Hodor){

};
	if(Sansa){
	if(foo(COLS,foo(-mislead(( Hodor ),rule(-0.31)),-( Stark ) / ( 36 ) + -mislead(---( ( 1 ) ) - Arya,--betray()) - ( ( TABLE[( 1 - --( ( --ROWS + Sansa ) ) + ( -0.94 - y ) )][( bar(bar(( -TABLE[Ygritte][-x] ),99 / ( -TABLE[ROWS][-24] ),foo(( ( TABLE[mislead(-( 1 ) * Ygritte,-( betray(( -COLS )) ))][-1 - ( ROWS )] * COLS ) / y ),y,-y)),--1) * -COLS + TABLE[( y ) - ROWS][-y] + ( --bar(betray(-( ( dog ) ),TABLE[ROWS / betray(0.98,-0.76,-rule(-rule(-Arya,( -1 ),Hodor),-y)) * ROWS - dog * COLS - 1 * ( -0.9 )][COLS]),Stark,Jon) + protect(COLS,-86,-( rule(-rule()) )) - protect() ) ) / ( foo(protect(betray(-17) + TABLE[( 47 )][Hodor]),ROWS) )] ) )))){
	if(-Hodor){
	y += COLS;
	if(1){

} else {
	1
};
	Arya += Arya
} else {
	Hodor;
	if(( -460.42 )){
	if(-0.88){

}
} else {
	Sansa -= bar(0.05)
}
};
	Jon /= Stark / bar(0.82 / x,TABLE[TABLE[mislead(-dog / foo())][0.37]][--0.54],-( TABLE[destroy(ROWS)][protect()] ))
};
	if(ROWS){

};
	COLS
} else {
	Ygritte *= foo(x,-Arya * mislead(-betray(ROWS,rule(-1,y) - -( Jon )) / ( -1 ) * ( -( 1 ) / dog * protect() ),dog,dog));
	Sansa
}
};
	Arya -= Arya
};
	if(COLS){
	if(TABLE[---bar()][( -35 / rule(-( ROWS - ( -TABLE[-( rule(rule(-( -betray(-97,0.68) * COLS ),-TABLE[mislead(( rule() * Hodor ),TABLE[TABLE[-( ROWS )][ROWS]][Sansa])][-0.08 / -1])) + -TABLE[--0.41][Ygritte] * Sansa )][bar(COLS)] ) )) )]){
	-( 0.9 / destroy(-0.94,( ( ROWS ) )) );
	-mislead(72,( dog ) / mislead(93)) + -rule(TABLE[TABLE[( -bar(Stark,ROWS) )][ROWS + ( Stark / destroy(-dog,-Arya * COLS) )] + -Arya / mislead(mislead(--91,TABLE[bar(ROWS / -0.3,( -COLS ))][( bar(-bar(COLS,1)) )],-0.43) + -0.44) - Hodor][-0.46],1,-Jon + ( Jon ))
}
}
}
var Arya = Hodor
def rule(Stark,Jon){
	( -280.11 );
	( -85 )
}
def protect(){
	destroy(-20 - y - foo(destroy(betray(ROWS,0.23)),rule(-0.7,y)))
}
assert -71 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-foo()][k] {
	dog += TABLE[-( 52 )][Hodor / -Ygritte];
	88
}
assert 1 : "One can not simply parse himself"
def destroy(Stark,Hodor){

}
var x = rule(foo(),TABLE[mislead(COLS * dog,y)][COLS])
def TABLE[Stark][k] {
	Stark
}
def foo(Hodor,dog){
	( rule(( foo(bar(69) - --y,---Jon * rule(betray(39),betray(( --Stark / -0.47 ))) - --0.66 / ( -TABLE[Sansa][-destroy(COLS,( -destroy(ROWS,-( ROWS ) - 0.62) - betray(Ygritte - ( ( 0.32 ) )) )) - TABLE[-1][-COLS * ( COLS ) / 0.24]] )) - mislead(-1,-0.39,---1 + ROWS) ) + COLS / --84,-97,( --1 )) );
	Arya *= ( -mislead() - dog / COLS );
	Jon -= betray(-15)
}
def TABLE[protect()][j] {
	Jon *= Stark
}
assert ( -COLS * protect(Stark * ( 0.64 ) + ( 0.33 )) / 1 ) : "Fear cuts deeper than swords."
def TABLE[TABLE[-78][-ROWS + ---mislead()]][j] {
	Sansa /= TABLE[( y - -TABLE[mislead(( Hodor ) - TABLE[-protect(Ygritte * -betray(Hodor),Jon + COLS)][bar(-1,y,Arya)],protect(foo(betray(-5 + ( y * Hodor ),COLS,-0.52),ROWS,( bar(betray(( ROWS ) * -( -46 ),y)) )),0.75),bar(-bar(foo(bar(bar(-y,( -x + COLS ) - --1,( Ygritte * ---ROWS ))) + Arya)) + Arya,-COLS)) * mislead(--Ygritte,rule(mislead(--bar(( Stark ),ROWS,rule(dog + Hodor * -y,ROWS)),ROWS)) / ( 0.24 ) + mislead(x,--rule(-970.343)),-54)][--0.92] )][--510.7]
}
assert 750.718 + -foo(-840.45,-Stark - ROWS) * -ROWS : "Fear cuts deeper than swords."
def TABLE[-62][k] {

}
var Sansa = ROWS
def foo(Jon){
	Arya -= 50;
	if(80){
	Jon / Arya * mislead(( Jon )) * Jon * rule(ROWS);
	if(x){

}
}
}
assert TABLE[TABLE[COLS][Hodor]][x] : "Winter is coming"
var Ygritte = ROWS
assert foo(mislead()) : "Winter is coming"
def TABLE[-foo()][i] {
	if(( 30.285 + betray(( ( Stark + COLS ) ),-( COLS )) )){
	x
} else {
	Ygritte -= -( -0.72 ) / -0.17;
	if(( mislead() ) * 0.82 * -59){
	-91 * ( -y * y + --27 );
	Hodor *= ROWS
} else {
	if(-dog){
	Jon += Hodor - foo(0.86,dog);
	if(rule(x)){
	TABLE[21][( -destroy(-dog,( -Stark + betray(Hodor,TABLE[Arya][-750.3]) ) + ( TABLE[Arya][TABLE[( ( rule(( 830.96 / -y ),( ( foo(-0.88) ) )) ) )][foo(Sansa,TABLE[-bar(dog)][TABLE[-79][mislead()]])]] ) - Arya - COLS) * TABLE[Stark][TABLE[-0.74][-0.46 - -0.62]] - -Stark * mislead(Arya) * dog + betray(( 0.76 ),0.02) ) / Sansa - -TABLE[-0.16][mislead() / foo(dog - -0.41 + ( Jon ))] / mislead(TABLE[( COLS )][ROWS])]
};
	20.73
};
	mislead(( -180.4 ) + TABLE[COLS][dog] - Stark,--foo(( bar() )) / ( ( ( 1 * -x * -1 - ( ( destroy() - 0.07 / ROWS ) ) + -0.07 / y / dog ) ) ),rule(( ( -93 + ( 27 * ( 1 ) - betray(Jon) ) ) ))) - y * -( ( foo() ) )
};
	Jon += 31
};
	if(310.4){
	( COLS );
	x /= protect(x);
	betray(1)
} else {
	0.03
}
}
def TABLE[-0.98][k] {
	if(foo(COLS + mislead(0.19 / -180.75) / -y,mislead(x) * destroy(( TABLE[-TABLE[-0.63][Jon]][Ygritte] ),( bar(-COLS,-0.02,( Ygritte )) ) * 26),-1) - Hodor * -97 / ( Jon )){
	TABLE[( -0.83 )][( 0.81 )]
}
}
def foo(){

}
var Sansa = -1
var Arya = ( mislead(0.64,Arya,ROWS) )
assert ROWS : "What do we say to the Lord of Death?"
var Ygritte = -0.93
def TABLE[Jon][k] {
	x += ( ( Jon ) );
	COLS;
	x += mislead(Arya,mislead(( Sansa )),-( -0.69 )) + ( mislead(( -Stark - Stark ),ROWS) )
}
def protect(y){
	if(foo(1,Sansa + betray(x,-0.73 + ( ROWS ),-( --3 ) * -73 - -( ( TABLE[--0.06][( Jon )] ) ) * Ygritte * ROWS)) / -dog + Hodor){
	Sansa *= 0.23;
	Sansa -= x - TABLE[0.02 / Arya][( 1 )] - COLS
} else {
	if(Ygritte){
	y -= ( ROWS )
}
};
	if(Ygritte){
	ROWS;
	x *= Sansa
} else {
	y += -Hodor
}
}
var Stark = -foo()
def betray(Hodor,Arya){
	57;
	TABLE[protect(( 0.1 ),-1 + COLS)][TABLE[30][rule() / COLS]]
}
var Arya = -COLS
assert --( 0.77 ) : "Fear cuts deeper than swords."
def TABLE[protect(-0.07 + COLS,--foo(( COLS ),-0.11),COLS) + foo(betray(),( ( -dog ) ) + Jon)][i] {
	if(0.99){

}
}
var x = y
def TABLE[( foo() )][k] {
	if(-Hodor - Sansa){

} else {
	if(( x )){
	Hodor += -COLS;
	dog - x * -ROWS;
	dog
}
};
	if(-100){
	( COLS );
	COLS + dog
} else {
	Arya += ( -Arya - -780.01 * dog ) / 0.41;
	if(-1000.7){
	y /= betray(Hodor + protect(mislead() / ( ROWS ) + protect(--( COLS ),-1 + ROWS) / protect(-800.33) + ( Ygritte )),-0.66);
	COLS
}
};
	if(-foo(foo(-mislead(88)) * destroy(-Ygritte) / bar(TABLE[( COLS )][-foo(-950.74,Ygritte / 68 - protect(-protect(TABLE[-( -84 )][-1 * Ygritte],Jon) - -Jon * dog - COLS,0.38)) - -0.73],COLS,-660.96)) / ( -TABLE[ROWS][Hodor] )){
	-720.17
} else {
	if(( ( destroy(0.47,( ( ( -610.9644 ) ) ) * Stark * -540.4 + ROWS) ) ) / ---( ( -55 ) ) + COLS + -0.7){
	TABLE[( ( -1 + -1 ) )][-0.34 - Jon]
} else {
	y *= TABLE[y][destroy(Jon,50,COLS)]
};
	if(25){
	if(-0.27){
	-0.12;
	Sansa *= -0.7
};
	if(ROWS){
	if(ROWS){
	if(Stark){
	Hodor
} else {
	Sansa -= ( ( ( -( dog ) ) ) );
	Sansa -= -1;
	dog /= COLS
}
}
}
};
	protect(-TABLE[TABLE[TABLE[COLS][( ( rule() ) )] / -COLS][ROWS]][( mislead(49,-Sansa) )])
}
}
var Jon = -Jon
def TABLE[-21][k] {
	--COLS;
	if(--ROWS){
	-COLS;
	if(COLS){
	if(COLS){
	dog /= --bar();
	if(11){

} else {
	Jon -= ROWS;
	Jon -= Stark
}
} else {
	if(( 39 )){
	0.69
} else {
	if(-mislead(rule(betray(-dog),--12 * ( mislead(Hodor,ROWS + ROWS) )) - 0.61,Arya)){
	if(mislead(betray(( protect(y,ROWS) ),bar(0.5,-Sansa) + bar(-5 * -( rule(--0.67,( COLS ) * TABLE[---( -0.04 ) - TABLE[bar(( -foo() ),1) * -ROWS * ( mislead(TABLE[( Jon )][foo(dog)] * ROWS / dog,mislead(),( foo(--1 / ( ( ROWS ) / 49 ) * TABLE[foo(COLS - ROWS,destroy(),( -28 ))][-destroy(-1) * ---ROWS * ( ( ( -0.88 ) ) ) / -COLS] / -1) )) )][1 + -860.7015]][foo(COLS,x)],ROWS) ),ROWS,bar(-TABLE[ROWS][y]))),--ROWS + ( 830.774 ),ROWS * ( -destroy(bar(Arya,( ( ( Stark - ( ROWS ) ) ) )),y + -690.93) ))){
	COLS
} else {
	dog *= ( betray(mislead(),---1 / ( -0.19 )) - -61 )
}
} else {
	if(COLS + ( x )){
	if(-3){
	if(( ( 38 ) )){
	x
} else {
	if(-COLS){
	( 710.945 )
} else {
	if(protect(( Ygritte ))){
	Sansa /= 76
};
	if(( 0.93 )){

}
};
	Ygritte *= Hodor
};
	if(( Stark )){
	if(( mislead(mislead(Ygritte,-66),dog - foo(-0.66)) )){
	-( -COLS ) + -0.11
} else {
	dog *= Ygritte;
	ROWS;
	if(-4){
	if(TABLE[( ROWS )][--Arya / COLS]){
	( foo(ROWS,-850.76,-551) ) - y + betray(--COLS,betray());
	Stark *= ( ROWS + dog - ( -Sansa ) + rule() )
}
} else {
	Stark -= foo();
	Jon += COLS
}
};
	mislead(Arya,COLS);
	Jon *= 570.4
};
	Jon /= Stark
} else {

}
}
};
	if(Hodor){
	if(foo(bar())){

} else {
	Jon -= protect(Hodor,ROWS,630.9 * -290.353 / protect(mislead(( -TABLE[-0.7][( TABLE[dog][-mislead(ROWS / ( ( ( protect(1) ) ) ))] )] )) / Arya / --970.371 * --( mislead() ) + -720.99 + rule(TABLE[COLS][ROWS * destroy()],( rule(( -0.67 ),COLS) ) * 540.671 + Hodor)) - 0.99 + protect(foo(ROWS,( 1 ) + rule(TABLE[( mislead(-37,-0.38) )][-1],-COLS,TABLE[ROWS][destroy(35,56,destroy(( COLS )))] + ( ROWS )))));
	Jon += -foo(COLS / ( ( dog ) ))
}
} else {
	if(protect(--rule(-1,-710.771) + -TABLE[( --0.09 / bar(COLS * Hodor,Hodor,-95) )][COLS],( TABLE[TABLE[( Stark )][ROWS]][( -1 )] ))){
	if(ROWS){
	if(1){
	( ( ( Arya ) ) )
} else {
	-0.77;
	-( ( ( betray(mislead(),38,16 * 0.36) - TABLE[Stark][---TABLE[-0.93][TABLE[-0.01][-60]]] ) ) );
	if(--1){
	if(-460.96){
	--Jon / betray()
} else {
	Ygritte /= -92
};
	x *= protect(-66 - -COLS,-0.97);
	if(( -82 ) - ( -36 )){
	y -= protect();
	Ygritte *= protect(72,dog)
} else {
	Stark *= ROWS;
	if(( -( --1 ) / Hodor - x / TABLE[-240.0837 / 82][TABLE[( mislead(220.3317) )][40.89]] )){
	x *= --ROWS / ( 0.18 )
} else {
	if(-280.8071){
	-Jon
}
}
}
}
};
	Ygritte += ( -ROWS )
}
};
	Jon *= Hodor
}
}
};
	-140.5
}
}
}
def TABLE[( -COLS )][j] {
	if(-bar()){
	if(-destroy(-96,0.41)){
	if(rule(( ( COLS ) ),-ROWS,bar(--COLS,rule(ROWS)))){
	Sansa += --( protect(( -92 )) );
	Stark /= bar(( ( ROWS ) )) + rule()
} else {
	x /= Hodor + ( --mislead(bar(betray(0.64)),-TABLE[-80][-1]) - x );
	if(--0.5 + rule() - -dog){
	foo(y,TABLE[-( 0.22 ) - protect(protect(Ygritte,( x )) - -0.29 - destroy() / -530.109) * COLS - ( destroy(-270.018,TABLE[protect(y)][-( -( 1 ) ) + Arya] / ( -Arya ) - -280.6829 * mislead(-( 0.46 ) - Hodor) / ( foo(--foo(28),-rule()) )) )][-9],870.821);
	if(1){
	Sansa -= x;
	destroy(Ygritte);
	Stark *= Arya
} else {
	if(COLS){

};
	Hodor *= Hodor;
	if(mislead(-TABLE[( -( TABLE[destroy()][--1] ) )][-35])){

}
};
	x *= foo(Arya,--570.704,130.4687)
} else {
	( -( Sansa / 0.37 + TABLE[x][mislead(-betray(1,-0.59)) + 600.03 + -820.1 - --Sansa * betray()] ) );
	( COLS );
	0.99
}
}
};
	if(betray(( 1 ),TABLE[TABLE[destroy(TABLE[x][destroy(( rule(Stark) ))],ROWS,Ygritte)][betray(bar(--40 / ( dog ),mislead(Arya,-0.05,mislead(y / -Jon))),( -COLS ))]][Sansa],-TABLE[rule(destroy(-Stark / protect(mislead(dog,mislead()) / -Stark - -0.53 / -y - ( Stark ),bar(( -betray(( bar(( 0.92 - protect(-betray(-dog * ( ROWS ) - --( protect(dog,bar(( TABLE[-2][mislead()] )) * rule()) ) * 0.3 - destroy(foo(-1 / ---COLS - ( ( Hodor ) ) / -foo(ROWS,--bar(( ( foo(( Sansa )) ) ),COLS / -0.74,rule(( ( ( ROWS ) - 0.5 ) ),-( -1 - -TABLE[--46][( -( -Stark ) * ( Jon ) )] / mislead(( ( dog ) ) / ( COLS * ( 9 ) ) - betray(Jon),Jon) )) + ROWS) - --( ( --mislead(-x,0.5,protect(( --dog ),bar(bar(protect(-0.3) * --( ( dog ) ),Hodor,0.45),destroy()) * Jon)) + bar(( 0.07 + -66 / TABLE[-mislead(x)][ROWS] ),( Jon )) ) ) * TABLE[-38 - ( ( destroy(TABLE[Arya][( Sansa ) - COLS] - -betray(( ( -ROWS ) ),Hodor + -600.23)) ) )][-( ( ROWS ) - destroy(( ( -Ygritte ) + -68 )) )],( -0.67 )),foo(Jon,-rule(--0.71,TABLE[y - -( protect(( -79 )) )][-( TABLE[( ( -ROWS - bar(-0.4 - COLS,y) ) )][Jon] )]) * ( TABLE[-y][x] * ( COLS ) + -TABLE[Arya][COLS] ),protect(TABLE[---42 - Hodor][( bar(y,--700.51,-( -( ( Jon ) ) )) )],-70) / ROWS),foo(--destroy(foo(protect(-ROWS / ( COLS ))),protect(-0.57 + ( Stark ) * betray(( Stark ),1,-y) - ( 0.2 )),TABLE[( 1 )][93])))))) )) ) - x) ) * mislead() * betray(Ygritte,rule(foo(COLS,( -rule(destroy(),( bar(--foo(Ygritte,-15,COLS + Hodor)) ),-10.5 / rule(ROWS,foo(-0.82),Jon)) - mislead(-Arya,-x) ) * ROWS),( foo(---( -0.34 ) + -Stark) ))) + ( ( betray(ROWS) ) + --( ( 1 * ( betray() * --520.7238 ) ) ) - TABLE[1][Ygritte] ),TABLE[Jon][( ( -0.8 ) * destroy(dog) )],-ROWS / ( dog ) / COLS)),( y )))][-0.84 * -35 * ( -1 ) + Sansa - COLS])){
	if(Arya){

};
	if(mislead(-( -rule(TABLE[Jon][bar(mislead() / ( -0.72 ))]) ),( -ROWS ),-720.57)){
	( -Sansa );
	Jon *= 681
} else {
	( Hodor );
	x *= -betray(Jon - TABLE[( Hodor )][TABLE[x][-Stark]],-0.26,( destroy(-Jon) )) + ( ( -COLS ) )
}
}
} else {

}
}
def TABLE[-( COLS )][i] {
	if(( -protect() )){
	TABLE[( ROWS )][-( COLS ) - betray(-1,75,betray(-17,Sansa)) - ( -12 )];
	if(Ygritte){
	if(foo(-( -58 ))){
	Ygritte *= Hodor / COLS + TABLE[COLS][Hodor]
} else {
	if(destroy(rule(betray(--0.09)))){
	if(COLS){
	if(Stark){
	Ygritte += 1
} else {
	( ROWS );
	( TABLE[Sansa][COLS] );
	dog += dog - TABLE[Stark][rule(---38,betray(( Jon / Hodor )))]
}
} else {
	y += Arya
}
};
	if(-1){

} else {
	250.6813
};
	COLS
};
	if(( ( ( -ROWS ) ) )){

}
} else {

};
	y *= -( --COLS ) / destroy(-1 / -mislead())
}
}
assert ROWS : "Fear cuts deeper than swords."
assert protect(mislead(foo(),-protect(COLS,protect(TABLE[bar(destroy())][--0.51]))) - 0.81 * ROWS * Ygritte,-0.63) : "Fear cuts deeper than swords."
def TABLE[( betray() / foo(---23) )][k] {
	--ROWS
}
def betray(y,Ygritte){
	if(-18){
	y += --( mislead(-0.59) - ROWS );
	Sansa /= TABLE[-0.47][-580.3025]
}
}
def protect(x){
	if(-COLS / COLS){
	1;
	if(-Stark){
	dog -= ( -Ygritte );
	Arya -= Stark / ( destroy() );
	if(-mislead(-10 + -destroy(-TABLE[--( --48 )][Ygritte],-( ( -( -( -x / COLS * --60 * ( Arya ) - TABLE[-( foo(--1) * -( -14 ) ) + ( -( -210.765 ) )][( -32 )] - ( ( ( rule(ROWS) ) ) ) ) ) ) ),-( -ROWS ) * ROWS) / -84 / ( COLS * rule(( betray(-27,destroy(dog - ( TABLE[( destroy() )][TABLE[x][Jon]] - ROWS ),63)) - -1 )) ) - 0.67) / x){
	if(dog * ROWS * protect(-bar(ROWS,Stark))){
	if(destroy(( COLS ))){

}
} else {
	Sansa -= TABLE[-0.49 + Ygritte][Ygritte]
}
} else {
	-( --betray(( 0.75 ),Ygritte) );
	if(destroy(mislead(( x ) - 0.78 * ( TABLE[ROWS][-Hodor] )) - TABLE[TABLE[TABLE[foo(COLS)][Ygritte]][Jon]][88],-7 * mislead(TABLE[COLS][-600.613 + -( COLS )] / ROWS,( rule() ),-31)) * destroy(-0.04,( COLS / ( foo() + ROWS ) ))){
	TABLE[( ( TABLE[TABLE[-Hodor][-( -( -( -1 ) ) )] * TABLE[-0.97 - ROWS][--( -TABLE[COLS][ROWS] ) + TABLE[-940.1 + Stark - --9 - ( COLS )][Hodor + TABLE[mislead(0,-( 85 ) - y * betray(-( 1 ) + TABLE[-0.43][ROWS]))][foo(-ROWS + bar(ROWS,ROWS))]] * -140.188 / -betray(( --0.37 - ROWS + protect() - 1 )) - betray(( ---63 ),betray(--( COLS ),dog / mislead(COLS)))] * Hodor / -69][Ygritte] - TABLE[TABLE[Stark - Arya - 40][Jon]][-( Arya )] ) ) / -betray(( Jon ))][-( --COLS )]
}
}
};
	if(-TABLE[protect(0.25)][COLS]){
	if(ROWS){

}
} else {
	1
}
} else {
	Stark /= ROWS / COLS
};
	if(( ROWS ) + bar(ROWS / COLS)){

} else {
	if(-17){
	if(protect(80.25) - ( -69 )){

};
	Hodor *= ( Arya ) / foo()
};
	Jon /= 87
}
}
var dog = TABLE[-58][( Stark )] / ROWS + Stark - mislead(0.17)
var dog = 0.29
def foo(Hodor,Sansa){
	dog *= -0.06
}
assert destroy(COLS / ( foo(Hodor / betray(bar(--ROWS + rule(820.09) / Jon) / foo(( x ),TABLE[y][TABLE[ROWS][-protect(destroy(( Stark ),( mislead(COLS,x) )))]]) + Hodor),1,COLS - COLS) ) + -2) + -100 : "One can not simply parse himself"
assert destroy() : "What do we say to the Lord of Death?"
def protect(y){

}
def rule(Stark,Ygritte){

}
var x = 0.29
assert ( Hodor ) : "Nothing burns like the cold."
var Ygritte = ( x ) - -( x ) * Stark
var Hodor = -1 - Arya
assert ( foo() - -87 ) : "One can not simply parse himself"
var Hodor = -0.44 * -bar() - bar(mislead(--protect(dog),Jon),--betray(COLS) - mislead(-0.66,49),( Stark ))
var y = ( 250.7 + ( ( -( ROWS + bar(( 0.43 )) ) ) - betray() ) )
def TABLE[( dog )][k] {
	if(--0.7 * COLS * TABLE[-92][82]){
	59;
	-0.85
}
}
def TABLE[500.04 - ROWS][j] {
	ROWS;
	if(-bar(780.28,ROWS) + ( Jon + ( -destroy() ) )){
	if(-bar(y)){

}
}
}
var dog = x
def mislead(y){
	Arya
}
def TABLE[3 * -170.179][i] {

}
def rule(Jon,Stark,Stark){
	Ygritte;
	( -( 0.8 ) )
}
def rule(Stark,Sansa){
	if(( 76 )){
	( TABLE[( COLS )][TABLE[-Jon][570.2 - x]] );
	if(ROWS){
	x /= --rule(y,( ( -betray(foo(ROWS,Jon - TABLE[Sansa][mislead(--Hodor * y,-260.6 * 52 - ROWS)]),COLS) ) )) / ( -( ( ( -0.97 ) ) ) );
	-ROWS - -TABLE[ROWS][-0.16];
	dog /= ( x )
} else {
	Stark
};
	if(-( mislead(-85,Jon,Ygritte) / -Arya )){
	COLS;
	if(Hodor){
	Jon += 0.2;
	Ygritte *= ( ( COLS ) + -45 ) * -24
} else {
	x += -dog
}
} else {

}
}
}
def TABLE[-foo(-63,-49 / ( TABLE[-Jon / -( -( -bar() ) )][( bar(betray(Hodor,( x )) / TABLE[-0.56][ROWS]) )] / ( --0.59 ) ))][i] {
	y;
	Arya += -TABLE[destroy(( 60.2082 ) * ROWS,mislead(COLS),-dog)][ROWS]
}
def TABLE[betray(COLS)][k] {
	if(ROWS){

};
	if(10){
	--1;
	if(-1){
	-1;
	if(5){

};
	if(-Arya){
	if(Stark){
	if(ROWS){

} else {
	if(--y){
	y /= destroy(COLS,ROWS,( -COLS * COLS ))
} else {
	( COLS )
}
};
	if(( COLS )){
	if(--mislead(foo(-Hodor + TABLE[TABLE[1][COLS]][( TABLE[-90][protect(-1 / ( COLS ),95 + -130.9027,( Sansa ))] + Jon ) / ( -rule(COLS,( y ) / 970.1,( 41 )) ) - Ygritte])) + -rule(betray(COLS),COLS)){
	if(Arya){
	if(-( betray(55,ROWS,destroy(( -58 )) + ( protect(450.186,Ygritte) )) * 0.37 )){
	x /= ( --mislead(x + -rule(mislead(( -1 ),TABLE[--y][-foo()]),foo()),-Stark,Stark) );
	if(( TABLE[foo(1,x,( 0.9 ) / -1)][( ( -0.95 ) ) + -( foo(TABLE[( ( -38 ) )][foo() / -77],bar(--foo(-460.69 - rule(( Sansa )),ROWS) * ROWS / ROWS - ( bar() ))) ) - ROWS] + -( Jon * mislead(protect(ROWS,1),mislead(y)) + ( TABLE[( mislead(rule(),mislead(destroy(-Hodor),-bar(mislead(--0.69 * bar(-0.32,-1,( 0.15 )) + protect(destroy())),0.12,-100.596),rule(( ROWS / protect(Hodor,mislead() / -0.64,-0.22) ),Hodor,0.69) / 0.6)) / ( 74 ) )][( Stark )] ) + -31 ) * Stark )){
	if(( 0.95 )){
	dog += --bar(( Sansa + bar(-( TABLE[protect(Sansa,Arya)][COLS] ),-0.71) ));
	Sansa -= betray(-COLS,TABLE[-Sansa][protect(( COLS ),-1) * 0.04],dog)
};
	if(COLS){
	if(-98){

} else {
	if(Ygritte){

};
	if(bar(0)){
	Hodor -= -3
}
}
} else {
	( 0.91 );
	COLS;
	Jon -= -0.56
}
} else {
	Jon -= COLS;
	0.92
};
	if(COLS){
	Sansa += ( ( COLS / -protect() ) )
}
} else {
	if(( protect() )){
	Stark += ROWS
} else {
	if(rule(ROWS,-54,TABLE[-betray(-COLS,790.7,COLS / ( ROWS / -45 )) + ( COLS )][destroy(( 0.37 * Sansa - dog ),( ( 0.82 ) ),( 66 ))])){
	-( destroy() ) * -dog;
	if(foo(( -COLS ))){
	if(Jon * -1){
	if(( ROWS )){
	Hodor *= Ygritte
} else {
	y *= -dog * COLS
};
	protect(Ygritte - ( ( COLS + ( rule(dog + -27,( ( bar(Jon,-( -ROWS * -Arya * -( -1 ) ) - x / Jon) ) + ( 820.51 ) ),-y) * mislead(betray(-x - COLS,-310.79,Ygritte)) + y ) ) ) - COLS,rule(dog,mislead(destroy(foo(Stark))),-y)) * ROWS
} else {
	x += TABLE[-641][( dog )] - Jon
}
} else {
	dog -= Sansa
};
	if(foo(-TABLE[Ygritte][rule(Arya)] - ROWS)){

} else {

}
} else {
	-mislead(COLS) / ROWS;
	( 33 - ( rule(-betray(),bar(rule(ROWS,-22) + betray(-720.9,Hodor,Arya / foo(Stark)) * ( ( -0.48 ) + rule(TABLE[( Ygritte )][-0.31],61,( ROWS )) ))) ) - Sansa )
}
};
	Stark /= TABLE[( 0.66 ) - --( x )][TABLE[--x][-0.43]]
};
	if(rule(rule(0.9))){
	( bar(-0.75) + ---1 ) / ( COLS / ---foo(--90 / x,-2) ) / 0.51 / rule(( -ROWS * mislead(bar(dog,( protect(betray() - ROWS) ) - -mislead(TABLE[0.29 - y / ( Arya )][destroy(dog,--66,Arya) / Ygritte])),59) + ( 90 ) + ( ROWS ) ),foo(destroy(Hodor,( Ygritte * ( ( -0.24 ) ) )))) + TABLE[-( ( ( -TABLE[-COLS - -81 * -60][-TABLE[0.67][foo(( -64 ),-82,TABLE[( ROWS )][---TABLE[rule(( --( betray() ) + 28 ),ROWS,bar(0.81,mislead(( Hodor )))) - ( -360.73 ) + -Arya][Hodor] - protect(( ( 0.24 ) ),-81,Arya) * -16 + 3])]] + TABLE[1][41] ) ) )][( COLS )];
	--0.59;
	if(--Arya + -bar(TABLE[COLS][Stark],y,( mislead() ))){
	if(-( -( mislead(bar(ROWS * -0.26,foo(rule(( 7 )),Hodor))) ) * foo() / -ROWS )){
	if(rule(-bar(-840.898,( 98 ),0.44 * COLS / dog))){
	Arya /= foo(-0.11,-TABLE[ROWS][1],foo(mislead(foo(ROWS,COLS,-COLS) * -0.07,rule(( ( protect(0.02 - COLS,COLS * Jon - --1 / ---0.13) ) ) - --1))))
} else {
	rule(74,--rule(),COLS) - -10.71
}
}
} else {

}
} else {
	-( ---880.843 )
}
} else {
	Ygritte += -1;
	if(--mislead(-84)){
	Jon /= 0.86 + foo();
	Hodor -= -0.15
} else {
	if(ROWS){
	if(COLS){

}
};
	Jon /= ( ( ( foo(-Ygritte + dog + -TABLE[Stark][-destroy(COLS,( TABLE[betray(-betray(( -Stark / --1 ),foo(rule(( ---83 - TABLE[dog][y] ),COLS,39)) * -0.87 - ROWS))][-betray(bar(protect(),( COLS )),( ( -70 ) / foo() ),-0.52)] ))]) ) ) )
}
};
	Stark -= Stark
};
	if(410.8){
	if(y){
	y /= -protect(COLS,Sansa);
	( 0.03 );
	if(foo(TABLE[TABLE[Stark][foo(bar(),Stark)]][TABLE[-710.9][betray(foo() / ---210.342,Sansa) - ROWS / COLS + -85]])){
	-ROWS;
	x *= ( destroy() + Ygritte );
	if(COLS * -690.8){
	if(COLS){
	dog
}
}
} else {
	if(mislead()){
	if(betray(-foo(COLS))){
	Hodor *= ( protect(-COLS * ( y ),rule(betray(-( mislead(rule(1,( COLS )),-0.13) )),62,dog) / x) );
	Arya += TABLE[-1][ROWS]
} else {
	if(( --0.86 + mislead(-1 * ROWS) )){
	if(Hodor - --970.83){
	if(( -ROWS ) / Stark / ROWS){

} else {
	if(-TABLE[Sansa][Hodor] + dog){

}
};
	if(0.75){
	Stark -= ( ( Hodor + 0.79 ) )
} else {

}
};
	if(-y){
	if(( 320.735 ) + destroy()){
	if(Ygritte){
	Arya -= dog + dog * ( ( 830.21 + dog ) );
	-0.51
} else {
	Hodor -= mislead()
};
	if(mislead(bar() / Ygritte / ( Sansa ),( -Hodor ),x)){
	if(1){
	if(Stark){
	Jon -= -mislead(bar());
	if(-62){
	if(( destroy(( x ),Hodor) )){
	if(-rule(-protect(destroy(COLS),-COLS),( -TABLE[Hodor][-( destroy(TABLE[( -590.722 )][TABLE[Arya][-x]],260.9) + -400.324 )] ),-COLS)){
	Ygritte /= -0.2
};
	Ygritte /= bar(-COLS);
	x -= betray()
} else {

}
}
} else {
	y
}
};
	x;
	if(COLS){
	mislead(77 - Sansa,( -TABLE[-destroy(--26,COLS)][740.083] ));
	if(34){
	-15
}
}
} else {
	destroy(dog * COLS) + COLS * Arya;
	x;
	Sansa += TABLE[-( ( ROWS / ( ROWS ) ) )][TABLE[betray(( ( 550.81 - --y / --20.244 / ROWS - COLS / ROWS - ( TABLE[COLS - betray()][--750.821] - mislead(x / --bar(( ( --1 ) )) - Jon,Hodor) ) ) ),mislead(Jon,rule(TABLE[---0.22 + 840.09 / destroy(-dog,Arya)][Sansa],COLS),COLS))][-1]]
}
} else {
	( ( 0 ) )
}
}
};
	Ygritte -= ROWS;
	Hodor *= -( foo(-( -COLS )) )
};
	if(TABLE[---560.93 * ( ( 0.46 ) ) - Stark / Jon][0.32]){
	Hodor *= -0.76;
	Ygritte -= x
} else {
	mislead(ROWS,x,( -0.63 ));
	if(( Sansa )){
	if(-destroy(COLS)){
	-29
}
} else {
	Arya += --0.65;
	Stark += -( bar(-( 1 ),protect(rule(Jon),-TABLE[( ( destroy(y,COLS) ) )][-78],betray(ROWS,-destroy(betray(rule(-protect(Sansa,COLS),TABLE[( ( destroy() - TABLE[x / -( COLS )][bar(COLS)] ) )][rule(--0.28 * dog * bar(-59,destroy(Arya),-0.95) - 38 + Arya,Jon - destroy(Arya,-40))] / --630.314),ROWS)),-ROWS * protect(--COLS,Sansa))),rule(-betray(Stark,COLS),foo(( -TABLE[-1 - --mislead(Arya,( -44 ))][betray(-( COLS ))] ),( -y * --4 )),x) - -340.117 * -1 + x) ) + mislead(Ygritte,Arya + -Ygritte)
};
	if(mislead(foo(COLS))){
	ROWS
} else {
	if(betray(-TABLE[-0.69 / ( y )][rule(x,COLS)] - -Arya / COLS)){

}
}
}
} else {

}
}
} else {
	if(-betray(-85,-Hodor)){
	if(-Arya){
	if(( COLS ) - ( TABLE[foo(( ( TABLE[( mislead(--rule(bar(( ROWS )))) )][mislead(TABLE[-destroy(TABLE[foo()][( y )],-57) / ( COLS ) / rule(COLS) + ROWS][dog - 74])] ) * ( ( -Arya ) ) ),-790.61)][ROWS] )){
	Stark /= protect()
} else {
	if(( rule(COLS) )){
	--ROWS
} else {
	if(( COLS )){
	COLS - -ROWS * -foo(Arya,( Sansa ),( rule(-( -76 )) )) - Ygritte;
	Arya += ( betray(COLS / ROWS + -150.75 + dog / ( Ygritte / Jon ),protect(1),-0.52) ) / Arya
} else {
	Ygritte -= -0.27;
	x /= rule(-54,-( protect() ),ROWS)
};
	Ygritte *= ( --800.459 ) * COLS
}
};
	ROWS;
	Hodor -= betray(-0.42)
};
	( ( Arya ) ) / Arya
} else {

};
	Stark / protect(-730.48)
};
	x += -Sansa;
	if(( -0.97 )){
	y;
	if(COLS){
	if(Hodor){
	if(protect(ROWS * -24)){
	Ygritte -= betray(( TABLE[-( ( ( Jon / betray() + dog ) ) )][-0.12] ),-520.235,-TABLE[-( -230.5005 )][ROWS])
};
	y /= ( -dog )
};
	Jon *= -55;
	--TABLE[ROWS + ( dog ) - -x][COLS]
} else {
	if(( --32 )){
	Stark / protect(40) + rule(x,COLS,TABLE[destroy(70.5,x / bar(--38 + ( ( Hodor ) ) * -betray(ROWS,( 1 ) + -1,-550.9) - -( COLS ) - rule() / ( -COLS )))][-Ygritte * bar(protect(destroy(( ROWS ),-bar(-ROWS))))])
} else {
	Ygritte += -0.7;
	if(-77){
	if(---y){
	if(( ROWS ) - destroy(-x,TABLE[mislead(foo(COLS)) - -( -y ) / ( betray(( foo(betray(COLS),-TABLE[ROWS][71],dog) + ( -460.3908 ) - mislead() )) ) / Jon + -bar(--50) / TABLE[( ( -( COLS - 0.43 ) ) )][TABLE[Ygritte][TABLE[( TABLE[( Arya )][mislead(ROWS,Hodor / rule(destroy(ROWS,ROWS),---( COLS )))] )][--0.37]]] * ( betray(betray(-( --y )),TABLE[COLS][-( foo(( ( -x ) - -Sansa * destroy(rule()) )) )],( ( Hodor ) )) ) + Sansa - -( TABLE[betray(-610.722 - TABLE[-Ygritte][ROWS])][COLS] ) * --56][0.36 - ( --580.92 )])){
	if(-Sansa){
	Jon *= foo(bar(),( -12 ));
	if(--0.38 / 0.47 / 0.06 * 1 - ( -0.12 )){
	Stark /= Ygritte
}
}
}
} else {
	x *= ROWS
};
	-420.5158
} else {
	if(( foo(dog,COLS) )){
	Ygritte += betray(TABLE[-96][TABLE[( 980.5 )][ROWS + --( 0.67 ) / ROWS + mislead(( --rule(Ygritte * x + --Jon) * 590.4 ))] - ( betray(( rule(TABLE[foo(foo(--0.14,rule(y,dog / ROWS) * -36),-0.58,( 0.27 ))][y],TABLE[protect(destroy(ROWS),0.63,( -0.13 - Jon ))][-( y ) + -foo(COLS,-880.3 - -( destroy(mislead(ROWS),COLS) ) / Ygritte + ( ( ROWS ) ) + y - ( bar(COLS) - rule(COLS / ( bar(TABLE[bar(( ( -( ROWS ) ) ))][COLS]) ),Arya,ROWS) * ( --( destroy() ) + -24 ) - -Ygritte * -40 * rule(COLS,ROWS) - ( -x ) + ROWS ))],-0.84) ),foo(--420.14,( ( -mislead(-85,betray()) ) ),bar(TABLE[TABLE[protect(86)][Stark]][1]))) )],4)
}
}
};
	Arya -= -0.82 * ( 55 )
};
	( Stark / -betray(( betray(dog,ROWS) ),-ROWS) / 0.79 / ( Arya ) )
} else {
	if(--1){
	Ygritte -= foo(COLS,--0.86)
};
	( ( rule(-0.36,430.36) ) )
}
};
	if(-0.75){
	Sansa *= -destroy(ROWS,( -0.82 - -570.32 ),TABLE[rule(COLS)][830.819]);
	x
}
}
}
}
} else {
	if(( ROWS )){
	if(-65){
	( betray(-Ygritte * -99,-910.1187,rule()) )
} else {
	Arya /= --TABLE[460.82][COLS] / -10.58
};
	Ygritte /= COLS
};
	if(-530.75){

};
	Sansa += ( Stark )
}
} else {
	if(Stark + COLS){

};
	-( -0.42 - y )
}
}
def destroy(Sansa,Stark,Sansa){
	TABLE[( ( betray(COLS,TABLE[-0.99][mislead()]) ) ) / destroy(x,Jon) / Sansa + foo(TABLE[dog][-300.81])][Sansa];
	if(-TABLE[90][COLS] - ( -( -90.01 ) )){
	Ygritte += --1 - ( -( Ygritte ) );
	if(( mislead(Sansa) )){
	Sansa /= 93;
	Ygritte += ( mislead() ) - ( -foo() )
}
} else {

}
}
def mislead(Arya,Ygritte){

}
var Ygritte = ---0.71 + COLS
assert x * TABLE[-150.2][-foo(-Jon)] : "Winter is coming"
var Hodor = ROWS
assert Hodor : "What do we say to the Lord of Death?"
var Hodor = -0.07
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[ROWS][k] {

}
def TABLE[Arya][k] {
	if(Arya){
	( --0.57 );
	Ygritte -= bar() + foo();
	Ygritte -= ( 14 )
};
	if(( foo(-( 1 ) * dog) )){
	Sansa /= rule(( -ROWS * Sansa ))
}
}
var Sansa = -( Arya )
def TABLE[0.53 - -COLS / ROWS * -93][i] {
	-77
}
def mislead(dog,Ygritte,Arya){
	( TABLE[( COLS + Arya )][Stark] * -COLS * ( -1 ) );
	if(bar(y / Arya,1)){
	if(( TABLE[-foo(--( --( TABLE[Arya][-730.64] ) ))][-foo(y,x,betray(ROWS,-COLS * 0.23)) - -( ROWS )] )){
	if(( TABLE[900.2449][( ROWS )] )){
	Jon /= ( -91 );
	if(Ygritte){
	( COLS );
	y += Hodor
};
	Jon -= destroy(TABLE[-TABLE[24][Stark]][Stark]) * ( TABLE[--foo()][( -COLS )] )
}
};
	Ygritte /= --rule()
} else {
	Ygritte += 10;
	x;
	Ygritte -= 1
}
}
assert ( ROWS ) : "Fear cuts deeper than swords."
def protect(Arya,x){
	if(1 - TABLE[TABLE[-Arya][-TABLE[( destroy(-( bar(bar(ROWS,-foo(ROWS) + bar(rule(x,destroy(Ygritte * -1 - ( ( -Sansa / Stark ) ) - ( ( Jon ) )))),foo(-0.74,--dog) - -Hodor)) ) + -600.715,140.57 - COLS) - ( TABLE[( Sansa ) * COLS][ROWS] ) + -0.19 )][betray()]]][( ( mislead() ) )]){
	y /= -TABLE[Arya][destroy(protect(ROWS,y,( 95 )),protect(x - COLS))] - ( ( ROWS ) / dog ) - --y
} else {
	( -0.24 );
	Ygritte *= Arya * Ygritte / -TABLE[( ROWS )][-51 - -0.96] - ( -Arya )
};
	-43
}
def TABLE[COLS][i] {
	dog += -1
}
def destroy(y){
	Arya *= -1
}
def TABLE[570.02][k] {

}
assert destroy() : "Nothing burns like the cold."
var dog = --1
def TABLE[dog * -0.25][j] {
	ROWS;
	if(16){
	mislead(betray(Sansa,COLS + ( --0.44 ) - ( --0.46 )),x,-0.78)
}
}
var x = ( -0.68 )
assert bar() : "Winter is coming"
def TABLE[--dog][i] {
	x *= ( protect(COLS,37,-750.137) / Arya * 0.15 );
	if(TABLE[-Sansa][-0.43]){
	COLS
} else {
	Arya /= -betray(-destroy());
	protect(-71 / -protect() / Ygritte,Arya)
};
	-ROWS
}
def protect(Arya,Jon){
	Jon += ( -0.92 / foo() ) + ROWS;
	if(( -ROWS )){
	x -= ( -Sansa ) + ROWS + COLS
};
	( destroy(( COLS )) )
}
assert ( -84 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( ROWS ) : "Winter is coming"
def destroy(y,Arya){

}
var Hodor = ( COLS )
def protect(Stark,Jon,Arya){
	Arya /= ( -foo() / Ygritte / ( destroy(TABLE[1][Jon],--0.79) ) + ROWS * --Jon )
}
def TABLE[-y][j] {
	0.31;
	( rule(--631) + -1 );
	TABLE[-ROWS][( Arya / foo(foo(-0.31,protect(ROWS),bar(( TABLE[( ( rule(--bar(Arya)) ) )][--55] ),ROWS,COLS)),( bar(protect(-53),rule()) + 0.06 )) )]
}
def mislead(Stark){

}
def destroy(y){
	mislead(--1 + Stark)
}
assert Jon * foo(-1,x) : "One can not simply parse himself"
var x = ( ---bar(x,( protect(Sansa) ),( -bar(Stark) )) * -0.35 / 0.23 )
def TABLE[foo()][i] {
	470.1;
	if(-0.52){
	-Arya
} else {
	bar(0.09) / -x * destroy(ROWS,( destroy(foo(Hodor)) ));
	if(COLS){
	mislead(--foo(),COLS)
} else {
	Arya += -Hodor;
	( -COLS );
	Sansa -= dog
}
}
}
def TABLE[ROWS][j] {
	dog /= ( ( TABLE[-mislead(TABLE[-( TABLE[-0.5][-( foo(-0.82,destroy(TABLE[Ygritte][TABLE[rule(rule(69,Jon),1)][( -0.54 + bar() )]] - y * --990.67 - Ygritte),--47) )] )][-Arya],Sansa) + COLS][x] ) )
}
assert ( dog ) : "Fear cuts deeper than swords."
def protect(Hodor,y,x){

}
assert Sansa : "Winter is coming"
def TABLE[ROWS][i] {
	dog -= -TABLE[( ( Sansa * destroy(Ygritte) * bar(Sansa,920.25) ) )][-( 18 ) * -34] - -Ygritte * y
}
var x = -dog
def betray(Ygritte){

}
def TABLE[( bar(COLS,( COLS )) )][j] {
	if(( 1 )){
	if(-rule(32 + Hodor)){

} else {
	x - -( rule(TABLE[TABLE[Arya][( rule() - COLS + ( Arya ) )]][( -39 ) - ( y * foo(rule(mislead(1,betray(TABLE[Stark + 910.616 + -1][-23] - y,( ROWS ))),rule()),( 640.555 )) / -2 )],rule(43,--0.84)) )
};
	if(--0.86){
	if(( rule(-41 * y,ROWS - dog,x) - betray(( -42 )) )){
	if(destroy(( COLS )) / protect() - -TABLE[TABLE[betray(( TABLE[( bar(Sansa,76) )][Arya] ),-( -( -ROWS ) + -destroy(x) ) * ( TABLE[( ( 99 ) ) * ( Hodor )][-60.59] ))][-72] - --( ROWS )][0]){
	ROWS;
	Arya += dog + foo(betray(Ygritte,-Sansa,( mislead(foo(870.7 + 50.08),Hodor) )),-90,mislead(-COLS * --( -betray(TABLE[1][-betray(-( betray(( dog )) ),-0.13 * Sansa,( betray(foo(foo(( ---foo(TABLE[ROWS][COLS] * -1,rule(Sansa,y),Jon) )) - -ROWS / COLS / -95 - 0.54 + mislead(protect(-( -830.13 ))),-( ( Jon * 0.51 ) ))) ))],Ygritte,Ygritte) ),--foo(-----1 + ( -destroy(( TABLE[0.78][0.85] )) ) * ( COLS )))) / Stark
} else {
	Jon -= -dog + ( -1 );
	0.64
}
} else {

}
} else {
	Ygritte *= ROWS;
	47 - dog;
	if(protect(dog)){
	ROWS
}
}
};
	Jon -= destroy()
}
var Ygritte = ( Jon ) / betray(-1 / protect(( -ROWS ) / COLS / TABLE[-34][( foo() )] + betray(protect(( COLS ),-foo()),--1),690.6),Jon) + 89
var y = 180.18
var dog = ( 25 + 1 )
def TABLE[foo(COLS,TABLE[( -y + ROWS )][-0.68],COLS)][k] {
	if(( mislead(-rule(TABLE[COLS + -mislead(protect(TABLE[Arya][COLS],COLS * destroy(--1) - TABLE[Stark][( protect(COLS + ROWS,-( ( dog ) )) / COLS )] + ( -( ---y + Jon ) ) - ( 86 )),-y * -0.29 / 550.4 - ( TABLE[-55 + destroy()][destroy(60) - ( -1 )] ))][Stark / betray()],( destroy(-Stark,TABLE[( TABLE[foo(( ( ---0.08 ) ))][TABLE[( y ) / foo(( -0.71 ),x,( -ROWS - -( x ) * ( -( betray(-34 / 740.5,Jon) ) ) ))][800.1831]] ) / ( rule(-33) * bar(Arya) - -Jon ) - destroy()][--0.89] + Stark - mislead(14,0.93,betray(--0.3)),1) ),ROWS)) )){
	if(-( ( TABLE[--destroy(bar(Hodor,Ygritte))][mislead()] ) )){
	Ygritte
};
	if(( COLS )){
	dog *= mislead()
} else {
	( -880.93 );
	if(( COLS )){
	if(-22){
	-1 * foo(260.6293,Jon) - Stark;
	if(( foo(TABLE[--COLS][( ROWS )],Ygritte,-25 / ( Arya )) )){
	if(TABLE[51][Hodor] - foo(( -0.77 ),Sansa)){
	ROWS
} else {

}
} else {
	Arya += ( Stark )
};
	COLS
};
	COLS;
	if(y){
	Stark /= 1;
	Sansa /= ( bar(Stark,-33) )
}
};
	mislead()
}
} else {
	dog /= ROWS;
	x /= 0.25 * ( x + -( rule(mislead(Arya),-0.61 - -( betray(COLS / COLS,mislead(ROWS,COLS),( ROWS )) ) * ROWS) ) ) - Jon
};
	dog -= ( COLS )
}
def foo(Arya,x){
	betray(-ROWS,( Ygritte ) * Hodor);
	Stark /= -mislead(ROWS,rule(( destroy(440.49 + ( ( ( -Hodor / --( protect(TABLE[betray(Hodor)][TABLE[( COLS )][Jon]] + -26,Sansa) + -1 + -69 ) ) ) )) ),Stark))
}
assert bar(COLS,Ygritte / 1) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(Stark,x){
	( rule(-61,9,Sansa) );
	if(TABLE[-mislead(0.18,Jon)][( ( TABLE[-( Arya * -1 ) / ( destroy(--ROWS,ROWS) )][ROWS] ) )] - ( ( ROWS ) )){

}
}
assert ( -0.61 ) : "One can not simply parse himself"
def rule(Jon,dog){
	x *= y;
	dog += ROWS;
	if(-1){
	if(ROWS){

} else {
	if(TABLE[-ROWS][TABLE[TABLE[-dog][COLS]][Sansa]]){

}
};
	if(foo() * COLS){
	bar(Arya);
	TABLE[-220.964][rule(750.804,destroy(-betray(Sansa),6) - Stark)] - TABLE[rule(Ygritte) / protect(-5,foo(-( ROWS )),--Jon)][---73]
}
} else {
	Arya *= -81 + --1
}
}
var dog = Hodor
var Ygritte = TABLE[-ROWS][Stark]
def TABLE[( y )][k] {
	x *= foo(y)
}
assert 0.62 : "Winter is coming"
assert foo(-11,-0.76) : "Winter is coming"
def destroy(Sansa,Hodor){
	destroy(Jon,-0.56 * rule(-TABLE[TABLE[48][( -Jon )]][ROWS] * Sansa / -( 220.6559 ) - ROWS + ( y ),--61 / Hodor * betray(destroy(Arya),-( -Stark )) - Stark,TABLE[54][foo(ROWS * ( y + foo(COLS / 0.84 + -( --22 ) - -53) + rule(-destroy(ROWS,-1,( Hodor )) / -1,bar(ROWS),( 1 )) ),Jon)]));
	Hodor += ( -Arya )
}
def protect(Hodor,Sansa){
	if(-Sansa){
	( mislead(-0.55 + -50.83 + ROWS,Arya) )
} else {
	betray(COLS,rule(( COLS ),( --TABLE[( Arya )][ROWS] + rule(-TABLE[-1][49],bar(-0.5)) ),COLS))
}
}
def TABLE[( ROWS ) - TABLE[( Sansa )][bar()] / rule()][k] {

}
def mislead(Hodor,y){
	if(dog - ( TABLE[COLS][protect(360.68,foo(-45),x)] )){
	Ygritte *= ROWS
} else {

};
	TABLE[destroy(ROWS) * foo(920.12)][-0.04];
	if(rule(Hodor,--88)){
	mislead(TABLE[( ROWS )][-54],mislead(ROWS,-betray(( -TABLE[ROWS][protect()] - bar(x,1,-( TABLE[29][x] )) )),COLS)) + -78;
	if(ROWS + ( protect(( ( Jon ) ),Stark,ROWS) )){
	if(250.88){
	-1
}
}
} else {
	Ygritte *= ( TABLE[mislead(foo(----( --mislead(( protect(( -( -bar() ) ),Hodor) )) ),( dog / 0.23 - foo() ),( protect() )),rule(46,Arya - Stark / -rule(-( ( 12 ) )) - rule()) / 98 - ( COLS ) + ( --0.92 / foo(Ygritte) ),COLS) / Arya / 0.75][Arya] )
}
}
def TABLE[betray(COLS)][i] {
	if(rule(y) - Ygritte){
	19
};
	( 410.1 )
}
assert Sansa : "Winter is coming"
def TABLE[destroy(-1,betray(betray(betray(( foo(( Sansa ),( -COLS ) + -1 / 1) ),Arya),TABLE[protect(510.22,-( mislead() ) - Hodor)][( ROWS )],COLS)),Stark)][j] {
	if(-0.86){
	if(Hodor * Jon){
	Arya += -1
} else {
	Jon *= ( foo() + 0.09 );
	--mislead(Ygritte,Ygritte) * ROWS / Ygritte
}
};
	if(TABLE[ROWS][-ROWS / COLS]){
	Sansa *= TABLE[betray(-mislead(-foo(-dog,destroy(mislead(Sansa),( 79 ))),betray(mislead(56 / bar(0.55,-ROWS)),Jon / -25) / ( -250.008 ),destroy(Ygritte)))][protect(-1)] * protect(-1);
	( -910.3 )
} else {
	if(( ( betray(-0.01 + -foo(9),--( COLS )) ) ) / destroy(COLS)){
	x += destroy(y - ( ROWS ) + ( foo(( x + x ),bar(-( -1 )),-COLS) ) + destroy(Sansa + Stark) * y / COLS * TABLE[foo(-protect(TABLE[ROWS][0.89]))][Stark - -TABLE[dog][-16]],TABLE[betray(-rule(( -( TABLE[mislead()][destroy() - TABLE[( -0.3 )][COLS] - betray(( Jon ),ROWS / Ygritte - betray(-x))] * betray(( protect(( -y ) / 1) )) + -0.61 ) + ( COLS ) ),mislead(-2,( bar(-0.9) - TABLE[-690.895][ROWS] ))),1)][ROWS]);
	x
} else {
	bar(-790.529,76,( 1 ))
};
	x += bar(foo(foo(-ROWS / ( x ) + Hodor,( mislead(protect(( --1 ) / COLS - ( -( TABLE[-1][( -15 )] ) - rule(-Hodor,rule(-80.849,99),mislead(( betray(betray(( dog ),( dog ))) + ( --destroy(TABLE[( -1 )][y],( ROWS ),destroy(( COLS ),0.92)) ) ))) ),( --13 + ( -1 ) / ( --( -ROWS ) ) ),( COLS )),Ygritte) / bar(ROWS,-0.96) + ( Sansa ) )),-bar(-391,-0.39) - TABLE[( COLS )][bar(-TABLE[-98][COLS])] - rule(TABLE[-0.04][( ( ( foo(ROWS) ) ) )],ROWS,destroy(270.735)),--mislead(TABLE[x][Stark] / Sansa + ( ( TABLE[-0.88][( y ) - ROWS] ) - 68 + -16 ))))
};
	y /= 1
}
def TABLE[bar(dog,( -49 ),1) - COLS][i] {
	if(-Stark){
	( ( Arya ) );
	-0.51
}
}
var Arya = ROWS
def foo(Stark,Sansa,dog){
	( mislead(210.1) )
}
var Stark = ROWS - ( ( 63 ) + 76 )
def TABLE[y][j] {
	if(bar(( Jon ),TABLE[mislead(-Ygritte)][TABLE[--55][-ROWS]])){

} else {

}
}
def TABLE[( mislead() )][k] {
	if(-Sansa){
	if(COLS){
	( protect(( ( betray(TABLE[( Sansa )][-Stark - ( --Jon )],COLS,mislead(-95)) ) )) ) * -1
};
	-( ( mislead(TABLE[TABLE[ROWS][dog]][ROWS / mislead(-TABLE[-TABLE[( ( 67 ) + 0.28 + TABLE[-betray(-92)][-Sansa] )][--0.17 * ROWS]][Sansa] - protect() / Arya / -COLS / ( Ygritte - -110.205 ) - 1 + mislead(TABLE[-29][-ROWS],rule(COLS,( -71 ))) + ( Stark ) + Hodor,COLS) * betray(TABLE[bar(Jon - ( protect(y - -ROWS,39,( Jon )) ) * y * Arya,-1 / ( -ROWS ),y)][-dog],betray(COLS),( -ROWS ))],-bar(-rule(-y,9),67),ROWS) ) );
	if(10.1){
	mislead(--80.2699,protect(rule(Ygritte),Arya))
}
}
}
def TABLE[bar(Ygritte,COLS)][j] {
	Arya += ( -( Jon ) )
}
var Jon = ( ( ( -1 ) ) - mislead(Sansa) )
var Sansa = --( 76 ) + ( COLS ) * mislead(--56 + -( Arya ) * betray() - ( betray(78 / -COLS,COLS,Jon) ) * protect(--betray(( ( protect(--( ( x ) )) ) * ( 0.08 ) )),COLS),-( --COLS ),foo(betray(dog,60,COLS),800.072))
def TABLE[COLS][k] {
	( -0.44 );
	Hodor /= ( x )
}
var Hodor = 88
def rule(){
	if(COLS){

} else {
	Ygritte;
	Stark;
	Stark += ROWS
};
	if(x){
	Ygritte += betray()
}
}
def TABLE[-( ROWS )][i] {
	-0.79;
	destroy(( COLS ),Hodor,dog)
}
var Jon = --destroy(ROWS - ( ( Arya ) ))
def TABLE[( protect(ROWS) )][i] {
	y /= ( Stark )
}
def TABLE[ROWS][i] {

}
assert Stark : "What do we say to the Lord of Death?"
def bar(Ygritte,Stark){
	300.5
}
var Hodor = --1
assert -rule(dog,TABLE[60.754][-82 * -37 * COLS]) * 0.89 + protect(-Jon + 30 + Ygritte,protect(rule(Ygritte,ROWS),Ygritte)) : "Nothing burns like the cold."
var x = Ygritte
def TABLE[destroy(protect(TABLE[( Sansa / ( COLS ) )][1 - protect(ROWS + y,68)] + ( Ygritte ) / Jon),( Hodor ))][k] {
	if(destroy(bar(0.65))){
	Ygritte += ROWS;
	COLS
}
}
assert Ygritte : "What do we say to the Lord of Death?"
var Arya = ROWS
assert mislead(( x ),( -TABLE[TABLE[( -0.69 )][-bar(-dog) / ( ROWS + --77 - --950.159 - betray(Jon,rule(Stark - TABLE[-Arya][Ygritte] * -ROWS,COLS - -( ROWS + -0.4 ),( ( -TABLE[( -0.82 )][foo(x,-51 - ( COLS * Hodor ) - Arya)] ) - Jon ))) ) / -TABLE[foo()][rule(Stark,( Arya ))]]][COLS] ),( 57 )) : "One can not simply parse himself"
def TABLE[-96][i] {
	if(93 * -52){
	Ygritte -= mislead(dog,bar(( -( 1 - 0.81 ) ),--75),-( betray(-970.288) ))
};
	Stark += Hodor * destroy(-Hodor * 0.24,Arya,-protect()) - -( ( destroy(--protect(Hodor,bar(-( ( ---bar(TABLE[750.465][-450.3933] / mislead(Jon + COLS,( ( -( --Stark ) - TABLE[betray(( ( Hodor * ( protect(Sansa,protect(( foo(( -720.91 )) ),97),---( ( mislead() ) )) ) ) ) * -0.74) / foo(( betray(destroy(),-21) + ( Stark ) / 1 + --Hodor - COLS )) - -1][( ( -foo(( ( Stark ) ),Jon,ROWS) ) / --destroy(ROWS,( Stark )) )] / ( mislead(0.84) ) ) ),TABLE[betray(-1 + -( Ygritte )) - ( 620.226 )][ROWS]),-1,-1) ) - -Stark * Stark )),( y ))) ) );
	--COLS - dog
}
assert Jon : "What do we say to the Lord of Death?"
def foo(){
	Sansa *= -1
}
assert --COLS : "One can not simply parse himself"
assert foo(( Stark ) + -( Jon ),-Jon * ( ( -960.21 - -0.1 ) ),destroy()) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(y,Stark,Arya){

}
def foo(Ygritte){
	mislead(TABLE[( --48 )][1 - x],( ( -0.77 ) )) + ( -COLS )
}
var Jon = destroy(COLS / -21,( ROWS + -TABLE[Ygritte][-24] / dog + TABLE[Arya][dog] ))
def TABLE[protect(dog)][i] {
	if(-0.39 + COLS){
	if(( -0.66 )){
	( -0.11 - --28 );
	dog += foo(foo(-bar()) / -5,COLS)
} else {
	540.86;
	Sansa -= 46 + ( TABLE[( TABLE[----y - -900.84 * -foo(betray(ROWS),( protect(( -destroy(( mislead(TABLE[-1][destroy(( -TABLE[y][destroy(-Ygritte,TABLE[( y )][destroy(COLS,54)])] ))],34,destroy(-TABLE[-bar(TABLE[-ROWS][---foo(48,( protect() )) + -27 * ( bar(-ROWS) )]) / destroy(TABLE[betray(-0.77,ROWS,foo(Jon,( protect(( ( 0.01 ) ),Sansa,bar(1,0.09)) )))][-betray(1,dog)]) - -130.125][x],Jon)) ) + ROWS) ) / ( -ROWS ),----1 / 0 + -95,( COLS )) * -96 ),mislead(TABLE[bar()][foo(1,TABLE[y][-Sansa])],mislead(290.4113,0.73)))][1] - 1 )][( -TABLE[TABLE[( ( ( mislead() ) ) )][destroy(-55,( COLS - mislead(Sansa) ))] * --0.15 * TABLE[-76][COLS] + ROWS - Ygritte][( -970.9111 )] )] );
	-betray(COLS,TABLE[rule(TABLE[destroy(( -mislead(bar(COLS - ( ( -ROWS ) ) * ( destroy(x,Arya) )) * 330.5 * betray(Ygritte,destroy(COLS,bar(Arya + ( dog ) - --61,-rule(ROWS,Arya,Jon)))),protect(-foo(( COLS )),ROWS) * TABLE[TABLE[-Hodor][-COLS]][COLS]) ),-( ( -Arya ) ) * -TABLE[COLS][-1] - --rule()) - destroy(--y * rule(COLS,( -( destroy(( dog ),( 1 ),bar(-420.4606,11,-0.38)) ) )),--( -foo(0,--( ( -bar(ROWS) ) )) ))][destroy(protect(--Ygritte),ROWS)],protect(TABLE[-( -160.39 )][--1] - ROWS),Sansa / TABLE[TABLE[( y / Jon )][---( -COLS ) * ( x * COLS + ( -22 ) )]][mislead(-0.72,-bar(dog,( Arya )) / ( Hodor ) / ( ( 1 + foo(0.58 - protect(---30.222,TABLE[0.42][-( ( -( COLS ) ) ) + -TABLE[-rule(-COLS,--0.41)][( Stark )] / destroy(-460.9 - ----( x ) - betray(TABLE[38][-Ygritte],Stark) + 500.3)] / y * ( -1 ),dog),( ( destroy(-580.3) ) )) / -( rule(74,-dog) ) ) ) - 1 * -1,-mislead(destroy(TABLE[-( TABLE[--100.61 + Stark][( ( ( Hodor ) ) )] )][71 - TABLE[--( ( ( -bar(0.26,( ---1 / -77 ),0.3) ) ) )][-43 + -55 + COLS] + -430.32],( foo(-COLS) ))) * -51) * COLS]) + -( protect() * ROWS )][( Ygritte ) - ( Arya )])
};
	if(COLS){

};
	dog -= ROWS / 580.8106 / ROWS
}
}
assert y : "One can not simply parse himself"
def destroy(){
	if(Arya){
	Jon -= -27
};
	Hodor
}
assert ( ( ( dog ) ) ) : "Winter is coming"
var dog = ROWS * 800.73
def foo(Sansa){
	protect(COLS,x,( -1 ))
}
def TABLE[COLS - COLS][j] {

}
def TABLE[---44][k] {
	-ROWS
}
var Hodor = 20.3
def TABLE[ROWS][i] {
	-0.14 - ( dog ) - ROWS;
	Jon /= -( Ygritte );
	( ( ( dog ) ) )
}
def TABLE[( Arya )][k] {
	if(ROWS + Stark * -1){
	ROWS
}
}
def mislead(Stark,Ygritte){

}
assert -ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Jon][i] {
	1
}
assert -0.14 : "What do we say to the Lord of Death?"
assert 0.45 : "Winter is coming"
var y = ( -150.5441 )
def TABLE[betray(1)][k] {
	if(bar(x,20,x)){

}
}
assert Sansa - 1 : "One can not simply parse himself"
def TABLE[( -ROWS )][j] {
	if(-Stark){
	Hodor;
	-( -bar() )
}
}
def foo(Hodor){
	-Jon;
	dog /= betray(( ( protect(0.98,-foo(destroy(Sansa) + y * -1,Hodor,( -5 )),Sansa / -mislead(bar()) / ( ROWS ) - ( 1 ) / ( ( -1 ) ) - ( -( TABLE[( TABLE[TABLE[-1][Hodor]][rule(protect(( -COLS )))] + -1 / TABLE[-betray()][( -1 )] * ( 310.75 ) - -TABLE[rule(( TABLE[protect(0.58) - Ygritte][COLS] ))][Arya] )][-0.45] ) )) ) )) - COLS;
	if(-COLS + dog * TABLE[ROWS][ROWS + --betray(foo(COLS,( Jon )) / protect(-COLS + y,bar(( ( 1 ) )) * COLS),x / -foo(rule(Jon,-( -72 ),-0.06),-1) / -1 + Jon)]){

}
}
def TABLE[Ygritte][k] {
	Ygritte /= -( -0.23 )
}
def TABLE[( -Jon )][i] {
	if(0.22){

};
	if(ROWS){

}
}
var x = -COLS
def TABLE[-83][k] {
	rule(-17,ROWS)
}
def foo(Sansa,dog,Arya){
	if(-Arya + Jon){
	y -= -( -0.29 );
	if(Jon){
	if(dog + COLS){
	( -1 );
	--0.5;
	if(bar(-0.13,betray(-75 * Ygritte,-Jon)) / rule(-0.4)){

}
};
	Ygritte *= --92;
	-destroy(destroy(--0.03 / -TABLE[ROWS][dog],betray(Sansa,0.41,( ( TABLE[ROWS][-0.01] ) ) * ( betray(0.52) ))),Stark,0.63 + ( mislead(foo(( y ),( ( bar(0.91 - ( ( TABLE[23 - ROWS][12] ) ),destroy(--TABLE[mislead(TABLE[ROWS][betray(ROWS)] * ( ( ROWS ) ))][-0.08] * -0.47),y) ) ),COLS + rule(-450.275,-rule(COLS,-0.98,-( COLS )))),Jon,Stark) ) / ROWS)
} else {
	ROWS
};
	mislead(mislead(( COLS ),39),( ROWS * mislead() ),COLS)
}
}
def destroy(Sansa){
	-betray(( -COLS ),x * -COLS) / ( ( Hodor ) )
}
def TABLE[( 0.69 * TABLE[COLS][ROWS] )][k] {
	y -= betray(ROWS,0.62) - -0.42 + ( 0.1 )
}
def TABLE[1][k] {

}
def bar(Hodor){
	if(dog){
	1;
	Hodor *= ( ( 100 ) );
	if(( rule(-62,69,-40) )){
	( ( Hodor ) / ( betray(-61) ) + 1000.72 - -ROWS )
}
};
	if(TABLE[( ( foo() ) )][-0.07]){
	TABLE[COLS][protect(-0.1 + mislead(destroy(x * foo(ROWS + -( Hodor ),rule(COLS))),bar(COLS,mislead(rule()),0.94)))];
	if(mislead(-710.754)){
	if(protect(TABLE[y][-0.54],-0.77)){
	COLS;
	Sansa /= -79
} else {

}
}
} else {
	TABLE[foo()][Arya];
	if(-( destroy(Ygritte,-62 * Sansa,Arya) )){
	Ygritte -= -0.97
} else {

};
	if(41){
	1;
	if(foo(y - destroy(-Hodor + Hodor,y) * 0.14,COLS)){
	-97;
	y -= 840.9;
	-0.84
};
	Hodor /= -1
}
}
}
def mislead(Hodor){
	if(0.31){
	-26 + dog;
	Jon += mislead(ROWS) * foo(( protect(-0.98,TABLE[( COLS )][dog]) ),--TABLE[-foo(( mislead(-0.65) ))][mislead(-97)])
}
}
assert COLS : "Fear cuts deeper than swords."
var Sansa = ( destroy(TABLE[-Jon / ROWS + dog][46],Arya,-11) )
var x = --rule(0.36,( -TABLE[( foo(TABLE[destroy(betray(-0.6,0.13),--COLS,COLS * -dog) + TABLE[y][ROWS]][--210.008],0.33 * -0.39) ) / y * ( -foo(-( 8 )) )][-1] ),680.136)
def TABLE[-ROWS + COLS - ( COLS )][k] {
	if(-0.62 * ( ( ( ( ( bar(44 - y,y) ) ) ) ) )){

};
	Stark
}
def TABLE[dog][j] {
	if(-( destroy(COLS,y - -ROWS) ) * Hodor - --10.027 - --0.38 * Ygritte){
	if(-foo(( Stark ))){
	if(TABLE[x][bar()]){

} else {
	if(Hodor){

} else {
	if(destroy()){

} else {
	Stark;
	Ygritte -= mislead()
};
	-( ( ( foo() ) ) ) * bar(dog) * ( ( TABLE[0.49][ROWS - -TABLE[ROWS][--( destroy(-370.33 - ROWS + ROWS,mislead(COLS,( Hodor )),TABLE[foo()][-COLS + ( ( 1 ) )]) )]] ) )
}
};
	if(0.38){

}
} else {
	if(Stark){
	Hodor *= mislead(-Arya + Ygritte * foo(( ( -( ( mislead(( -62 )) ) ) ) ),1));
	Jon += COLS
};
	if(COLS){
	Hodor += -( -0.74 );
	if(150.26){
	Ygritte /= -bar(( TABLE[Sansa][betray(mislead(0.6,ROWS),ROWS)] ))
} else {

}
}
};
	if(betray(0.25 * ( -0.98 ) + rule(--0.05),foo(mislead(mislead(( 1 ),rule() * betray(Arya)))))){
	if(ROWS){
	( 0.2 + --0.73 );
	Sansa /= destroy(Stark,-TABLE[0.75][0.46 / bar(TABLE[destroy(60.8797,destroy(-1,60.8),mislead(-530.25))][foo(rule())])]);
	mislead(foo()) * COLS
} else {
	( y );
	840.176 - ( ( Arya ) )
}
} else {

}
} else {
	if(ROWS){
	Stark;
	Sansa *= 0.82
} else {

};
	if(mislead(TABLE[TABLE[ROWS][-0.12]][bar(Arya,-betray(( --0.61 ),Jon,TABLE[Ygritte][TABLE[mislead() + bar(( ( ---( ROWS ) ) ),-( foo(( -bar() ),betray(Stark,foo(mislead(Hodor),( ( betray(-( COLS / destroy(x,Jon,--rule(COLS)) - TABLE[betray(-Ygritte,rule(-71),COLS)][1 - ( ( ROWS ) )] / -COLS ) * -86 * destroy(--Jon + rule(-( mislead(-15,betray(protect(COLS * COLS * -0.72,( dog )),0.41)) ),COLS,-( ( x ) )) * -Hodor,61,TABLE[-TABLE[Stark][380.27]][-0.72]),-( Hodor )) ) )) - ( Sansa ) * -( -83 - ( 68 ) - ( -TABLE[COLS][destroy(protect(-( ( TABLE[-dog * mislead()][TABLE[-TABLE[-bar(-betray(-COLS / ( -10 ) + foo(( -59 )),TABLE[( ( Sansa ) + ( ( ( -0.74 ) ) ) )][( ( -1 ) )],TABLE[mislead(( --mislead(-Hodor) / foo(--( betray(94 + dog,--COLS,mislead(betray(( -COLS ),-COLS))) )) ),Ygritte)][-1])) * ( ( ( ( Ygritte ) ) ) )][mislead(( ( -420.55 ) ),( ROWS ),dog)] / ( x )][foo(foo(),--( mislead(( ( foo(-0.53,-470.447) ) ),( Jon ),Stark) ))]] ) ),Stark),0.48 + TABLE[31][-TABLE[-( COLS )][( bar() )]],( ( COLS + ( -84 ) / x ) + TABLE[-Ygritte + ( -0.59 )][TABLE[-Ygritte][Hodor]] ))] ) / -ROWS * -0.69 ) + ( -ROWS + betray() ) * -Hodor * ( ( TABLE[Hodor][( -5 )] ) ),-0.83),destroy()) ),COLS)][-Arya]])) * ROWS])){
	Sansa += Arya;
	COLS
}
};
	Ygritte
}
var Jon = ( --0.47 ) - COLS
assert 1 : "What do we say to the Lord of Death?"
def TABLE[Arya][j] {
	if(TABLE[x][destroy(( COLS ),0.19,betray(x))]){
	if(-0.57){
	x /= TABLE[( rule(Sansa,ROWS,-foo(Stark + -92)) )][TABLE[Jon][( ----71 ) / -TABLE[protect(-17)][dog]] - TABLE[Ygritte][foo(COLS,--rule())]] - -64 - -Jon * 0.84
} else {
	Jon -= Ygritte;
	if(-1){
	if(-x){
	if(Sansa){
	if(-8){
	TABLE[COLS][TABLE[-rule(-destroy(),0.7)][( foo(Arya,TABLE[--0.03 * -1][dog] / -56 - ROWS,COLS) * 980.28 )]];
	Sansa *= dog;
	Hodor -= foo(-1,protect(-1,ROWS,( ROWS )))
};
	TABLE[-Jon][4]
};
	if(betray()){
	COLS;
	if(COLS){

}
} else {
	if(( ( Hodor ) )){
	( TABLE[( Ygritte )][Hodor] );
	betray(bar(x,--1 + COLS),( -Stark ),( ( TABLE[-ROWS][y] ) ) - ( -( ( TABLE[-990.6][Sansa] / -destroy(0.11,bar(dog)) ) ) ))
} else {

};
	dog *= ( destroy(-710.886) );
	TABLE[x][( rule() ) * ( TABLE[ROWS][0.34] )]
};
	-( --20.26 )
} else {

};
	if(-Hodor){
	Hodor += -( x )
} else {
	--0.55
}
}
}
};
	( ( -65 + -970.9 ) )
}
var Sansa = -mislead(( ROWS ),( rule(( ROWS ),y) ))
def destroy(Hodor,y){
	-TABLE[Ygritte][( 600.08 )]
}
var Jon = Arya
assert foo(( foo() )) : "What do we say to the Lord of Death?"
var Sansa = -1
def protect(Stark){
	Ygritte;
	x += ( protect(-480.314) ) - 40
}
def TABLE[0.89][i] {
	if(ROWS - -0.07 * -27){
	x
} else {
	if(betray(( betray(( ( betray(Jon) ) )) ) + Sansa / -76,( -COLS ),rule(COLS) / -0.93 / ( ( ROWS / COLS ) ))){
	if(TABLE[COLS][-rule(rule(foo()),24)]){

};
	86
} else {
	if(Jon){
	0.64
};
	y += rule(-destroy(destroy(destroy(-y,-Ygritte))))
};
	Stark /= ( protect(COLS,x,betray()) * --1 )
};
	Sansa -= 0.26
}
var x = ( -TABLE[16][( ( TABLE[( --0.5 )][( ( TABLE[Jon][bar(rule(rule(-betray(Ygritte,Stark)),-betray(( -ROWS - ROWS + mislead(rule(mislead(27),destroy(dog),--bar(( Stark ) - Hodor,bar(ROWS))),( ( rule(560.464) ) )) - -bar(( 1 )) * COLS )) + ( foo() - 1 - ( -( ROWS ) ) )),( --( ROWS ) ))] ) )] ) ) / -( ( dog ) + COLS )] + Stark )
var dog = rule()
def TABLE[TABLE[-( protect(y + TABLE[-99][60.817]) )][protect(-1,-7)]][k] {
	rule(-0.93);
	destroy(Ygritte / TABLE[-destroy(-destroy(Ygritte / -5 + 55,dog))][COLS],-31)
}
assert --0.74 : "Fear cuts deeper than swords."
def destroy(Jon){

}
def TABLE[Hodor][k] {

}
var y = --1
assert -42 : "One can not simply parse himself"
var Sansa = 0.23
def TABLE[rule(protect())][k] {
	destroy(( --destroy(-Stark - ( ( Stark * foo(Jon) / mislead(-1) / Stark ) ) + -COLS * -rule() + betray(--39 - Jon) / ROWS + --Jon / 0.07 - betray(( dog ),( x ) * TABLE[( mislead(--85) )][( Sansa )]),foo(( Jon ),0.04)) * ROWS ))
}
var Hodor = 1 - ( ROWS ) + Ygritte
var Arya = 300.5
def TABLE[rule()][k] {
	x += Stark;
	( foo(TABLE[COLS][protect(x)] - -30,--betray()) ) / dog
}
def TABLE[TABLE[Hodor][-Sansa]][j] {
	if(ROWS){
	if(-( ( -TABLE[-dog][TABLE[destroy(Arya,--0.69)][( rule() )]] ) )){
	dog += -mislead(-64,86) / bar(-( Arya ));
	if(( Hodor )){
	Hodor += betray(( --530.9 ),-y - -0.79 + -( bar(COLS - rule(-dog,( -0.04 )),( COLS ) - ( 71 ) - COLS + ( Sansa ),0.19) ) * -57,TABLE[rule()][--Ygritte] * 310.48 / -x) + -0.09;
	y += ( ( dog ) )
} else {

}
};
	if(-90){
	Ygritte -= -ROWS - 63 / 48;
	if(COLS){
	if(0.03){
	if(-( TABLE[dog][TABLE[COLS][TABLE[ROWS][destroy(bar(ROWS,COLS))]]] )){
	Hodor /= COLS;
	x /= 790.8441;
	if(( ( --Hodor ) )){
	dog /= ( -26 );
	Stark;
	Stark += COLS
}
}
};
	Ygritte -= TABLE[dog][-Arya] - --87
} else {
	( Ygritte ) + -protect(( COLS ),-0.84);
	mislead(( ROWS ),destroy(( TABLE[Arya][TABLE[Hodor][( -67 )] * Jon * TABLE[( destroy(TABLE[1][dog],ROWS,TABLE[ROWS][TABLE[-( 0.87 )][Jon]]) ) / -0.35 * -0.32][0.92] - -540.8055 + Stark] )),betray(Arya,-1) - -0.85)
}
} else {
	if(-y){
	if(( 1 )){
	( protect(dog) )
} else {

}
}
};
	bar(ROWS,x) / ( ROWS ) + -79 * TABLE[protect(-390.291,Sansa,-destroy(COLS) - ROWS + ( dog * -0.58 + betray() * foo(Ygritte * ROWS) ))][bar()]
} else {
	if(37){

};
	if(-x){
	if(900.48){
	destroy(( ( y ) ),betray());
	if(---( TABLE[-ROWS][-COLS] - ( 71 ) + 1 )){
	ROWS;
	Jon /= protect(Arya,x);
	if(3){
	Arya += dog - -560.358;
	Hodor += ( x )
} else {
	x -= betray(ROWS,87,destroy(bar(-620.59,-Ygritte)));
	Jon /= --10.8723
}
}
} else {
	if(-1){
	x /= -mislead(0.63,foo(Hodor,ROWS,COLS - ( x ))) / Arya;
	Stark /= 76
}
}
}
};
	Jon += -Hodor
}
assert Jon : "Winter is coming"
def TABLE[( COLS )][j] {
	COLS;
	TABLE[---mislead(( TABLE[-0.32][680.8] ),-Stark)][rule(( 0.37 ))]
}
var y = 0.53
def TABLE[y][j] {
	bar(ROWS)
}
def TABLE[( COLS )][k] {
	Hodor + COLS;
	if(-380.989){
	Jon *= ( y ) + x
}
}
def foo(Sansa){
	if(( ( betray(( ( Hodor ) - destroy(ROWS / Hodor + --( -mislead(--x) + ( --0.04 * -ROWS / x ) ) * ( COLS * bar(Hodor - -25,Stark) * ROWS - TABLE[--ROWS + ( TABLE[-16][betray(0.94,--foo(-48) + ROWS,ROWS)] ) + -TABLE[Jon][( mislead(0.41 * betray(),dog) )] / foo(foo(( COLS )),-27,rule(COLS,ROWS,ROWS / -250.8 + ( TABLE[-( 0.38 )][--480.4035] ) * -Hodor - Jon)) * betray(( TABLE[x][-( ( 87 ) )] ) - dog,( betray(( TABLE[0.73 / ( ---COLS )][Ygritte] ),ROWS,-( ROWS * x )) ))][--( -0.38 * -74 )] ),-( rule(dog,TABLE[-rule(( Hodor ),ROWS,Stark)][Hodor]) ),mislead(-610.4,dog,destroy(y))) / ( 57 ) + ( ( 0.61 ) ) )) ) )){

}
}
def TABLE[( COLS )][k] {
	( bar(-0.25,-y) );
	ROWS
}
def TABLE[-( COLS )][i] {
	x -= dog
}
assert -0.86 * ---1 * 94 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(Ygritte,dog){

}
var Arya = Jon
var Hodor = Ygritte
def TABLE[( ROWS )][i] {
	betray()
}
def rule(Jon,Stark,Hodor){
	Sansa *= protect(-( -0.38 ),COLS,-ROWS);
	if(-bar(--COLS)){

} else {

};
	if(ROWS + --94){
	Stark += COLS;
	if(Ygritte){
	protect(-rule(y) * TABLE[TABLE[Arya][foo(( Sansa ) / foo(Stark,dog))] - protect(mislead(TABLE[730.14][Sansa],--91,0.34))][-810.7] + 960.1 / ROWS,bar(( ( 0.45 ) ),dog)) * -TABLE[ROWS][0.07] / dog
} else {
	if(-( TABLE[Hodor][0.52] ) - 0.78){
	ROWS;
	Jon -= ROWS
};
	dog += 1 - TABLE[--0.23][-Stark] * -rule(( ( mislead() - ROWS ) ),-( Sansa ));
	ROWS
};
	Ygritte -= COLS
}
}
def rule(x){
	if(-0.95){
	if(-( ( bar(mislead(3,protect(ROWS,( dog ) + ( protect(-( COLS ),TABLE[( ROWS ) + ( ( protect(Sansa * ( rule() ),-0.88 / dog) ) * rule(foo(destroy(ROWS,-ROWS)),-230.04 - -0.49) )][-dog]) ),bar(45,-( Hodor + 0.29 ),Stark))),x) ) - ROWS )){
	if(y){

};
	if(TABLE[bar(Sansa * ( -( mislead(-370.15,y,TABLE[-1][Hodor]) ) ) - Stark,TABLE[22][protect()])][y]){
	if(-Hodor * Sansa){

} else {
	if(-1){
	if(COLS){
	if(-98){
	TABLE[-ROWS][mislead(( rule(Stark,foo(-0.03)) ))];
	-( bar(0.29,( -( bar(-( foo(dog) )) ) * TABLE[Arya - Stark][( Hodor ) - COLS] )) );
	if(COLS){
	ROWS + destroy(Jon,protect(COLS,ROWS));
	Stark += TABLE[-( -( x ) )][( TABLE[Sansa][destroy()] )];
	if(20.99){
	( 1 );
	1 / TABLE[destroy(-960.02)][COLS];
	Ygritte /= Sansa
}
} else {
	if(Arya){
	32;
	if(Sansa){
	( Stark );
	0.67;
	y *= -0.57 / -COLS * TABLE[-87][-( ROWS ) / foo(--dog + ROWS,46)]
};
	if(destroy(COLS)){
	Sansa *= TABLE[dog][ROWS];
	if(mislead()){
	if(0.65){
	if(betray(destroy(( COLS ) / bar(TABLE[betray(ROWS,TABLE[COLS][ROWS])][protect(-0.84)])))){

} else {
	Stark /= --( Stark ) + --rule() + COLS / TABLE[Jon][COLS];
	foo(( 1 ),rule(-43))
};
	x += -Ygritte
} else {
	if(1){

}
};
	if(( 89 ) + rule(-750.28,Jon)){
	if(COLS){
	if(Arya){
	if(( betray() )){
	if(--0.42){
	Arya *= COLS
}
} else {
	if(-ROWS){
	( -1 * -0.13 - 91 - ( 10 ) - -7 * -0.87 );
	Stark -= -betray(( destroy(-ROWS,Stark,( foo(TABLE[Arya * dog - ( -2 ) * ( x ) - protect(COLS,--( Arya ) + 1 + TABLE[( COLS )][-19])][-0.39],( -170.4508 )) )) ),TABLE[( ( TABLE[-23][-ROWS] ) + 0.25 )][ROWS],Jon)
}
}
} else {
	Sansa /= 0.13
};
	-0.83;
	Hodor *= bar(-( -31 ) + 8 - mislead(( rule() ),( -Stark ) + Stark * ( 0.99 ) / TABLE[-1][( -( destroy(TABLE[---y][x],ROWS) + y ) )])) * TABLE[betray(0.52,( -450.0449 * -mislead(( Stark ),x) ))][( TABLE[ROWS][TABLE[dog][mislead()] * COLS] )]
};
	bar(ROWS) - -0.12
}
};
	Ygritte -= -mislead(Stark)
} else {
	if(rule(rule(( TABLE[-72][ROWS * ROWS] ),protect(rule(-Stark,-TABLE[--Sansa][Sansa])),Sansa) / dog,( ( COLS ) ),dog) * COLS){
	if(-89){

};
	dog -= rule(( x ),12) + Ygritte * COLS;
	dog /= ( betray(690.663) )
} else {
	if(dog){
	y *= --ROWS / ( TABLE[19][( ROWS )] ) * -Sansa;
	if(Arya){
	if(TABLE[Arya - ( COLS ) + y][( destroy() )]){
	if(75){
	destroy(TABLE[TABLE[Arya][--COLS]][( -74 )],-20.36,-78);
	Stark += -y
};
	if(foo(bar())){

};
	destroy(-240.872,Jon)
};
	if(0.12){
	-( -1 ) * COLS;
	ROWS;
	if(Ygritte){
	Hodor -= bar(-mislead()) / ( bar(-bar(( x ),-1,-7),protect(97,140.092,y),mislead(Jon)) ) / 0.55 - -ROWS - mislead(destroy(),( Ygritte ))
}
} else {
	if(ROWS){

} else {
	y += betray(( -COLS ),COLS);
	mislead(-600.82)
}
};
	betray(ROWS,-protect(Ygritte) * -Ygritte)
}
}
}
}
} else {
	( betray(COLS) ) + destroy()
}
}
};
	if(-35){
	Stark /= y;
	Arya += -( 260.59 * TABLE[COLS][destroy()] * --( 74 ) / y - dog )
}
}
};
	if(protect()){
	( COLS / mislead(640.072,COLS / ROWS / 1 - ( ROWS ),Jon) * y )
}
};
	rule(-0.61,bar(rule(-0.1,( ( --Hodor ) ) / foo(( -85 ),-( protect(ROWS,protect(-0.88,-ROWS),COLS) )))))
} else {
	if(--0.48){
	y *= bar(y)
} else {
	if(x){
	y -= y;
	Stark /= TABLE[-910.6036][destroy(Ygritte,bar())]
} else {
	-TABLE[Stark][mislead(mislead(),--0.78 * destroy(-COLS,y,betray(-810.281,protect(( --0.41 * ( -ROWS ) ),bar(rule(COLS,-76)),-520.74 + 1))),Ygritte)];
	if(( -69 )){
	Sansa += 0.61
}
};
	x *= rule(Hodor)
};
	bar(foo(Hodor),Arya);
	Jon
};
	betray(rule())
};
	Hodor += 2
} else {
	if(( Ygritte ) + -ROWS){
	rule(y,Arya) / --( ---6 + Sansa ) + ROWS;
	Hodor
} else {
	x *= -( -( ( mislead(( ( foo() ) ),destroy(-93 / ( COLS ) * Ygritte)) ) ) );
	Jon *= destroy(Hodor,COLS)
}
}
}
assert Ygritte : "One can not simply parse himself"
assert TABLE[67 * -TABLE[--59][-97 / -( 65 + Hodor ) - foo(( rule(COLS,--( TABLE[--Ygritte][( 80 )] * --Sansa - -COLS ) * TABLE[-( Stark )][betray(Sansa,--0.57,Arya)] - Jon + ( COLS * ( foo(-x / ( COLS ),--foo(( ( Stark ) ))) ) )) ),-protect(-11,( -( ( x ) - 71 ) * ROWS )),bar(-COLS,dog)) * Sansa / 84] + Hodor][22] : "Fear cuts deeper than swords."
def destroy(y,Ygritte){
	Jon += mislead(-0.11 + -0.98);
	y /= ( TABLE[Jon][--( ( protect(TABLE[ROWS - -TABLE[protect(ROWS,TABLE[0.52][ROWS])][bar(( x + ROWS ),ROWS) - Arya + --Arya - -0.23 / y - protect(Jon,Sansa,mislead(-0.32)) / destroy(TABLE[-1][Ygritte],-x - -1 + ( Ygritte ),TABLE[ROWS][( ( Ygritte ) - ( Arya ) )])]][( -41 )],-320.106,( ( -670.27 ) )) ) )] )
}
def betray(Sansa,Hodor){
	x /= -78
}
def destroy(Hodor){

}
var y = ( -0.2 ) * ( x ) + -990.1 + rule(--ROWS,betray(COLS),protect())
var Ygritte = rule(Ygritte)
def TABLE[TABLE[TABLE[destroy(--TABLE[-mislead(( -mislead(11,rule(rule(ROWS,Ygritte))) - mislead(260.56) ),TABLE[( COLS )][940.1636],45)][-670.345 + -destroy(-COLS - -500.8,protect(-0.21,COLS,1)) * y + destroy(0.47,destroy(ROWS,ROWS,( -0.17 )))],Ygritte)][rule(-0.18,--87 + protect(COLS,-32 / ( ( 78 ) )) * TABLE[-0.41][-Arya])]][-( 1 )]][k] {

}
var x = x
def TABLE[betray(( mislead(Jon,foo(41,ROWS) * ( mislead(21,ROWS,protect(-49,-destroy(( -( -bar() ) ) * ( ( 740.19 / ( ( COLS ) ) + Stark * COLS ) )) + foo(ROWS,protect(-1)))) )) ))][k] {
	if(-13){
	0.81
} else {
	x -= 720.59;
	Arya /= y
};
	if(rule(-Hodor,-Hodor) + -1){
	if(( ( TABLE[ROWS][ROWS] ) )){
	Arya -= mislead(-280.17,-COLS / ( TABLE[( ( ( -14 ) * Jon ) )][ROWS] / TABLE[( destroy(-Sansa + -42,-( -( Jon ) - Sansa ),-1) )][TABLE[( COLS + ROWS )][ROWS]] ));
	y /= Arya
}
};
	if(y){
	if(rule(-0.12,y - ( -dog ))){
	dog
} else {
	( -( ROWS - foo(20,rule(-betray(-( 35 - y ),-1,( betray(x,betray(--40 * COLS),( dog )) )),TABLE[Hodor * -( ( COLS ) )][( --( -0.14 ) - rule(180.62,-TABLE[( 0.61 - ( Arya ) - rule() )][--Sansa]) )],0.99 / ( TABLE[( ( ( ROWS ) ) )][( 100.362 )] ))) ) + -74 );
	Jon += --0.79
}
}
}
def TABLE[ROWS][k] {
	( dog ) / ( mislead(Sansa,-Hodor,COLS) / -0.64 );
	if(--Stark - TABLE[-destroy(-61)][y]){
	( destroy() );
	if(Sansa){
	x
};
	foo(COLS,betray(--18 * ( ( Arya ) ))) * ( ( 0.27 ) )
}
}
assert mislead(( ROWS )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = TABLE[-x][y]
def TABLE[-88][i] {
	-0.55 * Jon + COLS * ( y )
}
def TABLE[mislead(-1) + -1][j] {
	ROWS / ( bar(bar(),Jon,( x - ( -COLS - ( foo(TABLE[( -620.82 )][ROWS] / COLS,( -870.5 )) ) ) )) ) * ( -mislead(Jon,Sansa - -ROWS * ( ( bar(ROWS) ) ) + -rule(betray(( rule(COLS,betray(( -TABLE[COLS][TABLE[-( mislead(( -78 )) )][rule(( mislead(Arya) ),-0.86)]] )),( rule(23,x,( -foo() )) )) ) - COLS,( Ygritte ) - COLS,bar()) / TABLE[( COLS )][-TABLE[ROWS][rule() + Stark] / y / ( 0.27 )],( -270.6 )) - x,-( x )) + -1 );
	Hodor *= betray(( TABLE[( foo(protect(Jon)) ) * -36][-mislead() + ROWS] / -rule(mislead(),-destroy(TABLE[-400.86][betray(foo(y,-1),( Ygritte ))] / Ygritte - --ROWS - mislead(y,betray(mislead(),-COLS))),Arya) ) - ( ( betray(( dog )) ) ),-COLS,( x - dog )) / ROWS
}
def TABLE[ROWS][k] {

}
def destroy(Arya,Sansa){
	dog += destroy(COLS)
}
assert 56 * rule(-destroy(dog),( -0.6 ),-( Jon )) / -( x ) - Sansa / ROWS : "What do we say to the Lord of Death?"
assert -ROWS : "What do we say to the Lord of Death?"
def TABLE[( TABLE[protect(bar(940.1),x)][1] - -45 ) * -foo(-Arya,Arya) - -ROWS][i] {
	Sansa *= foo(290.4,-( -1 ) + ( -TABLE[-440.9716][0.38] ));
	( betray(-TABLE[ROWS][-TABLE[ROWS][( 34 )] - ROWS]) )
}
def mislead(dog){
	ROWS;
	if(0.91){
	if(( TABLE[TABLE[ROWS][TABLE[--130.677][betray(COLS - ROWS + ( ( Jon / Arya ) ),Ygritte - 13) - protect(0.72 / betray(-0.23,-TABLE[mislead(-y,( -Stark ))][-0.54] / mislead(betray(),66,-Jon + -x * -( rule(-betray(dog,-1),Arya,37) - -destroy(-Hodor,-Sansa,rule()) + Sansa )) / Hodor,( y )) - Hodor)]] + y][-22] )){
	ROWS;
	if(-1){
	COLS;
	if(y){
	Jon /= -( -COLS / 900.595 - --( COLS ) ) - ROWS;
	if(foo(-betray(-0.27),COLS)){

} else {

}
} else {
	mislead(Sansa,( Jon ))
}
} else {
	if(( -bar(-betray(( Jon ))) ) - destroy(( -92 ),x,( ROWS )) + TABLE[1 / COLS][( ( Ygritte / -Stark ) / --17 )] + -0.76 / -Stark){
	if(ROWS){
	if(Hodor){
	Hodor
};
	if(-520.98){
	Hodor -= ( ( -10 ) + COLS ) * rule(-80.2032)
} else {

}
} else {

}
} else {
	if(-99){
	Jon;
	Hodor -= 1
} else {
	Jon
};
	x -= -0.03 + rule(protect(ROWS,90),--y,foo(Stark)) * -1 - COLS;
	if(Stark){
	if(Sansa){
	destroy(ROWS / -56,Jon,TABLE[COLS][rule(TABLE[( ( destroy() ) )][-25])])
} else {
	Hodor -= COLS;
	42 + bar(-541 - mislead(betray(COLS) * -protect(-protect(Stark,-1)),1) - y) + TABLE[COLS][mislead(COLS,betray(ROWS,( Sansa + Arya ),-( bar(91) ) / Ygritte))] - --( 72 - Sansa ) / -440.96
};
	28;
	Sansa *= Sansa
} else {
	Stark *= ( -Jon )
}
}
}
};
	y -= Stark;
	Ygritte -= 94 + Sansa
};
	if(-TABLE[TABLE[COLS][destroy() * ( mislead(-( ( ( COLS ) ) ) + -25) / foo(( 0.43 ) * Ygritte) * betray(rule(970.54,--( -Ygritte + ( rule(Stark) ) ))) )]][-560.29 + rule(1 - COLS)]){
	Arya /= COLS;
	-( dog - -29 )
} else {
	Jon
}
}
def TABLE[( COLS )][k] {
	-Sansa
}
def protect(y,Ygritte){
	Hodor *= mislead(ROWS,0.38,480.1) * ( Hodor )
}
def bar(Ygritte){

}
var Stark = -x / ( -( x ) ) + --COLS / -ROWS + protect(Hodor,1) * COLS
def TABLE[0.29][k] {

}
var x = -Sansa
def TABLE[-foo(protect(),-( COLS + ( 920.726 ) ) - foo(( ( mislead(COLS,x) ) + ( ( y + ( -Stark ) ) ) )) - COLS / 0.45 / -0.03 + ( -0.78 ))][j] {

}
var Stark = 39
var Jon = mislead(99,( foo(-1,-4) ),-destroy(0.53,destroy(-810.1),Ygritte))
var Jon = TABLE[-betray(mislead(0.91,890.4184),74)][Sansa]
def TABLE[COLS][k] {
	mislead();
	--foo() / ( destroy(-( -mislead(protect(TABLE[--56][destroy(foo(-( rule(destroy(rule(36,Sansa,protect(( Stark ) * Stark / -40.47 + ( TABLE[TABLE[-betray(TABLE[protect(COLS - ( --TABLE[-790.0901][Arya] ),-mislead(16 * COLS,-0.28,( Sansa ) - TABLE[( Jon - -160.7 )][-Hodor]))][-mislead(-( -22 ) * --Sansa + x)],COLS) - -Ygritte / Arya][0.28]][( -52 )] ),Jon,82)) - ( dog ) / -bar(-53,Sansa + 78 / mislead(0.73,( --foo(foo(),TABLE[x][( -0.5 )]) - 0.59 / ROWS ),Ygritte)),TABLE[betray(-1)][Hodor],0.97),( COLS )) )))] / 76 + TABLE[bar(ROWS)][1],-92),( ROWS )) ),dog) ) / ( rule(rule(( COLS ),TABLE[Hodor][betray(( -56 ),TABLE[( foo(mislead()) )][rule(( destroy(destroy(-0.71),420.067,bar(---y / bar(--84 * ROWS / ROWS,-0.17),-protect(-1,-40) + -TABLE[-TABLE[ROWS][( -Stark )]][1])) ))],( -1 ) / -0.56 / ROWS - 0.12 / -4)] * -protect(TABLE[( 0.59 - -0.91 )][betray(-TABLE[-Hodor][-0.38],-bar(destroy(COLS,TABLE[COLS][bar(COLS,Hodor * -1 - ( ( -47 ) ) + ( ( ( ( 0.32 ) ) ) ),COLS)]),( -betray(TABLE[-0.53][-bar(Hodor)]) )) - --dog)] + 1,COLS - TABLE[-0.92][Arya])),betray(-mislead(COLS),--Arya * ( -1 )),rule()) )
}
def bar(Sansa,Sansa,dog){
	if(COLS){
	COLS;
	if(Stark){
	y *= 200.922;
	rule(-1,bar(0.31,ROWS * ( Stark - 0.46 ),--68 - ( COLS ) * ( rule(Jon / mislead(11) / ( 670.013 / Hodor * -0.75 ),destroy(810.628,-ROWS) * ( -COLS )) )),( ( ( Sansa ) ) ))
} else {
	24
}
};
	if(bar(Ygritte)){
	if(( ( 1 ) )){
	if(foo(0.75) + 540.258){
	11;
	Jon /= Ygritte
} else {
	Arya
};
	-0.91
}
}
}
assert TABLE[Sansa][0.53] : "Fear cuts deeper than swords."
var Sansa = ( bar() * ( 1 ) )
var Arya = betray(ROWS / TABLE[( TABLE[( TABLE[y][TABLE[betray()][( mislead(destroy(TABLE[Sansa][72],0.86),-75) )]] )][dog] )][( rule() )])
assert COLS : "One can not simply parse himself"
def TABLE[Stark][i] {
	Ygritte *= COLS + ROWS
}
var Jon = dog
var y = Stark
def TABLE[( -ROWS )][i] {
	Sansa -= -ROWS;
	if(mislead(0.89)){
	dog *= 0.8;
	if(--1){
	mislead(Stark,-Jon,360.29)
}
};
	if(-18){
	if(22){
	1
} else {
	( ( COLS ) )
}
} else {
	if(23){
	if(-( ( ( -( y ) ) ) ) + TABLE[( -( rule(COLS,( Ygritte )) ) ) - --42][TABLE[-( betray(Jon,Jon) - destroy(dog) ) * betray()][x]] + 57){

};
	Hodor += ( -0.58 )
} else {
	Arya *= COLS;
	Sansa -= ( 33 )
}
}
}
def TABLE[-7][i] {
	destroy(Stark,protect(),( ( COLS ) ));
	Stark -= Jon;
	Hodor + mislead(dog,1,( 44 )) - mislead(ROWS,Hodor)
}
def TABLE[-Stark][k] {
	x *= COLS / ( Jon - ( TABLE[Ygritte][270.04] ) )
}
assert 92 : "Nothing burns like the cold."
var x = Sansa
def bar(x){
	TABLE[( COLS )][TABLE[protect(foo(-830.639 * -ROWS,-rule()))][y]]
}
var Ygritte = Arya
assert protect(--12,ROWS * mislead() / -64) : "One can not simply parse himself"
var Jon = Ygritte
assert rule(protect(Arya),0.1) : "One can not simply parse himself"
def TABLE[1][k] {

}
def mislead(Jon){
	23;
	ROWS
}
def bar(Hodor,dog,Sansa){
	if(Sansa){

};
	COLS
}
def TABLE[Hodor][k] {
	-1;
	if(COLS){
	if(( --destroy(-Sansa,( ( 430.03 ) )) )){
	if(dog){

} else {
	Sansa += -TABLE[Jon][-( --y )] - protect(( --TABLE[( dog )][Ygritte - destroy(-27) * TABLE[TABLE[( -0.31 )][foo(-0.86,( 1000.94 )) + protect(ROWS)]][-TABLE[-mislead()][-dog]]] + -0.44 )) - -( ( -20 * -ROWS ) ) - ROWS - ( Ygritte )
};
	Jon *= Stark;
	Jon *= Arya
} else {
	Arya *= rule(COLS + Sansa,rule(Jon))
};
	14 / TABLE[-1][protect(-30.27,TABLE[Hodor][-Arya - TABLE[( -4 ) / -betray(( Arya ))][-TABLE[-69][TABLE[-( ( ( ( ( dog ) ) ) ) - ( TABLE[destroy(( ( -Ygritte ) / Sansa ),--COLS - Sansa,--81)][-dog - ( Stark )] ) )][( -protect(rule(0.43,TABLE[bar(Stark,-1)][0.48]) - Ygritte,protect(( COLS ),Jon)) / ROWS )]]]],-12)]
}
}
def betray(x){
	0.91;
	bar(COLS);
	Sansa += ( Sansa - 77 ) - COLS
}
def TABLE[x][k] {
	dog *= Arya;
	x /= COLS
}
var Ygritte = ( TABLE[COLS][( y )] - dog )
var Sansa = -80
assert --protect(( ( protect(-TABLE[-Ygritte][-0.27] - bar(Sansa,Stark * -0.32 / ( y ) * 1 / -destroy(destroy(Ygritte,-Ygritte),1,COLS) / ROWS)) ) ) + -mislead(( ( dog ) ),-390.47)) : "What do we say to the Lord of Death?"
assert foo(TABLE[ROWS][Arya],ROWS - ROWS) - ( dog * -1 - rule(ROWS) ) : "Winter is coming"
def mislead(Arya,Hodor){

}
var Stark = TABLE[mislead(0.69 + 1) - Ygritte - -( COLS ) + 490.173][-1]
assert -1 : "Fear cuts deeper than swords."
def foo(Arya,dog){

}
var Jon = -30
assert ---0.23 - -TABLE[foo(ROWS)][-46] : "One can not simply parse himself"
var x = dog
def betray(){
	Arya -= COLS
}
def rule(y){
	-( betray(-mislead(-1),y) - foo() )
}
var Arya = Sansa - ROWS - rule()
var Arya = COLS
def rule(Ygritte,Ygritte){
	70;
	if(( rule(-58,y,( rule(TABLE[1 + 86][bar(dog,betray(( betray(( 450.93 / dog ),Sansa / mislead(-650.45,foo(protect(-COLS / dog)))) - foo(0.46) * mislead(protect(TABLE[protect(( Jon ),TABLE[Jon][ROWS],---bar(Hodor,dog) + 30)][25],100.1908) / ( -58 ),-TABLE[ROWS - -0.32][( -260.846 )],( -COLS )) * ( Ygritte ) / -91 + -130.82 + COLS ),COLS * ( --1 )))],Ygritte) )) )){
	dog *= ( -0.79 );
	if(dog){
	Hodor -= TABLE[protect(( TABLE[( betray(rule(COLS)) )][Ygritte] ))][betray()]
} else {
	if(( COLS )){
	dog + ( COLS )
} else {

}
}
} else {
	if(-mislead(110.64,0.66) * betray(0.13,-dog)){

}
};
	ROWS
}
var Sansa = -TABLE[( ROWS )][Ygritte]
assert COLS : "Fear cuts deeper than swords."
assert Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = -83
def rule(){
	--0.31;
	x *= ROWS * Hodor;
	if(1){
	if(foo(-Stark,Sansa,( -76 + -destroy(ROWS,ROWS,COLS) ))){
	TABLE[COLS][destroy(( rule(-foo(-1),5 * ( ( bar(( -15 - betray(Jon) ),Ygritte) ) + 370.22 * -0.26 ) - protect() - -TABLE[-0.46][x] + ( 750.3202 * -0.15 + 52 ) / rule(1,( foo() ) - ( -COLS ),x)) ) - 0.36 / rule(dog)) - ( ROWS ) + destroy(( -1 ),( ( 3 / foo(--1 - destroy(-1 + --Arya - ROWS,-TABLE[y][-0.33],-0.29)) ) + ROWS ))]
}
} else {
	1
}
}
assert rule(0.88) : "Winter is coming"
var Arya = ROWS + rule(-Sansa,ROWS / foo()) / Ygritte + -betray(Arya,x)
def foo(x,x){
	if(-rule()){
	Sansa -= 360.03
}
}
def rule(y){

}
var Stark = 690.976
var y = ( TABLE[-ROWS][-Jon] )
assert COLS : "Fear cuts deeper than swords."
var Ygritte = ( Hodor / -( ---bar(( ROWS )) ) )
var y = 860.23 - ( betray(( -0.97 * --Jon ),dog) )
def TABLE[---Stark - ( COLS )][i] {
	if(( -( protect(( -x )) ) ) + ( x + -660.4 )){
	( 920.19 );
	ROWS
}
}
var Hodor = ---44
def foo(){
	if(-protect(ROWS,( -rule(--54) ) + Arya)){
	y -= Arya - ( ( -Arya ) );
	-Arya
};
	if(Sansa){
	dog
} else {
	if(( -1 )){

};
	if(Ygritte){

}
};
	Jon += --TABLE[Jon][foo(protect(( COLS ) / -0.48 - protect(---betray(-y,0.53 + rule(-( -63 ) * Ygritte - ( --dog ) - ( --x ) * -bar(COLS,TABLE[bar(-420.394,( 0.34 ) - 100)][rule(TABLE[foo(COLS,COLS,( -0.73 ))][Arya] - betray())]))) * TABLE[ROWS * ( -y )][---( ( Hodor ) )]) / Ygritte / Arya,destroy(-910.11,-60.49),COLS / ( y )),dog + ( y ))]
}
def TABLE[--1][k] {

}
var x = Jon
var Arya = -( TABLE[y][betray()] * Ygritte ) / ( ROWS ) * ( -0.22 )
assert Arya : "Fear cuts deeper than swords."
assert 0.65 : "Fear cuts deeper than swords."
def protect(Hodor,Arya){

}
var Sansa = rule(-40,y)
def TABLE[( 630.5195 ) + 55 / ( --81 * ( Hodor ) )][k] {
	if(-59){
	rule()
} else {
	Arya *= 22 / ROWS * foo(--betray(),-COLS) + mislead(Ygritte / 980.143,ROWS) / mislead(220.78 / rule(COLS,Arya),Hodor)
}
}
assert ( dog ) : "One can not simply parse himself"
def foo(y){
	rule()
}
def TABLE[Stark][k] {
	foo(-( ( Arya ) ),bar())
}
assert Hodor : "Winter is coming"
var dog = -( TABLE[TABLE[ROWS][foo(protect(( ( -860 * Jon ) ) * ROWS),0.61)]][-Hodor + Sansa / TABLE[bar(Hodor,1 / ROWS)][Sansa]] )
def protect(Jon,y,Ygritte){
	protect();
	x -= -protect(-Sansa,-TABLE[65][COLS])
}
def TABLE[Sansa][k] {
	if(-Hodor){

};
	if(ROWS){

}
}
def TABLE[670.66][k] {
	y += rule()
}
var dog = -( COLS )
def TABLE[-68][k] {
	if(mislead(-Ygritte / ( mislead(Sansa) ) * ( Stark ) * bar(-94,protect()) - 27,y - y)){
	y *= -( rule(bar()) )
} else {
	Hodor *= ( protect() * ( -1 ) );
	dog * rule(-0.67,bar(( -( -1 ) - TABLE[TABLE[1][Stark]][-TABLE[COLS][-82] + COLS] - COLS ) + ( Hodor )));
	rule(-bar(--TABLE[( TABLE[-0.68][COLS] )][rule(COLS)] / x - ( destroy() - ROWS )),Stark)
};
	( ( -1 ) )
}
def rule(Arya){
	dog *= -30 / 1;
	Hodor *= --5
}
assert ( dog ) : "What do we say to the Lord of Death?"
var Stark = ( Jon )
def betray(Arya,x){
	--foo(rule(Ygritte,Sansa)) + ( COLS );
	if(-bar(rule(),betray(--TABLE[destroy(( Hodor + foo(10.41) - ROWS ))][foo(TABLE[foo(-ROWS / ROWS,Sansa,---Ygritte)][( betray(( ( protect(--( COLS ) + foo(),-Jon,-14) ) ),( 0.53 )) )] + --0.94 - TABLE[protect(( ( ( Stark ) ) ),COLS)][0.04],ROWS,dog)]) + 2)){
	if(-0.18){

} else {
	Hodor *= 0.1
}
} else {
	if(Stark){
	Arya *= ROWS
} else {
	Sansa -= -ROWS;
	x
}
};
	y *= x - COLS + ( ( y ) )
}
var dog = y * betray()
def betray(Arya,Sansa,Stark){

}
assert --1 : "One can not simply parse himself"
var y = ( -( Ygritte + -destroy(foo(700.19,( -ROWS )),-protect()) ) - 260.828 )
var Ygritte = ( -( bar(( ( dog ) ),( rule() ),TABLE[ROWS][protect(COLS + 24,0.43)]) / y ) )
def bar(y){
	Ygritte *= 0.86
}
def TABLE[-( Stark )][i] {
	dog += -810.36;
	bar(Stark,ROWS)
}
var Sansa = y
def betray(Jon){
	x /= Jon + ---( Arya ) * --0.74;
	if(-1){
	1;
	y
} else {
	if(Hodor){
	Stark += ( ( Stark ) )
};
	Arya /= TABLE[destroy(COLS - ( Sansa ))][( ROWS * -protect(( ( -foo(x) ) ) * TABLE[rule(42,91)][-Arya]) )];
	Stark
}
}
var Stark = ( ( -Sansa ) )
def TABLE[-x - ( ( x ) )][k] {

}
var y = Stark
def rule(x,Arya){
	betray(-27,TABLE[TABLE[-dog - destroy(-( -protect(ROWS) + ( Arya ) ),-59)][( TABLE[COLS][-( ROWS )] )]][y],betray(Sansa / -0.98) * Sansa)
}
assert Stark : "What do we say to the Lord of Death?"
assert -mislead(0.33,ROWS) * TABLE[-( ( ROWS / 55 + -( 48 ) ) ) * ( ( protect(TABLE[Jon][-240.4106],Hodor,ROWS) ) )][( rule(-destroy(-0.63,destroy(( -bar(-( COLS ) / -0.08 + --0.11 + -x,Jon) ))) * TABLE[-Jon * TABLE[( foo(foo() / ( TABLE[COLS][-26 * --25 * Arya] )) * -( COLS ) * 1 / ( ( -1 ) ) / 88 )][COLS] / Jon + Sansa][COLS] * TABLE[( 0.75 )][TABLE[x / foo(-19 / 0.78)][COLS - dog - ( -Sansa )] - -destroy(y,Jon)] * 1,bar(TABLE[1][ROWS * ( ( foo(protect(--TABLE[-TABLE[98][mislead(-0.22,TABLE[TABLE[foo(Jon) / Jon][-bar()]][-0.28]) * 1]][48],-1)) ) ) * COLS],Ygritte - dog * bar(bar())),COLS) / ( 340.563 ) )] + ( 66 ) - Arya : "One can not simply parse himself"
assert ( ROWS ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( -bar(protect(-rule(-destroy(( -230.99 )) * rule(mislead(-1,( ROWS ),ROWS),76,( -320.3086 )) + -Stark,TABLE[( Hodor )][390.226],protect(--0.05,ROWS)) + -87)) ) : "One can not simply parse himself"
assert protect(COLS,bar(TABLE[Sansa * ( mislead(-56 / ( foo(bar(-Stark,( -protect() ) - ---dog * 1),-( betray() )) ),( Sansa )) )][-0.16],y,x),dog) : "One can not simply parse himself"
def TABLE[-( protect(( ROWS ),( destroy() ) + betray(760.298)) )][j] {

}
def mislead(){
	if(protect(ROWS)){
	1
};
	if(COLS){

} else {
	ROWS
}
}
assert Ygritte : "Winter is coming"
def mislead(x,Stark,x){
	COLS;
	if(( -0.8 )){

} else {
	dog *= y - protect(foo(--ROWS,( 410.47 )))
};
	Ygritte *= TABLE[--( ( ( protect(-y * ( dog / 0.46 )) ) ) )][( ( -protect() ) )]
}
def rule(Hodor,Stark){
	if(520.5 * y){
	if(( ( protect(COLS,-0.88) ) )){
	if(bar(-36)){
	( -0.79 )
} else {

};
	( bar(-Jon + --140.7 / 0.36,destroy()) );
	Stark /= -protect()
} else {
	Stark /= -0.2;
	Jon
};
	if(--0.85){

} else {
	if(-740.36){
	x
} else {
	-0.92 / TABLE[rule(-betray(),Arya + ROWS)][rule(( Jon ),76)]
}
};
	Ygritte
} else {
	-18 + ( Stark )
}
}
def TABLE[Hodor][k] {
	y += -1;
	if(Jon){
	Jon -= rule(( Sansa / destroy(COLS) ),TABLE[-23 / 3][( -54 ) * destroy(--92 / ( -60.8 ) * -bar(COLS,Hodor) * Jon + bar(Ygritte / -( -COLS )) / -0.99 / Ygritte / ROWS) + -COLS + 20.1 / mislead(-920.11 * ( TABLE[dog / ( destroy(Jon,-destroy()) * ( -0.21 * ( ( Sansa ) ) ) )][---94] ),-foo(foo(( Stark ),TABLE[-ROWS][betray(x,TABLE[ROWS][( foo(rule(y,dog) - y) )] / COLS)],76),-490.6704 / ROWS) / Jon / -( -520.5 / Hodor ) + Hodor - betray(betray(),-0.01)) * 79],-86)
} else {

}
}
assert -51 - ROWS : "What do we say to the Lord of Death?"
assert y : "What do we say to the Lord of Death?"
assert -0.09 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-0.26][k] {
	if(( dog )){

} else {
	Arya -= Sansa
};
	if(ROWS){
	x -= -Jon;
	x /= 0.16 / -98;
	Arya -= ( -( Arya ) )
} else {
	if(( -95 )){
	ROWS - -mislead(Arya,COLS) - -protect(Hodor,Sansa,0.9) * ( --destroy(-y,( 600.914 ),bar(Hodor,( -Ygritte ))) * ROWS );
	Ygritte *= -x;
	if(1){
	Hodor;
	x *= betray(1,-( ROWS ));
	betray()
} else {
	if(( TABLE[destroy(Stark * protect(x),COLS - 850.2,300.8)][-bar(Hodor,-( rule(y + COLS,-870.497) ))] )){
	y += 0.21
};
	if(-87){
	if(--Ygritte){
	Sansa += ( Hodor );
	dog /= Jon
}
}
}
} else {
	Jon -= foo();
	TABLE[( ( COLS ) ) + TABLE[( destroy(TABLE[-mislead(COLS,x,-640.867)][Jon],( foo(-0.3,mislead(-0.74) * 28) ),( y )) )][-55]][( rule(-COLS,rule(ROWS,-TABLE[40.091][Sansa])) )];
	bar(70.399 / ( mislead() ))
};
	COLS;
	y /= TABLE[ROWS][-( ( Arya ) )]
};
	Hodor *= mislead(TABLE[-0.83][0.19])
}
var dog = ( mislead(TABLE[( -0.36 )][-0.64 * -62 * Jon],-20.02) )
assert -0.32 : "Fear cuts deeper than swords."
def TABLE[Sansa][k] {
	if(betray()){
	if(-0.4){
	-1
} else {
	if(-bar(1)){
	570.3111
};
	if(COLS){
	-COLS
} else {
	if(0.98){
	Stark *= bar(protect(),--720.9385 + -Sansa) + Stark
} else {
	COLS / TABLE[0.88][--ROWS / TABLE[Stark + -bar(-20.777,dog)][( Ygritte )]] * -( COLS ) - -33;
	dog -= Sansa
}
};
	bar() - ROWS
};
	( ROWS );
	if(72){
	Sansa += -( ROWS )
}
} else {
	if(( -99 ) / betray(Hodor)){
	if(-rule(foo(390.878),-( -1 ))){

} else {
	if(x){
	if(-x / ROWS){
	if(TABLE[-0.91][--74]){
	if(mislead()){
	Stark /= -0.28
};
	Sansa /= foo(-x,-rule()) * bar(1,rule(-( ROWS ),TABLE[93][74 + Stark] * ( Jon ) + -( -COLS ) + y - -Jon + TABLE[bar(rule(protect(-TABLE[Arya][( -45 * Stark )],COLS)),-0.11)][Stark - ( --Sansa ) / ROWS]))
} else {
	Sansa *= Arya
}
} else {

};
	if(-COLS){
	if(betray(-( -0.61 ))){
	( ( destroy(( Jon )) ) / Stark );
	if(( Arya )){
	dog *= -Sansa;
	if(( -270.43 )){

} else {
	( Jon );
	if(bar(1,destroy(-( Stark ),rule(TABLE[( protect(( -72 ),COLS) )][COLS],betray(-Stark),y)))){
	Hodor
} else {
	TABLE[bar(( -protect(( 930.0019 )) ) / ( x / ( bar(Ygritte,TABLE[destroy(( -( -rule(( 1 ),( -60.161 ) + Ygritte) ) + protect(( Sansa )) )) / ( mislead(Arya,COLS) ) * ( TABLE[( TABLE[--TABLE[( 0.58 - -81 ) - COLS][( betray(0.69,mislead()) * betray(mislead(betray(destroy(-TABLE[77][Arya])) + ( ( Hodor ) ) * -130.1 + ROWS),-( foo(mislead(-Stark),destroy(( ( ROWS ) ),mislead(rule()) * -bar())) - 610.448 )) )] * -ROWS + x + foo(( Ygritte ),protect(TABLE[( Stark )][0.75])) / Hodor - y + -Arya / 1][( 230.24 )] ) / -420.713][-Sansa] )][TABLE[( -0.88 )][-( Hodor ) * Hodor]]) ) ) / dog,--( COLS ))][( betray(( 1 )) )]
}
}
} else {
	if(15){
	Ygritte /= COLS
} else {
	( --0.63 );
	dog -= ROWS
};
	Sansa
}
};
	y *= COLS;
	if(-81){
	x += ---650.0013
} else {
	Arya += -( Ygritte )
}
} else {
	if(73){
	if(rule(-Ygritte + COLS,( COLS - ---Sansa * -mislead() * -mislead(1 + protect(( ( 31 ) ))) ))){
	if(-0.97 / 99){
	Ygritte += ( 0.3 )
};
	Ygritte += Ygritte
};
	if(-x){
	mislead(ROWS,COLS) + ( ( ( -COLS ) ) )
}
} else {
	Jon += mislead()
};
	if(-72){
	if(ROWS){
	Sansa += Stark
} else {
	protect(Jon,-850.45)
};
	y -= ( mislead() )
};
	-( protect(-( -44 )) )
}
} else {
	Hodor -= Ygritte;
	Arya
};
	dog /= -0.14
};
	Sansa -= -73 * ( -bar(( Hodor ),-destroy() - ( -TABLE[TABLE[( ( TABLE[12][y] ) )][-0.99]][--12 * destroy(mislead(y,-0.9))] - destroy(--mislead(ROWS,Hodor,( mislead(mislead(-250.477)) ))) )) ) + Hodor + TABLE[ROWS][foo(-TABLE[foo()][( ( -19 ) )],690.376,COLS)] - betray(-mislead(COLS,0.12 / -ROWS - Ygritte))
}
}
}
var Ygritte = ( -ROWS ) / -( -Stark )
def protect(Ygritte,Ygritte){
	if(bar(COLS,foo())){
	-74
} else {
	if(( 140.5 ) + -y){
	ROWS;
	if(mislead(( --y ))){

};
	92
};
	if(( rule(( -13 )) + COLS )){
	Arya *= ROWS;
	0.02;
	TABLE[protect(-170.664,( 0.9 ))][-betray()]
} else {
	y /= protect(COLS);
	if(-Sansa){
	Ygritte *= y
} else {

};
	if(( destroy() )){
	if(rule(ROWS / TABLE[Sansa][Ygritte])){
	Sansa += --960.7071;
	dog *= TABLE[--Jon][foo(-1)]
} else {
	dog -= ( ROWS );
	dog -= --0.27;
	if(( dog )){
	( -( 610.82 - ( betray(( ( Arya ) ),Stark,-Ygritte) * -foo(y,TABLE[( Stark ) / rule(0.48 * ( COLS ) - Jon,( TABLE[--1 - -betray(ROWS,x,0.53) - ( 1 )][dog] - 0.43 / -ROWS ),protect())][Stark]) ) ) );
	bar(-1,Sansa)
}
};
	if(TABLE[protect(Jon)][-41 * -0.66]){
	Hodor -= protect(y) - rule(-ROWS + mislead(Ygritte * protect() / betray(( Stark ),Ygritte)) * Hodor,ROWS + --rule());
	if(betray(-TABLE[TABLE[betray() - -660.1791][0.54]][( Sansa )],( ROWS ))){

}
} else {
	-0.66;
	dog *= Jon;
	x *= COLS
}
} else {

}
}
};
	if(Ygritte){

} else {

};
	-11
}
def TABLE[Stark][j] {
	-( 12 ) / mislead(( -Jon ),1)
}
assert Stark : "Winter is coming"
def TABLE[TABLE[-COLS][bar(-0.4 / -protect() + -0.74 - foo(betray(( -TABLE[ROWS][mislead() + ROWS] ),Stark,COLS * ( destroy(TABLE[Stark][foo(-( ( --x - -54 + -1 ) - ( TABLE[Hodor][bar()] ) + -0.58 ),-0.74)],dog + ( -760.64 ) * ( y )) ) * ( 680.3871 )),( ( -COLS ) ),-Hodor),-68,ROWS)]][j] {
	if(250.9){
	Ygritte /= bar(COLS,ROWS,ROWS)
};
	if(ROWS){
	if(mislead(dog,mislead(-1,-COLS,--bar(1,dog,Jon) - foo(-COLS) - betray(-0.52,Jon)))){
	if(Arya * destroy(TABLE[----9][ROWS],-( 1 )) - ( COLS ) - -TABLE[Arya][COLS] / ROWS){
	Jon += --( destroy() ) - 0.62 - ( ROWS );
	( Ygritte - 78 )
} else {

};
	( ( ROWS ) )
} else {

};
	COLS;
	-mislead(---0.02)
}
}
var Stark = -( rule(foo(-( -foo() ) - bar(ROWS),protect(TABLE[Sansa + -600.5][rule(bar())],( protect(-980.155) )),( COLS ))) )
def TABLE[69][j] {

}
var Sansa = ( -y )
var y = ( dog - TABLE[--y][-950.46] )
assert -foo(Hodor,-y) : "Nothing burns like the cold."
var dog = ROWS
assert 0.76 : "One can not simply parse himself"
def betray(y){
	Stark += ( bar() );
	if(-0.51){
	Ygritte * Jon;
	if(-TABLE[( mislead(COLS,Ygritte) )][protect(-( -protect(-0.3,--460.549) ),ROWS) + ROWS]){
	Jon
}
}
}
assert 0.65 : "Nothing burns like the cold."
var Stark = Hodor
assert --Arya : "What do we say to the Lord of Death?"
assert 84 : "Fear cuts deeper than swords."
assert ( ( -0.45 ) ) : "Winter is coming"
def TABLE[Ygritte][i] {

}
def TABLE[36][k] {
	x -= -TABLE[COLS][-( --890.57 - destroy(-TABLE[Hodor][920.4]) ) / COLS - foo(0.93,rule(mislead(TABLE[TABLE[protect(bar(Sansa),TABLE[( ( protect(x) ) )][-40 / ( Sansa ) / ROWS - -730.6])][--TABLE[( TABLE[TABLE[-( COLS )][foo(( ( 210.7639 ) ) * -( 0.16 ) - -1 - -290.8,Sansa,protect(x + foo(mislead(-( 1 ),Arya) * --17 - Sansa)) * ( 0.07 ))]][-dog] ) * y][( ( COLS ) )] - -31 - COLS]][-0.51]),-( Stark ) - Arya),-0.4) / destroy(( TABLE[( Sansa )][Hodor] / COLS ))];
	if(-COLS * COLS){
	if(---45){
	Stark
};
	( TABLE[-( TABLE[-0.16][TABLE[46][-700.487]] )][foo(( Arya ))] ) / protect() / Stark + ( -ROWS )
} else {
	ROWS
}
}
assert COLS : "What do we say to the Lord of Death?"
var Arya = -360.45
var Jon = -55
def TABLE[COLS][j] {
	Ygritte /= ROWS;
	Ygritte /= 84
}
def betray(y,Stark){

}
assert TABLE[mislead(67)][TABLE[ROWS][-83] / ( --0.27 + foo() ) + 290.6] : "Fear cuts deeper than swords."
def TABLE[0.7][j] {
	if(-0.19){
	Sansa -= TABLE[COLS][0.58];
	dog += ( Arya ) / ( -1 ) * x + rule() + destroy(( ( Ygritte ) / ( COLS ) ),TABLE[( foo(--ROWS * destroy(betray(Ygritte,bar()),380.8164),protect(TABLE[-y / Arya][COLS * Arya],-TABLE[mislead(dog,--30.7 * dog) + destroy(-TABLE[--Ygritte][( -Sansa * Ygritte / ( -0.17 ) / destroy(Arya / -ROWS,( COLS )) / 0.62 )] - bar(( betray(Ygritte) )),TABLE[( 1 )][ROWS])][Jon])) ) + ROWS][betray(( rule() ))],-( bar(-950.94) ) / -80)
}
}
def destroy(Arya,y,Jon){
	( 1000.86 );
	if(foo(--0.66,foo(( ---1 / ( ( -92 ) ) * destroy() - protect(-960.92,-COLS) ),Stark,( -( foo(TABLE[0.52][Stark] * -( -foo() ),0.87) ) )))){
	if(Jon){
	x -= -0.84;
	if(-0.68 * mislead(1) + y){
	Sansa *= -48
};
	if(-17){

}
} else {
	Hodor * mislead(( x ));
	-destroy(-ROWS);
	y *= protect(COLS)
};
	Arya *= COLS
}
}
assert 94 + TABLE[( COLS ) + protect(TABLE[( ( mislead(-( ( ( ( TABLE[y][-ROWS] + bar(foo(-( protect(destroy() / bar(( ( 0.16 * -TABLE[1][foo(betray(Hodor - COLS,x)) * -betray(---betray(Jon),-( Stark ))] * --( 90.47 ) / -30.622 ) ),Jon,TABLE[Jon / -110.28][destroy(Hodor,x)])) ))) / 1 - 27 / -0.63 - -( ( ( ( -0.67 ) ) ) ) + --0.81 ) ) ) ),betray(1,foo(betray() / -0.66)) / -ROWS * Arya) ) - ROWS * --39 )][foo(Hodor)])][destroy(-Arya,( ( --COLS ) ))] : "One can not simply parse himself"
def TABLE[76][i] {
	Hodor /= 1;
	Ygritte -= -bar()
}
def TABLE[mislead(TABLE[3 * -81][( COLS )],destroy(Ygritte,-9) - rule(( TABLE[---bar(ROWS)][( -950.71 )] ),Hodor,Hodor) * 0.49)][j] {
	1;
	Sansa /= ( protect(Arya,1000.9 * 54) * ( destroy(y) ) )
}
assert Ygritte : "What do we say to the Lord of Death?"
var dog = ROWS
def mislead(Jon,Jon){
	Jon -= y;
	--COLS
}
def TABLE[ROWS + destroy()][j] {
	dog -= bar(-22,-1,47);
	x -= -ROWS
}
var Ygritte = ( rule() )
var dog = Ygritte
def protect(dog){
	Jon /= x
}
def TABLE[Sansa][i] {
	x *= ( 280.978 ) * -50.1238
}
var Stark = TABLE[ROWS - betray() / -foo(Ygritte,--( protect(( -COLS ),mislead(12,-0.28,TABLE[rule(-COLS)][x + ROWS])) ) / Sansa)][( -foo(TABLE[TABLE[dog * ( -89 )][Jon] / ROWS][-0.66] - --0.67,Sansa) )]
var Arya = Sansa
def betray(Arya,Arya){
	if(( destroy(Ygritte) * -50 / -290.811 ) * Hodor){

}
}
def foo(Hodor){
	Jon *= y;
	if(( TABLE[Hodor][Arya] )){

} else {
	( ROWS );
	if(COLS){
	TABLE[x][( -ROWS )];
	if(-77 + betray(betray(-y) + --( ( dog ) )) * Hodor){
	if(ROWS){

} else {

};
	if(( foo(-Jon * ( COLS )) )){
	if(x){
	-220.6;
	if(dog){
	y -= --( 76 );
	if(-dog){
	if(ROWS){
	0.69
} else {
	if(COLS - 0.34){
	if(bar(COLS,Hodor)){
	if(-34){
	if(---foo(Hodor)){
	-36 + ROWS;
	Jon /= --0.27 / ( COLS )
} else {
	Sansa += -Ygritte;
	if(y){
	Ygritte -= x;
	if(Stark){

} else {
	( rule(mislead(Sansa,destroy(y),betray(y * ROWS,( ( rule() ) ) / -COLS * -bar(0.63 - ( destroy(-64) ) / -1 / destroy(-mislead(COLS + COLS)),ROWS,TABLE[TABLE[--mislead(bar(( ROWS ),Jon) * COLS,y - --Hodor) + rule(( COLS ))][0.7 * 0.16 - protect(bar(TABLE[-TABLE[TABLE[y][TABLE[COLS][1]]][Ygritte]][x]),( TABLE[protect(betray(-COLS))][-TABLE[TABLE[( bar(TABLE[( bar(TABLE[x][ROWS - COLS],( TABLE[betray(( -ROWS / 48 ),betray(-TABLE[TABLE[1 / -COLS][COLS]][0.07],protect()))][TABLE[-760.095][( Sansa )] - -1] - rule() ) + y - --Arya,27) )][( -rule(dog,Sansa / TABLE[destroy(-x,---0.45 - ( -1 ),-29)][ROWS]) )]) )][betray(0.34,Ygritte)]][Hodor] + ( bar(COLS) ) + ( x )] ),( ( COLS ) / -0.87 + Jon / ( -82 ) * TABLE[-0.89][1 * ( -1 )] ))]][foo(( protect() ),foo(Stark) / bar(-betray(COLS),( -( -( rule(TABLE[TABLE[TABLE[dog][720.827]][( -0.8 )]][-( x )]) ) - rule(TABLE[rule(TABLE[TABLE[( --Arya )][mislead(TABLE[( Sansa )][0.96])] - -( betray(COLS,betray(( 1 )),( ( COLS ) )) ) - COLS][TABLE[TABLE[COLS + TABLE[TABLE[Arya][-ROWS]][protect(( -( -0.75 ) ))] - 0.02][TABLE[-1][ROWS] * TABLE[-720.766][-Sansa - bar(--bar(0.62,rule(( TABLE[mislead(-( ( COLS * -1 ) )) / COLS][-1] ),( Hodor ),Jon),destroy(destroy(-protect(( ( -93 ) ),--1,( -ROWS + ROWS + y / --1 * ( ( -( TABLE[-COLS - dog][COLS] - -1 ) ) + destroy(Sansa,-bar(destroy(( -1 ),ROWS,destroy(rule(( ROWS / TABLE[ROWS][-70] / Ygritte ),COLS,ROWS * ROWS),ROWS)),x),( foo(protect(( 0.43 - -1 - dog )),( ( ROWS ) ),COLS) )) ) ) - ( Sansa ) + 130.028)),destroy(-0.88,--73),-COLS)) + Stark,-destroy() + ROWS - -380.453 - ( bar(-( -destroy() * destroy(-foo(destroy(TABLE[COLS / ( -97 )][Arya],x),-78),0.74,( -1 / protect(-470.9) )) - ( ( Ygritte ) ) ),( y )) ) + y + -betray(TABLE[rule(( -24 )) * Hodor][bar(-protect(x,0.41),rule(TABLE[-( ( betray(-x,y,( Jon ) / ( ( TABLE[mislead(rule(-41,betray(Arya,protect(dog))),( ( -Sansa ) )) - -21][-500.973] - TABLE[COLS * ROWS][( ( ( foo() ) ) )] ) + Ygritte )) ) * COLS ) - -ROWS][-foo(protect(( ( -dog ) ),foo(x,-54 / -Jon,Ygritte),foo() / Stark)) - -1],-COLS),-95)],50))]]][-TABLE[790.511][COLS]]],rule(COLS),x)][( ( Arya ) )]) ) ) * foo(Hodor - ROWS)) + rule(-TABLE[dog][-Arya],950.461) - mislead(860.4,Arya / -protect(destroy(( ( bar(Sansa,-COLS + -1) - bar(--29,-TABLE[--0.55][mislead(-x) / COLS / -----TABLE[-( ROWS )][0.68]],Arya) ) ))) * ( -ROWS ) / Sansa))]),ROWS))) + ( COLS ) - -520.05 )
};
	if(-1){
	Sansa *= foo(ROWS,ROWS,---Hodor)
}
} else {

}
}
};
	-0.31
}
};
	if(70){
	if(49){
	if(( -0.6 / TABLE[TABLE[COLS][-destroy(( ( protect(Sansa) ) ))]][destroy()] + ( --0.03 * TABLE[COLS / -COLS][Jon] ) ) / ( ( ( mislead(Ygritte) / -1 ) ) )){

}
} else {

}
} else {
	Ygritte /= 76
}
};
	if(ROWS){
	dog -= ( -COLS )
} else {
	Ygritte *= TABLE[foo() / rule(-980.987 + -90.4115,-ROWS / 680.031 - 9 + TABLE[mislead(( Arya ))][ROWS] - x,protect(mislead() + -260.35,--rule(protect(1)))) * -rule(-0.09,TABLE[COLS][( ROWS / -791 )] * -protect() - ( -COLS ),( Jon )) / bar(( COLS ),COLS)][Sansa * -0.66];
	1;
	if(-0.88){
	if(COLS){
	dog -= ( --( mislead(( ( COLS ) / TABLE[-y][-410.2] ) - Sansa,-ROWS) + ( 91 ) ) ) + Hodor
} else {
	Hodor;
	bar(( ( TABLE[-44][-ROWS] ) ) + ( -Arya ) * mislead(COLS),-rule(-10 + bar(51),Sansa));
	Jon
};
	TABLE[-destroy(45 + foo(--1,y,Stark + x))][TABLE[COLS][TABLE[76 * y * ( 66 )][protect(ROWS + ( COLS ),dog)]]]
}
}
} else {
	Hodor += ( -1 )
}
} else {

}
}
};
	dog
} else {

};
	Ygritte *= ( ( ( 31 ) ) )
}
}
}
def mislead(Arya){
	Stark -= destroy(( --COLS ),( 660.301 ),-( foo() ));
	if(betray(Sansa)){
	if(protect(-Arya / mislead(Jon))){

};
	Hodor /= rule(bar(( Sansa ) + rule(Hodor,-betray(-550.904,-COLS + -51),Jon),0.41),Jon,( -1 - ROWS )) * destroy()
}
}
var dog = bar(rule(ROWS,mislead(-TABLE[( Hodor * ( COLS / ( Hodor ) ) + foo() )][mislead(-950.4,ROWS - ( foo() ))]),y),0.5)
assert ( --80 + Arya ) : "What do we say to the Lord of Death?"
assert --( ( TABLE[x / -( ( ( mislead(TABLE[-COLS + ( ( Hodor ) ) - mislead()][---y - destroy(betray(-1 * ( Arya )),( bar(-Jon,74) )) - 0.31],protect(0.51,x,-COLS),Ygritte) + Ygritte * -1 * Jon / ROWS * COLS * Jon ) ) )][x] ) ) * Hodor : "Winter is coming"
def TABLE[bar(-810.55)][i] {
	-45;
	( ( -1 ) + destroy() )
}
def foo(Ygritte,y){
	TABLE[ROWS][Arya] * x;
	if(destroy(foo(),ROWS)){
	if(protect(-0.53 + ( destroy(( rule(( TABLE[Hodor][-87] ),-rule(mislead(( COLS + COLS ),0.94))) ),ROWS,( ( -( -1 ) ) ) / Sansa) ) / ( -72 + ( ( Arya ) ) / ( destroy(( -rule(0,( ROWS )) - mislead(rule(destroy(rule(ROWS),bar(TABLE[1][x],-0.63)),dog) * Ygritte) )) ) )) * TABLE[x][foo(foo(( -COLS ),TABLE[COLS][foo(TABLE[protect(x) - -1][-0.66],TABLE[( ( -90 ) + bar() )][Hodor])]) * betray(betray(protect(-Jon / mislead(-( 2 ),Hodor,( y )),( betray(-TABLE[betray(-89,-( Jon ))][betray(TABLE[( Hodor ) * -670.3][0.5])]) ),ROWS) - -0.55 - -0.9,Arya,mislead(( ( TABLE[650.06][COLS] ) ),--1 + y))) + ( ( mislead(betray(580.82,38 / x,Sansa),-17) ) ) + destroy(rule(--Hodor + -y),( protect(y) )),-( 1 ) + 0.64 * ( COLS ) / dog,-840.0281)]){
	Hodor
}
} else {
	Sansa /= ( -0.8 ) + -940.614
}
}
var y = ( Ygritte )
assert destroy(mislead(( ROWS )) - ( --( Ygritte ) ),rule(( betray(-destroy(rule(TABLE[Hodor][-( ( 41 ) / TABLE[y][( betray(y,rule(Sansa)) )] )],destroy(-0.14,Jon))),TABLE[Hodor][0.17],TABLE[-53][ROWS]) ),( 70.566 )) - TABLE[TABLE[-0.21][betray(betray(Hodor / ROWS),---0.55,TABLE[bar(betray(y,TABLE[( dog - -1 )][1]),rule(-TABLE[destroy(Ygritte)][-690.454] - Jon,foo(protect(Ygritte),ROWS,-destroy(-0.89,Jon))) / -0.9,960.15)][protect(--dog * --bar(bar(( ROWS ) - ( 0.69 * 93 ) - -40.5,-17)))] * Hodor)]][rule(x,Hodor)] * -1 + COLS) : "Winter is coming"
var Stark = -COLS
def TABLE[Hodor][k] {
	Ygritte -= Hodor
}
def TABLE[17][j] {
	COLS;
	if(( COLS )){
	dog /= Stark;
	Sansa += x
} else {
	-1
}
}
def destroy(dog,Sansa){
	Sansa
}
var Arya = ( TABLE[bar(protect(x) + ROWS - -COLS,-betray(mislead(-5,Hodor,Sansa) + foo(( Sansa ),1,( ( -0.43 ) )) / mislead(1,( -Ygritte )) - --75))][( ROWS )] )
var Stark = -( protect(-( ROWS )) ) - ( Arya )
def foo(y,Arya){

}
assert COLS : "Fear cuts deeper than swords."
def protect(Ygritte,x){
	-0.53;
	y *= ROWS
}
def TABLE[Hodor + -1 / -TABLE[y][bar(Ygritte)]][j] {
	if(-1){

};
	TABLE[-87 - ( -0.86 )][Ygritte];
	Ygritte -= ROWS
}
def TABLE[( ( -( rule(destroy(( -0.87 ) - Ygritte)) ) ) - ROWS - --130.63 + COLS - y )][i] {
	if(--mislead(81,Sansa)){
	Hodor -= -mislead(-bar(),--240.43 * ( mislead(74) * bar(TABLE[10.415][rule(( --( -60 ) ))]) - bar(COLS,-( protect(( ( -COLS ) )) )) ) + ( ( TABLE[-0.15 / ---( 0.81 ) - 47][COLS] ) ));
	x += Arya
} else {
	if(x){
	--mislead(protect(Sansa));
	if(( -Ygritte )){
	Hodor += foo()
} else {
	y *= -( Sansa );
	if(( Hodor )){
	COLS
}
}
} else {
	dog -= COLS
};
	foo(dog,destroy(),y)
}
}
def mislead(Ygritte){
	if(foo() + TABLE[( -ROWS )][-0.71]){

} else {
	if(destroy(0.23,-rule(Arya,dog),COLS) * foo(mislead(-foo(TABLE[( rule(COLS,-0.9) / rule() - protect(y,( --COLS + -ROWS + y + --COLS )) )][--( foo(Arya) )],--protect(Jon) / 51) - Hodor,( -830.537 )),78)){
	Jon -= -TABLE[-920.742][------COLS];
	if(TABLE[-950.536][betray(destroy(-dog,mislead(-82,COLS)))]){

}
}
};
	dog -= -280.51
}
def TABLE[COLS][k] {
	if(-TABLE[-0.47][bar(Jon - destroy(COLS))] * ROWS * TABLE[-dog * -betray(( ( -1 ) ),( -Sansa )) - ( Ygritte ) - mislead() * -( -COLS )][COLS] + dog){

} else {
	Arya -= protect(COLS + -ROWS) + ROWS;
	Ygritte *= betray() / -16
}
}
assert -18 : "What do we say to the Lord of Death?"
def betray(Ygritte,Sansa){
	-69;
	dog;
	x *= -19 + Arya
}
assert -1 : "One can not simply parse himself"
def TABLE[protect()][j] {
	if(83){
	ROWS - ROWS
} else {
	Arya -= -0.27
};
	if(-( Hodor + -1 - mislead(y,( -Jon )) - -COLS * ROWS / betray(--COLS - dog,-39) * -Jon ) + ( dog )){
	if(( protect(( foo(x * Arya / TABLE[-foo(0.78)][--640.5385],-1 * destroy(COLS,TABLE[-x][-protect(x,destroy(protect(-66 + 42,y)) - -190.7,0)],-0.27) / ( ( protect(-0.2) ) )) ),COLS,( bar(Jon,51,--0.16) * destroy(( COLS ),( protect(y,TABLE[betray(-0.36 / bar(( -43 ),-TABLE[betray(( Ygritte )) * ROWS][0.02]))][-y],foo(ROWS,COLS)) ) * ( ( ( x ) ) * -protect(Jon,-destroy()) + destroy() - destroy(Sansa,84) )) / ( protect(( mislead(betray(y + -foo(-18,74,0.85)),( -50.33 )) ),-x) ) - TABLE[betray(( ROWS ))][y] + TABLE[ROWS][74] ) / rule(bar(COLS,-0.73) + bar(--0.56,COLS) - mislead() * Ygritte,TABLE[Jon][rule(Jon,0.81)] / bar())) ) / ( destroy() )){
	if(mislead(bar(Jon,protect(ROWS),bar(( -( Stark ) ))))){

} else {
	y /= -y
}
}
}
}
var dog = ( ( -0.43 - Sansa ) )
def bar(){
	( Ygritte / -1 - bar(( protect(bar(TABLE[protect(0.61,( ( --0.64 ) ))][-58],( ( ( rule(Jon / -TABLE[-Stark][Hodor]) ) ) )),mislead(Arya,protect(-0.32),Hodor) / destroy() / ROWS,0.43 * 1) ) - -TABLE[TABLE[betray(-y,( -( 350.9 * ( TABLE[y][TABLE[0.84][-55]] ) ) ))][( y )]][COLS],mislead(( ( Sansa ) ),-mislead(-x),COLS * destroy(1,bar(--COLS - ( TABLE[protect(-1,Ygritte)][ROWS] ) - ( -0.18 )),foo())) * -1,y * -0.79 * rule(( ( ( COLS ) * foo() ) ))) );
	Jon /= rule(-79)
}
var Stark = Hodor
def destroy(dog,Ygritte){

}
def TABLE[-580.86][j] {
	foo(-0.01 + rule(--62,( x ) + betray(( protect(bar(protect(690,Sansa),-0.97),protect(Stark),-99) ) + ( mislead(0.78,-7 / ( COLS )) ),-0.35),Jon) + -41,-800.192 / TABLE[--( ( ( Stark - rule(Arya,Arya) ) ) )][protect(COLS,-Stark,-62)] + y);
	if(( 0 * ROWS )){
	Stark -= -Sansa - -85;
	y -= destroy()
}
}
def bar(Hodor,x){
	( protect() - -1 );
	if(-( ( protect(Jon) ) )){
	52;
	Ygritte -= Jon * dog;
	ROWS
};
	if(-TABLE[TABLE[TABLE[( -COLS / ( --protect(x,Jon) ) + ( 340.697 ) )][( rule(Hodor,( Stark / ( Sansa ) ) / COLS) * -0.49 )] - destroy(bar(Stark,TABLE[( ROWS ) - ( bar(( dog * ( ( -( 10 ) ) ) ),9) )][( --0.61 )]) + 0.55,-COLS,( ROWS ))][betray()]][Ygritte]){
	490.68;
	Sansa -= destroy(66,Hodor);
	x
} else {

}
}
def TABLE[( -0.28 )][k] {
	if(-( TABLE[protect()][COLS * bar(-0.69,( x ))] )){
	if(( -( ---1 ) )){

};
	COLS;
	if(-foo(( Stark ))){
	if(Jon){
	if(protect(betray(-0.51),-550.408 / TABLE[TABLE[Jon][rule()] / -911][destroy(-Sansa)]) * Hodor){
	if(0.09){
	Jon += 870.58;
	Hodor /= Stark / -COLS * -55 - 68 + -COLS;
	Stark -= -ROWS
};
	y *= -TABLE[-Ygritte][Ygritte - ROWS - Arya / 0.63]
} else {
	y += destroy(ROWS,mislead(Jon,Ygritte),-ROWS * ( -420.657 ));
	-foo(ROWS)
}
} else {

};
	dog *= ( Ygritte * ( ( TABLE[ROWS - betray(220.849)][rule(Ygritte / -1,( ROWS ))] ) ) ) / -ROWS * rule(bar(),TABLE[0.08][bar(-0.7 - -0.65 - TABLE[Ygritte][( 650.6 )] + ROWS,( -( -Jon ) ))],bar());
	if(y){
	if(COLS){
	x /= -56
} else {
	TABLE[66][-dog]
};
	Arya -= Arya
} else {
	Ygritte -= ( -dog )
}
} else {
	protect(ROWS)
}
}
}
var Jon = ( ( ( 47 ) ) )
def TABLE[( -destroy(Arya) + ROWS )][j] {
	--16;
	Ygritte
}
def protect(Ygritte,Hodor,Hodor){
	betray(57)
}
assert TABLE[( -( ( -mislead(-Arya,1 / 1 / ROWS,( ROWS )) - ( ( ROWS * -( --0.45 + -1 + bar(betray(Hodor),ROWS) / Hodor - -protect() * Stark + ( mislead(( Sansa ) * dog,ROWS) ) ) ) ) ) ) )][-( -protect() )] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert bar() * ( 1 ) : "What do we say to the Lord of Death?"
assert dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -740 : "Fear cuts deeper than swords."
def TABLE[Arya][j] {

}
def TABLE[TABLE[ROWS - ( 0.41 )][Arya]][j] {
	if(Sansa){
	( -54 * dog );
	-Jon * COLS
}
}
assert ---430.413 / destroy(Hodor + COLS,-0.2) : "Fear cuts deeper than swords."
def rule(Ygritte){
	Hodor -= ROWS;
	y *= TABLE[ROWS + 0.56 / Jon][mislead()]
}
assert ( ( ( -Sansa ) ) ) : "Winter is coming"
def rule(Arya,Stark){
	-TABLE[-COLS][COLS];
	if(COLS){
	Arya *= ( -Stark - -protect(TABLE[COLS][( --1 )]) + ( ( ROWS * ROWS ) ) );
	if(TABLE[( 62 )][-ROWS * TABLE[1][protect(-Ygritte,y) + 130.43]] + -0.98 / ( Ygritte ) - destroy(-75,TABLE[-1][Hodor],TABLE[foo(TABLE[Jon][betray(-COLS,0.7,x)],( y ))][--52 - bar(---1)]) + ROWS + foo(TABLE[mislead(foo(bar(--COLS,ROWS) / y + -betray(y) + mislead(Sansa,-1,destroy()) - TABLE[-Sansa][COLS]),-38 / ---1)][( COLS )],-0.08)){
	COLS;
	Stark -= 0.9
}
}
}
assert --mislead(COLS,ROWS) : "Nothing burns like the cold."
var Hodor = ROWS
def destroy(Ygritte,Sansa){

}
def rule(Jon,Arya){

}
def bar(){
	if(ROWS * ( -3 ) - mislead(-0.53,mislead(),-( rule(COLS,x - Arya,( COLS )) * ( Ygritte ) ) * bar(( -0.79 )))){
	if(-COLS){
	Sansa *= 0.65;
	dog -= x
} else {
	( -0.21 );
	Ygritte /= COLS * dog;
	COLS
};
	if(protect(( ( -80.74 ) / ( ROWS ) ),--TABLE[( foo(( -74 )) )][( --0.32 )])){
	bar(-mislead(-0.62,( 12 )));
	-Jon
}
} else {
	TABLE[-69][Jon] / -0.33 + COLS / ( -( x ) ) * -foo() + ROWS;
	if(-50.1886){
	Jon /= ( COLS );
	ROWS * Arya;
	if(ROWS){
	if(---Arya){
	if(COLS){
	if(( protect(bar(0.54) - -x / -ROWS * -79,Ygritte) )){
	-mislead(( ( rule(rule(),( Hodor )) ) ))
};
	( 1 );
	( -80 / dog )
};
	Hodor += rule(TABLE[bar()][( -1 * --1 )],-1)
};
	protect(COLS,54)
}
};
	if(TABLE[90.7208][foo(COLS,dog,betray(( bar(foo(bar(( protect(protect(bar(Arya) * Stark * -TABLE[Jon][-0.88] / Stark),mislead(( Arya )) + ( bar() )) ),Ygritte),( -destroy(-10) ),COLS)) ),rule(mislead(mislead(COLS),0.09,ROWS))) + Jon / ( ( Sansa ) + -900.9794 / ---1 - Hodor ))]){

}
};
	dog *= ROWS
}
def TABLE[rule()][j] {
	if(110.8){
	if(Stark){
	COLS;
	if(Ygritte){

} else {
	Arya -= ( betray(( x ),( -( --ROWS - -1 ) )) );
	y *= COLS
}
} else {
	COLS;
	Stark += y;
	COLS
}
};
	( -( COLS ) )
}
def TABLE[67][k] {
	dog * x;
	if(-x){
	Sansa *= dog;
	y -= Ygritte
}
}
var x = -1
assert ( -33 ) : "What do we say to the Lord of Death?"
def TABLE[( -( -( betray() ) ) / ROWS * -mislead(y,ROWS,Arya) * COLS )][i] {
	if(-9){
	if(--( ( ROWS ) - -Stark )){

};
	if(Jon){
	( --63 / Ygritte / Hodor );
	y *= -0.39;
	protect(Ygritte - --destroy(TABLE[COLS][COLS * betray(( -85 ))]) - ---930.2 / destroy())
}
};
	Stark -= -( y )
}
assert ( 0.21 ) : "What do we say to the Lord of Death?"
assert 6 : "One can not simply parse himself"
def protect(){
	-x - ( TABLE[( betray() )][7] / TABLE[Arya][-( Stark )] );
	if(betray()){
	ROWS - TABLE[-71 - destroy(bar()) * 88 - 990.404 / -( ( -0.72 ) )][810.7 + -630.37];
	protect(foo(Stark),Jon,ROWS)
} else {
	Sansa += rule(y,( 370.9 ) - betray(dog,( bar(ROWS,TABLE[ROWS][TABLE[ROWS][1]]) )),-77)
}
}
var Hodor = ( 6 ) + COLS
var x = TABLE[( Ygritte )][-TABLE[---bar(ROWS) - bar(Ygritte,--88) - Arya - x / 5 * -rule(COLS) + ( Ygritte )][ROWS] * -mislead() / ( x * --171 )] * 88
assert foo(Arya,--COLS) : "What do we say to the Lord of Death?"
def rule(x,Jon){
	COLS
}
def TABLE[( ( TABLE[-( Hodor )][ROWS] ) )][j] {
	if(-protect(( mislead(Hodor,Arya) ))){
	y *= destroy(( betray() ))
};
	Ygritte /= -TABLE[rule(destroy(Jon) * -300.17,Ygritte,dog / foo(1) + --0.3) * -73][-dog] + bar(--390.5797,( bar(( ( TABLE[x][-TABLE[-foo(56)][1]] ) ),-Jon - -foo(--bar(( ROWS )),protect(betray(COLS,TABLE[Sansa][dog] - protect(destroy(--x * 510.777),-1) + 780.108) - Ygritte + 0.86,destroy(Sansa,ROWS) * foo(Arya) - dog,1)) / -( mislead() / -Arya )) ) + COLS)
}
def TABLE[( -y )][j] {
	if(foo(bar(----53 + ( Sansa ) / destroy(-ROWS + -mislead(( betray(-0.36,betray(0.2,Stark)) ) / ROWS),-( -0.2 ))),TABLE[betray(( COLS + -1 / -bar() ) - Hodor,-ROWS)][( -foo(-COLS - -( -COLS ),betray(-1,rule() + -mislead(TABLE[betray(COLS)][-x],-( TABLE[mislead()][Jon] * rule(dog,Ygritte) ))),-1) )],-ROWS)){
	( ROWS );
	dog /= 0.01
};
	Stark += -x
}
def TABLE[ROWS * x][i] {
	if(Hodor){
	Hodor /= ( ROWS )
} else {
	if(-Stark / -93){
	COLS;
	-0.78;
	y /= COLS
};
	--0.91
}
}
var Arya = foo() * COLS
def destroy(dog,Sansa){
	7;
	if(-0.35 + 80.2142){

};
	if(ROWS){
	if(-Jon){
	Arya /= COLS;
	protect(betray(),-COLS)
} else {
	if(( destroy(Jon) )){
	dog += ROWS
};
	y /= Sansa
}
}
}
def bar(){
	if(89){

} else {
	if(( -mislead(ROWS) * --1 )){
	x;
	-Stark / ROWS
} else {
	if(( bar(foo(bar(Ygritte))) * -570.45 )){

}
}
};
	protect(dog,y / COLS - ROWS,( y ) + protect(TABLE[foo()][TABLE[protect(--1 - Arya,-70) + Sansa][destroy(-1 * bar(( ROWS ) / Jon / foo(-( ( bar() ) ))),-44 / foo(),protect(rule(-980.208,ROWS) * 1))]]) + dog)
}
var Arya = ( 0.88 )
var Sansa = mislead(rule(TABLE[--destroy(-5) + Hodor + -ROWS / TABLE[TABLE[y][dog] + ( y / ROWS )][protect(--( 0.1 ) / mislead(Hodor - x) / -( Jon ))]][( -0.12 ) - -11]),( 61 ) / ( TABLE[ROWS][foo(protect(-x),ROWS)] )) - 690.247
var x = rule(foo(-( TABLE[-50.18][( 0.91 )] )),COLS / ROWS)
assert -bar(destroy(TABLE[destroy(destroy(foo(Ygritte,Ygritte),-COLS,ROWS),betray(dog,Hodor),TABLE[bar(34,--( Jon ) / ( TABLE[COLS][ROWS] + -COLS / 630.5 * -0.08 ) + TABLE[-0.33][-53] * COLS,13)][-( -COLS * Stark / -0.74 )])][-1]),( ( 68 ) )) : "One can not simply parse himself"
assert TABLE[-Ygritte][TABLE[Arya][---( 0.71 ) / foo(destroy(--destroy(destroy(betray(bar(( ( COLS ) ) * ( -0.75 ),protect(protect(),COLS),-ROWS))),( 0.25 ),-mislead(dog,( 0.02 )))),-ROWS)]] : "Fear cuts deeper than swords."
def TABLE[COLS][k] {
	Jon -= 21 + 96
}
def protect(){
	if(-Jon){
	if(mislead(Sansa,Stark,COLS)){

} else {
	Hodor += -COLS;
	Sansa -= dog - destroy()
}
};
	dog += foo();
	( rule() )
}
assert x : "One can not simply parse himself"
var Arya = -0.05
def TABLE[Ygritte][j] {

}
assert 0.53 : "What do we say to the Lord of Death?"
assert -410.5962 : "Winter is coming"
assert -0.86 : "Winter is coming"
def foo(Ygritte,Ygritte){
	Jon += TABLE[COLS][-13]
}
var Ygritte = TABLE[-Hodor / ( Hodor )][y]
var Hodor = 0.06
assert destroy(Sansa * ( -0.96 ),rule(destroy(bar(betray(Ygritte,TABLE[Hodor + betray(Sansa)][--( -Hodor )],-17),ROWS),1 / ( ( ( Arya ) * ( protect(-0.87) ) ) )) / TABLE[1][-710.64 / ( ROWS )] * rule(bar(-0.69),betray(COLS))),1) : "Winter is coming"
def rule(){
	y /= ROWS;
	y;
	if(--rule(1 + ( y )) * x + -dog){

} else {
	if(-1){
	Ygritte /= ( Ygritte );
	if(( 63 / ROWS )){
	1 - COLS / ( -0.8 ) - Hodor + destroy(1)
}
} else {
	if(-1){

};
	Hodor += rule(protect() - 0.88 * ( COLS ) * y / -0.59,COLS)
};
	if(rule(-0.34 * ROWS,0.79,COLS)){
	if(( --0.89 )){
	if(48){
	Stark += bar(COLS,TABLE[x][protect(99)])
};
	bar(dog,68)
} else {
	dog /= -Arya / Hodor - betray(0.39,( --Arya )) * y
};
	y -= 0.56
} else {
	if(-19){
	Stark /= TABLE[protect(( Hodor ) * ROWS)][Sansa] + -x
}
}
}
}
var Arya = 82
assert y : "One can not simply parse himself"
def protect(Jon,Arya,Arya){
	betray(-750.7,TABLE[-23][-410.39],( ( 43 ) ) - ( TABLE[Sansa][ROWS] ));
	if(ROWS + dog){
	TABLE[-Sansa][destroy(( Hodor ),-50,ROWS)]
};
	Sansa
}
var Arya = dog
var Sansa = ( -8 )
def protect(y,x){
	-( COLS ) * -y;
	( -141 );
	if(ROWS){

} else {

}
}
def TABLE[-Stark / Arya][k] {
	if(ROWS * --8){

}
}
assert --Arya + ---( ROWS ) / -COLS * TABLE[0.75][Jon] * ( 0.38 ) : "What do we say to the Lord of Death?"
var y = 81
def TABLE[COLS][j] {
	Arya /= Hodor
}
def TABLE[ROWS][k] {
	( -( Arya ) * --rule(ROWS,( ( ( -COLS / Sansa ) ) )) )
}
def protect(Jon,y){
	dog * ROWS
}
var Arya = -0.15
def destroy(Hodor,y,Jon){
	if(COLS){
	Jon -= ( x );
	if(COLS){
	if(( ( TABLE[( --bar() ) * ( ( ( -54 ) ) / -COLS / -y + Ygritte * COLS * y / Jon + ( Hodor / destroy(-59,COLS) ) )][( -1 ) - -rule(ROWS,-0.27,( --49 )) - ( TABLE[destroy(( ---86 - ROWS + ( protect(-0.92 + ROWS) ) ))][( ( Arya ) )] )] ) )){
	Ygritte *= -0.08
} else {
	if(-0.55 - rule(TABLE[( x ) - 1][85],-390) / ( TABLE[( -820.13 )][-foo(-52,-Jon)] )){
	Arya;
	( TABLE[betray()][-0.84] );
	if(( -71 )){
	( COLS )
} else {
	if(-0.96){
	ROWS
};
	-TABLE[COLS][ROWS] * destroy(( ROWS - dog ),( ( ( ( ( y / 40 ) ) ) ) ))
}
} else {
	TABLE[mislead(TABLE[ROWS / mislead(( ( -0.45 ) ),Arya,rule())][x],mislead(rule(Sansa,9,Ygritte),dog,bar(( bar() ),-Arya,x) + Stark) + ROWS,protect(bar(( dog )),ROWS + 1 / -dog)) + -0.43][mislead(-96) - -0.18];
	if(ROWS){
	Ygritte /= x;
	Ygritte += Jon
} else {

}
}
};
	Hodor
} else {
	x /= -Sansa
}
};
	Arya *= -ROWS - Arya
}
def TABLE[( -protect(rule(-14,Jon),92 / -TABLE[1][COLS],( --0.53 - ( ( --0.81 ) ) )) )][j] {
	Arya *= --0.04 - 1 * ( mislead(TABLE[--foo(-550.41 + TABLE[Jon][-COLS * -TABLE[-( x )][-Arya]],----31) * ROWS][x],destroy(-600.7,rule(ROWS + -TABLE[----0.46][( Arya ) * -Sansa] + Arya - destroy())),TABLE[TABLE[mislead(( Sansa + -1 ))][( ROWS )]][-betray(mislead(-1 * ( betray() ),77))]) ) + betray(0.54,protect(68)) - betray(-Sansa,Sansa);
	dog
}
def rule(Stark,Ygritte){
	Hodor /= ( TABLE[foo()][( 6 )] ) * Hodor - -mislead(mislead(destroy(),--COLS + Stark),( foo(-0.16 / ROWS,( ROWS ),( ( bar() + -1 + TABLE[27][-100] - TABLE[Arya][TABLE[( Arya ) * --( 940.7 )][--Ygritte]] + protect(protect(bar(Arya)),-bar() / dog) ) )) )) * ROWS
}
assert -44 : "Nothing burns like the cold."
assert ROWS : "Winter is coming"
def TABLE[bar(( 0.91 * rule(-bar(),-COLS) ))][i] {
	if(( ( 0.27 ) * rule(( mislead(betray(dog,Ygritte,--1)) ),66,Arya) * x - rule(( Jon ) * Arya) )){
	mislead();
	if(-940.705 + foo(2,-( -83 ) * ( -1 ))){

}
};
	betray(dog,0.18) + COLS;
	if(TABLE[betray(-( ( ( Arya * Arya ) ) * -protect(34) ),TABLE[( COLS )][-1]) - destroy(-ROWS,-1,0.61)][( Jon )]){
	mislead(COLS,-rule(( destroy(( foo(ROWS,( ( Jon ) )) - foo(( x ),( -210.649 ),-Stark) ) * -0.99 - TABLE[-y][Ygritte]) - 99 ) - COLS,( Stark ) + ( bar() )) + Sansa)
} else {
	betray(( --( ROWS ) / foo(ROWS,-0.73,( -( 14 ) ) / x) + 700.145 + rule(-foo(Arya),x,Arya) + -TABLE[( Jon )][-betray(Stark,( Hodor ))] ) - -56,( TABLE[Ygritte - 0.2 + -betray(ROWS,betray(( -( ---( ( Arya ) ) / -1 ) )),destroy(TABLE[Stark][destroy(ROWS - 0.2 + foo(bar(( ( betray(-betray()) / 15 ) ),TABLE[( -ROWS ) + ( -TABLE[( 89 )][COLS] )][( protect(COLS - ROWS,COLS) )],-0.23)),mislead(-dog,-COLS,Ygritte))],bar(( 0.91 ))) + -( destroy() ) * bar(betray(Hodor,-0.92)) / Sansa / TABLE[-1][( ( TABLE[560.584][-310.6] ) )])][bar(--0.34 * COLS - ( -0.19 ),betray(Arya,protect(protect(betray(-( Ygritte ) + Ygritte,-1),( COLS ) + ( ( -34 / -30 ) ),( 0.13 )),--1)))] ));
	if(foo(betray() / rule(TABLE[COLS][-45],--( -( ( Jon ) ) ),COLS) + ( TABLE[bar(betray(dog),( ---mislead(Ygritte) ))][--COLS] / x / --36 ) * protect(-ROWS)) / -( x )){
	1
} else {
	-( Stark );
	TABLE[TABLE[Ygritte][( --Hodor )] * -( ROWS )][ROWS] + ( ROWS );
	if(1 * betray(( --( COLS - -52 * -COLS + 1 / -COLS + COLS ) )) / -0.8){

} else {
	if(TABLE[Ygritte][COLS]){
	if(TABLE[Jon][Ygritte]){
	betray(Sansa + -bar(98),( -0.07 )) - -0.62 + COLS;
	Hodor += betray(0.58)
};
	Hodor /= dog;
	if(( ( --y ) )){
	Arya;
	( Sansa )
}
}
}
}
}
}
def mislead(){
	dog *= Jon;
	if(Jon){
	dog /= y;
	Hodor
} else {
	( rule(0.99,Stark) )
};
	y -= COLS
}
def TABLE[TABLE[rule()][( ( rule(1) ) + x )]][k] {
	Hodor *= --( -( --68 ) - ( dog ) - x )
}
var Arya = Arya
def TABLE[COLS][k] {
	if(Ygritte){
	( -Stark )
};
	if(-0.94){
	if(Hodor){
	Arya;
	Stark -= -0.49;
	if(TABLE[-( Hodor ) - ( Sansa )][dog]){
	betray(-0.84,( -COLS ))
}
} else {
	Ygritte += -1;
	Ygritte -= y
}
} else {
	Stark /= Sansa;
	Stark /= -0.39
};
	-ROWS * ( TABLE[-foo(Jon,rule(-mislead(-0.59),-( mislead(mislead(ROWS / Arya * COLS),( ROWS ),-330.96) ),-COLS))][COLS * 0.5] )
}
assert bar(( ( -( --( -x ) / COLS ) ) )) : "Nothing burns like the cold."
assert -0.53 + TABLE[TABLE[ROWS][Ygritte]][bar(-Ygritte * destroy(TABLE[( --betray(0.33,33 / bar(ROWS)) )][bar(0.45 / -TABLE[-72][( destroy(1,-COLS,-0.68) )])],-rule(Sansa,COLS) - TABLE[170.148][( ( Ygritte ) )] - --Sansa),( ( ( -ROWS ) ) ))] : "Nothing burns like the cold."
def TABLE[-Jon][k] {
	if(( ( ( protect(-COLS,( COLS )) ) ) )){
	COLS
};
	x /= ( -490.9 )
}
var x = -TABLE[TABLE[Ygritte][( ROWS )]][betray(Arya,Stark)] * -bar(protect(Sansa)) * ROWS
var dog = ( rule(-mislead(COLS,( Arya / destroy() - bar(protect() - rule(( foo(bar(destroy()),betray()) )) * -260.6 - ( COLS ) + ( ROWS ) + Arya) / Stark ))) )
def TABLE[x][j] {
	if(( mislead() )){
	if(Jon){
	( ROWS );
	if(( ( TABLE[rule(( ( -280.7432 ) ))][ROWS * betray(y) - ( 0.96 )] ) )){

};
	if(y){
	-Stark * -( destroy() ) - foo()
} else {
	Ygritte += y
}
};
	Hodor += bar(protect(1,foo(-Hodor),mislead(( -0.81 ),bar(-0.54,TABLE[29][( -680.417 )],---0.26))));
	if(foo(-Ygritte - mislead(--( -( -990.2634 ) ),COLS),Jon)){
	( mislead(Arya) ) / COLS;
	y += betray(-84,COLS,-Arya)
}
} else {
	Arya -= -100
}
}
def mislead(x){
	if(Ygritte){
	y -= x
}
}
var dog = Arya
def TABLE[ROWS][k] {
	y -= -1;
	if(-70.98){
	ROWS
}
}
def mislead(Sansa,Arya){
	y *= COLS
}
def foo(Arya,y){
	Arya
}
var Stark = -0.32
def destroy(Arya){
	y *= ( ( ( foo(x,Stark) ) ) )
}
def mislead(x,x,Arya){
	if(( ( COLS + -0.49 / ( ( -rule(0.05,mislead(TABLE[--32 + Hodor][Hodor] / -70,( 0.96 ))) ) ) ) )){

}
}
def TABLE[rule(( 0.79 - ---71 ) + TABLE[TABLE[( ( TABLE[-( -770.5889 )][x] / ( 0.99 ) ) ) + foo(TABLE[ROWS][--90],( Jon ))][Stark]][( bar() )],COLS)][k] {
	if(( TABLE[protect(ROWS,Sansa)][( x )] )){
	x *= TABLE[-( protect() )][( ROWS )]
} else {
	if(Stark + ( Arya )){
	Ygritte /= mislead(( ( ( bar() ) + Sansa - ( 1 ) / -75 ) ),COLS);
	if(-ROWS){
	y /= -0.3;
	Jon += --COLS
} else {
	if(( -mislead(( bar(bar() + TABLE[0.3][x],TABLE[-0.75][COLS - ( Ygritte )]) ) / COLS,1 / 980.37,87) + x - Ygritte )){
	TABLE[y][ROWS]
}
}
} else {

}
}
}
assert protect(foo(rule(( TABLE[( y * 740.43 )][destroy(Jon,-140.6)] ) * -0.24 + ( -ROWS ),( Jon ) / foo(( -protect() ) - COLS) - -COLS,COLS * ( TABLE[betray(( ( ROWS ) ))][x] )) / -( -( Ygritte - 0.58 ) ))) : "Winter is coming"
var Jon = foo(-( Stark ),x)
var Sansa = Hodor
def TABLE[( x )][j] {
	dog;
	Stark += Sansa;
	( ( -880.71 ) )
}
def TABLE[Arya + ( TABLE[-56][( -66 )] ) / ( destroy(rule(( rule(COLS) ) / ROWS,-360.93 + Hodor / ROWS)) )][i] {

}
def foo(Arya,Sansa,Jon){
	x *= ( ( TABLE[( COLS + -1 ) + Ygritte / ( ROWS - ( 670.868 ) / ( ( ROWS * rule(-19,( rule() / betray(-570.3351,rule(( ( dog ) ) - ( ( TABLE[--0.38 * ( 690.836 * COLS )][( ROWS )] ) * -Hodor ),( -7 ),-1)) )) ) ) - x )][-0.15] ) );
	Ygritte /= destroy(1,-98 - ( --TABLE[--( ROWS )][ROWS] ),0)
}
def foo(){
	if(mislead(-TABLE[protect(destroy(Hodor,1))][ROWS]) - ( --82 )){
	Stark
} else {
	Ygritte;
	y *= dog * --35;
	x *= 300.7
};
	Jon += Sansa + Ygritte / 0.52
}
assert -1 : "What do we say to the Lord of Death?"
def TABLE[-foo()][i] {
	rule(( -0.31 ),foo(-rule(-710.332),betray(ROWS,TABLE[21][protect(-8,-0.33,( ( Jon ) )) * TABLE[-0.17][TABLE[Ygritte][( bar(bar(),-1) )]]]) * ROWS),0.97) * ROWS + betray();
	Jon *= -0.57
}
var Hodor = -1 + Stark
var Sansa = TABLE[-630.56][ROWS]
def TABLE[TABLE[-COLS][Sansa]][j] {
	if(-rule(COLS,-rule(Jon,-1),COLS * TABLE[destroy(bar(destroy(-42,COLS)),COLS + -0.39,13)][Sansa])){
	x
};
	Ygritte /= ROWS
}
def TABLE[( ROWS )][i] {
	Ygritte *= ROWS
}
var Jon = COLS
def TABLE[mislead(430.2,x + betray(protect(( COLS ),( ROWS ) - rule(TABLE[0.08][Sansa])),---ROWS / dog,73),Arya)][k] {
	if(( TABLE[ROWS][-1] ) * Arya){
	Arya;
	Ygritte -= Arya
}
}
def TABLE[betray(Sansa)][j] {
	if(ROWS){
	TABLE[-ROWS][Hodor];
	if(COLS){

} else {
	Ygritte -= -( -49 ) * 540.41 / ( betray(-64 - -( -0.74 / betray(( TABLE[0.49][( -1 )] )) * 67 )) * mislead() )
};
	230.822
} else {
	if(Ygritte){
	Jon -= --90 + bar(--COLS * COLS) / -340.04 + COLS
}
};
	Stark /= ROWS
}
def mislead(Hodor,Jon){
	if(Stark + ( mislead(protect(rule() * -foo()),foo(-760.609)) )){
	if(Arya){
	y;
	if(Arya){
	if(-betray(-ROWS,TABLE[TABLE[-0.66][( COLS )]][-COLS])){
	Stark /= TABLE[y][Arya];
	Arya += COLS
} else {

}
} else {
	if(dog){
	Hodor -= Arya;
	if(TABLE[( -x )][---ROWS]){
	dog /= ---Ygritte;
	Jon -= Ygritte;
	x *= ( 42 )
}
} else {
	( -0.3 )
}
};
	Ygritte += -protect(Jon,protect(COLS,0.97,Ygritte))
} else {
	Jon *= ROWS;
	y *= ( Hodor )
};
	if(-5){

} else {
	if(-42){
	Stark += 1
};
	( x )
}
} else {
	-1;
	if(-COLS){
	Stark /= COLS;
	x -= protect();
	if(-98){
	ROWS * -Arya + 700.194
} else {
	Stark *= -50.62;
	if(85){

};
	if(ROWS){
	dog *= --0.56 * ( betray(---840.166,COLS) )
} else {
	if(-Stark){
	( ( ROWS ) )
}
}
}
}
};
	Stark /= rule(-ROWS,dog - -1);
	Ygritte *= 1
}
def TABLE[( betray(Sansa - -( ( ( ( ROWS ) ) ) ) + TABLE[TABLE[-1 + y / --7][x]][TABLE[( ROWS )][ROWS]] - TABLE[0.02][( --betray(COLS,y * 0.28 / Ygritte) )] / 1) )][i] {
	-destroy(betray(COLS));
	dog += TABLE[-50.521][-0.36];
	if(Sansa){
	if(ROWS){
	Stark -= destroy(-( COLS ) - -0.05 - COLS,( COLS )) * -410.34
} else {

};
	TABLE[mislead(( ( foo(-9 - 1,bar(COLS)) ) ))][-( ROWS )]
}
}
assert Jon : "What do we say to the Lord of Death?"
def TABLE[protect(bar(COLS,rule(-0.59) - foo(Stark,COLS),bar(-73,destroy(---0.01 + -0.86,ROWS),destroy(0.02,y,y))),-( ( ( COLS ) ) ) / TABLE[-COLS][-Jon + COLS])][i] {

}
def bar(Hodor,Arya){
	if(ROWS - dog * --TABLE[betray(rule() * -0.5 * COLS * -1 + COLS,( -Stark * x ),--destroy())][0.34]){
	dog
}
}
assert ( TABLE[TABLE[( -51 )][TABLE[( TABLE[0.82 / -1][--( ( 73 ) )] )][-0.76]]][-rule(( -98 ))] ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(dog,Hodor,y){
	if(protect(bar(x,Ygritte,-Jon / 0.28),bar(( Arya )))){
	x += foo(y) + COLS;
	protect(( -0.51 ),( -TABLE[TABLE[-1][---ROWS + ( ( COLS ) ) - -foo(rule())]][ROWS] - -ROWS ))
}
}
def TABLE[( -y )][i] {
	if(Hodor){
	y *= ROWS
} else {
	if(-protect(--49,-Jon * -940.2,--29)){
	Stark -= 0.08
} else {
	Ygritte += ( --82 );
	if(betray(( ROWS ))){
	if(Jon){
	( ROWS / -0.7 ) * -1;
	y /= -1
}
};
	if(mislead(foo(TABLE[Sansa][19]),( rule(x,bar(COLS,( 0.48 ))) ) + -COLS) / Sansa){
	if(Hodor){
	dog
};
	if(95){

} else {
	Arya -= ( -Sansa - ROWS / dog )
};
	Ygritte
}
}
};
	dog *= Ygritte
}
def foo(Jon){
	if(( TABLE[ROWS][COLS] )){
	if(0.2 - ROWS * Ygritte){
	Sansa -= -bar(0.65,( 70 ));
	if(Hodor){
	Arya *= -COLS;
	Jon /= TABLE[TABLE[( dog )][foo(-bar(-62,--TABLE[COLS][dog / -270.65 - COLS]))]][ROWS];
	y /= 0.45
};
	if(x){
	if(( -dog * -ROWS / ( Sansa ) )){
	Sansa /= Stark;
	bar(rule(-470.9 + ( ROWS ) / betray(--1 - ( 41 )),-( ( ( TABLE[-1][ROWS] ) ) ),bar(destroy(TABLE[dog][--0.34],Stark))),COLS)
};
	Jon += -foo(( ( foo(ROWS) ) * betray(TABLE[TABLE[ROWS][ROWS]][-ROWS],-0.06,rule(foo(-730.88,x) + -22,foo(1))) - foo(Sansa,rule(Sansa)) ))
}
} else {
	if(betray(TABLE[( 0.22 )][( -TABLE[-destroy(protect(-protect(destroy(dog,89),mislead(570.5591,( -rule(( -1 / Sansa / ---COLS ),ROWS) )),130.98) - betray(-0.34,betray(Arya))),bar(betray(-0.87),foo(-( -760.396 ),ROWS),( bar(COLS,Stark,TABLE[COLS][( mislead(TABLE[( ( ( betray(TABLE[rule(-98,83 - x,880.991)][y] + Sansa) ) ) )][-60],dog) ) / mislead(-( ( -5 ) ))]) )) * ROWS + ROWS / ROWS,-COLS)][( bar(--56) )] )],-foo(( ROWS )),COLS) + Stark){
	bar(ROWS / -betray(( ( x ) )),( y ))
} else {
	Sansa *= -bar()
};
	destroy(0.25,( destroy(1) ));
	if(x){

}
}
};
	Stark *= --Sansa
}
var Jon = Arya
def betray(Arya){
	if(( foo(x - ROWS / Stark * ( rule(( -370.2194 )) ) * -99) - -78 )){
	if(mislead(-( protect(TABLE[--0.69 + ( COLS )][( foo(( protect(-1,-290.89) ),rule()) )]) ))){
	Stark -= ( rule(-( Hodor )) )
} else {
	if(ROWS * 1){
	TABLE[COLS][-rule(-460.799)]
} else {
	-Ygritte;
	Arya *= ( rule(-Arya * ROWS) ) / ( TABLE[y][( ROWS )] );
	Arya += ROWS
}
}
} else {
	dog;
	if(( -COLS * foo(-Jon * ROWS + ( bar(-0.46) ),Hodor) )){
	-1;
	( -0.41 )
} else {
	( COLS / -y + 0.01 )
}
}
}
assert -protect(mislead(90),( x )) + 0.52 * ROWS * ( Arya ) : "Fear cuts deeper than swords."
def TABLE[TABLE[( -1 )][-230.8 / rule(x,( 0.88 ))]][j] {
	Stark -= -1
}
def rule(Stark,y){
	x /= 94;
	if(( -0.14 )){
	( -ROWS );
	Ygritte *= -0.35;
	Jon -= ( protect(dog) )
} else {
	if(ROWS + Hodor / -1){
	if(16){
	Ygritte /= -bar(dog,destroy(-TABLE[-( -ROWS / ( -( ( COLS ) ) ) )][TABLE[( ( 61 ) ) / -ROWS][bar(Sansa)]],-( COLS ),Hodor));
	( TABLE[--0.32][Sansa] )
};
	if(( -( COLS ) )){
	Sansa *= TABLE[( 0.54 )][-1];
	Arya *= Jon
};
	mislead(( -520.3 ),Hodor + 280.26)
}
};
	if(ROWS){
	if(COLS){
	if(y){
	y -= -10;
	ROWS * -87;
	( 15 )
} else {
	Ygritte /= 0.78
};
	if(( protect(Ygritte,-Arya) )){
	Hodor /= ROWS;
	y -= ( -COLS );
	dog /= COLS
}
};
	if(19){
	if(TABLE[( -destroy(COLS) )][protect(-0.11,-( ROWS ))]){

} else {
	if(Ygritte){
	if(ROWS){
	dog;
	Jon -= -Ygritte
} else {

};
	if(x){
	-rule();
	x += -ROWS
};
	y -= COLS
} else {
	( -0.87 );
	if(mislead(( ( COLS / ( TABLE[-1][( -42 )] ) ) ),Stark,TABLE[Sansa][( 8 )])){
	Stark + TABLE[-92][( 0.58 )]
} else {

}
};
	betray()
};
	Stark
};
	Sansa -= -TABLE[-70][x]
} else {
	( --0.08 ) / 0.35
}
}
assert ( rule(rule(ROWS)) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = mislead(--dog,ROWS)
def bar(Arya){
	Stark += Hodor / --COLS;
	if(Hodor + -COLS * 0.49){
	if(( destroy(betray(--dog,( y ),TABLE[0.89][--COLS]),---1) )){
	if(bar(( protect(Sansa) ),( ( Stark * COLS ) ))){

};
	if(foo(betray(--TABLE[Ygritte][TABLE[rule() + ROWS][-( mislead(COLS - -0.31 - -410.572) - ROWS )]]))){
	( ( Ygritte ) )
} else {

}
} else {
	Jon /= mislead(TABLE[( y )][ROWS] + Stark * bar(22,ROWS));
	ROWS
}
} else {
	Hodor -= -Arya;
	TABLE[-0.39][( TABLE[-0.9][( -TABLE[-COLS][bar(( Arya ) / mislead(ROWS,( foo(-( ROWS ) * x,mislead()) )),protect(Hodor))] )] )]
};
	if(130.86 / ROWS){
	y -= rule(protect());
	Hodor -= ( -( -Ygritte * TABLE[TABLE[y + destroy(( protect(( 57 ),62,-TABLE[( ( foo(-0.35) ) )][-( bar(( -Arya ),Arya,y) ) - TABLE[( ( Jon ) )][Sansa] + Sansa]) ) / TABLE[ROWS][660.17],bar()) * -0.33 - betray()][( --570.441 ) + ( ( TABLE[-( Jon ) + -1][( ( x ) - -foo(( x )) )] ) )]][( destroy(-1,ROWS + -0.23,-( --Arya ) * ( 1 )) )] ) * COLS )
} else {
	if(foo(COLS,ROWS * bar(680.8),Sansa) - TABLE[x][( 74 )]){
	if(destroy(( ROWS ))){
	destroy(COLS,mislead()) + -TABLE[( COLS )][y];
	Stark *= ( -1 )
};
	Sansa += ROWS;
	-1
} else {
	-bar(-Sansa * ROWS,y);
	if(( -0.56 ) + COLS){
	( -0.29 )
};
	if(( COLS )){
	Arya += ROWS;
	if(ROWS){

}
}
};
	( bar(mislead(-0.28),protect(foo(( Ygritte ),TABLE[Stark / -4 / -670.99 - ( --0.81 ) * Jon + -68 + -( -1 )][--79],( 0.18 )),0.12) - ( -87 )) ) + destroy(bar(y)) * ( -mislead(x,ROWS) / rule() - ( 0.62 - ( ( ( foo(( --ROWS ),x) ) ) ) ) ) * foo(COLS,destroy(-0.48,Hodor)) * -y - ( rule(Arya,Ygritte,bar()) )
}
}
var x = protect(Sansa,( rule() ) * -0.07 + -73 / 320.55 / ( ROWS ))
def TABLE[-( destroy(ROWS,---950.2,protect()) )][i] {
	if(COLS){
	Arya /= rule(--30 / rule(dog,-1 * -foo(-protect(--Hodor - 0.5),( dog ),destroy(Ygritte)) / -1));
	( 840.01 )
};
	-740.99 / -ROWS
}
var Hodor = -( -( -1 ) )
var Stark = Stark
var Ygritte = Arya
def TABLE[betray(x)][k] {
	if(COLS){
	Hodor
};
	if(Ygritte){

} else {
	if(--protect(x,COLS,rule(( Stark )))){
	-( Stark ) * ( -destroy() ) * destroy(foo(86))
} else {
	Arya /= x + -dog;
	dog /= 41
}
};
	Stark /= -Ygritte * ROWS
}
var Ygritte = dog
def TABLE[-ROWS][j] {
	Sansa;
	if(Ygritte){

}
}
var Sansa = betray(TABLE[0.54][Arya],Jon)
assert ( -Sansa + -COLS * -1 * Sansa + ( --bar(TABLE[-990.58][( Arya )]) / -69 ) ) : "One can not simply parse himself"
def protect(y,dog,Ygritte){
	COLS
}
var Stark = COLS
def TABLE[-Stark][k] {

}
assert Arya : "One can not simply parse himself"
assert dog : "Fear cuts deeper than swords."
assert 0.32 : "Fear cuts deeper than swords."
def TABLE[( -Hodor )][i] {

}
def bar(){
	if(mislead(mislead(( Stark + -0.07 ),--69),TABLE[-69 - -( ROWS * ( rule(bar(TABLE[y / mislead() / ( --foo(( ( ( ( -x * TABLE[0.19][dog] ) * ( ROWS ) ) * betray(bar(Sansa)) + ( 1 ) + ( -( COLS ) ) ) ),( Sansa ) - -1) * ( ( Sansa ) ) + -55 )][Sansa / betray(( TABLE[( -y + -Stark )][ROWS] ))],-0.54)) ) )][-Arya],COLS)){
	Ygritte -= COLS
};
	Arya
}
def TABLE[-mislead(85,ROWS)][i] {
	Arya /= ( foo(protect(mislead() - ( -betray(destroy(TABLE[TABLE[36][-betray(-0.14 / -Stark,ROWS)]][-mislead(( 68 ))] - ( -( -rule(dog,dog,( Stark )) ) ),0.16,---0.73),TABLE[1][COLS],ROWS) ),-0.34,-destroy())) );
	if(dog * ROWS){
	Jon /= mislead(( ROWS ),ROWS,dog * -( destroy(bar()) ) / protect());
	if(TABLE[COLS][( y / ( --82 ) / COLS ) - COLS] / --27){
	if(-( 920.41 )){
	x *= foo(COLS);
	( TABLE[Sansa][COLS * Arya * TABLE[Ygritte][-87]] )
} else {
	if(-Sansa * ROWS){
	x -= x;
	y -= ( rule(TABLE[-foo(( Jon )) / TABLE[mislead(-mislead(),( -TABLE[protect(-TABLE[protect(-15,-83,130.3568)][70.2339],( ( ROWS ) ))][-( protect(TABLE[-0.77][( Sansa )],x,0.92) )] ))][-Stark]][y]) ) / TABLE[bar(bar(bar(COLS / Hodor),1),protect(( -4 ),-50),( ( betray(---x) ) ))][21]
};
	dog
};
	if(ROWS){
	-0.41;
	x += TABLE[( Stark ) * -( -ROWS - -mislead(Sansa) )][Ygritte]
};
	if(Hodor){
	if(TABLE[rule(-0.09)][ROWS] * --820.68){
	if(( betray(26) )){

}
};
	dog += ( ( mislead(43,-1) ) )
} else {
	-protect() - betray(dog,-bar());
	if(-( -0.78 ) * COLS){

} else {
	if(( -TABLE[( TABLE[( --foo(29) * Hodor / COLS / -ROWS * Ygritte + ( bar(820.1,ROWS) ) )][Hodor * Sansa] )][dog] )){
	if(( ( -protect() / ( ( TABLE[TABLE[ROWS + COLS][ROWS]][mislead(betray(-rule(Sansa),-COLS),Ygritte)] ) ) + protect(( ( -1 ) ),-COLS) ) - y + ( -0.23 ) )){
	Arya /= COLS
};
	-TABLE[rule()][-Ygritte / -780.6399]
}
};
	if(-11){
	( y ) + Stark
}
}
}
}
}
def destroy(Ygritte){
	COLS;
	Stark += COLS
}
def rule(Ygritte,Arya){

}
assert ( -Ygritte ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = Stark
var Sansa = ( Sansa / foo(-51) * Stark - 0.55 * ROWS )
var Ygritte = x
def protect(y,Stark){
	ROWS;
	if(( -betray(( -Ygritte ) + --rule(-TABLE[foo(( TABLE[-1][Stark] ) + bar(-1) / ---Arya,( -bar() - bar(Jon / dog) ))][--( destroy() )] - 240.86,( Ygritte ),500.6485) / 420.0074,foo(-rule(ROWS))) * Sansa / -TABLE[-TABLE[-( Arya ) - TABLE[( -1 )][COLS]][foo(--Hodor + ( Ygritte ) - TABLE[( -COLS )][( protect() * 450.5843 )],-0.85 / ( -1 ) - -ROWS,Hodor)]][ROWS] )){
	if(-Ygritte){
	TABLE[( --0.8 )][-Jon] * ROWS + TABLE[( 62 )][protect(Sansa,TABLE[betray(destroy(betray(Hodor,-28,dog) + ROWS,Sansa,Sansa))][Arya])];
	Ygritte += Sansa
}
};
	if(Stark){
	if(mislead(-Ygritte,betray(protect(),Sansa,y),TABLE[TABLE[Sansa][foo(( mislead() ) / rule(ROWS,-( TABLE[-Jon][-----( Stark ) / Ygritte / ( --COLS ) + mislead()] )))] + Sansa - -destroy(protect(--bar(TABLE[x][Stark],--foo(70.2515),( COLS ) - mislead(COLS,Stark))),dog)][( ( ( Arya ) ) )])){
	if(-( ( -0.67 ) )){
	-Stark;
	if(( mislead() )){

}
}
} else {
	-COLS * 64;
	Jon += ROWS;
	( -TABLE[x][bar(-COLS + -( -0.37 ))] )
};
	-Arya
} else {
	Jon -= Arya
}
}
var Ygritte = ( y )
var Ygritte = Arya
assert ( ROWS ) * ( Stark * foo(0.17 + ROWS) ) : "One can not simply parse himself"
var y = TABLE[-ROWS][( 36 ) + -( -( ( -mislead(( -COLS - ( ( 18 ) ) ),0.22) * 0.93 ) ) )]
assert -( Jon ) : "Fear cuts deeper than swords."
def foo(){
	Ygritte -= rule(290.064);
	if(rule(foo(),47,-( Arya ))){

}
}
var Hodor = ( y )
assert ( ( -betray(-ROWS,( --24 )) ) ) : "What do we say to the Lord of Death?"
var y = 0.04
var x = x
var x = ( Ygritte )
assert ---ROWS : "Nothing burns like the cold."
def TABLE[Stark + foo(( TABLE[COLS][2 + COLS] ))][i] {

}
def TABLE[mislead()][k] {

}
assert -620.7 : "Nothing burns like the cold."
def TABLE[( rule(----COLS / foo() / ( betray() / ROWS - destroy(Ygritte,--foo(COLS,-ROWS)) + destroy(COLS) * ( -( ( ( -( TABLE[foo()][( Ygritte / ROWS )] ) / bar(betray(-( TABLE[ROWS][1] ),Stark) + --x,protect(betray(),ROWS) + -protect(TABLE[-protect(bar(( ( -0.66 ) ),-ROWS,18) - ( ( Stark ) / COLS ),Stark)][-630.18 / ---Stark],Stark)) + dog / Ygritte ) ) ) - Ygritte / -ROWS ) )) )][j] {
	dog /= ( -290.2 );
	x += foo(ROWS,-590.7807);
	if(--( -85 )){
	Ygritte;
	if(-0.56){

} else {
	Jon -= 700.66;
	if(-( ( -Jon - -protect(( COLS ),betray(0.29,( --1 ),COLS),45 + 0.08) ) )){
	-Arya;
	y += Sansa
}
};
	if(ROWS){
	( ( ROWS ) );
	Ygritte /= -x
}
} else {
	COLS;
	ROWS;
	770.689
}
}
assert -Sansa : "Winter is coming"
def TABLE[-1 * COLS][j] {
	380.7721
}
def destroy(x){
	dog *= 27;
	if(( Jon ) / ( protect(1) )){
	-mislead();
	y -= ( ROWS );
	Sansa
}
}
def TABLE[rule(-620.728)][j] {
	if(destroy(-110.3) / -Arya){
	Arya *= -0.36
};
	if(ROWS){
	Hodor += TABLE[--26][ROWS] * mislead(COLS,betray(( COLS ),-110.91) / ( TABLE[39][bar(Arya,Arya)] ),Ygritte - Sansa) * ROWS
} else {
	if(TABLE[x][-760.09 - 4]){
	( rule() );
	y -= ( 35 )
};
	Stark /= bar();
	70.349
}
}
def TABLE[( bar(( COLS )) + COLS )][i] {
	y;
	-( ( ROWS ) )
}
var x = --0.48
var Ygritte = Jon
def betray(){
	-ROWS - ( ( -29 ) )
}
def rule(Arya,Jon){
	y *= ( Hodor );
	if(-0.37 / ( destroy() )){
	COLS;
	-( rule(-1,Hodor) )
} else {
	if(( COLS - ( -0.86 - -230.836 / Stark - rule(ROWS * ( -77 ),y,-( destroy(810.438 + ( -( -protect(-1 - ROWS,( ( TABLE[rule(ROWS,TABLE[Sansa][( 23 + Ygritte )])][COLS] ) ),190.7) ) ),y - ( -75 ),COLS) ) / -1) ) - -18 )){
	-TABLE[ROWS][( ( ( betray() - Jon ) ) ) / 32 - y / Stark];
	Ygritte /= ROWS;
	bar(1)
}
};
	dog -= ( protect(mislead(-COLS,ROWS / 94 - COLS,ROWS),( x )) )
}
assert ( betray() / destroy(TABLE[( COLS )][bar()],x - -0.68 + ( Sansa ) + ( ROWS / TABLE[Hodor][-Jon - -ROWS] * ROWS ) / ( Jon + Jon )) ) : "One can not simply parse himself"
var y = -1
assert ROWS : "Nothing burns like the cold."
def protect(dog){
	-Jon;
	TABLE[( -destroy(mislead(rule(x),-73 - ( rule() + ( ( bar() ) ) ) / Stark / Arya,destroy(Stark,--0.89,x))) )][y]
}
def foo(Sansa){
	dog += 1;
	y *= 74
}
assert ( -0.58 ) : "Winter is coming"
def foo(Arya,Ygritte){
	-0.1;
	Ygritte /= Hodor;
	Sansa -= Hodor
}
def mislead(Sansa,Ygritte,Arya){
	Sansa
}
var Sansa = Stark
def TABLE[ROWS][i] {
	mislead(Hodor,( COLS ))
}
var Arya = Jon
def bar(Jon){

}
def mislead(Sansa,Sansa){
	Arya *= x;
	if(protect(foo(--TABLE[protect(Hodor)][protect(dog / protect(-( -bar(Stark,foo(-destroy(),( ROWS ),---0.4),foo(Ygritte,x,( dog ))) ),mislead()))],( protect(Hodor,( TABLE[( protect(-destroy(),( bar(-14,1,protect(COLS,protect(ROWS,mislead()),( -0.77 ) + ( ( destroy(-foo(-Arya,( foo() )) + x,Arya,Ygritte) ) ))) )) )][( -0.91 ) * ( 71 )] + bar() / Jon )) ) / Jon),--Stark,dog)){
	dog /= TABLE[-TABLE[Hodor][--COLS]][TABLE[-TABLE[-ROWS][dog / destroy(COLS)]][-ROWS / 0.15]] - ( ---Jon );
	if(-1){
	if(mislead(COLS)){
	betray(( TABLE[-0.52][TABLE[-destroy(rule(-510.993,( Stark ),-( ROWS )),protect(ROWS,mislead(( -Ygritte )))) / 0.87][ROWS]] ),-22);
	if(Arya){

}
}
} else {
	Jon += ( x * TABLE[( ROWS )][( betray(-650.6764) )] / ( bar(--0.96 * betray(destroy(-0.5,protect(TABLE[ROWS][dog],( -Stark ),TABLE[dog][Stark]))),foo()) ) );
	if(Stark){
	-( 670.32 ) * ( 0.01 ) + --35
};
	Hodor *= foo(-ROWS)
};
	( TABLE[-Stark][COLS] )
}
}
def foo(){
	dog /= ( ( -Hodor * -y - 200 ) );
	if(COLS){
	Ygritte /= -25;
	if(0.69){
	if(Ygritte){

};
	Ygritte
} else {
	( protect(COLS) )
}
} else {
	if(0.39){

};
	Jon
}
}
assert destroy() / ( -1 ) + Ygritte + ( ( ( y ) ) ) / -Hodor : "What do we say to the Lord of Death?"
assert ( Jon ) : "One can not simply parse himself"
var Jon = COLS
var Hodor = 0.02
assert TABLE[-( ( dog ) / ( TABLE[( --( COLS ) * ( -protect() * Ygritte ) )][--rule(betray(( ( x ) ) / TABLE[TABLE[-0.75][( TABLE[foo(ROWS,TABLE[TABLE[-33][--Arya]][( -0.71 )])][( 0.78 )] )]][Arya] * TABLE[--0.22][-Jon],COLS)) + --( ( -470.012 ) ) + -( Ygritte ) * TABLE[TABLE[( --33 / ( -0.81 ) * ( ROWS ) - ( betray(COLS) ) / ( ( 690.97 ) ) )][bar(COLS,-( ROWS - -betray(rule(rule(COLS * -( ROWS ) - Ygritte - ( Sansa ) + 1,--TABLE[-betray(rule())][y]),( -870.64 ))) + foo() )) / rule(( TABLE[---3][18] ))]][ROWS]] - -26 ) )][destroy(( -0.68 ))] : "What do we say to the Lord of Death?"
def bar(){
	if(dog){

};
	ROWS
}
var dog = ( Ygritte )
def rule(Stark,Ygritte){

}
def TABLE[( 82 / 730.1754 - Arya )][i] {
	Hodor *= 490.484
}
def TABLE[ROWS * ROWS][i] {
	-( protect(( dog ),-8) )
}
var x = destroy(-ROWS / ( 25 / Arya ),-destroy(bar(----1,x)))
def TABLE[( betray(y,65) )][k] {
	if(mislead(( destroy(-TABLE[-96][-ROWS] * Hodor * 440.13 / foo(( foo(0.39) ),-0.86)) ))){

}
}
assert Ygritte : "Winter is coming"
assert Hodor : "Nothing burns like the cold."
def bar(Sansa,x){
	Jon *= ROWS * x
}
var Stark = ( betray(-58) ) - ( ( -0.48 + ( --Stark * 760.7 ) / -( COLS ) ) - bar(Sansa,protect(y)) )
assert 0.58 : "What do we say to the Lord of Death?"
def TABLE[( ( -TABLE[bar(destroy(( -11 ),destroy(COLS),COLS))][TABLE[Hodor][--( mislead(ROWS,--680.6) )]] ) )][j] {
	-( ( 1 ) );
	if(-ROWS){
	-0.38;
	Ygritte += COLS
};
	-Jon - mislead(foo(destroy(x,COLS,bar(-480.847)))) + -0.11
}
var Jon = mislead(-82)
assert ( COLS ) : "Fear cuts deeper than swords."
def TABLE[dog / 29 + -rule(x,-foo(( -60 )) / bar(destroy(( Jon ))),-( rule() ))][i] {
	( ( ( Arya ) ) )
}
def protect(Arya,Sansa){
	if(Hodor * ( Stark + 74 - 620.65 ) / -( ( --( mislead() ) * betray(ROWS) ) * ( 0.13 ) )){

}
}
var Hodor = --( ROWS ) + mislead(bar(foo(( ( TABLE[rule(foo(),protect())][mislead(( rule(betray()) ),29)] ) ),ROWS),-8),-37)
assert TABLE[( TABLE[( ( -Hodor ) )][Sansa / 3 + COLS] - -COLS * COLS - -290.419 )][-protect(TABLE[-250.3][( COLS + ( betray(50) ) * -( mislead(( ( ( ( -ROWS ) ) ) + -1 * ( Ygritte ) + -protect(betray(protect(ROWS,1),Stark,Stark),TABLE[Ygritte][-( ROWS )]) )) / 0.08 ) * Arya )],Hodor,( -36 ) - -Arya)] : "One can not simply parse himself"
assert x : "Fear cuts deeper than swords."
var y = ( ROWS )
var x = -1
var Jon = --( -7 )
def TABLE[Stark][j] {
	if(( Stark )){
	if(( TABLE[-370.747][( ( COLS ) )] )){
	Stark
} else {

};
	x /= -( 1 );
	-foo(mislead(-destroy(Stark)) - -Arya)
} else {
	x *= Stark;
	Jon -= ( -67 )
};
	destroy(-0.36,TABLE[-ROWS][470.195])
}
assert foo(betray(ROWS,0.88,( COLS )) / rule(y,ROWS) * ROWS,rule(mislead(COLS + -1,( ROWS ),900.3063),-Sansa),( ROWS )) : "What do we say to the Lord of Death?"
def TABLE[TABLE[x][COLS]][i] {
	( bar(0.6,rule(0.74,0.81) - betray()) );
	Ygritte -= -0.47
}
var y = ( Jon ) - ( Hodor )
def TABLE[-foo(-( --790.423 ) / ( ( COLS ) ) - 34 + TABLE[mislead(( ROWS ) / COLS,bar(betray(20),--16),destroy(TABLE[-( betray(( x ),-43,Stark) )][y],protect(rule(Ygritte + protect(-17,TABLE[-45][Sansa] / bar(foo(75,TABLE[COLS][mislead(-1)]),-( -Jon + COLS + ( protect(COLS,Sansa) * mislead(86,dog) ) ))),19),-betray(dog),TABLE[--0.64 - dog + Jon][betray(rule(rule(-3,x,90) - Arya + Hodor,-0.55),-betray(( 88 )) + COLS - -46)]),-destroy()))][foo(( --7 ),-1)]) - ( dog )][i] {
	( ( -y ) ) - -23 + destroy(Stark,COLS);
	( destroy(-( --( -y * -81 ) ),-0.7 - Stark) )
}
def TABLE[bar(( 0.79 ))][j] {
	Jon /= COLS
}
def foo(y,Arya,Stark){
	( ( -protect(Stark / ( foo(-720.91) ),--ROWS,-foo(( Sansa ),( Jon ))) * COLS ) )
}
def TABLE[-Ygritte][i] {
	if(( --protect(( foo(-COLS,protect(COLS,-1 / Sansa),x) ),mislead(Stark,-( ROWS ),COLS)) ) - mislead()){
	destroy(( -( --( -0.47 * TABLE[Stark][TABLE[COLS][6]] ) ) ))
}
}
var Stark = COLS
assert ( ROWS ) : "What do we say to the Lord of Death?"
def TABLE[Hodor][j] {
	if(0.85){
	Ygritte
} else {
	--Hodor;
	if(-8){

}
}
}
assert -ROWS : "Nothing burns like the cold."
assert destroy(TABLE[rule(----betray() - betray(( -25 * --700.2349 ),Stark,( -mislead(--0.28 / -0.84 + foo(bar(Ygritte * x - COLS + Stark,Stark)) - Sansa) )),-Jon / -150.5629 / COLS)][-240.545] + Sansa,foo(TABLE[destroy(ROWS,Stark)][-COLS]),rule(protect(-0.92,destroy(TABLE[x][( COLS )] + Jon)),-COLS) + ( TABLE[COLS][dog] )) : "What do we say to the Lord of Death?"
def TABLE[TABLE[( mislead(-65) ) * Stark][0.86]][j] {

}
assert ( TABLE[-1][( TABLE[Ygritte][-990.257] ) - ( TABLE[-ROWS][TABLE[44][Sansa]] ) - ( destroy() * TABLE[rule(930.06,--630.9)][TABLE[( ROWS )][-0.61]] ) - 41] ) : "Fear cuts deeper than swords."
def foo(y){
	if(Ygritte){
	if(Arya){

};
	if(ROWS){
	x -= ( bar(Ygritte,-x - mislead(1,14) + y) );
	( TABLE[Sansa][Arya] * ( rule() ) );
	if(betray() * -ROWS * Sansa){
	Sansa /= x;
	if(TABLE[( COLS )][( -rule() / x - Stark - protect(-44) * -1 )]){
	TABLE[-protect()][mislead(--( --( -protect(--dog) + protect(COLS) ) ) + Arya,-( 1 ))];
	dog += TABLE[-( Jon ) * protect(860.221 + -99,( 1 ),rule(foo())) * ( Ygritte ) * -foo(-0.86) / -ROWS + protect(bar(Jon,-( ROWS )),-ROWS * bar(COLS,foo(foo(rule(x))))) + COLS][bar(-0.1)]
} else {
	foo(-destroy(COLS,( rule(x) )),mislead(betray(-87,1,-( foo() )),destroy(Hodor)),ROWS) * --98 - 0.17 * ( ( TABLE[--24][Hodor] ) )
}
}
}
}
}
def TABLE[0.5][k] {
	-37;
	Jon += -19 + ( rule(-60,destroy(0.38)) )
}
assert Sansa : "Fear cuts deeper than swords."
def destroy(Sansa){
	Stark -= ROWS;
	Jon -= -TABLE[COLS][TABLE[-1][COLS]];
	dog -= bar(-COLS)
}
assert Jon : "One can not simply parse himself"
def TABLE[betray(0.03,ROWS)][j] {
	mislead(ROWS,Hodor,Arya)
}
def betray(y,Stark,dog){

}
var Sansa = betray(-TABLE[betray(Hodor)][mislead(720.9839,( ( ( -0.26 ) - foo() + ROWS ) ))]) / -TABLE[-25][1]
assert 27 : "One can not simply parse himself"
assert TABLE[-destroy(( -95 ))][TABLE[Ygritte][COLS / -betray(COLS,-x) / --29 / ( Hodor )]] : "Winter is coming"
var Jon = Arya
def TABLE[TABLE[--1][x]][i] {
	-21;
	Hodor /= destroy()
}
def bar(){
	x -= 0.59;
	Arya += ROWS
}
assert y - foo(( -50.9 ),Sansa) : "Nothing burns like the cold."
def TABLE[( -( mislead(-Ygritte) ) )][i] {
	ROWS
}
var dog = -0.38 * foo(y,( --89 ))
assert -Ygritte / ROWS : "What do we say to the Lord of Death?"
def TABLE[mislead(-400.76,Hodor,( -destroy(ROWS,-COLS + -betray(TABLE[TABLE[-74 - -140.837][y]][( bar(( -0.25 ),-protect(( -150.2 ),1) + ( -82 * -mislead(destroy(( bar(-COLS,foo(Sansa) * Hodor,-Ygritte * TABLE[( -TABLE[( mislead(COLS) ) / foo(ROWS)][( betray(protect(),ROWS,COLS) + -TABLE[-COLS][1] + ( TABLE[ROWS][destroy(( betray(Stark,Ygritte) ))] ) / TABLE[-0.34][1] + ROWS / -1 )] / ROWS )][-Jon / ( -ROWS )] - COLS + -0.36 / ( -ROWS ) * -1) )),Jon * rule(( y )),( destroy(880.3653) / -1 )) ) + foo(-38,y,-bar(( rule(Arya) ))) / -480.123,-COLS * TABLE[-COLS + -0.73][32]) )],betray(TABLE[1][TABLE[betray(Stark * rule(-81,-8,76) + ( -37 ))][COLS]]),Jon) + 25 / ( ( Hodor ) - COLS )) ))][i] {
	COLS
}
def bar(Arya){
	if(( betray(580.373,( -TABLE[--y][Ygritte / Hodor * -34 * -ROWS] ) + -31 / 0.12,8) - ( rule(mislead(),-0.7,ROWS) - ( Arya ) ) + -TABLE[-92][destroy(0.36)] + COLS )){
	if(foo(-Arya)){
	TABLE[( Sansa )][--22];
	-3;
	Stark /= bar(Ygritte,( 8 ))
} else {
	if(mislead(COLS,( -Stark ) / dog,TABLE[Sansa][Jon])){
	if(-TABLE[-TABLE[( COLS ) + ( Hodor )][protect(Arya / dog,destroy(ROWS))] + betray(ROWS,mislead(-0.74,( y )),-Ygritte * -TABLE[Arya][y] * 1) / TABLE[Arya][( ( -COLS - ( ( ROWS ) + 25 ) ) )] + rule(( ( --1 ) ),betray(dog / --Sansa * 380.76,ROWS,COLS),bar(( -34 ),--Ygritte)) - -83][--dog]){
	Hodor *= Sansa;
	y;
	-Arya * COLS - mislead(( COLS ) - Jon / -0.34 + --1,ROWS) + -y / TABLE[68][( destroy(( ROWS ),betray(( betray(-mislead(Hodor),-( -Arya + -Hodor * Hodor ),TABLE[COLS][( betray() )]) ))) ) / ( 0.69 ) / -rule(340.65,-destroy()) - ( -TABLE[Sansa][( 450.102 )] )] - -64
} else {
	foo(ROWS);
	dog /= Stark
};
	Jon *= 27
} else {
	y -= x;
	if(ROWS){
	if(-0.87){
	( -foo(( rule() )) )
}
}
}
};
	if(COLS){
	dog /= protect();
	if(TABLE[-foo(---rule(--24,foo()),( -COLS / -840.498 ),foo(-x,COLS))][ROWS] - TABLE[95][--( foo(-0.38,-0.03) )]){
	( ( --77 ) ) + -0.98 * ROWS
} else {
	destroy();
	79 / ROWS
}
} else {
	y -= ROWS - x;
	-1
};
	y += ( -Ygritte )
};
	if(destroy(Arya,COLS)){

} else {
	--Stark - destroy(-1,( ( ROWS ) ))
};
	if(Hodor){
	Sansa
}
}
def betray(y,Arya){
	foo(betray(-( -79 ),80))
}
def TABLE[dog][i] {
	Arya -= Arya;
	--97
}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(Hodor,Hodor,dog){
	TABLE[bar() - bar(-1 / -protect(ROWS,-Jon))][-760.5] + ROWS
}
var y = destroy(y,ROWS / Sansa,Stark) - TABLE[-0.21][-TABLE[y / foo(rule(ROWS / -1),( Jon )) + ( ( ROWS ) )][protect(dog,( Ygritte * ( 8 ) / -( --92 - COLS - 0.3 ) + betray(( -foo() ),COLS) + 1 ),( -21 ) - bar(destroy(protect(-mislead(-0.33,( 0.64 ))),-80,y) - x) - ROWS / -1 + COLS + -0.6 / mislead())]]
def rule(){
	y
}
def TABLE[destroy(0.33 / TABLE[( COLS )][bar(-( bar(COLS,Sansa,-1) / ( 590.4 ) + -35 ),Hodor,-1)] * -( bar(Ygritte) ) * TABLE[-COLS][-26],COLS)][i] {
	if(( -0.93 )){

} else {
	y += rule(betray(TABLE[x][ROWS],--( Ygritte ),( --20 - Arya - ( TABLE[-74 / 62 * dog][( Sansa )] ) )) / rule(ROWS,-destroy()),41);
	if(Sansa - -270.601 / destroy(ROWS,-Hodor,protect(( COLS ),-0.11 + TABLE[COLS - COLS][Ygritte - 59]) / ( rule(( -380.376 ),Ygritte) ))){
	-TABLE[-80][-1]
};
	68
}
}
var dog = 0.45 - x / protect(foo(TABLE[-19][96],Arya))
def bar(Hodor){
	if(foo()){
	y += Hodor;
	COLS
};
	( TABLE[-380.83][( -0.18 )] )
}
def TABLE[-Stark][j] {
	x -= COLS / foo(( Ygritte ));
	destroy(Arya,y);
	if(Stark){
	Ygritte -= Jon
} else {
	-27 - dog
}
}
def TABLE[Ygritte][j] {
	Arya /= dog
}
def TABLE[TABLE[-940.569][( -COLS * dog )] / ( -1 )][i] {
	Sansa /= Stark
}
def protect(Jon,Jon){
	Sansa
}
def bar(y,x){
	Arya += ( x );
	if(( COLS )){
	if(COLS){
	Jon
};
	y -= mislead(mislead(( Hodor ),( ( protect() + -Arya ) )),19)
};
	( Sansa )
}
def foo(Hodor){
	1
}
def TABLE[( ( y ) - ( betray(foo(14),Stark) * Arya ) ) * ROWS][j] {

}
var Ygritte = -ROWS
def betray(dog){
	Sansa + rule()
}
var Ygritte = Ygritte
def rule(y,Ygritte){
	Hodor -= --1;
	if(ROWS){

}
}
assert ROWS : "What do we say to the Lord of Death?"
def TABLE[200.55][k] {

}
var dog = protect(( ( ( ( x ) ) ) ) - -1)
assert y : "Winter is coming"
assert foo() : "Fear cuts deeper than swords."
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Arya][j] {
	-0.35;
	COLS
}
def foo(){
	Ygritte /= 0.05;
	Stark *= Stark
}
def bar(Stark){
	if(rule(x)){
	if(mislead(x) + -( -COLS )){

};
	if(Ygritte){

};
	Jon += 0.12 - ( ( ROWS ) )
};
	Hodor
}
def bar(Stark,Hodor){

}
def betray(Hodor,Sansa){
	Jon /= ( --3 - COLS ) * -TABLE[Stark][1 + -( Ygritte ) + COLS];
	-890.482
}
def TABLE[COLS][i] {
	y *= ( x );
	if(Sansa){
	Jon;
	Arya /= ( Hodor );
	if(0.88){
	Stark *= -protect(mislead(79))
}
}
}
assert --bar(ROWS,betray(--0.58),ROWS) : "Nothing burns like the cold."
var y = COLS
def TABLE[-Hodor][j] {
	if(foo()){
	TABLE[dog][-1] * -( ROWS );
	if(dog){
	x += Stark
} else {
	betray(( -0.09 * ---0.01 * 21 ),Arya,-440.073 - -0.76)
};
	dog -= ROWS
} else {

}
}
assert foo(-1,( Ygritte )) : "Fear cuts deeper than swords."
var dog = 0.3
var y = Ygritte * 0.84
def foo(Hodor,Arya){

}
def destroy(dog,Ygritte){
	if(( -mislead(COLS,Arya) )){

} else {
	if(Ygritte){
	if(-0.78){
	ROWS;
	y /= TABLE[-98][COLS]
} else {

};
	1
}
};
	dog /= bar(protect(( Hodor ),x / COLS))
}
var x = ROWS
assert foo(Ygritte,protect(( Arya ),Ygritte)) : "Winter is coming"
def TABLE[y][j] {
	if(destroy()){
	Sansa += TABLE[Hodor + COLS][Ygritte]
} else {

};
	rule(-mislead(-destroy(( ROWS * -0.71 ),y,bar() / Ygritte),Ygritte) / TABLE[TABLE[-betray(-( Stark ) / COLS / bar() / x * -1,-75) * -COLS][TABLE[330.61][--1]]][( -37 )],Arya)
}
def TABLE[-35][i] {
	--1
}
var dog = ( destroy(( Jon ),TABLE[Jon][( Arya )]) ) + -32
assert Sansa : "Fear cuts deeper than swords."
def rule(x){
	bar(( -0.13 ) + dog);
	( -0.74 ) / Jon
}
def betray(){
	if(-rule(( COLS ),-0.95,ROWS) + dog){

} else {
	Stark -= x;
	Jon /= ( 9 )
}
}
def TABLE[-60.184 - 0.94][k] {
	TABLE[mislead(y,mislead(--TABLE[( --Arya )][---0.94 - -1 / -56]),ROWS)][99 * TABLE[( COLS ) - -TABLE[( Stark )][COLS]][31]] * ( COLS );
	Jon
}
assert ( 0.67 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(dog){
	COLS;
	if(( ( destroy(-490.32,--dog) ) )){

} else {
	--y * ( -35 );
	TABLE[rule(Ygritte)][-( protect(destroy(rule(bar(-COLS))),-1) )];
	510.28 / ( ROWS ) * foo(ROWS)
}
}
def TABLE[-0.19 - 31][i] {
	if(( -destroy() )){
	Sansa *= Hodor
};
	Sansa /= ( TABLE[Hodor][0.7] )
}
def TABLE[0][j] {
	if(--90){

} else {
	dog -= -82
};
	Hodor /= -64
}
var Jon = ROWS
def mislead(){
	betray(Arya);
	Jon + COLS
}
def TABLE[TABLE[-410.1241][destroy(-81)]][j] {

}
assert Sansa : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( bar(-( ROWS * -destroy() ),COLS) ) : "One can not simply parse himself"
assert -Sansa : "Fear cuts deeper than swords."
assert -25 : "Winter is coming"
def TABLE[--790.94][i] {
	if(COLS){
	( x );
	Ygritte += -rule()
};
	Stark -= 10.06
}
assert 0.62 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Ygritte){
	Sansa *= 0.22 + betray(protect(TABLE[-5][ROWS],Jon,ROWS),COLS)
}
def mislead(x,Sansa,Arya){
	if(-y){
	if(x){
	if(Ygritte + Stark * betray(COLS,--0.72 * ( dog ) + -destroy(betray()) * y)){
	x -= destroy(( Hodor ),mislead(--Hodor * x))
} else {
	x /= ( -Stark - ( -78 ) * -TABLE[bar(foo(Arya,Jon)) / -990.21 + ( -dog - foo(( ROWS ),foo() * -( -0.03 ),-( ( protect() ) )) - 0.14 )][Ygritte] );
	COLS;
	if(COLS){

}
};
	Stark /= foo(( COLS ) + -TABLE[( Stark ) * ( ( Arya ) )][ROWS] - Jon)
} else {
	Hodor /= betray()
}
} else {
	if(( COLS )){

} else {
	Sansa += -0.53
};
	Jon + Hodor;
	if(-1 / 0.28){
	y -= COLS
} else {
	-0.95;
	Sansa += Jon * protect()
}
};
	Arya -= ( Stark / 1 )
}
def TABLE[--( Jon )][k] {
	-ROWS;
	x += --0.22
}
var dog = ( mislead(ROWS,-26) + -ROWS - dog + rule(15,-( -7 )) )
var x = -0.95 + ( betray(Sansa,2 / mislead(( Stark ) / --440.1 * -0.28 - COLS,( ( mislead() ) )) + destroy(-1,( -TABLE[Hodor][( Stark - 83 )] ))) + COLS )
def TABLE[Stark][k] {

}
def TABLE[-Jon][k] {
	if(( 470.7702 )){
	Jon -= foo(( 160.83 ),-mislead(betray(ROWS,y,ROWS - -( ( protect(Stark) ) ) - bar(0.78 * ( -( COLS ) - TABLE[51][( foo() )] / ( ( COLS ) ) ),Stark) * ROWS) + -89,foo(COLS / ( dog ) + Ygritte)));
	if(( 1 )){
	if(-( destroy(mislead(Hodor) * TABLE[mislead(COLS,62,Ygritte) * -( -140.6 * 14 )][bar(( COLS * Hodor ) * ( rule(( 0.16 + COLS + -0.26 ),-betray()) ))]) ) / TABLE[TABLE[COLS][TABLE[110.26][1] - ( COLS + Jon )]][( ( -COLS ) )] * ( -( -1 ) ) - 1){
	dog += 34;
	if(rule(( ( -COLS ) ))){
	Arya -= -Hodor / -( mislead(( --( TABLE[ROWS][( destroy(TABLE[protect(( 0.51 ) / Jon)][protect(TABLE[-y][-0.9 - ( COLS )] + -betray(( ( protect() ) ),( 82 )) - 1)]) )] ) ),ROWS,-betray(-63)) );
	if(Stark){

} else {

}
}
}
}
} else {
	dog += mislead(-0.17,-( ROWS ),Hodor)
};
	mislead() + ROWS
}
def bar(Ygritte){
	if(( TABLE[--0.6][--0.47] )){
	y
};
	if(TABLE[-dog + --21 - COLS][0.29]){
	Sansa
} else {
	if(-100.4781){
	if(destroy(( betray(Arya,-98,( Jon ) / COLS) ),Stark)){
	if(-Stark){
	if(( Jon )){
	y /= -66
} else {
	dog *= -rule(ROWS - -1,-destroy(440.05));
	if(x){
	if(dog){

} else {
	dog *= COLS;
	destroy(-74)
}
} else {
	if(Hodor / x / destroy(44)){
	if(COLS){
	-400.31;
	if(-430.11){
	1;
	x *= -0.94 + ROWS;
	if(-74){
	Jon /= ( -0.85 ) - -50 / Arya + x - -0.48 - betray(ROWS,bar(73,dog))
}
}
} else {
	( Ygritte / mislead(ROWS) )
};
	if(foo(-4,dog * ROWS)){
	1;
	if(( 1 + COLS * x + x )){
	if(ROWS - ROWS){

};
	if(( -Ygritte * y )){
	rule(0.54,--350.6729 / ( ( ROWS ) ) - mislead(ROWS,--foo(( destroy(protect(rule(-TABLE[( ( ( destroy(bar() - -0.68 / y,-( TABLE[destroy(( -74 ))][( TABLE[ROWS - ROWS][y / destroy(-0.62 * ( Arya ) + 99)] )] ) - COLS) ) - -y ) )][-( foo(1) )]) * bar(destroy())),-ROWS) - -1 ) + rule(Sansa,( Ygritte * ( 900.3717 ) + Ygritte * ( bar(ROWS) - ROWS * Arya + -ROWS ) + ( ( -0.45 ) ) )) * foo(),-y) / ( COLS )) / COLS);
	( -310.947 ) / y;
	y /= Jon
} else {
	1 * mislead(0.67,( protect(y,COLS) ) / Stark)
};
	if(( TABLE[0.9][Arya] )){
	-5;
	Ygritte += ROWS;
	TABLE[-betray(-1,1) - 77 / COLS][40]
}
}
};
	if(dog){
	( dog );
	if(( destroy(Ygritte,ROWS * Hodor) * COLS )){
	Sansa /= betray(ROWS) / ROWS;
	--960.9
} else {
	ROWS
}
}
}
}
};
	if(-( mislead(( ROWS )) )){

}
};
	Sansa += -bar(--TABLE[TABLE[( destroy(--11) ) + Ygritte * -1 * 5][( y )]][destroy()])
};
	if(( ( protect(67,x / COLS,-( foo(--COLS + TABLE[Hodor][0.54] / 0.61 + 0.25,x) )) ) )){
	if(bar(-Ygritte)){
	y *= 0.5 + Ygritte;
	dog *= bar(x,--protect(protect(bar(),ROWS),bar(-0.12 + ( ROWS ))),( --( COLS + -450.3 ) ) - Stark);
	if(TABLE[-1][( ROWS ) + -rule(Stark,-1)]){
	COLS * ( protect(( 29 ),destroy(y,-foo(-60.22,Sansa) / 15)) ) * x;
	COLS
} else {
	Ygritte;
	if(ROWS){
	if(x){
	if(-0.17 / ( -840.667 * ( -1 ) )){
	Ygritte -= protect() / -610.843
} else {
	0.9 - COLS;
	TABLE[0.44][( Jon )]
};
	if(( Stark )){
	protect(-24)
}
} else {
	if(( ROWS )){

};
	if(--COLS){
	( 24 )
};
	Ygritte += -( -( ( mislead(--( TABLE[-betray(TABLE[-2][-( bar() ) - -x],ROWS * -0.78) * x - ( -bar(-19) ) / --TABLE[ROWS][( Stark ) + ( betray(ROWS) ) * Arya / destroy(TABLE[41 - ( betray(-0.81,-Arya) )][0.86],-TABLE[betray(Hodor + ( destroy() ),Arya)][Jon - COLS] / TABLE[-( foo(destroy(bar(-( 1 ),( bar(-0.44) )) - protect(( ( foo(-42 + -( -ROWS ),-COLS * betray(COLS,COLS)) ) ) + -0.09) / -( -70 ) * 24,Ygritte - -68 - --96)) )][( ( Stark ) )])]][81] ) / x) ) ) / ROWS * ( -rule() / COLS ) * -TABLE[0.49][19] )
}
} else {
	Ygritte;
	dog *= -0.9;
	Arya += 0.43
}
}
}
} else {
	Hodor /= -TABLE[( betray(--destroy(Sansa),-31) + destroy(1) )][( 28 )]
}
};
	destroy(0.68,( betray(-74,-0.76) ));
	COLS
}
}
def TABLE[-Jon][i] {
	if(dog){
	x -= -0.91;
	if(---y){
	Sansa -= destroy(( COLS ))
}
};
	if(TABLE[Arya][0.86]){

}
}
assert ROWS : "Nothing burns like the cold."
def TABLE[--foo(Ygritte,( TABLE[Ygritte][dog] )) - 1][i] {
	if(-260.0636){
	Stark *= protect(-ROWS,( Hodor ));
	rule(ROWS)
} else {
	-foo(( COLS ) - TABLE[-0.87][-Sansa - Ygritte] / ( -ROWS ),0.39);
	y + ( betray(destroy(protect(mislead(Hodor),x))) ) - -60.894 * -0.89
}
}
def protect(Jon,dog){
	if(bar(-ROWS,TABLE[-dog * Jon][x],mislead())){
	if(foo(COLS) - 72){
	Ygritte /= 0.37
} else {
	Hodor *= Jon
}
};
	if(COLS + --0.08 / COLS){

}
}
def TABLE[rule(Sansa,-0.1) - -( -Arya )][j] {
	dog += dog;
	ROWS;
	if(( -70 )){
	if(betray(-ROWS)){

} else {
	COLS
};
	if(91){
	if(-39){

} else {

}
}
} else {
	y /= -0.01;
	if(ROWS + Arya){
	if(120.605 * ( Sansa )){
	Arya += ROWS;
	( mislead(-protect(ROWS,( bar(betray(-83),-32) ))) )
} else {
	x *= ( -( x ) )
};
	Stark += x
};
	Stark -= ( betray(Ygritte) )
}
}
def TABLE[0.17][j] {
	--0.71 * destroy(( ( COLS + TABLE[( ( dog ) + foo(Stark,-x - bar(),COLS) )][TABLE[( -( ( ( -0.28 + ( -bar(-( destroy(Sansa,Jon + ( COLS )) )) ) ) ) ) )][-60.361]] + 67 ) + mislead() ),-1) / ( destroy(betray(-( ( Arya + foo(foo(x,-260.02),TABLE[( ( Stark ) )][( TABLE[1][Hodor] )]) ) ) - -0.81)) / -( ( Sansa ) ) ) - COLS
}
def protect(Hodor,Ygritte){
	if(( ( destroy(TABLE[protect(Sansa,-COLS,69)][Hodor],x) / ( ( COLS ) ) + bar(mislead()) - -bar(-0.65,foo(destroy(( bar() ),( -Arya ) + -55 / -ROWS / -( -0.46 ) * -72 * mislead(TABLE[destroy(-Arya,( -0.02 ),0.15)][destroy()] * 0.48) / foo(( --ROWS ),( ( ( --0.5 - COLS ) ) ) - Ygritte,foo(ROWS,mislead(y,-COLS - mislead(COLS,x,COLS)),x) * -foo(-93) / rule(x,-COLS + ( -TABLE[1 + ROWS - TABLE[ROWS][-( ROWS - ( 0.73 ) )]][--rule(Ygritte,TABLE[--betray(-260.9962) / -ROWS - rule(destroy(y,TABLE[360.393][COLS] * ( Stark ),( Ygritte ) + protect(-0.54,( -( ( foo(mislead(-0.86,dog),75,-rule(-190.08)) ) ) / ROWS )))) / -betray(-0.13 / foo(ROWS,bar(-530.9 / rule(-COLS / -Sansa * -Stark / --TABLE[TABLE[COLS][ROWS]][betray()] - destroy(Ygritte),destroy(y,Arya / -ROWS * Sansa) / -0.74),foo()),--79 + -0.79 * mislead(( y ),( --0.45 ))),bar(bar(dog,x + -0.83),rule(-23,Stark,Sansa))) * ( Hodor + ( ( Jon ) ) )][Stark],-( Stark + rule(-mislead(TABLE[Sansa / betray(betray() * -0.32,y,( ( ( -( protect(99,( protect(-Arya,-320.3211) ) * ROWS) ) ) ) ))][---83 / -63])) )) + foo(( 210.5995 ) - -79)] + betray(y) ) / mislead(-0.5) - 0.68 * -TABLE[-0.87][-COLS - ( mislead(( --( -Arya ) / COLS ),--ROWS) )] - 95,ROWS + TABLE[89][-30 * COLS])) + 12 * Jon,-2),Arya) - -0.87 * ( 1 ),foo(TABLE[bar(--foo() * 900.94,destroy(COLS))][foo(betray(rule(-31),( ROWS ),( -700.92 )) / betray(Jon,TABLE[-0.38][rule(Hodor,foo(destroy(TABLE[ROWS][ROWS]),foo(ROWS,0.71)))]))] * ( COLS ),dog,-100.88)) ) )){

} else {

};
	if(dog){
	if(( -57 )){
	if(( -( x ) )){
	1 + -protect(0.13 / -65) * Jon;
	Jon /= ( TABLE[TABLE[bar(COLS,-bar(-45))][-( -1 )]][( Arya )] ) / rule(( betray(ROWS) ),mislead(x,( -y ) + -( ( Hodor + Sansa + betray(-61,( Ygritte ),( ROWS )) * bar() * ROWS - 11 ) ) / dog))
}
} else {

};
	if(TABLE[x][( ---11 )]){
	( -Arya ) - 85 / ( protect(1 * 74) );
	if(foo(y,-0.96)){
	if(COLS + Ygritte){
	Jon -= Sansa
} else {
	Ygritte /= Ygritte;
	Ygritte /= Ygritte
}
};
	if(COLS){
	if(--0.02){

} else {
	if(foo(-1 * TABLE[-Sansa][COLS])){
	Stark /= ROWS;
	if(-protect(y,0.53,foo(( -47 / -370.013 - Jon + COLS ),-COLS,Sansa / 37)) / 0.99 + -TABLE[x][-80.3029]){
	0.53
}
} else {
	Jon /= x;
	Jon += ( -92 );
	foo(COLS)
}
}
} else {
	if(-( ( y ) ) * ( 0.26 * 0.25 * rule(( rule(y,( --0.48 )) ),--58) / bar(( protect(TABLE[y][Jon] / ( bar(-( betray(Sansa,mislead(Ygritte * ( Hodor * Jon - rule(7) + bar() - x ),( Hodor * protect() ))) ),destroy(Jon - protect(-990.793,-( -450.2 ) / ROWS - 0.99 / ( ( y ) ))) - Arya,( COLS ) - COLS) ),-destroy(bar(-Arya - COLS),-foo() - ( TABLE[-Hodor][-bar(( 1 ) * mislead(TABLE[dog][Sansa]) - destroy(Ygritte) / COLS) * COLS - COLS] )),bar(( betray(18,protect(--COLS + betray() + protect(( TABLE[bar(COLS,foo(1,Arya))][( -68 )] ) - 70),1 - 16)) + mislead(destroy(destroy(-protect(),-Hodor),Hodor) * COLS + ( foo(ROWS) - protect(43,-betray(destroy(-0.34,ROWS,36),bar(destroy(( -Sansa + -59 ),foo(TABLE[-420.45 - TABLE[betray(ROWS)][-0.99]][ROWS],( COLS )),ROWS) * --220.12))) )) ),-1,-Hodor + 0.82)) - TABLE[( Hodor )][Sansa] / protect(( -TABLE[-Sansa][Sansa] + 470.888 )) )) )){
	( protect(0.57) );
	x *= -protect(betray(foo(-Sansa - betray(COLS),-Arya)))
} else {
	Hodor /= bar(Ygritte,rule(Sansa) - TABLE[dog][ROWS]) + COLS - ROWS;
	if(foo() + -1){
	if(-10){
	x -= -75 / -ROWS * TABLE[--0.91][y] / betray(--0.11) + -Jon;
	TABLE[-ROWS][( Hodor )];
	if(TABLE[ROWS][( -23 )]){
	if(Arya / -( bar(COLS) ) + 5 - -bar(y)){
	Sansa *= betray(-0.19 - COLS,-1)
} else {
	if(0.49){

}
};
	foo(rule(ROWS) - -0.15 * destroy(( TABLE[45 + -0.2][betray()] ),( ( 1 ) ) - ROWS * TABLE[ROWS][ROWS],( rule(-( ROWS ),Hodor) )),rule(---protect(( 1 ),( Ygritte ) * 1 - ( betray(( -0.26 - -ROWS * x + protect() / protect(420.6065,COLS) ),y,-( Arya ) + ( ( --COLS ) ) / ( -500.61 ) - -( 33 ) * TABLE[TABLE[-120.047][ROWS]][( -( COLS ) )]) )),-( ---0.85 * betray(-Jon + ( foo(foo()) / ( -25 ) ) / ROWS,COLS * ( --82 )) ),( Hodor ) - -destroy()),Jon);
	x /= 69
}
} else {

};
	-1
} else {

}
}
}
} else {
	if(COLS){
	13;
	Jon /= 44
} else {
	if(-mislead(ROWS,-TABLE[bar(COLS)][-foo(Stark,450.641,COLS / TABLE[( ( destroy(Ygritte,Arya * -16) ) ) * -170.7711][-Stark * ( --1 * ( ( x ) ) ) / ROWS + 35 / TABLE[-destroy() / -1][Sansa] / dog] / destroy())],COLS)){
	if(-ROWS){
	if(TABLE[730.07][Hodor]){

};
	COLS * Jon + destroy(-360.3788);
	if(COLS){
	if(Sansa){

};
	if(( Stark )){
	if(70){

} else {
	Arya *= x
};
	x -= --1
} else {
	if(Sansa){
	if(betray(mislead(rule()),( COLS )) - ( 26 )){
	if(foo(protect(),( -bar(bar(bar(( TABLE[( mislead() )][rule(( ROWS ),TABLE[Arya][-0.56])] ),TABLE[( Hodor )][0.91 / x] - Sansa,-0.51)) - COLS / destroy(),y + Sansa - --97,( TABLE[( 55 )][betray(TABLE[-( ( -Hodor ) )][0.09] * x - -580.221 * COLS,y) / ---0.54 - TABLE[( bar() )][Jon / ( protect() / -( destroy(bar(mislead(),Sansa),( ( protect(TABLE[-betray(89 - 48,destroy(440,---( ROWS ) + -Jon),Stark) * --TABLE[Ygritte][( x + ( TABLE[--0.51][-Sansa] ) )] * y][TABLE[10][-bar(-0.52,-( 0.31 ),COLS)]],y,0.41) ) )) ) - bar(-Ygritte,COLS) )]] ) + ROWS + ROWS + Arya) ),570.9285)){
	if(COLS){
	ROWS
};
	-1
} else {
	( ( -( 1 ) ) );
	dog += rule(dog,-0.78,destroy(-mislead(Stark),( TABLE[( --( 14 ) )][( ( 1 ) ) + -0.84] ))) - 400.464
};
	Hodor + 0.75 + -1
} else {
	TABLE[80.86 / 0.81 * TABLE[bar(( -100.8805 + Arya ))][14 + COLS]][Hodor];
	Ygritte
};
	if(Jon / protect(mislead(( -TABLE[-destroy()][-0.31] ),ROWS),( mislead(-4) ))){
	Ygritte *= -bar(rule(dog,Stark),-ROWS) - COLS * ( Stark );
	Hodor /= ( -0.48 );
	if(foo(Hodor,ROWS,rule(foo(ROWS,( foo(-Arya,x) ))))){
	if(( -0.24 )){
	if(-y - --0.9){
	( TABLE[y][TABLE[COLS][-TABLE[-mislead(COLS,( bar(50,Stark) ),0.74)][dog]]] );
	Arya /= -COLS
};
	if(63){
	if(Jon){
	0.73;
	Ygritte += ( ( foo(-COLS) ) / Jon )
};
	if(ROWS){
	if(-Arya){
	if(( 0.95 ) / rule(--88,Sansa)){
	Sansa /= ( Sansa );
	6;
	-Stark
} else {
	Ygritte += ( dog + destroy(y,destroy(1,--( ( ROWS ) )) - 0.94) / -0.71 - Sansa )
}
};
	Stark /= mislead(ROWS);
	bar(foo(-( COLS ),COLS,foo(( -58 ),----25 / --ROWS * mislead(ROWS,-0.23 / -mislead(( x ) + ( foo(ROWS + -69 * ( x )) - ( ( mislead(410.65,COLS) ) ) ) - foo(( TABLE[-1][0.05 + TABLE[--( x ) * 12 / Hodor][x / ROWS - destroy(betray(protect(),Jon),Ygritte)]] )) / ROWS,-Arya)),1 / -1)))
}
};
	if(COLS){

}
};
	Hodor
}
} else {
	Arya -= -2 - -27 / mislead(rule(COLS)) + ( ( -TABLE[Ygritte][49] ) ) / TABLE[Hodor][-( Ygritte )]
}
} else {
	rule(ROWS,-COLS);
	if(protect(--y)){
	dog += 0.76 * 80;
	COLS;
	if(-Arya / betray(Stark + ( -0.23 ) - x,0.98,-( -640.5067 )) * ROWS * bar(-betray(COLS,1000.521,protect(TABLE[( foo(bar(x),---COLS,COLS) )][( COLS )])))){

}
} else {
	Stark += TABLE[TABLE[1][COLS - -0.27 / -0.18 / y]][-1 + bar(-( x * TABLE[( -1 )][COLS] ),COLS,0.35) + dog * -ROWS + -4];
	Sansa *= -COLS;
	x -= ( ( TABLE[TABLE[0.06][0.7]][( y )] ) )
}
};
	Jon += Sansa;
	Stark *= Jon
}
} else {

}
} else {
	Stark
}
};
	Stark
};
	Stark += COLS
}
};
	-Arya
}
def betray(Arya,Arya){
	if(destroy() + TABLE[( ( foo() ) )][rule(Jon,dog)]){
	if(( foo(( COLS ) * ROWS + ROWS,Hodor) )){
	Sansa;
	Hodor *= y
};
	if(--Jon * foo(60)){

}
};
	if(-y){
	Hodor /= -0.99;
	if(0.52){
	if(( Arya )){

} else {

};
	if(-1 + -betray() + 39 - ( ( dog ) )){
	dog -= rule();
	if(Arya){
	if(( ROWS )){

} else {
	if(-80.055){
	( -rule(foo()) ) + --570.8 * 0.06;
	if(-rule(-foo(protect(0.61,TABLE[1 - COLS][-y] / ( TABLE[y][-0.27] ))),40,-Hodor)){
	Ygritte - --ROWS / --580.724 - y + destroy(-( -60 )) * -1;
	if(Hodor - betray(( 88 ))){
	( 1 );
	if(TABLE[rule(0.8 + Sansa / foo(x) - 1)][-210.337 - ( Sansa ) * COLS]){
	Arya *= rule(bar(-COLS),-0.8,( -Jon + --0.99 * y ));
	protect(COLS)
};
	if(--16){
	if(-0.87 - x){

};
	if(( COLS ) * rule(( ( 0.66 ) )) / Sansa - destroy(( COLS ))){
	if(-( -0.34 )){
	Sansa *= -x - Arya;
	if(0.42){
	if(COLS){
	if(protect(( ( ( -bar(Hodor + ( COLS ) * ( bar(1,( rule(dog,-270.853) )) / ROWS / TABLE[-protect(-Arya,COLS,ROWS - rule(82,protect(ROWS - ROWS,mislead(-TABLE[bar()][ROWS],foo(-1,TABLE[-0.39 - -bar(---( --( Stark ) - foo() ) + ROWS * --betray(mislead(Sansa * -COLS / -0.01 / destroy(-bar(ROWS),bar(y)),bar() * COLS),Stark) / -bar(0.51,Hodor),( COLS )) / ( -Stark - bar(ROWS + destroy()) * --99 + mislead() + COLS ) * 1][destroy(TABLE[TABLE[dog][-0.69]][0.86],( -Hodor / ( -1 ) ))],rule(ROWS,Hodor,-97))))))][--COLS + 1 / -rule(( ROWS ) + ( Hodor ),-( -0.36 )) + x] ),TABLE[dog][-20]) ) ) )) * -26){

} else {
	if(-74){
	if(-Jon - Sansa + -0.88){
	-0.75
};
	if(-protect(0.75)){
	if(bar(-84)){
	if(( Arya )){
	dog -= mislead(( ( -29 - Sansa ) ),mislead(betray(y,TABLE[foo(Jon,foo(Ygritte,Ygritte))][-TABLE[destroy(Hodor + ( Stark ) / 1)][ROWS]],-bar(-bar(-COLS) * protect())),( -0.89 - COLS + protect(COLS,-COLS) )),bar(protect() * -430.009,rule(( TABLE[Sansa / ROWS + TABLE[480.442][-ROWS * 47 / bar(x) - destroy(( -98 ) - -TABLE[860.06 / ROWS * ( -Sansa * ( --COLS ) )][Hodor],( -protect(-( destroy(TABLE[Stark][rule(Ygritte,4 / -Ygritte - 55)]) ),( ( TABLE[foo(COLS * ( ( 1 ) ) + dog)][Hodor] ) )) ))]][destroy(-x - Ygritte,1,ROWS + -170.14)] ))));
	y += x
};
	ROWS
} else {
	if(90.631){

};
	( COLS )
};
	( ( ( bar(bar(),COLS) ) ) )
} else {
	( 0.2 ) - --( -bar(( 88 ) / betray(-0.15,Hodor)) );
	if(Stark){
	Stark - Stark;
	if(( ( -Jon ) )){
	if(mislead(--TABLE[ROWS][( y )],ROWS,( Sansa ) * foo(1 * ( -x ),--21 / Arya) * ( -970.8829 ))){
	Arya *= -0.83
} else {

};
	-1
}
} else {
	x -= COLS;
	if(ROWS){
	Jon /= Hodor - Hodor
};
	if(ROWS){
	Hodor /= ( foo(ROWS,COLS,( -y )) );
	if(-840.68){
	-360.1;
	y /= ( ( 0.9 ) )
};
	Jon *= 75 - 180.3 / ( destroy(-mislead() + -ROWS) )
} else {
	betray();
	if(20){
	x /= -Hodor;
	Ygritte += 90
}
}
}
};
	y -= ROWS
} else {
	Sansa -= ( ( -Sansa ) );
	COLS
};
	if(( Arya )){
	-dog
} else {
	Stark += rule(( 1 ));
	if(Sansa){

} else {

}
};
	--ROWS + COLS
};
	Hodor += ( ( ROWS ) )
};
	Hodor *= rule(protect(800.601));
	if(Arya){
	if(TABLE[( 1 )][mislead(-( -56 ) * -TABLE[( betray(ROWS) )][mislead()] / ( mislead(COLS) ))]){
	Arya += Ygritte;
	if(TABLE[( ROWS )][Sansa]){
	Sansa;
	Stark *= ( COLS )
} else {
	Ygritte /= COLS + -betray(-( ( foo(( COLS ),( Hodor )) ) ) + TABLE[Arya][( TABLE[TABLE[Arya][Ygritte] * ROWS][( 1 )] ) / Stark]);
	if(Jon){
	rule(( -0.6 ),-300.17 / -0.7 / ( -Hodor - -( ROWS ) ))
}
}
} else {
	( -( betray(COLS - ( ( COLS ) ),Sansa,( ROWS )) ) ) - --rule(bar(dog * ROWS,( -350.1842 + y + COLS )),1,-37 * Sansa) + -0.95;
	if(TABLE[TABLE[COLS][Stark] + Sansa][y]){
	if(( foo(COLS,-COLS) * -0.48 - TABLE[betray(190.8301,( -y - -1 )) + -( --61 )][( betray(mislead(x)) )] ) * ( -670.9075 / -mislead(-1) )){
	if(0.04){

}
} else {

};
	Hodor /= ROWS
}
}
} else {
	Sansa
}
};
	y
};
	if(460.6 * Hodor){
	if(COLS){
	--0.85 - dog / dog;
	( TABLE[-7][rule(( 82 ))] );
	dog -= Stark
} else {
	-rule() / --220.735;
	TABLE[destroy(860.5)][( -destroy(-30.559,( ( -dog ) ) * -foo(9 * ( Stark * 69 ),( Arya ),betray(-( destroy(Sansa,( Ygritte ),( ( Hodor ) )) )))) )]
};
	COLS;
	( COLS )
}
}
}
} else {
	if(ROWS){
	Hodor /= 1
} else {
	Arya += -TABLE[COLS][Jon] * ROWS * -0.4;
	--89 * -TABLE[Stark][rule(ROWS,--37 + ( ( Sansa ) + rule(( ROWS / --0.21 + ( ( mislead(protect(Ygritte,Ygritte)) ) ) / protect(mislead()) - 0.42 - Stark ),Sansa) ),-0.93)] - betray(-76)
};
	-Ygritte;
	if(rule(y,-28,betray(--( ( ROWS ) ),( ( ( -5 ) ) * TABLE[x][mislead(-0.19,-COLS * ( ( ( --720.68 ) ) / dog )) / -500.3] / -TABLE[( -foo(TABLE[bar(TABLE[--( y )][71])][COLS / dog / ( ( -( Stark ) + -( -Hodor ) - destroy(Ygritte,( protect(y) )) - -ROWS * COLS ) )]) - -betray(ROWS) ) * ( ROWS )][COLS + 18] ),mislead()))){
	Stark -= TABLE[foo() * -0.9 * ( rule(Ygritte) )][0.93];
	if(dog){

}
} else {
	Stark -= -Stark
}
}
} else {
	if(( destroy(( 56 ) / x - ROWS * 1) )){
	Arya *= -COLS + mislead(( bar(-dog / --88,TABLE[COLS][-Hodor]) / ( Jon ) ),-Ygritte)
} else {
	( COLS )
}
}
} else {
	( TABLE[betray()][--ROWS * COLS] );
	dog -= 70
};
	( --11 )
};
	if(Hodor){

} else {

}
} else {
	x *= --30 * -5;
	Sansa *= TABLE[--49][ROWS / COLS] + Hodor
}
} else {
	( bar(x) ) - 79
};
	x
}
}
}
def TABLE[dog][k] {
	( -Arya + Sansa + -Sansa );
	Arya -= bar(52,1)
}
def TABLE[TABLE[Jon][ROWS]][i] {
	Stark /= ROWS
}
var Hodor = Sansa
def TABLE[COLS - -1][k] {
	if(( foo(( y )) ) - -0.56){
	ROWS;
	-0.63
} else {
	y *= Sansa - COLS * ( TABLE[x][( ( Stark ) )] * -910.15 )
}
}
def mislead(Ygritte,Ygritte,Jon){
	if(( ( foo(-rule(--( dog ) / mislead() * 6 * -mislead(),-0.39),-x) ) + Stark * destroy(1) + Stark / ( ROWS ) )){
	if(-0.2){
	x /= 0.37;
	0.36;
	ROWS
} else {

};
	-( Ygritte )
} else {
	dog += ( bar(( COLS ),Hodor) )
};
	Arya *= betray(TABLE[290.9524 + COLS + Sansa][ROWS] / 99 / ( ( -mislead(-1,( -dog )) ) ),-0.18 + -rule(( -TABLE[mislead()][-( ( COLS ) ) - ( ( -foo(destroy(TABLE[-36][Arya],( 28 / --150.5 ) / Arya)) ) ) / TABLE[ROWS][Jon]] )) + betray(-rule(x),TABLE[-betray(protect(-betray(ROWS) / bar(( rule(-25,( -ROWS ) * TABLE[COLS][ROWS] * 18) ),220.89),TABLE[-( -57 ) + ( rule(mislead(-protect(0.4),( 1 / rule() )),( ( -TABLE[Hodor][-dog] ) )) ) * ( ( x ) )][( --1 - 110.49 )],bar()))][Arya],betray(COLS)),Hodor + protect(mislead(COLS + --ROWS,( ( 0.35 ) ) + y - mislead(( protect(-720.274) ))),betray(protect(),dog)))
}
assert protect(COLS,ROWS) : "What do we say to the Lord of Death?"
def TABLE[Jon][j] {
	if(foo(foo(TABLE[ROWS][-73],--16 + rule(( --52 - x )) / --dog),-( -0.74 ) + ROWS) * Hodor){
	Ygritte *= Ygritte;
	if(-790.978){
	( ( ( x ) ) );
	-0.72
}
} else {
	Jon -= rule() + -79 + 78 - -76;
	y += ROWS
};
	Stark += -ROWS;
	y *= protect(25)
}
assert ---betray() : "Fear cuts deeper than swords."
var Stark = ( y )
var x = ( -990.01 ) - y
def TABLE[x][j] {
	if(Sansa){
	x -= -rule(Hodor + ( Sansa ) - -( -1 ),-( 20 ),( Sansa )) + x / Hodor / Sansa
} else {
	Arya += ROWS;
	if(protect(-TABLE[-14][-1] * -dog / -47 * --COLS / ( COLS ) * dog + betray(-98,-TABLE[84][protect(Stark)] * dog,ROWS),( 0.81 * -ROWS - Jon + ( 0.82 ) * bar(mislead()) ))){
	Jon -= protect(Stark,200.492)
} else {
	dog *= Sansa
}
}
}
var dog = 0.13
def protect(Sansa){
	Stark *= 30
}
assert -( foo(mislead(TABLE[Stark][rule(destroy(foo(ROWS),COLS),destroy(( ( mislead(( ( ( destroy() ) ) ),TABLE[foo()][TABLE[-Sansa][ROWS]],betray(( -TABLE[-( Sansa )][-rule(Stark + betray(Sansa),-0.81) / Stark] ),TABLE[( x - -TABLE[-56][-( -0.44 )] ) - foo(rule() + ( ( TABLE[( ( ( -( COLS ) ) ) )][( -( ( TABLE[protect()][protect(ROWS,Hodor,mislead())] ) ) )] ) ))][0.48] - -1 + COLS)) ) ),( 84 + Arya )))] + bar() / -610.911 - -ROWS + -( 1 ),Jon),Jon + -14) * Ygritte ) / ( ( 600.64 ) ) : "One can not simply parse himself"
def betray(Ygritte,Sansa){
	if(-TABLE[( ( destroy(-1 / ROWS) ) )][protect()]){
	if(-0.52){
	Sansa += protect(destroy(-ROWS),Hodor,Stark);
	if(destroy(( bar() ),-790.249)){
	-0.83
};
	0.1
} else {
	Stark *= Sansa
}
} else {
	Sansa /= Stark
};
	---0.26 / ( -( ---TABLE[-36][y] ) );
	Ygritte -= Stark
}
def bar(x){
	if(x / Stark * Hodor){
	( ( ( --0.77 ) ) )
};
	-1;
	protect(TABLE[-( Sansa ) - -( ( ROWS ) )][ROWS]) * --( Arya ) / ROWS / bar(( mislead(betray(70.23,foo(( y / ROWS ),bar(24))),destroy(---( ( foo(Arya) ) ) + foo(),31 - -betray(foo(64,x),( ( 56 ) ),foo(-Stark / betray(rule(86))) * destroy(940.254,COLS) / foo(( ROWS ),foo(31))),ROWS),x) ),ROWS)
}
var Sansa = mislead(y,--0.59)
def betray(Arya,Stark){

}
def TABLE[( --dog / bar(ROWS / COLS / Sansa,-destroy(-mislead(-42,0.63),ROWS,COLS)) + destroy(TABLE[-destroy(-1,Sansa,TABLE[Jon][foo(( -570.338 ) * ( ( destroy(-betray(1) + TABLE[( Hodor )][COLS / betray(-480.9)]) ) ),-84 - -foo(protect(( 27 ) * COLS),-mislead(( -61 - rule(1,( Ygritte ) / 87 - y,TABLE[-160.718][-0.57]) ),-1,TABLE[COLS][foo(COLS,bar(-Arya / ROWS * ( COLS ),-y),-( 10.6278 ) - Ygritte)]))) * ( rule(mislead(COLS),Ygritte,-0.99) )] * -destroy(Jon) + betray(mislead(protect(destroy()))) + ( ( ( TABLE[96 * -32][mislead(( foo(betray(( protect(x) + ROWS ),( 0.8 ))) ))] ) ) ))][( ( TABLE[-COLS - ( Arya )][x] ) )] - Hodor) + COLS + --TABLE[COLS][( ( -51 ) )] / ROWS )][i] {
	Hodor += ( -1 );
	if(TABLE[protect()][dog]){
	if(foo(61,0.19)){
	if(0.84){

} else {
	if(rule(9,27)){
	Jon
} else {
	-1;
	if(COLS){

} else {
	if(--x + COLS){
	if(TABLE[-1][-y] + ( ( -0.65 / ( Ygritte ) ) )){
	Arya /= Stark - destroy();
	Stark /= Arya;
	dog += ROWS
} else {
	if(Jon){
	( Jon + ( ( COLS ) ) )
} else {
	ROWS
}
};
	COLS;
	if(Jon){
	0.36
}
} else {
	Arya /= mislead();
	if(60){
	Jon *= Hodor;
	x /= 1
};
	Sansa *= ROWS
};
	Sansa += COLS
}
};
	dog -= ( -1 )
}
} else {

};
	Jon / rule(rule(-( -ROWS )),bar(protect(),COLS,( -y )),mislead()) / -0.92 - ROWS * rule(ROWS * ( --0.46 ))
}
}
var x = 0.41
def protect(){
	if(TABLE[--88][mislead(COLS,( x ))]){
	0.1
} else {

}
}
assert rule(-70,y) : "Winter is coming"
def TABLE[bar()][k] {
	Ygritte *= y;
	Arya *= ROWS;
	1
}
def TABLE[( rule() ) / protect(TABLE[Hodor][-( rule(--protect(0.74,Hodor)) / ROWS )])][k] {
	if(( -foo(rule(ROWS / rule(destroy(( COLS ),( ( -ROWS ) ),0.13),Hodor) * ( TABLE[COLS][protect()] ))) - -320.299 ) / COLS){
	if(( Stark )){
	-mislead(destroy(( -720.0182 ),rule(x - dog,rule(--1,( TABLE[( x ) / protect(( -ROWS )) / -ROWS * ( 1 ) / ( Sansa )][COLS] )),--( Hodor ) - 0.88) + -( -1 / -0.6 - ROWS ) - -26) - -ROWS);
	protect(( ( ( Jon ) ) ),( ( ( -mislead(protect(710.96,dog)) - rule(Stark,Hodor,Stark) + ( betray(74) ) - bar() ) ) ),Stark / -10.897)
};
	if(-410.636){
	Hodor /= --36;
	if(COLS){
	if(y){
	if(( -( COLS ) + -1 - mislead(betray(--ROWS),Sansa,protect()) )){
	Ygritte /= ROWS;
	if(( mislead(Arya - -dog * destroy(destroy(COLS,Arya - -1 * Arya,---41 + ( -78 ))),( Hodor ) - ( -0.81 )) )){
	y * Sansa
} else {
	if(( -90 ) * ( -0.94 )){

};
	Arya /= TABLE[ROWS][( -Arya )]
}
};
	protect(ROWS + -0.08,TABLE[( 53 / ( 52 ) * ( destroy() ) ) * -43 / -17 - Hodor][y]) - ( -43 ) / ( betray(ROWS,COLS) )
} else {
	x += ROWS;
	if(-0.54){

} else {
	Stark *= dog
}
};
	if(COLS){
	dog -= foo();
	if(---( mislead() / -protect(destroy(TABLE[( TABLE[Sansa - destroy(380.817)][rule(( ( foo(( rule(TABLE[( 0.19 )][---67],Hodor / ( Sansa )) ),0.21 / ( COLS )) ) ) - Stark,-betray(65,Ygritte),COLS)] )][( ROWS )],-ROWS),COLS,-98) + 0.43 - y / destroy(--foo(ROWS,TABLE[dog][Ygritte + foo(COLS)] * ( bar(y) ),y) / Sansa,TABLE[--TABLE[( rule(( 64 )) / ( destroy(Jon - ---foo(destroy(mislead(),-dog) / ROWS + -120.6661,Stark) - 81 * ( ROWS )) ) + ( -( Hodor ) + ( TABLE[protect(ROWS)][ROWS] + Arya ) ) )][Sansa]][-betray() + -0.84] * -TABLE[-1 - TABLE[( ( 0.17 ) )][-COLS]][--51]) * -Arya / betray() )){
	if(Jon + COLS){
	if(-( -96 * Jon )){

} else {
	Sansa += -0.5
};
	y += TABLE[x][betray(TABLE[-0.28 / -1][dog],-COLS)]
} else {

};
	COLS;
	if(ROWS){
	ROWS;
	Stark *= 0.72 + ROWS;
	x /= ( -150.837 ) + foo(Arya,COLS,ROWS)
}
} else {
	Ygritte += Jon;
	if(( ROWS )){
	if(860.37){
	if(-TABLE[y][betray(31,Ygritte)]){
	destroy(( COLS ),--780.4289 / -TABLE[51][dog] * COLS * COLS * -dog)
};
	Arya /= rule(-( 0.04 ) / rule(protect(Jon),y))
};
	( ( ( -Arya ) ) )
};
	Sansa -= -mislead(( -1 ))
}
} else {
	Sansa /= ROWS
};
	Hodor -= protect(ROWS,COLS)
};
	y -= -foo(560.61)
} else {

};
	if(TABLE[dog * Ygritte - Sansa][betray(-( -6 + bar(440.663,TABLE[-1][( ( -180.565 ) )] * betray(( -( ( foo() ) ) ),protect(mislead(( -0.78 ) - COLS),( ( 53 ) )),-46)) ) / mislead(-35 + ( 0.4 ) * COLS),mislead(foo(COLS,( TABLE[foo()][( TABLE[-( 46 + --x * --ROWS )][100] ) / TABLE[TABLE[( ---x )][( ( bar(y,( TABLE[Ygritte][Sansa] )) ) )]][TABLE[mislead(-0.67,Jon)][dog]]] )),COLS))]){
	x += -( ( destroy(Ygritte) * -( -60 ) + ( -( ( -25 ) ) ) ) ) * -1;
	Stark /= COLS;
	if(dog){
	if(COLS){
	y += -1;
	Hodor -= mislead(mislead())
} else {
	foo(Stark);
	Sansa
}
}
}
};
	Hodor -= COLS
}
assert TABLE[ROWS][( mislead(TABLE[Ygritte][bar(ROWS,protect(-1,COLS))]) )] : "What do we say to the Lord of Death?"
assert ( ( bar(TABLE[0.42][TABLE[mislead(y,TABLE[x][TABLE[COLS][ROWS * -ROWS / y]],destroy())][COLS] * -x * COLS - destroy(( Hodor ))],x,Stark / TABLE[-0.89][COLS * dog * Arya]) ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -0.91 / betray(rule(mislead(foo(( Sansa ),COLS,-Arya) + -1,COLS),protect())) : "Winter is coming"
var y = 1
def TABLE[0.03][i] {
	if(-1){
	if(( rule(betray(),0.95 * -TABLE[Hodor][96] - -64) )){

};
	COLS
}
}
def TABLE[--0.47][k] {

}
assert TABLE[ROWS][COLS] : "Fear cuts deeper than swords."
var Arya = bar(-rule(19 / protect()),bar(bar(( Sansa ))),--0.41)
assert TABLE[-46][-0.02] : "Winter is coming"
var y = -740.018
var dog = TABLE[-Stark][Jon]
def rule(Hodor,dog){
	if(TABLE[( --( Stark ) )][Ygritte + ( -( Sansa ) - bar(-1,COLS,protect(( -12 ))) + -500.323 * ----0.84 )]){
	if(destroy(-1,COLS * Hodor)){
	if(( Jon )){

} else {
	if(mislead()){
	Stark * COLS * 0.51;
	y /= COLS;
	protect(89)
} else {

};
	if(-0.42){
	y;
	if(TABLE[Stark][Stark - COLS]){

};
	if(bar() - ROWS - Sansa){
	Arya *= mislead(( --540.1 ));
	( ( -86 ) / -( -TABLE[Hodor][650.6 * --( y ) / destroy(protect(-0.23),-1)] ) );
	if(TABLE[( ( Ygritte ) )][rule(( -Ygritte + mislead(-1 / ROWS) ),( ( -0.6 ) ),-Hodor / TABLE[( protect(( -0.05 )) / betray() / -68 )][Hodor] - dog - ( 1 ) / ( -93 ))]){
	dog *= TABLE[-( --Arya + -COLS / -0.16 * TABLE[protect(( foo(-( ( ( 520.0462 ) ) ),ROWS / ( -0.16 )) ))][-34] + foo(-25,-x / 1) / ROWS / ( COLS ) )][( ( ( dog ) ) )];
	-940.97
}
}
} else {
	x += -COLS
}
};
	-Sansa;
	Jon *= ( ( -ROWS / rule(-foo(-1),-0.14,( x )) ) / COLS )
};
	( rule(TABLE[Ygritte][-29],-Hodor,COLS * -ROWS) )
} else {
	mislead();
	dog -= mislead(TABLE[TABLE[bar(Ygritte) + ( -1 )][Sansa]][mislead(rule(( foo(protect(-0.8,-y) - ( ( ( Sansa ) ) )) ),betray(TABLE[( COLS )][ROWS]),-TABLE[-15][( ( ( ( ( TABLE[( -0.24 * dog - mislead() / betray(-mislead(( Ygritte )),TABLE[( Stark * ( TABLE[Jon][--ROWS] ) )][--78]) + dog )][1] ) - ( foo(--( ( ( COLS / -mislead(--ROWS + -( y ),( -87 + COLS ),betray()) ) ) ),Jon) ) ) ) ) )] * ( -0.89 )))] * -rule(1)) - Sansa / COLS * y * foo(-rule(( ( -1 ) ),destroy())) * -34
}
}
def foo(dog,y){

}
def TABLE[destroy(--Stark / -55,-Jon)][i] {

}
assert ( -98 ) : "One can not simply parse himself"
def destroy(Stark){

}
def mislead(){
	Ygritte -= ( y )
}
def TABLE[-( -( betray(55 + Hodor) ) ) + -destroy(-foo(-( ( ROWS - TABLE[dog][Arya] ) ),rule(30.16,destroy(foo(( ( COLS + 86 * Arya ) )),( -98 * -1 )),-( ROWS ))) * COLS,( -27 )) * dog + destroy(TABLE[protect(( destroy(( dog )) / foo(COLS) ))][41],( ( 470.6 ) )) - COLS][k] {
	0.8;
	-( ( Ygritte * COLS ) )
}
def TABLE[-54][j] {
	if(8){
	Arya /= -Sansa;
	x += TABLE[Arya][( ( Hodor / ROWS / Arya ) )]
};
	if(TABLE[4][-( ROWS ) * -72]){
	Sansa *= ( COLS / ( Stark * x ) );
	TABLE[-0.51][-( 450.813 )] - COLS * dog * -0.97
} else {
	Jon /= ( Stark )
};
	if(-COLS){
	if(-790.6){
	if(( -0.51 )){
	Ygritte *= 70
}
};
	-79
}
}
var Stark = Jon
assert Arya : "Fear cuts deeper than swords."
def rule(){
	mislead(ROWS,ROWS - COLS,-1);
	y /= Jon
}
def TABLE[mislead()][j] {
	-( mislead(( --x ) + ( ROWS ),1) );
	if(-ROWS - ( -( bar(Hodor * ( rule(-9) + Stark ) + COLS) ) + bar() )){

} else {
	if(( ( y ) )){

} else {
	Jon *= --67 - betray(COLS,( 1 ),destroy(-740.519 + ( -Arya ) * 1 + -( ( 1 ) ) - 1 + -betray() + --0.69,-Hodor));
	Jon /= ROWS;
	Jon /= ( Hodor )
}
}
}
var Hodor = -0.14
assert --0.27 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(Jon,Jon){
	Stark *= ( --( 51 - Sansa ) )
}
def TABLE[bar()][i] {
	if(Ygritte){
	1
};
	if(-17){
	Arya += COLS;
	if(destroy()){
	if(mislead(betray(rule(-21),protect(),-ROWS),TABLE[--240.4113][x] + 1)){
	( -COLS );
	-5
} else {
	if(Jon){
	TABLE[betray()][-1];
	if(ROWS / ( -ROWS )){
	TABLE[betray()][COLS];
	if(destroy(COLS / ROWS + -1,foo(ROWS,destroy(betray(-1)) / ( mislead(-betray(rule(-0.44,( y + mislead(ROWS,mislead(TABLE[Arya][Sansa],( ( protect() ) ),( ( ( ( foo() ) ) ) / ( Hodor ) ))) )),6),-foo(-41),-COLS) ),1))){

} else {
	ROWS
}
} else {
	-bar(-850.9)
}
} else {
	if(foo(TABLE[-TABLE[( ( ( ( -0.27 ) ) ) )][0.99]][-protect(-970.5975,Sansa,ROWS)],-1) / Jon){

} else {

};
	Sansa -= -1 / -80.65
};
	if(0.21){
	protect(( COLS ),Ygritte);
	x
}
}
}
} else {
	if(41){
	-0.39;
	Ygritte *= Stark;
	y -= COLS
} else {
	rule(betray(-0.13 + -1,( Jon )))
};
	if(TABLE[mislead(Stark,( -foo(( COLS )) ))][y]){
	Jon /= ( ( Arya ) * -1 );
	Ygritte += protect(mislead(0.64))
} else {

};
	x /= x
};
	Stark -= TABLE[( --ROWS )][-1]
}
assert ( -TABLE[-Arya][( ROWS )] ) : "One can not simply parse himself"
var Stark = ( ( bar(Jon,-760.743) - betray() * Jon ) )
var y = -1
assert ( 1 ) + ( Stark ) : "Fear cuts deeper than swords."
var x = 0.98
assert -COLS : "What do we say to the Lord of Death?"
var Ygritte = ROWS
def bar(Sansa){
	if(1){
	TABLE[rule(ROWS,-COLS)][730.5 / ( Arya )];
	dog
} else {
	if(COLS){
	x *= -1;
	if(--94 + -68){
	if(mislead()){
	if(COLS){
	Hodor /= -49;
	( y ) - ROWS;
	-1
}
}
} else {

}
}
};
	if(Hodor){
	if(destroy()){
	y
};
	85
} else {
	if(-Arya + -37 * 0.97 / ( Hodor )){
	destroy(protect(( 61 ),8),62,COLS);
	Hodor -= -betray(dog,Stark);
	if(-----28 / ( rule(-710.5,-0.07,( Arya )) )){
	dog /= COLS * ( rule(-91) + Hodor );
	dog;
	Jon -= -ROWS / ROWS
}
};
	if(ROWS){
	Stark *= Ygritte
} else {
	Sansa -= Hodor;
	if(0.32){
	0.74 - betray(--390.0505 * ( TABLE[( ( -( foo(Hodor + -410.705 - TABLE[TABLE[mislead(( -destroy() ),Hodor - ( ( -y ) ),dog)][Stark]][Jon] - 1,bar()) ) ) * ( ( -( x ) ) ) + mislead() )][( -69 )] ) / COLS);
	Stark -= 30;
	if(9){
	Sansa /= 0.94 / ( Stark );
	dog /= ROWS
} else {
	TABLE[-( -Stark / betray(( -Sansa ),rule(( betray(COLS,TABLE[----( -( rule() ) )][y]) ) + -0.97)) )][-780.44]
}
} else {

}
}
}
}
def TABLE[-30.55][j] {

}
def TABLE[ROWS][j] {
	if(Stark){

} else {
	Arya
};
	if(( ( -COLS ) )){

}
}
var Jon = 640.7
var Jon = Ygritte
var y = COLS
assert mislead(-Jon / -rule(Sansa,-TABLE[Sansa][( betray(( TABLE[Arya / 0.18 + -16][bar(bar(Ygritte,COLS),-protect(TABLE[-1][COLS],-betray(( ( -mislead() / foo(-25 * 0.07 * ( ( Jon ) - ROWS )) / dog / COLS * destroy(ROWS) ) ),x) + 1 + ( ROWS )) - bar(Ygritte) / ( dog * Hodor ),-0.05)] ) - TABLE[50][rule()] + -0.11,foo(bar(( TABLE[( ( -0.79 ) )][-( Hodor ) * ( foo() ) - -Arya - -0.82] ),-27)),betray(60.71)) )]) + ROWS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(Ygritte,y){
	( -TABLE[( 0.05 )][ROWS / ( destroy(-1) ) * dog * mislead(ROWS,--0.86)] + Ygritte )
}
assert ROWS + COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( mislead(betray(Arya) - destroy(-( protect() ),-920.2109,-1 * 0.39),-750.1638) ) : "Nothing burns like the cold."
var Stark = destroy(bar(-0.7,-86),-0.33 / TABLE[betray(( COLS ))][Hodor])
var Stark = -740.59
var Hodor = -protect(1)
def protect(x){
	ROWS
}
def TABLE[bar(y)][k] {

}
var Ygritte = ROWS
var Arya = COLS
def TABLE[dog][j] {
	ROWS;
	Hodor /= 1;
	y /= ( destroy(-( -57 + 440.622 / -Hodor * betray(x) * ROWS / bar(protect(( destroy(( ROWS )) / dog + ( ( protect(1,-130.655) ) ) / -80.894 ) / Ygritte),-( -1 ),COLS) * y * rule(( TABLE[destroy(-240,71)][4] ),bar(protect(-TABLE[( -bar() - Sansa )][Sansa]),0.2,--Stark),--Stark) + -Hodor ) / dog,Hodor) )
}
def TABLE[Jon][i] {
	if(Arya){
	mislead(rule() / x)
}
}
def foo(dog){
	if(-rule(-0.91) + Ygritte){
	-90.8
};
	Jon += Sansa
}
def rule(y){
	Jon += destroy(66)
}
def TABLE[Arya][i] {
	if(TABLE[0.47][( mislead(-y * Ygritte,bar(destroy(x,TABLE[COLS][--TABLE[y][-2]]),14,x),1) )]){
	if(COLS + -49){
	( ROWS )
} else {
	-COLS - destroy(( -COLS * 80.25 ),-77) * ( -mislead(Ygritte) * COLS );
	if(betray(protect(COLS,Stark))){
	-Hodor;
	Arya -= -0.37
}
}
} else {
	Stark -= -91
};
	Sansa += Ygritte
}
def TABLE[foo(( COLS - mislead(( COLS ),-0.38) ),( -0.03 ) - COLS / destroy(0.78))][j] {
	78;
	Ygritte /= 89;
	if(COLS){
	if(-ROWS){

};
	y += ( ( ---17 ) + bar(Ygritte,-y,x) );
	dog /= --58
}
}
def betray(Jon,Stark,dog){

}
def TABLE[TABLE[( ( y ) - ROWS )][-protect(destroy(Sansa,mislead(protect(( x ) - destroy(( TABLE[Jon][bar(( ( ROWS ) ))] ),--Sansa,1),COLS))),-( TABLE[90][0.99 - rule(-610.902,---( -( -16 - Jon * mislead() ) ) - COLS) / Arya] )) / ---( -ROWS ) + COLS]][i] {
	ROWS;
	if(--Arya){
	-( 0.31 )
}
}
def protect(Sansa,dog){

}
var y = Jon
def TABLE[ROWS / -590.237][i] {

}
var Ygritte = x
def bar(Ygritte,Jon){
	12
}
var Sansa = Hodor
var Ygritte = 65 - destroy(ROWS,COLS,Stark)
var dog = -25
var Ygritte = ( 110.813 )
def rule(Stark,Sansa){
	if(COLS){
	if(COLS - x * Stark){
	if(( ROWS )){
	x -= TABLE[TABLE[--30][rule(Arya + bar(y,-0.61) - -bar() * ( 0.51 ) + COLS - COLS,Arya,( ( rule() + betray() / TABLE[destroy(destroy(--690.6,TABLE[-0.94][---COLS * y],-foo(--y / mislead(protect(0.51,0.81)) * destroy(),betray(mislead(protect(ROWS,destroy(protect(-( 14 ),betray(foo(( 140.877 ),rule(( x ))),-Stark)),COLS,ROWS * ( ROWS ) * ( COLS + destroy(-10,( ROWS ),( ROWS * -destroy() )) )),-170.753 - destroy(-Ygritte) * protect(Ygritte)),Ygritte),ROWS) * ROWS - protect(0.81))) / protect(Hodor - -13,( 0.26 ),-mislead(betray(),destroy(---0.38 * COLS + bar(TABLE[bar(( rule(TABLE[ROWS * --betray(dog,59)][bar(COLS + -( mislead(--0.24) ),-0.56 + ( -foo(TABLE[dog][-Sansa] + -COLS,( COLS ),( ROWS - bar(1) - bar() - COLS )) ),-y + mislead(COLS,-Arya / COLS) + ( 11 ))],x) ) - Arya)][bar(-600.46 * 1 / 0.37 - ( rule(Stark) ),-x + TABLE[Jon + ( foo(mislead(-1,bar()) / TABLE[TABLE[( ( ROWS ) )][( TABLE[TABLE[bar()][ROWS]][-( x )] )] - bar(-0.56,-( -1 ) + -13)][--0.13]) + protect(ROWS) )][( bar(-destroy(COLS,( bar() - 820.117 / mislead(480.673,-x) ),-( y ) - 1 / -TABLE[TABLE[Arya][COLS]][COLS]),Sansa,y) )]) / Arya] + -bar(( -1 ),-( COLS )),destroy(-( dog )),COLS)) / protect())) / x,-mislead(Arya))][( protect(Stark,TABLE[-( bar(bar(protect())) * 0.94 ) * ( -0.28 )][Arya] - y) )] ) + -29 + 54 + -350.795 )) + bar(( ( ( -760.06 ) ) ) - ROWS)]][( -ROWS + foo() )]
} else {
	Arya *= Stark;
	Hodor -= ( TABLE[( protect() )][Stark] ) + TABLE[-( COLS ) / Ygritte][-mislead(COLS,-ROWS)] / x / Sansa
}
} else {
	( 0.76 )
}
} else {
	y -= mislead(COLS,mislead());
	( dog );
	if(--rule(670.581)){
	if(foo(( Stark ),COLS)){
	if(( 0.2 )){
	foo();
	x /= 1
} else {
	5
};
	if(protect(( COLS ))){
	if(-0.57){

} else {
	Ygritte /= COLS
};
	if(-betray()){
	if(COLS){
	( 1 )
} else {

}
}
};
	-Arya
};
	if(-( -rule(Jon,( Hodor )) ) - rule(Arya)){

} else {
	( COLS );
	Ygritte -= -Jon
}
}
};
	if(Arya){
	bar(betray(Arya,-dog,( 0.04 ) / ( --0.12 )) / 0.75,destroy(x,ROWS),( x / foo() )) / ( betray(protect(76,ROWS) + rule(-( Hodor ),Hodor),ROWS) )
}
}
def protect(Arya,Jon){
	if(ROWS){
	if(( protect(TABLE[bar(COLS,-( TABLE[( ( ROWS ) ) / --300.2][23 - ( -( COLS ) )] ))][Arya],bar(Ygritte,( COLS ),0.69) + ( 54 )) + ( protect(protect(rule())) ) )){

} else {
	Ygritte -= ( y );
	if(-94 - Hodor / ( betray(Arya,Ygritte) ) - -0.39 / -Hodor){
	( ( ( 0.19 / TABLE[COLS][-bar()] ) ) );
	y /= betray(( foo(dog) ));
	Arya -= -1
} else {
	if(ROWS * Hodor){
	if(Stark){
	--1
};
	Stark *= 1 * TABLE[( ( -( protect(TABLE[( TABLE[( -0.09 )][bar(COLS,Jon)] )][destroy()] / protect(-COLS)) ) ) ) / --1][( -y )]
};
	Sansa /= -0.25 - ROWS / bar(y + -0.11) - rule()
}
};
	Stark /= -0.19;
	if(-45){
	( ROWS );
	Ygritte /= ( -y );
	y -= Hodor
} else {
	if(TABLE[-0.65 / x + y][Jon] * COLS){
	68;
	-1;
	--Jon
};
	y *= ( 17 / y );
	( ( rule() ) )
}
};
	foo(bar(),foo(( x ),( protect(-40.3827,-COLS,( -67 / ROWS )) ),ROWS));
	rule(-Hodor,Stark)
}
var dog = rule(mislead(--510.01))
def protect(y){
	ROWS;
	Arya -= -COLS;
	if(---67){
	if(( y )){
	Ygritte += Sansa;
	Jon -= bar()
};
	x -= ROWS
} else {
	Hodor *= Ygritte
}
}
def TABLE[COLS][i] {
	( foo(-1,--0.53) )
}
def bar(Stark,dog,y){
	COLS;
	Arya *= 0.75 - ( ( ROWS ) );
	y
}
var y = ( 83 )
def TABLE[( ( TABLE[TABLE[--1 / -protect(mislead(Stark) * TABLE[-COLS][( ( protect(ROWS,( ROWS )) ) )],-protect(),50) * y][COLS]][rule(TABLE[( -TABLE[TABLE[-0.15][83]][TABLE[COLS][--1 + protect(betray(-( ROWS ) * ROWS,mislead(( 49 - Ygritte ),Sansa))) + mislead(ROWS,44)]] + Ygritte )][( destroy() )])] / Stark - ROWS * -rule(( mislead(COLS / betray(( ( 68 ) ),protect(( -1 ),( ROWS )) + Jon * -foo() - ( -( Ygritte ) / ( -y ) )) * Arya,510.8,-protect(840.713) * 88) )) - ( ROWS - Hodor ) / ( --97 ) ) ) * betray(( betray() ),-55,TABLE[rule()][COLS])][i] {
	if(98){
	if(---( ( Jon ) ) * COLS + ( Hodor + 42 / ROWS / 720.883 - --68 ) * TABLE[rule(-x + Jon,( ROWS ))][970.9847] / Stark){
	0.16;
	if(Stark){

} else {
	Sansa -= Jon;
	if(( x ) - ( destroy(Hodor,COLS) ) - ( ( 630.8 + ( 0.08 ) ) )){
	if(-0.32){

}
} else {

};
	-foo()
};
	betray(0.51,ROWS)
}
} else {
	-COLS + -Ygritte
}
}
var dog = ( 640.45 )
def TABLE[dog][j] {
	y /= x;
	COLS;
	y /= 66
}
var Sansa = ( ( 1 ) )
def TABLE[destroy(betray(Stark,( -500.318 )) - -0.36 + ( Hodor ),-( rule(ROWS,( y )) - -0.82 + --x ))][j] {
	dog /= ( -75 );
	rule(COLS,TABLE[( -0.75 )][( -0.62 )],( -0.02 ));
	y *= ROWS
}
def destroy(dog,dog,y){
	if(-COLS){
	Hodor *= destroy(-x,destroy(dog,TABLE[x][-( ( Sansa + bar(y,-rule(ROWS,Ygritte) * Hodor,Jon + ROWS) ) / TABLE[mislead()][TABLE[Jon][0.46]] )])) - ( destroy(Sansa,TABLE[( -foo(( -( bar(ROWS) ) - destroy(protect(-0.55,-Hodor - Stark) * bar(COLS,protect()),-49) )) ) + -0.26][foo()]) )
}
}
assert ( ( ( y ) ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(Sansa){
	Arya -= ( y )
}
def TABLE[--0.79][i] {
	Arya *= -foo(( TABLE[ROWS][-( y )] ),76);
	Hodor -= -Jon
}
def mislead(Stark){
	if(TABLE[( ( -0.69 ) )][ROWS / --1 + COLS]){
	if(52 / -81){
	Ygritte;
	dog *= betray(rule(),1)
}
} else {
	mislead(rule(( 19 ),destroy(),bar(-0.08)))
};
	y -= TABLE[27][-( ( Sansa ) )]
}
def bar(Hodor,Sansa){

}
def bar(Ygritte){
	x -= -COLS;
	Arya += TABLE[( 0.19 )][Jon];
	dog *= ( -1 * Sansa - Hodor + betray(foo(dog,COLS - TABLE[y][Arya] + -0.66) - ( -0.11 )) * COLS + 0.8 + -0.7 )
}
def TABLE[( COLS ) + --980.12][j] {
	if(( -0.54 )){
	Jon -= ( Jon )
} else {
	Jon *= COLS * dog
};
	TABLE[( ( bar(( TABLE[x][0.13] )) ) )][ROWS]
}
def bar(Ygritte,Jon){
	if(destroy(TABLE[( x )][-Arya * foo()] * -COLS,1,TABLE[dog][protect(---foo(COLS) * betray() + -( ROWS ) / ( bar(x) ),( -41 ))])){
	( bar(--destroy(COLS,-protect()) / Ygritte,mislead(Hodor / --42 - TABLE[ROWS][TABLE[-1][ROWS]],-Stark),Hodor) )
};
	Ygritte += ROWS
}
def betray(x,y,y){
	if(-1){

};
	Stark /= ( y - ( -( ( --( Arya ) ) ) + ROWS ) );
	if(COLS){

}
}
var Jon = Arya
assert TABLE[x][mislead(y,ROWS)] : "Nothing burns like the cold."
def TABLE[-COLS][k] {
	Stark /= ( Sansa );
	Arya
}
assert 1 : "What do we say to the Lord of Death?"
assert ( destroy(( ( ---y / COLS / -( protect(-( 0.65 ),foo(Arya)) ) ) * ( Hodor ) ) / Jon - -Ygritte,x,( -( -640.109 ) / destroy(-190.347,-690.282,( Ygritte )) )) ) : "One can not simply parse himself"
def foo(Jon,Ygritte){

}
assert Stark : "Fear cuts deeper than swords."
var y = TABLE[COLS][Jon]
def destroy(){
	if(-1 - -rule(protect(ROWS,Jon * 0.43 + ROWS)) - -21){
	-( ( ( betray(( TABLE[-910.85][-0.83] )) ) ) );
	( rule(protect()) )
} else {
	( ( ( bar(rule(Jon,dog),0.54,---0.35) ) ) )
};
	betray(-protect(betray(TABLE[-450.908][bar(( bar(bar(Stark,dog)) + foo(95 + -460.8 + -66,dog) ))])),( Jon - y ) / COLS)
}
assert --0.48 : "Fear cuts deeper than swords."
def TABLE[( x )][i] {
	Ygritte *= ( Ygritte )
}
assert TABLE[( 0.4 )][mislead(64,( ( ROWS ) ))] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Stark,Jon){

}
assert -1 : "Fear cuts deeper than swords."
def TABLE[( Arya )][k] {
	-0.77;
	Stark += 1
}
assert Arya / -ROWS * ( y ) + COLS : "Nothing burns like the cold."
def rule(Hodor,Stark){
	if(Stark){
	( Stark );
	Jon -= COLS
};
	if(Stark){
	if(COLS){
	Stark += ---640.6
};
	if(dog){
	if(Stark){
	-0.02;
	Arya;
	if(( COLS ) - foo()){
	Jon
}
}
} else {
	if(COLS){
	if(TABLE[( betray() )][-y]){
	Ygritte -= destroy(-1);
	-0.67;
	Sansa
} else {
	if(( bar(destroy(( ( ( --17 - 0.06 ) ) )),foo(-bar(COLS * ( COLS ) - protect(-x,protect(mislead(y / ( Arya )),( Arya ),Hodor))) - 25)) - ( --Hodor ) * ROWS )){
	x /= 140.41
} else {

}
};
	( -0.95 );
	if(-400.73){
	Sansa += Stark - -protect(dog,-mislead(Sansa,betray(Sansa,( y )),( -82 + -560.1 )) - -ROWS) + -1
} else {
	if(Stark){

};
	-3 + 1;
	y += Stark * -1
}
}
}
};
	if(destroy() / -( 91 )){

}
}
def protect(Stark){
	( 560.704 * bar(-( -42 ) * betray(rule(( -68 )),rule(-COLS,( ROWS ),bar(COLS,TABLE[---y - ( foo() )][-( -29 )])))) )
}
def mislead(){
	( ROWS )
}
def betray(Hodor,y,x){
	if(-( -bar(( dog ),28,-770.942) )){
	if(-COLS){
	if(COLS){
	Sansa *= TABLE[( -TABLE[( --mislead(Sansa,TABLE[650.931][( ( ( -protect(bar(),x) ) ) )]) )][-Hodor / ( y ) * ( protect(( ( ( Stark ) - -160.452 ) * COLS ),-( y ) + ( 0.88 ),( -1 - -ROWS )) )] )][rule(ROWS) / destroy()]
};
	if(( 57 )){
	Hodor *= ( Stark ) / foo(-0.74,Stark / rule(Ygritte,-0.21 + TABLE[84 - ROWS][( -0.96 )],dog)) - Stark;
	y += -46 * ( -1 )
} else {
	Hodor;
	if(x){
	-0.82
} else {
	Arya *= bar(protect(),( Arya ));
	if(y + protect(-76)){
	1;
	Jon *= TABLE[TABLE[-0.74][-Hodor * bar(Stark)]][mislead(-y,Hodor) - -----protect() * foo(x,x + COLS) / -61 + ( Ygritte ) / 0.16 / rule(-x,-1,-1) * ( -0.87 ) * 410.57 * -37]
}
};
	COLS + destroy() + TABLE[( mislead(-ROWS) )][-0.52] / ( -0.71 ) * ( 3 ) - 1 - -410.877
}
} else {
	Sansa *= ( rule(COLS) * ( -1 ) + ( rule(dog,( -( ROWS ) - -TABLE[betray(-mislead(bar(0.67,-bar(dog,--rule())),protect(COLS + TABLE[y][Stark + COLS],-900.473)) * x - COLS)][-66] - ( -74 ) )) ) );
	( Ygritte ) / -Jon + 870.7198
};
	-51
};
	if(-0.88){
	COLS * 370.21 / foo(( ROWS ),-83,bar(Stark + foo(x,( betray() ),protect(0.87,( ( ROWS ) )))))
} else {
	( COLS );
	Stark
}
}
assert Arya : "What do we say to the Lord of Death?"
var Ygritte = ROWS
def TABLE[TABLE[-0.04][-ROWS]][k] {

}
def mislead(Jon){
	if(--COLS){
	y /= Sansa
} else {

};
	if(mislead(0.8)){

};
	if(-dog){
	if(rule(bar(x,-1),-1 / destroy(( -280.9323 * y + Ygritte )),y)){
	if(( Stark )){
	if(-destroy()){
	Jon += COLS
} else {
	Stark /= dog
};
	Stark -= ( rule(43) )
} else {
	if(0.65){

};
	if(protect(( betray(( ( --COLS ) )) ),Arya)){
	-ROWS;
	if(-COLS * ( protect(Sansa * COLS / ROWS,( rule(770.8) - betray(-0.12,( ROWS )) ) * -y * --Ygritte,--1) ) / -62){
	( ROWS );
	if(Stark){

}
}
};
	-COLS
};
	betray(-1)
} else {
	Sansa -= 0.77;
	x
}
}
}
def TABLE[Arya][i] {
	if(Jon){
	dog += foo() * Sansa;
	Hodor /= Stark
}
}
var Jon = ( ( -( rule() ) ) )
def bar(Ygritte){

}
def mislead(Stark,y,Sansa){
	y /= bar(( -bar(Arya - ( -0.22 )) - mislead(mislead(( COLS ),TABLE[( -0.61 )][bar()]),Jon) ),-COLS)
}
var Hodor = ( y )
def destroy(x,Hodor){
	if(-88){

}
}
var Ygritte = 20.39 / -TABLE[ROWS][Hodor]
def TABLE[COLS][k] {
	Jon += Ygritte
}
assert 890.789 : "What do we say to the Lord of Death?"
assert Arya - TABLE[bar() * -( 1 ) - ( rule(( ( ( -0.03 ) ) ),mislead(-ROWS / ( COLS ),Arya,( 670.1 ))) ) - ROWS][Ygritte] : "Nothing burns like the cold."
assert -1 : "Nothing burns like the cold."
def foo(Hodor){
	-94
}
assert ( 1 + --Arya / -TABLE[( COLS )][rule(TABLE[-rule(rule(19,TABLE[-COLS * COLS + ( mislead(ROWS,( y ) / ( -ROWS ),TABLE[COLS - ( --1 ) / destroy()][-68]) ) + -0.2][-TABLE[y][Ygritte]])) - ( x )][( -0.19 )],-destroy(Jon,( -0.74 )))] ) - foo(y + -1,( -dog ),ROWS) : "Fear cuts deeper than swords."
assert ( rule() + ( ( dog ) ) - foo(690.91) ) : "What do we say to the Lord of Death?"
def mislead(y,Hodor){

}
def TABLE[-Jon * TABLE[-mislead() + ( ROWS / TABLE[-( destroy(destroy(TABLE[y][-83],protect(( ( --x * Sansa / ( -0.69 ) + rule(TABLE[( -0.93 )][80],( COLS )) ) )) / -460.59),COLS,protect(-0.31)) )][x] )][destroy(52 / betray(--70))]][i] {
	if(TABLE[( ( -220.062 ) )][rule(-370.8439) / -0.93]){
	if(23){
	if(( -9 ) / -93){
	Arya *= protect(( ROWS ),foo(Hodor))
}
} else {
	if(( TABLE[bar(-( -69 * Sansa ),-Hodor)][protect(-ROWS,destroy(protect(-0.85,-Stark,-TABLE[COLS][-63]),betray(),( -Hodor * -destroy(Jon - foo(-0.14 * ROWS),x) / TABLE[COLS][( ROWS + 0.17 )] )))] )){
	x /= ( ROWS )
} else {
	dog /= 420.5;
	if(rule(1)){
	y;
	bar(( -Stark - betray(bar() * y - destroy(-ROWS,ROWS),-37) ),Jon,( 150.045 * --TABLE[-COLS][210.78] + COLS ))
}
};
	if(0.35 - 20.0074 - 60.59 * ( -Hodor ) + TABLE[0.49 + 96][( ( COLS ) )] - Stark){
	Hodor *= destroy(880.072 / Arya);
	rule(-( foo(Sansa) ));
	if(-( --rule(destroy() / ( --( COLS ) + ( ROWS ) ),98) - x )){
	if(--Ygritte - ( -ROWS + ( ( ( ( -COLS / --( ( Jon - COLS ) ) ) ) ) ) / ( -0.36 ) )){
	Arya -= mislead(ROWS + 1,( Ygritte ));
	Arya += x - rule(( --17 ) - Arya) / Ygritte
} else {
	if(mislead(Jon) * protect(-15 / -protect(y,( ( -960.52 ) ),COLS)) + Arya / ( Ygritte )){
	( protect(Arya,Hodor) );
	Stark /= 27
};
	0.47;
	if(-destroy(Sansa)){
	y -= ( COLS );
	1;
	Ygritte
}
};
	if(rule() - x){

} else {
	if(-TABLE[( protect(COLS * destroy(bar(COLS)) * ROWS,-31) )][destroy()]){

} else {
	x += 0.74;
	if(ROWS){

} else {
	y / COLS;
	COLS
}
}
};
	x -= COLS
}
} else {
	ROWS;
	( ---rule(-TABLE[rule()][-Ygritte]) );
	-TABLE[TABLE[dog][-( ROWS ) - 1]][( foo(-TABLE[--770.02][( ( foo(( 48 )) ) )],1) / -( ( -0.87 ) ) / ROWS )] + x
}
};
	Ygritte /= x;
	if(x){
	Hodor -= ROWS;
	Sansa *= -0.18;
	Arya -= TABLE[y][480.5189]
} else {
	Jon -= ---89
}
};
	x += ( COLS * ( destroy(140.82) ) / ROWS );
	if(mislead(Hodor - Hodor + 58 / ( destroy(betray(TABLE[bar(---x)][destroy(-1,---560.1 * 1)]),---1) ) / TABLE[bar(Ygritte)][-Hodor + -mislead(-510.237,Sansa - ROWS * -TABLE[---1][ROWS]) - Jon + TABLE[COLS][COLS]] * Sansa)){
	-80 + foo(bar(dog,x * -0.83),Arya,mislead(mislead(Hodor,foo(),--1 + COLS),foo(--0.84,x)))
}
}
var dog = -COLS
var Ygritte = -( ROWS - ( COLS ) )
def TABLE[( 0.54 )][i] {
	Arya -= 1;
	Arya /= x;
	if(rule(66,-5)){

}
}
var x = ROWS
def TABLE[mislead()][k] {
	Jon -= Stark * 0.07;
	Arya
}
var Sansa = TABLE[COLS * --mislead(Sansa) + 0.75 / protect(ROWS,Arya) + Jon + 1][protect(TABLE[ROWS][betray(-( ( --( ( mislead(Hodor,-( 1 )) ) * -ROWS ) - --1 ) ),( COLS ) + ( COLS ))] * --0.52,1 - dog + ( 1 ) + Hodor / Sansa - TABLE[protect(mislead(-470.09 / 150.58 * 44,TABLE[mislead(mislead(-betray(-1,protect()) * ( ( betray(( -foo(-y) ) + rule(x) / betray(Arya)) ) )),Stark,( rule() ))][Arya]) + Arya,rule(( TABLE[Stark][( ( -16 ) )] ) / -( --protect(-Hodor + dog / Jon * bar(0.96 * -( ROWS ) * ( 98 ))) + --76 )))][y] - foo(( ---( -( 1 ) ) * destroy() )),Stark)]
var Stark = TABLE[bar(mislead(Sansa,Jon + ROWS))][COLS]
def bar(Sansa,Jon,Ygritte){

}
def bar(){
	Hodor *= ( -( Arya ) )
}
var Jon = Jon
def TABLE[destroy(Ygritte)][i] {
	mislead(dog,-( -30 ),-Ygritte)
}
def destroy(Jon){
	Hodor -= 0.59
}
def TABLE[( ( ( 42 ) ) )][j] {
	Hodor -= Arya
}
var dog = ( ( ( 53 ) ) )
var Hodor = 26
def rule(y){
	y /= -82;
	if(TABLE[Arya][Jon]){
	Sansa += bar(Stark,( ( -COLS + TABLE[( Hodor )][710.87] ) ));
	if(bar()){
	if(dog){
	if(COLS){

}
};
	if(-destroy(x,ROWS)){
	-0.67 - TABLE[53][Arya];
	----ROWS
} else {

};
	COLS
} else {

}
};
	Jon += COLS
}
def betray(Arya,y,dog){
	( TABLE[dog][mislead(( -Arya ))] );
	Jon *= --1 - 0.98
}
def TABLE[betray(--0.62,Ygritte - rule(foo(mislead(destroy(-TABLE[( destroy() )][94] + foo(COLS / x / Arya,betray()) + --betray(betray(Stark - betray(( -destroy(-Hodor,destroy(mislead(),Stark,( TABLE[-protect()][-foo(0.11,86) / protect(rule(dog) / -y)] ))) + TABLE[( -y - TABLE[0.64][-70] )][rule(COLS,-22)] ),( ROWS ) - 0.02,-ROWS) * ROWS + 92,( foo(mislead(bar(mislead(( mislead() ),-( rule(ROWS,-COLS,Sansa) ),ROWS) * 470.966),65)) ),protect(-TABLE[TABLE[1][rule(Sansa)]][1],-bar(COLS + foo(-14,betray(COLS)),( 45 + Jon ),-Hodor))),COLS) + rule(-bar(750.067,ROWS,ROWS),--0.78),TABLE[( destroy(( foo() ),destroy(( Stark ) + ROWS + Ygritte - ( -ROWS + y * -1 - x ))) - ( bar(-Arya) ) - ROWS - -ROWS )][--0.72])),Hodor),( ROWS ))) * -30.37][i] {
	ROWS - ( protect(bar(( COLS ),( Stark ),Arya),destroy(destroy(TABLE[bar(-( Arya ),ROWS)][Jon]),-1),( TABLE[protect(( Hodor ) * dog)][COLS] )) )
}
var Jon = ( Stark )
def protect(Sansa,Stark){

}
def foo(x){
	TABLE[-0.88][TABLE[y][COLS]]
}
var Jon = Sansa
assert foo(mislead(TABLE[( ( -TABLE[-91][( ROWS ) + --520.37] ) )][y]),y - Hodor) : "One can not simply parse himself"
def TABLE[( Stark )][i] {

}
assert TABLE[( ( destroy(-660.5124,bar(COLS,( destroy(TABLE[0.76][mislead(COLS,530.336,ROWS)],dog) ),COLS) * -830.9 / rule(Ygritte - -mislead() * mislead(( Arya * --rule(mislead(( 97 ),ROWS,Sansa - -0.51)) - protect(ROWS + Arya) / -1 )) * 69),destroy(COLS)) ) )][0.88] : "Winter is coming"
var Stark = rule(betray(0.57 + protect(-0.27,bar(Sansa,Stark))),1)
def protect(){
	if(COLS * ( -( ( -TABLE[--protect(x,70) * ( Hodor / bar(ROWS / COLS) + Sansa ) / -Stark * COLS][Arya + Arya] ) ) / ( ROWS - COLS ) )){
	830.532;
	-64
}
}
def TABLE[-0.56][i] {

}
def destroy(Arya,y,Hodor){
	Jon += mislead(mislead(y) * ( -betray(-( ROWS )) )) * 1 / x
}
def TABLE[ROWS][j] {
	if(---Jon + ROWS * ROWS + bar(destroy(Ygritte))){

} else {
	y -= -0.53
}
}
def TABLE[-Ygritte][j] {
	Arya *= ( 0.02 )
}
assert ROWS : "Nothing burns like the cold."
def rule(dog,Hodor,Jon){
	Sansa *= -9;
	Arya /= -destroy(1,( 74 ))
}
def TABLE[Stark][j] {

}
def TABLE[Ygritte][k] {
	if(520.689){
	Ygritte /= protect();
	if(ROWS){
	82
} else {
	Jon -= destroy(( TABLE[0.87][TABLE[( Sansa )][foo(-( foo(-COLS,foo(Jon,COLS)) ),-85)] * -Sansa - ( ( --0.75 + destroy(( TABLE[( COLS )][bar()] ),COLS,-bar()) + -( -dog ) + Ygritte ) )] ),-28,( --COLS ));
	if(destroy()){
	Arya /= TABLE[Stark][mislead(-0.51,( destroy(-mislead(( ( COLS / COLS - ( -( --dog - destroy(ROWS) ) ) ) ))) )) * 0.66]
}
}
} else {
	x += Arya
};
	if(rule(dog,--rule(foo(-1 - ( dog ),rule(rule(),TABLE[( TABLE[0.83][x] )][rule(-1)] * Jon / x)),-COLS * -36,protect()))){
	COLS
} else {
	if(bar()){
	if(Stark){

}
}
}
}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = mislead(---63,y - foo(-( Sansa ),-0.49) / -530.5868 + -ROWS,protect(( betray(Ygritte) )))
assert ROWS : "Nothing burns like the cold."
assert ROWS : "Nothing burns like the cold."
def bar(Ygritte,x,Jon){
	protect();
	if(Ygritte){
	COLS
} else {
	if(Sansa){
	Sansa += foo();
	-0.43
}
}
}
def TABLE[y / TABLE[--1][TABLE[-TABLE[bar(-foo(( foo(ROWS * protect(1,-1),--ROWS) )),destroy(-0.24,foo(ROWS + x - mislead(-mislead(-( COLS ),( TABLE[y][( 0.58 )] )),--32 * ROWS,bar(--950.049 * -1 / ( -96 ),( 58 ),-0.28)) + y / COLS + rule(( Stark ),--Arya))))][( rule(Hodor) )]][( bar() )] * ( 960.1 )] / -0.26 - bar(Arya + rule(-destroy(-rule(COLS,-10.7537),( ROWS ) / --ROWS + mislead()),86,-x),COLS) / 0.61][j] {
	dog -= -0.88;
	Jon *= y
}
def destroy(dog,Arya,Ygritte){
	Jon;
	x -= protect(bar(( foo(Jon * Arya) ),Hodor)) / bar(-( destroy(foo(--destroy() / Jon),-betray(( ROWS ))) ),--0.51 - mislead(Sansa,--COLS / ( ( -ROWS ) ) - bar() / COLS - -150.225) * -83 - Hodor);
	if(Hodor * 1){
	( ( TABLE[Stark][-ROWS + x] ) );
	36
}
}
def betray(Jon){
	-0.44;
	0.78 / -Ygritte / ( TABLE[-( ( destroy(-0.78,-destroy(Ygritte,x * ROWS),0.83 - 1) ) )][Stark] );
	( Jon )
}
def foo(Ygritte){
	bar(ROWS,( bar(TABLE[protect(( -1 ),dog,TABLE[-1][0.73])][--1],ROWS,TABLE[COLS][TABLE[-65][( ( TABLE[TABLE[-44][Hodor * ( ---COLS - bar(betray(foo(),y,Arya) - Stark,Sansa) + 14 / COLS * --1 )] - destroy(TABLE[1][ROWS] * --TABLE[870.832][( -0.27 )] + y) + 0.72 / Arya + dog + Arya][Jon + -0.87] / protect(COLS) ) ) / ( COLS )]]) / -Sansa ),COLS) * destroy(---80 + y / betray(( ROWS ),COLS),foo(COLS))
}
def TABLE[450.14][j] {
	if(COLS){
	y / Arya;
	if(-COLS){
	y;
	Sansa + ( -COLS )
}
} else {
	Ygritte += --370.58
};
	if(ROWS){
	Ygritte
} else {
	x
}
}
var dog = COLS
assert -Stark : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(Sansa,Sansa){
	if(-1){
	if(-70){
	if(--0.36){

} else {
	Ygritte *= -1;
	bar(TABLE[( destroy(( ( -bar(Sansa,-0.82) ) / --0.69 ) - TABLE[( -64 )][Hodor]) / -foo(( -38 ),TABLE[rule(-ROWS,-rule(-190.3527,COLS,-0.37),0.02 / ( ( -1 ) ))][Arya],betray(( ( protect(( 0.34 - protect() - ( Arya ) ),bar(( dog ))) ) / mislead(--TABLE[-43][betray(rule(mislead(ROWS),( destroy(41,( 0.49 + -Arya ),TABLE[-( Ygritte )][COLS]) ),Arya),bar(ROWS))],0.58) ),-350.51)) ) / -0.16][-840.456])
};
	if(89 * 660.1){
	-Sansa / --0.82;
	y *= mislead(protect(betray(-Sansa,--890.452),ROWS - -0.4 + ( -1 ),520.296 - Hodor),-( rule(-0.57,( --600.704 )) ))
} else {
	dog *= ( Jon ) * x;
	if(-( -170.001 )){
	-0.27
};
	( -betray(-67) + ( ROWS ) ) * -Jon
}
} else {
	if(ROWS + ( 0.73 + ( Jon ) )){
	Jon *= Sansa
};
	--foo()
};
	protect(protect(destroy(TABLE[( -COLS )][Hodor],( Stark - TABLE[-( -27 )][ROWS] ))),destroy(COLS),ROWS)
} else {
	-( dog );
	Arya *= protect(Arya) + x
};
	Ygritte /= TABLE[protect(51,-71,mislead(--43 * Sansa))][TABLE[x][( 530.749 )]];
	y /= ROWS
}
var Jon = TABLE[--66][Ygritte]
def TABLE[Jon][k] {
	TABLE[rule()][ROWS];
	rule(COLS,-y)
}
def TABLE[ROWS][k] {
	if(COLS){
	if(ROWS){
	-protect(0.7) - -protect(TABLE[x][rule(--960.05,y)]);
	Stark
} else {

}
}
}
def destroy(dog,y){
	if(protect(--0.26 / Hodor)){
	Jon += -550.271 * -y / destroy();
	x *= --mislead(( -1 ),foo(),ROWS)
};
	if(Sansa){
	Hodor /= y;
	TABLE[Sansa][Arya + COLS] * COLS
} else {
	Ygritte += -ROWS;
	y -= ( ---Ygritte ) + --rule() - Ygritte
}
}
assert ( y ) : "Winter is coming"
def mislead(y,Hodor,Ygritte){
	-COLS
}
assert 70 : "One can not simply parse himself"
def betray(){
	dog
}
def destroy(Arya,Stark){
	Sansa -= mislead(dog,Jon,0.63);
	if(ROWS / betray(-( --0.75 - ( -COLS ) / foo(-( destroy(51) ) - y,( -( ROWS ) ) - y / x) ) + 73) - -ROWS + COLS * destroy()){
	x /= COLS - destroy(43,dog * destroy());
	if(Arya / -10){

} else {
	COLS
}
} else {
	if(( Ygritte )){
	if(COLS){
	Arya -= -0.68 + ( -betray(30,( ( -46 ) ),-protect(COLS,-COLS) + TABLE[-0.71 / ( ( -77 + betray(y,protect(( Arya ))) ) )][bar(-0.02 + ( ROWS ),200.12 + ROWS,570.741 / foo(TABLE[( TABLE[ROWS][( rule(COLS) ) + -TABLE[ROWS][( destroy(( COLS )) - mislead(ROWS,destroy()) )]] )][Stark],( destroy(TABLE[TABLE[ROWS][COLS] / -( 0.94 )][-0.93] - protect(---( ( ( Jon / -x ) ) ))) )))]) ) / Stark;
	Jon *= Hodor
};
	Ygritte *= ( -Sansa ) - Ygritte + ROWS
};
	Sansa -= 51;
	Sansa *= Stark
}
}
def protect(){

}
def TABLE[0.03][i] {
	if(bar(( COLS ),-x)){
	if(1){
	if(betray(foo(32,x,-Arya - 0.55 * 0.48) * 10.098)){

}
};
	-0.83
}
}
def TABLE[COLS][j] {
	destroy();
	dog += ( ( -dog - -910.75 + ROWS + protect(( --0.9 ),mislead(protect(0.79,ROWS + foo(Sansa,destroy(dog,mislead(Jon)),TABLE[dog][Hodor]) * destroy(--53 + rule(),( x * Hodor / -0.59 ),( -COLS )))),-43) - COLS ) )
}
def TABLE[-830.11][j] {
	-0.56
}
assert -0.74 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(x,Stark){
	dog += ROWS + -4
}
def foo(Jon){

}
def bar(){
	if(bar(-betray(( -y ),ROWS) * Hodor)){
	Stark += ( -( -1 ) );
	-( -destroy(-Hodor - -1) );
	bar(Sansa + COLS,Stark)
} else {
	-COLS;
	dog /= COLS * -430.822
}
}
assert -COLS : "Nothing burns like the cold."
def TABLE[( -0.44 )][i] {
	if(( --( ( rule(Ygritte,dog) ) ) )){

} else {
	if(destroy(COLS * Hodor)){

} else {
	Sansa *= TABLE[-18][--ROWS]
};
	Stark - betray(Sansa) - Stark / ( COLS )
};
	Stark
}
def bar(y,Ygritte){
	TABLE[( protect(COLS + ( Jon ),ROWS) )][bar(( bar(--( -bar(( COLS )) ) - -mislead(-470.659) - foo(0.85 - 0.59) * betray(( ROWS ),Arya,--rule(foo(-TABLE[--Hodor][( COLS )] / ( COLS ) + Arya - -TABLE[320.35][-( --dog )] * -TABLE[bar(foo(( ( Arya ) + Hodor + bar(-42) * x )),-1) / --52][-0.61],TABLE[foo(Hodor,ROWS)][( Ygritte )] / -TABLE[( TABLE[protect(ROWS) * Arya][( ( foo(x,bar(-ROWS)) ) )] ) * y - ( -460.181 )][-Stark + protect(mislead(( protect(betray(Jon / TABLE[Sansa + destroy(( ( -bar() ) ))][( Sansa )],-( -COLS )),ROWS,-protect(betray(-450.45 - Ygritte,mislead(-COLS,protect(),TABLE[( -1 )][destroy(-1,( ( Arya ) ) + -0.51)])),-65)) ),-( TABLE[20][-1] * Arya / betray(mislead(( ( ( ( -Jon ) * -COLS ) ) ),bar(destroy(-Jon - Ygritte,Arya)),( rule(betray(( destroy(COLS - TABLE[( --TABLE[( ROWS )][Hodor] )][Ygritte],Sansa) ) + -1,COLS,Stark * ( TABLE[-bar(-0.96 - bar(Hodor,TABLE[3 + betray(0.36,COLS) + Stark][-75] + -bar(TABLE[-45][x],ROWS,betray(1,mislead(--( -400.8 ) - rule(protect(Arya,( COLS ))) / mislead(betray(Jon)),-betray() / rule(( TABLE[-1][( -0.56 )] ),betray(-1,-0.78,ROWS)),-TABLE[-Ygritte * ( COLS ) - bar(1,dog,Sansa) / x][1]),860.984))))][( TABLE[foo(-0.95 + -1 / -( foo() ) + -76)][Sansa] )] - Ygritte )) + -610.8,-0.1) ))) )),COLS)] / -0.63 - -290.272,betray(-( protect(-560.46 + x,( Hodor ),0.28) ))),protect(1),mislead(( ( -Hodor ) * betray(( COLS ),bar(protect(--Arya,-1) + COLS),-280.3) ))) - ( ( 73 ) )) + -0.61 - destroy(foo(( y ),Hodor,y - destroy(Stark,foo(-30,mislead(( rule(29) ) / -1)))),-Hodor),-10.856) ),-Sansa - -0.93,-dog)]
}
assert -TABLE[mislead(y,betray(TABLE[--0.57 + Sansa][ROWS],COLS))][( ( --mislead(Arya,-Hodor,-92) ) ) - 74] + ( -Stark ) * Jon : "What do we say to the Lord of Death?"
var Arya = ( COLS )
var x = -( 42 ) - rule(protect(),ROWS) / betray(-betray(Jon) + ( COLS ),29)
def mislead(Ygritte,dog){
	dog -= --80.57
}
var x = 74
var x = -0.99
def TABLE[( 0.22 - -52 ) / -Arya / y][k] {
	betray(foo(protect(-65 * ---81)),destroy(-TABLE[-mislead(betray(( destroy(ROWS) - ( 0.44 ) )),-( 0.99 ) + ( mislead() ) + Ygritte + TABLE[ROWS][( destroy() )] + --0.74 * COLS) * rule(-0.12,( ( Jon / -21 / ROWS + ROWS ) ) - TABLE[Sansa][ROWS])][COLS]) * --COLS * 0.62)
}
var dog = TABLE[x][TABLE[( COLS )][protect(90,ROWS)]]
def foo(Arya){
	810.8082;
	Ygritte *= ( 370.2 );
	if(-bar()){

}
}
def TABLE[( ( -ROWS ) )][k] {

}
assert --0.75 : "Nothing burns like the cold."
var dog = 1
assert -0.26 + 1 - -( ROWS / ROWS ) : "Fear cuts deeper than swords."
def TABLE[TABLE[( TABLE[COLS][betray(COLS,-( -( x ) ))] )][( ( 540.3402 ) )]][i] {
	Jon *= mislead(Jon);
	x
}
var x = dog
var Sansa = -ROWS * ( -( -0.53 ) )
assert -Sansa * ( -bar(( Jon / ( -160.8 ) ),TABLE[foo(-0.43)][Hodor * Jon]) ) : "Fear cuts deeper than swords."
var dog = foo(( ( bar(Ygritte,-rule(betray(COLS,x,y),TABLE[( COLS - COLS + ROWS + dog )][( ROWS ) / -0.73 * ( COLS )]),ROWS) ) ),Arya,destroy() / x)
assert -1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = ( -rule(-50,( foo(( Ygritte ),( ROWS )) ) * -y * --1,TABLE[( -mislead(--ROWS,( -( bar() + ROWS / Hodor ) ) - 50,TABLE[--ROWS / ROWS][--0.15]) )][protect()] * ( TABLE[Arya][-1] )) / -foo(-630.64,TABLE[( -0.34 )][Stark]) ) / protect(( Jon ),Hodor,( ROWS ))
var Hodor = -0.49
def TABLE[bar(( Arya ),-Arya - Jon)][k] {
	if(( bar(-TABLE[-Jon][-bar(-y,Ygritte,bar(x,-COLS,ROWS))]) - protect() )){
	if(COLS){
	Arya;
	dog -= protect(COLS,-foo(foo()) / bar(--1,rule(Ygritte,dog)),-31);
	dog *= -( bar() )
} else {
	Jon /= foo(-betray(),ROWS,-0.93) + foo();
	if(910.21){
	500.2 / 83;
	protect(COLS,1) / -( TABLE[mislead(1 * -COLS * -( ( -COLS ) ),ROWS,ROWS)][-0.57] ) + 43
} else {
	if(( ( foo(y) - --300.091 - Hodor * -0.13 ) )){
	ROWS;
	--ROWS;
	dog += ROWS * TABLE[-( destroy(destroy(destroy(ROWS) / ( -1 ))) ) - Sansa / y - ( ( ROWS ) )][TABLE[COLS][COLS]] * ( -1 ) + ( COLS )
} else {
	Hodor -= bar(( betray(COLS / ( COLS ),-( rule(( rule(TABLE[dog][bar(( -bar(ROWS) ))],( --0.23 )) ),88,protect(--0.87)) ) + -340.662 + -0.47 - 700.5) ),0.55,-840.46) - ( bar(( COLS ),Jon) );
	if(-79){

};
	if(( ROWS )){
	Ygritte += -rule(( mislead(-1) ),40.25) + -1 - y;
	if(-( -Ygritte - ( y ) ) - ( -1 - y )){
	54
};
	if(COLS){
	Jon *= x
} else {
	-0.7
}
} else {
	if(bar(26,--0.94)){
	if(Stark){
	if(( -1 )){
	dog += --COLS;
	x -= -Ygritte
} else {
	Jon -= betray()
}
};
	if(y){
	destroy(bar(( ( -81 ) )));
	x += ( protect(--0.22,betray(--1,---190.311),-Arya * 35) )
} else {

}
} else {
	Sansa += -mislead(TABLE[38][TABLE[-y][protect(-Sansa - Stark + 0.85,COLS + ( 0.14 ) * mislead(( ( Arya ) ) / betray(0.95,470.684,TABLE[foo(COLS,TABLE[Sansa][TABLE[Ygritte][0.6 * protect()]])][-0.02])) + y)]],0.8 + mislead(dog),-rule(-0.24,--( ( protect(COLS / TABLE[COLS][-1]) ) ) * COLS) * ( betray(Hodor) ) - ( bar() ) / -rule(rule(dog)) - COLS)
}
}
}
}
};
	dog *= 1
};
	Sansa -= -18
}
def TABLE[foo(Ygritte)][k] {
	if(bar(ROWS,TABLE[( ROWS - 3 * --64 )][-mislead(-( COLS / Sansa / -980.771 ))],betray(--1,COLS))){
	if(Hodor){
	COLS
}
} else {
	Arya *= ( Ygritte );
	850.98
};
	y += Sansa
}
def foo(x){
	Stark
}
assert ( ( -1 ) ) : "Fear cuts deeper than swords."
var Arya = -Stark * protect(-Arya + ROWS,ROWS,TABLE[0.09][TABLE[( mislead(ROWS,1) )][( -COLS )]] / 0.02 - Hodor)
def TABLE[-protect(( ( --bar(Sansa,x) ) ) + ( bar(-1) + bar(COLS,Ygritte) ))][j] {
	-0.65 / -1 + 0.2;
	-dog
}
var dog = ( protect(COLS * COLS / -0.07,mislead(-betray(ROWS,mislead()),protect(( --0.66 ))),Sansa) )
def betray(Sansa,Stark,x){

}
assert ( Jon ) : "Fear cuts deeper than swords."
var dog = -0.88
var y = foo(mislead(betray(COLS)),bar(ROWS - protect()))
var x = -( ( Sansa ) ) - foo(--TABLE[48][( Jon )],( ( rule(85 - 0.87) / -64 * ROWS - ( ( --60 ) ) / -1 * dog ) ),y * -0.42)
def TABLE[TABLE[rule(--ROWS,( foo(( 0.35 ) - -( -y * -x )) ),Arya)][COLS * Sansa] + -Ygritte + -( 1 )][k] {
	Hodor /= 0.89
}
assert 9 : "Winter is coming"
def TABLE[Hodor][j] {

}
assert -160.29 : "Winter is coming"
assert -TABLE[-dog][( x - ROWS )] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(y,x){
	if(-0.1){
	Sansa /= Sansa;
	0.06
} else {
	protect(( ( -Hodor ) ));
	-rule(Stark)
}
}
def TABLE[-x][k] {

}
var x = ROWS
assert bar() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = -TABLE[destroy() - -0.66][( foo(x,ROWS) )] - Arya * -480.01
var y = dog
def rule(){
	-0.25 - ( Sansa )
}
var Jon = 65
assert -betray(bar(-500.1 / COLS + ROWS),-Sansa,Sansa) : "Nothing burns like the cold."
def bar(Stark,x){
	dog /= ROWS + -14;
	if(bar()){
	Stark;
	Hodor += ( -23 );
	( x ) - Ygritte
}
}
assert ROWS : "Nothing burns like the cold."
var Jon = Ygritte
def TABLE[COLS][j] {
	if(-0.89){
	x *= ( Ygritte ) + destroy(TABLE[( mislead(-Jon,0.38) )][-( -26 )]);
	if(-COLS){
	if(COLS){
	y += -2;
	if(Jon){

}
} else {
	rule()
};
	Ygritte *= y
} else {
	Jon;
	if(Arya * -0.59){
	y *= TABLE[-( TABLE[TABLE[TABLE[ROWS][( -( Ygritte ) )]][0.09]][protect(TABLE[betray(ROWS,( -0.99 ))][y],Ygritte,Arya)] - TABLE[-Stark - destroy(Stark + TABLE[dog - -68][( -rule(--mislead(( ( mislead(y) ) ),COLS) / ( betray(0.14 / -820.52,rule(),-800.15) ),1) )] + COLS,protect())][Arya] ) * -330.3][( 29 )];
	if(mislead(-470.26,740.196)){
	protect(Stark,-( ( ( protect() ) * COLS ) ),-0.67);
	( bar() )
}
} else {
	COLS
}
}
} else {
	Sansa /= ( ROWS );
	dog
}
}
def TABLE[23][j] {
	if(( 0.03 + --( -x / --x + bar(destroy(( --1 ),betray(Jon,-( -destroy(Jon,x) ),( -( COLS * COLS + -0.77 - ( foo(-dog,ROWS + destroy(1)) ) ) )) * 0.7)) ) * y - Jon - ( -TABLE[-foo(Ygritte,Sansa,ROWS)][COLS] ) )){
	if(ROWS * rule(Stark)){
	if(0.97 + ( ( -0.55 ) )){
	y /= TABLE[mislead(betray(-1))][( ROWS )]
}
};
	Ygritte += ( -51 ) / Hodor - -betray(foo(bar() + ROWS,0.83,( TABLE[COLS][0.32 / 0.7 + -destroy(-0.21,80,1) * -destroy(( ( mislead(y) ) ),ROWS) / betray(protect(( 97 ) + rule(),bar(ROWS,COLS,--0.33))) + -28 - COLS / protect(x,TABLE[COLS][Ygritte])] )),TABLE[( ( 660.7 ) )][mislead(Stark,COLS,protect() - rule(-COLS - -ROWS / -( betray(Ygritte,y / 30.3817) ) - ROWS * -510.7022,foo(y,TABLE[( 0.55 ) / --0.51][--1],Ygritte))) / -71])
} else {
	Jon /= Hodor;
	73
}
}
def TABLE[Sansa][j] {
	--1 / -0.44
}
def TABLE[-betray()][k] {
	-0.26
}
var Arya = foo(-( TABLE[-x][rule()] ),1)
assert rule(-( destroy() ) - ( destroy(protect(mislead(800.08 * -0.22,Jon,TABLE[Arya][COLS])),bar(( COLS ),destroy()),( -ROWS - -COLS )) )) : "Fear cuts deeper than swords."
var Sansa = ( bar() )
assert Arya : "Winter is coming"
var Jon = 0.33
def TABLE[-59][k] {
	if(-46){
	if(COLS){

} else {
	Arya /= 42;
	x
};
	-Ygritte / rule(86,COLS);
	if(--1){
	Stark += 170.65;
	bar() - Jon;
	Stark /= Hodor
} else {
	protect(Arya * -1 / betray(ROWS));
	TABLE[ROWS - betray(destroy(0.52,TABLE[-0.23][-980.494]),( Arya ))][-protect(y)];
	if(-TABLE[TABLE[Jon][rule(dog,dog)]][-0.45]){
	if(( TABLE[TABLE[ROWS][x] * TABLE[COLS * ( TABLE[Ygritte / -590.86][Jon] ) - foo(-( y ),destroy(( rule(Arya,foo(-0.26,-( COLS ),mislead(COLS / --0.63,Arya,COLS)),-14) ),-1,--( -COLS ))) * destroy(dog)][-Ygritte] / -60][Ygritte] ) / TABLE[-0.81][Ygritte]){

}
}
}
}
}
def TABLE[Jon][j] {
	Arya -= Jon
}
def TABLE[( ( ROWS ) )][j] {
	if(-bar(Arya) - dog){
	if(dog){
	Sansa;
	foo()
};
	Sansa *= foo(rule(betray()))
} else {
	if(0.58){
	if(( x )){
	Stark += 82;
	Arya /= protect(( destroy() ) + ( ( TABLE[---x - -ROWS][ROWS] ) - Stark ),y)
} else {
	Sansa *= Jon
};
	if(--84){

} else {
	( Hodor );
	foo(protect(COLS));
	if(( ( -( TABLE[-0.81][( -1 )] ) ) )){
	Stark;
	dog /= -( destroy(COLS) );
	if(-betray(( --x ),0.73) + Arya){
	Ygritte *= rule(Ygritte,destroy(ROWS),COLS * Ygritte)
}
} else {
	x *= ( destroy(COLS,protect()) / Sansa );
	Stark;
	if(ROWS){

} else {
	if(-600.866){
	if(-( Arya )){
	Hodor *= -x;
	y *= ( Sansa )
} else {
	Sansa /= ( -11 ) * rule(ROWS) * -ROWS
};
	mislead(Hodor)
} else {
	if(rule(( -0.13 * y ) / ( ROWS ))){
	if(1){
	foo(-1 / y,Ygritte,230.98 / -( Hodor * -COLS ));
	if(mislead(protect(( ( ( ( Jon ) ) ) * -foo(-Arya) )))){
	Jon -= -0.24
}
} else {
	dog *= y;
	y += Sansa / bar(--3,COLS) / ROWS
}
}
};
	if(destroy()){
	if(-Ygritte){
	x -= ( 0.72 )
};
	Stark /= ( Stark )
};
	Ygritte *= ( TABLE[( ( rule(protect(40,--bar(ROWS)),( --0.6 )) ) * Hodor ) - ( ROWS ) - ( mislead(y) )][COLS] )
}
}
}
} else {
	Jon /= 63;
	-0.76;
	( ( -ROWS ) )
};
	if(-Arya + -( Hodor ) / 0.76){
	if(86){
	if(--( rule(1) / destroy(TABLE[( COLS )][foo(--( ROWS / 0.69 ))]) - rule(ROWS,betray(TABLE[-y][( -Sansa * COLS * -COLS ) - COLS + destroy(foo(-1 + Jon / -47),--0.17)] + Ygritte)) )){
	if(-65){
	if(( ( betray(COLS) ) )){
	if(ROWS){
	Stark /= -COLS
} else {
	if(mislead(Arya)){
	if(TABLE[dog / betray() - -890.4][-Stark]){
	Hodor += ROWS
} else {

}
} else {
	if(( -( ( 1 ) ) )){
	y /= foo(-1)
};
	y += -rule(1,TABLE[TABLE[TABLE[( ROWS )][COLS] + betray(ROWS,destroy(0.35 + -( -bar(-y,( mislead(rule(ROWS),protect(TABLE[0.18 + ( 90 )][Arya])) * COLS )) )),( -x ))][x]][dog]);
	Hodor
};
	dog *= Sansa + ( 34 )
};
	if(Ygritte){
	COLS;
	Stark
};
	Ygritte -= mislead(dog,destroy(protect(-COLS,1)))
} else {
	Stark *= Jon
};
	Ygritte += ( x + Arya );
	if(1 + ( Arya ) - -89){
	y *= rule(Hodor);
	if(rule()){
	if(x * 960.49){
	if(Sansa){
	if(rule(protect(90.1),destroy(mislead(Hodor) / COLS,bar(( ( rule(0.94,Ygritte,y) ) ),Stark,( Ygritte ))),ROWS)){
	y -= -1
} else {
	y /= ( dog + dog )
}
}
} else {
	Hodor /= COLS
};
	if(TABLE[Arya][Hodor]){
	Ygritte /= -13
};
	( -1 ) + -betray(COLS - --dog,dog) * -foo(foo(0.11),43) * foo(( Hodor ),( dog ))
} else {
	x -= TABLE[-0.83 + ( -0.45 )][---ROWS - ROWS - dog - -95 + ( ( COLS ) )];
	if(4){
	Arya /= ( y );
	Jon;
	Arya /= ( protect(dog) )
} else {
	if(rule()){
	Jon /= bar(x)
};
	if(-bar(Jon,( -TABLE[TABLE[--0.56][( ( ROWS - y ) )]][--protect(betray(-0.62,dog)) - -protect(-rule(bar(ROWS,-580.46,ROWS + -0.32)),ROWS + ( ( TABLE[TABLE[-Arya / -0.34 * bar(( y ))][-0.35] * -( ( Jon ) )][destroy(-90)] ) ),dog) / TABLE[Arya * -( --98 )][17]] ),0.22) - -foo() * TABLE[( ( ( TABLE[-1][Stark] ) ) - -0.4 )][Jon] - -mislead(Hodor,Jon,Sansa) - -x){

} else {
	if(-890.293){
	y *= -( -0.98 / COLS ) - 0.04 + -0.68
} else {
	Jon *= 0.5;
	Jon -= Stark;
	Ygritte -= Sansa
};
	if(dog){
	-58 + -20;
	Hodor += 12
}
};
	if(-TABLE[protect(y - 0.73 - -260.9,( ( ROWS ) ))][dog] - --ROWS - ( ROWS )){
	x /= y + rule(protect(protect(( ROWS )) - -protect()),TABLE[--TABLE[( ( 1 ) )][destroy(( ( betray() ) ),destroy(betray(),--ROWS)) / -58]][( Stark )]) - -foo(( ( -0.99 ) ));
	y /= Ygritte - -86
}
}
};
	-1
}
};
	Stark += ( ROWS )
};
	if(-1){
	61 * -Ygritte - COLS;
	Jon += ROWS
}
}
} else {
	Jon /= rule(( x ));
	( ( -1 ) )
};
	-( 0.85 )
}
}
def destroy(Jon,Arya,dog){
	Ygritte -= protect();
	if(destroy(Arya * COLS,-79)){
	Ygritte += -Ygritte * Stark
};
	if(ROWS){
	TABLE[ROWS * bar()][foo(rule(COLS)) - destroy(--670.144,-94) + COLS];
	x *= ( -1 ) * -160.4501
} else {
	-ROWS
}
}
def destroy(Ygritte){
	if(1){
	-x
} else {
	if(COLS){
	if(( Ygritte / ( ( Arya ) ) )){
	Ygritte += -betray(x)
} else {
	y *= Sansa - ( mislead(mislead(-( -87 ) - ( Stark ),Stark)) );
	Stark /= ( 0.89 * 59 )
};
	Stark /= 0.02
};
	if(TABLE[( 95 )][Ygritte]){
	rule(( Stark - ( ( ( ( dog ) ) ) ) ),ROWS)
} else {
	x -= ROWS / rule(0.34,Ygritte * ( 0.87 ));
	51
}
};
	if(bar(( -220.9183 ))){
	Stark -= betray(Arya)
}
}
def foo(Sansa,dog){
	Arya /= -440.766 - 0.45 / -330.363;
	if(--25){
	rule();
	TABLE[Jon][dog]
} else {
	Arya /= Ygritte;
	if(-mislead()){
	if(( -77 )){
	dog /= --650.25
};
	-( dog ) * Ygritte
};
	if(x){
	if(Ygritte){

} else {

}
}
}
}
def betray(dog,y){
	if(Arya){
	---Jon - -Sansa + -1 * TABLE[560.9][( ( Arya ) )] - -( Sansa + -56 )
};
	Arya *= -18;
	Arya + y
}
assert -0.34 : "Nothing burns like the cold."
def TABLE[-protect(( 0.04 ))][k] {
	( 0.5 )
}
def TABLE[( -250.588 )][k] {
	Ygritte /= ROWS;
	Hodor -= ( -0.11 )
}
def mislead(Hodor,Ygritte){
	Hodor
}
var Sansa = -1
var Stark = protect(y,-( destroy(( -Ygritte )) ),-TABLE[-dog][-1 * -COLS])
var Ygritte = Ygritte
def TABLE[-1 / -TABLE[86][protect(--57,10 + Stark,Hodor)]][j] {
	Stark;
	Ygritte
}
assert betray(Sansa,destroy(( -betray(COLS) ),betray(Stark * -destroy(mislead(dog,betray(-ROWS,-TABLE[protect(destroy())][--180.444]),betray(93,--1)),0.43,COLS),( foo(Hodor,( TABLE[( -480.24 + ( Hodor / -19 ) / protect(-COLS / COLS,( destroy(COLS) )) )][ROWS] )) )))) - ( -360.084 ) : "One can not simply parse himself"
assert 640.241 : "One can not simply parse himself"
def mislead(dog,Sansa){
	y *= mislead(destroy(TABLE[ROWS][( 0.85 )],Jon),-140.8 + ROWS)
}
var Stark = x
assert TABLE[( mislead(ROWS) )][( ---0.54 )] : "Fear cuts deeper than swords."
assert 1 : "Nothing burns like the cold."
def mislead(Hodor,Hodor){
	7;
	if(ROWS){
	ROWS;
	if(-rule(( bar(81 - -100.476) ),Jon)){

}
}
}
def bar(x){
	y /= betray();
	TABLE[mislead(( ROWS ),( ROWS ),-34 * -protect(Jon))][( -TABLE[COLS / --( TABLE[y][protect(bar()) / ( -56 )] )][0.44] )];
	1
}
def TABLE[foo(( 30 * Sansa ))][i] {
	x += TABLE[TABLE[COLS][Ygritte]][0.68 + foo(COLS)];
	if(-( mislead(( 66 ) / -( Jon ) * Hodor + ( -Arya )) )){
	TABLE[-1][22];
	if(0.2){
	x -= Ygritte;
	Ygritte;
	Sansa += foo(Stark,TABLE[betray(betray(COLS) * Ygritte,ROWS)][1],COLS)
} else {
	Jon += Jon - destroy(( -80.13 ),Ygritte);
	if(ROWS){
	( ---0.58 + TABLE[-76][ROWS] )
}
}
};
	if(-0.58){
	Stark -= -TABLE[foo(TABLE[destroy(-y,( ( ( destroy(-betray(Sansa,TABLE[dog][( Hodor + betray(ROWS + TABLE[Hodor][( ROWS * ( Ygritte ) )]) * -x )])) ) ) ))][Arya],Stark)][83 + ( Hodor ) * COLS / ( Hodor )]
} else {
	Stark -= --( 85 * 0.1 );
	Sansa -= -0.71 + --0.77
}
}
var Sansa = 0.9
assert -COLS + Jon : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert TABLE[foo(Sansa + Jon,y,protect(-83,( bar(ROWS / ( protect(TABLE[( y )][rule(betray(foo(-940.259,--( 380.923 ),Arya),y,( rule(betray(( Sansa )),-ROWS * destroy(),y) - ( ( 720.6 ) ) )),TABLE[protect(rule(Jon,ROWS),-( -x )) - Hodor][-3 - ( -0.87 / ( ( ROWS ) - foo(foo(( destroy(( -51 ),-COLS,( Hodor )) ),( Arya / ( -73 ) )),TABLE[-820.023][--37]) ) + -1 )]) - -0.83],ROWS) )) + Arya ))) + ( Hodor )][-0.27] : "Nothing burns like the cold."
var Stark = Sansa
def TABLE[-900.56][i] {
	COLS;
	( ( ROWS + betray() ) )
}
def foo(Arya){

}
def TABLE[( ( -27 ) - foo(( -0.43 ),protect(Jon,0.71 - 10.23 + COLS),Stark) - Hodor - COLS ) / ROWS + bar(bar(Stark + -COLS)) / ( ( ROWS / foo(-50) + Ygritte ) ) + ( ROWS ) - COLS][k] {
	if(mislead() * ( ( Stark ) )){
	if(y){
	if(---1 / ( ( destroy(protect(-ROWS),( ROWS - mislead(destroy(( -33 + ROWS ))) / 190.869 ),Jon * ROWS - -Sansa) ) )){
	x *= foo(destroy(( COLS ),-83) * dog * bar(-COLS));
	if(Jon){
	Ygritte -= 70;
	ROWS
};
	Stark += foo(bar(Ygritte,( x ) - 0.91),--( 0.26 ),ROWS)
};
	Hodor -= x
}
} else {
	( rule(protect(destroy(foo()),Arya),--( y ),Jon) );
	TABLE[COLS][78]
}
}
def rule(x){
	if(( COLS - --( -rule(( betray() ) - Ygritte / 340.3805 / -ROWS + foo(mislead())) ) + Arya + -COLS )){
	if(ROWS){
	-( rule() );
	Jon
} else {
	x *= ( ( y / 0.99 ) );
	95 + mislead(TABLE[( -foo(COLS) )][-ROWS],( --1 )) * Hodor;
	ROWS
};
	if(mislead(Ygritte,Ygritte)){
	-rule()
} else {
	if(-( ( destroy(( ROWS * -y + betray(Hodor * -dog) - foo(( destroy(bar(Stark) - COLS + rule(ROWS),( dog )) ),mislead(( TABLE[90][destroy(( rule(-Ygritte) ),( -Ygritte ),destroy(57)) - TABLE[1][ROWS / TABLE[Ygritte][1 / Jon * betray()] / destroy() / -62]] ) / Hodor,x),COLS * -0.79) / Stark ),--COLS,-0.31) ) ) * ( COLS )){
	TABLE[bar(betray(y,( -250.0298 / -( TABLE[-ROWS / bar()][TABLE[TABLE[ROWS][( mislead(--COLS,dog) )] / -1][-260.9516]] ) * protect(( ROWS ),bar(0.46,-1,TABLE[--( -100 )][COLS])) ),rule(-53)))][protect() + TABLE[ROWS][rule()]] + Sansa
} else {
	if(mislead(56 - Stark + --0 - y * -( ROWS ))){
	Hodor *= bar(-0.8,( protect(( protect(---0.19) - -4 / protect(-TABLE[( TABLE[betray(( Sansa ),rule(72,ROWS),ROWS)][( --COLS / TABLE[-( -( ROWS ) - destroy(0.47) )][-( COLS )] )] )][--bar(COLS,bar(COLS + 1,TABLE[Hodor][( Sansa ) / Sansa / protect() / ( Arya * ( -( TABLE[32][TABLE[( --x ) - -x][Arya]] ) ) )])) - -950.1277 - TABLE[-( ( 1 - destroy(TABLE[ROWS][( -COLS )],--0.03,x) ) )][TABLE[rule(-( Ygritte ),COLS,Hodor)][TABLE[-COLS][foo(foo(TABLE[bar(TABLE[-810.37][rule(dog,-0.28)] + Stark,( Arya ))][-0.73 - ( --destroy(y) ) + destroy(x,-TABLE[COLS][TABLE[-0.96][-betray(( bar(630.62) ),Hodor,COLS)]],TABLE[Jon][-Arya])],rule(TABLE[ROWS][-( COLS )],mislead(( TABLE[( 920.13 )][26] ),Hodor))),( mislead(( ( ( -0.93 ) ) + 1 * -0.65 )) ))]]]],ROWS) * -39 ),-( -1 ),COLS) ) * Hodor);
	x += mislead(dog,1)
} else {
	if(( mislead(Jon,Hodor,( ---( -1 / ( COLS ) ) + Ygritte )) )){
	Arya -= COLS;
	Stark -= ROWS;
	dog /= -TABLE[Hodor][destroy(-0.32)]
};
	dog -= rule(ROWS + TABLE[--1][-1],( ( ( -5 ) ) ),rule(Stark,foo(COLS,( protect(-1) + -580.406 * ( dog / Arya ) + TABLE[-41][-y] * -x ))))
}
}
}
};
	-1
}
def TABLE[( -130.75 )][i] {
	if(( TABLE[Arya / -COLS][ROWS] )){
	( protect() )
} else {
	if(0.83){
	y += 290.6
}
};
	Ygritte;
	Hodor /= COLS
}
assert ROWS : "Fear cuts deeper than swords."
def rule(Ygritte){
	COLS;
	TABLE[betray()][ROWS]
}
var x = ( COLS )
def TABLE[ROWS][k] {
	Ygritte -= ( -360.55 + x / COLS - -1 );
	Ygritte += -0.3;
	Arya
}
def TABLE[--61][k] {
	Sansa += dog
}
var y = ---mislead()
var dog = -TABLE[( ( rule(-COLS / --mislead(-Hodor,-mislead(-420.78,74),--52) * rule(-790.4,( rule(rule(rule(dog - betray(destroy(Stark,Jon,( TABLE[( Ygritte ) + bar(-1)][rule(-910.059)] )) - betray(foo(72,-2),x,( betray(( -( x ) ),-ROWS) )) * ( ( Arya ) ),x)),-bar(-1,-foo(-Stark),( Ygritte )))) )),--destroy(-( COLS ) + rule(destroy(Hodor,-1,dog)),mislead(Ygritte)),ROWS) ) )][( COLS )]
def mislead(){
	foo(( ROWS ),0.01,TABLE[ROWS][-betray()]);
	--0.48 + ROWS
}
assert COLS : "One can not simply parse himself"
def destroy(x){
	Arya *= COLS - ( ( betray(x,COLS,Sansa) ) )
}
def TABLE[( ---( ( -40 ) - ( TABLE[Ygritte][0.76] ) ) ) * -mislead(0.6)][i] {

}
def rule(Arya,Stark){
	if(( -48 )){
	if(( -( mislead(( ROWS ),( Stark ) / ( -rule(( -Hodor )) )) ) - COLS * ( ( -foo(ROWS) ) ) )){
	Hodor *= x
}
} else {
	dog += Stark
};
	Ygritte *= ROWS
}
def rule(dog,Sansa){
	Hodor += bar(foo(rule(( COLS )) * -920.9 * -destroy(-800.8) - TABLE[destroy(TABLE[-420.72][-rule(Stark,destroy(destroy(( Arya ) - Sansa),( -ROWS ),ROWS),( COLS )) / TABLE[Hodor + --rule(COLS)][( 650.2005 )]]) + COLS][( -TABLE[x][Arya] )],-COLS + Jon),TABLE[84][-ROWS],y);
	0.39 - ( -940.209 - --0.93 )
}
assert Hodor : "Nothing burns like the cold."
def rule(dog,Stark){
	if(( TABLE[-COLS / mislead(1,-58) / -Sansa][( -60 )] )){
	if(( dog * foo() )){
	Ygritte *= protect(COLS,-mislead(-Sansa + COLS / Stark - -y - x) - -COLS * foo(( 0.89 ),COLS),protect(-COLS,Arya))
};
	Jon += ( ( Sansa ) );
	x *= TABLE[Jon][--0.85]
}
}
def TABLE[( ( foo(ROWS) - Jon + COLS ) )][j] {
	ROWS;
	( ( protect(8,Sansa,0.77) ) - -0.12 );
	if(--Sansa + TABLE[( ( ( Stark - bar() ) ) * protect(x,-1) )][COLS] * ( -y )){
	Ygritte /= Sansa * Hodor / ( -0.17 )
} else {
	( Hodor );
	Stark *= bar(Ygritte,rule(ROWS,( COLS ) / -61));
	y -= Sansa
}
}
def TABLE[ROWS][i] {
	if(-0.91){

};
	if(destroy(dog)){

} else {
	Sansa /= TABLE[-( ( rule() ) )][TABLE[TABLE[Jon][( --Ygritte ) * betray(60,-Stark,COLS)]][COLS] * betray()] / -betray(-x);
	if(dog){
	if(-TABLE[COLS][( -92 )]){
	--y / -99
} else {

}
}
};
	if(betray(ROWS)){
	x -= -( Ygritte - COLS );
	Jon *= ( 0.59 );
	x *= COLS
}
}
def TABLE[( COLS )][k] {
	if(x){
	if(destroy()){
	if(betray(-( Ygritte ) * ( Sansa ) * 1,destroy(Jon),COLS)){
	if(-81){

}
} else {
	x;
	if(destroy(-51 * ROWS,foo(x,Sansa,( 0.82 )))){

}
};
	if(-ROWS){
	if(COLS){
	Arya += ( dog )
};
	COLS;
	bar(( rule(( -destroy(ROWS,ROWS,TABLE[dog][--Ygritte - betray(-0.47)]) ),Sansa - betray()) ))
};
	Sansa /= -1
};
	dog;
	if(-COLS){
	( rule(-bar(Arya,-0.52)) );
	Stark -= destroy(-11) / 0.24
}
} else {
	dog /= -foo(-0.81 + TABLE[-dog][-x]) - ( TABLE[mislead(Sansa * destroy(COLS,COLS,y / x - ( COLS ) + Hodor * -TABLE[ROWS + ROWS][TABLE[-( ROWS ) / -protect(( ( bar() ) ) / TABLE[y][x])][TABLE[TABLE[COLS][-Sansa]][Stark]]]),( ROWS * Arya / -88 / -350.3 ),( rule(-COLS,-Jon) )) * ( Arya + -0.39 / -740.06 )][--COLS] + ( TABLE[( y )][0.69] ) );
	if(( -1 )){
	ROWS / -Arya + --1 - Stark
} else {

};
	ROWS
};
	Stark /= ( ( 0.27 ) )
}
def rule(Hodor,Arya){
	Sansa *= -660.56
}
def destroy(dog,y){

}
def TABLE[TABLE[foo(( Sansa ),protect(protect(( -COLS ),-TABLE[31][( Ygritte )])))][ROWS] + ( -0.68 / ( ( ( -bar() ) * COLS ) ) )][j] {
	mislead(-Hodor,mislead(-COLS + Ygritte,Stark));
	if(destroy()){
	( COLS )
}
}
def TABLE[TABLE[( Ygritte - ( mislead() ) )][( 16 ) - x]][k] {

}
assert Stark : "Winter is coming"
def betray(x,Sansa){
	if(ROWS){
	Hodor -= destroy(ROWS);
	if(( y - COLS )){
	x /= ---0.87;
	foo(TABLE[-TABLE[Jon][( x )]][-1] / -protect(1,-0.13,( 830.2 )));
	Jon -= --Ygritte
}
};
	if(---620.2){
	if(Sansa){
	mislead(Arya)
} else {
	-TABLE[dog][COLS]
};
	if(destroy(( COLS * foo(-( ROWS ),-1) ))){

} else {
	-destroy(( TABLE[protect(ROWS,--41)][x] ) * ( bar(( -Arya / 0.72 )) ),--( mislead(COLS,foo()) ));
	-160.1568;
	TABLE[-betray(TABLE[-3][betray(Sansa)] * betray(COLS,Hodor),( Stark )) / COLS][betray(Stark,betray(),-47)] + -destroy() - foo(COLS,Hodor)
}
} else {
	( TABLE[Sansa - -Sansa * Jon][( -70 )] );
	TABLE[0.14 + -mislead(mislead(mislead(ROWS,( -92 ) * -51 * --y) + -mislead(( y )),-480.069) + ---ROWS,0.22,protect()) / y][-8]
}
}
def betray(dog,Jon){
	--betray(-( Arya ) * --92 * Ygritte,---dog - ( ROWS ))
}
var Arya = destroy(COLS,-foo(TABLE[TABLE[-930.4753][rule()]][53]))
var dog = Arya * TABLE[TABLE[x][protect(-( Jon ))]][COLS]
def TABLE[ROWS][i] {
	-0.35
}
assert ( ROWS ) : "Fear cuts deeper than swords."
assert ROWS : "What do we say to the Lord of Death?"
def protect(Arya,Sansa){
	dog;
	x -= ( -33 - betray() + -Stark - -TABLE[-0.04][Hodor] )
}
def destroy(Stark,Arya){
	ROWS;
	( ( 6 ) ) + -1
}
assert ( -( mislead(-1,( Arya ),y) ) ) : "Winter is coming"
def destroy(dog){
	-23;
	( -1 )
}
def foo(dog,Jon){
	--( COLS * Hodor );
	if(( 71 )){
	if(-7){

};
	if(x){
	-5;
	if(-26 + ROWS){
	dog *= ---bar() - mislead(betray() - -80.5 * ROWS * ROWS)
} else {

}
};
	-0.72
}
}
def TABLE[--foo(TABLE[-------0.9][protect(( TABLE[mislead(( -1 ))][-COLS] ),TABLE[protect(-1)][foo(Hodor,dog)])],-bar(--40,COLS),-1)][k] {
	if(1){
	if(destroy(( Ygritte ))){
	y -= 1
};
	Ygritte += rule(( -( bar() ) ) - ( Arya ),TABLE[Sansa][-( mislead(Sansa) ) * ( Jon )],-0.98 / 1)
} else {

}
}
assert Arya : "Fear cuts deeper than swords."
var Hodor = TABLE[( -( COLS * ( -0.13 ) ) )][rule(-COLS,-0.34,23) / --Jon]
var Arya = 24
def TABLE[COLS][i] {
	y -= -( destroy(destroy(( ( ( protect(89,1) ) ) ),Sansa)) );
	ROWS
}
var y = ( rule(betray(Ygritte,COLS),destroy(dog)) )
def TABLE[y][k] {
	Stark *= 0.64;
	( -ROWS );
	if(( -350.435 )){
	if(95){
	Stark -= COLS
} else {
	COLS
};
	Arya -= -( Arya - ROWS ) + bar(-1);
	-Sansa
} else {
	if(-22){

} else {

};
	if(Sansa){
	Sansa += TABLE[0.67][rule(-destroy(),ROWS,TABLE[mislead(( protect(mislead(COLS),Arya) ))][ROWS - TABLE[destroy(-14,rule(Sansa,-1))][COLS]])] * x;
	Sansa / Sansa + ROWS
}
}
}
assert mislead(( ( ( -29 ) ) - ( -5 / ( ROWS ) ) ) - x - ( rule(bar(1,y,Arya)) ),COLS,betray(-y - ( Sansa ),-destroy(COLS) / y,( -82 )) / TABLE[Ygritte][19] / ROWS) : "Nothing burns like the cold."
def TABLE[Hodor][j] {
	y /= y
}
var y = 0.02
assert ( 1 + Stark ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = destroy(---Ygritte * COLS)
def TABLE[Sansa][k] {
	if(TABLE[( ( Arya ) )][-protect(mislead(---96,-0.86) / 14 * ( -( protect() ) ),Arya)]){
	x
} else {
	420.357;
	dog;
	if(( -0.33 )){
	Stark /= 0.26;
	if(y){
	Stark += protect()
}
} else {
	Hodor;
	--0.68 * -1 - Arya
}
};
	if(( ROWS ) + 0.34){
	x -= 0.88 - COLS;
	if(dog){

}
} else {

}
}
var Ygritte = bar(TABLE[0.16][Arya],( -0.51 ) * ( COLS ))
def bar(Stark){

}
assert -31 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Jon : "Nothing burns like the cold."
def bar(Ygritte,Sansa,Jon){
	Ygritte;
	Stark /= betray() * x / y;
	foo() + Arya - TABLE[( --610.7 - ( betray(rule(( bar(0.69 + Stark) ),ROWS,Stark / -destroy(ROWS)) * --0.51) * ( -rule(0.55 / 1 / Ygritte,ROWS,Ygritte) ) - 840.13 ) )][Hodor] + -0.28 - protect()
}
assert -( Stark ) : "One can not simply parse himself"
def bar(Arya,x){
	if(--mislead(COLS) * TABLE[-890.7][77] / Ygritte / -76 * bar(0.72,-ROWS * Ygritte) / --980.166){
	y += COLS
} else {

};
	if(-COLS){

}
}
def protect(Stark){

}
def TABLE[( ( -betray(Sansa * -Stark * -( 55 - ( Jon / -ROWS ) ),dog,-ROWS) ) )][k] {
	if(-1){

};
	Arya += ROWS
}
assert -ROWS : "One can not simply parse himself"
def destroy(Sansa){
	if(bar(98 + --1 / rule() + -420.7 / -19 / --0.34,Hodor)){
	Arya -= 87;
	if(( COLS )){
	Ygritte += -ROWS;
	if(68){
	Jon *= -Sansa;
	Jon /= ( -Stark - ( ( Hodor + ( ROWS ) ) ) / -29 );
	if(--1 * Jon){
	if(ROWS){
	if(dog + ROWS){

};
	mislead();
	x /= ( -0.14 )
} else {

}
}
}
}
} else {
	if(bar(--76 / dog * ROWS / 51 * destroy(foo(( --y ),ROWS) * ROWS,bar(destroy(( ( Jon ) ))),TABLE[foo(x,-destroy(( ( Jon - dog ) - -600.777 ),ROWS))][-310.741] + y) * -0.32 + -33 / 0.1 - ( -1 ) * ( x ),Stark)){
	destroy(46 - -0.65 * Hodor / ( TABLE[-20][-1] ) * ROWS) - COLS;
	x *= -19
};
	-1
}
}
assert ( COLS ) : "Fear cuts deeper than swords."
assert ROWS : "What do we say to the Lord of Death?"
def foo(x,Stark){
	betray(( Ygritte ))
}
def TABLE[Stark][i] {
	if(( Stark )){
	if(-0.35){
	TABLE[--betray(protect(mislead(0.43)),-61)][rule(Hodor,-COLS + ( TABLE[-( -0.67 )][betray(y,Ygritte)] )) - -dog];
	-TABLE[TABLE[Arya][( Stark )] + ROWS][TABLE[Hodor + Stark][Ygritte]]
} else {
	Ygritte -= 0.43;
	Sansa /= destroy(COLS)
};
	Stark -= bar(COLS,-0.88,-7)
} else {
	if(-470.3){
	--protect(COLS)
}
};
	Sansa *= Arya;
	Ygritte *= -protect(TABLE[TABLE[79][mislead()]][Arya - -( COLS )],( TABLE[protect(( Jon ),destroy() / ( -rule() - -0.08 * -20 / -0.05 ))][destroy(( Arya / 49 ))] ) * -600.166,TABLE[0.48][COLS] + ROWS)
}
assert ( ( bar(Arya / 26 + COLS - TABLE[mislead(Arya / Arya,dog)][Sansa],( ( --Arya + 0 ) ),bar()) ) ) - 700.415 : "Fear cuts deeper than swords."
def foo(){
	mislead(-( COLS ),( ( -0.8 ) ) - Stark,betray(( ( ROWS ) + Ygritte - bar(destroy(),rule(--1,ROWS)) ),-TABLE[TABLE[-dog][-( Arya )]][protect(94)]))
}
def rule(Sansa,Arya,Sansa){
	Arya += -( -6 )
}
var Sansa = TABLE[rule()][bar(75)]
def destroy(Stark,Jon){
	y;
	if(-1){

};
	COLS - 1
}
assert -rule() : "Winter is coming"
def TABLE[--81][i] {

}
var Jon = 88
var Ygritte = y
def foo(Stark,Hodor){
	mislead(( -bar(y) - -0.15 - foo(Hodor,670.5801) + COLS ),COLS - ROWS - -COLS,foo(-Jon,-20 * Arya,-COLS));
	bar(92,-betray(--ROWS));
	ROWS
}
var Ygritte = ROWS
def mislead(Sansa,Sansa){

}
def TABLE[( -0.23 )][k] {
	88;
	if(TABLE[( ( ( Jon ) ) )][-0.5]){

}
}
def bar(Ygritte,Ygritte){
	if(Jon){
	ROWS
}
}
assert 0.06 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert destroy(130.986,bar(-( ( -1 ) ) * bar(-1) * ROWS,-COLS * ROWS)) : "Winter is coming"
assert TABLE[-930.6946][protect()] : "Fear cuts deeper than swords."
def destroy(Stark){
	( -Ygritte );
	-1
}
def TABLE[( -0.93 )][j] {
	if(ROWS){
	protect(-0.22,betray(Stark));
	ROWS
} else {
	Stark += 71;
	betray(( -0.88 ))
};
	x *= ROWS
}
var x = --0.02 / Ygritte
def betray(dog,Arya,Sansa){
	y -= -Arya * destroy(ROWS) - COLS
}
def foo(Hodor,Hodor){
	Stark += COLS
}
def betray(Ygritte){
	bar(Stark)
}
def TABLE[y * Arya][j] {
	rule(TABLE[ROWS][0.43],1);
	-470.839
}
def TABLE[destroy(( Stark ),TABLE[bar(ROWS,rule(( destroy() ),Stark - ROWS * ( ( 1 ) ) - -mislead(),650.6))][TABLE[( -5 )][890.909]])][k] {
	( y )
}
var Jon = y
assert 0.54 - -COLS : "Fear cuts deeper than swords."
def mislead(Stark,y){

}
var y = mislead()
def TABLE[COLS][i] {

}
def TABLE[foo(ROWS)][k] {
	if(-ROWS){
	( 0.05 ) - y;
	if(-0.04){

} else {
	ROWS;
	Hodor /= y
}
}
}
def TABLE[ROWS][i] {

}
def TABLE[( -( Jon + ( -( TABLE[( ( Ygritte ) )][0.4] ) ) ) )][i] {

}
def foo(){
	x *= -destroy(COLS);
	if(-61){
	x -= Sansa;
	if(-betray(( -TABLE[( -ROWS )][mislead(56,COLS)] ))){
	if(-0.63){
	rule(x,-COLS)
} else {
	-1;
	if(67){
	x /= TABLE[( bar(rule(( COLS ),COLS),( dog )) )][dog];
	( ( ( ( Sansa ) ) ) ) - COLS
} else {
	( x - Jon )
}
};
	if(betray(-520.343,foo() - ( -89 * -66 ))){
	if(47){
	if(dog){
	Jon -= TABLE[ROWS][x] - Sansa
} else {

}
} else {
	if(0.68){
	Stark /= -TABLE[ROWS][--protect(ROWS,( Jon ),-0.56)]
}
};
	Hodor /= ( 22 )
};
	x *= -630.51
}
} else {
	rule(( ( Arya ) ));
	Stark += destroy(foo(y,-0.55),protect(betray(-destroy(( TABLE[COLS + Stark][ROWS] )) / -Arya - mislead(betray(-mislead(-1,( ( ( -550.361 ) * ( Stark ) ) )) / -0.08 / Sansa,foo() + betray(Jon,-( Hodor )) - -68)),destroy(0.71,Ygritte)),( -140.36 ) - --Arya,dog))
}
}
def TABLE[( Arya )][j] {

}
def protect(dog){
	Hodor += ROWS - Jon + Jon + -15;
	Stark *= bar();
	y += COLS / TABLE[-1][Jon] / 0.46
}
assert ( -dog ) : "What do we say to the Lord of Death?"
assert ( destroy(ROWS + -Sansa) ) : "Fear cuts deeper than swords."
def protect(dog,Stark){
	( ( mislead(destroy(mislead(( -1 ),foo(foo(bar(COLS)),( 0.77 ))))) ) );
	x -= y
}
def protect(Arya){
	if(Ygritte / Ygritte){
	-( 0.93 / --( Stark ) ) + ( -11 );
	if(TABLE[COLS][440.712]){
	mislead(betray(ROWS),-13,bar(( Arya )))
} else {
	-1 + -dog;
	( destroy(( mislead(x,COLS) ),x) )
};
	if(970.726){
	Jon *= 90
}
};
	Jon -= y;
	ROWS
}
def bar(Stark,Hodor){
	if(91){
	Sansa /= Jon / ( bar(( ( rule(-foo(x,Stark,0) + -0.95,( -COLS + 45 )) ) ),( y * rule(Hodor - COLS,-1,Hodor) - -( --40.33 ) + ( ( ( COLS ) ) ) ),-45) * y );
	x *= -Ygritte;
	-Ygritte
} else {
	if(destroy(-( --rule(-( -37 ) / Sansa / Stark + -ROWS,bar(-( COLS ),7),( COLS )) ))){
	if(COLS){
	Sansa /= x;
	dog
} else {
	Sansa += -0.08
};
	ROWS
};
	( ( Jon ) )
}
}
assert -bar(-( dog )) : "What do we say to the Lord of Death?"
def protect(Jon){

}
assert ROWS : "Winter is coming"
def TABLE[Ygritte][k] {

}
var Stark = ROWS
assert -( Arya ) : "One can not simply parse himself"
def TABLE[TABLE[-0.9][-1]][k] {
	mislead(( Hodor ));
	if(--7){
	Stark /= ROWS;
	if(0.48){

} else {
	( TABLE[dog][-110.09] ) + COLS;
	0.6;
	if(Sansa){
	0.75
}
}
} else {

};
	Sansa += Sansa
}
assert dog : "What do we say to the Lord of Death?"
assert -Hodor + --0.66 : "Nothing burns like the cold."
def TABLE[-35][j] {
	if(rule(-( protect(ROWS) ))){
	Sansa /= ( TABLE[-1][destroy(COLS - -1,-x)] )
} else {
	( -97 );
	Ygritte;
	Jon
};
	-0.9
}
def mislead(Ygritte){
	Sansa *= 88;
	if(--Arya){

}
}
assert -COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[betray(rule(-3),Jon)][k] {
	if(-ROWS){
	Hodor += 430.4702;
	if(-( ROWS )){
	betray(COLS,foo(( ROWS ) - y + ROWS / Sansa * rule(( -Ygritte )),( bar() ),Stark))
} else {
	dog /= ( -( ( x ) ) ) * TABLE[-x][Arya] + ( -mislead(betray(-0.13,-Sansa,-27) * -( TABLE[mislead()][rule()] ),ROWS,-Hodor) / Ygritte );
	x *= mislead(mislead(),-400.88) * -( ROWS )
}
} else {

};
	if(( -370.65 )){
	rule(( ( -Jon ) ))
} else {
	Hodor -= -0.78
}
}
def TABLE[--dog][k] {
	Stark -= -rule(dog,Arya);
	Jon *= betray(foo(ROWS));
	Jon -= destroy(( COLS ) + -Arya - Jon + ROWS)
}
def mislead(y){
	if(ROWS){
	x /= foo(Stark * Sansa) * TABLE[COLS][-( -x )]
} else {
	if(Sansa){

} else {
	if(----mislead(COLS / -ROWS * destroy(Arya,1,TABLE[( Hodor )][( TABLE[( ( --55 ) ) - Arya * bar()][Arya] )]) / ( ( ROWS ) ) + -( x ))){
	Sansa -= dog;
	1;
	if(y){
	( COLS )
}
};
	Hodor += ( foo(bar(-TABLE[( bar() )][COLS] + ( COLS )),-ROWS - Sansa) );
	490.774
};
	0.48
}
}
def foo(){
	x -= COLS;
	dog += -Ygritte / ( rule(-destroy(Arya),rule(( -0.24 + 0.57 * 930.43 - -betray() * TABLE[COLS][( -COLS )] )),( --38 )) );
	Jon -= ( --x / COLS )
}
var dog = COLS
assert -betray(-Hodor,TABLE[--Arya - -140.3][18],0.27) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert foo(bar(destroy(),( Stark )),-rule(),ROWS - ( -470.38 )) + -0.31 + -63 : "Fear cuts deeper than swords."
def betray(Arya,Stark){
	TABLE[foo(ROWS,-betray(-0.7 / Jon,0 - 88) / ROWS) / TABLE[-27][-870.987]][TABLE[( -ROWS / -( ( ( bar(protect(-ROWS),COLS,TABLE[Ygritte][--430.326]) ) ) ) )][( -0.41 )] * ( ( ( ( -Hodor ) ) ) )]
}
assert -( 61 ) - -( betray(COLS) ) : "Nothing burns like the cold."
assert COLS : "What do we say to the Lord of Death?"
var Sansa = Sansa
def TABLE[COLS][i] {
	if(( protect(( Hodor ),destroy(mislead())) )){
	Hodor - COLS
} else {
	if(-foo(-0.59,30)){
	dog;
	if(COLS){
	y -= mislead(---12);
	if(( 0.66 )){

} else {

};
	ROWS
} else {

};
	if(( bar(betray(rule(-1,protect(Arya,-1,y / Arya)),-( TABLE[Jon][-Stark / 0.79] ) + Ygritte + -rule(dog,( Arya ))),-0.05) )){
	TABLE[-98][ROWS / rule(destroy() + --( 62 ))]
}
} else {
	ROWS
};
	if(-20 + -destroy(-60,-bar(COLS))){
	if(--destroy(ROWS)){
	if(Jon){
	dog /= ( foo(( foo() )) ) * COLS;
	dog /= y;
	x / rule(dog,( Sansa ),-COLS)
}
} else {
	-dog;
	( ( ( ( COLS ) ) ) )
};
	dog -= Arya * -820.681
}
};
	if(( ROWS ) / ( Arya ) / ( COLS )){

}
}
def TABLE[Stark][k] {
	Stark *= --0.14
}
def foo(Hodor,dog,x){
	dog -= COLS;
	Hodor *= ( betray(-770.02,COLS,TABLE[-destroy(1,-610.57,( -1 - ( TABLE[( ROWS )][( -47 )] ) )) - Arya * dog + bar(foo(-TABLE[dog][mislead(foo(39,-COLS - mislead(Hodor,Jon) / -41 + dog,( foo(destroy(( TABLE[-0.18 - -0.22][ROWS] ),destroy(Stark,( bar(-( COLS ) * COLS - -Ygritte - -41,-Stark,-TABLE[ROWS - bar(COLS,-dog) * COLS * -640.3 + protect(0.58)][-Arya]) )) / protect(-33,-1),( ROWS )) - destroy(-0.87,protect(( Stark ),dog))) )) * 65)],( ( -COLS * --0.09 ) )),foo()) * Jon * dog][bar(rule(ROWS),Arya,( -bar(TABLE[rule(TABLE[( -COLS )][-COLS - 1])][COLS],TABLE[foo(---ROWS)][0.49]) ))]) ) - rule(-ROWS,90.4);
	-1
}
def TABLE[-68][k] {
	if(-1){
	-( foo() )
};
	if(Arya){

}
}
def TABLE[-0.02][k] {
	( ( TABLE[x][-0.07] ) + y );
	if(dog){
	x -= TABLE[-1][( -x )];
	-23;
	if(COLS){
	Stark /= ( foo(Sansa) );
	if(1){

}
}
}
}
def bar(Arya,x,dog){

}
def TABLE[destroy()][k] {
	( -y );
	protect(-TABLE[( ROWS )][-79 + ROWS],destroy(mislead(),rule(mislead(-dog,-1,( Jon )) - Hodor * y) + mislead(y)) - ( bar(( -TABLE[( ( ( -ROWS ) ) )][( 0.13 )] + 58 ),betray(-1)) * ( rule(--1,( TABLE[---mislead(2,-rule(( -Arya ),betray(mislead(( protect(-destroy(Jon,( Sansa ),-57)) ),x,-rule(-( COLS )))),( -530.91 )),1 * TABLE[-destroy(-( -destroy(rule(-17,protect(TABLE[0.79][-390.33]),TABLE[1][-250.714]) + rule(Ygritte) * ( Arya / x )) )) / Stark][( mislead(Arya) )]) * Jon + 76][-Jon] )) ) ));
	dog
}
var Jon = ( -30 )
def TABLE[TABLE[-protect() - Sansa * Jon][y]][i] {
	( -COLS );
	Jon -= --foo(74 + destroy(COLS / Hodor,y),foo(TABLE[( ( COLS * dog ) / -0.48 )][--0.64]));
	if(TABLE[ROWS][-y]){
	Hodor /= rule(Stark,-77);
	if(bar(mislead(-( protect(dog - ROWS,( TABLE[protect(y,Arya,( --( 36 ) / Sansa - ( ( -TABLE[COLS][( -( Ygritte ) )] ) ) ))][990.43 + -( ROWS * ( COLS ) )] ) / TABLE[-Arya + ( ( COLS ) )][-TABLE[TABLE[COLS][-( Arya + 62 )]][( 0.76 )]],ROWS) ),bar(( destroy(COLS,-0.45) ),destroy(-( COLS ),dog,-( COLS )),Jon)),( 1 ))){
	if(COLS - TABLE[-48][-61 / ---dog + -0.56 - 5]){

} else {
	Hodor -= rule(TABLE[Jon][( ( -1 ) )],( mislead(( -( 59 * ROWS ) ),( -1 )) / 22 ));
	y
}
} else {
	if(( COLS + COLS )){
	dog;
	dog -= ( --protect() );
	Jon /= betray(Stark)
} else {
	if(Stark){
	Ygritte += -0.66
} else {
	Ygritte;
	Arya
};
	if(TABLE[TABLE[rule(0.48,ROWS)][( 650.474 )]][( protect() )]){
	Sansa *= -41 + -TABLE[50.9449][-0.2];
	Jon /= TABLE[-16][Hodor]
}
}
}
}
}
def TABLE[( destroy(bar(Hodor + Stark,( protect() )),bar(Sansa) - ( foo(( -protect(( --protect() / TABLE[( Hodor * -foo(--betray(-TABLE[Arya][Sansa]),rule(ROWS)) )][Jon] / ( -betray(-protect(-1,foo(rule(COLS,Hodor) / --46 * foo(--41) / Arya,dog * 670.759) * TABLE[Ygritte][--1 * ROWS] * ( ( ( --860.69 + Ygritte ) ) )) - foo(( -( bar(rule(-1,( ( ( ( Jon ) ) ) ),foo(ROWS - ( -protect(dog,( ( Ygritte ) ),( COLS ) * ROWS) + ( ( destroy(TABLE[TABLE[1 / protect(-Hodor)][Hodor]][COLS],-0.8,TABLE[y][( -1 )]) - Stark / TABLE[---96][dog] ) ) ) + Arya,Hodor)),Stark,-rule(y)) * ( Hodor ) ) )) * mislead(COLS)) * ROWS ) ) + ( Arya )) + protect(-Ygritte,x,foo()) ),-150.1 * -Jon * dog * COLS,protect(( -( COLS / -140.4 * betray(betray(Arya),( Sansa )) ) ),betray(Ygritte),570.1 + mislead(foo(dog)))) )) )][j] {
	Arya -= TABLE[rule()][ROWS];
	if(TABLE[( -( COLS + protect() ) )][-protect()]){
	if(rule(--10,-Stark)){

}
} else {

};
	ROWS
}
def TABLE[1][i] {
	x += 0.86;
	if(ROWS){
	Jon *= ( -( foo(Hodor) * COLS ) )
}
}
var Hodor = ( --0.79 )
def TABLE[-bar(y,-0.17)][j] {
	Stark -= --630.696
}
assert Jon : "Nothing burns like the cold."
var Stark = Hodor
var Jon = destroy() * TABLE[mislead()][betray() - -Ygritte]
def TABLE[-830.434][i] {
	x -= -TABLE[bar(--COLS) * betray(( -730.61 ),dog) * destroy(( 89 ),-1,-0.14)][TABLE[( foo(( ( -TABLE[betray(bar(--x + 0.78,( ( 0.14 ) )) / -( ( 81 * Hodor ) ),COLS) - x][COLS] ) ),Sansa) / protect(Jon / Jon,Arya,x) )][( y )]]
}
var y = -( y )
var Jon = Stark
def betray(Hodor){
	COLS;
	x -= TABLE[-0.58][-ROWS]
}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = betray(dog)
def foo(Arya){
	if(1){
	rule(ROWS)
} else {
	y += y
};
	TABLE[Stark][( TABLE[mislead(( TABLE[( TABLE[-( -ROWS ) + ( -Ygritte ) * Jon / protect(x,ROWS,ROWS) + dog][( ( mislead() ) )] )][ROWS] ),-Ygritte)][-bar(( mislead() * TABLE[( -0.93 ) / TABLE[( -Arya * foo(63,( x ),COLS + ( dog )) )][destroy(COLS + betray(Arya,( -bar(Arya,-0.56 * ( -56 )) / ( TABLE[x][( bar(Stark) )] ) + rule(0.44,1) ),-protect()) / ( 48 ) * --37)]][( dog )] ),Hodor + protect(83,( dog ),221) / ( -( ---900.22 ) ) * rule(protect(TABLE[TABLE[( ( ROWS * ( 0.11 ) ) )][ROWS] - ( bar(( 1 )) * ( ( TABLE[-COLS][610.8] ) ) )][-mislead(--bar(-1,TABLE[protect()][( 6 )] * ( -ROWS + ( -( 87 ) ) ),mislead(destroy(),bar())) - -bar(COLS))],Hodor,COLS / -61 * ( rule(--1,ROWS,dog) ) / --950.21 - protect() / mislead(-y)),0.21) / -COLS * Ygritte * Arya) - TABLE[destroy(mislead() + destroy())][-35]] )]
}
var dog = Ygritte
assert Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Sansa){
	if(Stark){
	rule(ROWS,Sansa)
} else {
	x /= dog
};
	x -= -protect(COLS) + -270.645;
	x /= -Stark
}
def bar(){

}
var dog = COLS
def TABLE[ROWS][i] {
	mislead(ROWS,bar(-bar(( ( Hodor * -60 ) )),rule(protect(Stark,destroy(TABLE[( bar(ROWS,-95,foo(x,COLS)) )][foo(-foo(-93,Ygritte))])) * betray(-76)),foo(ROWS,y)))
}
var Stark = ROWS
var Stark = -destroy(-0.9)
var x = dog
def destroy(dog){
	dog /= COLS;
	if(ROWS - 78){
	if(680.7 * COLS){

};
	rule(94)
}
}
var Hodor = rule(( -foo(-( Arya ),destroy()) ))
assert TABLE[( COLS )][ROWS] : "Winter is coming"
assert TABLE[Ygritte][Sansa] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -0.06 - betray(y,( -49 / 1 ),ROWS / x) : "What do we say to the Lord of Death?"
def destroy(y,Jon){
	y -= dog
}
def TABLE[Hodor][i] {
	if(y){
	if(ROWS){
	if(Hodor){
	if(1){
	dog += COLS;
	x += Stark
}
} else {
	Jon += ROWS
};
	x += -780.49
};
	bar(rule())
} else {
	ROWS;
	if(-66){
	-50;
	if(Stark){

}
};
	-bar(Arya,( ( Hodor ) ))
};
	COLS
}
assert -Stark : "What do we say to the Lord of Death?"
def mislead(){

}
assert destroy(-1,betray()) : "Winter is coming"
def TABLE[Sansa][k] {

}
def bar(Sansa,Arya){

}
def betray(y,Hodor,Jon){
	COLS;
	Hodor
}
assert -ROWS : "Fear cuts deeper than swords."
def protect(Stark,Arya){

}
def TABLE[0.09][j] {

}
def TABLE[bar(Arya,0.32 / TABLE[-Ygritte / ROWS][-( -1 )])][i] {
	Hodor += y;
	ROWS;
	COLS
}
var x = 870.6088
var Hodor = COLS
var Stark = -1
assert COLS : "One can not simply parse himself"
def protect(){
	Sansa -= 34
}
assert -bar() : "Fear cuts deeper than swords."
assert -ROWS - -Jon : "Winter is coming"
def TABLE[51][k] {
	if(Ygritte + -COLS * -Ygritte){
	if(Sansa){
	if(( ( 980.48 ) ) + 70 + COLS / ROWS + ( x )){

} else {
	if(--0.94 / Jon){
	COLS;
	if(destroy(destroy(),betray(-1))){
	Stark -= ROWS;
	( ( ( Sansa ) ) ) / 0.81 + ( ( -bar(( ( -COLS ) ),-ROWS,-0.02) ) ) + ROWS
};
	if(( ( -0.1 ) )){
	Arya /= -COLS;
	-mislead(( Stark ));
	y += 82
} else {
	Arya += COLS;
	if(Jon){
	x /= ( TABLE[Sansa][y * 16 / ROWS] );
	dog *= x
} else {

}
}
} else {
	Hodor += betray(rule(-270.89,COLS,( rule(-y,( Hodor - -120.64 )) )));
	Hodor += COLS
};
	Sansa -= TABLE[( ( 280.982 ) )][protect(TABLE[( Jon )][ROWS] * -rule(-mislead(( --TABLE[ROWS][-450.4459] - ( Ygritte + -Jon ) - bar() - ( -25 ) + ROWS )),foo(-51,y)),-x,-20) + bar() * ROWS - Jon]
};
	-Ygritte - Hodor - destroy(( COLS ),1,-730.074)
} else {
	Hodor -= ( TABLE[TABLE[COLS][TABLE[x][1] * TABLE[-0.5][( foo() / betray(-0.99,-0.78,y) )]]][( ROWS )] );
	-foo(Jon / COLS - Stark,( protect(14,( -1 ),COLS) ))
}
} else {
	mislead(Sansa,( mislead(-Arya,COLS) )) + 0.95
};
	if(Sansa){
	if(TABLE[-Sansa][rule()]){
	dog -= mislead(Hodor + ( TABLE[TABLE[Jon][( Sansa )]][mislead(-( TABLE[TABLE[-foo(( protect(Jon) * COLS ))][-0.83]][( TABLE[rule(-( TABLE[( ( betray(( betray() ),Stark,-39) * Arya ) * COLS * destroy(-1 / ( TABLE[-----Arya / x][--Sansa / y] ) / bar(( Ygritte ) * dog),-86) + TABLE[-mislead(--0.92,TABLE[rule(dog,-Jon)][--0.94],mislead(foo(foo(dog + -( ROWS ),-1,-1000.36)) - TABLE[( -protect() * ( -950.087 ) / -24 )][-Jon],-1))][Hodor] )][ROWS] ),destroy(Arya,betray(foo())))][-Ygritte] )] ) * -bar(Sansa,protect(( TABLE[-0.22 + bar(-0.5,160.695) / betray(-0.18)][COLS] ),0.52)) - -51 / ( foo() ),ROWS * protect(destroy()) * ROWS + destroy(ROWS),( -410.59 ))] ) * COLS)
};
	if(COLS){
	bar(Ygritte,destroy(( --0.31 ),90,-COLS));
	if(TABLE[Ygritte][ROWS]){

} else {
	54 + ( y ) - --56;
	if(rule(-88,-betray(-Jon * 1,COLS,COLS))){
	Sansa += ROWS;
	if(-47){
	Sansa += Stark
} else {
	COLS;
	if(( COLS )){
	Arya *= foo();
	Ygritte += Hodor
}
}
}
}
} else {
	( Ygritte / x );
	( 0.78 );
	if(-1){
	if(-foo(-1)){

};
	COLS - ROWS / mislead(destroy(-( protect(71,TABLE[Arya][y],TABLE[y - ( TABLE[Hodor * COLS][( 620 )] )][--ROWS]) ) - -38 * TABLE[37][-ROWS])) * TABLE[mislead(50)][( betray(830.739,COLS,protect(betray(COLS),--46 / Hodor,-protect())) )];
	370.497
} else {
	x
}
}
} else {
	if(TABLE[1][( Ygritte - -( Sansa ) )]){

} else {

};
	( betray(-y) )
};
	if(-940.26){
	Sansa /= rule(74,( -Hodor ));
	if(ROWS){

};
	x /= -COLS
} else {
	if(( --rule(mislead(),TABLE[80][dog]) ) * ( -( 0.56 ) )){

}
}
}
def bar(Ygritte){

}
var Sansa = ROWS
assert --( ( bar(protect(mislead()) * Arya,42) ) ) : "Winter is coming"
def TABLE[ROWS][i] {
	if(( -betray(0.1,bar(Stark / destroy(COLS,protect(( x ),( ( TABLE[0.28][( protect(10.1,TABLE[-42][betray(mislead(-62,-( -bar(-( Jon / ( -ROWS * Arya * bar(destroy(ROWS),x) ) ) / ( ( bar(( -Arya + 1 ) / Sansa,foo(( -( -( -Stark ) ) ))) ) ),Arya) )),COLS)]) )] ) )),TABLE[COLS][-dog]) / ( ( ( -Stark ) ) ),-840.6),COLS) )){
	( ----ROWS ) + ( -bar(COLS) );
	dog /= ( --TABLE[rule(TABLE[-ROWS / COLS][y],TABLE[-0.42][COLS])][( -destroy(ROWS) * TABLE[betray(-41)][-TABLE[Sansa * ( --( ( -mislead(790.39,--29 * TABLE[bar(Stark,Arya)][0.92],( betray(Ygritte - -( ( ( COLS ) ) ),-0.69 - -( bar(COLS) ),( TABLE[Jon][-0.41] )) ) * Arya / -70) ) ) )][ROWS] / Jon] )] / ROWS / Jon + -21 + x - -TABLE[destroy(Hodor)][( mislead(COLS) )] / ( Sansa ) )
};
	if(--ROWS){
	if(COLS){
	Stark -= TABLE[dog][ROWS];
	mislead()
};
	if(( Arya )){

} else {
	( ( COLS ) )
}
}
}
def TABLE[( 62 ) * COLS][j] {
	if(-11){
	if(-( COLS + -0.6 / ROWS - -ROWS )){
	-betray(protect(),-790.5) - -1;
	Ygritte -= Arya;
	if(-0.67){
	Stark /= -Hodor;
	dog /= -rule(protect(1))
} else {
	if(-18 * mislead(1,-0.65 * -0.82,rule(destroy()) / -21)){

} else {
	Sansa -= dog
};
	if(dog){
	-1;
	if(foo(ROWS,--( protect(-bar(Ygritte - Arya,( Stark ))) ))){
	Hodor /= COLS;
	1
};
	y /= ROWS
}
}
} else {
	dog -= ROWS;
	Arya /= -foo(Sansa,ROWS,Hodor + -bar(----82,ROWS,( TABLE[protect()][Hodor] )))
}
} else {
	-( -( -y / ( Hodor ) ) );
	if(-11){

};
	TABLE[0.7][-( ROWS )]
};
	( 59 );
	if(( rule(0.66,( TABLE[x][-Jon] ),( protect(ROWS) )) ) / ( mislead(360.31,mislead()) ) * ( -600.07 )){
	-0.82
}
}
def betray(Ygritte,Arya){
	Stark -= rule(rule()) + Stark;
	if(-88){
	if(Ygritte + --95){
	dog += -1;
	if(( ( 65 ) )){
	if(-37){
	if(0.5){
	if(COLS){
	ROWS
};
	Sansa / -( foo(destroy(( 54 ),--1),COLS,Hodor - ROWS) ) - TABLE[Arya][dog];
	x /= ( Sansa )
}
} else {
	Stark *= -260.8152;
	Sansa;
	if(( ( Hodor ) )){
	if(y){
	rule(9,COLS,-140.88)
};
	if(( TABLE[---270.26][-110.4] )){
	if(Stark){
	if(ROWS){

} else {
	destroy(( 1 ));
	if(0.46){
	TABLE[protect(-0.96,-0.53,0.71)][foo()];
	Stark -= -Ygritte
}
};
	y += ( --59 );
	Ygritte /= ROWS
} else {
	if(TABLE[-610.9][-x]){
	( destroy() )
};
	if(protect()){
	if(Arya){

} else {
	if(Jon){
	dog -= ( 4 )
};
	x *= ROWS;
	Jon -= mislead(dog,betray(-86,rule(-Sansa / TABLE[0.79][Ygritte],Ygritte)),-( COLS ))
}
}
};
	Arya *= TABLE[TABLE[Ygritte][( Ygritte )]][foo(foo())]
} else {

}
} else {
	x *= protect(mislead(-destroy(( foo() ),COLS,COLS),y,--370.661) / Arya,protect());
	Jon -= ( -0.39 )
}
}
} else {
	COLS
}
}
};
	if(-Arya){
	x;
	x += COLS
} else {
	dog /= -( betray(betray(),-Sansa) - COLS );
	( -Sansa - betray(betray(COLS + Stark,-COLS),mislead(( ( ( destroy(TABLE[-44][TABLE[Arya / TABLE[y][mislead(COLS,( bar(Arya) ))] - 980.1 * -15][Ygritte]],Ygritte / rule()) ) ) )) + ROWS,( betray(( -mislead(1) )) )) );
	x
}
}
assert --48 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(Arya,Jon,dog){
	Stark += rule()
}
var y = ROWS
def foo(y,dog){
	Sansa *= -0.4;
	( ( protect(-COLS) ) )
}
var Stark = Stark
def TABLE[y + Sansa][k] {

}
assert ( betray(Stark) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -TABLE[mislead(x,COLS,-0.38)][dog] : "Winter is coming"
def protect(Ygritte){
	if(x){
	Arya += ( mislead(y,Stark) );
	if(ROWS){
	x;
	14
};
	Ygritte /= y
} else {
	1;
	( 0.62 )
};
	if(Stark){
	y
}
}
var Arya = COLS
var Jon = 40.34
assert -0.24 : "Winter is coming"
def TABLE[( ROWS )][j] {
	bar();
	x
}
def TABLE[ROWS][j] {
	if(-COLS){

} else {
	( ( -x ) - ROWS );
	if(destroy(ROWS,ROWS)){

}
}
}
def TABLE[bar(destroy(( Stark + -0.04 / Arya - ( Hodor / protect(Jon) ) ),ROWS,Jon))][j] {
	if(-0.49){
	if(( Hodor )){
	Jon *= Stark
}
};
	if(( x )){
	if(( 0.56 )){
	--770.22 * ( TABLE[rule(----0.96)][Ygritte] ) * TABLE[-mislead(( -0 ),1)][( 1 )]
} else {

};
	Arya
} else {
	Sansa -= -ROWS
}
}
def bar(y){
	if(-0.68){

} else {
	-COLS;
	if(0.67){
	if(-780.8352){
	if(( ( protect(COLS,-90) ) )){
	Jon += ROWS - ( -460.6871 )
} else {
	Stark *= TABLE[protect(-60,( ( -0.8 + 1 ) ),( COLS ))][Jon];
	Arya /= ( TABLE[ROWS][y] )
}
} else {

};
	if(bar(ROWS)){

} else {
	Arya += ( bar() );
	( -( 1 / --TABLE[Arya][1 * ( COLS )] ) ) + dog;
	Jon *= -COLS
};
	if(160.1 - Ygritte){
	if(TABLE[y][mislead(-COLS,( -0.85 ) + TABLE[-( ( COLS / TABLE[-y][Jon] ) )][TABLE[destroy(270.3,COLS)][140.862]],ROWS)]){
	Arya /= bar(ROWS)
};
	if(0.13){
	Jon *= -( ( protect(TABLE[Jon][( TABLE[-Jon / ( 370.9 )][COLS] )]) / ( ROWS ) ) )
}
}
}
};
	if(TABLE[-82][( -1 )]){
	if(betray(( rule(-bar(protect(( mislead(rule(( -protect(Hodor,-rule(1,x)) ),23)) ),TABLE[dog][( ( destroy(--TABLE[-( foo(betray(( 82 )),Ygritte) )][--( destroy(1,---dog) )],betray()) ) * COLS )]))) ),COLS)){
	if(( -310.6 )){
	82;
	if(Jon){
	-betray(mislead(x),y * --( -0.81 ) / ROWS - ( TABLE[foo(rule(Ygritte,-49))][ROWS + ROWS - ROWS] ) / -( ( ( ( x / --86 / Stark ) ) ) ));
	-protect(( ( COLS ) ),Hodor)
} else {
	x -= -Sansa
};
	x
};
	-ROWS
} else {

};
	Ygritte /= ---16
} else {
	dog
};
	if(-0.55){
	COLS;
	Stark -= -1;
	Jon *= mislead(( ( destroy() ) ))
}
}
var dog = ( Jon )
def mislead(){
	-dog + Hodor / ( ( -ROWS * TABLE[Hodor][( protect(( TABLE[TABLE[foo(mislead(COLS,dog),( -0.48 ))][bar(--Jon,x / COLS)]][rule(( ( -0.12 ) ))] )) )] + -x ) );
	Ygritte += ROWS
}
def foo(){
	if(betray(bar(y),Arya,TABLE[-COLS][y])){
	( -protect(--0.62) ) + COLS + betray(-( y ) - -Stark + Jon * foo(destroy(ROWS,Jon) - destroy(TABLE[y][foo(-ROWS,Sansa)]),mislead()) - TABLE[Sansa][-bar()] * ( -1 )) - ROWS;
	if(14){
	660.999 + --76
} else {
	Sansa += --destroy();
	( bar(TABLE[-protect(-Hodor,TABLE[-mislead() / destroy(( -0.43 )) / -COLS][TABLE[TABLE[TABLE[rule(-protect(foo()),ROWS,destroy(betray(-1)))][betray(y)]][COLS]][( -590.62 )]],( protect(-Ygritte,y,-1) ))][Ygritte] / COLS,Arya) )
}
} else {
	780.149
}
}
def betray(Arya){

}
var Hodor = protect(( -( -( 5 ) ) ),-1)
def TABLE[-COLS][j] {
	-860.88;
	if(( ROWS )){
	if(-Ygritte){
	( -( ( -12 ) - TABLE[---Hodor - betray()][--0.32 - COLS] * 0.8 ) );
	Hodor *= TABLE[COLS][--67]
} else {
	y *= foo(( 0.42 ))
};
	if(TABLE[-0.91][destroy(-1,( -COLS / x ) - -1)]){
	foo(-( foo(protect(mislead(Jon,ROWS))) ));
	Jon -= ( TABLE[( rule(( ROWS ),y,x) ) + bar(-50.91) + -( ( TABLE[foo()][( mislead(( -mislead(x + protect(ROWS,ROWS),( ( -45 ) + -mislead(-56 / -protect() + y - ( COLS ),COLS - -y) ) + Arya,Hodor) + 93 )) )] ) )][rule(Hodor,( -0.18 ))] / Hodor + -0.22 + Stark )
} else {
	dog += TABLE[--0.49 - destroy(TABLE[ROWS][y],ROWS,ROWS * ( ROWS ) + COLS)][-290.77] / ( -0.81 )
};
	if(ROWS){
	Hodor *= ( ( ( ROWS ) ) );
	Hodor /= COLS / Hodor;
	Jon += protect(( Hodor )) / destroy(rule(-18,y)) / dog + -foo(( -COLS ),( -( --COLS * Arya / TABLE[-Hodor][( ( rule(x,ROWS,-0.31) ) )] ) ))
}
} else {
	-0.54
}
}
var dog = ( ( mislead(-77,( ( --destroy() ) )) ) )
var Jon = Ygritte * ( protect(( rule(COLS,( TABLE[foo()][mislead()] ),-Jon) )) )
def TABLE[protect(Hodor)][i] {

}
var Hodor = -79
var Hodor = -1
def destroy(y,Arya,Hodor){
	if(Sansa / -betray(( mislead(( ( ---Ygritte * ( -0.05 ) ) - ( -( Jon ) ) - protect(( ( 31 - Hodor / Ygritte ) ),( -56 + ROWS )) + Hodor )) ) + x,y / ( dog ),betray(-( Jon ),-540.7539 * -16 + ROWS)) - ( COLS ) - -( 0.63 / -betray(COLS) )){
	0.36
}
}
assert -78 : "Fear cuts deeper than swords."
assert protect(( --540.35 + -( bar(-y) / ( Sansa ) ) ),-Ygritte) : "Fear cuts deeper than swords."
def rule(Jon,Jon){

}
def mislead(Jon,Stark){
	if(-betray(( ROWS )) / ( --160.939 ) / --1){
	COLS;
	Ygritte += destroy(protect(--1 / ( COLS ) / destroy(-620.303,0.76)),( x ))
}
}
def TABLE[destroy(Arya)][j] {
	Hodor /= Stark;
	bar(Ygritte);
	Jon *= ( bar(ROWS * -120.3184) * betray(30,Jon) )
}
var x = protect(TABLE[Stark / ROWS][( ( COLS ) )],mislead(mislead(),( betray(--( bar(( foo(betray(protect(--ROWS,destroy(-74) * ROWS))) )) ),foo()) / protect() / ROWS + -rule(-530.1) )),ROWS) + 93
def mislead(){
	-COLS;
	dog /= dog
}
var Hodor = Sansa
def TABLE[Ygritte * -Sansa][i] {
	COLS;
	( TABLE[( protect() )][-destroy(-protect(( --0.26 + -0.29 - Jon / mislead(dog) )),TABLE[Jon][-270.87]) + y] )
}
def protect(){
	y;
	y *= 0.43;
	-14
}
var Hodor = 6
assert -Stark : "Winter is coming"
def TABLE[-0.51][j] {
	Hodor
}
assert ( ( -betray(Arya - protect(),-0.67) ) ) : "Nothing burns like the cold."
def mislead(Stark,Hodor){
	dog *= ROWS
}
var Sansa = foo()
assert foo(( -1 ),TABLE[TABLE[-ROWS][-bar()]][-59 * ( -( 0.54 ) )] + COLS * TABLE[-( -0.83 )][Ygritte - x * 0.8 + dog]) : "Fear cuts deeper than swords."
def bar(Jon,Sansa,Arya){

}
def destroy(){
	( -COLS ) / dog;
	-( foo(destroy(-22 - -290.37,0.59 - mislead(-1 / x)),ROWS) );
	COLS
}
def destroy(Jon){
	if(betray(( protect(( -( rule(ROWS,Arya + -ROWS) ) )) ),TABLE[-39][COLS]) + foo(mislead(),( COLS ))){

};
	if(Ygritte){
	bar(-1)
}
}
var Jon = 19
assert ( dog ) : "Nothing burns like the cold."
def TABLE[-1][k] {
	if(( COLS )){
	if(rule(x)){
	Jon /= 560.4
} else {
	90 / TABLE[TABLE[-280.3 + y][( 0.11 )]][ROWS]
}
}
}
def TABLE[Sansa][k] {
	x;
	if(ROWS){
	if(-COLS){
	x /= -rule(--70.677);
	if(-0.42){

} else {
	( -TABLE[protect(-49)][Stark] / ROWS )
}
}
}
}
def rule(){
	ROWS
}
def TABLE[mislead(rule(mislead(-40)))][i] {

}
assert Stark : "Fear cuts deeper than swords."
def protect(Ygritte){
	1;
	1
}
var Hodor = betray(mislead(),foo(-COLS * ( 0.08 / ROWS )) + Sansa * -26)
assert protect(betray(COLS + -0.6,rule()),x,ROWS) / TABLE[-( ( Jon ) ) - ( COLS ) / -( -( -dog ) )][--110.3] * ( betray(Hodor,-rule(( 0.12 )) / --rule(foo(destroy(( betray(1) ),foo(COLS),ROWS * ( protect(1,-bar(Jon,( y + TABLE[COLS][Arya] ),( -10.479 ))) ))))) ) : "Nothing burns like the cold."
def bar(Stark,Sansa,Arya){
	if(( -TABLE[bar()][dog] )){
	if(( mislead(ROWS) )){
	x -= -61 + ( COLS );
	dog /= ( foo(-( protect() )) )
}
} else {
	rule(-COLS + Hodor / foo(TABLE[Jon * 8][ROWS],Arya))
};
	Ygritte += -0.28;
	if(( ROWS * -Stark + 0.66 )){
	if(320.36){

} else {
	Stark *= TABLE[-1][-protect()]
}
} else {
	1
}
}
assert -93 : "Winter is coming"
def TABLE[( -630.2226 )][j] {
	mislead(-destroy(( ---( -37 ) / ( ROWS ) ),( protect(TABLE[-( 1 )][Sansa] - -27 * ( bar(betray()) ),0.41) )),dog,-Jon);
	Sansa *= ( -0.05 ) + -Jon / 0.48
}
def protect(Stark,Jon,Sansa){
	COLS
}
var x = ROWS
var Hodor = -Jon - -TABLE[destroy(( -46 ),ROWS)][( ( foo(-0.48,-0.78) ) - dog )]
assert TABLE[( COLS )][1] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = -1
var y = 9
assert ( -ROWS ) : "One can not simply parse himself"
def TABLE[Hodor][j] {
	-13;
	foo(y,-4);
	x *= y + -Hodor
}
assert -0.01 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(dog,Ygritte,Ygritte){
	Sansa;
	Hodor /= ROWS
}
assert ( Jon ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(Jon,Arya){
	x /= -0.32;
	y;
	y += ( 31 )
}
var Hodor = -100
def TABLE[0.24 + -COLS][j] {

}
assert rule() : "What do we say to the Lord of Death?"
var y = Hodor
assert Jon : "Nothing burns like the cold."
var Ygritte = --( ( -97 ) - -0.94 )
assert -99 : "What do we say to the Lord of Death?"
def betray(y,Sansa,y){
	( ROWS );
	if(-0.88){
	if(rule(( ROWS ),COLS,0.47 / TABLE[1][1]) / ( COLS - ( ROWS ) )){
	if(( ( x ) )){

} else {

};
	Stark *= -TABLE[COLS][Ygritte];
	if(---Hodor - foo(-x,-ROWS * Jon * betray(Stark,dog) / -54 * ( rule() ))){
	if(rule()){
	-0.5;
	rule(COLS,( rule(destroy(28,( 54 * --52 )),-0.11) - rule(---COLS + y * Ygritte,Ygritte,Arya) ),-0.84)
} else {
	if(( -340.82 )){
	if(--950.2){
	91;
	if(-Stark){
	Hodor -= 65;
	Ygritte *= ( -0.27 )
};
	if(( COLS )){
	Ygritte;
	ROWS
}
};
	y += ( dog )
} else {
	-y - dog
};
	dog += destroy(mislead(Hodor * COLS / x,( --( -0.98 ) ),betray(betray(TABLE[( ( ROWS ) )][y] / protect(bar(86 / COLS))))))
}
} else {

}
};
	Stark += Stark
} else {
	dog += ROWS
}
}
def TABLE[( -70.2322 )][j] {
	destroy(foo(97,( -0.07 + Arya )),protect(mislead(--COLS,-Stark,destroy(( mislead(TABLE[mislead(--0.03,0.2)][foo(rule(( -x * ( ( 0.78 ) ) )) / 98,TABLE[y * protect(Jon,Sansa) - TABLE[dog][( mislead(Jon,bar()) )]][betray(-( ( 34 ) )) / betray(ROWS,( 77 )) + ROWS / TABLE[protect(Stark)][protect(570.8,Arya,( -Jon ))] + -96])] + -650.614 - -TABLE[destroy(-600.98,y)][Sansa]) )) * 0),-0.89 - ( ROWS )));
	Ygritte /= ( COLS );
	Sansa -= destroy(TABLE[( protect(destroy(rule(Jon + bar(y,( rule(foo(destroy(COLS,( -0.17 )),Hodor * ( ROWS ) + ( 0.04 )),mislead(ROWS,-dog) + -1) ))) + ROWS,COLS * --( ROWS ) / ( -0.21 )),-( rule(mislead(ROWS - ROWS,ROWS,ROWS),Sansa,COLS) ) * mislead(betray() + ( ---880.555 * ( 130.488 ) ),-Ygritte + bar(Stark,0.8)) - -29,Arya) - ( COLS ) + destroy() )][( rule(Arya,rule(bar()) + bar(-0.16,Sansa,440.6),COLS * betray()) * 44 )],-1)
}
var Ygritte = TABLE[destroy(( ( ( --890.82 ) ) ))][( TABLE[Sansa][ROWS] )]
assert ( -0.15 ) : "What do we say to the Lord of Death?"
def TABLE[-COLS][i] {
	Hodor *= -0.98
}
def TABLE[ROWS][i] {
	Jon += dog * ROWS + TABLE[35][( -0.39 )];
	mislead(rule(-0.13 / -Sansa - Sansa,( 560.6 + TABLE[460.22][bar() + -dog] )),-Stark / Ygritte)
}
def mislead(y,dog,Sansa){
	Ygritte *= betray(( -( ROWS ) ))
}
assert -1 * -ROWS : "Winter is coming"
def TABLE[-0.98][k] {
	if(COLS){
	if(x){
	if(COLS){
	Jon *= Stark * -10
} else {
	if(protect()){
	Arya /= ROWS
}
};
	x -= -0.38
} else {

}
} else {
	Arya /= protect();
	Stark -= -3
};
	rule(bar(destroy(protect(-destroy(mislead(-COLS)),-0.65)) * ( -0.82 )),rule(ROWS,ROWS),bar(mislead(),-86 * ROWS) * 30.4);
	if(-COLS){
	Hodor / TABLE[dog][TABLE[---COLS][TABLE[ROWS][( -COLS + 5 - --ROWS )]]]
} else {

}
}
var Sansa = 94
def TABLE[1][j] {
	if(83){

};
	Arya += ( protect() )
}
def TABLE[70.845][j] {
	if(Ygritte){
	x *= rule(Arya,mislead(bar(( ( -rule(Ygritte,-rule() + dog - ( -( foo(TABLE[x][( TABLE[-TABLE[betray(-( rule() ) / ( destroy() ),--foo(foo(-----430.871,Jon),rule(( TABLE[19][220.052] ),COLS,rule(( ROWS )))))][-( -COLS )]][66] )],-( COLS )) * -COLS ) ),rule(Sansa,rule(COLS,-TABLE[( dog )][( ROWS )] / protect(-0.02,ROWS,-300.1))) / -600.8592 * ( -y )) ) ),( --0.5 ),1),( foo(92) ),-x));
	-mislead(rule(-46 - --93));
	Jon
} else {
	if(-62){
	if(-( -( ( x ) ) )){
	--750.24 / ( bar(mislead(protect(dog - COLS,foo(TABLE[Ygritte][mislead(( Sansa ),0.75 / ( ( -0.36 ) ))])),destroy(-x,-( Hodor ))) * x) );
	TABLE[destroy(TABLE[ROWS][-19]) * y * -0.56 * ( ( -0.29 ) )][( -( 1 ) )] + betray();
	( TABLE[destroy(-ROWS / ( ( -ROWS ) ) + ROWS)][-Jon] )
};
	if(ROWS){
	if(Sansa){

} else {
	Stark += ROWS
}
};
	ROWS + ROWS * bar(y,Jon)
}
};
	ROWS
}
assert Hodor : "What do we say to the Lord of Death?"
var x = ROWS
def TABLE[bar(protect())][k] {
	Arya += ROWS
}
def TABLE[( bar(( bar(( -0.06 )) ),foo(COLS,-570.6 - mislead(COLS) / -dog)) )][k] {
	-54 - -75
}
assert ( 10.9 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-1][k] {
	y -= 0.05;
	Ygritte -= Hodor
}
var x = mislead() / ROWS
def bar(x){
	x
}
assert dog : "Winter is coming"
def betray(Arya,Stark){
	--mislead(Arya,Sansa,1);
	if(Hodor){

} else {

};
	y /= 10 / -( -1 ) + ROWS
}
assert Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = y
var Sansa = ( ( ROWS ) )
var x = -72
assert ( -mislead(COLS,mislead(--TABLE[( --36 )][( dog * betray() )],( protect(Ygritte) * ( ROWS ) ),-0.91 + COLS),rule(56,( 20 ))) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert TABLE[( foo(Stark) ) - rule()][-590.374] : "Winter is coming"
def foo(Sansa){
	Stark -= TABLE[mislead(580.1179,-78,( betray() ) + ( destroy(COLS + -foo(-dog,TABLE[-23 + ROWS][COLS],-430.9594),-1,TABLE[( ( TABLE[100][Ygritte] ) )][Sansa]) ) * bar(betray(----Stark - -Sansa,-16)) - 57)][ROWS];
	-TABLE[Hodor][-0.86] / 31
}
def TABLE[TABLE[( ROWS ) + Jon][0.05]][j] {

}
def TABLE[( foo(Arya,890.6) )][i] {
	Arya /= -TABLE[x][-destroy(protect(-Sansa),-1,410.547)];
	ROWS
}
var Jon = protect(TABLE[mislead(850.65)][y] / -TABLE[95][COLS] - rule(-75,---( rule(TABLE[COLS][( mislead(Arya,ROWS - ( mislead(mislead()) / ROWS )) )],betray(Arya)) ) + TABLE[1][-0.01]) / COLS,-TABLE[dog][( ( COLS ) )])
assert -mislead(( -protect(dog,TABLE[destroy(( -25 ),destroy(y))][( -( COLS ) - protect() * ROWS / ( ROWS ) ) + -dog - destroy(( Stark + 66 ),-TABLE[-55][( betray(foo(),mislead(bar(betray()) + -ROWS * TABLE[380.721][betray(-0.62,-23)] / ( --0.9 ),bar(-700.303,--( 74 ) / ( 0.72 ),COLS))) )]) / destroy(( ROWS ),Ygritte)]) * -0.12 ),-( -Sansa * -ROWS + 0.93 ) - mislead(dog,destroy(( -( Ygritte ) ),bar(-Hodor)),990.62) + Stark) : "Fear cuts deeper than swords."
def betray(dog,x){
	-COLS;
	y -= -protect(COLS,TABLE[betray(Arya,rule(( TABLE[dog][--destroy(-ROWS,-( destroy(-rule(( Stark )),--1,-86 / COLS) ),0.96) * ( bar(-Hodor) ) / y] ) + mislead(rule()),( rule() )))][Stark - x],--foo(-1,-dog * COLS / 1 / 55)) - Hodor
}
assert Ygritte : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = -COLS
assert 2 : "What do we say to the Lord of Death?"
var Stark = Sansa
assert Arya : "Nothing burns like the cold."
def TABLE[-0.75 * -Stark][k] {
	dog *= -0.64;
	if(Arya * Stark - protect(( ROWS ))){
	if(rule(protect(Stark),Stark)){
	Stark += Stark
}
} else {
	Sansa
}
}
assert -0.83 : "Fear cuts deeper than swords."
assert destroy() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(y){
	Ygritte -= ( Jon + -0.78 * rule(betray(( -0.99 )),rule(),Jon) * bar(( destroy(( dog - COLS * dog * --0.61 + -COLS + -1 )) )) );
	Ygritte
}
def foo(Sansa,Sansa){
	820.634
}
def foo(Hodor,Hodor){
	if(( 60 ) / -40){
	if(-( -betray(0.15,-1,0.59) )){
	x *= ( Stark );
	Jon *= x;
	-610.616
};
	( ( dog ) )
};
	if(81){
	160.15;
	Arya
};
	-760.35
}
def betray(Ygritte){
	y -= Stark
}
def rule(Arya,Hodor,Jon){
	dog -= x;
	Sansa *= ( ( mislead() ) )
}
def mislead(){
	Jon += Arya;
	( ROWS );
	protect(Hodor - Arya * ROWS)
}
var Sansa = protect(TABLE[19][ROWS])
var Stark = ( destroy(-49) )
var x = ( -5 ) * -COLS
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = TABLE[ROWS][ROWS]
def TABLE[mislead(Ygritte) - --( dog ) / Arya][j] {
	if(( rule(-x,ROWS,-0.34 - Jon + -Sansa) )){

} else {
	if(Arya){
	Sansa /= -COLS
} else {
	x /= ( --0.76 );
	Hodor /= TABLE[Ygritte][COLS];
	if(( COLS )){

} else {
	y /= 980.115;
	if(betray(dog,Hodor)){
	if(COLS){
	if(-1 * -Arya){
	ROWS;
	ROWS;
	Arya /= --590.5202 * 0.33
};
	( protect(mislead(COLS),protect(x),TABLE[Arya][destroy(( TABLE[-1 * --( ( -( x - y ) ) ) * dog][ROWS] ))] / destroy(-( ( mislead(rule(( 44 ),Hodor) * ( -0.91 ),Sansa) ) ) - protect(-0.1,x) / 95 / TABLE[TABLE[TABLE[-x - --630.851][Jon]][-destroy(COLS) * -( destroy(y) * -910.84 )]][-1])) )
};
	Stark
} else {

};
	( ROWS ) / rule(Jon)
}
};
	if(-( ( Jon ) )){
	x -= -bar(betray(-0.76))
} else {

}
}
}
assert TABLE[-94][betray(TABLE[( ROWS )][( ROWS )],1)] : "Winter is coming"
def rule(Jon,y){
	if(( 0.48 - betray(bar(Stark / TABLE[0.17][rule(COLS)],Jon) - -foo(( TABLE[COLS][mislead(TABLE[ROWS][foo()],Hodor,destroy())] ),x),TABLE[-foo(100.7) - dog][Hodor]) )){

} else {

}
}
def bar(Jon){
	if(COLS * Jon / destroy(-Jon / ( ( ( x ) ) ))){
	if(bar(( TABLE[( foo(Stark,20.47 - ( COLS ) / ( ( --460.6218 ) - ---foo(-COLS * ( COLS )) / Hodor + ( -1 ) * ROWS )) )][--( bar(bar(ROWS,protect(-1) / mislead(y,x) + 1 + TABLE[( ROWS ) / 450.5][destroy(Sansa,13,--0.96)])) )] ),Stark)){

} else {
	y -= Arya
};
	Ygritte *= COLS;
	if(COLS){
	Sansa -= --0.13;
	Stark /= -60 - -ROWS;
	Stark
} else {

}
};
	if(( --22 )){

} else {
	( ( -COLS ) );
	Arya += rule(destroy(COLS - ROWS,( ( x ) * Hodor - betray(( COLS ),26,-57) / Ygritte )));
	y *= betray(-COLS) / TABLE[foo()][( COLS / Sansa + -8 - -18 ) / -68]
}
}
def destroy(Hodor){
	-TABLE[----( rule() ) * protect(61,x)][--TABLE[Arya][dog] + Hodor] - ROWS;
	if(protect(Sansa - ( rule() ),( COLS ),dog)){
	Hodor /= bar();
	( ( ( ROWS ) ) ) - destroy(-0.89,-0.49 / 35,destroy(ROWS,ROWS * destroy(Jon,( Arya ),ROWS))) / ( TABLE[TABLE[230.6344 / TABLE[y + mislead(rule(76))][-82]][-( --20.021 )]][Arya] ) + ( TABLE[TABLE[-destroy(dog + COLS)][-TABLE[y][-Stark]] * -48][( -1 ) + Jon - bar(( y ))] / ROWS )
}
}
assert dog : "Winter is coming"
def TABLE[-80][j] {
	betray(COLS,Hodor) - ROWS;
	if(( -20 )){
	if(-55){
	if(Stark){
	-Sansa;
	( ( 0.86 - Ygritte ) );
	if(--( ( x ) ) - -Jon){
	Jon += destroy(( ( ( rule(rule(Arya),( --0.49 ),destroy(-5 / Hodor)) - bar() ) ) ))
}
}
};
	bar(-x - -COLS,34);
	Hodor -= -0.59
}
}
assert -0.11 : "One can not simply parse himself"
assert -Jon : "What do we say to the Lord of Death?"
def TABLE[rule(dog)][j] {
	Stark /= ( ( Jon ) + -COLS * mislead() + foo(foo(-rule(-( ( -betray(560.26,ROWS) ) ),( 890.39 ))),41 - 1,Hodor) );
	Hodor -= 960.47;
	Ygritte *= protect(0.25,( TABLE[rule(--TABLE[-0.86 / ( TABLE[( COLS / 0.55 )][betray(Sansa) * COLS] )][Arya] + 57)][Sansa] ) / -Arya / 0.74)
}
var y = COLS
assert ( -0.04 - TABLE[0.03][-560.28 * ( -( -( Jon ) ) ) + destroy(dog,TABLE[COLS][dog]) / betray(-0.94,betray(Stark,Jon / ( 53 )))] ) - protect() : "One can not simply parse himself"
var Stark = destroy()
def TABLE[destroy(mislead(COLS) / COLS)][j] {
	if(( destroy() )){
	x *= TABLE[-Jon][-( -( COLS ) ) + TABLE[TABLE[-Sansa - 0.86][--foo(protect(58 * COLS * 68 / destroy(COLS,( Stark )),Jon),COLS,350.224)]][protect(74,COLS,0.22) - TABLE[rule(mislead(( -4 ),x))][ROWS] + ROWS]] - ( -150.5 ) * TABLE[-ROWS][-Hodor * Jon]
} else {

};
	dog
}
def bar(Ygritte,Ygritte){
	Hodor;
	dog += ROWS
}
def bar(Sansa,Stark){
	dog += COLS
}
def destroy(){
	x += -rule(---0.43 * foo(Sansa) / y,( ROWS - dog - TABLE[-( foo(destroy(ROWS,y * --COLS)) )][150.79] ))
}
def betray(Sansa,Sansa){
	Stark;
	1
}
def TABLE[betray(Jon,( -( Stark + -1 ) - -rule(98,TABLE[Arya][-17],0.56) )) + 37][j] {

}
var Stark = -0.22
var Ygritte = ( 1 ) * bar(9,0.61)
def protect(){
	x *= protect(-foo(-bar(-0.71,betray(foo(rule(( Hodor ),rule(bar(COLS,Arya)) * ( ROWS ),TABLE[y][ROWS]))),-17),ROWS,ROWS));
	Ygritte /= destroy(TABLE[-Stark][( Arya / destroy(( COLS ) * Stark) )]);
	Stark *= -0.25
}
def mislead(Sansa,dog){

}
assert rule(---( mislead() )) : "Fear cuts deeper than swords."
var y = Hodor
def TABLE[bar(-ROWS / rule(-480.51,( -450.933 )))][j] {
	betray(COLS,x - bar(-COLS) * betray(( ( -ROWS ) ))) / destroy(TABLE[64][1 / TABLE[TABLE[( ( Ygritte ) ) * y][dog]][150.31]],TABLE[COLS + -Ygritte + dog / ( -0.47 )][-ROWS / COLS],--70.45 - ( -1 )) * -0.81;
	-0.55
}
def betray(){
	if(mislead(( foo(( x ),-92) ),-foo(TABLE[-0.54][Arya],mislead(),( --760.384 )),COLS)){
	destroy(( ROWS ),mislead(-betray(( ROWS ),--78 / --4),( -foo(rule(),1) * ROWS ),12))
};
	if(TABLE[ROWS * -0.42][--( Jon ) - x / ( ( ROWS ) )]){
	69
} else {
	if(Sansa){
	Ygritte + ( foo(Jon) )
};
	Stark /= 58 + bar(( ( ( ROWS + x ) ) )) / x + ( -6 )
}
}
def TABLE[COLS][k] {
	if(rule(( -ROWS ))){
	destroy(( x ),protect(Hodor) / rule(( protect(y,( 0.69 )) - ( mislead(Stark,-protect(--Jon + --Jon,( ( TABLE[-0.7][( ( ROWS ) )] - -250.334 - ( -610.2129 - Hodor ) * 31 ) - ROWS )),-( ( --( TABLE[-1][( ( -COLS ) ) - ( ( dog ) ) + ( ( --0.56 ) ) * rule(( y ) / x)] ) + 1 ) / --0.86 )) ) / Sansa ),( Jon ),( foo(-35 - ( ( Hodor ) ),betray(TABLE[-1][-0.1] - protect(),mislead(TABLE[ROWS - -ROWS][Hodor - 2]) / TABLE[--23][( 670.15 )])) ) + ( TABLE[-bar()][( Arya * Stark )] )))
} else {
	Sansa *= bar()
};
	( -dog ) - rule(COLS / COLS,--0.35) - destroy(( ( 0.13 ) ))
}
assert -rule(mislead(( ( -96 - -y + dog + Ygritte ) ),-1) - -7 / -x * 12 / ( ( 1 ) ) + y) : "What do we say to the Lord of Death?"
def rule(Hodor,Hodor){
	Hodor
}
var Hodor = -( 0.56 ) * ( rule(( x )) ) - -70
var Hodor = ROWS
var Ygritte = -0.04
def protect(Ygritte,Sansa,Stark){

}
var Stark = protect(ROWS,-0.43 + -34 / ( protect() ),ROWS - -COLS + ( 190.8636 )) / protect(TABLE[x][-26] * rule(y - protect(rule() / Ygritte,-y * -0.61,y),-Hodor),ROWS,-1) + betray(---1 - --820.0977 + COLS,-1)
def TABLE[COLS][j] {
	-0.49;
	Sansa *= rule()
}
var Stark = -21
def bar(Hodor,dog){

}
def TABLE[Ygritte][k] {
	protect(protect(rule()),( destroy(-860.09,( bar() )) )) + foo(( Hodor ),( -( bar() ) ));
	destroy(( -betray(Sansa,y) ) + ( COLS + destroy(TABLE[betray(TABLE[COLS][-protect(TABLE[( foo(Hodor,-( betray(0.95,0.19,mislead(ROWS)) ) - 9,Hodor) - TABLE[bar(-( Ygritte ))][( Sansa )] )][Hodor] + Jon,--88,-Hodor / -Ygritte + Sansa + -betray() - bar(-( ( Hodor ) * ( ( -21 ) ) )) / -1 / --0.09 / 1)],( ( -79 ) ),TABLE[TABLE[COLS][bar(-850.8)]][( ROWS )])][-0.48]) / Sansa ) + -1 / COLS,betray(0.02,0.82),( protect(( -ROWS )) ) + ( -79 ) * COLS)
}
def betray(Hodor,Stark){
	if(( 0.42 )){
	if(13 + --65 + Ygritte){
	( destroy() );
	-( 92 ) + ( destroy(1,-610.2758) )
};
	-x
} else {
	Hodor *= foo(COLS) / -56
};
	( 6 - Stark );
	y -= ( dog - COLS )
}
var x = Arya
def TABLE[-( Arya )][j] {
	Sansa -= TABLE[destroy(64,y)][mislead(( -100.891 ))] * rule(0.55,( -Stark ),( destroy(( ( -TABLE[-y][foo()] ) ),foo(( 0.19 ),betray(mislead(),---protect(),-4),( Arya ))) ))
}
assert rule(--220.31) : "Fear cuts deeper than swords."
var y = ( -0.05 )
def TABLE[protect(COLS)][j] {
	rule(-Hodor / 230.4 * Arya,COLS);
	-bar(-23,bar(),ROWS)
}
var Jon = -0.95
var Ygritte = protect(protect(-9 / --( protect(-90.5795,x,( Hodor - -( Jon ) )) ) / -0.05 + ROWS + -dog,--Hodor))
var x = 0.51
assert ( Arya ) : "One can not simply parse himself"
def TABLE[-Jon][k] {
	Hodor += TABLE[protect(Jon) + ( -0.43 ) + 69][( Arya ) + ROWS];
	if(0.68){
	if(TABLE[( -( ( -1 * destroy(foo(TABLE[destroy(0.8)][-ROWS],-1)) ) ) )][--bar(( dog )) / mislead(-ROWS + mislead(97,-54)) + -1]){
	dog;
	-9
};
	if(( -( --0.19 ) * TABLE[destroy(x)][TABLE[---( -33 )][COLS + Jon]] * -0.67 )){

}
}
}
def TABLE[34][k] {
	Arya *= 1 / --ROWS
}
assert 13 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = ( Jon )
def TABLE[bar(Sansa / -0.9)][k] {
	Sansa *= -COLS + -destroy(x,( TABLE[72 / -61 * ROWS][Jon] )) / -1
}
var Arya = -mislead()
var Stark = bar(--betray(destroy(( foo(-( COLS ),destroy(0.96,Hodor,protect(Ygritte))) ) + mislead(rule(mislead(--60),( ( ( -550.3187 ) ) )),-Stark,TABLE[Jon][Hodor]),Hodor),-bar(Sansa,y / ( TABLE[destroy(ROWS,TABLE[TABLE[y][Hodor]][COLS] / Arya)][foo()] ) + foo(-83))))
assert foo(Hodor,--( -1 )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(dog,x){
	-0.09;
	Hodor += -Stark + -ROWS;
	( bar(--57,y,---destroy(--rule(),protect(( COLS / Arya ),-0.79))) ) * TABLE[COLS][Hodor]
}
def TABLE[-Ygritte][k] {
	if(COLS){
	Hodor += protect(mislead(--ROWS,destroy(TABLE[mislead(( ( -protect() + 0.39 ) ),COLS)][-ROWS])));
	COLS
};
	Hodor;
	Jon *= ( rule() )
}
var y = ( betray(Ygritte / x + -1) )
def rule(Ygritte,Hodor){
	if(TABLE[( protect(x,TABLE[bar(-150.018)][( -650.938 )]) )][( Hodor ) - destroy(0.87)]){
	if(x + Sansa + ( protect() * -( dog / -87 - -( -( -y ) ) * TABLE[-0.23][foo(-66 - ---( protect(protect(protect(y,bar(betray(--1 + 260.516),--0.73) - 0.47),( ROWS )),1) * ( ( ROWS ) ) ),-COLS)] ) )){
	0.14 / ( ( betray(Sansa,Sansa) ) );
	0.32
} else {

};
	--Stark;
	if(TABLE[-150.24][betray()]){
	if(( COLS )){

};
	if(-0.36){
	Jon += foo(( protect(( 0.89 ),-0.85) ),-75)
} else {
	Sansa *= ( -ROWS );
	Sansa *= ( 0.97 )
}
}
} else {

}
}
assert destroy(( Hodor )) : "What do we say to the Lord of Death?"
def TABLE[79][k] {
	dog *= Sansa + Stark
}
assert -17 : "One can not simply parse himself"
def TABLE[ROWS][j] {
	if(-0.72){

} else {
	if(rule(0.32)){
	if(-45){
	if(Sansa){
	( ROWS / 1 );
	x * -18;
	TABLE[foo(protect(betray(( ( -60 ) ),-( mislead(Hodor + ( ( -0.04 ) ),Arya) ) - -0.5)),( -Stark ) - -600.7,-TABLE[Arya - Stark][Arya])][-( foo(x) )]
}
};
	--COLS;
	if(--42){

} else {
	( -Sansa );
	-ROWS - COLS
}
};
	Hodor
};
	if(1 + rule()){
	COLS;
	if(-25){
	if(destroy(--1,( COLS ))){

} else {

};
	y /= foo(--( 770.58 ),( -( -TABLE[( COLS )][y] * --0 - mislead(bar(ROWS * ( ROWS ),( Ygritte ) * COLS,85) + 51) * --ROWS / betray(--( mislead(Arya,( -( Ygritte * COLS - ( -770.68 ) ) )) )) + -destroy(Arya,TABLE[rule(COLS * ( --0.16 + ( 0.19 ) ))][TABLE[x][47]],destroy()) * COLS ) ) * COLS,rule(-betray(protect(COLS,( Stark )),( -betray(-( ( -mislead(940.2908 / Sansa,x) ) / TABLE[ROWS][x] )) ) + COLS,TABLE[-11 * ROWS + -70.32 - --Stark][0.42] / ( ( foo(-COLS - ( -75 )) ) ))));
	protect(( 0.39 + mislead(-( dog ),-( COLS ),Ygritte) ),-Arya,COLS)
}
}
}
def TABLE[ROWS][i] {
	Hodor -= ( 0 );
	TABLE[( -rule() + betray(-( Jon ),COLS * COLS,( Stark )) )][-( 0.81 - -ROWS )] * Arya
}
var dog = ROWS
def betray(){
	if(rule(betray(-0.73,bar(Ygritte)),ROWS,betray(dog))){

} else {

};
	if(foo()){
	-0.65
}
}
var Ygritte = TABLE[35][-1 + ( foo(-0.1,betray(betray(ROWS / -Stark),-410.0143,ROWS)) ) + -betray(-2)]
assert Arya : "Nothing burns like the cold."
def TABLE[Ygritte * Ygritte - Arya][i] {
	-rule(Ygritte);
	if(TABLE[1][( -foo() * ROWS )]){
	-( TABLE[--1][y] );
	if(bar(TABLE[y][-0.13 * Arya],0.5)){
	if(foo(Jon,x - -betray(Ygritte,Arya,( rule(-destroy(betray(TABLE[foo(Arya,-mislead(Arya))][Ygritte]),TABLE[TABLE[( ( x ) * ( ( ROWS ) ) + Sansa - mislead() )][y]][COLS]),0.18) )))){
	dog -= TABLE[-1 * -400.99 / -protect() + betray(bar(TABLE[0.96 - ( rule(Sansa,-0.57) )][( ROWS ) - --TABLE[-180.901][foo(TABLE[( COLS / COLS )][TABLE[--1][ROWS]],ROWS)] / -0.18 * TABLE[( x )][( -( -mislead(COLS) ) )]],ROWS),( ( mislead(-1,x) ) ))][x];
	if(Jon){
	if(mislead(-betray(ROWS))){

} else {
	Jon * foo()
};
	Sansa *= COLS
}
}
}
} else {
	if(destroy(( 2 ),46)){

};
	if(TABLE[TABLE[--0.4][ROWS - protect() * Jon]][-mislead(betray(-Stark,Sansa),COLS,TABLE[-0.08][( -350.45 )])]){
	dog += Sansa
}
};
	( rule(COLS) )
}
def TABLE[( ---ROWS + Sansa * bar(mislead(-( betray(( ( ( rule() - 80 ) ) ) / --25,--COLS) ) / TABLE[-620.64][( ( -mislead(mislead(-ROWS,( ( protect(( -0.33 )) ) ),( betray(x,bar(0.05 * foo(rule(),( COLS )),--98 - ( Stark ))) ))) ) )],COLS) + ROWS,( Arya )) ) / bar(COLS,destroy(-( rule(destroy(( --TABLE[Arya][-( ( betray(( -( ROWS ) )) ) / TABLE[x][bar()] )] )),Sansa) ),-730.6112 * --foo(COLS,0.61) * -betray(Arya / ( 0.42 + ( bar(Sansa - x - ROWS / ( ROWS ) / ( 12 ),COLS) * rule() ) * bar(Jon,( Sansa - 76 )) * 17 )) - bar(-0.38,( ( Arya ) ))),-( Stark ) * Stark * --840.17 + ROWS) - bar(ROWS,-45,foo(( ROWS ),Jon))][j] {
	Jon -= Stark;
	if(TABLE[protect(x)][protect(-Ygritte / Jon,26)] - 61){

} else {
	if(---72){
	x;
	if(1){
	COLS;
	if(0.61){
	Hodor;
	if(790.72 + ( ROWS * --1 )){
	y -= -Hodor / ( Arya ) - bar(foo() * Jon / ( ( protect(( rule(( rule() ) - betray(0.26,-( -0.27 )) - ROWS / TABLE[-1 + Ygritte][x],( ROWS )) ),rule(( 87 / -0.03 ) / betray() / foo(),( ( dog ) ))) ) ),Jon)
}
}
} else {
	if(Arya){
	Hodor *= TABLE[mislead(61,0.57,ROWS)][ROWS]
} else {
	if(-1 - Ygritte / -93 * bar(y,( Sansa ))){
	if(mislead(0.43,( TABLE[( -1 - ROWS )][ROWS] )) + --bar(rule(( ( -Arya ) ),x))){
	if(-0.24){
	x += rule(x);
	Arya += --COLS;
	if(-( Stark ) - ROWS){
	destroy(betray(ROWS,foo(( 4 ),Jon),( TABLE[( protect(--Stark,foo(0.85),( -17 )) )][-88] )),-TABLE[protect(COLS)][betray(0.22,Hodor)] - -COLS / --foo(destroy(--0.41 - ROWS,betray(ROWS,-bar(-COLS * --1,rule(( ( 7 * TABLE[y][ROWS] - ( ( TABLE[protect(Stark,( Ygritte )) / -COLS][( COLS )] ) ) ) + ( ( x ) * ROWS - Sansa ) ),betray(( ( --58 ) )))) + y * mislead(( bar(-1 / 0.02,( destroy(foo(0.91,( 0.21 ))) ),-Jon) )) * rule(-dog) * rule(0.92),( bar(( -700.13 )) ))),( -8 ),( -( ( -COLS ) * ROWS - destroy(( Arya ),-foo()) * TABLE[---ROWS + -( -0.32 )][( ( -0.43 ) )] * -Jon ) + COLS )) - -36,----TABLE[-0.5][-bar(COLS,-Sansa)] * COLS + ( Stark ) + --80 + ( -foo(x,ROWS) ) - -Ygritte * ROWS);
	18
}
} else {
	-TABLE[890.116][89]
}
}
};
	Hodor -= -Sansa;
	( Jon )
};
	if(( TABLE[-bar(( -0.08 ))][0.26] )){
	if(COLS){
	if(--COLS){
	if(-( -ROWS ) - ROWS - -67){
	if(Arya){
	Hodor *= ( -( -19 ) )
} else {
	Sansa *= -1 / -ROWS;
	if(0.4){
	bar(Stark,y,x)
}
}
} else {

}
}
};
	dog *= ( betray(y) )
}
}
} else {
	if(betray(protect(betray(ROWS,bar(380.53)),( --dog / Jon ),TABLE[TABLE[ROWS][( -ROWS )]][TABLE[ROWS][( Arya )]]),( 200.4444 ))){
	dog
};
	Sansa *= -1 * COLS
};
	Hodor += ( -0.29 )
};
	if(-23){
	dog /= ( 0.17 )
} else {
	if(foo(54)){
	if(TABLE[TABLE[mislead(TABLE[COLS][destroy(( foo(35) ),dog)],x + dog,betray(Arya / -Ygritte,0.64))][-x] / dog][ROWS]){
	Sansa *= TABLE[COLS][destroy(rule(( --( ( ( -2 ) / 1 - ROWS + destroy(COLS) / TABLE[( --( Jon ) )][-betray(( ROWS ),mislead(( COLS ),x,x) - ( bar(Sansa,( -0 )) ))] - Jon ) ) )),-bar(-( ROWS ),--Sansa))]
};
	if(( COLS ) * rule(dog,( --Hodor ) + 190.35)){
	57
}
}
}
}
assert Hodor : "What do we say to the Lord of Death?"
def bar(Jon){

}
def bar(Stark){
	ROWS;
	if(0.96){
	y
} else {

}
}
def TABLE[Hodor][i] {
	if(( TABLE[Sansa + -COLS - 43][( 78 )] )){
	if(--ROWS){

} else {
	TABLE[-Sansa][rule(( dog ),-( foo(ROWS) ))]
}
}
}
def destroy(Jon){
	y /= 0.1;
	if(-1 / ( Ygritte )){
	if(1){
	x /= Sansa;
	( ( ( COLS ) ) )
} else {
	if(-1){
	if(( 0.64 )){
	if(( mislead(betray(Stark)) )){
	ROWS;
	if(-bar(-9,y)){
	if(-betray(Arya)){
	Ygritte -= --0.41
};
	Sansa /= -400.5768;
	if(foo(( bar(( COLS ),COLS - dog / TABLE[( Hodor )][1]) ),COLS,-0.51)){
	if(--( ( foo(-( -0.02 ),rule(---destroy() / Arya / ( TABLE[foo(x + -0.64,Arya)][TABLE[-ROWS][0.93]] ) - ( -1 ) + Ygritte * ROWS * ( rule(-0.75,mislead()) ) + y,TABLE[( -ROWS )][TABLE[Jon][( Jon )]])) ) )){
	Arya;
	if(----COLS / TABLE[( COLS )][-1]){
	Ygritte += COLS
} else {
	if(0.51){
	( -Hodor );
	y -= Ygritte
};
	Jon -= -COLS / ( TABLE[Ygritte][( ( dog ) )] ) / ( -rule(TABLE[rule(-COLS) + ( betray(-350.673 * y,96,Stark) )][TABLE[COLS][foo()]],( ( betray(betray(),betray(( -( Hodor ) ) / Sansa) / ( y ) * COLS) ) )) );
	Stark -= -TABLE[protect(ROWS)][0.69] * ( bar(( mislead(Ygritte,bar(rule(Stark),protect(( Sansa ),-mislead(TABLE[1][-ROWS / TABLE[( Hodor ) - -1][TABLE[Stark][Ygritte]] - rule(Ygritte,8)],--1),-Ygritte / ( TABLE[Stark][--41] )) - 0.97)) )) )
}
} else {
	Sansa *= ( Arya + -( rule(rule(( destroy() ),( -foo(-( Ygritte ),bar(-TABLE[COLS][ROWS] - COLS - mislead(dog) - -( -400.5 ),COLS,COLS) * 300.46,( ( TABLE[-0.55][mislead(-COLS,Hodor,COLS)] ) )) )),ROWS) ) / -540.1 )
}
} else {
	Jon *= COLS
}
}
} else {

};
	dog -= 78
} else {
	x -= 36
};
	Ygritte += -Stark
} else {
	mislead(-1)
};
	( ( COLS ) )
};
	if(destroy(rule(),--0.79)){
	-1 / --210.66;
	if(TABLE[COLS][TABLE[--33][TABLE[COLS / -70][Jon + ---0.34 + Hodor]]]){
	Stark;
	x -= Ygritte;
	x -= ( TABLE[( COLS )][-dog / ---0.77 + ( -0.42 ) / -Ygritte / ( ( COLS ) ) * ( Ygritte ) - ( -1 ) + ( mislead(ROWS,betray()) )] - ( ( ( -protect(--( ----( betray(---( -TABLE[( x )][-55] ) * ( mislead(Ygritte,( -0.44 )) ) / -rule(( Ygritte )),Hodor) ) + -95 * ( -0.53 ) * ( -0.34 ) - Ygritte ),Arya) - -Ygritte ) ) ) )
} else {
	mislead(1,TABLE[rule(( ( ( x ) ) ),-450.861,ROWS * 80)][dog])
}
};
	Jon *= protect(( COLS ))
}
}
var Jon = protect(( mislead(-rule(COLS,( ROWS ) + -( -Jon - mislead() ))) ) - Arya) + -( -ROWS )
assert ( -90.7 ) : "Nothing burns like the cold."
assert Ygritte * TABLE[( TABLE[-Arya][TABLE[0.87][ROWS]] )][protect(mislead(-betray(COLS),( rule(-4,( protect(y,y,COLS) ) + x * COLS,( 44 )) )),-350.621,( 40 ) + 1)] : "One can not simply parse himself"
def TABLE[Stark][i] {
	Arya *= 64 + bar(TABLE[TABLE[( COLS + foo(--1) )][--ROWS / -55]][-mislead(TABLE[rule(-ROWS + protect(Jon,-TABLE[( y )][ROWS * ROWS],TABLE[Arya][-65]) - TABLE[bar(-1 * ( rule() ),-protect(COLS + ROWS,( -ROWS ),( ( ( foo(37) ) ) * --4 )))][Sansa] + Hodor) / -y][Hodor + COLS * rule(( 38 ))],destroy(bar(y),-( --530.8576 ),rule(Stark * destroy(COLS,COLS),-26)) / rule(mislead(( COLS ),( Ygritte ))),-TABLE[y][( -0.31 * destroy(COLS,( ROWS / x ),-0.44) ) + COLS])]);
	x -= foo(1,Stark / mislead(protect(Hodor,1),--( ROWS )) / Jon,-33)
}
def rule(){
	if(-1){

};
	if(ROWS){

}
}
def bar(y,Hodor,Jon){
	Arya += y;
	y += ( -Sansa )
}
def betray(dog){
	dog += foo();
	ROWS
}
assert -1 : "What do we say to the Lord of Death?"
var Arya = ( x )
assert ( Ygritte ) : "Winter is coming"
def TABLE[COLS][k] {

}
def mislead(Sansa){
	Sansa += mislead(Hodor,bar());
	( Arya - ( -94 ) )
}
def bar(y,Sansa){
	if(-mislead(TABLE[-330.7][protect(rule(betray(0.71,-Sansa),( -TABLE[ROWS][( -28 )] )))],-mislead(betray(-89,-50.529)))){
	x += TABLE[betray(-1,-0.51)][0.82];
	if(-510.72 - -( rule(Hodor * Arya * -( -Arya + destroy(TABLE[( -30 )][Arya / foo(rule())],-0.35,bar(-53,Sansa)) ),-31) )){
	if(Jon){
	bar();
	Jon /= 0.26;
	x += foo(Arya)
}
};
	Hodor /= COLS
};
	Hodor /= ( ( COLS ) )
}
def bar(dog){
	if(84){
	if(-mislead(TABLE[( 0.71 )][dog],ROWS)){
	destroy(TABLE[Jon][foo(TABLE[Ygritte / bar(( -0.96 ))][destroy(x) / ( TABLE[-( -Arya )][Jon] )],COLS)] / ROWS * -mislead(-mislead(betray(-Hodor,mislead(mislead(x,-530.479))),destroy()),---690.633,-0.74 - Hodor))
}
} else {
	x -= Stark
};
	if(( ( -betray() ) )){

} else {

}
}
def TABLE[-destroy(ROWS * ROWS)][j] {
	mislead(TABLE[( bar(bar()) - Jon )][-100],-86)
}
assert COLS : "Nothing burns like the cold."
var y = ( ( ROWS ) )
def TABLE[-15 / ROWS][j] {
	-0.59;
	Jon /= 36;
	y += rule(rule(Hodor,protect(Stark,TABLE[protect(foo(protect(),Hodor - 0.51 / betray(Jon,Jon),-( -mislead() ) / 36 - COLS * Hodor) * COLS)][-y])),( -( ( Stark / -22 ) / -( -0.27 ) ) ) / -protect(COLS - y,-( y ) - mislead(destroy(Stark) * Arya - -ROWS),x) - x)
}
assert -94 : "What do we say to the Lord of Death?"
def TABLE[--0.57 + ROWS][j] {
	if(( -88 * Jon )){

} else {
	if(-100){

} else {
	Arya -= destroy(Hodor,destroy(Sansa));
	Ygritte *= TABLE[Hodor - rule(-( 98 ),( 0.68 )) + rule(TABLE[-1][foo(( ---Ygritte ))])][-0.26 - Stark - TABLE[( TABLE[( TABLE[protect(0.91) + COLS + ( Stark )][bar(ROWS)] )][TABLE[protect(-ROWS,betray())][COLS]] )][ROWS]];
	if(y + Stark - ( Ygritte ) * foo() * COLS){
	TABLE[Stark][1]
}
}
}
}
var Sansa = -0.3
var y = x
var x = dog
var x = ----protect(-1,COLS)
var x = mislead(( 560.5649 ))
assert -10.24 : "Fear cuts deeper than swords."
assert 43 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(Hodor,Stark){
	mislead();
	Stark += TABLE[destroy(betray(TABLE[bar(dog,( 64 ))][Stark],-870.605))][y]
}
def betray(y){

}
def protect(dog,Sansa){
	( -70 )
}
var Sansa = -1
def betray(){

}
def foo(){
	if(ROWS){
	Sansa /= betray(Ygritte,( bar(( -Hodor )) ));
	Ygritte -= ( COLS ) * Sansa
};
	x *= ( TABLE[0.56 * -TABLE[bar(( -( bar() ) - foo() ),TABLE[protect(98,0.8)][28 * foo()]) + ( ( COLS - Sansa ) ) / 32 / --47 - ( -betray(Arya,-( Stark )) + protect(protect(foo(ROWS),---Sansa - ( foo(--83) ),( ( ROWS ) )),TABLE[( TABLE[-foo(TABLE[( -destroy(betray(-0.14 - --( TABLE[( ( ROWS * destroy(85,ROWS) + Jon ) * -ROWS )][bar() / -0.63] ) / -0.87 * Sansa + x - mislead(ROWS,( ( 0.33 ) ),COLS),( -610.3 ))) + ( TABLE[protect(x,-TABLE[Hodor / ROWS][COLS])][-rule(COLS,-0.73) - ( COLS + rule(mislead(bar(y,betray(Hodor)),bar(Arya,COLS,foo())),-1,( destroy(( protect(x / destroy(( TABLE[-300.75][( ROWS )] ),-0.08,y),Ygritte) - --protect() ),COLS) )) )] ) )][-foo(---ROWS,-1) * mislead()],dog * rule(-7,( ( ( ( -57 ) ) ) )))][400.5667] ) + 18][betray(destroy(),( --66 - -( ROWS ) ))]) )][1]][0] ) - -rule(( ( COLS ) ),-COLS)
}
var y = y
assert -COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-540.187][k] {
	if(bar()){
	if(390.9422){
	if(-ROWS - ( -Ygritte )){
	TABLE[TABLE[( Hodor )][( 310.4318 )]][-dog]
} else {

}
} else {
	if(-x / ( ( destroy(( COLS )) ) - 46 ) * TABLE[-1][Ygritte] + Stark + -0.42){
	y /= Hodor;
	if(-0.18){
	COLS;
	if(betray(protect(0.08),12,ROWS)){
	Stark;
	Jon -= COLS
};
	bar(-0.5)
};
	dog /= ( betray(Jon,mislead(Stark)) * foo(protect(( TABLE[0.82 + 0.16][ROWS] ))) ) / -45 + Hodor
}
}
} else {
	if(bar(0.54 * -Arya - Ygritte - destroy(( x ),ROWS),66,y * COLS)){
	( ( bar(-110.72,83) - -87 * Hodor / -rule(-850.1386,Jon,Sansa) - 67 ) )
} else {
	( ( Hodor ) );
	TABLE[-0.89][bar(protect(foo(87,Arya + Arya),16,---ROWS * --bar(Stark,-0.21,( bar(( dog ) * -11,-( Ygritte + Stark ),640.7) ) - mislead(x) + ( ( betray(x,-Stark) ) )) + protect(0.28,TABLE[-mislead()][Arya]) - mislead()),Sansa)];
	Ygritte *= betray(ROWS)
}
};
	if(ROWS){
	if(x + ( foo(1,-x) )){
	Sansa *= COLS;
	( -COLS * Arya )
} else {

}
}
}
def TABLE[( -60.07 )][j] {
	-( 1 );
	Sansa += -y
}
def rule(){
	9;
	Sansa *= Jon
}
def foo(Stark,Hodor){
	--590.214 + Stark * -ROWS;
	if(betray(970.05 + ROWS,-destroy(TABLE[( bar(( 74 ),( mislead(Jon) )) )][-x],0.15),Arya)){
	if(Stark){
	rule();
	if(-78){

} else {
	0.91 / ( -1 );
	-bar() - -ROWS * 13;
	-73
}
} else {
	Arya += Arya + -foo(Arya,( ( ( ROWS ) ) ),ROWS);
	if(TABLE[ROWS][x]){
	36
}
};
	ROWS
} else {
	Ygritte /= -ROWS
}
}
assert destroy(ROWS) / betray() : "Nothing burns like the cold."
def TABLE[( COLS )][i] {
	--Ygritte - TABLE[( Sansa )][Hodor];
	Stark /= Hodor
}
def TABLE[-dog - -Stark][k] {

}
var Hodor = Arya
def TABLE[COLS][i] {
	TABLE[bar(y,1)][COLS]
}
def rule(Arya,Sansa){
	dog;
	( Sansa )
}
def TABLE[-( -COLS ) / ( ( ( -( Ygritte ) / COLS ) ) )][k] {
	COLS;
	Arya += --( TABLE[-1][x] )
}
assert 240.3 : "One can not simply parse himself"
assert TABLE[destroy(-TABLE[COLS][ROWS])][-Sansa + COLS] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = COLS
assert ( ROWS / 40 - Stark - ( -rule(Arya) ) ) : "One can not simply parse himself"
var y = Sansa
def TABLE[-0.37][i] {
	y += protect(ROWS + Hodor);
	if(-650.7077){
	if(--0.38){
	x *= destroy();
	if(ROWS){
	Arya /= betray(dog,90,( -67 ))
};
	( ROWS )
} else {

}
};
	Jon -= ( x )
}
def TABLE[-1][k] {
	( Ygritte );
	( ROWS )
}
assert -1 * COLS : "Winter is coming"
assert ROWS : "Fear cuts deeper than swords."
var Stark = mislead(mislead(),ROWS + betray())
var dog = -ROWS
def mislead(x,Jon){
	rule(y,-( -rule(1,betray(Ygritte,-96)) ),Stark);
	( ( COLS ) / -TABLE[Arya][-( -( ROWS ) )] )
}
var Sansa = destroy(-Ygritte * ( ----0.69 )) * destroy(destroy(92 - -51,mislead(COLS) - ( ( bar() ) / --ROWS )))
def TABLE[COLS][k] {
	-Hodor
}
def TABLE[-COLS][k] {
	Arya
}
var Hodor = ( ( foo(ROWS) ) ) * -COLS + -Jon
def TABLE[( COLS )][i] {
	if(-( bar(Arya / -33 - COLS) / 0.22 / COLS * Stark )){
	-9 * protect(Sansa,-( ROWS ));
	Ygritte -= dog
}
}
def TABLE[bar(-Sansa)][i] {
	betray(--0.71 * -rule(Jon),-0.69);
	y += mislead(( x ),ROWS)
}
def destroy(){
	Jon -= rule(-y,-COLS)
}
assert ( ( ROWS * Sansa ) ) : "One can not simply parse himself"
assert betray(( 0.22 )) + -0.78 : "Nothing burns like the cold."
def TABLE[protect(COLS) - -COLS / -Arya * 1 - Arya][j] {
	if(--0.91){

} else {
	if(rule(ROWS,-87) / ( 0.02 ) + destroy(COLS) - mislead(betray(betray(Sansa,destroy(betray(51,( Sansa ),rule(( -ROWS ),COLS))),Hodor),( ROWS ))) / Ygritte){
	bar();
	if(COLS){
	Sansa -= ( COLS )
};
	Sansa /= ( mislead() + rule(Sansa) ) + 66 * -( -COLS )
}
};
	dog /= mislead(( --( ( -( -betray() ) ) ) ),-x)
}
def TABLE[Stark * dog][k] {
	if(y){
	Sansa -= -720.131
} else {
	x
}
}
assert x : "Fear cuts deeper than swords."
def betray(dog,dog){
	y -= 1;
	Hodor -= ( ( x ) );
	TABLE[-rule(Sansa,-940.373)][0.78]
}
def protect(dog){
	Sansa /= -TABLE[destroy() / foo(( foo(bar(-46,Jon,dog),--TABLE[-----betray(destroy(bar()),rule(rule(),COLS),Ygritte)][Jon * -( -38 ) + ( mislead() ) - 35 / ( Jon )] / betray(x,-0.56) * ROWS,( ( ( ( ( -( ROWS ) * -( destroy() ) ) ) ) + -0.14 ) )) ),y,-0.82 + Sansa)][84];
	if(Hodor){
	Ygritte *= TABLE[Stark][TABLE[Jon][TABLE[-0.62][Sansa]]];
	( TABLE[0.27][betray(-40.7,25 * --0.96)] ) + 620.21
};
	Sansa /= ( foo(Sansa,( TABLE[-2][protect()] ),Sansa) )
}
var Sansa = bar(COLS,-0.95)
def TABLE[( dog )][k] {
	if(TABLE[COLS][( ( --( destroy() ) ) - bar(Hodor,Ygritte) / -ROWS + Arya - ( betray(-foo(COLS * -0.07 - -1 - TABLE[( Stark )][-0.24] * -0.56,-( Stark ))) ) - ( bar() ) ) - Ygritte]){

} else {
	Hodor /= 0.24
};
	ROWS
}
var Sansa = ROWS * x
def protect(){
	y += 0.68
}
var dog = 96
def mislead(Sansa){
	Sansa /= ( protect(13,1) )
}
var Ygritte = foo(mislead(-betray(Arya,Ygritte,( -Hodor * ( ( Ygritte ) ) - ( Sansa ) )) / -Jon),TABLE[( -0.64 )][ROWS])
assert Stark : "What do we say to the Lord of Death?"
assert -320.6325 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -( x ) : "Winter is coming"
def TABLE[-protect(Arya,--TABLE[-0.8][foo(( ROWS ),( protect(-( TABLE[( -( betray(rule(dog,Stark),rule(-0.19) - -34 * ( Arya ),--1) ) + ( Ygritte ) )][--1] ) - Hodor,42) ) * ( protect() + ( ROWS ) ))])][i] {
	Ygritte /= ROWS;
	-mislead(bar())
}
assert ( -46 ) : "Winter is coming"
def TABLE[-( ( 0.17 - Hodor ) )][j] {
	TABLE[-0.7][( ( Hodor ) )] * Jon / ( 0.56 );
	-mislead(-( Jon ) + COLS / dog,--rule(-( -x / Arya ) * 630.9)) + -99
}
def rule(Arya,y,x){
	-0.86;
	COLS;
	Sansa
}
def betray(x){

}
var Arya = foo(-foo(( ROWS ),foo(-0.5,mislead(betray(-350,COLS / 1),rule(Stark,-480.8,Ygritte))),mislead()))
def rule(){
	Jon += 0.94;
	if(100.47){
	Ygritte /= -39
} else {
	TABLE[-790.39 - betray(TABLE[-( TABLE[( -1 ) / bar()][destroy(( ----TABLE[protect(-bar(43 + x * Arya,destroy(foo(--0.45 / foo(0.19),y,rule(rule(39),-58) * destroy(-0.41)),-destroy(protect(( Jon ),--rule(( bar() ),-ROWS,( ( ( -1 ) ) )) + -58 + -0.06,TABLE[1 - ROWS][( -0.03 )]),( Arya )) + TABLE[-Arya + ( TABLE[dog][TABLE[Stark][TABLE[( ( -ROWS ) )][bar(-( COLS / ( Sansa ) ),Jon)]]] - x ) / Stark][ROWS])) + Arya,-TABLE[-880.52][-0.83 / 510.437],0.53)][44 - Jon] ),-ROWS,-42)] ) + --y / TABLE[TABLE[--COLS - rule(( -67 ),-1,y)][( ( -ROWS * -betray(-1,-TABLE[-betray(Ygritte) * 1][2]) + TABLE[( -36 )][Jon] ) )]][COLS] + -Ygritte + ( foo(-88,Arya) )][mislead(-( mislead() ))],TABLE[( COLS )][COLS / protect(( -( Sansa ) )) * 0.46])][-0.73];
	Ygritte -= 24
};
	if(COLS){
	if(( y * ROWS * 860.166 )){
	if(( ROWS )){
	( 510.8 );
	if(0.46){
	if(ROWS){
	y /= --( -0.38 )
} else {

};
	Jon -= ROWS
};
	-( ( ( ( -( Hodor ) ) - betray(ROWS) * foo() - Arya ) * -0.43 ) ) + --protect(Sansa) * mislead(( 0.28 / 1 ),betray(Jon,COLS))
};
	Arya += ( ROWS )
} else {
	Arya *= TABLE[-( ROWS )][--( -0.61 )];
	( Sansa )
};
	betray(Stark,( ( destroy(49,Stark) ) ) / Sansa,15 / ( COLS + -TABLE[( ( destroy(COLS * -( y )) ) )][COLS + destroy()] ))
} else {
	TABLE[Ygritte / -320.629][COLS]
}
}
assert -Stark : "Fear cuts deeper than swords."
def rule(Sansa,Arya,Hodor){
	Sansa;
	if(73){
	( -( bar(-( y ),--( 37 )) ) )
} else {
	if(Arya){

} else {
	x;
	if(( -790.7 )){
	if(--610.8024){
	--230.567;
	Stark *= ( TABLE[Jon][-600.3] )
} else {
	( ( COLS ) );
	betray(bar(16,bar(Jon,Arya)))
}
} else {
	Sansa *= ( y )
}
};
	Stark += -COLS
};
	Sansa
}
def rule(y){
	y -= -TABLE[350.4 - COLS][mislead()];
	if(-0.81){
	x -= Sansa;
	if(bar(y,Arya,TABLE[( ( ( TABLE[ROWS][-Sansa] ) ) ) + Stark - Ygritte][rule(( dog - -1 ),foo(( TABLE[COLS + dog + -970.281][-0.04] ),( ROWS )))]) * 0.94){
	if(Jon){
	if(0.82 * ( TABLE[bar(( 12 ))][bar(-Jon)] )){
	-destroy(TABLE[( COLS )][Jon]) - -( --66 );
	y *= ROWS;
	dog -= -0.86
};
	Sansa /= --ROWS;
	if(ROWS){

} else {
	Ygritte;
	if(( 0.22 )){

}
}
} else {
	ROWS;
	y *= Sansa / TABLE[COLS][( ( protect() ) )];
	dog *= COLS
};
	if(destroy(Jon,-bar())){
	Stark -= ROWS;
	-( ( COLS ) )
}
}
} else {

}
}
var x = Ygritte - COLS
var Ygritte = ( bar() )
assert ( x - COLS * ( ( foo(-0.84) ) ) ) / -mislead(foo(24,COLS,( 79 )),( ( 0.36 ) - Hodor + ( rule(41,y) ) ) - ( foo(-rule()) * -0.88 ),Stark) + ( protect() ) : "Fear cuts deeper than swords."
def mislead(x){
	if(-TABLE[Sansa][rule(-ROWS,( protect(-rule()) ))]){
	if(-betray(-protect(--96 * destroy(--TABLE[57][810.947] / -91 / Sansa),-foo(),TABLE[protect(mislead(-32)) * y][( -810.415 )]),-1,COLS + bar())){
	Stark /= protect() * ( 460.23 );
	if(( y )){
	Hodor;
	Sansa -= -bar(bar(ROWS,ROWS) - TABLE[COLS][-( ROWS ) + y]);
	foo()
}
} else {
	-ROWS;
	-0.38 - Arya + ROWS
}
} else {
	destroy(protect(),( ROWS ));
	dog /= -COLS
};
	if(( dog )){
	Ygritte *= bar(Sansa - -mislead(),x);
	if(--1){
	y /= COLS;
	if(betray(( -93 ),( 15 + 580.8 ))){
	Jon /= COLS;
	Hodor *= 16
} else {
	y -= --11;
	-ROWS
}
};
	if(-940.59){
	Sansa *= TABLE[mislead(TABLE[Hodor - x / ( mislead(-( --0.97 - rule(0.39 * --ROWS * ( -Jon ) - ( betray(( ( COLS ) / TABLE[foo(TABLE[Jon][COLS] * betray(( ( -0.8 ) ),COLS),-rule(-0.55 / mislead(-protect() - -COLS) + -43,destroy(Arya,-betray(TABLE[--0.18][Stark],25 - -350.93))))][dog] )) )) / ( ROWS ) ) - destroy(( Jon ),TABLE[0.38 + -( ----TABLE[ROWS][-0.12] )][-59]) - ( destroy(COLS) ) + COLS,-80) )][1],-foo(( TABLE[ROWS][-y * protect(( TABLE[ROWS][Sansa] ),Stark * mislead(( ( -1 ) )))] ),TABLE[( 0.47 )][( 66 )] * -mislead(betray(COLS,dog),ROWS) / mislead(rule(),destroy(TABLE[--destroy()][COLS],destroy(-y,ROWS)),-( ( -x ) ) * dog),( TABLE[-ROWS][-0.14] )),( COLS ))][-34] * y;
	-ROWS;
	if(destroy(-96)){

} else {
	if(-( TABLE[0.23 - betray(mislead(0.93,ROWS - 1 + betray(-79) - -betray(bar(---protect(Ygritte,( 43 ),-bar(0.56)) * protect(-TABLE[-0.6][( 1 ) / ( COLS )] + mislead() - foo(ROWS,destroy(TABLE[--0.26][( Jon ) / -Hodor],-Ygritte)) * ---( 1 ),-( --ROWS / 73 * foo(mislead(foo(( -16 ),x),bar(betray(-bar(( ( foo(( foo() ),Stark) ) ),-0.99))),betray(( Hodor ),( ( Hodor ) )))) + rule(x) )),-Ygritte),( ( TABLE[betray(-1,ROWS)][TABLE[destroy(TABLE[( 1 ) / TABLE[0.26][1] - -220.1554][( Sansa )] * COLS * -0.8)][310.816]] ) ),-29)))][( ( Arya ) )] )){
	if(( -COLS )){

}
} else {
	x *= dog;
	Arya /= ( ( ROWS ) );
	y
};
	if(ROWS){
	COLS;
	y /= TABLE[TABLE[( -Arya )][Stark] / TABLE[0.71][TABLE[x][ROWS * -280.2] * destroy(( ( 33 ) * 580.24 ))]][680.92]
}
}
} else {
	bar(-( mislead(dog,destroy(TABLE[protect()][TABLE[( 0.68 )][TABLE[ROWS][-0.26]]])) ) * bar(( Sansa ) - -0.87) / ( -0.71 ) * -Stark / protect() + ( 0.03 ),betray());
	if(foo(TABLE[0.5][protect(Ygritte,-Sansa,( dog * Hodor ))])){
	Stark -= -0.72;
	Stark *= -COLS;
	-0.93
} else {
	if(Arya){
	if(-Arya){
	if(-0.3){

};
	Hodor /= 0.68
};
	dog * ( ( ---27 ) )
} else {
	if(COLS){

}
};
	-0.43
}
}
} else {
	bar(TABLE[destroy(-80.51)][COLS],-1);
	( protect(( Arya * Arya ),x) );
	if(94){

}
}
}
var y = -31
var Arya = ( Stark - -96 )
assert ( -destroy() ) : "One can not simply parse himself"
var Hodor = Jon
assert -rule() / ( Jon ) - -TABLE[-1][-x] : "One can not simply parse himself"
def mislead(Ygritte,Hodor){
	Stark;
	if(destroy(COLS,-ROWS - destroy(0.86,TABLE[--TABLE[mislead(protect(),-1,( ( Ygritte / ( Arya ) ) ))][( 32 ) * ( rule(50.59) )] - foo(-58)][TABLE[destroy(-bar(( COLS ),250.04 - betray(( -COLS ),( destroy(--ROWS,( -x ),( ( protect(Ygritte) ) )) )) + ( ROWS ),--ROWS / -( COLS )))][-( dog ) + ---1]]),( 27 ))){
	Sansa *= ----68
} else {
	betray();
	( COLS );
	if(( ( 90 ) )){
	COLS
}
};
	Hodor
}
def mislead(dog,Arya){
	Jon
}
var Arya = TABLE[-TABLE[-0.57 / Jon][mislead(bar(( -ROWS ),520.8,960.36))]][-650.525]
def bar(Hodor){
	340.29 * destroy(-ROWS,( dog + bar(COLS) )) * ( destroy(43,foo(COLS * ROWS),Jon) )
}
def TABLE[Sansa][k] {

}
def rule(Jon,Arya,Stark){
	-Sansa;
	( COLS ) * ( COLS ) / rule(-1)
}
def TABLE[Jon][j] {

}
def TABLE[y][j] {
	0.01
}
var x = betray(rule(protect(-destroy(),ROWS,-( -0.31 ) / 0.39 * TABLE[-44 - 1][1 / COLS]),--530.06 - Jon),--Hodor - destroy(-1,-destroy(( Hodor )),dog) * -1 + protect(ROWS + mislead(( protect() )),ROWS) * ( -y )) + ( 27 )
assert -( Jon ) : "Nothing burns like the cold."
def TABLE[-21 * ( bar(ROWS) )][k] {
	Stark -= ( Sansa )
}
var Arya = Ygritte - Ygritte
def bar(x,y,Hodor){
	Ygritte += Jon;
	Hodor += Stark
}
def TABLE[-x][k] {
	if(COLS){

}
}
def TABLE[rule(-Jon)][j] {
	if(( ( ROWS ) )){
	protect();
	Ygritte += ( 0.32 )
};
	-TABLE[foo(Arya) * Hodor][protect(-63)]
}
assert TABLE[-destroy(ROWS,bar(-( ROWS ) + Jon))][( 27 )] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert COLS : "One can not simply parse himself"
var dog = ( ROWS ) + -destroy(x)
assert y : "Fear cuts deeper than swords."
var Stark = bar()
def TABLE[y][j] {
	-89
}
def rule(y,Jon){
	--( TABLE[24][dog] / 0.25 ) + ( -27 / Hodor );
	if(y){

}
}
def TABLE[foo(dog,foo(( dog / COLS ),( -Hodor ),( foo() )),mislead(( COLS + y ) + protect(( ( Stark ) / COLS / -63 * COLS ),TABLE[ROWS][-TABLE[--28][foo(-0.83)]]) / TABLE[foo(protect(-0.05),-Jon,bar(y,protect(),97))][( -310.4374 )] / protect(),bar(-78)))][j] {
	if(TABLE[0.7][rule(Hodor,( foo(80) ))]){

};
	( COLS )
}
var Stark = ROWS
var Sansa = ( Ygritte ) * protect(( x ),ROWS,bar())
assert Stark : "What do we say to the Lord of Death?"
def TABLE[Stark][i] {
	Sansa;
	Sansa
}
def betray(Sansa){
	-( ( COLS ) * ( -Hodor / Jon ) )
}
var Jon = Sansa - -dog
assert ( 210.4 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = -1
assert 1 : "What do we say to the Lord of Death?"
var dog = COLS / -38 + -0.32 * 10 / TABLE[x][38] * -56
var Jon = ( COLS )
var Jon = -bar()
var x = ( COLS )
def TABLE[-( rule(COLS,-( ( COLS ) ),-560.01) )][j] {
	Hodor += TABLE[0.2][ROWS / ( --x * TABLE[-0.56][--88] )];
	if(mislead(( rule(( -dog * ( 79 ) ),COLS) ),-54)){

} else {
	Sansa
}
}
def TABLE[TABLE[35][Stark]][j] {
	if(bar(Jon,46)){
	Jon += ROWS
} else {
	if(Ygritte - COLS - COLS * dog){
	if(-35){
	if(foo(Jon / ( mislead(--1 * Hodor) ))){
	if(dog){
	if(COLS){
	Sansa;
	Sansa
};
	Stark /= ROWS - ( -260.52 ) + ROWS;
	-1
};
	if(1){
	y += ( ROWS )
}
};
	dog -= -0.83;
	ROWS + Sansa
};
	if(--0.52 / -ROWS + ( 23 )){
	x -= 1
}
}
}
}
def destroy(dog){
	Sansa += rule(-( x ))
}
assert ( TABLE[-Sansa][Arya] ) : "Nothing burns like the cold."
assert -Ygritte + COLS * protect(--Ygritte,--protect(0.05,ROWS) - TABLE[TABLE[60.81][rule(ROWS) - -ROWS]][Arya / ( -COLS ) * TABLE[dog][( ( foo(y) ) )]] * -26 / ( -mislead(COLS,protect(TABLE[0.3][Stark],( Arya / protect(COLS / betray(-COLS,ROWS) * Sansa,protect(-Stark,( ( --TABLE[Jon][( -TABLE[Hodor][Hodor] ) - Arya] / --dog ) ),Arya) + -0.15,betray(230.1949 / -Hodor)) ))) - Ygritte + destroy(Arya,--foo(( rule() ),COLS),-( Jon )) ) * ROWS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-0.94][j] {
	-dog;
	Stark += -0.88
}
var Hodor = -( -0.32 )
var Ygritte = 890.473
def TABLE[( x ) * -( ( rule() ) )][k] {

}
assert Sansa : "Fear cuts deeper than swords."
assert x : "What do we say to the Lord of Death?"
def TABLE[0.69][i] {
	-( -Hodor )
}
assert -14 : "Winter is coming"
assert Ygritte : "Nothing burns like the cold."
def rule(){

}
def TABLE[protect(--50.0011,-270.4)][j] {
	if(-COLS - 81 / ( --1 )){
	-TABLE[y - 10][ROWS];
	if(-foo(( ( x ) + -COLS ),( ( Stark + -62 ) ))){
	if(-( -680.1705 - dog ) - COLS / TABLE[( -ROWS ) + protect(ROWS,( -0.13 ))][1]){

}
}
}
}
var Arya = mislead(-rule(( -39 ),Ygritte,protect(( ( Ygritte ) ),Hodor)) / dog,foo(x),( ( ( betray(Jon / Jon) ) ) ))
var Ygritte = -y / Sansa
assert x : "Winter is coming"
def TABLE[dog][j] {
	x *= -COLS
}
var Arya = -y / COLS / -COLS + --1 / -0.75
assert Ygritte : "Nothing burns like the cold."
def mislead(Arya,Jon,Arya){
	-foo();
	x -= Arya
}
var Arya = 32
def foo(x){
	rule(Jon,-Jon);
	Jon /= 0.73
}
def TABLE[destroy(0.98)][i] {
	mislead()
}
def mislead(Sansa){

}
def TABLE[Sansa][k] {
	if(0.44){
	-( 15 )
} else {
	if(Sansa){

}
};
	if(COLS){
	Hodor
} else {

}
}
var x = -rule(( -COLS ) / 1,mislead(( y ),TABLE[-betray(ROWS) / -COLS + Stark][Jon] * Hodor - ( mislead(( ( -rule(( Ygritte / Jon ) / COLS - -1 + -0.02) - ( -83 ) ) ),( betray(foo(TABLE[13][-0.35]),-0.59,-( Arya )) - rule(COLS) * ROWS / ( Stark ) ) - y,rule(bar(Hodor,x) * ( Ygritte ),COLS,( mislead(( -0.76 )) ))) )) + -98 - 1)
def TABLE[( protect(mislead(Ygritte,y) / 0.73,x) )][k] {
	if(Sansa){
	mislead(-1);
	Ygritte -= 31;
	dog -= ( ROWS )
} else {
	y += Arya;
	if(foo(-foo(TABLE[foo(( ( betray() ) ) - -COLS,TABLE[--bar(( y ),620.2)][ROWS] - -( betray(-( bar(( ROWS ),ROWS,COLS) )) + COLS ),( 95 ) - ( ( ( bar(Sansa,foo(Ygritte,51)) ) ) ))][98] + COLS,Hodor,COLS))){
	Ygritte += --bar();
	if(-330.7846){
	1
};
	y *= --foo(( bar(Arya,rule(Stark,mislead(TABLE[mislead(( -betray(-COLS) / Hodor ),ROWS)][-( dog )],TABLE[destroy(ROWS)][-mislead(( -1 ),TABLE[mislead(Ygritte)][TABLE[foo(( x ),-450.129 + -92,-Jon)][Hodor]],rule(-Stark))] / 48) * betray(COLS + COLS,-Ygritte) / COLS)) - ( 0.04 - bar(dog,TABLE[y][destroy(ROWS,-bar(-ROWS,COLS))],( ( protect(-TABLE[---bar(COLS,1) + -0.36][-protect(COLS / ( rule(foo(),0.04) ) + ( Jon ),( -41 ))] * TABLE[700.1][protect()],1) ) )) + y ) ) * ( ( ( Stark * bar(foo(--980.476,destroy(--ROWS,-Arya,Ygritte + ( TABLE[( protect() )][rule(COLS,destroy(y,dog + -1),-86) / ROWS] - Sansa ) - 0))) ) ) ) - destroy(),--33 * 1)
} else {
	Ygritte *= rule(y,-54);
	if(-Hodor){
	Ygritte -= bar();
	x -= ( COLS )
}
}
}
}
def rule(Stark,Arya){

}
var Stark = --x
def protect(Ygritte){

}
assert dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = dog
def betray(Hodor,Jon){
	TABLE[-49][bar(( -0.55 ),-Jon)]
}
var Hodor = -0.02
assert y : "Fear cuts deeper than swords."
def TABLE[Arya][i] {

}
def rule(Stark,y){
	y -= ( 0.79 )
}
var Ygritte = ROWS
def TABLE[-0.65][i] {

}
assert -1 : "One can not simply parse himself"
assert 1 : "Winter is coming"
def mislead(Stark,Stark){
	Sansa *= rule()
}
assert -6 : "One can not simply parse himself"
def TABLE[COLS][k] {
	COLS;
	Stark += -rule(-31) * 1
}
def TABLE[1][j] {
	TABLE[--55][-( COLS )];
	( dog )
}
def bar(Jon){
	Arya /= 98
}
var dog = destroy()
var y = -16 + ROWS
var Jon = ( -TABLE[y][x] )
def foo(x){

}
def bar(){
	Ygritte *= -Ygritte
}
assert betray(mislead(-protect(TABLE[Jon][Arya] * TABLE[Hodor][-0.21]) * ( bar(-64) ),( TABLE[ROWS][--COLS] )),TABLE[Sansa][-0.73]) : "Winter is coming"
def TABLE[( rule(( -0.93 ) * COLS,Sansa) + -( -0.98 ) * -Ygritte )][k] {

}
def mislead(){
	if(-( protect() ) * betray()){

}
}
def betray(){
	Arya *= -TABLE[Sansa][rule() * ( 0.91 )]
}
def TABLE[Jon][k] {
	if(84){
	Sansa
};
	Stark += rule(TABLE[x][mislead(( TABLE[protect() - protect(Jon,TABLE[COLS][ROWS]) * foo(COLS,--bar(ROWS,protect(betray(),protect(Jon))))][COLS + TABLE[-ROWS * protect(-TABLE[-10][COLS / TABLE[TABLE[68][0.09]][--( protect() + COLS ) / -protect(-0.61) + -84] * protect(1)] - destroy(mislead(COLS),bar(betray() + --( 1000.9 ) - ( mislead(mislead(Hodor) * COLS) ),630.5492 / -630.69),Ygritte),y,-0.03) + protect(( 0.24 ),-ROWS)][( Jon )]] ),( COLS ),betray(---( Sansa ) * x - Ygritte,-1 + Jon))],( Sansa / --x - TABLE[-( rule(( TABLE[-Jon][ROWS] )) ) + bar(protect(Arya + ( -TABLE[-64][Stark] ))) + rule(mislead(-TABLE[dog][-0.46],TABLE[32][TABLE[-0.37][bar()]]),Stark) - ROWS + --1 / 1][rule(betray())] ))
}
def betray(dog){
	if(--( rule(COLS,TABLE[Ygritte][TABLE[Stark][TABLE[( ---bar() )][-Ygritte] + Jon - 860.38 - ( ( COLS / betray(Ygritte * ( Jon * COLS ),Sansa) ) )]]) + 49 + -bar(ROWS,y / destroy(x,rule(TABLE[ROWS][betray()],-37) / -75),COLS - Arya) )){
	if(--protect(TABLE[( ( ( --ROWS + -0.63 ) ) )][foo(y)],betray()) + ( -COLS ) * -1 / COLS){

};
	if(0){
	if(TABLE[rule()][COLS] + --63 - COLS){
	if(-( -( TABLE[-( ( Stark ) )][mislead(TABLE[--92][0.68])] ) )){
	y /= COLS;
	if(-23){
	if(( ( dog ) )){
	if(Hodor){
	-0.19;
	Hodor *= betray(x,-39,Jon) + -280.76 * rule(( ( destroy(destroy(ROWS / -y * rule(-59) - destroy(700.05,mislead(( ( rule() ) * 0.45 ),--bar(ROWS,foo(-Ygritte * rule(-370.7452,Hodor) - Jon / Arya,y,( ( protect() + -( COLS - Stark ) ) ))))),( -COLS )),--betray(dog,-0.43) * -Jon + 870.003) ) )) * TABLE[ROWS][0.54 + rule(Stark)]
}
};
	( bar(Arya * ROWS,Hodor - mislead(1),Sansa) )
}
} else {
	foo(( COLS ));
	----44 * Sansa + mislead(-Ygritte - ( TABLE[mislead(x,-mislead(TABLE[dog][-Stark],dog,-0.86))][COLS] ) - 98 * TABLE[( protect(mislead(TABLE[-0.53][( ( mislead(TABLE[ROWS][-ROWS]) + Hodor ) )],-COLS / -( -Stark - TABLE[protect(protect())][-( -( Sansa ) )] )),-96) )][COLS * 1])
}
}
} else {
	Stark -= -0.93;
	if(( ( Hodor ) )){
	x *= betray(TABLE[( -1 )][TABLE[-1][-1]]);
	if(COLS){
	-rule(ROWS,TABLE[-ROWS][protect()]) - TABLE[-( Stark ) / mislead(-ROWS + 94,y)][-rule(-TABLE[( mislead() )][-5] - -260.872)]
}
} else {
	Stark *= Ygritte
}
}
}
}
def TABLE[1 - 0.74][k] {
	if(dog){
	Sansa /= --1;
	Stark *= -rule(Ygritte,-mislead(( ROWS ),COLS / TABLE[0.22 - ROWS][mislead(-28,( --rule(Sansa,foo(rule(rule(0.83),COLS) - -220.025),-( y - -820.67 ) * -1 + Stark) * ROWS / 15 ))]) * betray() / -77 + Jon,Hodor);
	Arya += foo(Arya,bar(--mislead(-COLS,rule(-destroy(COLS,betray(( Sansa / TABLE[TABLE[foo(( betray(ROWS / 13,( ROWS )) ),( mislead(y,destroy(TABLE[( 0.29 )][950.6088 * --betray(-x,protect(-Ygritte,betray(rule(rule(),COLS) - --0.3) - Sansa))],( ROWS ))) ))][Hodor]][13] ),( Jon )),y),Arya,890.89)),( -1 )),Ygritte)
} else {
	if(( protect() / 1 - TABLE[( Arya )][( --Sansa )] / -TABLE[-0.04 + -1][protect(Sansa,-0.46)] / rule(( betray(-1,COLS,mislead(ROWS,0.9)) ),( ( ( protect() ) + ( -10.2315 ) ) )) )){

};
	Jon /= ( COLS );
	( TABLE[bar(( -2 + -0.16 * Stark ))][( -Jon )] )
}
}
assert -74 : "Winter is coming"
def rule(){
	TABLE[ROWS][-0.19];
	( destroy(TABLE[-( ( protect(76) ) )][ROWS / -destroy()],Ygritte) * 17 )
}
assert bar(-Arya) : "Fear cuts deeper than swords."
def betray(dog){
	if(bar(betray(bar(0.94,-Jon) / destroy(TABLE[COLS][( Ygritte )])),bar(x),0.31)){

} else {
	( -ROWS );
	if(( Hodor )){
	if(Sansa){
	( ( --Stark ) );
	if(COLS){
	Arya += betray(-ROWS)
}
} else {
	TABLE[Hodor][60.454];
	( TABLE[mislead(-27)][TABLE[( -protect(1 * Hodor) * --y / -0.09 )][-Jon * x] / ( Stark )] )
};
	Hodor += -52;
	Stark *= dog
} else {
	if(TABLE[Ygritte][( y )]){
	y *= ( Sansa );
	if(---mislead(Jon,dog + -0.87 - 7 - -15,y)){
	--betray(destroy(Hodor,TABLE[rule(mislead())][-11]),-62) - mislead(1,Ygritte)
} else {
	Arya
};
	if(destroy(-COLS,-74 / -( 12 ) + 5)){
	( betray(TABLE[betray()][-COLS]) );
	if(dog){
	if(Arya / TABLE[( -TABLE[---( COLS )][ROWS] / Stark - protect(TABLE[-3][-dog],( -TABLE[Jon - ( 40 ) + 0.51][rule(-1)] )) )][-11] - destroy()){
	-61;
	Ygritte *= ( dog + -( y * COLS ) )
};
	if(protect(Hodor,-9)){

}
}
}
}
}
}
}
def TABLE[Jon][i] {
	y / 25;
	( -Stark )
}
def foo(y,y){
	Hodor -= Stark;
	if(protect(-foo(betray(-40.1)) / y)){
	-( ( x - Stark ) )
}
}
assert ( -betray(rule(COLS,( -0.06 )),TABLE[0.98][-38],-700.97) * ( -97 ) ) : "Fear cuts deeper than swords."
assert --( -( -1 ) ) : "One can not simply parse himself"
def TABLE[-0.79][j] {
	-120.8914
}
assert Hodor : "What do we say to the Lord of Death?"
def TABLE[ROWS * --0.91][j] {
	if(-820.16){
	if(ROWS){
	betray(-mislead(-1) / COLS,ROWS * betray())
} else {
	-bar()
};
	Jon /= protect(rule(ROWS),foo(x));
	x -= betray()
};
	Arya += destroy();
	if(-( 210.3 )){
	x -= ( Ygritte );
	( Sansa );
	dog /= protect(240.3438 + betray(Jon,Jon))
} else {

}
}
var x = -betray(destroy(-mislead(-27),-( 0.05 ),y),bar(foo(1,Ygritte),TABLE[-Stark][( TABLE[( 24 / ( mislead(--8 - ( -360.7 ) / 1) - -0.16 ) )][--Sansa] )]))
def TABLE[betray(Hodor,COLS,Hodor)][i] {
	Arya;
	if(( destroy(y) )){
	protect(Arya,-97,rule(-Ygritte + ( ( -0.23 * --ROWS ) ),-23,dog))
}
}
var Hodor = -( 0.26 ) * foo(TABLE[-0.66][Jon],-rule(-ROWS + -1,TABLE[ROWS * protect(-y,-0.47,protect(Ygritte,-2))][ROWS * destroy(0.39,1)] - rule(TABLE[( 55 )][-33])))
def TABLE[-64][k] {
	--( -0.27 );
	x /= ( TABLE[( COLS + ( ROWS ) ) * --0.05][TABLE[TABLE[-foo()][( -x )] + ( TABLE[61][-1] ) - Ygritte / ( dog / COLS ) + ( ROWS * dog )][( 30 )]] * COLS / -550.061 )
}
var Stark = TABLE[foo(-( ( ( ( rule(Jon,( Sansa )) ) ) ) ),( Arya ))][-TABLE[Ygritte][-destroy(-ROWS,Stark)]]
assert -16 : "One can not simply parse himself"
var Jon = Hodor
def TABLE[Sansa + ( -COLS )][i] {
	22;
	( ROWS )
}
def TABLE[1][j] {
	( 58 );
	if(0.25){
	if(0.12){
	Ygritte -= betray(0.08);
	Stark -= mislead()
};
	if(y){
	if(TABLE[Ygritte][bar(Hodor * ( y ),0.73)]){
	x *= bar(Stark * -840.73);
	-foo(-Hodor - ROWS,COLS) - betray(COLS) + protect(-26,-x)
}
} else {
	Arya -= betray(mislead(--440.6964,mislead()),destroy(),Sansa - mislead(-33,TABLE[1][Sansa]));
	if(foo(-x / 0.9,rule(protect(( Arya ),betray(--betray() + -( mislead(( betray(-1,Hodor) )) ),protect(Hodor,( destroy(ROWS,-0.94 / ROWS * betray() * --bar() * -52,betray(-1 + ( protect(Arya) / -130.5 ),( TABLE[0.11][0.81] ),betray(protect(rule(),COLS,Ygritte),Arya) / 41)) ),COLS)) - bar(90.468,bar(destroy(( ( Stark ) ),mislead(protect()))) * ( COLS ),dog),( protect(bar()) ))) * destroy(destroy(betray(betray(Jon),-Hodor - bar(betray(( ROWS + COLS ))) * -66))) * foo(0.3)) / Arya - Arya){
	if(( Arya )){
	if(0.03){
	if(x + -70.377){
	-COLS - ( destroy(( 0.19 ),-ROWS) + ROWS )
}
} else {
	Jon *= bar(COLS,x,1)
}
} else {

};
	ROWS
} else {
	if(( y )){
	0;
	if(23 / ( x / ( ( ( -Ygritte ) ) ) ) / -45){
	( Stark / betray(x * ( dog )) ) * Stark
} else {
	if(--ROWS){
	if(( 0.98 )){
	Stark -= Sansa;
	Ygritte -= TABLE[-destroy(betray(TABLE[Ygritte][-y + Stark + y],x),-1,-0.78 / bar())][-0.78]
} else {
	-69;
	if(( 93 ) / ( -mislead(ROWS) ) + -mislead(-1 - y,COLS) / -63 / -( -810.3 )){
	-21
} else {
	-93;
	0.11;
	COLS
};
	( ( Stark ) ) / -COLS / COLS
};
	0.8
}
}
};
	840.816
}
}
}
}
assert x : "Winter is coming"
def destroy(Stark,Sansa){
	if(--0.02 * -150.841){
	bar();
	TABLE[bar(----95,foo(-COLS,TABLE[dog][-bar(-58)],( protect(betray(-Sansa),COLS) )),( ROWS ))][-protect(( ( 0.7 ) + -bar(mislead(-0.77,( --( TABLE[Ygritte][-mislead(--TABLE[Sansa][--0.02 + -TABLE[( betray(dog) + ( foo(( COLS * Arya ),x,COLS) ) )][protect(-TABLE[1][dog])] * -Arya - -( COLS ) * 330.548])] ) ),( rule(mislead(foo(),Hodor + rule()) * Ygritte) )),TABLE[bar(-Ygritte,0.15,COLS)][betray(TABLE[( Hodor )][--0.64 + --1],TABLE[Sansa][rule(dog)])]) )) + Arya] / -dog
};
	Ygritte += mislead(bar(),-ROWS)
}
def bar(Jon){
	Hodor /= ROWS;
	Ygritte /= -91
}
assert TABLE[( 1 )][foo(rule(),-mislead(-TABLE[---93][-Arya] + betray(Ygritte,( foo(( -0.31 )) )) / COLS,betray(bar(Jon),Hodor)))] : "Nothing burns like the cold."
def protect(dog,x){
	if(-Ygritte * -Arya){
	x /= Sansa + ROWS / -destroy()
};
	Sansa *= -1 * Jon / ROWS
}
var Jon = --0.45
def protect(Ygritte){

}
def TABLE[25][k] {
	y *= mislead(-0.11,y)
}
def destroy(Hodor,dog){

}
def TABLE[TABLE[( Ygritte )][Sansa]][i] {
	x -= rule(ROWS)
}
def TABLE[COLS][i] {
	-betray(ROWS)
}
assert Jon : "One can not simply parse himself"
def bar(Ygritte){

}
var Arya = -0.42
var Ygritte = --dog
assert x + -56 : "Nothing burns like the cold."
var Ygritte = -0.34
def TABLE[TABLE[mislead(x)][( bar(COLS / -0.54 - Arya / TABLE[-130.044][mislead(ROWS,--ROWS) + --( -( ROWS ) ) + -1 / -1],-330.79) )]][i] {
	Jon -= foo(-bar(0.29,-betray(Sansa * 0.29 - destroy(-0.12,Arya)) - -ROWS,-Hodor),-0.7);
	if(-COLS){
	Arya /= Stark / ROWS;
	dog -= TABLE[-9][-1]
} else {

}
}
def foo(Hodor,Jon,Stark){
	COLS + protect(betray(protect(),Hodor,betray()) - rule(TABLE[-TABLE[790.26 / Stark][23]][bar(-destroy(750.1419,-810.66 * 0.17 * ROWS,-( Ygritte )))],ROWS),-( Stark ) - -dog / mislead(Sansa) * TABLE[-( rule(1) ) - -0.75][( 0.93 + ROWS - Jon )])
}
var dog = rule(protect(( ( 1 ) ),-Sansa))
var Sansa = TABLE[--830.72][( Arya )]
def TABLE[ROWS][i] {
	Jon;
	Sansa /= x;
	x -= ROWS
}
assert Ygritte : "Fear cuts deeper than swords."
def TABLE[--COLS][j] {
	Arya *= --1;
	if(COLS){
	Jon += -Jon;
	ROWS * COLS;
	Arya *= rule(protect(690.1599,1,TABLE[( Jon / -( Arya ) )][( -80 )]))
} else {
	Jon /= COLS;
	Sansa -= Hodor;
	-610.8
}
}
assert -mislead(-0.66,( ( -Stark * 62 ) ),Jon) : "Fear cuts deeper than swords."
def TABLE[x][k] {
	dog += foo();
	if(-51){

}
}
def TABLE[bar(( x ))][j] {
	dog /= dog;
	if(-66){
	-protect(-Ygritte) * --ROWS / ROWS * Jon;
	--y * ( destroy(( betray() ),ROWS,protect(rule(-TABLE[destroy(-1)][-( ---( COLS ) / destroy(TABLE[-COLS][x],TABLE[foo()][( 0.86 )] / COLS) - ( -0.1 ) )],( -dog ),betray(-35) / Jon + ROWS))) * destroy(-0.43 + 810.1853) + ( x ) + --x );
	rule(Sansa,-destroy(-( 0.01 ) + COLS,-TABLE[0.88][foo(-74)]),-protect()) + Sansa
} else {
	Jon /= destroy(rule(),0.45);
	if(( ROWS / TABLE[--80][TABLE[Stark][destroy(-ROWS + ( 1 ))]] / -60 )){

}
}
}
var Sansa = -12
def TABLE[-destroy(( -Arya - 30 ))][j] {

}
assert y : "One can not simply parse himself"
def betray(Jon){
	Hodor /= -640.6355
}
def TABLE[-dog][j] {
	Jon -= ( --310.1 )
}
assert 0.16 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = ( COLS ) + 0.78
def bar(Sansa,x){
	y *= -12
}
def TABLE[betray(670.5)][k] {
	( ( -43 ) );
	Ygritte -= betray() / COLS;
	Sansa += 0.88
}
def betray(y,y,Arya){
	if(--5){
	COLS
} else {
	mislead(ROWS);
	x /= ( -900.95 )
};
	protect(( 1 ),( Hodor ));
	if(TABLE[TABLE[( x )][-370.73]][( ( protect(ROWS,1 + mislead(Sansa) / -1) ) ) - mislead(-Arya - 60.786,--( -( ( -Hodor ) ) ) + destroy(( ---TABLE[--66][dog] )) - Stark * rule(destroy(COLS)) / ROWS,mislead(-0.82,( COLS ) - rule(-Stark),-0.2))]){
	Stark *= ( -0.9 - 0.88 )
} else {
	Jon -= destroy();
	COLS
}
}
var Hodor = -49
assert ( rule(( betray() ) + ( destroy() ) - ( mislead(-dog) ),mislead(-ROWS)) ) * protect() : "Winter is coming"
def destroy(Jon,dog,Ygritte){
	Sansa
}
def bar(y){
	if(protect()){
	Stark -= Jon
};
	if(foo(dog,( TABLE[destroy()][protect(rule(rule() + ( 210.81 )),-TABLE[betray(-220.399,Arya) * mislead(destroy(0.66),foo())][Sansa])] ),-1)){
	Sansa *= bar(( ( bar(rule(TABLE[-( -bar(y * -59,36) ) / TABLE[620.329][Stark] - 94 / -betray(-foo(dog,TABLE[360.968][bar(-TABLE[rule(COLS)][COLS]) + 94] + Stark)) * destroy(bar(ROWS),Arya,mislead(y) / --( TABLE[-( 1 + -( TABLE[protect()][ROWS] ) / -48 - ( COLS ) )][-( ROWS )] )) * TABLE[( ( ( mislead(--( -Jon ) - ROWS) ) / -TABLE[--destroy(COLS)][x] ) )][Ygritte]][( Jon )] / COLS),mislead(x)) ) ),Ygritte) / mislead()
}
}
def mislead(Stark,Jon){

}
assert TABLE[( ( 19 ) )][bar(----( COLS ),78 * TABLE[foo(-0.74,-59)][betray(( 1 ),TABLE[90.15 - Stark][Arya],mislead())])] : "Winter is coming"
var dog = -mislead(-1,-foo(-Stark))
def destroy(Stark,Ygritte){
	if(dog){
	if(--82){
	( -600.3064 ) / ( ROWS ) + ROWS;
	if(( betray(1) + ( ( ( ( -ROWS ) ) ) ) / ( ROWS ) )){
	if(COLS){

} else {
	x;
	( mislead() + 0.54 );
	COLS
}
} else {
	if(( 6 )){

} else {
	if(( -y - dog )){
	--0.78 / TABLE[rule(-COLS / COLS * destroy(( bar() ))) - Hodor][Jon]
}
}
}
}
};
	if(840.513){

} else {
	if(--71 + betray(( foo(mislead(rule())) - y ))){
	dog *= -rule(Ygritte,ROWS) + ( -dog );
	Arya
} else {
	dog += COLS;
	if(--Stark){
	TABLE[-0.53][-x];
	betray(0.69,-Stark);
	Stark -= -x - destroy()
}
};
	Jon *= ( -0.96 )
};
	--COLS
}
assert protect(COLS + ( -Sansa + y ),94,y - betray() + -( TABLE[TABLE[TABLE[destroy(betray(-( Hodor * rule() ),-betray(x)))][Ygritte]][TABLE[ROWS][( -( ROWS / y ) + ( destroy(y) ) * betray(620.737 + x,( -0.98 ),( ( ( Hodor ) ) - COLS )) * foo(mislead(),-300.83) )]]][( -( Sansa ) )] )) : "What do we say to the Lord of Death?"
def destroy(Sansa,Arya){

}
var Hodor = -44
assert Ygritte : "Winter is coming"
def protect(Arya){
	if(-protect(COLS,bar(COLS,COLS))){
	Ygritte *= ( ( ( Arya ) - ( -( ( ( -mislead(x,TABLE[foo(foo())][-21]) ) ) / Jon ) ) ) );
	if(bar() / 33){

} else {
	if(-0.97){

} else {
	y += y;
	Hodor /= ( COLS );
	0.9
};
	TABLE[--betray(( 1 )) - -Ygritte][--1 + Stark] / foo()
}
} else {
	if(Hodor){

}
};
	if(COLS){
	y *= -Hodor + x;
	-destroy()
}
}
assert ( foo(-( destroy(protect(TABLE[( TABLE[Jon - x][COLS] )][-87])) ),Ygritte,( -( 0.77 ) / x ) / 1) ) : "Nothing burns like the cold."
def TABLE[( bar() )][i] {
	if(( rule(( COLS ) + Sansa + bar(-1) / TABLE[( 35 + Jon / -( ( ( rule() ) / TABLE[94][Arya] ) ) )][-Sansa],mislead(0.08,mislead(Hodor,TABLE[dog][-COLS]))) - -0.98 - bar(Sansa) )){
	if(ROWS){
	dog *= TABLE[TABLE[bar() * x][bar(( TABLE[-TABLE[-0.25 / foo(-( betray() - 11 ),-TABLE[-x + Sansa * Sansa][-TABLE[ROWS][TABLE[ROWS][-x]]],betray(bar(-( --88 ),( rule(( -foo(-0.09,1) ),--( ROWS - -COLS ) * ( 540.2 ),COLS) )),-0.18 / Ygritte,-1))][ROWS]][dog] ),0.53,destroy(Jon,bar(TABLE[-x][protect(( -( ( Arya ) ) ),Sansa)])) / -1)]][( Arya - destroy(0.74) )]
}
} else {

}
}
def mislead(dog){
	ROWS;
	if(ROWS){
	( bar(-COLS,TABLE[mislead() * -dog][-63]) + -1 / ( TABLE[Jon / -99][Sansa] ) - rule(-0.3 * foo(TABLE[mislead()][Hodor]),x * ROWS) );
	if(--( Arya )){

} else {
	0.69;
	COLS / ROWS
}
} else {
	8
}
}
assert -( ( Arya ) ) : "Winter is coming"
assert Sansa : "Winter is coming"
def TABLE[-12][j] {
	Stark -= Sansa
}
var dog = Stark / -( foo(COLS,Jon) ) + ( 1 / 0.02 ) + ROWS
def mislead(Ygritte){
	Stark += -COLS;
	if(TABLE[x][rule()]){
	if(COLS){
	if(ROWS){
	y += 430.9591
}
};
	Stark /= -destroy(Ygritte)
} else {

}
}
assert Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = ( ( bar(( ( ( 160.9295 ) + destroy() ) ),rule(ROWS) / ( TABLE[TABLE[ROWS][( x )]][( -900.06 )] )) ) )
def TABLE[-mislead(--0.44)][j] {
	dog += foo(82,( ( COLS ) ) / protect(( foo(betray(ROWS + ---( -21 * ---( rule(TABLE[--ROWS][-COLS],-0.16) ) / 0.14 / destroy(-0.38) ) / -0.78),0.25) ),( ( -0.68 ) )) + TABLE[--COLS][foo(ROWS)]);
	Stark
}
def mislead(Stark,Ygritte){
	( ( ( ROWS ) ) )
}
assert Hodor : "One can not simply parse himself"
assert ( -foo() ) : "Winter is coming"
var dog = Ygritte
def TABLE[protect(destroy(( 0.51 ) * ( Sansa ),Arya,COLS - x / mislead(( COLS ),76)),( TABLE[COLS][( y )] )) + rule()][k] {
	Stark -= rule() * -3;
	y
}
var x = dog
var dog = bar(-160.72 / -bar(-destroy(COLS - TABLE[dog][TABLE[mislead(rule(( ( COLS * -78 * protect(0.79) * ( y ) + 0.75 * Arya ) ) * -TABLE[-Stark / foo(foo(-1),Arya,--( ( -0.54 / TABLE[-730][( protect(Jon / --260.92) )] * COLS + -390.1685 - protect(( bar(( 211 ),Ygritte) ),Stark / ( -91 ) * COLS,mislead()) + -0.72 ) ) / mislead(Sansa,bar(( x )))) - 200.983 + dog - COLS][protect(Stark)] * 0.84 + -Hodor,TABLE[-( ROWS )][( -94 )]),-0.91)][Ygritte - -300.7874]] * TABLE[( dog )][destroy(Ygritte,( COLS ),( Hodor ))] + -destroy(-76,protect(TABLE[x][( protect(Arya) ) - dog])) * ( -( ( COLS ) ) / TABLE[( rule(60) - -foo(-80,Hodor,TABLE[TABLE[Jon][( ( 1 ) )]][-( y )]) * mislead(foo(TABLE[bar(protect(TABLE[destroy(-0.76,rule(( 930.0933 )),Ygritte)][710.75]))][bar(380.2979,520.4)] / 100 + ( ---( Stark ) ) / ( --250.339 ))) )][TABLE[1][mislead(--( ROWS ))]] ),( bar(-75,-Jon,TABLE[TABLE[COLS][-rule()]][destroy()]) + ( betray(---( TABLE[bar(( -COLS ),( Arya ),protect(-dog,( 0.86 ) * ( mislead(-330.3382) )))][( Stark )] ),destroy(( 14 ),-Ygritte * bar()),( -1 ) / TABLE[bar()][COLS]) ) - 1 ),62)),-Hodor)
var Hodor = -( 23 / -( ( -( TABLE[x + -destroy() / -83][bar(ROWS)] ) ) ) )
def destroy(){
	if(-35){
	if(Jon){
	Jon *= -750.95;
	Jon /= ROWS
};
	Ygritte += TABLE[COLS][bar(Arya,-ROWS - destroy(Hodor),( ( ( COLS ) ) ))]
};
	--protect(( bar(-76) ),0.66) + -Sansa;
	--29 + TABLE[( bar(-protect(0.94),( -foo(Sansa) ),COLS * --rule(0.982)) )][( ( ( Stark ) ) )]
}
def TABLE[-15][i] {

}
def TABLE[-Hodor][i] {
	dog *= y
}
assert COLS : "One can not simply parse himself"
var dog = Sansa
def bar(Hodor,Jon){
	--( 28 );
	if(foo(-0.89 + -8 / COLS,destroy(0.87,-52)) / -1 - ( -0.2 )){
	foo(-foo(Stark),-x,Hodor)
}
}
assert ( betray(500.25,COLS) - ( COLS ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Stark][j] {

}
def TABLE[TABLE[COLS][x]][i] {
	TABLE[TABLE[destroy(betray(rule(TABLE[ROWS][bar(x / --0.05)]) - TABLE[destroy(Sansa - Jon,COLS)][( Sansa ) + Jon] * ( destroy(dog) ),8 * rule(0.72),( 2 )),-1 + ( TABLE[-18][Sansa] ))][mislead(-92,57,mislead(COLS,TABLE[mislead(-TABLE[( Jon )][bar(--rule(( foo(99) ),bar(COLS,Jon + -67) - foo(mislead(Hodor,betray(--72) / ( betray(( -Sansa ),destroy(Sansa)) ) - Sansa - 0.6 + 0.38)),foo(y / y * ( -1 ),( dog - ( ( ROWS ) ) + x ))),0,( -( ( ROWS ) * ( -68 ) ) )) + bar(-790.2081)],rule(),( -rule(rule(ROWS,-35,mislead(( -Sansa ),--bar(( betray(TABLE[( -( COLS ) - Jon )][0.02],COLS) ),COLS,ROWS) - ( -COLS )))) * ---ROWS * ROWS - 21 - -0.97 ))][-46] + Jon))]][Hodor];
	Hodor += betray(ROWS,1)
}
def TABLE[destroy(0.15,protect(-( foo(0.71,betray(ROWS),COLS) * --y )))][j] {
	Hodor -= Stark;
	Ygritte += dog
}
def protect(){

}
var Jon = y
def mislead(Arya){

}
assert ( Arya ) : "What do we say to the Lord of Death?"
def protect(x){
	-COLS;
	Arya -= protect(1 / ( Stark ),-ROWS,betray(--COLS + -ROWS))
}
assert 1 : "One can not simply parse himself"
def protect(Arya,Hodor){
	if(bar(rule(( ( ROWS ) ),( ( --Sansa - 0.7 ) * 0.02 )))){
	if(destroy(ROWS - TABLE[Sansa][-( Stark ) / TABLE[( TABLE[x][TABLE[( TABLE[Ygritte][Stark] )][TABLE[( Jon )][TABLE[--bar(COLS)][-Hodor]]]] + y )][mislead(--( Jon ) * COLS) / -Stark + 1] + 1 * mislead(protect(( bar(130.63,Hodor) )),( ---Jon / TABLE[x][COLS] ))],( destroy(TABLE[96][-0.79]) * Ygritte ))){
	( -foo(-x) );
	if(( dog )){

}
}
} else {
	TABLE[Stark][-( betray(-foo(-COLS,-( -Arya - -Hodor ),bar())) ) - betray(--94,COLS) * dog - ( ( dog ) )]
};
	if(-Jon){

} else {
	if(y){
	Arya -= x;
	if(COLS){

} else {
	( -rule(--mislead(),Ygritte) );
	Hodor += 0.85
}
} else {

}
};
	if(ROWS){

}
}
var Ygritte = ( TABLE[x][1 - y] * Hodor + mislead() * ( ( x ) ) )
var Sansa = ROWS
var dog = dog
assert ( ( Jon ) ) : "What do we say to the Lord of Death?"
def foo(){
	-0.37;
	dog *= TABLE[Stark][COLS] * -x;
	Arya /= -Stark * -Hodor
}
assert ( Hodor ) : "What do we say to the Lord of Death?"
def destroy(){

}
assert bar(( Ygritte / ( Arya ) + 1 )) : "Nothing burns like the cold."
assert 0.02 : "Fear cuts deeper than swords."
def foo(Sansa){
	if(-53){
	if(1){
	x /= ( ROWS );
	if(TABLE[protect(COLS)][destroy(TABLE[bar(bar(destroy(Stark,COLS),( protect(--0.23) )) / -( -( -30 ) ))][y])]){
	if(( ( mislead(x,( ( ROWS ) ) + ( ( bar(protect(Stark,( 92 ) / COLS) + -Hodor * -mislead() / 0.17,TABLE[ROWS][-Jon]) ) )) ) )){

} else {
	if(( Sansa )){
	Ygritte *= Ygritte;
	if(COLS){
	if(--protect(-( --47 )) + foo(bar(( -( Sansa ) ))) + ROWS){
	Arya;
	Jon -= ----920.243 / bar(dog - destroy(),betray(( ROWS ),( ( dog ) )));
	( ( -ROWS + -80 + --0.33 + destroy(-COLS) - ( betray(( --destroy(foo(ROWS,0.79 + 0.99)) ),foo(57,bar(-48))) ) ) + Arya ) * Hodor
};
	ROWS
}
};
	if(-900.5){
	if(Sansa / y){
	if(foo(( mislead(Sansa / -1,570.8,-ROWS) ) + Sansa)){
	if(--0.66){
	if(--foo(0.88,( ROWS )) / -42 - ( Hodor )){
	x /= ( TABLE[( 0.55 )][( Jon ) + Stark - -protect(COLS,destroy()) * TABLE[TABLE[( -23 )][Ygritte]][Ygritte]] )
};
	if(bar()){
	( rule() );
	( rule(Sansa,bar(-97 / ROWS,( -ROWS )),-0.31 + ROWS) )
} else {
	Ygritte -= ( betray(14) );
	-mislead();
	Hodor += ( -0.07 * -10 )
}
};
	if(ROWS){
	if(-( -rule() / -0.43 ) * ROWS){
	if(-Jon){
	if(-( Stark )){
	Sansa
}
} else {
	Jon;
	COLS
};
	y *= ( Stark )
};
	Stark /= x
} else {
	COLS;
	( x - -Jon );
	if(mislead(-( ( bar(destroy(( Ygritte ),( -ROWS ))) * destroy(-1,mislead(-0.21),( bar(1) )) ) ) - -y - bar(foo(Hodor,destroy(( ( rule(-650.096,foo()) * Stark ) ))),Hodor))){
	if(betray(ROWS,--61,ROWS)){

} else {
	Hodor -= ( -590.67 );
	Hodor /= -ROWS;
	Sansa -= bar(bar(1 * COLS) / COLS * 79,COLS)
};
	if(1){
	if(-Stark){
	if(ROWS){
	betray(7 - -ROWS,COLS) - -180.694;
	Sansa *= -protect()
} else {
	Arya /= ( --( TABLE[( 6 )][Arya] ) ) - -ROWS;
	TABLE[TABLE[COLS / dog * TABLE[-100][-ROWS]][( ( 16 ) )]][-( foo(-protect(-Hodor,betray(COLS,---bar(rule(foo(0.49)),protect(-TABLE[-0.71][dog] - Jon + COLS + ( -----79 ) + Sansa),-1000.37) + 91,Sansa)),protect(-46) + foo(rule(( -COLS * TABLE[-56][rule(Ygritte - Hodor)] ),( -foo(( x ),( 0.23 )) )),ROWS)) )]
};
	-44;
	if(bar(mislead())){
	Ygritte += foo(-( ROWS ),-560.77 + ROWS / -( dog ),x);
	440.69
} else {
	if(Hodor){
	Sansa += -Stark + COLS;
	if(260.047){
	if(-1){
	Stark /= ( ROWS )
} else {
	if(Hodor){
	Sansa -= 1;
	Stark += ( ( --COLS - ( rule(foo(protect(COLS - -0.44,-protect(-rule(y / protect(ROWS)))),Hodor)) ) + TABLE[bar(ROWS,--foo(COLS,-0.55))][TABLE[7][foo(COLS,--850.069,-( -25 * ROWS + Arya + 0.19 * -1 / COLS + ( Arya ) ))] / TABLE[-( -COLS + ( rule(--92,COLS) ) )][( Hodor * COLS )]] / 0.33 / bar(-1 * ( mislead() ) / -dog,protect(670.95)) ) );
	Stark *= betray(( x * protect() ),Jon,--0.25)
} else {
	if(--88){
	if(-75){
	if(foo(TABLE[x][Stark],0.6) + bar(Ygritte)){
	( ( ( ( -43 ) ) * ( betray(( ---( -0.74 ) ),y) ) ) )
};
	Hodor /= COLS
} else {
	if(-betray(--390.36,foo())){
	-( -800.7 ) + protect(-830.994 / TABLE[Ygritte][bar(mislead(Stark) - ----( TABLE[-44][-protect(( dog )) / Arya] ) - -protect(mislead(( ( 0.15 ) )),TABLE[-COLS][Hodor]))] + Arya,TABLE[COLS][ROWS])
} else {
	if(foo(mislead(-0.01),ROWS)){
	betray(-mislead(-( TABLE[18][Sansa - ( 0.8 )] ),protect(17,COLS)));
	Sansa += TABLE[-( -( --ROWS + y - ROWS ) ) - -600.4123 - ( ROWS )][( --betray(TABLE[( COLS + protect(-x / ( protect(0.74 + ( Stark ),0.17) ),-Ygritte,( -( ( dog ) - Ygritte ) )) ) * TABLE[protect(TABLE[-TABLE[-foo(65,( Hodor )) - Stark][destroy(Arya)] / ROWS][( -320.4186 )],dog)][( ( Jon ) )]][betray(TABLE[0.3][COLS])]) )]
} else {
	if(( -1 / Ygritte )){

}
};
	if(-0.11){
	Hodor /= -( Arya ) / Ygritte * ( --bar(ROWS) * x )
} else {
	Jon -= -17 - ( TABLE[Hodor][Jon] ) + COLS / ( -43 );
	x;
	if(-( --x + ( bar(Arya) ) + -0.4 * -mislead() * ( TABLE[foo(83,Arya,foo(( Arya ),-COLS))][--44] ) / TABLE[rule(( ROWS ),TABLE[TABLE[y][( destroy(-Sansa,( 350.809 * ROWS - ( -45 ) ),0.2 - 17) )]][-940.77] + ( ( 0.1 ) ))][---90] * bar(Stark) ) / -Arya / foo(-( --620.65 - ( ( -67 ) ) ) + -0.68) / --0.53 / -TABLE[( ( destroy() ) )][y]){
	bar() - --0.35
} else {

}
}
};
	Arya /= -ROWS + ( COLS )
};
	Sansa += ( 1 )
}
};
	Arya *= destroy(TABLE[destroy(COLS - rule(-890.996,--1,---COLS + ( COLS ) / 1) / TABLE[Sansa][foo(-76)])][betray(foo(),--COLS)])
}
};
	if(-91){

}
};
	ROWS;
	COLS
}
} else {

}
}
} else {
	if(TABLE[( Hodor ) - foo(0.43,ROWS)][-0.08]){
	Stark *= -mislead(-750.7743)
} else {
	Jon -= ( Ygritte )
};
	if(( -Arya )){
	ROWS;
	Ygritte
} else {
	if(( ( Ygritte ) )){
	x /= ROWS - Jon
};
	y -= ( dog + Ygritte ) - 19
}
}
};
	if(( ( Sansa ) ) + destroy() * -1 + mislead(ROWS,TABLE[-51][ROWS + -85])){
	dog /= ROWS / foo(betray(ROWS,TABLE[( y )][foo(betray(( Arya ),Ygritte,betray(-( bar(bar(),( -0.53 )) ),COLS) * dog))],ROWS * protect(rule(destroy(( 59 )),--Jon,( dog )),( --320.329 / Arya )) - -14)) / Stark
} else {
	( ( --TABLE[mislead(Jon)][1] - COLS + TABLE[( Sansa ) + TABLE[ROWS][TABLE[( ( 0.7 / -64 ) )][x]]][foo(Ygritte)] ) );
	if(( ( ( ---foo(betray(foo(-0.43,Jon * foo(-dog),ROWS) - COLS)) - ( -1 ) ) ) )){
	0.07 * -TABLE[-52][( Ygritte )] + Arya;
	( -( --14 ) )
} else {

};
	850.75
}
}
} else {
	Ygritte += 98
};
	dog += ROWS / bar(TABLE[y][bar(x)],foo())
}
}
}
}
} else {
	( protect(1) );
	-2
}
}
assert x : "Winter is coming"
assert ( x ) * -60 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -0.94 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert foo(( foo(350.92 * ( y ) - TABLE[0.52][-bar()]) )) : "Fear cuts deeper than swords."
assert bar() : "Nothing burns like the cold."
def TABLE[Stark][i] {
	( -protect() );
	Stark
}
var Sansa = COLS
assert Arya / TABLE[COLS][( -COLS )] : "One can not simply parse himself"
def destroy(Hodor,y,x){
	-1;
	if(( --15 ) / ( ( foo(Hodor,ROWS) / destroy(destroy(),-( 860.1502 )) ) )){

} else {
	foo(protect(( ROWS - ( y ) ),--mislead(Jon) - -85));
	-TABLE[( Stark ) + COLS][-COLS]
}
}
def TABLE[( rule() )][i] {
	-35
}
var dog = ( --( dog + ( 0.57 ) * ROWS * ( COLS * TABLE[-7][ROWS] ) - mislead(x,COLS,( rule(-ROWS,0.31) ) + -foo(( bar(betray(--( ( ( dog ) ) ) * ( COLS ) * protect(Sansa,Stark),bar()),Sansa) + TABLE[( Ygritte )][0.54] )) + protect(TABLE[1][--0.28],-Hodor,--0.38)) ) )
def protect(dog,y,dog){
	Sansa *= mislead(-0.99,( ROWS ) + Jon);
	Sansa -= protect();
	dog += 60
}
def foo(Hodor,Jon){
	Jon += y;
	Sansa + ( -ROWS );
	Stark += ROWS
}
def TABLE[mislead()][j] {
	Jon
}
def TABLE[---( dog )][j] {
	if(( COLS - ( mislead(( ( COLS ) ),Sansa) ) )){
	( -0.2 );
	Hodor += 57;
	TABLE[TABLE[dog][Stark]][TABLE[COLS][rule(COLS,-48,Stark) + -dog / betray()]]
} else {

};
	if(destroy(( -TABLE[88][COLS] ))){

}
}
var Hodor = --Hodor + COLS - bar(( --x ),dog * foo(COLS)) - -COLS
var dog = -( y )
assert betray(TABLE[Arya][--TABLE[( ( 41 ) )][protect()]],( rule() )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = TABLE[TABLE[protect(-0.52 / x - -betray(TABLE[x][Ygritte]) - 4)][Ygritte]][-x]
var dog = betray(-0.37,protect(-COLS))
assert ( destroy(COLS,-TABLE[Hodor][-TABLE[Ygritte][TABLE[ROWS][y]] - rule(28) / -0.13 * -Hodor] + Ygritte + ROWS) ) : "What do we say to the Lord of Death?"
var Ygritte = 910.78
var Jon = y
def foo(Ygritte,Ygritte){

}
def bar(Jon){
	-COLS - 1
}
var Jon = protect()
def TABLE[-Stark * Jon / ( y - ---44 )][k] {
	if(-bar(0.78,( 18 ) / -4,0.08)){

};
	Jon -= -destroy(-TABLE[99][-TABLE[--57][( x )]] * Hodor - -63,COLS)
}
def mislead(Sansa,Hodor){
	Jon;
	( -betray(-destroy(COLS) / ( -betray(protect(-ROWS + x),TABLE[Sansa][-COLS * -37] + Sansa) ) + ( destroy(1000.016,-( ( 1 ) ),( -21 )) ) * destroy(0.45 + ( 980.8 * ( TABLE[TABLE[---1][--( -ROWS ) + --1]][-370.746] ) ) / betray()),( bar() - TABLE[dog / --bar() / COLS][-COLS] - --0.16 ) - -Jon,destroy(Arya) - foo(Arya,-( -0.39 ),-48) / ROWS - 0.69) );
	Jon *= ( ( ROWS ) )
}
def TABLE[COLS + -( Ygritte )][k] {
	ROWS;
	if(Sansa){
	if(-46){
	y /= x
} else {
	if(-rule(Hodor,protect(100.2) + ROWS - foo(TABLE[-protect(destroy())][COLS + bar(-1000.64)],( -TABLE[-COLS / Arya][1] ) / foo()))){
	if(Arya){
	Stark += Jon;
	if(COLS){
	dog *= ( -740.71 / 1 );
	Stark -= Ygritte / ( Ygritte )
} else {
	Ygritte += ( destroy(protect(COLS),TABLE[( TABLE[ROWS][Arya / 22] )][1],( -480.998 )) ) + Jon
}
}
};
	COLS
};
	y /= mislead(-79)
} else {
	if(protect(( rule(1,COLS) ),-x - COLS + 0.7)){
	( betray(ROWS) )
} else {
	dog += TABLE[-ROWS][COLS * COLS / Jon];
	dog -= Ygritte / COLS
};
	ROWS
}
}
assert -0.76 - destroy(--( -( -rule(( foo(TABLE[Hodor][Stark]) )) ) / ( Arya ) ),-10.99) / destroy(TABLE[( ROWS )][COLS],0.46) + mislead(TABLE[-1][( Arya / -0.22 )]) : "Fear cuts deeper than swords."
var Sansa = mislead(Arya)
assert bar(ROWS,( ROWS )) : "What do we say to the Lord of Death?"
var Jon = TABLE[--( 140.7948 )][Hodor]
var dog = ROWS - dog / rule(Sansa,Ygritte)
def rule(Ygritte,Arya,Sansa){
	y /= 1;
	Sansa -= ( COLS )
}
def protect(Stark){
	if(--bar(y)){
	Jon *= Sansa;
	if(-Arya){
	COLS;
	93;
	x -= ( 360.13 )
}
};
	( 570.403 )
}
assert Arya : "Nothing burns like the cold."
def TABLE[protect(Ygritte,0.29,foo(mislead(1,( Jon ),--ROWS),foo(ROWS,1),protect(( TABLE[betray()][x] ),( y ))))][j] {
	if(( -rule() )){
	if(( -( -COLS ) )){
	if(bar() / Hodor * TABLE[Jon][( dog )] - ( TABLE[-76 / ( -Arya )][( --( ( -TABLE[y][Sansa] ) ) / mislead(7,580.1,( ROWS )) + mislead(( -99 ) + ( --( Arya ) ) / -0.93,-45) )] ) - -0.89){
	if(destroy(-Ygritte)){
	Stark *= bar(rule(Arya));
	if(-destroy(TABLE[-56][rule(-ROWS / dog,( Ygritte ) / rule(-37) * 0.47)],bar(Sansa,TABLE[-0.62][( protect(0.49) )]) - -36 / -0.45 * Ygritte / destroy(( ROWS ),-bar()) * ( Arya * -( Jon ) ) * -78) - Stark * Ygritte / ROWS - ROWS){
	if(TABLE[-Hodor][-Jon]){
	Arya += TABLE[mislead()][bar(97)] + 0.29;
	if(-COLS){
	Stark *= 1
};
	TABLE[( ( TABLE[( 0.85 )][( rule(( -0.55 )) )] - ROWS ) ) - COLS][Hodor]
} else {
	Stark /= bar(( -62 )) + Stark;
	Sansa /= -Arya
};
	dog -= 1;
	if(Jon){
	Ygritte *= ( ( COLS ) )
}
};
	Sansa /= rule(0.82,betray(( --730.07 ),( x )))
};
	if(-23 / --75 / ( ( betray(protect(-1,( 1 ),( ROWS )),-0.39,-( TABLE[( dog )][Ygritte - -Ygritte] )) - TABLE[-dog][y] - ROWS * -( ROWS ) ) )){
	COLS
};
	( ( Jon ) + ( destroy(90,bar(( -bar(ROWS,--260.85) ),-94)) ) )
} else {

};
	if(41){
	TABLE[foo(( ( protect(TABLE[Sansa][y] + 74 + -y,COLS / 56) ) * -mislead(COLS,Sansa,ROWS) ),COLS)][Arya]
}
}
}
}
def TABLE[destroy() * -0.66][k] {
	if(foo(-580.79)){
	x -= bar(ROWS,Arya - -( -TABLE[-Stark / -COLS][COLS] ))
};
	-0.06
}
def bar(Sansa,x){
	if(ROWS){
	if(-ROWS - -0.63 + -0.57){
	if(betray(--protect(dog,-( x )),destroy(-7 - TABLE[--0.88][Jon - 9]))){
	dog *= Sansa;
	if(Sansa){

}
}
} else {

}
} else {
	Sansa *= -520.74
};
	Stark -= COLS
}
assert destroy(protect(TABLE[( mislead() )][-( ROWS )] + mislead())) : "Nothing burns like the cold."
var Arya = ROWS
var Hodor = --rule() + mislead(87,( ( COLS ) ) - Ygritte)
def TABLE[destroy(9)][j] {
	ROWS;
	Sansa -= TABLE[( ROWS )][-y];
	if(protect(( -mislead(-0.54,Jon) / -Sansa ),ROWS,-0.35)){
	if(-1){
	if(69){
	( COLS ) / --1 / -( ( x - TABLE[( dog )][destroy(( TABLE[COLS][Stark] ),( -91 ),Ygritte * -89 - Sansa)] - ( --TABLE[COLS][bar(protect(),TABLE[TABLE[ROWS][39]][( COLS + Ygritte )],ROWS)] ) ) / ROWS ) - 21
} else {
	if(-0.58){
	Hodor /= 0.43
} else {

};
	( -( Hodor ) )
}
};
	Arya /= Hodor
}
}
def bar(Hodor,x){
	if(--y){
	bar(ROWS,Ygritte / ( COLS ));
	-Ygritte
}
}
var Jon = --0.77
def TABLE[TABLE[( 10 - bar(-ROWS,-TABLE[ROWS + ( destroy(97) )][betray(--COLS)] / 0.44 - Sansa,-dog) ) * ---1][( betray(--bar(mislead(),bar(Ygritte,TABLE[( TABLE[dog][-( COLS )] )][Stark]) * ( ( ( COLS ) ) )) + -1) - Jon )]][k] {

}
assert 0.48 : "Nothing burns like the cold."
def bar(){
	Arya /= --COLS;
	( 340.1 )
}
def TABLE[-0.95][k] {
	protect(( ( ( 1 + protect(Ygritte,TABLE[( --39 )][-360.132]) ) ) ),mislead(( x ) / dog / mislead(y)),dog);
	-0.19
}
def TABLE[790.789 - 52 - Jon / Ygritte - ( rule(COLS / -y,COLS,Stark) )][k] {
	if(6){
	if(y){
	if(dog){

};
	y /= ( betray(-( ( -0.26 ) ) - Stark,x) );
	Stark /= 1
} else {
	if(( COLS )){
	Jon;
	-protect(TABLE[-1 / TABLE[Jon][1]][bar(( Ygritte ))])
} else {
	Sansa /= ( rule(820.6131,( Arya ) / 0.09,betray()) )
};
	if(-dog){
	if(( -0.43 )){
	ROWS
}
} else {
	dog
}
};
	dog;
	if(-0.42){
	if(-Jon){
	if(COLS){
	if(Sansa){
	betray(COLS,1);
	x += -840.549
};
	if(-1 * -bar() * protect(Ygritte) + Ygritte - ROWS){
	( ROWS );
	y += ( betray(0.36,Jon) );
	--190.676
} else {
	y;
	( mislead() / mislead() ) + ( protect(ROWS / Arya / Arya) );
	( TABLE[dog][foo(14,Hodor,( -TABLE[( 210.73 ) - -66 + foo(-bar(y))][destroy(COLS) + ( rule(1) )] ))] )
};
	Arya /= 0.86
} else {
	betray(TABLE[--1][TABLE[bar(( COLS * betray(Sansa,TABLE[betray()][( mislead(ROWS) )]) ))][1]]);
	y
};
	dog /= rule(COLS,Stark,mislead(--Sansa,( ( y ) )))
};
	Jon *= -0.39
} else {
	Stark -= ( ( ROWS ) ) / rule(x) + ( -ROWS );
	COLS
}
} else {
	if(protect(-ROWS,-Hodor)){
	if(( -Ygritte )){

}
} else {
	Stark /= COLS;
	if(1){
	Sansa -= Sansa;
	-destroy(-28 + TABLE[betray() - --TABLE[-Stark][( --850.66 )] / ( 0.89 )][-( y ) - protect(0.5,--Jon,foo(-0.64,--0 - -0.3 / ( dog )))] / 42);
	Ygritte *= TABLE[protect(200.65,( ( COLS ) ))][TABLE[mislead(( ROWS * y ),destroy(COLS,-Hodor))][COLS]]
}
};
	x *= 0.6 * -0.52 * 0.73
};
	( COLS )
}
def betray(Stark){
	if(-0.23){
	if(-310.45){
	destroy()
}
} else {
	( -690.9 )
}
}
def destroy(Ygritte,Hodor,y){
	if(( -95 )){
	0.39;
	Ygritte *= TABLE[( x )][( Arya )];
	-Arya
} else {
	Arya += ( mislead() )
}
}
def foo(x){
	if(( ( Ygritte ) )){

} else {
	if(TABLE[( rule() / y )][Sansa]){
	dog -= COLS;
	-95 / destroy(-COLS - y,-54) * TABLE[protect(( -Ygritte ))][rule()]
};
	Sansa += ---y
};
	-( ( mislead(mislead(ROWS,rule(betray(-( 25 )),-1,( -59 ) + -( foo(-Hodor) ))),protect()) - ( TABLE[--510.3][( --1 )] ) ) )
}
def rule(y,Stark){
	Hodor -= Arya;
	if(-TABLE[( 0.29 - 0.14 )][betray(-29 - bar(y,bar()) / 910.4718)]){
	if(mislead(rule(destroy(0.75,rule(( dog )),240.707)))){
	if(( bar(betray(rule()),Jon) ) - ( -( betray(COLS) ) )){
	if(( ( x ) )){
	TABLE[protect() / mislead(Stark / -Arya - 36 + Jon,( ( 0.36 ) )) / -foo(( Hodor + TABLE[-Sansa * Jon / destroy(bar(Arya,TABLE[ROWS][-1 - destroy() - COLS / ROWS - -1 * dog - ROWS - TABLE[--x][--870.46 - -840.793]],foo(Sansa) * -Arya)) + ( y * -( -0.14 ) )][ROWS] ) + Hodor / TABLE[-18][( -COLS - ( ROWS ) / mislead(ROWS) )])][-Stark + -0.97];
	if(Jon / 21){
	( rule(ROWS) ) * --1 + -Hodor
} else {
	14;
	mislead(( -rule(COLS - -1 / -76 * -( TABLE[Arya / ( 82 )][0.62] ),TABLE[-0.85][-COLS]) ),0.35 / --( -TABLE[( TABLE[0.37][Stark] / Jon )][dog] ) * ROWS,rule())
}
} else {
	Jon += 73
};
	Sansa += x
} else {

};
	if(y){
	Stark *= -( foo(( --( -0.28 ) ),Stark) ) - COLS / destroy(-foo(y,( 42 )))
} else {
	Stark /= ---100.931
}
} else {

}
}
}
def protect(Jon){
	x /= ( rule(( COLS + betray(Hodor,COLS) )) )
}
var Arya = dog
def foo(y){
	if(rule()){
	if(--36){
	if(ROWS){
	if(0.47){

} else {
	Arya;
	if(( 96 )){
	x
}
};
	--( ( rule(-42,COLS,ROWS) ) )
} else {
	if(Arya){
	y += destroy(--( COLS ));
	if(40.11){

}
} else {
	if(y){
	x;
	Sansa /= x
} else {
	0.4
};
	if(Arya){
	Sansa;
	Stark /= -( Ygritte + ROWS )
} else {
	( COLS );
	Arya += -COLS
}
}
}
}
} else {
	if(-120.8947){
	if(-92){

};
	Arya /= -( foo(ROWS,Sansa) )
}
}
}
def mislead(dog,Jon){
	-bar(( -ROWS ));
	foo(---Stark - TABLE[Sansa][TABLE[destroy(0.2)][( ROWS + TABLE[Hodor][-( foo() ) + -COLS * Arya / 80.73 - TABLE[-730.875][Jon] * bar(( ( ROWS ) ),-0.81 * Jon) / ( foo(Arya) )] )]],x);
	if(ROWS){
	y += 10
}
}
var Hodor = TABLE[( mislead(ROWS) ) * Hodor][x]
var x = protect(COLS)
def foo(y,dog){
	y -= Sansa;
	Stark -= x
}
def rule(x){
	1
}
var Sansa = protect(-ROWS)
def TABLE[foo(-0.5)][i] {
	dog += dog
}
var Hodor = mislead(( -COLS ) / --ROWS + Hodor / TABLE[dog][( x )] - rule(( TABLE[-COLS * 1][Ygritte] ),rule(Jon,19)) - ROWS - ( -ROWS - dog + -0.91 ) - ROWS,Sansa)
var y = x
def TABLE[foo(( Arya ),-0.31)][j] {
	x /= COLS;
	Jon -= Hodor;
	COLS + Ygritte
}
var dog = -rule(-Hodor - -destroy(x) - ( rule(-1 / Stark / mislead(dog)) ) - 7)
def bar(Stark){
	41;
	0.6
}
assert TABLE[Hodor][bar()] : "One can not simply parse himself"
assert dog : "Winter is coming"
def TABLE[-y * bar()][j] {
	y /= ( -betray() )
}
def rule(Arya){
	Sansa /= y;
	-( y * COLS );
	if(protect(( ROWS ),TABLE[-350.5246][TABLE[Ygritte - ( ( rule(dog * -betray(1,ROWS),protect(Stark,Jon,--62 + ( -( dog ) ))) ) + TABLE[24][ROWS] )][mislead(ROWS,60) / x]])){

}
}
def protect(Hodor){
	-( destroy(destroy()) * -1 );
	if(Stark){
	if(( COLS )){

} else {
	y += ( 400.88 );
	destroy(-foo(COLS) + destroy() + -ROWS - Hodor,betray(),-87)
};
	Sansa *= Hodor
} else {
	if(( destroy() * COLS - TABLE[ROWS][-( ROWS )] )){
	if(-1){
	if(-x){
	if(x){
	if(x){
	0.04;
	if(y){
	-( -destroy(( 210.034 )) - -Ygritte ) / dog;
	Arya -= ( -ROWS )
}
};
	if(( -rule(ROWS,-rule(( mislead(Sansa,31) ),dog,protect(-protect())),Stark) )){
	if(TABLE[-COLS][--( -Ygritte ) + --rule(foo(COLS,( foo(( protect() ),( foo() ),betray(betray(),Hodor,-protect()) * protect()) )),-Jon) - -88 / --Hodor]){
	if(Hodor){

} else {
	y += 1;
	( dog );
	TABLE[0.82][mislead(( 79 + Stark ),Jon)] - 1
}
} else {
	if(0.72){
	if(( 0.87 )){
	rule(-860.7735 / ( foo() ));
	Jon /= TABLE[( -12 )][( --28 )]
}
} else {
	COLS - ( x );
	Jon -= rule(COLS + TABLE[Jon][ROWS],COLS)
}
};
	Stark /= x
} else {
	( -1 );
	if(-1){
	if(30){
	( ( COLS ) )
} else {
	-COLS + --0.84;
	if(--2){
	y -= TABLE[ROWS][ROWS] / ROWS / --Sansa / foo(Hodor) + ROWS * ROWS
} else {
	Hodor /= destroy();
	if(Jon){

} else {
	if(( TABLE[foo()][ROWS] / TABLE[Ygritte][-protect(0.66,-Jon - foo(( Ygritte ) + TABLE[-dog - dog][( COLS )],-76))] )){

} else {
	TABLE[( bar(( ( -dog ) ),-0.83) )][( rule() ) + -55] - 0 / TABLE[-1][TABLE[protect(( -TABLE[--22 + ( ( -0.52 - TABLE[protect(( --0.76 - mislead(--COLS,TABLE[180.9 - ROWS][-0.37]) ))][Ygritte] ) ) * Arya - protect(-1 * 1)][dog] ))][betray(-COLS,-0.82,COLS)]];
	if(1){

} else {
	Ygritte -= ( COLS );
	-0.74
}
}
}
}
};
	if(x){
	dog -= 0.07;
	rule(( ( -( -1 ) ) ),Ygritte)
}
}
};
	y *= COLS
};
	( ( ( ( ( Jon * destroy(( 0.52 * --TABLE[( 98 - -0.89 )][Ygritte] ) + ROWS,Arya) ) ) ) ) );
	Ygritte += bar(bar(-COLS,-0.1))
} else {
	if(-ROWS + y * -0.57){
	dog *= ( Ygritte + -mislead(COLS) )
} else {
	Sansa -= -0.54;
	Sansa *= Sansa
}
};
	x *= ROWS
} else {
	if(-0.37){
	( -160.5 );
	Hodor += protect(mislead(mislead(-( Ygritte ),Arya),-0.5,Jon));
	( Sansa )
} else {

};
	x *= Stark
};
	dog /= -0.65
};
	Hodor -= ( -mislead(Arya) )
}
}
var Ygritte = 0.9
def TABLE[TABLE[-( -1 ) + bar() / ( betray(ROWS,( bar(1) )) + mislead() ) / TABLE[( ( ( TABLE[destroy(mislead(--( protect(61) ) / -betray(dog,0.63)) - -1)][Sansa] ) ) )][TABLE[destroy(95,-ROWS,Stark) / destroy(foo(TABLE[0.73][protect(0.27,-protect(y,COLS),-36)] * destroy(( Arya ),ROWS))) * Arya][-1]]][( -protect(-24,COLS) )]][k] {
	dog *= ROWS
}
def TABLE[-( COLS ) / betray(Ygritte) + COLS][k] {
	if(-ROWS){
	1;
	x += COLS
}
}
assert Arya : "Winter is coming"
assert protect(Jon + protect(-( -( -1 / Jon / --99 ) ),ROWS),--Ygritte) : "What do we say to the Lord of Death?"
def TABLE[Arya][j] {

}
def TABLE[( betray(-( mislead(-69 + 1,ROWS) - ( ROWS ) ),0,mislead(COLS,ROWS,-Ygritte / ( COLS ))) )][k] {
	Sansa /= Jon
}
def TABLE[ROWS][i] {
	if(rule(( y ),--foo(0.8) / Sansa)){

} else {
	if(1){
	if(44){
	if(ROWS){
	Sansa *= -0.82
};
	-1;
	-49
};
	Jon *= y;
	if(( COLS )){
	if(1 + ( -1 )){
	if(ROWS){
	Sansa += betray(-0.82);
	if(( -Jon - COLS )){
	if(ROWS){

};
	if(Arya){

} else {
	Ygritte /= Hodor
}
}
}
} else {

};
	if(( -( ( destroy(Stark,mislead(),---mislead(foo(),Arya - --TABLE[--COLS][( COLS )])) ) ) / -mislead(ROWS,--1) )){

}
} else {

}
} else {
	( -betray(Arya - ROWS) )
}
};
	Ygritte -= Sansa;
	ROWS
}
assert Hodor : "Nothing burns like the cold."
var Jon = 0.52
def betray(x){
	protect(Stark,( 490.83 ));
	if(1 * ( x * ( -0.66 ) )){
	Sansa -= Jon - ROWS
};
	if(-Stark){
	-19;
	if(-TABLE[Jon][Stark]){
	Sansa /= destroy(( COLS ),bar(protect(),-0.77,( -Jon )));
	y /= -COLS;
	Hodor += COLS
} else {
	if(-0.55){

};
	y -= ( destroy(TABLE[COLS][( Stark )],destroy(destroy(63,--250.549),destroy(-0.82))) )
};
	if(-0.16){
	if(-COLS){
	( Ygritte );
	Hodor -= 0.09
};
	dog /= COLS
} else {
	( -Jon );
	Ygritte += mislead()
}
} else {

}
}
def TABLE[( -ROWS )][k] {
	-COLS;
	Stark *= TABLE[destroy(ROWS,( ( Hodor ) ) * mislead(( ROWS ),TABLE[TABLE[( COLS )][Jon / Hodor + mislead(Jon,-1)] - TABLE[y][( 0.79 )] - Stark][-dog]),-31)][COLS]
}
def TABLE[COLS][j] {
	Stark += COLS
}
var Sansa = --( ( -foo(( 1 ) / bar(protect(Hodor)),TABLE[Arya][( 50 )] * y,-Hodor) ) ) * -11 / -Hodor * -0.51
def TABLE[Hodor][k] {
	x -= destroy(bar(Jon + 0.64),200.5,-y)
}
assert x : "Nothing burns like the cold."
var Hodor = -COLS * Jon + -betray(mislead(( ( ROWS ) )),( --( -Arya ) - 0.52 ))
var Jon = ( dog - foo(COLS,( foo(ROWS,-ROWS) ),dog) )
def TABLE[-( betray(( -( Jon ) - ( --560 ) ),mislead(-950.7,TABLE[Hodor][-60]) - COLS) )][j] {
	( -y - Hodor );
	if(( TABLE[ROWS][( -ROWS )] - destroy(-foo(),-destroy(-ROWS)) )){
	x
} else {
	y /= ( TABLE[340.596][Hodor] )
};
	dog += y * TABLE[Stark][destroy(TABLE[TABLE[( destroy(y) )][( Arya )]][( foo(-0 * TABLE[betray(ROWS,Stark,( Sansa ) - -TABLE[( ( ( destroy(COLS,-0.63) ) ) )][( betray(COLS * -mislead(betray(( --1 + -0.46 ) + ROWS,( bar(-25) ),TABLE[-COLS][-( 0.07 - y ) + Jon] + -57),protect()) / Jon) + COLS )])][COLS],310.36) )],ROWS + rule(TABLE[-1][( Sansa )],destroy(betray())) + foo(rule(),betray(x,COLS)),--( Ygritte ) + -18)] - -Stark + --Sansa
}
def bar(Sansa){
	Stark *= TABLE[protect(-580.71)][COLS];
	Sansa *= TABLE[COLS][protect(betray(),Hodor)]
}
def TABLE[( -betray(1) - betray(-( ROWS / ( -100.7911 ) ),-TABLE[rule(( 57 * ( 41 ) ) - Hodor,COLS,( ROWS ) - TABLE[-640.2][( ROWS )])][-TABLE[Stark / TABLE[protect(( Sansa ),destroy(1) / -18)][1] - COLS][( -ROWS ) / mislead(-Ygritte,-0.25 - x * betray(( 0.27 ),Hodor - COLS / Ygritte * x))] - destroy(bar()) - -rule(---mislead(75) / ( -( Sansa ) ) * Stark)] * ( foo(-foo(betray(( foo() ),destroy(TABLE[260.543][COLS],( dog / 790.6489 ))),-33)) ) + TABLE[TABLE[TABLE[rule(( ( ( ( rule(72,rule(95)) ) ) ) ),Hodor)][rule(Arya,Arya)]][Jon]][rule(( -TABLE[22][-58] ),Hodor)] + -y) )][i] {
	if(1){
	Jon += -1
};
	y -= Ygritte
}
def TABLE[-0.88][i] {
	Sansa -= Hodor * y;
	Hodor -= Stark;
	mislead()
}
def TABLE[ROWS][i] {
	Hodor += ( ( -0.5 ) ) + ( -mislead(COLS) );
	if(TABLE[betray(Sansa)][Sansa]){
	if(COLS / -Ygritte){
	dog /= Jon;
	TABLE[Stark][TABLE[-1][( Sansa )]]
}
}
}
var Stark = Ygritte
var Ygritte = ( ( TABLE[( TABLE[-betray(foo(bar(),COLS),-( TABLE[COLS][-1 - ---Arya] ))][COLS] )][y] ) ) / -0.79
def betray(Ygritte){
	TABLE[Stark][61]
}
var Jon = -4
def mislead(x,Arya){
	if(Jon){
	Hodor -= --x * --ROWS + Stark * 56;
	if(--1){
	dog += bar(( ( 25 * ROWS ) ),destroy(ROWS) + x);
	TABLE[( y )][foo(ROWS)]
} else {
	COLS
}
} else {
	Stark *= -0.61
};
	Ygritte /= ( Arya )
}
def betray(){

}
var x = Hodor
def mislead(dog){
	Sansa -= -93;
	Stark -= COLS;
	Jon += destroy(Jon + 0.13,betray() + ( bar(( -destroy(( ( ( ( COLS ) ) ) ),( ROWS ),-Hodor) )) ))
}
def mislead(){

}
var Jon = Sansa
assert protect(ROWS,( dog ) / TABLE[24][40]) / -COLS * ( TABLE[-ROWS][bar(-38,( rule() ),0.7 - protect(Hodor,-ROWS,COLS))] ) : "One can not simply parse himself"
var Jon = rule(-1,-( -Stark ))
def TABLE[--0.56][k] {
	if(y){
	Arya;
	if(-ROWS){
	Sansa / 2 - mislead(TABLE[Stark][TABLE[-100.231][Stark] / --( 24 )]);
	-mislead(dog) + betray(foo(TABLE[( 0.68 )][( -0.98 + COLS ) + -TABLE[Jon + COLS][--Sansa]]))
} else {
	bar(mislead(-96,destroy(-( foo(TABLE[-y - ( TABLE[-320.1976][( COLS )] - -390.77 * y * TABLE[TABLE[COLS][( -y / -370.6 * destroy(-1) )]][Sansa] ) + ( ROWS )][x],Ygritte) ),mislead(( COLS ) - -( Jon ) / ROWS,rule(0.3),-750.172))));
	destroy(0.86,foo(TABLE[Sansa * bar(Stark,-820.22)][ROWS],--bar(( COLS ),betray(( protect(Stark,Arya,( ( destroy() - Hodor * 84 ) )) + ROWS - 29 / COLS ),-Ygritte - -TABLE[Sansa][-Sansa + y * destroy(( -0.77 )) - ( Ygritte * ( ROWS ) ) + ( ROWS )])),1) - ROWS,mislead(-100));
	Jon /= -33
};
	-0.43
};
	( dog / ( 7 - ( Stark + ( Ygritte ) ) ) );
	if(COLS){
	if(COLS){
	if(dog){
	if(destroy() - -1 / bar(TABLE[ROWS][( 94 )],betray(( betray(-0.55,( -destroy() )) ),57 * -0.95 + Arya),( ROWS - foo(( -dog ),betray()) ) + 0.91)){
	protect(Jon,-( foo(betray(--0.82,protect(( destroy(0.74 * bar(destroy(57,78),( Sansa ) + ( ( ( Jon ) ) )),rule(Hodor,( -1 ))) )) - ROWS,89),dog,betray(-protect(COLS,y,COLS))) ));
	Ygritte *= -940.7;
	Hodor *= ROWS
}
}
}
}
}
def foo(){
	Sansa + -0.9;
	Sansa /= -0.6
}
assert ( -bar(rule(),foo(-0.3,TABLE[-0.23][bar(ROWS / ROWS / --57)])) ) : "What do we say to the Lord of Death?"
def TABLE[-( destroy(-ROWS * ( -destroy(ROWS) / -4 ),-y,x) )][k] {

}
def betray(Jon,dog){

}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-TABLE[-85][-protect(-0.47)]][j] {
	if(protect(-Stark - ( TABLE[TABLE[0.01][-dog]][ROWS] ) - x) / Ygritte){
	-180.37
} else {
	bar(( bar(( ROWS )) ))
}
}
assert rule(-310.763) : "Fear cuts deeper than swords."
def TABLE[bar(bar(-0.61,-( -destroy(-59 - ( ROWS ),1) ) - Ygritte),-34,0.26)][i] {
	Stark /= COLS
}
def TABLE[dog][j] {
	Hodor += -COLS;
	x /= TABLE[0.11][( Ygritte ) + -bar(x) * bar(Ygritte * 0.35 + ( COLS ) / TABLE[TABLE[-98][-betray(TABLE[( 91 ) * betray(-y,Ygritte - -ROWS)][-protect()],Sansa,-Jon)]][TABLE[( 2 )][mislead(--130.78,TABLE[dog][ROWS * ---14 - -0.6])] / destroy(( ( COLS ) )) + -10 * ( 1 )],( Sansa - ROWS )) - -0.2]
}
var Jon = --Hodor
def TABLE[foo(--rule(-Hodor),--mislead(-1,foo(( ( ( dog ) ) ),( 670.354 + --0.11 / -1 / rule(( Hodor ),ROWS) )))) / Arya - dog * protect(-bar(COLS),( -dog )) * protect(1,( Jon ),-betray(( Stark + 0.83 - Hodor )))][i] {
	-betray(TABLE[-ROWS][330.7]);
	if(ROWS){
	Hodor -= -( -1 );
	y *= x
}
}
def foo(Stark){
	destroy(Arya,Ygritte,-foo(-y,protect(rule(42,ROWS))));
	COLS;
	if(betray(TABLE[--93][protect(TABLE[-79][( Hodor ) * -0.02])],Stark)){
	dog + Arya;
	Arya *= ( Jon / ( -foo(-Hodor) ) + -Hodor * -COLS );
	Jon += destroy()
}
}
def TABLE[foo(( ( -( TABLE[bar(ROWS,-( ROWS ),foo(betray(ROWS,bar(TABLE[Hodor][mislead(dog - Arya * ( ( 13 ) ),TABLE[( -( --protect(( betray(--27) ),( 0.76 ),dog) * ( ( dog - destroy(( y ),-COLS) * bar(destroy() / -1) - betray(y,-y,TABLE[-rule(-ROWS + Arya,mislead(COLS))][-91]) ) ) * x ) )][TABLE[-protect(920.9 / Arya,( Arya ))][( ROWS )]],TABLE[Hodor][betray(-46)])],destroy()),COLS)))][( destroy() )] ) ) ),( ( -32 ) ),Arya)][i] {
	Arya /= COLS
}
def betray(Hodor,Ygritte){
	if(56 - -( ( Jon ) ) - TABLE[490.9][-TABLE[Stark][-betray(-18,Arya) - ROWS] / bar()]){
	betray(foo(-Hodor) - ROWS,680.5) - -rule(---1)
};
	if(( COLS )){
	( ( ROWS ) );
	if(( 0.63 )){
	if(0.42 - protect(Sansa,-betray(( ( Ygritte ) ) - protect()) * ROWS,-Jon)){

}
}
}
}
var Arya = -1
var Arya = bar(( 1 ),bar(),Sansa)
var Sansa = COLS
def TABLE[Hodor / ROWS][i] {
	Arya *= ROWS
}
def TABLE[bar(Jon,( ROWS )) / COLS * ROWS][i] {
	-betray(-1,0.63)
}
def mislead(x){

}
def TABLE[ROWS][j] {
	if(-ROWS + TABLE[COLS - -78][ROWS] + Ygritte){
	dog /= -ROWS
}
}
def bar(Stark){
	Sansa += mislead(--( --ROWS ) - ROWS) / -foo(ROWS);
	if(-0.53 * 18 * ( -31 )){
	if(--foo(destroy(COLS,TABLE[-rule(rule(ROWS)) + 0.09][Arya] * bar(destroy(Jon,Arya),Arya) + ( ROWS )),TABLE[-bar()][-( -dog - -x )]) * ( -( Jon + rule(destroy(( Arya ) * 920.85 + ( 26 + -ROWS ) + ---0.19 - betray(( TABLE[-0.34][COLS] ) + Stark),-71),COLS) ) )){
	if(-0.1){
	if(Hodor){
	Arya
} else {
	-8
};
	Ygritte -= -foo() + Arya - -( Arya ) * mislead(--y) - Arya / Hodor / 0.66
} else {

};
	if(-COLS / --ROWS){
	-TABLE[-790.639][Arya];
	if(12){
	Hodor -= ( ( Arya - ROWS ) );
	Sansa /= ( protect() / -0.44 / -27 - foo(y,( COLS ),( ( protect(bar(foo())) ) + 79 )) * -foo(( ROWS / -TABLE[-( destroy(( rule() )) + ( bar() ) )][-0.83] - -bar(-COLS * -ROWS - -( rule(-99 * -rule()) ) * COLS,--( -TABLE[( -Hodor )][-1] )) / x ),dog) );
	Ygritte -= COLS
} else {
	protect(100.55)
}
}
};
	x *= ( Stark - 0.88 )
} else {
	if(-TABLE[foo(78,-94,Hodor) * TABLE[( --mislead() ) * x][TABLE[--( bar(--Sansa) )][ROWS * ( Sansa )]]][( -910.754 ) + Arya - TABLE[Stark][COLS] / ROWS / -( -TABLE[-63][-ROWS] )]){
	x -= -0.95;
	Arya -= ROWS;
	Ygritte
};
	if(y){

} else {
	Ygritte *= ( TABLE[( --0.6 - Arya ) + Sansa - -mislead() / COLS][( -820.3 )] )
}
}
}
def foo(Ygritte){
	if(destroy(( ( betray(rule(-( --0.91 ))) ) ) + y * Hodor / dog / foo(destroy(87,-( --dog ),rule(-1,0.45,COLS))),( Ygritte ),Sansa) / rule(betray(TABLE[0.78][--Ygritte],0.98)) + Sansa){
	if(x){
	--1 / Sansa
} else {
	Ygritte /= 1
}
}
}
def destroy(Sansa,Jon,y){
	Stark -= bar(-betray(TABLE[x][-foo(( bar(-75,TABLE[Hodor][( betray(---49 - Arya,-210.772,--COLS) )] + ( 0.42 ) / ( Arya * ( COLS ) ) - Stark - mislead(TABLE[--( -610.8655 / y )][( -0.56 )],TABLE[Stark][-COLS] + Sansa,foo(-TABLE[bar(TABLE[TABLE[-dog][( ROWS )]][Ygritte],ROWS)][-bar()]))) )) * -0.92]));
	( 50 );
	Jon *= ROWS
}
assert --( COLS - foo(COLS,protect(),( -1 )) - Hodor + -( destroy() ) ) - ( TABLE[COLS - mislead(-1,( COLS ),-bar(COLS,x,( ( rule(---0.41 * protect()) ) )))][COLS / ( ( mislead() ) )] ) : "Winter is coming"
var Jon = ( TABLE[--1][( 31 * ROWS )] )
def TABLE[dog][j] {
	Arya *= TABLE[COLS][TABLE[y][--950.49]];
	x
}
def bar(){
	if(rule(Hodor) * ( ROWS )){
	COLS;
	Hodor
} else {
	Stark *= Ygritte
};
	y += y
}
def foo(x){
	-rule(( Hodor ) + 0.28 / -( COLS ));
	destroy(COLS - ( ( rule(dog,-destroy() * ( -73 ),( ( Stark / betray(dog) ) ) + 0.67 * COLS) + Ygritte / -ROWS + 890.16 ) )) / Jon
}
def betray(x,y){
	mislead(ROWS / bar())
}
def TABLE[-1][i] {

}
def protect(Stark){
	if(( --93 / destroy(Hodor) )){
	Sansa;
	bar(ROWS)
} else {
	Ygritte /= 1;
	-( Sansa / 0.09 * -betray(TABLE[bar(-destroy(( ( ( -TABLE[bar(-( 850.105 ))][-810.3] ) + --TABLE[14][( ( -dog ) )] * ( -ROWS ) ) - Stark ),dog),x)][( -Sansa )]) )
};
	Stark -= --ROWS
}
var Sansa = --1 - -ROWS - foo(dog,TABLE[bar(COLS)][( ( y ) )] / -ROWS) - destroy(( ( -110.5121 ) * COLS ) / Jon)
def foo(Arya,Ygritte,dog){
	Stark *= ( ( --betray() + Jon + ROWS ) );
	Jon *= Jon
}
def TABLE[---Arya / ( 0.23 )][j] {
	if(protect(rule(rule(( Ygritte )),-0.17),Hodor) - 450.7){
	if(TABLE[-37][--26 / COLS] / 0.69){

};
	Stark -= ---destroy(bar() * foo(destroy(TABLE[COLS * ( -0.53 )][Hodor],TABLE[protect(--0.6 / -( ( -1 ) ) - Stark + ROWS * ROWS + TABLE[( COLS )][TABLE[( Arya )][-410.64]],1) * Hodor][-0.72],Stark),-( ( -40.6 ) ),-1) * ROWS) / betray(-52,0.28) + mislead();
	x += dog
} else {
	Sansa += ( -( rule(( rule() ),-TABLE[1][foo(( --0.88 )) - ( ( y ) ) + -ROWS + -74],Jon) ) / ( --0.7 ) );
	x /= -0.7 + ( COLS );
	-19
};
	Ygritte += ( TABLE[Jon][( -1 ) / rule(foo(( ( Hodor ) )),0.68 / ( -1 ))] )
}
assert ( Sansa ) : "Nothing burns like the cold."
assert 0.01 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(){
	if(ROWS){
	--1;
	if(-Arya){
	if(COLS){
	y /= -0.06 - Ygritte;
	if(x){

}
} else {
	if(-Sansa){
	if(COLS){
	foo(TABLE[ROWS][destroy(( ( rule(( dog ),y) ) ))]);
	Ygritte += -60;
	Stark *= ( -( ROWS ) )
} else {
	COLS;
	dog -= 20
};
	Arya += COLS + Jon - dog
} else {

}
}
} else {
	COLS - --0.06
}
}
}
var dog = TABLE[( ( 11 ) )][betray(1,bar())]
assert ROWS : "Nothing burns like the cold."
var Sansa = 0.7
var dog = ( ( -destroy(Jon + -640.358) ) )
def betray(x,Hodor){
	Stark *= rule(-1,-0.97)
}
def foo(Sansa){

}
assert COLS : "One can not simply parse himself"
def TABLE[TABLE[( Ygritte )][destroy(( -1 )) - Hodor]][k] {
	Ygritte /= --COLS
}
assert ( ( COLS ) ) : "Nothing burns like the cold."
var Stark = ( protect() * -TABLE[betray(dog,--Hodor,mislead())][Sansa] )
assert Hodor : "Fear cuts deeper than swords."
assert -1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( COLS - ( ROWS ) )][k] {
	if(TABLE[ROWS][-850.61] - ( ( protect() ) ) / COLS + TABLE[( ( Hodor ) )][betray(betray(-0.47 * Arya,TABLE[x][30.39]),protect(( 0.47 * ( ( -( ROWS ) ) ) - -betray(-Jon,( Hodor )) )))]){
	Stark /= -Ygritte / -80.5;
	if(-ROWS * Stark - -ROWS / ---( 0.25 ) * ( rule(bar(TABLE[( ( -0.66 ) )][Stark])) )){
	if(COLS){
	dog *= -1
} else {
	Ygritte /= Ygritte;
	83
};
	if(Arya){
	dog *= bar(-0.95,betray(TABLE[TABLE[--590.2722][( -46 )]][-0.8],-570.06,650.36));
	Hodor;
	x *= foo(80,ROWS)
} else {
	if(-23){
	-10 - -Ygritte
}
}
}
}
}
assert Hodor : "Fear cuts deeper than swords."
def TABLE[Hodor][i] {
	-Stark
}
def TABLE[Arya / COLS][k] {
	Hodor *= y
}
def TABLE[Ygritte][j] {

}
var Ygritte = COLS / Jon + COLS
def TABLE[( -0.98 * ROWS )][k] {

}
def destroy(dog){
	y -= Hodor / -Arya
}
def foo(){

}
def TABLE[dog][k] {
	if(betray(--protect(-TABLE[( COLS )][betray(COLS)]))){
	if(( bar(protect(( -protect(Ygritte,-foo(ROWS / ( -destroy(-13,protect(protect(bar(dog,0.62 - TABLE[y][Ygritte] * COLS) - rule(-1,TABLE[protect()][y]) + -26 / Sansa,-0.24 + COLS))) )) * -y) + ( ( -( protect(--Jon,-TABLE[( Ygritte )][-1],-rule(( 5 ),--0.71 * foo())) ) ) ) - ( -1 ) ))) )){
	Ygritte /= bar(Stark,foo())
} else {
	Jon -= destroy();
	Stark;
	11
}
} else {
	Stark += betray(Jon,-dog);
	if(TABLE[y][-ROWS] - ( -450.44 + mislead(betray(0.46)) ) + Jon){
	y /= Hodor;
	0.23;
	Stark += ROWS
};
	Ygritte += foo(Arya,x,ROWS)
};
	if(( -betray(--1 * mislead(mislead(-COLS),Hodor,foo(mislead(),bar(TABLE[COLS + -44][ROWS + ( -Arya ) - y],TABLE[COLS][destroy(TABLE[x][Jon / -57])])) + ( bar(TABLE[-55][COLS]) ) + mislead()) + -70,-0.2) / --Sansa - ( ( COLS ) ) )){
	dog -= Ygritte
};
	ROWS
}
assert ROWS : "What do we say to the Lord of Death?"
def foo(Stark,Stark,Sansa){
	Ygritte;
	Hodor -= TABLE[--61][Sansa]
}
def TABLE[( -1 ) + ( COLS * Arya )][i] {
	if(-0.89 + betray(-COLS - ( ROWS )) / -67 + ROWS){
	if(protect(Hodor)){
	if(Jon){
	y -= ( 0.13 );
	Stark /= -( Stark );
	-Jon
};
	if(-Jon){
	dog *= bar(13) / 94 * --1 - ( TABLE[-0.35 / COLS / -26][protect(ROWS)] * 0.88 ) - ( COLS );
	Sansa -= Jon
}
}
} else {
	if(bar(bar(mislead(y,( foo(( COLS ),ROWS) * ROWS )) + rule()))){
	--0.77 * -97;
	if(mislead(Sansa)){

}
};
	x -= Ygritte
};
	Sansa /= -x + -55
}
def betray(){
	TABLE[250.84][-1]
}
assert ROWS : "One can not simply parse himself"
assert Hodor + mislead(-490.54,foo()) : "One can not simply parse himself"
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Sansa][j] {
	if(-TABLE[Hodor][ROWS]){

} else {
	protect(2,COLS,90)
}
}
var dog = Arya
def protect(Hodor){
	Ygritte -= TABLE[0.78 - ( bar(( 510.86 )) )][80];
	if(0.67){
	if(-0.84){
	Arya *= -0.14
} else {
	betray(COLS,COLS);
	--1;
	ROWS
}
} else {
	if(TABLE[Sansa][( mislead(rule(( COLS ),1),rule(x,Stark),( dog )) ) * 0.78]){
	y *= ( foo(ROWS,betray(foo(Ygritte * betray(-mislead(( ( dog ) )) / bar(Ygritte,-Arya,( TABLE[x][ROWS] )),-ROWS)))) * 100.907 ) / 27 * -Stark + foo(( COLS )) * rule();
	rule()
};
	Arya *= betray(COLS) / ( Arya ) + COLS;
	if(destroy(foo(( 57 ),-10 * ( ( Ygritte ) ) - -12) + -0.1,( ( ( ROWS ) ) / Jon ))){
	Ygritte
} else {
	mislead(foo(betray(),( -COLS )) + --x * --47,Stark,foo()) / TABLE[-Arya * -bar(rule(x),Jon / -1,mislead(ROWS,protect(ROWS),470.8 + -TABLE[( bar(TABLE[( -1 )][-580.1]) )][betray(Jon)]) / x) - --destroy(0.93 - -dog + -1)][x];
	if(TABLE[Hodor][--60 / 64] * ( ( --0.17 ) )){
	y += 21;
	( rule(( Sansa ),destroy(mislead(-( COLS )))) - -Ygritte );
	-1
}
}
}
}
assert TABLE[Jon][( Ygritte + 930.497 * Sansa * COLS )] + -foo(Jon,ROWS) : "What do we say to the Lord of Death?"
def destroy(Sansa,Arya,Sansa){
	x;
	if(Jon){
	if(destroy(foo(Arya,betray(betray(--foo(-mislead(Hodor,TABLE[-Arya / COLS][( -ROWS )]),( ( Hodor * -0.46 ) )),dog),( mislead(COLS,-0.8 + -rule(( --1 ) + COLS)) ),( x ))),-140.36)){
	Jon + -betray(-Arya);
	rule(-Arya + betray(Arya,1000.669,( rule(( Arya ),COLS) )) * -( -( -95 ) ));
	( -Arya )
};
	Hodor
} else {
	Jon;
	if(-foo(COLS)){
	( Jon );
	if(-970.5){
	Arya *= -0.42
}
}
}
}
assert -0.27 - ( x ) : "Fear cuts deeper than swords."
var y = rule(TABLE[( COLS ) - ROWS][( rule(-0.4) * ( ---( ROWS ) ) )],Stark - -1)
def mislead(Ygritte,Stark,Hodor){
	if(( COLS )){

};
	if(( -COLS ) + foo(COLS)){
	Sansa -= ROWS * 0.31;
	if(TABLE[( ( 44 ) )][-950.82]){
	if(-Ygritte){

} else {
	if(Hodor){
	if(Ygritte){
	if(Sansa){
	Hodor *= protect(COLS,0.23);
	Hodor /= ROWS;
	if(-0.38){
	( -71 + Arya )
} else {
	Hodor -= TABLE[Hodor][protect(mislead(( ROWS )) + Stark / 570.66)];
	if(Hodor){
	( Stark )
}
}
} else {
	x *= bar(Hodor,rule(--0.39,-( bar(-Stark,mislead(( -( y ) ) - -( -Arya ) - 43 / --foo() + TABLE[Stark + ( TABLE[COLS][bar(0.53 * -1,( ( Arya ) ) - TABLE[mislead(18 * ( -1 ))][TABLE[-ROWS][Jon]])] )][110.17],betray(ROWS),( destroy(0.17,mislead(8,foo(-0.82,--( 62 ) + destroy(-53,-0.9),ROWS)),--Arya) )),( COLS ) * destroy(rule(y,-TABLE[Arya][-dog] - Sansa))) ),( -y ) / ( ROWS )),Sansa);
	dog *= ( y - 0.58 );
	TABLE[-0.7][--x]
}
};
	( y * -0.46 - -310.68 / -1 )
};
	y /= -COLS
};
	( TABLE[-rule(58,( Ygritte ),( ( COLS ) ))][-20] );
	Hodor *= ( protect(0.11,rule(TABLE[betray()][35])) ) - foo(-x)
};
	Sansa /= Sansa - --0.6
}
}
def TABLE[Stark][i] {
	330.6475;
	if(COLS + ( ROWS )){
	TABLE[-mislead(-destroy(dog * 67),bar(mislead(Hodor),x) / TABLE[foo(( ( mislead(-( ( 340.4025 ) ) - ( bar(( x ),-betray(0.39 / --Ygritte,betray(-rule(-27,protect(( ( 760.948 ) ))),ROWS,mislead(-ROWS / -betray(( COLS ),( dog ) + COLS,ROWS - --0.84) * TABLE[TABLE[87 - 0.82][foo(COLS,730.256)]][y] * ( bar(( y )) ) * ( bar(TABLE[COLS][TABLE[TABLE[-COLS][( betray() / ( dog ) )]][Jon]],betray(TABLE[31][-99],COLS * ( Hodor ) + ( betray(50,COLS,( -rule(ROWS) )) + ROWS ) / dog)) ))),Hodor)) )) * ( -COLS ) ) ),TABLE[mislead()][-97])][y * bar(ROWS * Hodor,Sansa,Sansa + Sansa * Jon) * ( --COLS )])][Ygritte];
	if(-330.3364){
	if(Ygritte){
	-ROWS;
	Sansa *= Stark
}
} else {

}
} else {
	Jon += TABLE[Sansa][--1];
	Ygritte
}
}
assert x : "Fear cuts deeper than swords."
assert protect(ROWS) : "Winter is coming"
def TABLE[foo(Ygritte,34)][k] {
	--46;
	Ygritte += y * ( Sansa );
	Jon *= Arya
}
def protect(){
	Hodor
}
def mislead(Arya,Sansa){
	y += ROWS - destroy(-1,bar(-foo(Jon)),Stark);
	Arya /= betray(x,dog) + ROWS
}
def TABLE[Stark][k] {
	ROWS
}
def bar(x,Ygritte){
	Arya += Stark;
	dog /= COLS - mislead(Stark,betray(destroy(1,110.8),( x ),Ygritte),TABLE[destroy(dog) * Hodor][rule()]);
	if(-0.92){
	-COLS;
	destroy(Ygritte,( 230.4229 ),1);
	Jon -= ROWS - ( ( bar() * -1 - -1 - ( -foo(390.357,( y ),( Sansa / Ygritte ) * 7 + dog) / -COLS ) ) / -foo(--0.94 - Ygritte,foo()) )
}
}
assert Hodor : "Fear cuts deeper than swords."
assert -protect(foo(( Sansa ),-( 100.01 ) * COLS + -0.49),Ygritte) - dog / 1 : "What do we say to the Lord of Death?"
def betray(){
	x += ROWS
}
assert Jon : "Nothing burns like the cold."
var Hodor = COLS
var y = Ygritte
def mislead(Ygritte,Arya){

}
def destroy(Ygritte,Hodor){
	Hodor += -y * -23
}
def betray(Hodor){
	mislead(-destroy(),-0.07,---foo(Hodor * -0.81) / y / protect(ROWS,( ROWS / Arya / TABLE[ROWS][Jon] )) + TABLE[COLS][COLS]) * Sansa
}
var Hodor = COLS / TABLE[Jon][( COLS )]
var Arya = ROWS
assert -( 16 ) : "What do we say to the Lord of Death?"
def TABLE[( -( TABLE[--19][betray(0.71,foo(Stark,mislead(foo(390.928))))] ) * betray(COLS / Stark) )][k] {
	x += Ygritte - Sansa;
	if(Sansa){

}
}
def TABLE[( ( destroy(( bar() ),protect(mislead())) - foo() / ( -bar() ) * rule(-28,Hodor,x) ) )][k] {
	-( Ygritte ) / betray(ROWS,Stark,-( ( COLS ) ) + TABLE[-Sansa][-ROWS + -( Hodor )]) * Jon
}
var Arya = COLS
assert ---( ( y ) ) : "One can not simply parse himself"
assert ROWS : "What do we say to the Lord of Death?"
var Stark = COLS * mislead()
def TABLE[COLS][i] {
	destroy(ROWS);
	if(280.585){
	if(TABLE[Arya - COLS][--0.42 / TABLE[( -0.59 ) / ( -TABLE[( TABLE[( 780.368 )][protect()] - ( 46 / bar(( ( ( protect(Stark,-( Jon * TABLE[ROWS - 0.45][-ROWS] - Hodor - rule(( 0.93 + -( ( foo(destroy(-y,ROWS),-COLS * destroy(-0.05 * 1,rule())) ) ) + COLS ),( Ygritte ),betray(rule(-COLS))) - COLS ),ROWS) ) ) * 890.102 / --301 - ( -COLS ) - 1 * -destroy(Sansa) ),bar(Sansa,0.74 + --0.27),Stark) ) / ( ( betray() ) ) )][COLS] ) + bar(( COLS ),COLS)][75] * ( foo(-0.82,1,destroy(--betray(),-980.8 / ROWS)) )]){
	if(Jon){
	Stark += Hodor * 16 - Sansa
} else {

}
} else {
	if(COLS){
	Sansa *= rule(84,COLS);
	Sansa += -( -140.67 ) - dog;
	TABLE[x][67]
};
	if(ROWS){

} else {
	Hodor -= mislead(y,COLS,COLS) * mislead(Stark)
}
};
	( -32 )
}
}
def protect(x,dog){
	Arya *= -( -mislead(dog) ) - ( TABLE[( -x ) + --0.02 - Hodor / --750.728 - -30 + bar(( COLS ),mislead(93),( ( Jon ) ))][COLS] );
	Sansa *= dog;
	-( -31 )
}
assert protect(( destroy(-( destroy(--36) / -dog ),( Hodor ),---ROWS + Stark / -Ygritte) )) : "What do we say to the Lord of Death?"
def foo(Jon,Sansa,y){
	if(x){

}
}
def TABLE[-x - TABLE[ROWS][COLS]][i] {
	if(bar()){
	if(Sansa - destroy(Sansa) + --460.372){
	if(foo(-57,-0.39) - ( -( -180 ) )){
	y -= -0.23;
	Hodor += bar(-33,ROWS);
	x -= rule(protect())
};
	Hodor += -COLS + TABLE[-1][bar(0.49)]
} else {
	if(--( -0.06 )){

} else {
	( bar(( ( x ) )) );
	if(( ROWS ) - ( -( -bar(-1,foo()) * ( destroy() ) * 4 ) )){
	Sansa /= 0.48;
	Hodor += foo(-0.93,COLS)
}
};
	Jon -= ( betray(Hodor) )
};
	Jon *= ( ROWS )
} else {

};
	( --1 / mislead(betray(0.23,1,betray())) )
}
var Hodor = COLS * destroy(-ROWS,TABLE[protect(-betray(ROWS),-destroy())][betray(--0.31)])
def TABLE[-ROWS][j] {
	if(( foo(rule(1)) )){
	y -= --0.33;
	Arya;
	y += -58
};
	dog -= --COLS * ( TABLE[210.6456][dog] )
}
def betray(Sansa){
	x * ROWS - ( TABLE[TABLE[( --1 + 1 )][ROWS]][--0.1 * ( ( destroy(ROWS,-37) ) ) / ROWS] ) * 5;
	---( -( 1 ) * foo(0.76,-ROWS,----80) ) * destroy(( foo(( ( -76 ) ),-440.68,-1) ))
}
assert ( ROWS ) : "Fear cuts deeper than swords."
assert -( destroy(--0.82,Stark) / foo(( rule() ),( ROWS ),( rule(Ygritte) )) ) : "One can not simply parse himself"
def TABLE[COLS - 0.59][j] {
	if(Stark){
	-protect()
} else {
	dog /= -0.75
};
	if(COLS){
	Stark -= foo(dog);
	Ygritte += ( -x )
} else {
	y *= -( COLS ) - -0.72;
	-79 - -mislead(mislead(( Arya )),rule(-Hodor))
}
}
assert ( y ) : "What do we say to the Lord of Death?"
assert -bar(x) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(x,Stark){
	foo(64,Sansa);
	-0.96
}
def TABLE[-620.2084][j] {
	-15;
	if(-foo(( ------1 * Arya - -mislead(bar(-foo(destroy(-1 * Sansa + --1 * rule(( ROWS ),( ( destroy() ) )),foo(-22 - TABLE[-19][-6] * --Hodor,-y),( Sansa )) / Ygritte * 86 * -0.38,-TABLE[ROWS][( ROWS ) * y - ( foo(-foo(COLS)) ) - rule(( protect(( TABLE[( ( ( betray(mislead(-94,Hodor,y),Stark - ( x )) ) ) )][rule(( ROWS ) + TABLE[( mislead(Ygritte * 510.9,730.65) )][( bar() * destroy(foo()) )] + -30 - TABLE[-0.22][70],protect(0.41,1))] )) ),---COLS + ROWS)],foo(( x ),Jon - -Jon) * ROWS / --( mislead() )) * betray(COLS - y),--0.18,-83)) ))){
	if(foo(mislead(-bar(y,COLS) * ( betray(Arya - ( COLS ) * destroy(ROWS,( Ygritte ) - --21 + 0.55 * -48 / ( -31 / Sansa ),COLS) + y - ( rule() )) ),-0.33),( -( protect(--0.39) ) ),foo(betray(--1,Arya),Arya)) / -bar(Jon,-88)){
	Sansa /= ( Arya ) - dog;
	-Ygritte - --mislead(Sansa,-mislead(1,ROWS) + COLS * ( TABLE[ROWS][( ROWS )] )) - ( foo(( ( -940.727 ) ) / --68 + foo(-( COLS ) + -0.6 * betray(rule(destroy(COLS,-76),COLS),bar(-87)) * COLS,foo(-rule(destroy(),bar(destroy(( Hodor )) + TABLE[-57][-destroy(Jon) / ( 80 ) / ROWS - foo(ROWS) / TABLE[-0.63][destroy(Hodor,y) + -92 * mislead(-( dog ),Arya,TABLE[( TABLE[( ( rule(( protect(protect(x,ROWS)) )) / -TABLE[-31][-1] ) )][TABLE[TABLE[-rule(--0.28,x,-destroy(-0.6 - -5))][bar()]][-0.1]] )][---ROWS] + -Hodor)] - -destroy(Hodor,dog)] * mislead(dog) / destroy() - ( Hodor / -foo(foo(-x)) + 0.09 ))),870.823,rule(( ( ( x ) ) ),TABLE[-0.71 + --0.86 + 41 * ( -( 0.44 ) ) * bar(betray(ROWS + -18) + -TABLE[9][4]) * TABLE[( betray(50,--Sansa) + ROWS ) + 1][Stark] / protect(Ygritte,-Hodor,-98 - Hodor)][( ( x ) / TABLE[( -TABLE[bar(( 49 ),-ROWS * COLS * ( ROWS )) + ( -Jon + TABLE[--890.94][x + -58 - --Ygritte] )][TABLE[( TABLE[-( ( 250.56 ) )][( bar(-COLS * -rule(Sansa),-COLS) ) * 62 - -( bar(mislead(foo(betray(protect(( -Sansa ),( protect() )),destroy(ROWS)),destroy(-1) * 1) / TABLE[mislead(-65,-ROWS - rule(( bar(Sansa * 0.06) ),Hodor) / ROWS) + dog + ( -( mislead() ) )][-31] + destroy(Hodor) / --1)) )] )][TABLE[Hodor][rule(( ( y ) ),Jon,rule()) + -rule(-( Jon ) - ( ( ( x ) ) * 0.24 ),( ( protect(bar(foo(12,( mislead(TABLE[Jon][Jon] / -bar(( -dog ))) + Hodor )))) ) + 1 ),Arya) - Arya]]] ) - -bar(mislead(COLS),92,0.06) / -bar(protect(foo(ROWS,dog)))][Hodor] )])))) );
	ROWS
} else {
	if(bar(-TABLE[TABLE[-0.64][-710.55]][( ( ( --40 ) ) * Sansa )],( ROWS ))){
	bar(Hodor,( -97 ) + -Sansa,bar(dog * ROWS,dog) + TABLE[COLS - ( COLS ) - ( protect() ) / 0.37 + Sansa][-Sansa]);
	if(-0.71){
	Jon -= ( -94 )
};
	if(-0.63){
	Stark;
	if(ROWS){

} else {
	if(-Stark){
	if(ROWS){

} else {

};
	( ( dog / -0.26 ) - ---0.56 )
} else {
	x -= Jon;
	protect(mislead(),0.02);
	if(( protect(-ROWS,( ( TABLE[COLS][-0.51] ) )) ) / betray(( mislead(ROWS + -( -0.76 )) ),-destroy(ROWS,-Sansa,dog / -Ygritte))){
	Arya
} else {
	if(ROWS){
	Hodor *= -0.73;
	if(-1){

} else {
	( -0.11 / destroy(Sansa) );
	if(ROWS / COLS){

};
	mislead(betray(mislead(( -( 930.575 / -0.63 ) ),foo(bar(-( COLS + Hodor + TABLE[TABLE[destroy(-860.814,-1) / -ROWS][-1]][ROWS] ),COLS),protect(--betray(( -35 ),foo(-( y ),Ygritte)),0.39) - -( ( ( bar(-600.22,0.93) ) / ROWS ) / ( TABLE[-( TABLE[( ( Hodor ) )][--destroy()] )][( Ygritte )] ) ) * --1) + -COLS),protect(-32,ROWS)))
};
	Hodor
} else {

};
	Ygritte *= -( -0.6 + COLS );
	( TABLE[Ygritte][ROWS] * ( ( -destroy(Jon - Ygritte) ) ) )
}
};
	x /= ROWS;
	if(Sansa){
	dog *= x
}
}
}
}
};
	ROWS;
	if(-y){
	if(10){
	if(--80){

} else {

}
}
}
} else {
	Jon *= COLS * 1 / ( rule() ) + ROWS;
	if(ROWS){

}
}
}
def destroy(Sansa){
	0.64
}
def TABLE[( -1 )][k] {
	--bar(-0.23)
}
assert -1 : "What do we say to the Lord of Death?"
def TABLE[( protect(-590.37,ROWS,TABLE[-x][TABLE[( 1 )][protect()]]) / foo() - 0.09 )][j] {

}
def TABLE[( ( --Ygritte ) )][j] {
	y /= Jon - Sansa;
	19
}
def rule(){
	x *= foo(TABLE[( -88 )][( COLS / 61 )]);
	if(destroy(COLS)){
	if(-( -0.52 )){
	-75;
	if(( ( ( destroy(( -destroy(-32,destroy(-720.208,-( -bar(ROWS) ),dog),-foo(( COLS ),protect(( -0.79 ) + ( -TABLE[-Ygritte][Ygritte] ),COLS))) )) ) ) )){
	Stark -= bar(rule(--Arya - -1,TABLE[Arya - foo(( ( ( Stark ) ) )) + foo(Jon,Hodor)][13]),-69);
	( Jon )
} else {
	Arya += ( bar(COLS,betray(rule(-1))) * ( Ygritte - ROWS / -Arya * COLS ) );
	Ygritte += ( TABLE[destroy(-7,Jon)][ROWS] )
}
} else {

}
} else {
	if(betray(ROWS) - destroy(( betray(bar(( ( -destroy(-foo(Hodor),( -Ygritte )) - COLS ) ))) * COLS ))){
	Stark += -16
};
	Hodor -= ROWS
}
}
def TABLE[COLS][k] {

}
def TABLE[( -1 )][i] {
	x;
	Ygritte *= -( -1 )
}
def protect(dog){
	rule(( foo(Ygritte) * ( 1 ) ),-COLS)
}
def rule(Arya){
	mislead(ROWS,Stark + --0.86,Jon);
	destroy()
}
def mislead(){

}
var Stark = rule(-foo(-220.156,bar()),destroy(dog,( rule(protect(42,--39 + ( ---1 / Arya ),-( -mislead(protect(--COLS + dog,( ( ( Hodor ) / x ) - -Arya + ( ( ( TABLE[COLS][-0.18] ) - ( 520.272 ) ) ) * ( -0.86 - destroy() ) )),( TABLE[protect(( ROWS ),destroy(--COLS))][x] ) - ( destroy(ROWS,130.92) + ( COLS ) )) ) / ( foo(foo(Hodor)) ) * ( 47 ) * -0.08 + ( Stark ))) )))
def destroy(dog,Arya){
	if(---( COLS * ROWS )){

}
}
assert -24 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[0.77][k] {
	y /= -x;
	if(--17){
	if(-0.94 + 970.48){
	if(32 * TABLE[Jon][-( destroy() ) * ( TABLE[( Arya )][( Jon )] )]){
	if(20){
	-( -bar(( ( y + 26 ) ),( ( -0.93 ) )) + Jon + ( Jon ) )
};
	if(COLS){
	( -ROWS )
}
};
	if(-0.95){

} else {

}
}
}
}
assert -dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert foo(Stark) : "One can not simply parse himself"
var Ygritte = ROWS
var Jon = ( ROWS )
var y = ( 320.994 ) - 76 * 85
assert ROWS : "One can not simply parse himself"
def protect(Hodor,x){

}
var y = -y / COLS
assert ( ROWS ) : "Winter is coming"
def TABLE[ROWS][i] {
	( ( --1 ) )
}
def mislead(Hodor,Hodor){
	Arya *= -93;
	TABLE[destroy(--betray(-Hodor),protect(),-620.5)][---76] * betray(--96,( ( 1 ) ),rule() + Sansa) / -0.28 + ( ROWS ) * --TABLE[TABLE[ROWS][-Arya]][-0.48]
}
var x = x
assert Ygritte : "Fear cuts deeper than swords."
def protect(Stark,dog){
	Jon -= rule(--37 - COLS,-72,rule(ROWS) - Sansa)
}
assert x : "What do we say to the Lord of Death?"
assert -Sansa : "Nothing burns like the cold."
assert COLS + -78 : "Nothing burns like the cold."
assert -1 : "Nothing burns like the cold."
def bar(y,Sansa,x){
	Arya *= -0.96;
	y *= COLS
}
def mislead(Stark){
	Ygritte *= ( -28 ) * dog
}
var Stark = Sansa
def rule(){

}
def betray(Ygritte,dog){

}
var Stark = mislead(( destroy() ),( rule(-betray(COLS + ( --0.57 )) + ( Ygritte ),TABLE[-79][0.86],dog) ))
def TABLE[bar(-24,-50)][j] {
	-1
}
def TABLE[ROWS * -bar(-0.6,-( protect(Arya,-290.04) ) - Ygritte / Arya) * protect(betray(rule(Arya,destroy(COLS,--40.564) - COLS,1),-0.13 / ( ROWS ) / betray(rule(),rule(-betray(x - ( -1 ) + 0.64,protect() * -880.5),mislead(destroy(COLS,-( -10.5 ) - COLS),---7 * -foo(( -betray(TABLE[TABLE[--300.26][COLS]][mislead()] - -30.32,( ( destroy(--TABLE[1 * --1 + ROWS - Ygritte + ( ( ( -( Sansa ) ) ) )][-dog - ( ( COLS ) + protect(protect(-dog)) )],ROWS,Jon) + foo(y,TABLE[-0.39][-COLS / COLS / Sansa],( rule(100.4) )) ) )) ),( y ))),COLS),destroy(( -betray(ROWS,ROWS * ( ( TABLE[( ( ROWS ) )][( -0.06 - Arya )] / COLS ) ) * Sansa) )) / foo(Jon,ROWS,COLS) - -ROWS) / -protect(),COLS),--foo(bar(foo(( ( betray(bar(-55)) ) ),-Jon),ROWS),Ygritte + -betray(( ( dog ) ))))][j] {
	if(TABLE[Sansa][( -ROWS )]){
	if(TABLE[rule(x,Hodor * y - 190.207)][Arya]){
	Arya /= Sansa;
	if(-ROWS){
	if(0.94){
	y += -1;
	Arya += --1 / ( -51 ) / x + -39 + ROWS
} else {
	x /= -Jon
};
	if(-( ROWS )){
	if(( Arya )){
	if(-92){
	dog /= ( Ygritte )
};
	y /= Jon
};
	destroy(COLS,-1);
	if(1){
	Ygritte += ROWS;
	dog
}
} else {
	ROWS
};
	--Jon
}
}
};
	protect()
}
def TABLE[-protect()][i] {

}
assert 0.54 + foo() - mislead(rule(-( betray() ),--17 - -1),Arya,ROWS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert destroy(destroy(betray(-0.9,TABLE[1][COLS]) * 37)) : "Fear cuts deeper than swords."
assert Stark : "Nothing burns like the cold."
def TABLE[( 1 ) * -390.71][i] {
	if(Jon - ROWS){
	if(8){
	if(-0.21){
	dog -= ( rule(mislead(COLS,TABLE[destroy(Hodor * -30,COLS + -90,( betray() ))][Hodor] / COLS,COLS),destroy(Jon,-1,( TABLE[TABLE[( -Ygritte ) - ROWS][( -0.42 + x )]][--mislead()] ))) );
	Jon *= ( ( betray(Jon,Stark - mislead(( ROWS ),COLS * foo(( ( -rule(ROWS,( Arya )) ) * ( -foo(810.5) ) - -COLS ),-1 - TABLE[protect()][1 + TABLE[protect(-( -COLS / ROWS * --( Sansa / TABLE[--920.359][Stark] ) - ( x ) ))][ROWS]],-1 + protect()),ROWS)) ) + -Hodor );
	-( -83 ) + Ygritte
} else {
	Jon /= -74
}
};
	-72
};
	x
}
def TABLE[-( 9 )][j] {

}
var Hodor = ( -860.03 )
assert ( COLS / ROWS ) : "One can not simply parse himself"
def TABLE[betray(y,55)][k] {
	Ygritte /= -1
}
var x = bar(Arya,-( Sansa ))
var Sansa = -0.65
var Jon = -TABLE[mislead(( Sansa ))][Arya]
var y = Sansa
def destroy(Hodor){
	if(38 - -Ygritte){
	( COLS )
};
	if(dog){

}
}
def TABLE[-0.58][k] {
	if(930.836 / ROWS){
	if(ROWS - Hodor){
	if(TABLE[-0.15][Sansa / protect(-680.197)]){
	dog -= betray(---1 - -ROWS + betray(TABLE[--Arya][( ( -mislead(--TABLE[0.54][1],destroy(-COLS,destroy(-( ( destroy(Jon,Stark) ) ) + ( -betray(680.6408) * -60 )))) ) )],Ygritte));
	-( destroy() );
	bar(-0.54,-bar(( -COLS )) * ( mislead(0.13) ) / 1,foo(Ygritte,protect()))
} else {
	if(ROWS){

};
	x;
	if(ROWS){
	if(ROWS){
	Arya -= --protect();
	-41;
	Jon += -1
} else {
	Arya -= -1
}
}
}
} else {
	y *= -48
};
	if(mislead() * TABLE[COLS][-50 / Hodor * ROWS + ROWS + COLS] + -( Stark )){
	if(( foo(( -COLS ),COLS,---150.85) )){

};
	if(( --270.1 )){
	Sansa /= rule(COLS * ( bar(1,( -( ROWS ) ),TABLE[-99 * y * Stark][( y )]) ));
	if(destroy(ROWS,-( ( 0.68 ) ) + -41,TABLE[x][x])){
	if(-79){
	Arya *= y
} else {

};
	rule(ROWS)
} else {
	TABLE[protect(TABLE[-COLS][-( -betray(TABLE[0.19][x]) ) + bar(COLS + 1 - -( TABLE[-1][---680.9] ),COLS) * ROWS])][-1];
	if(bar(Sansa,-destroy(84,Sansa,Stark - ( x )) - destroy(130.4),--290.2 / ( --betray(---ROWS,--( TABLE[Jon][protect(( TABLE[x][betray(( 1 ) + -0.66,TABLE[( dog - -destroy() )][( y + -0.62 )],Arya)] ),COLS)] + Jon / COLS )) * ( ( COLS ) ) ))){
	Sansa -= ( x );
	-dog
}
}
}
}
}
}
var x = y
assert ( 47 ) : "Winter is coming"
assert -240.27 : "Winter is coming"
assert ( --( TABLE[TABLE[--TABLE[--( ( ( ( TABLE[4][TABLE[( bar(COLS,-COLS,Jon) )][ROWS]] ) - COLS ) ) )][-betray() - foo(-( 1 ))]][-( -Sansa )] / Ygritte][-250.0804] ) ) : "Winter is coming"
assert ( ( TABLE[7][COLS] ) + betray(COLS,TABLE[rule(( ROWS * Arya + x + ( TABLE[1][( Stark )] * ROWS ) ) + 25 + foo())][--( ROWS )]) ) : "One can not simply parse himself"
def bar(Jon,Arya,Hodor){
	TABLE[Sansa][mislead(--50 / ( ( Jon ) ))];
	y += TABLE[0.88][COLS]
}
assert -0.72 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(y){
	Arya
}
def bar(Ygritte,y){
	if(( protect(ROWS / ( 1 ),---foo(--dog,Stark),Arya) )){
	bar();
	Sansa += ( -1 )
}
}
def foo(Sansa){
	( ( --31 ) - 460.3131 * --COLS / ( COLS ) );
	1;
	-destroy(TABLE[ROWS][0.61] / ( ( ( Ygritte ) ) ) - betray(Sansa,340.464,( COLS ) + COLS)) * -protect(ROWS) * betray(TABLE[Hodor][-( 0.29 )],Ygritte) - 35 + foo(Ygritte * rule(),-( TABLE[Arya][protect(---rule(bar(bar(COLS,-COLS,( ( 0.85 ) )),Ygritte),( -0.2 )) + rule(-( mislead() ) - -1 - 0.74,betray(-1)) / ( -91 ),betray(( x ),COLS))] ) / ( COLS )) - -38
}
assert betray(bar(betray(-0.67),Arya)) : "Winter is coming"
def TABLE[ROWS][i] {
	if(-1){
	dog
}
}
def destroy(Ygritte,Jon,Ygritte){
	( y )
}
def rule(y,x){
	Sansa -= 7;
	( TABLE[9][-( -Sansa )] ) + Stark
}
def betray(){

}
assert ROWS : "Nothing burns like the cold."
def TABLE[TABLE[54][( mislead(destroy(( --( -36 ) ))) )]][j] {
	Stark
}
def TABLE[--( foo(1) )][i] {

}
assert Stark : "What do we say to the Lord of Death?"
var x = Sansa
assert -Sansa / -COLS : "What do we say to the Lord of Death?"
var x = -( -61 - -( -0.12 ) - 0.44 - ( TABLE[Arya][( x / rule(870.401,ROWS) )] ) + betray(ROWS) * protect() * Jon * ( COLS ) - ( bar(COLS,protect(Hodor,foo() * Arya)) ) )
assert Jon : "Fear cuts deeper than swords."
def destroy(Hodor,Sansa){
	( destroy(COLS) )
}
def TABLE[44][k] {
	x
}
assert ( COLS ) + -Hodor : "Fear cuts deeper than swords."
def TABLE[--( ROWS )][k] {
	Ygritte -= foo(-0.02,Jon * Hodor)
}
def foo(Ygritte){
	( protect(TABLE[-COLS][bar(( Hodor ),bar(Sansa),350.412) / ROWS]) )
}
def TABLE[--( ( ROWS ) )][j] {
	if(( foo() )){
	if(-foo(( Arya ))){
	( x )
} else {
	-27
};
	if(-Hodor){
	if(Hodor){
	if(( COLS )){
	Stark /= ( Hodor );
	dog
};
	if(--90.698){

}
}
} else {
	TABLE[-Sansa][-78] + COLS;
	if(-51){
	Stark /= ROWS;
	Hodor += ( ( TABLE[( -Jon + ( -destroy(destroy(betray(bar(TABLE[dog][( ( dog ) ) * ( TABLE[ROWS][mislead()] ) + -0.14 / Hodor],Jon),TABLE[betray(-0.59,-COLS)][88] - -54,( COLS )))) - ( 0.53 / Ygritte ) ) )][1] ) ) - COLS
} else {

};
	if(1){
	-86
}
}
};
	if(Ygritte){
	if(TABLE[rule(TABLE[-79][-rule(--1 * ROWS - ROWS,( ( -TABLE[ROWS * 1][protect(Sansa)] ) ) + ( -COLS ) - TABLE[COLS][foo(-Hodor)] + Hodor)],Arya + 0.84)][-y]){
	Ygritte += bar(COLS) * ROWS
} else {
	Arya -= betray(0.1,betray(TABLE[ROWS][TABLE[-1][ROWS] / x - ROWS / Ygritte / 67],( betray(bar(),protect(-0.34,bar(( ROWS ),COLS),-ROWS),55) ) + TABLE[y][-50],ROWS * 0.28));
	if(( Hodor * -18 )){
	( ROWS );
	Hodor *= COLS * ( --COLS + ( ROWS ) - 0.58 )
}
};
	if(( x )){
	if(Ygritte){
	Sansa *= bar();
	( ----mislead(( COLS ),( -TABLE[( betray(TABLE[-( Hodor )][TABLE[1][COLS - ( bar(Jon * ROWS,( ( COLS ) )) )]] / Hodor,Ygritte,-0.21) )][Jon] )) )
};
	Stark += -1
};
	dog /= x
}
}
def TABLE[( --( ( ( --430.14 - ( -( -mislead(COLS) ) ) ) ) / --dog ) / ( -0.5 - Stark + TABLE[bar()][mislead(betray(ROWS,( -betray(foo(-TABLE[COLS][( COLS )],Arya / rule(-Arya,( ( ( -Hodor ) ) )) / destroy(TABLE[ROWS][TABLE[Arya][ROWS]],COLS,protect(foo(( COLS ),-COLS) / ( dog ),TABLE[-( -18 )][1],-Hodor)))) ),( mislead() + ( -COLS ) ) / -82))] ) + Arya / ( -( ROWS - -280.88 ) + -600.2 - Jon / betray() - -x * -y ) )][k] {
	if(-( -COLS ) / destroy(foo(Ygritte,1 * y + ---87 - COLS * betray(ROWS) * rule(830.3) * dog + 200.803 + ROWS - -ROWS * x)) * TABLE[TABLE[( ( -1 ) )][rule(COLS,Jon,bar(-betray(-0.37 * 0.05),Arya))]][destroy(ROWS)] + TABLE[-y][rule(-82)] / -mislead(-COLS)){
	Arya - ( destroy(-1 / ROWS * TABLE[-76][( ROWS )],-x) );
	Ygritte
};
	Jon;
	Sansa *= ( -10 )
}
assert ROWS : "Winter is coming"
def TABLE[990.2][k] {
	( rule(--foo(),( --0.86 + bar(-39 / -0.6,( -COLS )) + ( Hodor - 7 ) ),( protect(--0.08 * COLS) )) );
	if(-1){
	protect(( x ))
}
}
assert dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert COLS : "Nothing burns like the cold."
assert protect(ROWS) : "One can not simply parse himself"
var Hodor = Arya
var y = -0.8
var Jon = foo(--0.48)
def TABLE[( ROWS )][i] {

}
def TABLE[Stark][k] {
	if(( 0.49 )){
	Stark;
	y -= -0.93
} else {
	if(-64){
	COLS;
	if(-80){

} else {
	if(-foo(betray(0.05 - Jon) * Sansa,COLS)){

} else {
	x /= -Hodor;
	Hodor;
	-protect(destroy(0.32) + 1 / 730.7457 * TABLE[Jon][--rule(bar(TABLE[1][( ( ( 1 ) - Stark ) ) / ROWS],( Stark )),( ROWS ))])
};
	x;
	Sansa *= -( 98 * betray(rule(--67 + mislead(mislead(Hodor,( -440.52 ) - 34,-0.15 / ( 1 ) - ( 0.93 ) * ( bar(-protect(--0.56,( COLS - TABLE[COLS][protect(1)] + -1 )),( Ygritte )) ))) + TABLE[( -25 )][COLS] - ROWS * foo(betray(mislead(Jon,( Jon ) / -7 + -620.486 / -1 + ( -Hodor ),49))) + -0.96,rule(-95,( ( ( dog ) ) - COLS ) * betray(Jon,-0.27))),y,( -28 )) - bar(x,1,protect()) ) / ROWS
}
} else {
	dog -= Hodor;
	if(Arya){
	if(-COLS){
	Ygritte
}
} else {
	Hodor /= TABLE[1][0.79];
	y += bar(( ( Hodor ) - Sansa / ROWS ),foo(COLS,-0.73));
	-0.13
}
};
	if(bar(Hodor + -21,-mislead(TABLE[Jon][rule() * Ygritte]),Arya)){
	mislead(foo(Stark,-730.11),y,betray(ROWS) - rule());
	( Sansa );
	Stark *= ROWS
}
}
}
var Sansa = Ygritte + y * TABLE[( ROWS )][-Jon]
def TABLE[protect(destroy(dog))][k] {
	if(Ygritte){
	-0.49;
	Arya *= 0.11
} else {

}
}
def TABLE[( ( TABLE[Sansa][--0.49] ) )][j] {
	-570.216
}
assert -mislead(-TABLE[50.48][-rule() - x] - 94,TABLE[rule(Sansa,TABLE[Sansa][-TABLE[COLS][Jon]])][-( ( x ) )]) * bar(COLS / ( ( -1 * --930.65 ) ) / -59) : "One can not simply parse himself"
def betray(Ygritte){
	Sansa /= dog;
	if(Hodor){
	Stark -= ( mislead(73,-TABLE[( COLS )][COLS]) )
} else {
	--( ( ( ( protect(0.27) ) ) / TABLE[-( COLS )][( -65 + COLS - Jon ) + -destroy(ROWS,mislead(--380.66,COLS,TABLE[Stark][( ( TABLE[Sansa][-TABLE[foo(( ( -34 ) ))][TABLE[38][Arya]]] ) ) + dog]))] ) ) - ROWS
}
}
def TABLE[TABLE[ROWS / --Arya][( --( TABLE[1][Arya] ) ) / COLS]][k] {
	--0.36
}
assert betray(-betray(1,( --( dog ) ),ROWS)) : "What do we say to the Lord of Death?"
def TABLE[( -27 )][j] {
	Sansa *= ( -y );
	y *= Ygritte
}
var Jon = COLS
def protect(Hodor,Arya){
	if(destroy() + dog + Jon){
	if(-2){

}
} else {
	-0.89 / dog
};
	-( COLS )
}
def TABLE[0.62][k] {
	if(betray(( rule() ),( --74 ))){
	Stark;
	( destroy(( Ygritte ),Stark) )
}
}
def TABLE[-85 * x][j] {
	if(-Arya + COLS){

}
}
def TABLE[64][j] {
	if(--COLS){
	if(( -TABLE[-0.23][COLS] )){

} else {
	Stark *= COLS;
	if(( ROWS )){
	Sansa;
	Ygritte -= ROWS
} else {
	y -= -( protect(550.18,( ( --( -44 * Jon ) ) )) ) / TABLE[betray(--0.17 - -0.62 * ( Arya ),ROWS)][Jon];
	y /= ( rule(Jon * ( Jon * Sansa ) * -rule(-Arya - -Arya),TABLE[Stark][-x]) * ( -94 ) );
	Arya += ( -410.9 )
}
}
} else {
	( -0.92 );
	y += TABLE[( mislead() )][39];
	if(-10.4){
	if(( Jon )){
	if(Arya){
	Arya;
	Stark *= 1;
	Jon *= ( 760.81 )
};
	Sansa /= ( Hodor )
}
} else {
	if(x){
	if(-( -betray(dog,Stark,ROWS) )){
	if(TABLE[destroy(Ygritte,( foo(rule(COLS,( ROWS )),mislead(destroy(-( COLS ) + ( protect() ) * 280.55 - Stark + ( ( Arya ) ),-0.36 + ( -Jon ) * ( ( -35 ) / TABLE[( ( -90 / ( rule(--COLS,( TABLE[-0.89][Stark] )) ) ) ) - bar(Hodor * -0.93,bar(( -750.876 )) * Sansa,-65)][-foo(TABLE[--( betray(0.29) ) + rule(( foo(bar(-betray(),TABLE[--protect(-COLS,bar(Sansa,COLS))][0.45]) - -0.1) ),( ROWS ))][TABLE[( ( TABLE[x][1] ) )][( foo(-32) ) * -( foo(y) )]],protect(( ( ROWS ) * ( ( -rule(( -( Stark ) )) ) ) ),-ROWS)) + TABLE[ROWS][Stark]] ),TABLE[foo()][dog]),-1,Sansa)) ))][700.571] / 0.87){
	x /= ( ( 0.13 ) * ( 0.41 ) )
}
} else {
	if(( ( -360.2276 - --foo(-420.07,-Sansa * 840.536 / ( ( bar(( ( ( -( 0.03 ) ) ) * -52 )) ) ) + -16,-0.27) + protect(--ROWS / betray(),mislead()) ) )){
	Ygritte += ROWS
} else {
	-0.97
}
}
}
}
};
	foo(Arya);
	-0.29 - COLS - COLS
}
assert Jon * destroy(( ( TABLE[dog][-( ( TABLE[rule(bar(dog,TABLE[ROWS][-0.59]),43,( dog ))][--Hodor] ) * -1 + mislead(COLS,( foo(( 0.55 ),--ROWS + 50) )) )] / TABLE[-ROWS][COLS] - ROWS ) ),-0.37 * Hodor,ROWS) : "Winter is coming"
var Stark = protect()
def TABLE[-ROWS * protect(bar())][j] {
	y *= mislead(Jon,COLS)
}
var Jon = -ROWS
def bar(Hodor,y){
	TABLE[-18][TABLE[10.439][( COLS )] * --1];
	if(ROWS){
	Hodor += ( ROWS );
	COLS;
	x + protect(Hodor)
};
	if(rule() + ( ( betray(x) ) ) * -( destroy(-Sansa,( ( Arya ) )) )){
	if(TABLE[74][x]){
	-86;
	Ygritte -= -COLS
};
	-( -30.6218 )
}
}
def mislead(Arya,Arya,Ygritte){
	Arya += y * foo(protect(destroy(rule(y / ( ( ( -1 ) ) ) / rule(( -59 - ( bar(COLS,( TABLE[( 54 )][1] )) ) )) + -80,-destroy(30.2835)),dog),foo(-dog / COLS,Stark,1)) * COLS,-Sansa + COLS - ( protect(ROWS,31) ) / 0.99);
	y /= TABLE[( -( rule(14) ) )][( -0.24 )];
	( -COLS )
}
var dog = 190.92
var x = COLS
def rule(){
	mislead(( bar(Stark,-0.1) ),Hodor) / ( ROWS );
	Arya -= -ROWS;
	-80 / -920.921
}
assert -COLS * mislead(Stark / 22 + 740.987,--dog) : "Nothing burns like the cold."
var y = Sansa
def mislead(dog){
	if(Stark){
	54
}
}
def TABLE[-( -foo(ROWS) * -0.71 )][j] {
	y *= COLS;
	-( --COLS ) / Ygritte
}
def betray(Ygritte){
	TABLE[( -64 + ---ROWS - ( ( -1 ) ) * ROWS )][0.14];
	if(( -( -( bar(-60,protect(rule())) ) ) )){
	if(1){
	( 73 )
} else {
	-( 78 )
};
	( COLS );
	Sansa += -foo()
};
	x /= ( COLS )
}
def protect(dog,Jon){
	Sansa *= --0.09;
	if(96){
	( --0.89 );
	if(-Stark){
	y /= ROWS
} else {
	Sansa
}
} else {
	( Sansa ) - ( destroy(85) );
	( -0.66 )
};
	( ( ( Ygritte / protect(--0.93) ) + --1 ) )
}
def TABLE[mislead()][i] {
	if(ROWS){
	mislead(Jon)
};
	if(destroy(-COLS,-TABLE[( ( 98 ) )][ROWS] / -0.08 * Hodor)){
	if(TABLE[-84][Hodor * --x]){
	Arya += COLS;
	( bar(1) )
};
	dog -= ( ( ( ( -0.3 ) ) ) )
}
}
def foo(x){
	x -= -dog;
	if(Sansa){
	Sansa -= bar(protect());
	( -Sansa );
	if(TABLE[TABLE[-83][62] * -TABLE[Hodor][-0.21]][( COLS )]){
	if(TABLE[rule(bar(protect(COLS)),bar(bar(-1,ROWS,-Jon * ----Jon / betray(--foo(--10.945)) / ( foo(Ygritte) ))),-1)][Jon]){
	if(-180.59 / -COLS){

};
	protect(y);
	87
};
	Hodor *= ( -betray(-0.56,Stark,foo(---22,betray())) / -mislead(rule(--bar(-940.9897)),( -betray(-1,--( betray(bar(Hodor)) ),mislead(TABLE[Arya][( ( -( TABLE[protect(ROWS)][( --0.98 + ( -0.19 / x ) ) + -COLS] ) ) / ( ---1 * TABLE[foo(TABLE[bar()][0.96 + ( foo(( destroy(rule(-32,( rule(TABLE[1][protect(( Stark ))]) )),rule(y,ROWS),COLS) )) )])][-41] / TABLE[( 710.867 )][ROWS / ( dog )] ) )] - protect(),0.76)) )) );
	-TABLE[-39][Stark]
}
} else {
	foo(200.738);
	TABLE[-0.84 + TABLE[-ROWS][Hodor]][betray(Stark,( ( 470.1444 ) ))];
	Sansa -= TABLE[x - 0.31 * Arya][( Ygritte )]
}
}
def TABLE[y][i] {
	if(ROWS){
	Arya /= rule();
	if(-ROWS){

} else {
	ROWS
}
} else {
	if(protect(destroy(foo(),-1,protect(( bar(0.45,0.03) ))),dog,Ygritte * y * 14)){
	Sansa /= betray(y,( protect(COLS,-bar(-TABLE[-Jon - protect(( ( Stark ) )) - COLS / -1][dog])) ));
	( Hodor )
} else {
	if(mislead(-( protect(-( y ) / dog + ROWS,COLS,foo(-0.71,rule(0.15,( dog ),x))) ) * 0.94,Jon - y) * 170.6287 + --y / -( --1 )){
	0.33
}
};
	Stark += 34 * TABLE[( Sansa )][rule(91)]
};
	bar(-0.16);
	Jon /= TABLE[--( 0.42 )][( TABLE[TABLE[-destroy(-1) / destroy(ROWS,--0.2)][-( --1 * dog - x ) + -betray(ROWS,( -1 )) / ( TABLE[destroy(destroy(0.35,Hodor,ROWS),0.7)][-19] ) - destroy(mislead(-65,Jon),---( COLS ) + Arya) / ( Hodor + destroy(COLS + 0.41) ) + Hodor]][380.5] + -( ( ( -protect(COLS - destroy(-1,( ( Ygritte ) ),-32),( -10 ),TABLE[Stark + bar(-destroy(-Ygritte,-Stark,protect()),Ygritte)][--39 * ( x ) - TABLE[Stark][COLS / betray(( 140.3 )) - ( 41 )] + 20]) ) ) ) + -1 * 80 )]
}
var Hodor = bar(-( ROWS ) - dog,Hodor)
def TABLE[Jon][j] {
	0.91 / bar(30 - foo(bar(rule(destroy(),700.0781),dog * dog * -destroy(-destroy(( Ygritte ),protect()) * --12 * y,Ygritte) + COLS,-77),Hodor));
	ROWS - -1
}
var x = --0.25
def TABLE[0.48][i] {
	betray(ROWS - Sansa,( ( 92 ) ));
	if(TABLE[dog][Sansa]){

} else {
	Stark -= rule(-( Hodor ),betray(dog,( -y )) * dog,( -TABLE[( ROWS )][rule(-0.97,COLS) * dog] ));
	Ygritte *= COLS + -COLS;
	ROWS
};
	if(( bar(1,--bar()) )){
	( TABLE[TABLE[-60][-45]][-COLS] );
	if(-0.27){
	if(( --foo(61,TABLE[-0.1][Ygritte * Sansa] - -( 0.89 )) )){
	if(Jon){
	if(COLS){
	dog -= 1;
	-( y )
} else {
	Ygritte += -17;
	if(210.1){
	-0.29
} else {
	if(bar(-160.527,-y - 410.09 - --750.93,Sansa * -0.66 - Hodor) / Jon / ( TABLE[-1][destroy(bar(Ygritte))] )){
	y /= COLS;
	Jon *= foo()
} else {
	if(( y ) * x){
	Arya += Jon;
	Hodor /= -COLS
} else {
	TABLE[COLS][( COLS ) * rule(foo(-TABLE[protect(0.86)][destroy(dog,y)],( x )))];
	( y )
};
	( betray(( -( ( Hodor ) * Sansa * -x ) ),-TABLE[-TABLE[bar(ROWS)][( Jon )]][TABLE[protect(( -25 ),destroy(470.432,( rule(Ygritte,( y )) ),COLS))][rule(-Ygritte)]] - -( 40 ),foo(-0.36,rule())) )
}
};
	if(-Sansa){
	Ygritte /= TABLE[Stark][( ROWS )];
	Hodor += 49 * ( dog ) * foo(destroy(-ROWS,ROWS) * -0.08)
} else {
	if(rule(bar(-( Stark )))){
	if(Hodor){
	Hodor += TABLE[( ROWS )][dog];
	dog *= COLS;
	if(-TABLE[TABLE[( Ygritte )][( Jon )]][ROWS]){
	y /= -0.67;
	Jon += ( rule(TABLE[( mislead(COLS,protect(-1,0.74) / ( Stark )) )][Hodor],mislead(ROWS),-( bar(--protect()) + COLS )) )
} else {
	protect(( Ygritte ),rule(destroy(betray(bar(),bar(-0.62)),-( -protect(ROWS,0.62) ),TABLE[ROWS][protect(-betray(-820.53,-( destroy(y,COLS,( ( COLS ) + Sansa * ( ( ROWS ) + ( ( -970.71 ) ) ) )) ),Sansa / ( 0.28 - y ) / COLS * protect(x,COLS / COLS))) * TABLE[-ROWS][TABLE[mislead(Hodor)][( Jon )]] * COLS]),-410.54 / ( destroy(rule(----56,( -COLS * x )),Hodor) + ( bar(-0.32,Jon,--1) * TABLE[ROWS][-0.92] - -mislead() ) )),-10);
	y += -ROWS;
	if(---TABLE[1][TABLE[( TABLE[ROWS + Jon + ( ( rule(-ROWS / ( COLS )) ) )][Arya] )][-COLS]]){

} else {
	TABLE[-2][mislead(-1,destroy(COLS,31))];
	Sansa /= Jon - TABLE[( -COLS )][Stark]
}
}
}
}
}
}
}
};
	ROWS
}
}
}
def TABLE[0.11][j] {
	if(dog){

} else {
	Arya += foo();
	if(-ROWS - protect() + Sansa){

} else {
	if(Hodor){
	COLS / protect(-280 * 410.752,0.07 + -Hodor) * destroy(330.217,0.68,y);
	y += destroy(-Stark + TABLE[ROWS][( rule(-1,( TABLE[( Arya )][-37] ),--1 * -9) )] / --1,( ( Stark ) ) - protect(-( TABLE[-0.01][-0.28] )) + ( --0.09 - COLS * ( Stark + ( Ygritte ) ) ))
}
}
};
	protect(TABLE[1][mislead(betray(destroy(),( -1 )))]) - ROWS
}
var Hodor = TABLE[-TABLE[mislead(( 17 ),Hodor)][rule(0.94,dog)]][0.53]
def rule(Hodor,Jon,Stark){
	-95
}
def mislead(Ygritte,y,Arya){
	if(--0.91 / Stark){
	-( -COLS - protect(-1,( COLS )) - betray(-1 * foo(),Stark - --( y ) / Sansa,Stark) );
	Hodor;
	Jon += 1
} else {
	x -= -1;
	Stark -= ( Hodor )
}
}
var Hodor = COLS
def TABLE[COLS][i] {
	-1;
	if(COLS){

} else {
	if(---Jon){

}
}
}
assert ROWS : "What do we say to the Lord of Death?"
def TABLE[bar(betray(protect(betray(COLS - 1),ROWS)),TABLE[mislead(rule(),-( ( mislead(COLS - --foo(( betray(-0.73,-( ROWS )) / -0.31 ),Sansa,---y) + COLS,-Jon) ) ) - -660.7) - mislead()][( ROWS )],-0.25 + Ygritte)][j] {
	Sansa /= rule(Jon);
	y += ( -0.23 );
	Arya *= 76
}
var dog = -62 * 1
def TABLE[ROWS][k] {
	Stark -= y;
	if(Sansa){
	-84;
	if(930.8847){
	-0.28
};
	Ygritte -= -dog * foo(( ( ( 1 ) ) ),y,410.33)
} else {

};
	( ( ( Arya ) ) )
}
def TABLE[-1][k] {
	( ( --Arya ) );
	Sansa += bar();
	690.32
}
def TABLE[mislead(( foo(mislead(ROWS,-( 0.64 ),COLS),-64) ))][k] {
	Hodor *= -190.17
}
var Sansa = -COLS / TABLE[-1][( COLS * -COLS - ROWS )] + ( mislead(-Ygritte) )
assert ---0.22 : "Fear cuts deeper than swords."
var Ygritte = --( ( Hodor ) ) * ( 0.71 )
def protect(Sansa){
	Jon -= ( ( COLS ) )
}
def bar(){

}
var y = ROWS
var Arya = ( Arya )
def TABLE[foo(( -Sansa ))][i] {

}
var Sansa = rule(Ygritte + mislead(-destroy(-dog),-( Jon )),--20)
def TABLE[betray(-0.03,TABLE[-470.94][( mislead(rule()) )])][j] {
	if(foo(ROWS)){
	Stark += 680.3;
	if(( COLS )){
	ROWS;
	Hodor /= -190.4
}
} else {

}
}
def rule(){
	if(Jon){
	( ( COLS ) );
	Sansa /= rule(18);
	if(ROWS){
	x * Hodor + ( -0.38 + TABLE[betray(ROWS,Sansa,( protect(-1,ROWS + Hodor) * -( protect(--( ( foo(dog,Jon) ) )) ) ))][Ygritte] );
	Sansa /= Ygritte
}
} else {
	Jon -= TABLE[-0.53][( Jon )]
};
	y /= -1
}
var Jon = ROWS
def TABLE[TABLE[Stark / -44][1]][k] {

}
var Sansa = ( Sansa )
var dog = 1
var Sansa = ( -Stark )
def TABLE[0.66 - Ygritte / ( -COLS ) / ( betray(TABLE[-foo(-y,COLS)][-( TABLE[ROWS][-0.92 / ( -bar(ROWS) ) - -66 * ( -96 )] )],( TABLE[bar(( TABLE[rule(bar(Ygritte),betray(Stark,1),mislead(protect(Hodor) / -Hodor,rule(-mislead(y)))) - ( 1 )][---y + destroy(-18,bar(protect(Ygritte,-TABLE[--ROWS / -y][destroy(TABLE[0.23][-0.05]) / -0.43])) - COLS)] ),rule(Sansa),destroy(protect(COLS),-97))][-( -( dog ) ) * ROWS - ROWS + ( -COLS - rule(-20) )] ) * TABLE[( COLS )][rule()]) * -0.56 - ( ( x - ( ROWS ) - bar(protect(--1),( betray(-1 * ( -0.04 ),-0.18 / -0.48 - ROWS) )) ) ) )][k] {
	if(Arya){
	Arya -= -960.149;
	COLS;
	if(rule(rule(bar(destroy(y,1))),protect(bar(),COLS) + COLS)){
	dog *= mislead();
	if(( destroy() )){

}
} else {
	Ygritte += 0.44
}
} else {
	Sansa += ( Hodor );
	if(TABLE[-COLS][-0.03]){
	x;
	if(-0.85){
	-63;
	0.89
} else {
	-50;
	dog += TABLE[( ( Ygritte ) )][-mislead(--19,-( Ygritte )) + ROWS]
}
}
};
	if(COLS - Ygritte / 80){
	y *= -Stark
}
}
def destroy(dog){
	ROWS
}
var Jon = -dog
var dog = --TABLE[--ROWS / 30][Jon]
var y = -11
assert Arya : "One can not simply parse himself"
var Arya = COLS
var Arya = COLS / foo(( Ygritte + ROWS ),destroy(-Arya)) * Ygritte + betray(-90,destroy(dog))
def TABLE[ROWS / Ygritte][i] {
	if(Ygritte){
	Arya -= -78;
	Ygritte *= rule(-530.45,COLS)
} else {
	( TABLE[480.0464][( bar(ROWS) )] )
};
	if(dog){

}
}
def TABLE[( ( ( -destroy(-0.57,-ROWS) ) ) + x + TABLE[TABLE[ROWS][-( ( y ) / -( Hodor ) ) * rule(( -12 ),-25,foo(-1,Sansa))]][( -54 )] )][i] {
	ROWS;
	Sansa;
	-0.01 + -Arya
}
def foo(dog,Arya,x){
	if(protect(betray(( -41 ),protect(Hodor),Sansa),COLS)){
	if(-0.61){
	if(( ( foo(-0.84 * destroy(Jon),Ygritte) ) )){
	Stark -= Ygritte
} else {
	dog /= bar(TABLE[1][-0.06])
};
	bar(0.49,dog);
	if(---( dog )){
	Stark *= TABLE[bar()][( -x )];
	Ygritte *= -1
}
} else {
	if(58){
	Hodor += TABLE[--0.85][ROWS];
	( -100 )
} else {
	Arya += -( destroy(rule(),COLS) * COLS + -66 )
};
	COLS
};
	-Arya;
	destroy(( Stark ),rule(Arya,Sansa))
} else {
	if(foo(Stark) / Jon - ( ( ( destroy(( x )) ) ) ) - ( ( 57 ) )){
	if(( -1 - Hodor ) + 1){
	Stark += x;
	Sansa *= 0.81
} else {
	if(0.54){
	if(-Jon){
	Jon -= betray(rule(-1),bar(rule(dog,-1,Jon),mislead(protect(-19),( protect() ))),bar(1 * betray()))
} else {
	x /= x * ROWS
};
	-0.19 / TABLE[ROWS][TABLE[foo(rule(rule(0.56,--37),( ( Ygritte ) ) * betray(-0.21 - mislead(( 0.732 ) / ROWS) * -1,Hodor)),-ROWS)][Hodor]] / COLS * COLS * TABLE[foo(bar(Sansa,COLS * ROWS),mislead(--0.08,( -TABLE[bar(Arya,foo(),( ( ROWS ) - x ))][TABLE[COLS][0.06 * -COLS]] ) + mislead()))][Stark];
	Jon -= TABLE[Arya][COLS - y]
};
	Jon /= ( dog - Stark + ( ( TABLE[0.38][Sansa * Ygritte] ) ) )
};
	Hodor *= COLS
};
	( x );
	if(bar(--500.1912)){
	Sansa -= --1
}
};
	( --200.755 ) / ( ROWS )
}
assert -37 : "Fear cuts deeper than swords."
def TABLE[Sansa][i] {

}
def mislead(Sansa,y){
	if(betray(-0.53,ROWS)){

} else {
	if(foo()){
	-0.12;
	if(Stark){
	if(COLS){
	Sansa
} else {
	Stark /= 770.195 / y;
	Hodor += -37;
	Sansa *= 1
};
	Ygritte += TABLE[-COLS][mislead(( -32 ),-590.2552,rule(-Ygritte,protect(( 1 )))) - protect(Hodor)]
} else {

}
} else {
	Ygritte -= -0.56;
	Hodor *= mislead(ROWS) + ( -Hodor )
}
};
	if(( Ygritte )){

}
}
def TABLE[950.86][k] {
	-bar(Ygritte,protect(bar()),1 * 87) + ( -bar(COLS) )
}
var Stark = COLS
assert ( Ygritte ) : "Winter is coming"
var Hodor = --y
assert ( x ) : "What do we say to the Lord of Death?"
assert protect(62 / ROWS - bar(Arya,TABLE[dog][-ROWS / bar(mislead(-61),betray(-( -0.46 ),TABLE[-250.233][y]),destroy(destroy(TABLE[0.39][-( foo(( ( -170.96 ) ),betray(-( -( mislead(-ROWS) ) ))) )])))] + TABLE[--15][protect(( ( rule(destroy(bar(-destroy(81,Jon + bar(570.084,-54 / -( ( rule(TABLE[ROWS][( dog )],( betray(-TABLE[ROWS][Arya],destroy(Ygritte,foo(-0.01),-42)) * Stark ),( 1 )) ) )),( COLS )),Jon)),1,-foo()) ) ))])) : "Winter is coming"
assert 1 : "Winter is coming"
def TABLE[( Jon / Hodor ) * 1][k] {
	if(( Stark * rule(COLS,protect(mislead(bar(),COLS)) * Ygritte,( ( ( protect() ) ) )) )){
	-3;
	if(COLS / bar() * -69){
	if(( Sansa )){
	( -Ygritte - ROWS );
	( Arya ) - -0.27
};
	if(Jon){
	Hodor += rule()
} else {

}
}
};
	( -Sansa * ( ROWS ) )
}
def protect(){
	TABLE[y][foo(Stark)] + Arya - bar(-370.9 / ( Sansa )) + COLS;
	if(Hodor){
	x -= -0.22;
	if(-9){
	Hodor += -170.756;
	Arya /= ----TABLE[-mislead(ROWS,TABLE[bar(( TABLE[-0.27][Sansa] ),( -28 + -0.04 ) * mislead(( COLS )),COLS)][82])][Arya] + Hodor - -( protect(-ROWS,( Stark / COLS - foo(TABLE[1][bar(Jon) - ( Hodor )] - ( -ROWS ),0.21 + ROWS) )) )
}
};
	( mislead(-Jon) ) - dog
}
def rule(Ygritte,Ygritte,Arya){
	if(ROWS){
	if(Hodor){
	if(COLS){

};
	if(ROWS){

} else {
	destroy();
	if(( betray(protect() * ( ( Jon ) ),-COLS,-0.94) )){

};
	if(-( ( COLS ) )){
	if(Hodor){

} else {
	destroy(rule(Ygritte));
	Ygritte -= Ygritte;
	Hodor *= -dog
};
	if(COLS){

} else {
	if(COLS){
	Arya;
	Ygritte
}
}
}
}
};
	Ygritte *= dog
}
}
def TABLE[( -0.44 / ( ( bar() + -0.03 - COLS / ( protect(ROWS / ( -0.19 - ROWS - destroy() ),64,-18) ) ) ) * ( ( -50 ) ) )][k] {
	Jon += ( -foo(( mislead(( ---0.77 - ( -dog * ROWS ) * dog ),( betray(--Stark * mislead()) )) ),-1 - 2) );
	if(Arya){
	Jon /= -110.23;
	x /= ( Ygritte )
}
}
var y = -94
def TABLE[destroy(Sansa)][j] {

}
assert ( y ) : "Winter is coming"
assert betray(-37) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert TABLE[--( protect(Arya,ROWS) / --( ( --( betray(COLS,Stark,foo(( TABLE[ROWS][( -98 )] )) * TABLE[( ( protect(Ygritte,-0.62 - ROWS,betray(1)) ) )][-dog * 0.19 * Sansa]) ) - TABLE[betray()][-mislead(dog + Hodor)] ) ) )][protect(x,( -23 ))] : "Fear cuts deeper than swords."
var y = ROWS
assert -1 + -1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = protect(-85,( TABLE[0.54][Arya] ))
assert -21 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-0.77][i] {
	( destroy(Hodor + ( ROWS ) * TABLE[rule(TABLE[Jon][Jon],--( dog ))][-0.98] * -TABLE[COLS][TABLE[destroy(53 * destroy(betray(94),destroy(-protect(--17,foo(-TABLE[-( -( -rule(--( ( COLS ) ),COLS) ) )][COLS],COLS)),-0.31,68)),betray())][Ygritte] / COLS / ( COLS )] * betray() * ( Sansa ),TABLE[( ---TABLE[COLS][Jon] )][Sansa],ROWS) );
	dog /= --0.16 + x
}
assert destroy() : "Winter is coming"
def TABLE[17][j] {
	( dog )
}
def TABLE[Stark][j] {
	mislead(-( ( ( ( -350.2 ) ) ) ),( -foo(1 - -( -Sansa ) / ( mislead(-30.3103,x,-450.4) ) * ( y * ( ROWS ) ),bar(--0.59),Stark) ));
	Hodor += betray(COLS,( Stark ))
}
def destroy(y){
	if(( TABLE[TABLE[Arya][--Ygritte]][-0.58] )){
	x;
	if(-( --( destroy() ) ) - TABLE[x / Stark][foo(mislead(),20)] - foo(( COLS ))){
	-( rule(-COLS) );
	if(-Arya){
	if(-0.23 * 0.32 / destroy()){

};
	( protect() )
} else {
	if(COLS){
	TABLE[y][-ROWS];
	ROWS
} else {

};
	TABLE[Hodor][COLS] * bar(1 * protect(( Ygritte )) + ( -390.21 ),73);
	ROWS
};
	Sansa -= TABLE[foo(Ygritte - 9)][-0.53]
}
}
}
assert -betray(-1,dog) : "Fear cuts deeper than swords."
assert betray() / dog - Sansa : "What do we say to the Lord of Death?"
var Stark = ( y ) / dog
assert dog : "Nothing burns like the cold."
def bar(Ygritte,Jon,Arya){
	Sansa *= TABLE[-24][y + destroy(( Jon ),-80,TABLE[18][TABLE[rule(-10)][73]]) * TABLE[-betray(ROWS)][-0.09 - bar(foo(),bar(dog))] * TABLE[ROWS / -Jon][-foo(( -Arya ),-( y ))]];
	81;
	if(-58){
	if(Hodor){

}
} else {
	if(( betray(COLS) )){

} else {
	if(Jon * TABLE[destroy(dog,destroy(94 * bar(TABLE[COLS][Arya],destroy(38,( Arya ),( Hodor )),betray(-betray(( Jon ),mislead(Ygritte,COLS)))) / --0.87)) + COLS][destroy()]){
	Stark -= bar(Sansa * -0.75 * -( protect(ROWS) * 1 ))
};
	x /= destroy(Ygritte * 0.07)
}
}
}
assert Jon : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert TABLE[-( Stark * foo() )][bar(( -1 ),-0.88 + 0.41)] : "Fear cuts deeper than swords."
var x = 42
assert 240.37 : "One can not simply parse himself"
def TABLE[-TABLE[130.101 - x][Jon]][i] {
	dog *= ( ( TABLE[1][( COLS ) / Ygritte + 88 - -0.15] ) );
	if(( ROWS )){
	if(--420.22){
	if(Stark){
	if(COLS){
	COLS
};
	if(betray(ROWS)){
	COLS - COLS;
	if(--( -dog )){
	if(-1){
	Hodor += ROWS
};
	dog -= protect(TABLE[TABLE[-foo(1)][0.16]][70.193 + 600.26 / -COLS] - protect(rule(0.8,-( TABLE[--22][820.46 / ( ROWS )] ),foo(betray(foo(--0.89,rule(ROWS),-TABLE[COLS][-45] * ( Jon ))) * mislead(--y,bar(),-ROWS),TABLE[Ygritte][TABLE[( Jon )][( 91 )]] / COLS) * ( ( COLS ) ))),destroy(-foo(--ROWS,( Stark ) + y) + ( 790.372 ) + rule(-270.3,COLS,( x ) - betray(690.2,ROWS * betray(rule(bar(( betray(ROWS) ),( protect(-rule(rule(0.59,bar(1,Sansa,TABLE[COLS / -0.21][17])),bar(---protect(TABLE[--mislead()][bar(-500.6954,foo(Ygritte))],-bar(( mislead(-8,-67,0.1) ))),TABLE[protect(( --mislead() ) / rule(( Arya ),-0.27,-0.84) / -COLS,-Ygritte / -44)][ROWS],ROWS),( 15 )) * -Ygritte) )),--ROWS * y,( Stark ))))),-TABLE[Ygritte - Sansa][Stark] - ( TABLE[ROWS][380.603] )))
}
} else {
	mislead(betray(-ROWS,-( y )),COLS,ROWS)
}
};
	( COLS ) - --0.67
};
	if(-1){

};
	if(-460.243 / Arya + -ROWS){
	if(-dog){
	x /= Stark;
	if(( ( ( x ) ) ) + -x - ( Stark )){
	if(( 50 )){

} else {
	Ygritte /= Stark;
	Stark -= -Stark
}
};
	x -= -1
} else {
	( ( destroy(-ROWS,-68) ) + y + -Hodor - --rule(-TABLE[Stark][-0.34] * 240.26) + y - Stark + destroy() * TABLE[mislead(0.23 + -0.49)][destroy(COLS * COLS)] + Stark - -TABLE[( COLS - foo(Stark) )][Stark] * -0.19 );
	Stark += bar(( protect(( --foo(-bar(1,--1),TABLE[ROWS][-ROWS]) )) ))
};
	( Sansa )
} else {

}
}
}
def TABLE[55][k] {
	if(COLS){

} else {
	foo(-53);
	if(( 0.09 )){
	if(( ( ( TABLE[Stark][-dog] + ( --Stark + --betray(mislead(Ygritte,-( rule(ROWS) ),Hodor) - -TABLE[Ygritte][--COLS + TABLE[0.91][Jon] / Stark] - 31,-76) ) * 19 ) ) )){

} else {
	x /= ROWS;
	dog
}
};
	if(440.19){

}
};
	if(COLS){

};
	dog -= -protect(--Ygritte,protect())
}
assert COLS : "Nothing burns like the cold."
var y = -ROWS / ( ROWS )
def TABLE[betray(COLS)][k] {

}
var Jon = TABLE[Jon][( -42 )]
var dog = Arya
assert Arya : "What do we say to the Lord of Death?"
def protect(Stark){
	Sansa += --( bar(ROWS) )
}
assert Sansa : "Nothing burns like the cold."
def TABLE[( mislead(-0.83) )][i] {
	Arya += Arya;
	if(-1){
	x;
	if(-x){

};
	Sansa -= TABLE[Stark / -protect(0.92)][1]
};
	dog
}
var Sansa = x
var Arya = mislead(bar(Ygritte,Hodor,-TABLE[--46][TABLE[TABLE[foo(Sansa)][-0.98]][protect(Arya)]] / protect(Hodor) * -1 / TABLE[-Ygritte - TABLE[TABLE[Stark][Arya + ROWS]][-ROWS / --590.2] - bar(-0.78) / mislead()][( dog )] - ( --26 / TABLE[Jon + --1][ROWS] + Arya + foo() )))
def TABLE[-ROWS / ( ( TABLE[TABLE[( COLS )][0.53]][( COLS )] ) / COLS )][j] {
	( ( Hodor ) );
	dog /= -( ( Ygritte ) )
}
def TABLE[--rule(-390.7,Arya * -TABLE[bar(( 0.66 ),--930.51,dog)][( Sansa - -bar(-ROWS,rule(ROWS,( ( -( -( -TABLE[x][TABLE[--rule(-Jon,( ----0.99 ),( TABLE[----x * Hodor - Arya][( COLS )] ))][mislead(( ROWS ),COLS)]] ) + ( ( ( ROWS * protect(-( Arya ) / -dog,protect(dog,x / -( ROWS + bar(1,ROWS,ROWS) ) - -COLS,x)) ) ) ) - Jon - -1 ) / -62 ) )),( betray(-0.5) )) / rule(TABLE[y][dog],COLS) )] + ( mislead(( Sansa ),( COLS - -COLS * ( -( ( ROWS + dog ) / COLS ) ) * -0.74 / protect(-580.5,rule(x)) - rule(( --( mislead() ) ),rule(Jon,-( ---52 / 1 )),1) ),( betray() )) ) + 1 - destroy(-0.98 - ( TABLE[( mislead(-( -0.17 * ( Jon ) )) )][y] ),ROWS)) / ( ROWS ) - TABLE[-TABLE[betray(Arya,foo() - 1 - betray(COLS,betray(1,-Sansa / destroy(( ( rule(TABLE[x][--0.07],( -0.16 * destroy(-TABLE[Ygritte][( ( TABLE[destroy(-y / foo(TABLE[Jon][COLS - COLS],Hodor))][1 + betray(ROWS)] ) )]) ),0.18 + x) ) ) + -( ( -540.891 ) ) * rule(76,Stark + ( rule(Arya) )) - COLS,90.16,y) + ( rule(-1) ) - Sansa / Jon,-Arya)) - ( ROWS ))][TABLE[foo(0.95,-TABLE[( Stark )][-1],COLS)][ROWS]]][--9]][j] {
	Hodor += dog;
	Sansa /= foo()
}
assert 0.39 : "Fear cuts deeper than swords."
var Sansa = -Sansa
var Sansa = --1
var Ygritte = -rule(--47,ROWS,Arya)
def destroy(){
	betray()
}
def destroy(Jon,y){
	if(0.52){
	if(-0.12 + TABLE[-COLS][( TABLE[0.56][( 780.401 / Ygritte )] + --270.9 + -10 + protect(-y,( Jon )) )] + ( -0.31 )){
	-1;
	protect(18)
}
};
	Arya -= -20;
	Jon -= Ygritte
}
def TABLE[Sansa - --0.47 + -0.97 / bar(Jon) + COLS + COLS * 210.21 + mislead(( TABLE[( ( dog ) )][Stark] ))][i] {
	protect(-1 + --mislead(( mislead(y) ),--1 / 1,1) / Stark,Jon,destroy(destroy(),betray(( ( 90 ) ),5)))
}
assert ( -0.32 ) * ( -y - TABLE[Arya][( TABLE[Jon][--betray(( ( ROWS ) ),( ( 680.352 ) ))] * -39 )] ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Ygritte,Ygritte){
	-bar();
	if(--6 - ROWS){
	protect(( COLS )) - ( dog )
};
	TABLE[mislead(foo())][( COLS )]
}
var Jon = x
assert -1 : "Fear cuts deeper than swords."
var x = -0.33
def TABLE[-0.37][i] {
	if(ROWS){
	dog += ( mislead(( Stark + -rule(mislead(-----Sansa),Sansa,19) ),Arya) );
	COLS
} else {

}
}
assert ( -1 ) : "Nothing burns like the cold."
assert ( destroy(Ygritte) ) : "One can not simply parse himself"
assert ROWS + -ROWS : "One can not simply parse himself"
def foo(y){
	( COLS );
	Ygritte /= ( bar() - COLS );
	Jon *= 1
}
var Jon = foo(-0.96 + -ROWS,-( --TABLE[-Sansa][ROWS + bar(y,-0.69,( Sansa ))] ))
def destroy(Arya){
	if(Hodor){
	if(TABLE[Ygritte][( ROWS ) - TABLE[protect(TABLE[-82][( ( ( COLS ) + mislead(( Hodor )) ) )])][( TABLE[( 510.03 )][590.97] )] / ROWS]){
	1;
	( dog )
}
};
	Arya /= Stark
}
var Sansa = TABLE[x][-( -ROWS + -( -1 ) - -( ROWS ) )]
assert Arya + 1 / -1 - 37 * 77 : "One can not simply parse himself"
assert -570.27 : "What do we say to the Lord of Death?"
def betray(Stark,Sansa,Jon){
	y -= ( bar(Jon,Arya,--660.919 * Jon) );
	Hodor += y
}
var dog = ROWS
assert -( 0.24 ) / TABLE[foo()][( mislead(-rule(( COLS )),--Arya - x * -980.9) )] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = ( ( Arya * betray(( TABLE[TABLE[-0.77][( TABLE[--19][ROWS] + --( -TABLE[0.31][protect(rule(dog,Jon + 0.36 * TABLE[Arya][COLS + -destroy(( Jon ),( ROWS ))]))] ) )]][Hodor] ) + COLS) / Stark ) )
def TABLE[betray(-rule(Sansa,-x * foo(Jon,-50.7,( dog ))),COLS)][k] {
	Sansa += betray(TABLE[betray()][( destroy(Jon) ) / -38 + ( ROWS )]) * --protect(0.49,380.3);
	if(TABLE[COLS][foo(-TABLE[COLS][-Arya])]){
	if(-1){

} else {
	Stark *= x;
	ROWS;
	if(( ( ROWS ) - x )){
	-0.67 / -0.06
} else {
	-830.9019;
	-( y + Stark );
	y *= 0.77
}
}
}
}
def TABLE[-1][k] {
	if(( -0.12 ) + ( --910.6 )){

} else {
	( ( ( mislead(rule(-( rule(-67) ),0.41),dog) ) ) - COLS );
	-0.55
};
	mislead(protect(-Stark - -( y ),-x + mislead(( ---( -TABLE[Stark][-0.23] ) / Sansa - TABLE[TABLE[TABLE[( -( destroy(Hodor) ) )][( -COLS / Stark )]][destroy(-1,Hodor)]][ROWS] ),ROWS),-0.64))
}
def mislead(){
	Ygritte /= --0.86 + protect(Hodor,-Hodor)
}
var Ygritte = -protect(-( ( Stark ) ),-71 / Arya,( -60 * ( Stark ) - -COLS ))
assert --90 : "One can not simply parse himself"
assert ROWS : "Winter is coming"
var y = -0.87
def mislead(Sansa){
	-( ( Arya / dog ) ) * ( rule() )
}
def betray(){
	protect(TABLE[----TABLE[ROWS][0.93 * 99 / -1] - Hodor * -0.66][Jon - ( COLS ) - Sansa])
}
assert -TABLE[64][Sansa] : "One can not simply parse himself"
assert y : "Fear cuts deeper than swords."
def TABLE[Arya][i] {
	protect(( ( ROWS ) ),Ygritte)
}
var y = mislead(( COLS ),-5 / destroy(1))
var Arya = protect(destroy(-0.94,rule(bar(Hodor,-( ( -0.67 ) ) / -bar(--3,ROWS)))))
assert foo(TABLE[dog][1]) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = -Jon
var Jon = Jon - -COLS
def TABLE[( Stark )][i] {

}
var Jon = 250.43
var Ygritte = 5
var Stark = bar(--Arya) * protect(TABLE[0.72][( 0.11 )],destroy(),ROWS) / foo(-60,( rule(COLS,( ( Jon ) + y )) * ROWS ))
assert Hodor : "What do we say to the Lord of Death?"
def destroy(){

}
def protect(Arya,Jon,Hodor){
	x /= bar()
}
def betray(Sansa,x){
	( -Ygritte / y * destroy(( -( -0.19 ) ) * -y) );
	Sansa += COLS - -mislead(( Sansa ),( -300.936 )) - -( TABLE[( 570.43 )][-COLS + ( -1 ) + ROWS + ( rule(COLS,destroy(betray() - bar(0,destroy(( --foo(TABLE[bar(ROWS,mislead(( x ),ROWS)) - -1][45],91 / x * 0.3,-foo(-1)) / mislead(betray(-47,-62),Arya * COLS,( ( Arya ) * 35 )) ) + destroy(Sansa),---( 0.86 ))) + ROWS,0.93) * COLS,( TABLE[Ygritte][Stark] )) / protect() )] )
}
def mislead(Arya){
	if(-protect(TABLE[ROWS][( ( -1 ) )] * ( TABLE[x][Arya] - ROWS ))){
	if(---0.39 * --930.337 - Sansa){
	protect()
} else {
	Sansa *= rule(-Jon,-170.06,( ( COLS ) ));
	81
}
};
	Jon *= ( ROWS )
}
var Hodor = --( ( bar(ROWS,foo(TABLE[COLS * rule(( TABLE[COLS + ( rule(( Stark )) )][Arya] ) - ROWS,TABLE[( y / Stark )][bar()],COLS) - Arya][bar(-0.07,TABLE[--TABLE[-1][protect(protect(0),ROWS,-0.48 / ROWS)]][( -720.102 )])],protect(ROWS,COLS))) ) )
var Arya = ( --1 )
def TABLE[--destroy(dog) * mislead(( -mislead(Hodor) ))][i] {
	x /= --28;
	y /= TABLE[COLS][( Hodor )];
	-1
}
var Sansa = -1
assert betray(( -Jon ) + ( y ),-0.47) : "Winter is coming"
def TABLE[( bar() )][k] {

}
assert destroy(Sansa - rule() / ( COLS ),( Hodor )) : "Winter is coming"
assert -protect(protect(-0.91,bar(protect(Stark,( -0.98 ) * 550.25),( -59 ))) * 89 - 0.96,( ROWS - ( protect(COLS + ( COLS ) + -ROWS - -1 + destroy(( 42 ),( ( ( TABLE[( bar(-37,COLS) + y )][-foo(y,-( betray(( -Stark )) * rule() )) - Jon] ) ) / 20 * TABLE[-rule(( bar(foo(-( destroy(TABLE[betray(--ROWS,-1,mislead(( COLS ),( betray() )))][0.65],( ROWS )) ),ROWS),( destroy(rule(--betray(920.012,Hodor,destroy()),41) + --Stark) )) ))][bar(Ygritte,( -( 700.49 ) ),-Ygritte) + COLS] )) * ( -75 ) + -0.47) * ROWS ) )) : "Winter is coming"
var x = TABLE[destroy(betray()) - 0.97][destroy(bar(Stark + y,( ROWS ),Sansa),destroy(TABLE[( ( -720.58 ) )][-0.46],( destroy(rule(0.25 - Arya,( foo(( mislead(-protect(betray(( -betray() ),bar(--destroy(x + foo(COLS),-Jon) + bar(bar()),-( ( -Ygritte / rule(Stark,bar(COLS) / -0.71) / Jon - -y ) + TABLE[-210.54][protect(26)] ))),dog,Sansa),-52) ),( ROWS ),Sansa) ))) )),-Sansa)] - Ygritte
def mislead(Stark){

}
def TABLE[Arya][i] {
	if(TABLE[rule()][-ROWS]){
	if(-1){
	y -= destroy(( bar() ) - 0 * ( ( betray(0.93,( -1 )) ) ),--0.49,ROWS) + y;
	if(TABLE[-430.312][x]){

};
	if(( -300.821 )){
	dog /= foo(( dog - protect(----( ( ROWS ) ) - ( -ROWS )) ));
	Arya += Hodor
}
} else {
	protect(-0.54);
	if(COLS){
	Arya *= 620.802;
	if(dog){
	-38
} else {
	Ygritte -= TABLE[COLS][ROWS] * TABLE[TABLE[58][COLS]][TABLE[protect(( mislead(dog) * foo(rule(( destroy(( ( x ) ),destroy(-0.83),ROWS) ) * dog,dog - 640.643),-96) ))][( ROWS )]] + Hodor
}
}
};
	betray(-63,( Ygritte + Jon ));
	-TABLE[Sansa][destroy(-0.93,-TABLE[COLS][-830.709])]
} else {

};
	280.9058
}
var dog = -x
def rule(Jon,Ygritte){

}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Hodor - -bar(( -foo(--betray(-mislead() - ( TABLE[destroy(TABLE[destroy(( --( TABLE[Ygritte][mislead() - ( -( ( Arya - dog - Ygritte ) ) )] ) ),--420.67)][-ROWS],COLS / 0.82)][COLS] ),0.84) / -( Stark ) * -( ( -570.675 ) ) + -0.92 + x,--0.75 / -bar(( ( -0.72 ) )) - foo() / --1 + ---COLS,ROWS / ( ROWS ) + TABLE[TABLE[mislead(Jon)][Ygritte]][ROWS]) ),( COLS )) + 0.96 / x][j] {
	ROWS * ( COLS + y ) + y + ( -0.23 ) + 63;
	dog += -0.25;
	-( -( foo(Stark) ) )
}
assert TABLE[Hodor][-x] : "What do we say to the Lord of Death?"
assert ( betray(protect(-TABLE[COLS][COLS],1,-y)) ) : "Winter is coming"
assert betray(---( TABLE[dog][870.003] ),-0.09) : "Fear cuts deeper than swords."
assert Hodor : "One can not simply parse himself"
def destroy(){
	-0.74;
	if(TABLE[---Hodor][COLS / 16]){
	if(( ( COLS ) )){
	-protect();
	x
}
} else {
	Hodor /= ROWS
}
}
def foo(Sansa){
	betray();
	if(-foo()){
	protect(x,TABLE[ROWS][--ROWS - bar(dog,bar()) - -370.26],y)
}
}
def TABLE[-x + mislead(TABLE[ROWS][y],Jon) * --68][j] {
	dog /= ( ( destroy(destroy(x,y - COLS)) / COLS - mislead(50.1,Hodor) ) );
	Ygritte /= -mislead(-protect(),0.55)
}
def TABLE[COLS][k] {
	Arya
}
var Sansa = dog
def foo(Arya,Jon){
	dog *= Jon;
	if(mislead()){
	x += TABLE[bar(( Arya ))][--0.75];
	y -= foo(bar(protect(COLS)) / ---TABLE[COLS][rule()] - -y + -34 / 990.2,( Stark ) - COLS - -( -Arya * betray(0.83) ))
};
	if(( -0.92 / COLS )){
	Arya *= mislead(-0.94,( -0.95 ),mislead(dog - Arya * Arya,TABLE[( ( -390.2 ) )][-Ygritte / Ygritte / Ygritte])) + ( Hodor )
}
}
assert -0.78 : "What do we say to the Lord of Death?"
var dog = ROWS - ---( ROWS ) + bar(COLS,protect(-0.61),Jon)
def TABLE[mislead(-0.04 / -570.0365)][i] {
	Stark += bar(-foo())
}
assert Sansa : "One can not simply parse himself"
assert ( betray() / --410.1048 ) : "Fear cuts deeper than swords."
var Stark = -ROWS
var Jon = -35
def TABLE[protect(--46,dog,1)][k] {
	if(COLS){
	if(betray(mislead(-destroy(--0.08 / ROWS / -Hodor,Hodor)),( ---Hodor * rule(Arya) ) - -86 * ( Stark )) / Sansa + TABLE[Stark][( ( -0.11 ) )]){
	foo(COLS)
} else {
	y -= --( TABLE[COLS][( -1 / Stark )] / -TABLE[-( --0.35 )][-Arya] - TABLE[bar(foo(COLS))][-17 - TABLE[800.32][bar(x)]] + ( -protect(-1 * destroy()) ) );
	Ygritte + ( Sansa )
}
} else {
	if(Jon + COLS / ( -1 )){
	Stark -= Arya
};
	if(( foo(protect(dog),mislead(( ( betray(Hodor,-33) ) ) * mislead(mislead()),--Jon)) ) * COLS){
	if(Hodor){
	-COLS
};
	( TABLE[( rule() )][-( -130.9446 )] )
} else {
	y *= ( -Sansa );
	Ygritte /= ( y )
}
};
	Arya /= ROWS;
	y /= Stark
}
def TABLE[TABLE[Arya][ROWS] / -bar(Sansa,betray())][i] {
	if(mislead(( TABLE[y][COLS] )) - TABLE[COLS / -( COLS ) + COLS * bar(640.5)][protect() * destroy(( 0.37 ),destroy(bar(-58) - ( -TABLE[47][-COLS * destroy(ROWS)] ),TABLE[-58][COLS + mislead(( Ygritte ),( 1 )) - ( protect() )]),COLS)]){
	ROWS
};
	( ( ( TABLE[0.83][mislead(Jon + COLS * COLS,bar(-0.68,mislead(-Ygritte,( -( ( 44 - x / COLS ) ) ))))] / -88 ) ) )
}
var Arya = ROWS
def TABLE[-980.99][k] {
	ROWS;
	Jon -= ( -rule(520.461) );
	COLS + ( --Arya )
}
def TABLE[( x )][j] {

}
var Sansa = bar(dog)
assert betray(rule(ROWS + ( 0.5 - -901 ) - --( --Jon ) - protect(( ( ( --1 ) * TABLE[bar(Hodor,( -0.71 ) / ROWS)][Jon] ) ),TABLE[0.27][---TABLE[( betray(-55) )][TABLE[-25][bar()]] - -0.38 + -Arya]) / ( TABLE[TABLE[COLS][ROWS]][-0.97] * ( TABLE[-ROWS][protect(Sansa - 0.83,COLS + Ygritte,Ygritte) * ( TABLE[-780.455][-dog] ) / --TABLE[-83 - bar()][----foo(( TABLE[-( ( Ygritte ) - mislead(dog,( ROWS )) )][( ROWS )] ),--bar(--COLS,Sansa,Sansa * ---1 / x - y * -0.14) + foo(-ROWS * 720.82) * 51 + TABLE[TABLE[( Hodor )][( -0.97 - 27 + -1 )]][Arya]) * ( -TABLE[x][( COLS )] ) / rule(dog,betray())] * bar(( ( ( x ) + betray(Stark) ) ),x,y)] ) )),( -( ROWS ) + Sansa )) : "Fear cuts deeper than swords."
def TABLE[--41 - Sansa][k] {
	Stark /= protect(-59,COLS,protect(Jon,betray(),rule(TABLE[-TABLE[x][COLS]][-63],-bar(Stark - foo(dog,bar(( ( -51 ) )))))));
	Sansa /= COLS;
	if(mislead(-COLS,ROWS / -0.32 + ( ( -140.821 ) + -1 ) + ( -COLS ) - Stark)){
	if(COLS){

};
	Jon /= --Jon
}
}
def TABLE[TABLE[-0.52][ROWS]][i] {
	if(( -0.45 ) + Ygritte){
	Ygritte += x;
	bar()
};
	x -= ROWS
}
var Arya = destroy(Arya,( ROWS ) - -rule(( -710.6 / ( dog ) ) - -790.573))
def mislead(dog,Sansa,Arya){
	y /= -( ( rule(Arya) ) ) * ( y / ROWS ) + ( --protect(COLS,betray(COLS,TABLE[ROWS][Jon])) );
	destroy(x,Jon);
	Hodor += -destroy(-destroy(( COLS ),-28) + bar(( -110.885 ),-rule(dog,-1,1 + Hodor - --destroy(-0.39,-21 - ( x )))))
}
def bar(Ygritte,y){
	TABLE[47 * rule(-0.68,121,( bar(Stark,-mislead(( ( Stark ) ),Sansa,18)) )) - ( ( Jon ) * 0.78 ) * ( -betray(99) ) / 1 * COLS][-foo(-( ( Arya ) ))]
}
def TABLE[bar(COLS)][k] {
	if(rule()){
	dog += destroy(( ROWS ),( ROWS ))
} else {
	if(-1 / --TABLE[y][TABLE[-COLS - TABLE[-( ( -ROWS - Hodor ) )][bar(TABLE[betray(( Ygritte / -Sansa ),-560.345,( -bar(--0.14) - 1 ))][Hodor],TABLE[bar(ROWS,COLS,ROWS)][-77])]][-18]]){

} else {
	Jon * -30
}
}
}
def TABLE[betray(rule(( protect(TABLE[foo(COLS,y)][( ( TABLE[( -( --1 ) ) * Hodor - 0.89 + -89][-Hodor / bar(bar(710.669,TABLE[-0.35][Hodor],( 0.35 )),( -x ),( ROWS )) + 150 / 0.56 - ( 68 )] ) )] / -0.58 + -Sansa) )),-Sansa - ROWS,mislead())][k] {

}
var dog = ( ( 370.121 ) / ( ROWS ) )
def TABLE[0.52][j] {
	( ( mislead(mislead(y,TABLE[-TABLE[Hodor][-( ( ( -0.99 ) ) )]][COLS]),( 250.3323 )) ) )
}
assert ( destroy(COLS,-( ROWS ) / -0.21) ) + -100 : "Fear cuts deeper than swords."
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = -destroy(x,Arya,bar(-770.0749,TABLE[Stark / Hodor][COLS]))
var Sansa = bar(COLS,COLS)
def TABLE[-( protect(COLS) )][j] {
	if(x){
	if(Sansa){
	Hodor += COLS
} else {
	-1;
	if(mislead(protect(ROWS,protect(Jon,64)) * Ygritte,53)){
	( --rule(940.797,COLS) );
	if(54 - ( protect(--Ygritte) ) / ( -0.93 )){
	( y * -Arya );
	Stark
};
	( ( -dog ) )
} else {
	Sansa /= -0.13 - y * Stark;
	--COLS / ( betray(ROWS) )
}
};
	ROWS / ROWS
} else {
	Jon /= Hodor;
	10
}
}
def foo(){
	Stark += x;
	if(( bar(( foo(dog,-70.06) ),88) )){
	y /= -( dog )
} else {
	foo(-790.04,betray(Arya,-65),-76);
	x *= ( Arya )
}
}
assert Jon : "Nothing burns like the cold."
def TABLE[Sansa][j] {
	ROWS
}
def TABLE[( Stark )][j] {
	foo(foo(rule()),Stark)
}
def mislead(dog,Jon){
	Arya /= ( ( ROWS ) ) / TABLE[-480.7][protect(bar(Hodor),( -TABLE[ROWS][TABLE[-COLS][-86]] / ( -( -foo(13,-0.06 / --Hodor + bar(-betray())) / Ygritte ) ) ))];
	y
}
def TABLE[-99][i] {
	-0.21 / -0.15;
	if(--( -betray(-( ( ( mislead(mislead(betray(( 0.75 )) - ( 130.92 ) / --Arya) / bar(( ( -45 + --7 * ROWS + ( COLS - rule(( destroy(dog) ),-mislead(( 350.66 )) * --COLS,TABLE[mislead()][--TABLE[COLS][0.66] + dog]) / -0.74 ) / Arya ) / ( ROWS * TABLE[rule(COLS,ROWS)][-destroy()] ) / -740.941 ),-0.29),Sansa) ) ) )) + --430.811 - TABLE[destroy(y)][x] )){
	y
} else {
	if(COLS){
	-( -16 ) * -destroy() - 0.06;
	foo(TABLE[dog][-1],protect(970.616,protect(-ROWS,-1 - ROWS,mislead(-0.82 - 0.06,dog + 0.14)),0.36 - mislead(destroy()) / Sansa + x))
} else {
	--1 * Hodor / -28;
	Stark /= mislead(Sansa / x)
};
	ROWS
}
}
def TABLE[rule(--COLS * Stark,Stark)][j] {
	if(-1){
	x += 0.94
} else {
	if(bar(dog) - 0.13){
	dog -= --1;
	x
} else {
	bar(1,0.28,530.6 / ( ( -300.4 ) )) + ( TABLE[( ( TABLE[( -protect(-Arya) ) * ROWS][COLS * -( -foo(rule(TABLE[0.97][TABLE[dog][ROWS]],( ( betray(( foo(COLS,rule(( x ),( ( ( 110.2 ) ) ),( -( destroy(-0.38 * dog,Hodor) ) - TABLE[34][-0.21] ))) ),27,910.6157) ) )),Ygritte,mislead(ROWS,Ygritte) * ( x )) / Ygritte ) + betray(Hodor,( dog )) - ( ( ( TABLE[-dog][-0.13 + 71] ) ) )] ) ) * Ygritte][( dog )] ) * -290.5
}
}
}
var Jon = betray(rule())
var Sansa = ( destroy(( ( ( dog ) ) ) * protect(),---44 + 0.8) )
var x = dog
assert TABLE[( -21 )][Sansa] : "Fear cuts deeper than swords."
def destroy(Jon,dog,dog){
	if(-23){
	if(x){
	if(-( -380.839 )){
	Sansa += COLS;
	mislead(Jon)
};
	( 0.44 * foo(Ygritte) );
	Arya *= ( ( ( foo(Sansa,( ( -0.05 ) + ( foo() ) ) - Stark) ) ) )
};
	if(mislead(( -Jon ),-0.48,-ROWS + y) / TABLE[protect(-1,-dog - COLS)][Arya + -ROWS]){
	-0.66;
	Ygritte *= COLS
} else {
	if(dog){
	Arya;
	-0.86
};
	Stark
}
} else {
	Sansa *= destroy(Ygritte,TABLE[0.02][-( ( TABLE[-( ROWS )][TABLE[-( COLS ) * -800.623 - 56][-0.97]] ) )]);
	( -1 );
	0.98
}
}
var Ygritte = ( protect(x,Arya) )
def TABLE[--Hodor][j] {
	if(Arya){
	( betray() );
	rule();
	if(-( bar() ) * y){

} else {
	if(TABLE[Stark][rule(---0.75,bar(-Ygritte) / ROWS)]){
	if(y){

} else {
	Arya
};
	-( -0.12 )
} else {
	COLS;
	if(-23){

} else {
	y /= Sansa;
	if(ROWS){
	Stark += --( -74 ) + Sansa;
	betray(( foo() ),--mislead(Arya) + destroy(--570.275,COLS,COLS) * -1);
	if(dog){
	bar()
}
}
}
};
	if(770.44){
	if(-( -ROWS / ( ( 0.08 ) ) )){
	( Ygritte )
} else {

}
}
}
} else {
	if(( COLS )){
	if(Jon){
	x -= Ygritte
} else {
	if(( COLS - bar(Stark) )){
	Jon /= 1;
	Sansa *= TABLE[TABLE[1 * Ygritte][( -Arya * ( Stark * ( ( Ygritte + foo(730.73,-ROWS) ) ) ) * -Sansa / y )]][Stark];
	if(( ( Arya ) )){
	x -= Hodor * -0.88 / COLS
} else {
	if(dog){
	TABLE[-1][( ( 270.55 ) )];
	ROWS
};
	-COLS;
	mislead(-1)
}
} else {
	if(-betray(( ROWS ),x + TABLE[0.17][-( ( -protect(-( ( COLS ) ) + protect(Hodor) - -( ( 4 ) )) * -( ROWS ) ) ) * x - ( mislead(destroy(ROWS,betray(protect(Jon)),Stark) - --Sansa) )],TABLE[destroy(COLS,Stark)][betray()])){
	x
} else {
	Arya -= Stark
}
}
}
}
}
}
def TABLE[ROWS][i] {
	if(x){
	Sansa += --Ygritte
};
	dog += -TABLE[-TABLE[( 70 )][-TABLE[ROWS][x]]][( 640.8448 )]
}
var x = Hodor
var Jon = -200.1
def TABLE[protect(73)][i] {
	if(-mislead(COLS,---0.32,COLS) / ( ( ( ( -Stark ) ) - Jon / ( ( ( foo(dog / x) ) ) - --68 ) + ( dog ) ) - ( Stark ) ) * ( mislead(-22) ) * TABLE[-370.6808][-27]){
	y -= 0.7
};
	Stark /= ( mislead(protect(COLS,310.2,( -mislead(x * COLS,--COLS + -rule()) )) * protect() / ( -( ( dog ) ) ),COLS) )
}
assert Sansa : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(Jon,Ygritte){
	if(-0.59){
	( -0.4 );
	0.23
};
	Sansa += ( foo(-( -TABLE[COLS][( foo(ROWS,bar(x,TABLE[TABLE[0.43][TABLE[foo(940.18)][destroy(destroy(rule(),TABLE[( Stark )][-Jon + ( ( Sansa - Sansa ) ) * ( rule() )],TABLE[54 / foo()][dog]))]]][-TABLE[TABLE[COLS][protect(COLS,-TABLE[bar(Hodor,1,( Sansa ))][COLS])]][-0.54]]),bar(rule(foo(( 60 ),-0.73) - destroy(-( COLS ) - ( ( -0.44 ) ) - Arya,-destroy(( destroy(betray(TABLE[ROWS][mislead(-82 / ( ( 0.06 ) ),bar(----1 - rule(-y + 79)),COLS)]),destroy(-0.72)) )))) / -mislead(-( -1 ) + ROWS - rule(TABLE[-y / destroy()][foo() * ( Jon )] - rule(betray(--880.768 * -foo(),-0.94),-destroy(--( ( destroy(bar(TABLE[ROWS / 0.89][-ROWS],-0.47),-0.94) ) ) - ( Arya ),-0.99 / --0.43),( betray(( TABLE[-0.14][foo(--0.22,bar(--ROWS - ROWS,protect(Hodor,---( -59 ) + --( -TABLE[-( ---COLS )][COLS] ) - 1 / x - -70)))] )) )) + TABLE[61][-Hodor],COLS)))) )] ),-3,TABLE[Jon][Jon]) - ( ( foo(ROWS,( protect(COLS - foo(),ROWS) )) ) ) * dog )
}
def protect(Arya){

}
var Ygritte = ROWS
def foo(x,dog){
	20;
	Arya /= TABLE[( 83 )][( TABLE[-( -280.281 ) + -Ygritte][( -( ( ( x ) * betray(ROWS) ) ) / 17 * --1 + 92 / TABLE[0.82 + -( -0.35 )][protect(( betray(-bar()) ) * ( TABLE[Ygritte / COLS][( foo(( ROWS + -TABLE[8 - COLS][Hodor] / ( ---foo(TABLE[COLS + destroy(mislead(Sansa,foo(( ( COLS ) ),-dog,TABLE[Arya][Stark]) + ROWS,bar(ROWS,ROWS)))][COLS - -COLS - --41 + ROWS * -( betray(x) - dog ) * ( ( ( -0.82 + ( rule(( ROWS ),-15) / TABLE[-( destroy(Hodor,Hodor) )][mislead(COLS)] - bar(Sansa,COLS) ) / -8 / ( 540.07 ) - Hodor ) ) ) + -( 0.65 ) * 0.62 / Jon],( -0.31 + betray() ),( ( --( ROWS ) ) )) ) - COLS ),-1) )] * ( -y ) ))] / foo(Sansa,--y / TABLE[x][TABLE[mislead(89,( 4 ),betray(Jon,-( mislead(( bar(x,( -91 )) ),( bar(TABLE[-81][ROWS]) ),COLS) ),-82) * 41)][Sansa]]) - ( TABLE[Jon][-destroy(-betray(x + bar(( Stark ),Hodor) + -COLS,( 0.66 ) / 0.24,-Ygritte - betray()) * protect(8,( -67 )))] ) )] )]
}
def bar(Arya){
	protect(( y ),bar());
	if(-60){
	if(( Arya )){
	dog *= -Stark
} else {
	TABLE[-0.49][( -betray(1) )]
};
	if(betray(rule(foo(),--foo(( ROWS ),TABLE[protect(0.77,COLS + -( Arya ))][( ROWS )],0.35),-mislead(( --1 )) * ROWS),( ( mislead(-30,protect(ROWS,rule()) - COLS) ) ),( Sansa * ( 0.81 ) / destroy(( protect(x,( -0.25 + foo(dog) ),490.9 * betray(dog) - dog) ),-ROWS,-0.06) ))){
	TABLE[Arya][880.064];
	if(-bar(( ROWS ),-0.35)){
	if(TABLE[protect(Arya,40,COLS)][-0.75]){
	rule(-560.99,-Sansa);
	if(( -0.26 )){

} else {
	y /= Arya * ( Arya / foo(( ( -330.4 ) ),betray(mislead(( ( -( -67 * Stark ) ) )),-rule(Sansa,COLS),mislead(Arya) - Arya)) ) / TABLE[830.796][-62] - --mislead(--48) / TABLE[x][-0.79] * Stark;
	if(foo(rule(11,betray()))){

} else {
	TABLE[Hodor + -dog][destroy(-72,0.17)];
	-1
};
	dog
}
};
	if(Jon){
	--78 * ROWS - -bar()
} else {
	Hodor -= COLS
};
	Ygritte /= ( 0.53 )
}
}
} else {

}
}
def protect(Stark,Hodor){

}
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ROWS : "One can not simply parse himself"
assert ---76 - TABLE[ROWS][Stark] : "Winter is coming"
def protect(Arya){
	if(TABLE[-( 0.56 ) * -ROWS - -1 - ( -0.6 * 1 )][-1 / bar(47,-TABLE[betray(destroy(Arya + Sansa,protect()))][-( ( -TABLE[-47][destroy(x,protect(( Arya )),-protect())] ) )]) + -Jon]){
	if(destroy(COLS,---( -0.07 ))){
	Sansa + bar(rule(x,rule(( -TABLE[1 - dog - foo() + ( -63 ) * betray(-( destroy() )) * COLS / -300.3 + COLS + ( Arya ) * ( ( ( --16 * -510.19 * TABLE[ROWS][foo(( mislead(150.5821,COLS) ))] ) - ( ( ( x ) * COLS ) ) / ( TABLE[TABLE[foo(Sansa)][Sansa]][protect()] ) ) / -y )][--0.45 / -ROWS] ),Stark / -Ygritte / Sansa - ROWS)),( COLS ))
}
} else {
	if(Hodor){
	0 - -( ROWS ) * -270.3 + ( Hodor ) - ( destroy(( COLS ),betray(Stark)) )
}
};
	Arya
}
def TABLE[x][k] {
	y -= Arya;
	if(( betray(( -0.12 ),destroy(( Sansa + ROWS ),-destroy()),-1) ) - Jon){
	y *= COLS;
	dog
}
}
def foo(Jon,Ygritte){
	34;
	( -( ( 180.624 ) ) )
}
def protect(Hodor,Stark){
	if(COLS){
	0.39;
	if(-260.9){
	Hodor += mislead();
	if(-Hodor){
	x *= ( -1 - COLS )
} else {
	dog *= -bar(bar(800.374,270.06,( Hodor )),ROWS)
}
} else {
	Arya -= bar(rule(COLS,Arya + COLS)) + COLS;
	TABLE[-TABLE[( dog )][Stark - COLS]][-0.92];
	if(TABLE[ROWS][-mislead(-TABLE[Sansa][( betray(COLS + COLS,( betray() )) + --( -69 ) )] - Arya)] - ( Ygritte )){
	if(ROWS + ( -Stark / 860.4911 / protect(bar(bar(-x,( betray() ) - ( COLS )) / -1),Stark) * ( ( -81 ) ) )){
	Hodor -= -25
};
	betray()
} else {
	Arya *= -( ( -35 ) * ROWS )
}
};
	if(destroy(-bar(( protect() ),--( ( betray() ) ) * TABLE[-COLS][dog] / -Hodor,bar(-0.36,TABLE[protect(TABLE[410.786 / bar(-protect(mislead(Arya,bar(protect(( -COLS ),dog),ROWS),-bar(---73))) / 1)][-dog])][-0.66] / rule(-2 * destroy(ROWS),82))) * mislead(TABLE[COLS][-Hodor],COLS - COLS / betray(COLS,-dog)))){
	Ygritte -= 1 + -mislead(foo(590.792 / Arya)) / foo(betray(( foo(destroy(( dog )),COLS,( ---0.89 ) - ( 0.12 )) ))) + TABLE[( mislead(-( destroy(( bar(-TABLE[( ( rule(bar(foo() - ( -( destroy(COLS) ) ),Hodor,1),Hodor) ) )][-0.81],-( Stark ),Stark + -( y )) )) ),0.77) )][( ROWS + TABLE[Hodor][1] - -( -0.97 - x ) )] / ( ( COLS ) ) - ( ( x ) ) - -1;
	if(-Ygritte){
	y /= TABLE[COLS][-30];
	if(TABLE[TABLE[1][rule(1,TABLE[foo(-----0.55,-ROWS,Hodor)][-620.1304])] - ( 20 / ( ( bar() / TABLE[-( -95 )][-TABLE[COLS][( protect(( -( ( -1 ) ) ) / COLS) ) * ( mislead(Sansa - rule(Arya) + ( ( ( 0 ) ) - -1 )) )] + 0] * Arya ) / ( Arya ) ) ) * COLS][mislead()] - Hodor){
	if(-89 - COLS){
	if(( -1 )){
	Ygritte += -0.34
};
	if(ROWS){

} else {
	57 / mislead(bar(-Sansa),Hodor);
	mislead(( x ),--( protect(Jon,rule()) )) * mislead(TABLE[-0.77][COLS])
}
};
	if(TABLE[--0.02][Arya - ( ROWS )]){
	x /= 320.56 * ( -( -ROWS ) * ( -mislead(29,TABLE[( -( --61 ) - COLS )][TABLE[mislead(Jon,( rule(foo(),-ROWS) ))][-TABLE[protect(--x,( ( ( betray(Hodor,( dog ) / foo(protect(--57 + mislead(-0.72,( rule(-12) )) - rule(TABLE[( ( Arya ) )][-COLS])),mislead(foo(),ROWS,-( Stark )),ROWS) / ( ( -dog ) ),0.96 / -( Stark )) ) / x ) ))][mislead(betray(),Stark,--0.63)] - TABLE[y][-COLS * COLS] + -Arya]]) ) )
};
	ROWS
} else {
	if(-31){
	if(ROWS){

};
	-Hodor * -94 + mislead(protect() * foo(Stark),-( 22 )) + COLS
}
};
	y *= foo(protect() + -1 * ROWS,foo(TABLE[( rule() / mislead(( ( -58 ) )) )][-0.51]))
} else {
	x -= 0.77
}
} else {
	dog + Ygritte
}
} else {
	y /= -ROWS;
	destroy(COLS,Jon,( Arya ));
	0.86
};
	0.83
}
def betray(dog,Ygritte,Ygritte){
	if(destroy(-440.43 + COLS)){
	if(0.79){

}
} else {
	if(protect(-0.37,destroy(Jon - ( ROWS / -rule(Stark / -0.57 + ( mislead(-destroy(-72 - -Jon / -foo(-foo(-ROWS,-protect(ROWS,ROWS * -1) - y),y,COLS),0.48 / 25) + ( Stark ) + Arya) )) ),---COLS),( 22 ))){

};
	( COLS );
	if(Ygritte){
	if(-6){
	Ygritte += -0.42
} else {
	betray(-0.13,( ROWS ),-0.83 - ---Jon * ( ( TABLE[( bar() ) * 0.52 - ( Arya / Sansa )][COLS] ) ) * Hodor);
	( betray(bar(rule(foo(-x) * ( 0.43 ))),bar(--11),53) );
	if(bar(x * foo(Jon * ( destroy(( 94 * x ),-( --( -78 ) )) * TABLE[( 17 )][( foo(( dog + y ),-0.18) ) / ROWS] ))) + 420.6){
	if(( bar(Sansa * bar(Jon,ROWS / ( ROWS ))) )){
	if(rule(( -13 ),protect(Stark / ROWS - TABLE[ROWS][destroy(( protect() ),( destroy() ),-1)],protect(ROWS,0.97)),TABLE[-1][( -91 - -0.99 )])){
	betray(31)
}
}
} else {
	Hodor + dog;
	betray(--65,-0.8);
	( Arya )
}
};
	if(-13){
	bar()
}
} else {

}
};
	if(-890.14 - ( -5 * Stark )){
	if(TABLE[foo(y,ROWS)][( ( ( -TABLE[Sansa][( ( ( ( ROWS ) * destroy(( Arya ),-0.09) + --bar(--COLS - ( -0.88 ),dog) ) ) + COLS ) * ( -22 )] ) ) * -TABLE[-betray(12 - ROWS,mislead(protect(TABLE[y / COLS][Stark],( ( rule(foo(rule(-rule(0.6))),-1) ) ))))][Hodor] )]){
	if(-Hodor + Arya){
	Arya -= foo(--0.37,foo(Ygritte,Sansa) + ROWS + protect(x) * rule(35))
} else {
	dog += -COLS;
	Jon += betray(Hodor) + ( ( 0.01 ) )
};
	if(( COLS )){

}
}
}
}
def TABLE[y][j] {
	if(ROWS){
	( -390.68 );
	-300.7
} else {

};
	Hodor -= Hodor
}
assert y : "Nothing burns like the cold."
def TABLE[betray(bar(COLS)) - -4][k] {
	Hodor /= mislead(--1)
}
def TABLE[COLS][j] {
	Jon += foo(foo(),--0.94);
	Ygritte
}
assert x : "Winter is coming"
assert Sansa * 0.68 : "One can not simply parse himself"
def betray(){
	( -1 );
	Sansa
}
def destroy(Sansa,Stark){

}
var Arya = 1 * -Sansa * ---bar(protect(( TABLE[61][( ( ( TABLE[protect(destroy(dog,( --1 )),TABLE[foo(Ygritte)][ROWS],mislead(rule(Ygritte,22,Hodor)))][COLS] ) ) )] ),Stark),( ( COLS ) ))
var Arya = --0.97
def foo(dog){

}
var y = ( 47 )
var Hodor = -0.11
def betray(x,y,Jon){
	ROWS
}
def foo(){
	if(bar(Hodor)){

} else {
	Sansa;
	if(COLS){
	Stark /= -17
}
}
}
var Hodor = 30
def TABLE[rule(ROWS)][k] {
	-0.29;
	Stark *= -440.7623
}
var y = Arya * Ygritte
assert ( -670.0422 + 0.38 ) : "One can not simply parse himself"
var Jon = 1
def TABLE[Arya][j] {
	( Ygritte );
	-0.32 - bar(( ROWS ))
}
def TABLE[destroy() + 0.97][j] {
	Arya;
	-46 - ( rule(( -1 )) + Jon ) / 46
}
def foo(Jon,Hodor,Arya){

}
assert ROWS : "Nothing burns like the cold."
assert -y : "Nothing burns like the cold."
var y = COLS
def TABLE[Hodor][i] {
	if(COLS){
	if(TABLE[y][-foo(( mislead() ))]){
	if(COLS){
	Stark += ( TABLE[COLS + --( rule(Sansa,protect(-( -64 ),--( ( foo(( TABLE[67 / -TABLE[-y][Sansa] - ( -ROWS ) * Arya][rule(610.8363,( COLS ),ROWS)] )) ) - foo(x) ) - protect(Hodor,-75)),--( ( protect(-( 0.76 ) * -TABLE[-Sansa][bar() + dog] / COLS * rule(( -Sansa ),( ( --600.174 ) )),bar(-TABLE[-TABLE[-( ROWS )][betray(1)] - Arya][x],0.08) - ROWS) ) * ROWS ) * 80) )][-1] ) + Sansa;
	Arya *= Hodor
};
	y /= Jon
} else {
	dog;
	Arya
};
	Stark /= -x
}
}
var dog = bar(0.06,betray(-mislead() + y,58,0.71 / --0.21 + bar() * ( 40 ) * betray(Hodor)) / Jon)
var Hodor = ( ( Stark ) )
assert destroy(---( COLS ),COLS) : "Winter is coming"
assert Sansa : "Nothing burns like the cold."
def TABLE[( --1 )][j] {
	y -= ROWS;
	Ygritte
}
def TABLE[foo(ROWS,x) - -88][k] {
	dog += -0.37 / y
}
assert COLS + --72 * --ROWS - Hodor * -96 : "One can not simply parse himself"
var x = ( ( betray() ) )
assert 0.33 : "One can not simply parse himself"
def TABLE[610.8077][j] {
	if(31){
	destroy(TABLE[( betray(-( ( COLS / ( dog ) + Jon ) )) )][mislead(( --1 - ( dog ) + mislead() ),( TABLE[-mislead(TABLE[protect(protect(),-----0.15 * TABLE[ROWS][ROWS] - 88 - ( TABLE[Hodor][Hodor] ) - ROWS - ROWS)][( ( --0.1 ) )]) * ROWS / Hodor / ROWS + ( Jon )][dog] ))],( x ) / ROWS,mislead(( -destroy(TABLE[TABLE[Arya][--0.65]][ROWS / Sansa]) / y ),( -990.8902 * COLS )));
	if(ROWS){

} else {
	foo(-( -bar(foo(( bar(-Hodor / COLS) ),Ygritte,COLS)) ),TABLE[--( betray(Arya,--0.36,COLS + ( foo(ROWS,dog / -19,TABLE[-( ( Sansa ) )][ROWS]) / bar() )) ) - ( mislead(destroy(( 790.267 ),-5)) )][1]);
	Ygritte += foo(-21,-1) + 1
};
	if(( ( -COLS ) )){
	dog /= ROWS;
	if(betray(-0.89)){
	Sansa += COLS;
	TABLE[Ygritte][ROWS]
};
	if(--78){
	x -= COLS
} else {
	Stark *= Arya;
	if(-COLS){
	-34
}
}
}
} else {
	if(betray(1)){
	if(-ROWS / dog){
	ROWS;
	Jon /= ( COLS );
	dog /= ( ( -0.87 ) )
} else {
	----1
}
}
}
}
def TABLE[-foo()][i] {

}
var y = Sansa * TABLE[( Sansa )][-210.86] / TABLE[-( -( betray(-0.76) ) )][TABLE[destroy() * -( TABLE[-780.71][-57] )][( TABLE[( y )][Stark] )]] / ROWS / y
def destroy(dog){
	x /= rule(( Stark ),COLS) + ( -protect(( ( -dog ) )) ) / ( COLS )
}
var x = 65
def rule(Hodor){
	Jon -= Stark;
	if(-0.88){
	-( TABLE[( ( Hodor ) )][-COLS] );
	( Ygritte );
	x /= COLS
}
}
var y = ( 99 )
def betray(Ygritte){
	Sansa
}
def TABLE[-1][i] {

}
def rule(Arya,Sansa,x){
	-0.54
}
def mislead(Arya){
	Sansa += COLS;
	if(COLS){
	x -= ( -mislead(-mislead(( bar(bar(( mislead() + Ygritte )),TABLE[Hodor][( TABLE[-0.93][( ( -----0.21 / Stark + TABLE[Jon][betray()] ) * 1 )] )],49) + COLS ),Sansa,protect(x,( -1 - 98 / ROWS )))) * destroy(( ROWS * betray(COLS + bar(-51),COLS) / -COLS ) / ( ROWS ) - -Jon,( -81 ),0.03 + ( TABLE[foo(-140.2,x - 940.44,TABLE[foo(betray(protect(0.57),Stark),protect(TABLE[betray(-1,Hodor)][-bar(( ( -0.1 ) ),43)]))][-( 930.34 ) - 0.19])][TABLE[-91][( ( dog ) )]] )) );
	Sansa /= ( -( betray(ROWS / ( mislead(Ygritte,COLS,-( y )) )) ) ) - protect(TABLE[mislead(ROWS)][y],foo(64) + TABLE[( -13 )][-Arya])
}
}
assert ( ( -9 ) ) : "Fear cuts deeper than swords."
assert COLS : "What do we say to the Lord of Death?"
var Hodor = -0.66
def TABLE[( -betray(destroy(destroy(bar(( -1 ),ROWS) * -57,foo(0.01)),( -90 ),0.05),Stark,Arya) - Arya )][j] {
	destroy(-protect(0.15),-51);
	destroy(y,1);
	COLS
}
def bar(Arya,Arya){
	Sansa;
	x /= -520.91;
	Ygritte /= mislead(-63)
}
var Ygritte = ROWS
def TABLE[--300.35][j] {
	if(y){
	y += ROWS;
	if(---rule(-30,mislead()) - -rule()){
	if(COLS){
	dog += protect(-rule(Stark));
	dog *= ( foo(-1,( ( 1 / ( ROWS ) * x * ROWS ) ) + -destroy(Sansa / rule(0.54) * -63) - -( x )) );
	if(-destroy(( -12 ),ROWS + bar(-99))){
	if(-Jon * -protect(COLS,( COLS ))){

};
	Hodor /= bar(730.616,dog,( bar(( ( Arya ) ),betray(COLS,( -0.47 )) + 1,-mislead(-TABLE[ROWS][( COLS - ROWS ) * protect(rule(betray(0.05,-( ( ( ROWS ) ) ))),ROWS * COLS,--96)]) + ROWS) ))
}
} else {
	Hodor *= Stark
};
	Hodor /= x
} else {
	dog *= -0.28
}
};
	y += ( 911 );
	Ygritte /= 0.46
}
var Arya = -99 - Sansa + protect(0.24,77) - protect(TABLE[( -40 )][Sansa])
assert bar(protect(-TABLE[rule(Jon,destroy(destroy(foo(Jon,COLS)),x + ( 770.21 * COLS )))][( 0.02 )]) - -( COLS / destroy(ROWS,protect()) )) : "One can not simply parse himself"
assert Arya : "Nothing burns like the cold."
def rule(Hodor){
	protect(-Stark,0.97,mislead(TABLE[Sansa][Jon / -( mislead(-41) )]));
	Arya *= -TABLE[betray(( -Stark - Sansa ),-30,foo()) - TABLE[( 49 )][-TABLE[-( -55 ) * TABLE[( -1 + TABLE[bar()][53] )][bar(betray(COLS,-0.65))]][-betray(0.63)]]][---1 - ROWS * mislead(--( Jon * rule(foo(0.7,--Arya * rule() + ( 29 ))) ),-0.25,betray(( TABLE[bar(( ( Jon ) ) * ( ( --Stark ) ) - COLS,Hodor - Jon,-( -ROWS * y ) + ( ROWS ))][betray(bar(TABLE[destroy(-Hodor,68)][rule(COLS)],-Ygritte,ROWS))] ),-x)) * mislead(foo(rule(-56),43,-1),-Ygritte / Ygritte - -( 0.66 ) + ( ( 0.81 ) ) + bar(( destroy(ROWS) ),-COLS,-0.17) + ROWS)]
}
assert COLS : "Fear cuts deeper than swords."
def foo(dog){
	-0.63;
	if(( -ROWS ) + Arya){
	0.83
} else {
	if(( rule(-( -86 )) )){
	Sansa *= ( -( ROWS + ( Hodor ) - x ) ) + y;
	-COLS
} else {

};
	x *= rule()
};
	betray(( foo(-rule(COLS + rule(protect(-mislead(betray(1 - -Stark) + ROWS),( Arya ),( rule(-0.5) ))) / 0.85,ROWS)) ) - betray(-( protect(ROWS,( ROWS + ROWS / ROWS )) ),bar(--Hodor,y)),-11)
}
assert mislead(0.17 - -( dog ),COLS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = y
var x = foo()
var x = foo(ROWS)
def TABLE[Arya][k] {
	Jon;
	Ygritte += TABLE[betray(ROWS,-bar() - --mislead(-0.94,destroy(dog,1)) - mislead() * 1)][ROWS]
}
def TABLE[-Jon][j] {
	( ( ( ( x ) - destroy(( ( COLS ) ) * 0.37 + Hodor,( ( TABLE[betray(Sansa,ROWS)][-ROWS] ) ),destroy(-( --protect(betray(betray()),( Stark )) ))) ) - COLS ) - protect(Stark,( ( --42 / COLS - bar(mislead(ROWS)) ) ),y) + rule(betray(-Arya)) * destroy(TABLE[-ROWS][Hodor]) );
	( TABLE[( TABLE[62][ROWS] )][x] )
}
var Stark = COLS
def mislead(dog){
	Stark /= ( 0.87 );
	if(( ( -COLS ) )){
	foo(-( bar() - Sansa - protect(x / mislead(ROWS,( protect(Stark) + ( ( bar(protect(y),( ( COLS ) )) ) ) - ROWS + dog * -26 * protect(-78,-( ( betray(( mislead(30.02,y) ),y) ) ) + 34 / -9 - destroy(Hodor),betray(TABLE[-0.78][TABLE[0.38][COLS]])) + --1 )),TABLE[-( Ygritte )][Hodor]) ))
}
}
assert destroy() : "One can not simply parse himself"
def betray(Arya){
	Sansa /= Stark
}
var Arya = Arya
def betray(Jon){

}
assert mislead(y) : "Nothing burns like the cold."
def protect(Sansa){
	if(-( ( -rule(-0.01 * -Hodor,( -x )) - ROWS ) + -0.36 )){
	Arya
};
	Arya -= 1
}
def foo(y,Sansa){
	Arya /= -1;
	-( rule(( foo(COLS,-0.65) ),y) ) / dog
}
assert mislead(-Jon) : "Nothing burns like the cold."
def mislead(dog){
	if(Stark){
	if(ROWS){
	Stark
} else {
	if(( rule(40,-660.22 * ROWS) )){
	350.23;
	if(-mislead(y)){

}
} else {
	if(destroy()){
	Jon *= ( -mislead(( Jon ),( y ),y + -destroy(Jon,mislead(( -0.8 ),mislead(protect(ROWS,160.67,-dog),-260.54 - foo(Jon),( y ) + ( ( -0.84 * -72 ) ))))) );
	x /= betray(( Sansa ) / 1,TABLE[bar(310.6)][ROWS] + dog);
	rule(Ygritte,Sansa)
} else {
	( -Sansa );
	y *= --Hodor
}
};
	Stark += -0.42
};
	if(-ROWS / -0.87){
	if(-( -rule(-y,-y,( ROWS )) )){
	Jon /= -0.42;
	if(x / rule(ROWS + Stark / bar(( --destroy(-ROWS,( mislead(TABLE[( COLS )][protect(TABLE[TABLE[-( -0.89 ) - protect(Arya,-( 34 ) * -53)][22]][y])],rule(Ygritte,TABLE[rule(-Arya * -ROWS,( ( 74 ) ),( TABLE[-( -ROWS )][ROWS] / --mislead(( TABLE[bar(( TABLE[-bar(-1,protect() + 1 / ( dog ))][62] ))][-TABLE[Sansa / protect(-( mislead(Ygritte) ))][23]] )) ))][68 - TABLE[74][-1]])) )) - --3 ),Ygritte),dog)){
	protect(( -COLS ));
	Sansa *= TABLE[-COLS + -0.66][( ROWS / Hodor )]
}
};
	Ygritte += -500.3;
	if(-71){
	( TABLE[-betray(1)][( Jon )] );
	Jon += -1 + -COLS
}
} else {

};
	if(-1){
	Arya += Sansa
}
} else {
	if(--Stark * Hodor - TABLE[betray(Sansa,COLS) / -protect(--protect(TABLE[( ( COLS ) ) * -0.36][( ( x ) + bar(-betray(protect(),--( ( dog ) ))) * bar(( ( Stark ) )) )],betray(-560.28,-42)),-Hodor + 8)][( -75 )]){
	if(1){

};
	if(COLS){
	Sansa += COLS
}
};
	Ygritte /= betray() / ROWS / -19
};
	if(-Ygritte / -0.62){
	ROWS;
	if(---( -destroy(( ( bar(( x )) + ( COLS ) ) )) ) + -370.3717 / betray(protect(0.73),0.1) - destroy(( 0.15 / ( betray(foo(),x / Jon,( -Stark )) ) ),mislead(( ROWS )))){
	if(( -COLS )){
	y += -TABLE[-( -Ygritte + 0.61 )][Stark]
};
	Sansa -= TABLE[-0.44][mislead(--53,Stark,( -0.36 ))];
	if(Arya - Sansa){
	if(TABLE[740.4][TABLE[Jon][-0.81]]){
	if(y + Stark){
	dog += ( protect(protect(bar(( -TABLE[( ROWS )][0.77] ),-protect(--16,Stark) * Stark),dog),mislead(COLS,bar(( COLS ) / ---480.75 / -10 + destroy(),Ygritte - ROWS - COLS))) ) * --0.1;
	Ygritte += TABLE[( ( COLS ) / ( -( --32 ) ) + 76 )][mislead()]
};
	foo(protect(Jon,rule(-46,28 + ROWS)))
} else {
	if(Arya){
	Jon *= --( 80.411 );
	dog += ROWS
} else {

};
	Ygritte -= ( x )
};
	-( -ROWS );
	Ygritte += ----64 + ( x )
} else {
	Jon -= -Hodor;
	if(Ygritte){
	Stark -= dog;
	dog *= Stark;
	if(Stark){
	Ygritte /= ( TABLE[ROWS][( mislead(ROWS,( Jon ),-830.32) )] );
	Stark /= ( rule(-dog) )
} else {
	-42;
	if(-18){
	Sansa
}
}
} else {
	dog *= -980.28 - foo(rule(mislead()) / 27,Arya);
	-0.62
}
}
};
	Jon -= betray(-foo(mislead(-( -71 ),11),-0.05))
} else {

}
}
assert COLS : "Fear cuts deeper than swords."
var Sansa = -dog * TABLE[-75][TABLE[dog][rule(rule(82),0.96,COLS)] * -( COLS )]
def TABLE[( Sansa )][i] {
	if(foo(-COLS)){
	if(COLS){
	if(x){
	if(( ( x ) )){
	COLS;
	-280.777
} else {
	if(Jon){

} else {
	Sansa /= destroy(-1,Sansa);
	-COLS;
	betray(-720.05,--39 / COLS / x)
};
	if(dog){
	dog *= ( 80 ) + COLS;
	-COLS;
	Sansa += -0.04
} else {
	Stark -= 0.27
}
};
	y *= -820.85
};
	y -= 0.38
} else {
	( foo(ROWS,( bar(Ygritte,destroy(rule(mislead())) / ( -foo(( Hodor ) / x,-dog) )) )) )
};
	x *= -1 - ( rule(ROWS + ROWS) * ( bar(-11,-0.65) * ( COLS ) ) )
} else {

};
	foo(88) - COLS
}
def rule(Hodor,Sansa,x){
	y += ( rule(-92,82) ) + 280.5585
}
def betray(Ygritte,dog,Ygritte){
	Ygritte += Jon
}
def destroy(Stark){

}
def TABLE[x][k] {
	-COLS / Arya;
	Ygritte -= ( betray(-71,-( 38 ) * ( 880.9373 )) )
}
var dog = ( bar(TABLE[protect(-x)][TABLE[( ( foo(y,Ygritte,x / bar(dog,COLS)) ) )][----( mislead(-59,-40) ) / -67 + ( 0.38 ) + foo() / COLS]],( rule(0) ) / -460.469) )
var dog = 0.79
assert ( ( Hodor ) ) : "What do we say to the Lord of Death?"
def TABLE[-0.38][k] {
	Arya /= ( COLS );
	if(( -( --( ( mislead() ) + -( 1 ) ) ) )){
	if(-ROWS){
	Ygritte
};
	rule(78);
	protect(bar(protect(-foo(ROWS)),-ROWS,ROWS))
}
}
assert -Jon : "Winter is coming"
def TABLE[Ygritte][j] {
	if(( ROWS )){
	0.13 - -( x ) / ( TABLE[bar(dog)][-9] )
};
	Ygritte *= betray(destroy(Arya,-( ( --( 18 / ROWS ) + COLS ) )),Hodor)
}
def TABLE[-protect(-TABLE[destroy(Arya,-x)][( ROWS )],protect(rule(--( Stark )),Hodor))][i] {
	if(( protect(TABLE[( TABLE[ROWS][COLS] )][protect(( foo(x) ) - -COLS,( ( ---x ) ),TABLE[-32][ROWS])],-COLS) * dog - betray(foo(1,foo(1,Jon,COLS))) )){
	y -= -910.7;
	rule(( ---Ygritte / ROWS ),dog)
}
}
def TABLE[protect(-dog)][j] {
	if(-0.09){
	if(protect()){
	Arya *= ( ROWS )
}
} else {

};
	-0.34
}
def TABLE[Sansa][i] {
	if(TABLE[bar(TABLE[ROWS][rule(-foo(( TABLE[betray(1)][destroy(Arya)] ),( -170.001 ) * --x + ( y ),ROWS)) + --Arya])][bar(Jon,Stark) - Stark]){
	Stark -= -rule(( ( bar(betray(-( rule(-0.55,betray(0.15,ROWS)) ),88 - --( -x ) * -ROWS),betray(foo(COLS) * -0.07,--( -dog ),foo(ROWS))) ) ));
	Sansa += ( TABLE[( ( COLS ) )][-( 1 - TABLE[Arya][x] * -COLS ) + -590.71 / betray() * foo(protect(COLS) + ( -60 / Ygritte ) - -( 60 ) * dog + Ygritte,( -59 - destroy() ))] )
};
	--1 + TABLE[( ROWS )][rule()]
}
def foo(Stark){

}
var Ygritte = -54
def mislead(){
	if(Jon){
	if(foo(( ( -( 1 ) ) * --580 )) + rule(( -59 )) / destroy(1,( 59 + ( ( -1 ) ) ),( rule(1) ))){
	dog += betray(betray(Stark,( -81 )))
}
} else {
	Jon -= 0.31
};
	if(-( -betray(( y )) ) + ( ROWS )){
	---0.28;
	Hodor /= -( ( ( TABLE[( ROWS )][ROWS] + COLS ) ) )
} else {
	if(protect(Stark,-( -y ) * Sansa)){
	-89;
	if(COLS){

} else {
	if(( rule(( 400.058 ),Sansa,COLS / -Arya) )){
	x;
	betray(( mislead(350.94 * foo()) ),Arya,Stark);
	TABLE[destroy(( TABLE[-40.9 - -730.429][( ( dog ) )] ))][y] - foo()
} else {
	dog
};
	betray(Sansa)
};
	if(1){

} else {

}
};
	x -= dog * 460.348
};
	Sansa += foo(--Ygritte + TABLE[( ROWS )][destroy(--( ( ROWS - bar(0.71 - -( Ygritte )) ) ) * COLS - COLS,dog) / --20.5 + COLS] - -0.52 - ( ( ( -5 ) / TABLE[Arya][-1] + -1 ) ) + COLS,0.01)
}
def mislead(dog,Arya){
	COLS
}
assert COLS : "Fear cuts deeper than swords."
def TABLE[-0.6 - -ROWS][k] {

}
def TABLE[( -1 )][i] {
	if(--Jon - x){
	if(dog){
	Stark -= -foo(--Sansa,x + Jon)
};
	ROWS * ROWS + ROWS - -( -protect() )
} else {
	-COLS
}
}
def bar(Sansa,Stark){
	Arya /= ( COLS / -COLS / COLS );
	if(-Hodor / ---0.02){
	if(( x - ROWS )){

};
	if(destroy(( ( --0.75 ) ),rule(TABLE[Sansa][-Ygritte]),( y ) / -11)){
	( x );
	y -= --COLS
};
	if(Stark){

} else {
	if(0.85){
	if(TABLE[protect(61)][Sansa]){
	rule(x + ( destroy(ROWS,-ROWS) ),destroy(--40.7)) / rule(-1,( ( foo(Arya - foo(-Sansa,destroy(-63,-1))) ) ));
	if(mislead(Sansa)){
	mislead(protect(( bar(( ( ROWS ) ) - TABLE[y][TABLE[-Jon][COLS]] / ( -Ygritte ) - protect(( x * -Jon )) + Hodor,COLS) )),( Jon ),300.29);
	protect(y);
	y += -1
}
} else {
	if(COLS){
	Arya *= 150.536 * -TABLE[betray(x,Jon)][( protect(( -( COLS ) ),mislead(ROWS)) / x )];
	if(Stark){

};
	if(-1){
	( ROWS / mislead(-0.23) );
	if(-0.62){

}
} else {
	Sansa /= Arya;
	if(-COLS / Jon - bar()){
	Ygritte -= betray(-1)
} else {
	protect(COLS,TABLE[Stark][ROWS]);
	Sansa + TABLE[( ( COLS ) )][ROWS]
}
}
};
	dog += 0.47
};
	if(betray()){

}
} else {
	if(COLS + -( -310.25 )){
	if(y){
	Hodor /= -99
};
	Arya -= Sansa
}
};
	( foo(-COLS,TABLE[-1][x + Arya]) )
}
} else {

}
}
assert -33 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = mislead(bar(0.71,ROWS))
def TABLE[( rule(Arya - y / ( Arya ) + -79,-( COLS )) )][j] {
	if(bar()){

} else {
	Sansa
}
}
def bar(Sansa,Sansa){

}
assert ---protect(Jon + -( ( 61 ) ) * -0.08 / mislead(TABLE[betray()][betray()],-54 / COLS) - Arya) : "What do we say to the Lord of Death?"
assert 0.68 : "One can not simply parse himself"
def TABLE[ROWS * -ROWS][i] {
	if(y){
	if(Hodor){
	rule() / -COLS + 1;
	if(destroy(destroy(-ROWS,COLS))){

} else {
	0.04
}
} else {
	Sansa /= Jon
};
	if(-x / -TABLE[ROWS][rule(ROWS,0.82,--1)]){
	if(-0.47){
	y += -41
} else {
	-14
};
	if(-Stark){
	if(destroy(COLS)){

} else {
	x += ROWS;
	if(protect(-1)){
	-0.91;
	TABLE[Arya][--( -COLS / COLS )]
}
};
	TABLE[ROWS][Arya]
} else {
	Ygritte += bar(( ( ROWS ) * -1 ));
	-ROWS
};
	if(-betray(betray(---Hodor,-43),( ( -37 ) ),protect())){
	ROWS + ROWS;
	if(90){
	if(-73){
	( -COLS );
	( ( 71 ) )
};
	if(dog){
	Hodor /= ( 0.92 );
	Jon += ( -65 )
}
} else {
	Jon -= -910.637 / TABLE[( destroy(-18,-mislead(0.87 - x,x),( ( protect(protect(protect() - --destroy(-( -0.08 )))) + ( Jon ) ) )) - TABLE[-45][-0.57] * -protect(-620.368) )][( x * ( -0.81 ) + 0.75 - -62 / ROWS / 0.74 )];
	Stark += ( ROWS ) / -COLS
}
}
} else {
	foo(-( ( TABLE[--COLS][( -560.13 )] ) ),-1)
}
} else {
	Ygritte + TABLE[-TABLE[y][Arya]][Ygritte];
	( ROWS )
};
	Jon += -0.58 + Sansa;
	Arya /= ( -79 ) - Arya
}
def TABLE[-1][j] {

}
def rule(Arya){

}
def TABLE[40][k] {
	--protect(-28 / rule(0 / Arya * TABLE[( ( COLS ) )][29],-bar(( ROWS ),bar(-Arya)))) + TABLE[COLS / -destroy(( -y ))][( COLS )]
}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-y / -betray(ROWS - ( Stark ),( Arya )) + Sansa + foo(-820.8)][j] {
	( 80.35 )
}
var y = Jon
def TABLE[destroy(destroy(-0.27,-1) + destroy())][j] {
	if(foo()){
	-0.05
} else {

}
}
def protect(Stark,y){
	bar(-( -0.92 / dog ) * TABLE[-( TABLE[COLS][rule(( COLS ))] )][ROWS]) / -( Arya ) * Stark + -( rule() );
	if(TABLE[84][1 * --90.99] - Ygritte){
	Stark /= 0.55;
	if(mislead(Stark)){
	dog -= ( y );
	Sansa
} else {

}
} else {
	Stark -= -Hodor;
	( TABLE[Jon][betray(COLS * ( y )) * -970.205] ) - -bar(-160.837)
}
}
def TABLE[86][j] {
	if(-betray()){
	Arya;
	if(( y )){
	Hodor *= ROWS
} else {
	Jon -= 5
}
}
}
def TABLE[Arya][i] {

}
def mislead(Hodor,y,Stark){
	x /= rule(protect());
	( ( y ) )
}
assert rule(destroy(),( y ),--45) : "Fear cuts deeper than swords."
def rule(){
	( 220.44 )
}
def TABLE[--TABLE[TABLE[87][Hodor]][-Hodor] + --COLS][k] {
	( -48 )
}
def betray(Arya,Sansa){
	if(bar()){
	24 * -Jon * -1
} else {

};
	if(dog){
	-ROWS
} else {
	if(dog){
	betray(betray(COLS),( TABLE[-destroy(24)][destroy()] * 0.18 ) + COLS - ( y ),Stark)
}
};
	dog
}
var y = rule(TABLE[x][destroy(mislead(destroy(-( Jon ) - ---Stark,y) + protect(rule())))],TABLE[-rule(10.706,-protect(dog,betray(-26 + Stark,mislead(ROWS))) + Arya / ( bar(820.9558) ))][-( TABLE[( 0.3 )][rule(y,( -( destroy() - ( y * ROWS ) ) ),Arya)] )])
def rule(){
	COLS;
	Sansa - ( -270.126 );
	Jon /= ( -0.29 ) * 35
}
assert -( mislead() ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(){
	if(betray(--COLS,y)){
	Ygritte += Jon - Ygritte - foo(220.128);
	-1 * Hodor / ROWS
}
}
assert TABLE[( ( ---0.35 / ( ROWS ) / betray(Stark,-( betray(y) )) ) ) * TABLE[COLS][-( ROWS )]][( COLS )] : "Winter is coming"
def rule(dog){
	-Hodor;
	Stark;
	y -= -34
}
var Sansa = destroy(-( Ygritte ))
var Jon = betray()
var y = -ROWS / --220.227
var Ygritte = mislead(-11 + Sansa,-rule())
def TABLE[dog][i] {
	if(( TABLE[-Hodor][1] )){

} else {

}
}
var dog = -0.5
assert -76 / ( ( rule(Sansa) ) ) + protect(71) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(){
	Ygritte *= -rule(ROWS) * COLS - 0.39 - 860.6511 * --ROWS
}
def rule(){
	ROWS;
	Jon *= ( -destroy(( -betray() ),( TABLE[( Jon )][TABLE[destroy(Stark * bar(-ROWS,destroy(Hodor) / COLS) - -880.51 + ( -destroy(-95,destroy()) ) / -y + COLS,--destroy()) - -17][dog]] ),bar(foo(-0.49 + rule(( rule() ),( -0.95 ),--0.32),( -Hodor )))) )
}
def TABLE[Ygritte][j] {

}
assert COLS : "Nothing burns like the cold."
def TABLE[rule(( ROWS ),TABLE[-550.5981 - -foo(Arya,dog) + ( dog - TABLE[TABLE[Hodor][-mislead(9,( mislead() )) - rule(TABLE[-mislead(---y)][Stark])]][( rule(Sansa) )] - -COLS )][--destroy(bar(-ROWS),--mislead(( COLS ),( ROWS + 0.72 )) - -rule(Stark) + mislead(rule(-betray())) * ( destroy(bar(protect(-rule(--ROWS + -110.391 / Arya) * mislead(( ( 44 ) ),-0.11 * ( Stark ) * COLS,-ROWS) + ( TABLE[COLS][Jon] ) / destroy(-240.049,x / -500.77) + 63 + foo(-TABLE[Sansa][( dog - -390.9 )],-COLS + -87))),-betray(( ( COLS ) ),( ( Jon ) )),Jon / TABLE[ROWS][destroy(-24 + -760.6849,ROWS,x)]) ))],( -64 ))][i] {
	if(Hodor){
	if(COLS){
	if(Ygritte){
	if(---bar()){
	Jon -= -y;
	if(-47){
	dog -= -59
};
	Stark /= ( 0.96 )
} else {
	if(-( Arya ) * 44){
	if(protect()){
	COLS;
	if(TABLE[--Ygritte][--94 * ( COLS )] - -14 / ROWS){

};
	if(-89 + -rule(ROWS) / -Sansa - -0.72){
	if(-51){
	Arya += TABLE[( y )][( Jon )] * rule(TABLE[30.583][-0.25],( TABLE[dog][Arya] ));
	Ygritte
} else {
	betray(-0.09,-0.9,( COLS ));
	x += 0.3
}
}
};
	if(dog){
	Hodor /= foo()
}
}
};
	Stark /= Sansa
} else {

}
}
} else {
	( -310.708 );
	bar(protect(foo(COLS,dog,ROWS),destroy(ROWS,-460.62),( dog )),protect(0.82 - COLS,Ygritte,destroy()))
}
}
def foo(Ygritte,Ygritte){

}
assert COLS : "Nothing burns like the cold."
def TABLE[bar(Jon)][j] {
	if(betray(Arya) * destroy(TABLE[bar(destroy(COLS,foo(-0.73,Sansa,dog),x * betray(-46,0.73)),( 72 ) + -0.29) + ( -TABLE[Hodor][---1] )][( ( -17 ) - -destroy(Ygritte) - TABLE[mislead(( ROWS ) + Stark)][-1] / ( ( -dog - COLS ) ) )] - 79,ROWS)){
	if(Stark){
	Sansa *= rule(x);
	dog -= betray(Jon,73)
} else {
	if(protect()){

};
	Stark *= -340.19 - Hodor * destroy()
};
	Jon += y
} else {
	x *= x;
	if(-0.7 + -0.76){
	Ygritte
} else {
	Sansa += ( 850.089 )
}
};
	if(( -ROWS )){
	Sansa *= ( TABLE[59][( Sansa ) / 56] / foo(COLS) );
	y -= ( betray(Jon,( -TABLE[( 0.53 )][( -COLS )] ) * rule(TABLE[ROWS][Sansa],-1 + Hodor * ( -( 470.806 ) ) * ( ( --bar(( -destroy(( -( Sansa ) ) * foo(( -0.86 ),betray(( foo(( ROWS ) / ( dog ),ROWS) ))) - TABLE[TABLE[( COLS )][-1 + ( rule(-betray(-Sansa,COLS + -foo(Stark) + Arya - Stark),0.08) )] / -0.57 + COLS - y][-900.34]) )) + TABLE[( Sansa )][-( ( TABLE[( TABLE[( ( TABLE[( Hodor )][dog] ) )][COLS] )][Jon] ) )] ) )) / ROWS) )
};
	y *= COLS
}
var Hodor = -( ( -0.96 ) )
assert --foo(COLS) : "What do we say to the Lord of Death?"
assert -mislead(TABLE[( Sansa ) * -37 / -0.17][-0.11],COLS) : "One can not simply parse himself"
def TABLE[foo(Hodor,ROWS,Sansa)][j] {
	Stark *= Sansa
}
def TABLE[ROWS][j] {
	-bar(-1);
	if(( -760.3 )){
	foo() * -1 - ROWS;
	y *= -Ygritte
}
}
assert -0.64 : "Nothing burns like the cold."
var Ygritte = ( ( --rule(( TABLE[-( ROWS ) * ROWS][-TABLE[betray(destroy(0.19,protect(( ( -10 - Jon ) ) / 0.38 / protect(COLS))))][mislead(--( protect(COLS,Sansa) ) / --x,--90.2,destroy(destroy(Jon - COLS,ROWS)))]] ),-ROWS) ) )
var Stark = ( 0.21 )
def rule(Arya,Sansa){

}
def TABLE[-0.47 / -foo(-x - betray(( -35 )) - TABLE[-60][-mislead(ROWS)] + TABLE[rule()][0.95] - betray(Hodor,Hodor,-( protect(ROWS,( 0.12 ),( -1 )) )),ROWS)][k] {
	Jon -= y;
	( Arya );
	x += ( ( --98 ) )
}
def destroy(Ygritte,Ygritte){
	Sansa;
	if(-foo(TABLE[y / protect(-970.54)][Hodor],67 / Arya,7)){
	Jon /= Hodor
} else {
	if(destroy(-Jon - ROWS,ROWS,TABLE[---880.806][( 0.34 )])){

} else {
	if(0.19){
	COLS;
	if(( TABLE[COLS][52 - ( ROWS )] ) - destroy(290.44,destroy(Sansa),TABLE[38][protect()]) * -0.92){
	Jon *= x;
	( TABLE[dog][520.44 * ( Hodor )] - ROWS / rule(-780.871,( -x )) )
};
	-0.55
} else {

};
	if(--38){

} else {
	Arya += destroy();
	foo(-COLS,-400.19)
}
};
	if(( -97 )){

} else {

};
	Arya
};
	Jon *= ( TABLE[( Sansa )][-( protect(y,-dog,ROWS) ) / Stark] )
}
assert ( TABLE[( -490.17 )][dog] ) : "Nothing burns like the cold."
var y = Ygritte
assert ---Arya / 30 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-0.31][j] {
	x;
	Sansa *= Hodor + ( ( betray() * ( -0.45 ) / ( TABLE[-ROWS][-0.75] + -TABLE[( ( y ) )][87] / rule(y,Jon) + Hodor ) + -0.86 * -( ( -56 ) ) ) ) * ( ( -( ( -----0.49 ) ) ) );
	Arya /= foo(( -( foo(0.43,mislead(43,--( TABLE[bar(Ygritte)][-( ( 58 ) )] )) * dog - ROWS + destroy(TABLE[mislead(0.67 - -Ygritte * TABLE[-1][TABLE[Stark][-TABLE[Hodor][-bar(mislead(y,50 / Stark,COLS) - ROWS,( Stark ) - Sansa,0.05)]]],-1)][51]),mislead(Jon / Jon,ROWS)) ) + --73 ),-x * Stark)
}
var Ygritte = x
assert ( mislead(-0.4,rule(-95,-mislead(( -( betray(protect(x,ROWS,Arya),rule(( -foo(betray(( Stark + mislead(ROWS) / -TABLE[( -760.32 ) / COLS][Arya] * ROWS )),Jon + -1 + -73 * -1 - --foo(destroy(( -0.65 - -Stark * TABLE[Arya * rule(1) + --destroy(0.8) * ( ( foo(-1) ) )][-( -0.82 )] ),Jon),60.3 / -Ygritte,y),mislead(( betray(-destroy(ROWS),( Arya )) ) - -0.84,y,0.53)) ),TABLE[-COLS][destroy(dog,--9,-COLS)],-( rule(( Arya )) )),TABLE[COLS + -COLS - COLS][0.15]) ) ))),Hodor) ) * -36 * -72 + -0.5 : "Winter is coming"
def foo(){
	Sansa /= -1;
	if(Hodor){
	Ygritte *= 1
} else {
	destroy(Stark / --0.95)
};
	x
}
var Sansa = 90
assert protect(0.56 - destroy(--TABLE[COLS][dog]),Ygritte - ROWS,-51) : "What do we say to the Lord of Death?"
var x = -0.31
var Sansa = COLS
def TABLE[( mislead(-Hodor,0.54,COLS) )][k] {
	--1
}
def TABLE[-COLS][i] {
	if(--0.48){

};
	if(destroy(( COLS / ROWS ),( 0.59 ),protect(rule(x,protect(( mislead(ROWS,foo(betray(--2) * ROWS + ( Ygritte ),bar(ROWS / ( -73 ),( -0.03 ) / 65)),-250.4) )),x),( -0.82 )))){
	if(TABLE[destroy()][-0.9 / 89]){
	( -foo(ROWS,( ( -28 ) ),-( COLS )) );
	if(mislead(-Sansa)){
	---690.07
};
	if(foo(-destroy(TABLE[( -TABLE[TABLE[( -0.99 )][( 43 )]][ROWS] / Arya )][--Sansa * -rule(rule(y),Arya,Stark) + ( -TABLE[ROWS][( y )] ) / -destroy(ROWS,-0.41)],betray(),( Jon + y )),Ygritte,-1)){
	if(50){
	x;
	if(rule(betray(1,-( ( -1 + bar() ) ),0.64))){
	x /= TABLE[-88][bar(Arya)]
};
	Jon /= ( ( dog ) + -foo() )
} else {
	( -1 );
	if(ROWS){
	Hodor /= ROWS;
	if(-0.99){
	Hodor *= Hodor;
	if(-1){
	if(rule(-COLS,( ROWS ),--48 + Stark)){
	Jon *= y / ( Jon * -1 * -( x ) )
} else {

}
}
} else {
	y *= ( 2 );
	Hodor /= COLS
}
}
};
	Jon /= -mislead()
} else {
	if(ROWS){
	if(( betray(protect(-( rule(( ( -Jon ) )) ))) * foo(ROWS) )){
	x -= COLS;
	x;
	Hodor -= -1
} else {

};
	if(TABLE[Sansa][-( 0.57 )]){
	ROWS
} else {
	Arya;
	if(-betray(Sansa,bar(-93,-ROWS))){
	if(ROWS){
	if(-0.17){
	dog += Jon
};
	if(COLS){
	Stark *= betray(Ygritte + ( COLS ));
	x /= mislead(Stark,dog);
	if(Sansa){
	protect(dog,-bar(COLS));
	if(Sansa){

};
	if(ROWS){

}
}
}
};
	Hodor /= protect(Sansa,200.6843)
}
};
	Hodor -= COLS
};
	bar(Ygritte,COLS / -rule())
}
}
} else {
	Jon /= -( -0.03 )
};
	if(-( Hodor )){
	if(-0.95){
	Ygritte += x
} else {
	if(-rule(mislead(--( rule(x,-mislead(TABLE[( -( destroy() ) )][protect(-ROWS + foo(Stark + -98),( dog ) / ROWS)])) ),-6 * protect(-0.72,rule(-270.318,( -Stark ))) - Stark),rule())){

}
}
} else {

}
}
assert -dog : "One can not simply parse himself"
var Hodor = ( COLS )
def mislead(){
	( bar(TABLE[( dog )][bar()] * rule(-COLS,Ygritte / ROWS),1) );
	if(destroy(COLS)){
	-0.79
}
}
var y = TABLE[rule(protect(mislead(-protect(-y - -( -Stark ) * ( COLS ),Ygritte))) * Sansa - -( dog * ( Jon ) * TABLE[-280][destroy()] ) / COLS - ( ROWS ))][bar(1,( -0.09 ),-( mislead(foo()) ))]
def TABLE[Jon][i] {

}
def foo(dog){

}
def mislead(y){
	if(( -86 )){
	if(rule(Stark,0.86)){
	Arya *= -98 + ( COLS );
	if(Arya){
	-0.91;
	( 1 );
	( ( bar(( ( ROWS * ( -( rule() ) ) + -0.85 ) - 99 + -Hodor )) ) )
};
	if(x){
	y
}
};
	if(-74){
	if(Arya * Ygritte){
	Jon * y
} else {

};
	Arya -= ROWS
} else {

}
}
}
def TABLE[rule(TABLE[ROWS][-Sansa])][i] {
	Stark /= -Stark
}
assert -0.67 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = betray(( -1 ),900.69,COLS)
assert Stark : "Fear cuts deeper than swords."
def TABLE[protect(betray(TABLE[destroy()][protect(-betray(dog),betray())]),ROWS,Arya + ( COLS ))][k] {

}
def TABLE[mislead(ROWS,( COLS - foo(( ( COLS ) ),11) ))][i] {
	rule(-COLS);
	if(Hodor){
	Stark /= ROWS
} else {
	Jon *= betray(( TABLE[protect(6,TABLE[destroy(-61,betray() * ( 1 ))][Jon / betray(x)] - protect(rule(--Ygritte) - -dog / 0.1 * ( betray(-26) ) * 0.99) + COLS)][ROWS + -1] * -64 / -1 ) / ( Stark ));
	dog += 18 + mislead() / --650.3 / 380.72
}
}
def TABLE[-COLS + --15 * -dog][k] {
	dog;
	y -= TABLE[( ( Jon ) )][( ( protect(TABLE[COLS][( 89 )],-0.26,-bar() + TABLE[Arya + TABLE[--protect(-protect(Stark),rule(--ROWS + 930.28))][ROWS - 0.64]][( --ROWS )]) ) )]
}
def destroy(Jon,Stark,dog){
	if(TABLE[-y * --Sansa / -Sansa / 22][0.12]){
	y += -mislead(TABLE[0.05][-0.84],COLS,bar(Stark,Hodor,Hodor - 600.3))
} else {
	( ---y )
}
}
def TABLE[protect(betray(-24),x)][k] {
	Jon /= bar(---Hodor)
}
def mislead(Sansa){

}
def TABLE[( mislead(protect(76,0.2,ROWS) + betray(foo() + 15,0.94 - -COLS) / ( -240.29 ) - ( ROWS / -TABLE[( 1 )][( Ygritte )] )) )][k] {
	y;
	-440.4138 / TABLE[-bar(0.64,-( Sansa ))][dog] / foo(Sansa) * y
}
var y = mislead()
assert --TABLE[Jon][( 1 )] * 95 : "Fear cuts deeper than swords."
def TABLE[foo(-840.9,--0.31)][j] {
	TABLE[destroy(( destroy(0.31) ),TABLE[protect(--Stark + ( TABLE[-63][-( TABLE[COLS][Ygritte * COLS] ) * 0] ) + Hodor)][-37])][dog];
	40
}
assert dog * ROWS - Ygritte : "Nothing burns like the cold."
def mislead(){

}
def bar(dog,x){

}
var Stark = protect()
assert -( -220.66 ) : "What do we say to the Lord of Death?"
var Arya = -( ( rule(-( 1 )) ) )
var x = ( ( Hodor ) )
var Jon = mislead()
var Ygritte = --0.39 + x
assert 53 : "Nothing burns like the cold."
def mislead(){
	Stark -= -ROWS;
	Sansa *= TABLE[TABLE[-1][TABLE[0.67][-bar(ROWS,COLS,0.86)]]][COLS];
	if(( bar() * ( 0.28 ) )){
	if(( ( -1 / bar(TABLE[COLS][COLS],Jon,ROWS) - Sansa / rule(foo(foo(56) / Stark + TABLE[-74][( ( destroy(( ( COLS + 91 * -0.93 / Stark * -ROWS + TABLE[( 0.9 )][protect(Sansa,ROWS,TABLE[78][-foo()])] ) * ( TABLE[TABLE[bar(Hodor,49)][betray(rule(COLS,--( -TABLE[TABLE[COLS + --COLS - ( destroy(destroy()) )][( -99 - y * TABLE[190.11][--Hodor] ) / ( -0.61 )]][--71 + Arya] )) / bar(( ( Ygritte / ( -0.17 ) ) )),( ( ROWS ) ) + ROWS)]][bar(99,betray(--( destroy(76,ROWS) ) - -TABLE[( -rule(Stark,COLS) ) - Jon / foo(( -TABLE[COLS][( -39 )] ),dog) - TABLE[y + -0.16 + Jon][x] * Sansa * rule(y,600.4584)][-TABLE[COLS][Arya]],rule(betray(bar(dog))))) * Arya] ) ) / ROWS + -Hodor / Sansa / rule(( ( dog ) ),( foo(----mislead(-590.5,protect(( ( -( 58 ) ) )))) ),-( ROWS ))) ) - -Ygritte )],ROWS)) ) )){
	TABLE[-( 0.69 )][TABLE[COLS][rule()]]
} else {
	if(Jon){
	Jon -= y
} else {
	if(( Arya )){
	if(Arya){
	if(-betray(( ( -COLS * -18 + dog ) ),-ROWS,( TABLE[--bar(-22) + y - -( ( ROWS ) )][Sansa] ))){
	if(-COLS){
	Stark /= -1;
	Ygritte - TABLE[protect(99) - Arya][( protect(COLS / TABLE[--betray(y,( Arya - -0.7 ))][-52 / protect(TABLE[destroy(mislead(COLS),( -TABLE[Hodor][ROWS] ))][( ( ( ROWS ) ) / ROWS * TABLE[-48][---( dog + mislead(rule(( TABLE[ROWS][-COLS * ( -ROWS )] + 320.5429 - TABLE[Jon][( 1 + Hodor )] * ( destroy() ) + -( -790.08 ) )),rule(( ROWS ),( mislead(( destroy(destroy(Jon),foo(Ygritte)) )) ),mislead(mislead(COLS,bar(Arya,( TABLE[COLS][ROWS] ),-betray(--protect(Ygritte)))),-protect(betray(bar(Arya),destroy(foo(mislead(TABLE[-26][bar(--0.8)],TABLE[-foo()][COLS] - -betray() * ROWS),-38))),ROWS))),( bar(Ygritte,destroy(-74,-COLS * Stark)) )) ) * ( Hodor ) / ROWS - rule(mislead(( ( TABLE[( -Sansa )][rule()] ) )))] )],( protect() )) / TABLE[Jon][-65]],( y ),-1) )] - ( ( ( ( Ygritte ) ) ) ) + dog / 0.26;
	-0.54
} else {

}
};
	y /= ( -1 )
} else {
	Stark + ( ( 55 ) )
};
	if(-0.44){
	1;
	Jon += ROWS
}
};
	if(( ( destroy() ) ) * -( rule(-85) / -Jon - TABLE[--23 - ( destroy(-Jon) )][( Ygritte ) * ROWS] )){
	if(--48){
	Jon += ( ( ( ( betray() ) - -1 ) ) )
}
};
	if(-dog){
	if(0.52){
	if(x){
	if(protect(1)){
	if(( betray(54,TABLE[ROWS][-( -( TABLE[Arya * mislead(foo(TABLE[( ( ( ---TABLE[-Ygritte / ( dog ) + ( ( --( rule(dog,-0.65) ) ) ) - -bar(14) + -76 - COLS / ( Jon - 0.73 )][ROWS] ) ) )][0.06]),-1 * bar(destroy(betray(betray(0.19 / -Jon))),bar(),( ( -rule(Stark) ) )) * TABLE[( TABLE[y][x] )][foo(( protect(--Sansa * -rule(Stark * ( TABLE[-0.39][mislead(-69,dog + ROWS + Hodor)] ) / 0.1 + dog / ( ( foo(COLS,( ROWS ),bar(0.27)) ) ) / Hodor) * TABLE[( protect(-1) )][COLS / -0.05],mislead(Ygritte - betray(45) / COLS / --34 + -mislead() / mislead(protect(-ROWS,Jon - ( dog )),( TABLE[( ROWS )][Stark] )),ROWS)) ))])][( 510.01 ) * bar()] / 900.266 - ( ( 66 ) ) ) * y )],Ygritte) )){

};
	-( ( -( -TABLE[69 - --COLS][--TABLE[-Ygritte][y]] + 1 ) ) ) / TABLE[-1][( ( ROWS ) )]
}
} else {
	( 54 );
	Jon;
	Jon
};
	Stark /= Ygritte
} else {
	if(-ROWS){
	if(Sansa){
	rule(rule(-720.66 + TABLE[dog][betray(18 - TABLE[TABLE[bar(COLS,TABLE[Stark][0.91 * betray(-( protect(--68) ),ROWS) * --COLS * 0.62] - -Jon)][( -ROWS )]][x],-910.46)]),-x);
	if(( --65 )){

} else {
	y /= foo(---94)
}
};
	( x + Sansa );
	dog += -0.27
}
};
	if(TABLE[ROWS][foo(rule(foo()))]){
	( -Arya / --0.66 ) * TABLE[( Arya )][-COLS]
} else {

};
	-36
}
};
	Jon += COLS
};
	Stark += betray(x,COLS - dog / 0.14)
}
}
def destroy(){
	if(Jon){
	if(90){
	Jon += Sansa
} else {
	---( destroy(54 + Ygritte,( COLS )) ) - Arya;
	Arya += dog
};
	if(dog - foo(-( Arya ),betray(COLS,-dog),0.02)){
	Jon /= -660.929 * ROWS * ( mislead(( Stark ),-16,-77) ) - ( ROWS * TABLE[( foo() )][0.92] );
	COLS
} else {

}
} else {
	Stark /= mislead(ROWS,-Ygritte)
}
}
assert -830.52 : "Winter is coming"
def TABLE[-0.88 - -1][k] {
	--Sansa
}
def TABLE[COLS + -5][i] {
	if(-bar(destroy(rule(rule(destroy(-1,-( -920.364 )),-betray(),580.142)),ROWS,mislead(COLS,-750.11)),COLS,82)){

} else {
	if(( betray(rule(ROWS,mislead(destroy(dog))) - destroy(-0.23,( -( ( foo(TABLE[( ( -ROWS ) )][( -COLS )],--0.03 * -0.63,dog) ) ) * destroy(-TABLE[-0.7][dog]) ),0.93),TABLE[Sansa][Jon]) )){
	TABLE[Stark][Ygritte / COLS + destroy(-43 + TABLE[ROWS][ROWS] - ( rule(protect(-1,-bar())) ),-( COLS ))] + 0.3;
	Sansa -= -destroy(TABLE[-1][mislead(1)] / 87)
} else {

};
	betray(Ygritte,dog) / -330.26
}
}
def destroy(Hodor){
	( --0.99 - protect(foo()) * TABLE[-1][ROWS] );
	if(rule()){
	Sansa /= 14;
	Hodor /= -( 0.23 )
} else {
	if(0.9 * rule(betray(),Jon - Jon)){

};
	( COLS );
	x -= ( ( ( betray() ) ) / ( COLS ) )
};
	TABLE[TABLE[0.88][--55]][x]
}
assert -rule(( TABLE[Hodor - TABLE[x][-30 - bar(48)]][Hodor] ),Jon) : "Fear cuts deeper than swords."
var y = bar(Jon)
assert ( --rule(-Jon * --0.91) ) : "What do we say to the Lord of Death?"
def destroy(Ygritte,Sansa){
	Jon;
	if(TABLE[( -dog )][TABLE[protect(y,Sansa)][-6] - -1]){
	y -= foo(( COLS ));
	if(-( TABLE[dog][TABLE[( ( TABLE[COLS][-bar(Sansa)] ) )][y] + 61] )){
	Hodor -= dog
}
} else {
	if(ROWS){

} else {

}
}
}
var dog = rule(Sansa,( -0.4 * COLS ) / betray(ROWS))
def TABLE[TABLE[-52][-bar(( ---0.95 ))] + -TABLE[Arya][--Arya]][k] {
	Sansa *= COLS
}
var Ygritte = ( Arya )
def foo(){
	Stark -= mislead(ROWS,Stark);
	if(-( -55 )){
	if(bar(( TABLE[dog][-0.09] ))){
	if(Sansa){

}
};
	y += betray(---TABLE[-foo(-destroy(betray(-Hodor,foo(-21,protect(ROWS,-Sansa,-TABLE[( bar(dog,54) / COLS * -Ygritte / 46 )][-ROWS + y / TABLE[( -destroy(Hodor) )][( Sansa / -89 )] + 370.74]) * Sansa)),---( -0.9 ),Ygritte),-1,-( TABLE[ROWS][Sansa] ) * ( betray(COLS) ))][( Hodor )])
}
}
def TABLE[--41][j] {

}
var Arya = TABLE[y][COLS]
def destroy(){

}
def TABLE[x][k] {
	0.51
}
def TABLE[( ( -1 ) )][k] {

}
def TABLE[Jon][k] {
	Hodor -= ROWS;
	if(-y + 34){
	Arya /= ROWS
} else {

};
	dog
}
var Hodor = -Ygritte
assert --1 / -0.95 : "One can not simply parse himself"
assert ( ( ( TABLE[-1][TABLE[bar(-ROWS)][-1]] - 90 + ( protect() ) ) ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(Hodor,Arya,Arya){
	y += -COLS / betray();
	Ygritte -= -destroy(( ( -85 ) / COLS * ( ( Stark ) ) / y / ( ( ( betray() ) ) ) )) + dog
}
def TABLE[( ROWS )][k] {
	if(-protect(-Ygritte - ( Stark ),rule(foo(( --betray(--28) ),Hodor,-0.75),1,destroy(( Stark ))) * ( foo(---1 * -880.2,( protect(( TABLE[-30][COLS] - foo(Hodor - -100) ),ROWS,Ygritte * ROWS / Stark) )) ) + 41 - -0.83 / betray(-190.29 * 97,foo(-destroy(( 0.05 - TABLE[y / COLS][Arya] ) * 13,destroy(betray() - TABLE[rule(Ygritte)][TABLE[( 71 )][rule()]],TABLE[-92][Ygritte],x),x - -rule(( protect(-0.09 / --50,Ygritte,-( -foo(-Arya,ROWS,-rule() + COLS * ( ROWS ) * ROWS) )) ),---TABLE[-ROWS][-1] + -62,bar()) + -TABLE[dog][betray() + rule(ROWS) + TABLE[-1 / y + -Ygritte * Hodor][ROWS]] * COLS),ROWS)) - -1)){
	-( -1 );
	Ygritte -= protect(( ROWS ) / y,---TABLE[( -120.968 ) + --( ( -TABLE[Sansa][ROWS] ) )][( bar(-21) - ( protect(COLS,-betray(---COLS,Sansa * TABLE[0.17][( --88 ) + -protect(betray(-Stark,Arya))],( 14 )),betray(Stark,-1) * COLS / Stark) ) )],Arya)
} else {
	Arya += -3
}
}
var x = -TABLE[rule(( ( ( Ygritte ) ) ),( -( 19 ) ))][foo(rule(COLS),COLS,( ( COLS / mislead() ) + mislead(Arya,COLS) ))]
def TABLE[-destroy(COLS) - protect(betray(Stark,-1) - 0.85,-1)][k] {

}
var x = -foo(TABLE[ROWS][Ygritte],foo(),TABLE[-Hodor][TABLE[( -430.7 )][destroy()]])
def TABLE[ROWS / protect(-( -rule(( -TABLE[( foo(destroy(( -0.45 - ROWS ),-0.97),y,1 * --TABLE[( ( y ) )][-( Stark )] + Sansa - COLS * -0.93) )][y / 0.7 - ROWS] + Stark ) + dog) ),-( betray(betray(---Sansa,TABLE[foo(0.14 - y,0.94) / -rule(y + betray(51,( -0.68 * --1 / protect(-betray(COLS,ROWS)) / ( Jon ) + ( rule(-( TABLE[destroy()][COLS - -( destroy(y - betray(betray(),foo(rule(350.11,ROWS) / bar(TABLE[( -Sansa )][bar(( ( ( -16 ) ) ))],COLS),1),betray(mislead(-y)) * -COLS + -rule(-ROWS) * ( ( ROWS ) ) + Hodor)) )] ),0.74 / y) ) + betray(-1 - ( COLS ) + 0.27) / -1 )))][ROWS]),0.48,0.03) * -28 ) * -0.3)][j] {
	if(-0.77){
	x
};
	Hodor += ( 1 )
}
def TABLE[bar(-( ( x ) ))][j] {
	0.35
}
var x = TABLE[-Hodor + ROWS][( foo(-670.633) - -COLS / ROWS ) - ROWS]
def TABLE[( TABLE[protect(-37,--200.8,-COLS) + -Arya][( x )] )][i] {
	y -= ( Jon / Stark - 1 - TABLE[--1 + --0.65 * ROWS][-rule(( betray(TABLE[-ROWS][bar(1)],-950.2187,( Ygritte )) ),ROWS)] + 0.92 - --rule(rule(( -1 )),( destroy(ROWS,( ( ( -( mislead(COLS,rule(),TABLE[Ygritte][( COLS )]) ) ) ) )) )) - destroy(TABLE[( ( dog ) )][0.47]) * COLS / 0.92 );
	Arya
}
def TABLE[-0.31][i] {
	-foo(-240.769,( Sansa - TABLE[( COLS )][TABLE[-0.69][rule(Sansa,--1 * TABLE[ROWS][Arya],0.59)]] ));
	Hodor *= --27
}
assert x + TABLE[-0.43][bar()] + 1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[ROWS / mislead() - TABLE[dog][-920.3445]][k] {
	Ygritte += dog;
	if(0.45){
	Jon /= mislead() * Ygritte
};
	if(ROWS){
	Hodor += 160.57;
	( betray(( foo(mislead(Stark,-650.2),24,Hodor) ),-TABLE[COLS][rule(COLS,( TABLE[betray(Jon)][-Hodor] ))]) )
}
}
assert -protect(Ygritte,( -COLS ) * -17 * ( 68 )) - y / -Jon / ( Stark ) : "Fear cuts deeper than swords."
assert 0.39 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-Stark][k] {
	TABLE[TABLE[y][( -56 )]][( rule(-0.77) )]
}
assert -ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(){

}
def TABLE[destroy(TABLE[mislead(y) / -Stark][0.51],protect(-0.29,( -0.67 ) * ( x ) - Sansa,Sansa))][k] {

}
assert rule() : "Winter is coming"
assert ( betray(( Sansa )) ) : "Fear cuts deeper than swords."
var dog = ROWS / 910.85
def TABLE[( TABLE[rule(Hodor,ROWS)][-21] ) * betray(( COLS ) + ( ( TABLE[0.3][Jon] - -1 ) ),--0.48) - ROWS][j] {
	if(COLS){

};
	mislead(Jon * -Stark * ROWS,0.15 * -0.49)
}
var y = 1
def TABLE[bar(( betray(betray(bar(ROWS),-Arya,-1) / Arya) ),betray(Jon,TABLE[Ygritte][Sansa],--36))][j] {
	Jon += ROWS;
	Ygritte *= ( Ygritte ) / destroy(-28) + ---0.82 / 0.59 + destroy() + COLS - ( --( TABLE[37][Sansa] / COLS ) );
	Sansa += COLS
}
var y = COLS
assert ROWS : "Fear cuts deeper than swords."
var Jon = -COLS + ( 1 ) + -( Arya )
def TABLE[( ( ( dog + 46 * ( -TABLE[bar(( ROWS ),( rule(TABLE[rule(foo())][ROWS],TABLE[-0.9][( -COLS )] + mislead() * TABLE[COLS][4] * -1 - 0.2 / -1,mislead(mislead(-mislead(protect(( TABLE[--protect(COLS / -39)][protect(TABLE[--Sansa - dog * protect(x,-37,COLS)][TABLE[dog][dog]])] ) / 0.11 / ( Hodor ) - foo(mislead() * -0.65)))))) ))][y] ) ) ) )][i] {
	if(-( Sansa )){
	( ( -0.69 ) )
} else {
	TABLE[-0.3][rule(-38,--COLS)];
	if(-Hodor){
	( mislead(protect(0.87) / TABLE[( betray(Hodor,COLS * ( foo(COLS) ) - mislead(TABLE[-0.8][ROWS],COLS - bar(( foo(-( ( Stark ) ),-Sansa * -1) ),Hodor))) )][TABLE[Sansa][bar(-ROWS * 0.95 / ( bar(-Stark / 0.84) ),( -( rule(destroy(( ( destroy(830.2393 * COLS) ) ),72,TABLE[( -61 )][-16]),-TABLE[-( COLS ) + Arya * -----0.81 - ROWS / -73 + -protect(betray(),120.35)][-0.11]) ) ))]],TABLE[( protect() )][( COLS )] + ROWS) / Hodor / x );
	if(Jon){
	if(430.45){

} else {

}
}
}
}
}
assert -84 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( protect(--TABLE[mislead(350.66,( dog ))][Jon],-0.36) + 75 ) : "Nothing burns like the cold."
assert dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = -37
assert ( 0.09 * betray(betray(-( 0.33 ),bar(bar(x),( Arya ))),-destroy(( foo(COLS,-Hodor - 64,( bar(Hodor,TABLE[( ( -( -0.9 * ( -( ROWS ) ) ) ) )][-940.366],TABLE[--foo(dog * -TABLE[TABLE[rule(-87 * Jon,( Sansa ),0.72)][20.5582]][TABLE[ROWS][TABLE[protect(TABLE[--1 - ROWS][( Stark )])][( 5 )]]]) - COLS][--0.5]) )) - Arya ))) ) : "Fear cuts deeper than swords."
var Hodor = Sansa
var Ygritte = mislead(-foo(( foo(-720.541,protect(( TABLE[mislead()][rule(mislead(-TABLE[-0.91][-( -ROWS )]),( ( -( dog ) / destroy(TABLE[ROWS][Arya],( -( ( -protect() ) ) ),Ygritte) ) ),( mislead(COLS,Arya) + 930.4 ))] ),Sansa / -Stark / TABLE[1][-( y ) / -TABLE[COLS][( x )]]),Sansa) ),-dog / rule(ROWS,COLS,protect()) + x),7)
var y = -COLS / -COLS / destroy(( dog )) * 56
def rule(dog){
	if(protect(--mislead(rule(mislead(mislead(rule(Hodor + Ygritte * Sansa,( bar() ),-55),( ( ( betray(ROWS) ) ) * destroy(1) - -Arya * TABLE[( Sansa ) * -Stark][TABLE[ROWS][( TABLE[--COLS][Jon] / foo() )]] )),Sansa)) / betray(mislead(690.99 / ---( mislead(ROWS,bar()) ),bar(( ROWS ) + Hodor),( y ))),( ( dog ) + -0.76 + -betray(TABLE[( TABLE[ROWS][ROWS + -Arya] ) / rule(( 210.573 ) * ----0.79,-330.3904,( TABLE[-1][-39] ))][( Jon )],ROWS) ),rule(destroy(33) - rule(Sansa,--TABLE[Sansa][betray(( dog ) - Hodor)] * ( -10.548 )),-1))) / -360.06){
	Stark -= destroy(Hodor)
};
	-( foo(-( ( -destroy() + ( ROWS ) ) ),( ( 0.77 ) + ( x ) ) + ( ( ROWS ) ),Hodor * ( ( foo(--COLS + ROWS * -dog) ) )) )
}
def destroy(dog,Hodor){
	dog += ( --( -mislead(( Sansa )) ) )
}
def TABLE[( Hodor )][k] {

}
var Arya = -54
var x = -( x )
def TABLE[Arya][k] {
	0.69;
	if(-Ygritte){
	if(mislead()){

};
	if(1){
	if(-protect(rule(-5,( ( --TABLE[--TABLE[foo(betray(foo()))][680.726 * ( Jon ) / -1 + 0.92]][25] - ( 1 ) * ROWS * COLS ) ),protect(x,45,Hodor)),( 130.67 ) + -( TABLE[TABLE[y][19]][mislead(-x)] ),Hodor) + 0.03){
	if(ROWS){

};
	Sansa /= destroy(bar(TABLE[-dog / ( -0.02 )][-COLS],betray(TABLE[TABLE[-dog][foo(TABLE[( ( TABLE[--0.18][Sansa] ) )][destroy(( -( 0.16 ) ))],Ygritte,( Ygritte ) * -TABLE[Arya][28])]][Ygritte],-33)),( TABLE[( -Arya + -1 )][ROWS] ) / betray(-82,mislead(-0.08,970.8,( 0.36 )),Arya),( bar() ))
} else {
	Stark /= COLS;
	( 200.817 );
	if(betray(-75)){

}
}
} else {

}
};
	Stark -= betray(mislead(COLS / ( foo() )) - -53 + -0.19 + TABLE[( ROWS - -59 )][--87 + -1])
}
var dog = mislead(68 + -mislead(destroy(-rule(-0.13,( Sansa )),-0.03)))
def bar(x){
	x -= 22 * mislead(protect(betray(-0.08)),55)
}
def betray(y){
	if(y){
	x *= bar(1 + mislead(0.59,--2),( -Sansa / bar(-76,ROWS) + ( Hodor ) ))
} else {

};
	Arya *= -970.712
}
def TABLE[COLS][k] {
	bar(Stark,-betray(rule(( -Sansa - ( bar(destroy(-( Jon ),betray(TABLE[foo()][Hodor],-( 0.36 ) * -destroy() + ( 1 ) - --bar(1)))) ) )) - TABLE[COLS][bar(-89 - Arya * rule(x,-0.96 * COLS) + ( destroy(Ygritte) ))]))
}
def TABLE[( -0.59 )][k] {
	if(betray()){
	Arya
} else {

};
	COLS * -0.97;
	if(TABLE[-870.183][Arya / Hodor]){

}
}
var Hodor = 890
def protect(Sansa){
	foo(-rule(Jon,( foo(-93,x) )));
	if(-COLS){

};
	if(-destroy(COLS)){
	Stark += -destroy(Ygritte,Sansa / Ygritte,Sansa);
	if(betray(protect(( -dog ),protect(1)) + Jon * Stark,ROWS,-28)){
	( TABLE[TABLE[Jon][destroy(630.19,dog)]][x] );
	destroy(( rule(Jon / --dog,Stark) ),protect(-TABLE[ROWS][betray(protect(destroy(rule(-ROWS,bar(COLS,( 160 ) + -COLS))) + TABLE[74][( -( -COLS ) * ROWS + ( -betray(Hodor) / ROWS ) )] + y - Sansa),Stark)]));
	0.08
} else {
	x *= ( ( ( destroy(Hodor + ( Hodor )) / x ) ) );
	Hodor;
	COLS
}
}
}
var Jon = ( 0.18 )
assert -( TABLE[---0.25][0.79] ) : "Fear cuts deeper than swords."
def TABLE[Sansa][i] {
	rule(( ( bar(( x )) * COLS ) ) / ROWS,-1);
	betray();
	( destroy() )
}
var x = y
def foo(Stark,Jon,Hodor){
	if(bar(9 / COLS,Ygritte)){
	Sansa *= Sansa
};
	if(y){
	if(--810.46){
	if(-( ROWS )){

};
	x *= TABLE[-1][-1]
};
	Hodor -= ( Ygritte ) * Arya;
	Sansa *= 0.73
};
	( rule(-TABLE[-x][COLS]) )
}
def betray(x,y){
	Ygritte /= -betray()
}
def bar(){
	y /= ROWS + -0.86;
	( Stark )
}
assert Sansa : "Winter is coming"
def TABLE[COLS][k] {
	if(y){

};
	if(-0.11){
	if(x){
	if(bar(-1) / x){

} else {
	y /= rule(rule(foo(COLS),-destroy(( destroy(rule(( ( -protect(( ROWS ),( betray(bar(( destroy(290.243,protect(-0.52,rule(protect(( ROWS )))) + -29) ),( 0.22 ),ROWS),Ygritte) ),betray(TABLE[-Jon * --protect(-0.06) * ( destroy() ) / ( Arya )][TABLE[-30][betray(( ( protect(-( ( -mislead(-Ygritte,-betray(dog) * mislead(),( ROWS ) / Jon) ) )) ) ),-1,-43)]])) ) ),mislead() / -38,( COLS * Ygritte )) - ROWS - Ygritte,foo(x),ROWS) )),-x),TABLE[TABLE[COLS][-36]][mislead(( Arya ),-Arya + destroy(( ( -TABLE[-protect(foo(-76))][9] ) ) / -( ( TABLE[destroy(ROWS,mislead(-( COLS )))][-bar(93,( ROWS ),y)] ) )) - ( ROWS ))] / ( -41 ) - 1)
};
	Stark += protect(bar(Jon,-0.95,TABLE[rule()][destroy(-ROWS)]),x);
	-Sansa
} else {
	protect(1,( -( Stark ) * 0.53 ));
	if(ROWS - mislead(Stark,destroy(---46 - -Arya - -1))){
	if(foo(0.06,( -TABLE[ROWS][--Stark] ) + ( ( -( -rule(Arya) + betray(-0.77) ) / dog + y * ( ROWS ) - dog ) ) - betray(-590.36,TABLE[TABLE[-Ygritte][mislead()]][rule(( ( TABLE[( TABLE[( ( dog ) )][TABLE[( Ygritte )][COLS * destroy(Sansa)]] )][0.41] ) ),ROWS)]))){
	if(( -0.94 )){
	Arya *= ( -0.35 ) * ( Sansa );
	betray(betray(Jon,0.66) / mislead(TABLE[TABLE[( ROWS )][TABLE[bar(rule(Stark,x,-rule(dog))) * TABLE[y][bar(( -TABLE[( betray(Hodor,TABLE[protect()][x],( -COLS ) - COLS) )][COLS / y] ),ROWS)]][-2] - COLS / ( Sansa ) + 0.59 / ( ( ( mislead(0.57,COLS,( ( COLS ) )) ) ) ) * ( -26 ) - -( x / ROWS / -( 77 ) )] / mislead()][-destroy(0.7)],-53)) - ( ( protect(TABLE[rule()][( mislead(-( ( destroy(dog,COLS) ) ) - x + Arya,-mislead(ROWS * destroy(-( ( ( -Sansa ) ) ) / -( ( ( TABLE[( COLS - --( -0.9 ) )][-400.519 + 1] ) ) ) + ( COLS ),-( --1 )) / -TABLE[( 15 )][TABLE[( ( ( Arya ) ) )][-COLS]]) - -TABLE[ROWS][( -0.89 )] + 0.98,protect(bar(--0.1),protect())) )] / ROWS) ) )
}
} else {

}
} else {
	if(ROWS){
	Ygritte += -0.58;
	COLS
} else {
	Hodor *= y;
	Jon += ( ( 1 ) )
}
}
}
} else {
	Ygritte /= -1;
	Hodor /= bar(-0.53 + ( -Hodor / betray() / 1 ))
};
	if(( TABLE[ROWS][1 + -92] ) + -240.56 * ( betray(Hodor,-COLS,ROWS - ( betray(COLS / foo(Stark - TABLE[--( y * ROWS )][0.1],--23,( ( 69 ) )),-Ygritte + foo(-dog * -400),---bar(mislead(-460.37,-Stark))) )) ) - Ygritte + Jon / COLS){
	dog *= Jon;
	( ( ( Ygritte / ROWS ) + Stark + bar(---1 * ( Hodor ),mislead(-0.84,TABLE[( ( -4 ) ) / y][-betray(rule())],0.04)) ) );
	Ygritte *= -Stark + -Hodor * COLS
}
}
def TABLE[Sansa][k] {
	if(destroy()){
	Jon *= x;
	Jon /= --94
} else {
	x += -400.3783;
	--0.47;
	y += --TABLE[x][-( -99 )]
};
	( destroy(foo(Arya,-46),ROWS) )
}
def TABLE[1][j] {
	Hodor /= y + ( 19 )
}
assert -80 : "Nothing burns like the cold."
var Arya = --0.84 + --0.89 + protect(destroy(-410.903 * ( foo(( TABLE[Stark][Hodor] )) ),-rule(),-ROWS),rule(( Ygritte ),68,-1))
def foo(Jon){
	Stark
}
def protect(){
	Hodor -= Stark;
	( -42 )
}
def mislead(){
	( COLS );
	if(ROWS / ROWS){
	Arya *= 7;
	dog *= ( 0.74 )
}
}
assert COLS : "Winter is coming"
def mislead(Arya){

}
var Stark = -30.484
var Arya = ( TABLE[COLS][-1 + betray(( -( Jon ) ),( ( dog ) / --x ))] )
var Sansa = x
assert -0.17 : "What do we say to the Lord of Death?"
var Stark = x
var Jon = ( dog ) - ROWS
var Sansa = COLS + 970.925
def TABLE[4][k] {
	ROWS;
	-73;
	if(870.246){
	x
} else {
	0.06 / ROWS / ( ( --1 * TABLE[ROWS][-( ( ( -betray(mislead(-ROWS * TABLE[( -0.17 )][ROWS - COLS] - -66)) ) ) )] * ( --49 ) - -320.65 + 0.27 ) + 1 );
	x /= Hodor
}
}
assert TABLE[0.66][protect(-Ygritte - Arya,-( foo() ) - -mislead(( Jon )) / x)] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Sansa][j] {

}
assert -y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[COLS * 0.86 * ( COLS ) - -mislead(dog) - mislead(foo(betray()) * protect(-85,TABLE[protect(foo(foo(-0.73 / Ygritte / ROWS * Stark),0.08),TABLE[Stark][TABLE[-0.83][( -foo(-72 - TABLE[TABLE[-0.19][0.19 + ( Hodor )]][-COLS] * -COLS,Sansa) )]] + COLS)][Arya])) * -88 - 420.544][j] {
	Ygritte += ( ( Hodor ) );
	--( Sansa )
}
def TABLE[COLS][k] {
	if(y){
	Arya *= ( -( rule(( -0.7 ),COLS) ) - bar(betray()) )
} else {
	if(destroy(( -y / ROWS + COLS - Ygritte + ( mislead() ) ))){
	-0.45
};
	( -Jon )
};
	94
}
def protect(Stark,y,x){
	-destroy(COLS);
	x -= bar(-( COLS ));
	Jon -= -y
}
def foo(Ygritte,Arya){
	Jon += ( COLS );
	if(( 8 )){
	if(-690.82){
	( x / -Hodor );
	y -= ROWS
};
	if(1){
	Sansa += Jon;
	Hodor -= x
} else {
	dog -= TABLE[( Ygritte )][0.92];
	Arya += ( COLS * ( COLS ) * ( -0.95 ) )
};
	if(COLS){
	if(-Arya){
	Arya += bar(COLS,( ( protect(-TABLE[Jon][250.409] - -Arya) ) ))
} else {
	if(ROWS){
	if(-( TABLE[rule()][foo(x,-TABLE[-Ygritte][Jon])] )){
	if(-0.65){
	if(-bar(( ROWS ),--650.89)){

};
	Jon *= foo(0.67,1)
}
} else {
	-bar(foo(0.41 - ( ( Stark * protect(y,Stark) + Jon * -0.05 * -foo(( ( ---0.23 ) )) ) - destroy(Jon - foo(),--1) ),( ROWS )),Stark);
	Jon += 210.763
};
	66
} else {
	Arya += ROWS
};
	if(--0.4 + --0.44){
	if(betray(rule(( destroy(60,( ( 0.49 ) - Arya )) )))){
	if(Stark){
	Sansa += dog
};
	Jon += -destroy(-( dog ) * ( rule(foo(betray(120.33)),0.16,16) + foo(( --1 ) + ROWS,( destroy(Stark) ),-rule(mislead())) ));
	if(COLS - protect(-0.74 + -rule(( Ygritte )) + 0.75,destroy(--1 - ROWS / ( COLS ),betray(-betray(( 0.11 ) + ---Ygritte))) + Arya,-( --20 ) - -Ygritte / -Hodor)){
	-0.61
}
};
	if(destroy(y,( ---1 + 230.1 + protect(protect(( Jon ),protect(-46,( rule(x,( Jon )) )),-COLS)) ) * -1)){
	if(-TABLE[-66][mislead(( TABLE[destroy(Stark)][--350.126 - destroy(0.04,Stark)] * Arya ) + ROWS / 0.62,TABLE[protect(--25,-( Arya ))][( ( betray(( Jon + y ),bar(( destroy(--COLS - -( -890.19 ),TABLE[Sansa][-0.37],foo(Jon - -Jon,dog)) ),dog)) ) )],1)] + ( ( Arya ) ) * COLS){
	if(-75){
	Jon;
	if(dog + --Sansa){
	TABLE[-1][( ROWS )] * ( Ygritte );
	Jon -= ( TABLE[690.246][-70.291] );
	if(( -0.07 )){
	COLS;
	Hodor += y;
	Sansa /= mislead(( rule(Ygritte,rule(bar(20.219),Jon * betray(betray(-820.07 - 0.23,TABLE[( dog )][-ROWS]),COLS)),-0.89 * ( 35 )) ))
} else {
	if(( 0.88 )){
	y *= COLS;
	bar(( TABLE[mislead(betray(),foo(-Hodor + ( TABLE[TABLE[y][x] / 1][mislead()] ) / rule(),Sansa,bar(mislead(Arya),Stark)),0.81)][0.83] ),0.29,dog)
} else {
	Sansa -= ( COLS )
};
	if(66){
	x -= rule(-0.02,rule(400.95,-1,( -1 ) + -Arya));
	( TABLE[betray(( ( ( -y ) ) ),betray(COLS,-0.77))][betray(Arya)] );
	-( Arya )
} else {
	if(-( bar(mislead(betray(710.0118) / Jon + 88,( -9 - ---TABLE[-rule(-0.58 - ( -rule(TABLE[COLS][Stark]) ))][destroy(-59)] / -320.24 ))) )){
	if(-0.64){
	Arya -= ( x ) * -330.5 - ROWS - 0.25;
	x *= TABLE[COLS][Jon];
	y -= Arya
} else {
	COLS;
	-1;
	if(TABLE[foo(--protect(COLS) / x)][-0.37]){
	if(destroy(protect(-1 * -16,ROWS,Sansa),Sansa * -rule(foo(80,Stark),66,80.71 * Arya),Sansa - Arya)){

}
}
}
} else {

}
}
}
};
	if(( 8 ) - protect(Ygritte,Ygritte)){
	Hodor /= Hodor;
	if(-betray(Jon)){

}
} else {
	Arya -= destroy(0.76 - rule(COLS,TABLE[-Jon][( -foo(destroy(ROWS) + -( -( ( destroy(( COLS ),-betray(TABLE[--Jon * -0.4 * 0.48][0.55]) / x) ) ) / COLS )) )],COLS),rule())
}
}
} else {

};
	if(Jon){
	Ygritte /= Jon;
	if(-Hodor + ( -1 + -440.3 - -protect(( Ygritte )) - -rule(-Sansa * Hodor) )){
	if(( ROWS )){

} else {
	-( bar(--10.5) ) + -Arya
};
	Ygritte /= -COLS
} else {
	if(foo(ROWS)){
	if(-mislead(-Sansa,rule(15,--COLS - COLS,( mislead() )))){

} else {
	if(COLS){
	if(( COLS )){
	destroy(-COLS + ( destroy() ),( betray(Sansa / ( TABLE[-0.14][x] ) - mislead(rule(COLS,-COLS)) / destroy()) - ( ( TABLE[TABLE[-0.75][-ROWS - COLS / ROWS]][COLS] ) ) + bar(0.35) ),bar(rule()));
	( TABLE[( 200.7818 )][-11] );
	if(-1){
	dog += protect(-70 + Arya,( -COLS ),bar(dog,( TABLE[mislead(dog)][destroy(COLS,( TABLE[( x )][Hodor] ),TABLE[( -bar(-foo(y,1) * destroy(--55,0.87) * -1 / protect(destroy() - ( x ),-1)) )][betray()])] ),( ( --0.46 ) )))
}
};
	-290.25 * protect(( y ));
	x
}
};
	Stark += foo(Arya,TABLE[-( -1 )][( TABLE[-0.61][COLS] )],--920.36 * destroy(COLS,ROWS,--85) - -bar(( --0.81 - betray(-( --600.1 ),0.66 - Hodor) / Arya )))
};
	( ( -( 1 ) ) )
}
};
	Sansa += ( -580.453 ) - -COLS
};
	destroy()
};
	if(TABLE[-Stark - ROWS][Arya]){
	Arya;
	Arya /= ( -75 );
	if(-Jon * protect(( y + Stark / ROWS ),betray(TABLE[91 * ( COLS ) / -( COLS )][-( -COLS - ( --680.58 ) )],-( -91 )),TABLE[78 - ( -x - Stark + 1 - -betray() / Stark )][-29])){

}
}
}
}
} else {
	y -= foo(80.9,-( --betray(COLS) ),TABLE[x][ROWS])
}
}
def betray(y,Stark,Stark){
	if(-62){
	destroy(-TABLE[( Sansa )][dog] / TABLE[protect(destroy(ROWS))][0.11] - protect(protect(y * ROWS,-mislead(ROWS,( COLS )) * ( Hodor )),( destroy(( -( ( destroy(foo(57),( Ygritte )) ) ) ) * ROWS) )))
};
	if(TABLE[-ROWS][( -Ygritte - ( --Jon / Jon ) )]){
	Sansa += ( --COLS )
}
}
def TABLE[TABLE[( TABLE[TABLE[dog][foo(protect(COLS - ( COLS ) + -protect(94,ROWS)))]][0.4] )][x]][j] {

}
var y = ( 70 )
def TABLE[( -( -rule(( -0.57 ),-mislead(89)) ) )][i] {
	if(-ROWS){
	Ygritte *= mislead(COLS) / Hodor
};
	Ygritte += y;
	y /= 1
}
def rule(y,dog,Hodor){
	Ygritte *= TABLE[--21][dog];
	( COLS )
}
assert ( -0.57 ) : "Fear cuts deeper than swords."
def betray(Sansa){
	Sansa *= COLS;
	dog -= -COLS;
	Arya -= 1
}
assert mislead(COLS,rule(Sansa * ---610.82,1),destroy(1000.35)) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(){

}
def TABLE[( protect(-( -foo(mislead(( ROWS ))) - 1 ),-0.47) )][j] {
	( ( ( -Hodor + mislead(-TABLE[( ( COLS ) )][-Arya / ROWS] - betray(0.56,Stark) - -650.4) / COLS ) ) + dog );
	Hodor *= -91
}
assert mislead(( TABLE[110.18][-destroy(-Arya,-bar(( TABLE[dog][TABLE[mislead(destroy(),( COLS ),destroy(-( y ),-ROWS))][-1]] ),COLS,( bar(--destroy(( 0.53 ),--betray()) * COLS) )))] ) * 0.69) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = rule(Jon)
assert -( foo(protect(( -1 )),COLS,( COLS / ( 51 ) )) ) * TABLE[TABLE[( betray(Arya,x) )][Arya]][( -Ygritte )] : "Fear cuts deeper than swords."
def protect(y,y){
	destroy(Jon,ROWS,--0.35 - 0.4) * TABLE[( bar(COLS) )][Ygritte];
	if(---1){
	if(-rule()){

};
	destroy()
}
}
def TABLE[-960.15 + -0.19][i] {

}
def TABLE[-Ygritte][j] {

}
assert -( Stark ) : "One can not simply parse himself"
def TABLE[---( -0.65 )][k] {
	if(( Hodor )){
	Ygritte *= TABLE[TABLE[( 0.06 + COLS )][mislead(ROWS) - -28]][( 0.65 - protect() )];
	-( -Stark );
	COLS
} else {
	TABLE[--destroy(370.97,-dog)][COLS] * -Ygritte / bar(-48)
};
	Ygritte *= -bar(-0.27,( Ygritte ) - ( -( TABLE[520.476][betray(--y / Hodor * ( ( ( -12 ) ) ))] ) ));
	Jon /= ( 0.71 )
}
var Jon = TABLE[( 0.37 / betray(( COLS )) )][--39]
var Hodor = COLS
assert -( -1 ) : "What do we say to the Lord of Death?"
def TABLE[Stark][i] {

}
assert -0.11 : "Winter is coming"
var Jon = ---ROWS * ( TABLE[-( 0.19 )][ROWS] )
assert ( ( COLS ) * TABLE[Sansa][-63] - ( ( 0.23 ) ) ) / ( betray(0.53,-0.33,Ygritte) ) : "Fear cuts deeper than swords."
def TABLE[( 0.67 )][k] {
	Sansa += 1 * -1;
	if(Stark){
	-240.22
} else {
	TABLE[( -( -COLS ) - ( ( -( COLS ) ) ) )][-1]
}
}
assert -( --betray(( foo(mislead(),85) ),protect(-y,-0.47)) ) * ( y * --310.629 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(){
	Arya;
	72
}
def betray(Stark){
	900.065 / -0.89;
	if(-( ( 0.22 ) )){
	if(mislead(TABLE[--Stark][( -( ROWS ) - protect(( -0.85 / rule(( -Ygritte )) )) / Hodor + betray() ) * ( COLS )],foo(Ygritte,protect(-TABLE[-destroy(dog)][Jon * -0.43 - ( ( --0.57 * -ROWS ) )],( x ),x) / ( Sansa - -43 )),-x)){
	if(betray()){
	if(-TABLE[-0.53][ROWS]){

};
	if(destroy()){

}
}
}
} else {
	( ( TABLE[Arya][foo(Jon)] ) ) / Stark
}
}
def TABLE[-Jon + y][k] {
	dog += Ygritte;
	Hodor -= -0.64 + Jon
}
def rule(){
	dog += foo(Hodor,-91);
	dog -= Arya
}
var Hodor = 390.2
var Ygritte = 940.9
def foo(){

}
var Ygritte = ( foo(-mislead(-10)) ) / Arya
var Jon = ( ( -( TABLE[-0.23][( -Arya )] ) ) )
assert -1 : "One can not simply parse himself"
def TABLE[betray(( COLS ))][k] {
	-destroy(-0.58);
	-1 * rule(dog,-( 12 ),TABLE[Hodor][620.155])
}
assert mislead(( --0.52 - -( Arya ) ),-ROWS,1 - Sansa * --COLS * protect(( -0.62 ),ROWS) - -x) / ( TABLE[-1][-1 / -0.77] ) + Arya : "Winter is coming"
def foo(Stark){
	-34
}
def TABLE[-bar(Hodor / TABLE[TABLE[-TABLE[Arya][foo(dog,COLS)]][dog]][-x],-0.72)][j] {

}
assert x * 1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = ROWS
def TABLE[protect() / TABLE[rule(44,COLS) / -45][1] - -0.55 * -COLS][k] {
	( foo(x,Sansa) ) / ( 0.84 * destroy(protect(-54),( ( destroy(x) ) - bar() - -0.61 )) * ( foo() ) + betray(COLS) )
}
def mislead(Sansa,dog){
	-dog;
	-0.25
}
def TABLE[-0.44][k] {
	if(( Ygritte )){

} else {
	if(( -( ( -Jon + -1 / COLS ) ) ) + -73){
	1
} else {
	( 1 );
	-1
};
	Hodor *= bar(( -( dog ) ),-0.44,Hodor)
};
	-ROWS * -520.31 / TABLE[Arya * ROWS][Sansa];
	if(COLS){

} else {
	if(--Arya - x){
	--980.83
} else {
	if(Hodor){
	if(( y ) + ( ( -Jon ) ) + -TABLE[( COLS )][-2]){
	x += -19;
	if(( protect(COLS) )){
	if(Stark){
	betray()
} else {
	if(Arya){
	Sansa
};
	1000.857
}
}
} else {
	x += Arya + ( Arya );
	Hodor * -mislead(-0.45) * ( ( dog ) ) - --COLS
};
	Stark += COLS;
	Stark /= ( -16 )
} else {
	if(-0.6){
	-0.57;
	if(0.04){
	Hodor /= ( bar(( 40 + ( rule() ) ) - x) )
}
};
	( TABLE[49][( -( destroy() ) )] )
};
	370.1829
}
}
}
def TABLE[-50.5657][i] {
	( Hodor ) - -ROWS
}
def TABLE[1][k] {

}
assert ( -0.13 ) : "Fear cuts deeper than swords."
def TABLE[( ROWS ) + -( x ) + -0.17][k] {
	Hodor /= ( ROWS );
	10 + ROWS + ( ( -dog + --betray(rule(-0.5),y) + -COLS ) + TABLE[( 290.96 )][-( -rule(( Sansa / dog + x - -13 - Hodor )) )] )
}
def mislead(Arya,Stark){
	y *= bar(0.72);
	-Jon + -0.68 + Stark
}
def TABLE[ROWS / Sansa - 59][j] {
	if(betray(--1,-0.53,betray(rule(rule(),-( 0.04 ) * TABLE[foo(-Ygritte)][bar()])))){
	Jon += protect(-0.44) / Ygritte
};
	ROWS
}
assert COLS : "One can not simply parse himself"
var Stark = TABLE[COLS][-x]
def TABLE[Sansa][k] {

}
def rule(Hodor,Sansa,Stark){
	if(Stark){
	if(x){
	Ygritte /= -0.24 * ROWS;
	if(-89){
	Jon *= protect(( 30 ),( ( ROWS ) ),( 0.27 ))
};
	dog += -56
} else {
	mislead(( ROWS ),Ygritte,-0.65);
	if(mislead()){
	if(-99){
	if(betray()){
	if(-3 + COLS){
	if(COLS){

} else {
	Arya;
	if(ROWS){

} else {
	TABLE[ROWS][1];
	if(-Jon){
	Ygritte *= Ygritte;
	if(( -1 )){
	if(--foo(-( rule(( -destroy(-0.32,x) - -bar(----1) - ROWS / COLS )) ),( 1 ),ROWS) / Arya){
	if(protect(-Ygritte,protect(-98))){
	--0;
	Stark -= TABLE[rule(-67 + betray(--x - Hodor,-( Arya )),( 0.17 ),( Ygritte )) / Arya][destroy(y)]
} else {
	---Ygritte;
	--ROWS
};
	y -= -Stark
} else {
	Arya /= -( -COLS )
}
}
};
	if(COLS){
	( -33 / ( --protect(x) / -0.61 + -Stark * rule(( ( 1 ) ) + -0.37,-Arya) ) / 37 )
} else {
	if(bar(destroy(Stark,Stark / -Ygritte,TABLE[TABLE[TABLE[( -( TABLE[COLS][( Arya )] ) - TABLE[ROWS][destroy()] )][--Hodor]][( mislead(Arya) + 0.15 )]][y]))){
	x *= mislead()
};
	Ygritte *= -TABLE[0.81][-95]
}
}
};
	if(-COLS / betray(x * dog) / -Arya - -3){

}
};
	if(-( -700.5458 / -0.69 )){

} else {

}
};
	Stark -= TABLE[-0.97][betray(Stark)];
	( protect() / ( ( ( ROWS ) ) ) )
};
	if(protect()){

}
} else {
	dog += Hodor * Jon * Sansa / ( 370.44 / -ROWS );
	if(-570.33){
	-Sansa
} else {
	COLS
}
}
}
} else {
	if(ROWS){

};
	if(ROWS){
	if(-dog){

} else {
	if(rule(y)){
	Hodor += ( -1 );
	Hodor += ( destroy(( 0.21 * -0.94 ),-380.268) );
	if(destroy(( mislead(-68) ),bar(0.41)) + TABLE[x][( -0.16 )]){
	if(bar(-protect(0.88,-bar(protect(x - ( COLS ),( Arya )),-0.67,-630.69) - ---0.54),ROWS,0.66)){
	Ygritte += -foo(-35);
	if(-1){
	foo(-mislead(( Sansa )),-79)
} else {
	Hodor += Arya
}
} else {
	dog *= -79 * -66 + ROWS;
	if(x){
	TABLE[x / ( 0.27 )][Jon];
	y
};
	Ygritte
}
} else {

}
}
};
	if(-140.335){
	TABLE[( TABLE[x][Sansa] )][--480.854];
	bar(0.66,ROWS)
} else {
	-TABLE[-COLS][( ( bar(COLS,Sansa) ) )] * destroy(ROWS,ROWS,( -78 )) * ( betray(( ( betray(bar(Stark)) ) ),Hodor) ) + -0.79
};
	if(52){
	Arya
} else {
	foo()
}
}
};
	if(-dog){
	Jon += ( ( --1 ) );
	if(1){
	Ygritte /= -0.97 / TABLE[-foo(710.1859)][-( TABLE[mislead(COLS,-Jon,bar(17 * dog)) * ( COLS / ROWS / protect(( Hodor )) )][0.72] )];
	if(bar(--( TABLE[betray(-1,-0.15 + COLS)][---34] ) / ( bar(destroy(( ( bar(( COLS )) ) ),-TABLE[protect(( ( -Sansa ) ),rule(TABLE[-0.33][Sansa / mislead(Ygritte) * ( -TABLE[dog][650.587] )],destroy(mislead(-900.85),0.98)))][foo()])) ))){
	Sansa /= ( ROWS );
	if(--COLS * -COLS){

};
	Ygritte += betray(bar(( --dog ),protect(ROWS),-TABLE[protect(ROWS,-TABLE[( destroy(Hodor,ROWS) )][betray(TABLE[Arya / mislead(-0.62 - Jon * TABLE[COLS][protect(0.94)] + Jon / -ROWS * -dog * -( ( -( ( dog ) ) ) - ( -COLS ) ) / ( --y ) - mislead(Hodor,Jon),( ROWS / mislead(( Ygritte ) / TABLE[ROWS][-( ROWS )]) - -ROWS ),rule(Hodor,COLS))][mislead(0.72)] + Stark)],1)][Ygritte]),TABLE[foo(-93,770.67)][Hodor])
}
} else {
	Sansa += ROWS
};
	if(0.13 - -mislead(mislead(Stark,-( rule(65,-1 / bar(ROWS,ROWS)) ) * -destroy(ROWS),Hodor),-890.9,rule(1))){
	COLS
} else {
	destroy(COLS,Hodor);
	if(TABLE[rule(-0.38)][TABLE[protect(93,( 77 ) - -730.113)][-0.08 - rule(-0.7)] / betray(70)]){

} else {
	betray(-dog);
	if(( ( Arya ) ) * -Ygritte){
	x -= rule(-ROWS,Sansa,0.44);
	if(-( dog )){
	-COLS * bar(COLS,( --foo(ROWS,-99,-Sansa) ) * Arya,1);
	Arya += Sansa
};
	foo(ROWS,Stark)
} else {
	x *= -0.59
}
};
	y -= TABLE[y][-( ROWS / -55 ) * -( ROWS ) + Hodor / -Ygritte - TABLE[-1][( betray(0.34,betray(( -8 )) - --bar(ROWS) - 38) )] / Arya]
}
} else {
	if(-88){
	Arya -= Ygritte
} else {
	ROWS
};
	if(1){
	y *= ROWS - Jon
} else {
	-0.38 / ( -TABLE[-0.29][ROWS] * ( ROWS / y - -0.36 / ROWS - -52 ) ) - Stark
};
	ROWS
}
}
assert ( 0.32 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = 0.12
assert foo(( Sansa / ( Jon / -340.585 + mislead(( ( TABLE[mislead()][Hodor] ) + protect(( -Sansa )) ),( ( -670.1898 ) )) * ROWS ) ),bar(-mislead(Ygritte) / --Stark,Stark)) : "One can not simply parse himself"
assert COLS : "What do we say to the Lord of Death?"
def bar(y){

}
def TABLE[-protect()][i] {
	if(COLS){
	if(bar(betray(0))){
	ROWS;
	if(-TABLE[-1 + -680.856][0.28 * ( -COLS )]){
	if(ROWS){
	Jon += destroy(COLS,destroy())
} else {
	if(ROWS){
	-47
};
	if(-dog * ( bar(foo(Hodor),TABLE[mislead(--Jon + ( 22 ),-Hodor - -390.204)][foo() * betray(-betray(---( -97 ) + y + 48 + -520.3)) + ( -TABLE[TABLE[( Arya )][55]][COLS * bar(--Stark - COLS,TABLE[-4][bar(( mislead(( COLS )) ))])] ) / Jon]) )){
	destroy(mislead(),( ( -210.5 ) )) + -0.41
} else {
	Sansa;
	if(( ROWS )){
	if(-87){

}
} else {
	if(foo(0.49 + Stark,Hodor,-Ygritte * -1 / TABLE[-foo() / foo(ROWS,ROWS)][-dog] / 920.69 + 9)){
	Arya *= TABLE[ROWS][-( -ROWS )];
	dog += 0.56;
	if(-protect()){
	x -= Hodor
}
};
	protect(740.7,-ROWS * -dog,( -300.15 )) + ( destroy(101) );
	mislead(y)
}
}
};
	Arya;
	if(y){
	Sansa /= -31
} else {
	bar(TABLE[( -870.5016 )][32],-1);
	if(-1){
	foo();
	Jon -= rule()
}
}
} else {

};
	if(dog){
	destroy(1,x - ( COLS ) * foo(betray(TABLE[destroy(TABLE[TABLE[( COLS )][-Arya]][950.2])][TABLE[rule(dog,Stark)][9] + ( -0.17 ) * ROWS * -99]),43 + protect(-ROWS,x) / bar(( Jon ),-TABLE[( 88 - x / -( Sansa ) )][ROWS] - Ygritte)) + -26);
	y
} else {

}
} else {
	Jon -= -480.68;
	if(0.6){
	dog;
	if(( ( COLS ) )){
	if(TABLE[88 / protect(bar(1),betray(-7 - 0.81,Hodor * Sansa,Arya),-25)][TABLE[TABLE[TABLE[( -49 )][( ( TABLE[destroy(mislead(Stark))][1 * TABLE[ROWS][Sansa] - y] ) )] / y][Arya]][COLS]]){
	rule();
	Hodor
} else {
	rule(( ( ---28 ) ),mislead(betray(foo(Sansa,( foo(-500.4,60) ),Jon) - foo(),bar(),( TABLE[TABLE[COLS][70]][97] )),protect(),TABLE[( Stark )][Stark]))
}
} else {
	if(TABLE[-Stark][( 1 )]){

} else {
	( ROWS );
	if(mislead(dog,-1,( TABLE[---( Sansa ) * -38 - --24 + mislead(-0.13 / TABLE[destroy(( 21 ))][foo(foo(-y),( COLS ),Ygritte)],( -74 )) / TABLE[bar(TABLE[Jon * ( ROWS )][mislead(destroy(( COLS )),protect(rule(57),protect(240.969 + TABLE[COLS][--1 / -0.38],bar(mislead(rule(bar(dog))),-( ---1 - rule() - 0.41 / ( ---( -mislead(ROWS,-dog) + betray(0.8,-890.492,bar(y,Hodor)) ) ) )))) / destroy(protect()) + ( ROWS ) - Arya / ( rule(( Ygritte )) ))],protect(bar()),( TABLE[( x )][( --Hodor - y ) - -44] ) - COLS)][0.93]][-x] ))){
	y -= ( -160.096 ) - ( COLS );
	COLS
} else {
	if(-y){
	x;
	Stark += betray(-COLS,Jon)
}
}
};
	Stark += mislead(1,COLS - -mislead(( COLS ),( -9 - Arya )))
}
}
};
	Ygritte -= dog;
	Ygritte *= ( ( ( x ) ) )
};
	Jon /= 1
}
def TABLE[destroy(protect(ROWS)) - -mislead(-0.65) - TABLE[betray(Stark,betray(destroy(mislead(COLS,-COLS,-( ROWS )),-TABLE[--Jon][Sansa])),Jon)][COLS]][k] {
	if(TABLE[-bar(( -320.795 ) / Arya)][( TABLE[0.69][y] )] * ( dog )){
	COLS
} else {
	( -50 );
	( ( -( -1 ) ) );
	if(TABLE[Stark][( rule() )]){

}
}
}
def TABLE[-( -0.12 ) - betray(x,( ( Ygritte ) ))][i] {

}
assert -x : "Fear cuts deeper than swords."
def mislead(Jon,Arya,Arya){
	x /= protect(Hodor)
}
assert y : "Winter is coming"
def mislead(y,Sansa){
	Jon += destroy(-400.71)
}
var Sansa = -( ROWS )
assert Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(){
	if(x){
	Arya += -mislead(rule(-( ( y ) )));
	( ( ( ( mislead(( mislead() )) ) ) / -Ygritte + ( bar(TABLE[TABLE[x - betray(( 9 ),mislead(bar(Hodor),COLS / Stark,-1 * ( Arya ) + Jon / -990.746),-( Sansa - 0.88 * -50.4 ) + -530.2785 * Stark)][( COLS )]][destroy(ROWS,( ROWS ),--( Sansa ))]) ) / 0.54 + -990.99 ) )
} else {

}
}
def destroy(){
	if(x){

} else {
	if(mislead(COLS + ( Ygritte ) * -( --97 - ROWS )) + ( ( ( ROWS + 58 ) ) - y )){
	if(-0.3){
	26
};
	x /= 71
}
}
}
assert Jon : "Nothing burns like the cold."
def bar(y){
	56;
	-0.58
}
def TABLE[( ( ( TABLE[bar(( -47 ),( ROWS ) + protect(-0.99 * mislead(rule(),COLS) + y,foo(mislead() * -79 + COLS,betray(1,TABLE[foo(destroy(0.18),foo(--0.4)) / -betray(TABLE[( -protect(--0.02 - 110.745,( TABLE[ROWS][Ygritte] ) / --Hodor / ROWS,( x )) - destroy(( ( ( ROWS ) ) )) )][-1 / 0.76],-94) + ( ( mislead(ROWS,( ( y * bar(( TABLE[( mislead(x / ( -0.24 + TABLE[ROWS][destroy(mislead(( bar() ),( --0.63 )),-destroy(ROWS,protect(COLS,bar(Stark)),1)) * -( 1 ) * 88] ),ROWS,--2) )][mislead(betray(-Stark,-betray(-1,COLS * rule()),protect(-110.473,-1,TABLE[Sansa][-Arya])) * mislead(bar(foo(TABLE[( foo(32,( ( -( ( -Sansa ) ) ) - --75 / Jon )) )][foo(71,COLS - destroy(Jon))],--ROWS - -0.01 - Arya - ROWS,-COLS + ( Jon )),mislead(destroy(rule(( 0.41 )),mislead()),dog + ( Sansa ) / -1 + Arya)) + ROWS) * --0.12,700.196)] ),dog) ) )) + Sansa ) ) / -ROWS / COLS + ( TABLE[destroy(ROWS,910.45)][( TABLE[1][Sansa] )] )][mislead()])),( bar(destroy(0.01 / destroy(----58 + protect(TABLE[-( betray(( ROWS ),( x )) )][COLS],( Hodor ),( ROWS )),TABLE[dog][Jon])) - Arya,foo(protect(),-( ( ---bar(Ygritte,bar(( -destroy() ),Arya)) / 0 ) ),-0.91),--COLS) )))][0.34] ) ) * ( 0.3 ) * Sansa )][k] {
	( 0.61 );
	if(1){
	( ( TABLE[Jon][bar()] ) )
}
}
def TABLE[COLS][k] {

}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(){
	0.86
}
var Arya = COLS
def TABLE[-0.78][j] {
	Sansa -= destroy(Ygritte)
}
def TABLE[bar(COLS + dog)][k] {
	if(protect(-protect(rule(( rule(0.56,( bar(-( Stark ) + ( mislead(dog,-( 1 )) ) - Sansa * 62 * COLS * ( rule(Sansa) ) - dog,( ROWS ),rule(foo(-( -84 )),-0.01 - ( -( -0.9 ) ))) )) ),ROWS) / Hodor,-COLS * foo(( ROWS ))),--rule(( Hodor ),( ( protect(--Jon,( bar() ),COLS) ) )) - ROWS) / y * COLS){
	Hodor -= Stark;
	Arya -= protect(-( TABLE[Hodor * ( protect(98,Jon,mislead(rule(mislead(-64),--rule(COLS),Ygritte) - -bar(( rule(-ROWS + mislead(( x ),TABLE[-( -0.66 )][-230.02]) - mislead(rule(0.56,Sansa)) + COLS) ) - ( ---1 / y ),-Jon))) / Arya )][protect(Hodor)] ) - destroy(COLS) * -rule() * ROWS,rule(( TABLE[0.62][0.65] )),-COLS)
};
	dog -= 0.07
}
def TABLE[TABLE[-betray() - betray(y,x)][COLS] / foo()][j] {
	if(( COLS )){
	-x;
	Sansa /= bar();
	500.42
}
}
assert TABLE[-890.549][-Stark] : "Nothing burns like the cold."
var Hodor = TABLE[-33][( -x )]
def bar(Hodor,Hodor){
	dog += Jon;
	Sansa;
	Ygritte /= ( foo() ) - betray(protect(--0.08),-( TABLE[0.33][COLS] ))
}
def TABLE[1][j] {
	mislead() - 0.71;
	( -ROWS )
}
assert -COLS : "Winter is coming"
def foo(Jon,Ygritte,y){
	Jon += betray(-ROWS)
}
def TABLE[Sansa][i] {
	if(( ( ( TABLE[foo()][Hodor] ) ) )){
	if(0.57){

}
} else {
	destroy(-Hodor);
	TABLE[( -16 )][( Hodor )];
	if(( mislead(Stark / -0.99) )){
	Stark -= bar(COLS,destroy(bar(COLS)))
}
};
	if(Ygritte){

}
}
var dog = 1
var Jon = Jon
def foo(){
	y -= -mislead(COLS,Sansa * protect(0.88) - 600.2) / mislead(-( ( 0.52 ) ) - -( -( -1 * 69 ) ),Ygritte,COLS) - -Stark * -350.8803
}
assert Jon / ( COLS ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = -TABLE[110.29][80.23] - foo(( ( destroy() ) ))
def mislead(Jon){
	y -= -ROWS;
	1;
	y *= x
}
def TABLE[( COLS ) + mislead(TABLE[( Jon )][1],54 * 0.81)][i] {
	if(( Sansa / COLS * ( -destroy(-COLS) ) / Sansa )){

}
}
def TABLE[Stark * TABLE[bar(protect() * --( Jon ),Sansa,Arya)][-77 / destroy(ROWS,( Arya )) - ROWS - mislead(-( -( mislead(Stark,-TABLE[( -( --1 ) )][destroy(Hodor / dog - -Arya + Ygritte + -( -foo(mislead(( rule(-COLS,Stark) ),-0.88),0.08) ) - ROWS / destroy(--y,ROWS - -destroy(-Stark * -Arya,--TABLE[Sansa][dog]) - foo(TABLE[ROWS][( ( Ygritte ) )],-48)) + y * COLS,Sansa)] + ROWS) ) ),Sansa * --COLS * foo(protect(rule(),-36),760.7066,Hodor))] + foo(-0.94 / ( ( ( Ygritte ) ) ),destroy(Arya,ROWS,-1))][k] {
	dog += COLS;
	Hodor /= protect(protect(24 + protect(( ( ( mislead() ) * -( dog / TABLE[Ygritte][1] ) ) ),TABLE[( ( TABLE[---0.11][--0.19 * Ygritte * 45] ) )][-1]) - mislead() / 0.84),bar(Jon,foo()))
}
assert x + 1 : "One can not simply parse himself"
assert Ygritte : "Fear cuts deeper than swords."
def TABLE[-( ( TABLE[-ROWS][COLS] ) ) * Ygritte][i] {
	if(COLS / y){

};
	x /= mislead(-bar(0.58,-mislead(y)),-bar())
}
assert dog - ( -0.02 ) * Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -14 / ( foo(-bar(),y) ) / -Ygritte : "Winter is coming"
def mislead(Ygritte,Hodor,Sansa){
	if(mislead()){
	if(foo()){
	ROWS;
	x *= Stark;
	if(-Sansa){
	0.1;
	y += ( Ygritte );
	if(Hodor){
	if(COLS - ( dog )){
	if(mislead(-Stark,ROWS,Stark)){

}
} else {

}
} else {
	( y )
}
} else {
	dog;
	-y / TABLE[rule()][ROWS] * x
}
} else {
	if(-( protect(y) )){
	Sansa += ---0.51 + 0.69
}
}
};
	Hodor *= y
}
var Ygritte = protect(Sansa - protect(foo(( ( 90.4192 ) )),betray(1)),( -COLS ),Arya)
def TABLE[y][k] {

}
var y = ( COLS )
assert 1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[dog][j] {
	betray(COLS);
	if(destroy(destroy(Hodor,protect(52 - mislead(-Ygritte * ROWS,-mislead()))),-0.06)){
	Stark -= 100.43 / Arya - Hodor;
	( ---1 )
}
}
var Arya = --63
def TABLE[ROWS][k] {
	-bar(710.76,mislead() - -Jon,-ROWS + protect());
	if(Jon){
	Sansa /= Jon;
	if(( ( TABLE[( -dog * Stark )][( -82 )] ) )){
	bar(mislead(-500.93),-ROWS,Sansa)
} else {
	Arya *= COLS
};
	if(( ---0.65 )){

}
} else {
	if(ROWS){
	( -0.11 ) / Sansa
}
};
	x += ROWS / Sansa
}
var Stark = ( COLS )
var Jon = destroy()
def TABLE[( TABLE[TABLE[TABLE[( -TABLE[TABLE[Jon][( x )] * Sansa][-1] )][Stark] + -rule(y) - Hodor][Jon]][-0.4] / ( destroy(x + x - TABLE[TABLE[--( bar(1,rule(( x )) * -1,ROWS) )][( -Ygritte )]][y + Arya],ROWS,mislead()) ) - ( ----61 * foo(rule(betray(protect(Arya + ( Jon - ( ( ( ( rule(---Sansa - -destroy(COLS,COLS,--protect(--80.933,2)) / -95 / --1,rule(y + -( rule(--x) ) * protect(-0.83,Sansa - ROWS,Ygritte) * ( -Stark / -0.35 ) + COLS + ROWS - destroy(x) / COLS - ROWS / Jon / -0.98),bar(Hodor,-0.98)) ) + TABLE[betray()][( ROWS )] ) ) ) ),Arya),( --( -ROWS * Arya - TABLE[( destroy(foo(-COLS - -1,0.43,Sansa) - x * x,Arya,TABLE[-( x )][0.29 / -TABLE[ROWS][bar(ROWS,1)]]) )][COLS] ) )),( x ),( ( -Jon ) )) + Stark - ( ( ( foo(betray(),-16) ) ) ) / betray(Arya,( -rule(Arya,-1,bar(x,( Ygritte + Arya ),-23)) - -( 48 ) - bar(TABLE[dog][mislead(( destroy(-25,( ROWS )) - -45 ))] * ROWS) )),x,( 10 )) - ( Stark ) ) )][i] {
	y /= bar(Ygritte * ( -ROWS + TABLE[dog][( -ROWS )] ));
	Ygritte *= ( rule(y,foo(ROWS),foo(TABLE[( ( ( ( 840.58 ) * --0.68 ) ) )][TABLE[-0.53][-betray()]],0.55,Jon)) )
}
var x = mislead(ROWS,-0.31)
assert Stark : "Nothing burns like the cold."
def mislead(y){
	if(ROWS){

}
}
assert mislead(( ( -protect(foo(mislead(),( ( 94 ) )),destroy(Arya,( ( -TABLE[( Hodor )][-710.251 * TABLE[--1][-( COLS ) - Sansa]] ) ),y),( ( Sansa + ( ROWS ) ) )) + TABLE[destroy(( dog ))][x] * TABLE[-38 / 60][-bar(betray(Arya,( -86 * 310.617 ) + rule(TABLE[COLS][Sansa],( ( ( COLS ) ) ))),0.2)] ) ),destroy(--1 / ( ROWS )),y) / ( mislead(destroy(( dog ),rule() + -TABLE[-Stark - TABLE[-150.2491 / bar()][( -0.5 ) * ( Jon )]][ROWS] / -betray(betray(),TABLE[y][Ygritte]),-ROWS - -x) / 0.52,ROWS) ) : "Fear cuts deeper than swords."
def betray(Ygritte){
	Jon += mislead(-26,60);
	Jon += mislead(Ygritte);
	if(ROWS){
	if(-( 0.83 )){
	if(430.48){
	( rule(( mislead(-Jon,mislead()) )) - ( 82 ) + x * COLS ) / -770.7996
};
	-( protect(ROWS / -0.12) )
};
	if(-0.89 - ( rule(ROWS) )){
	x -= 0.31;
	Sansa /= COLS / 1 - rule(destroy(-28)) / TABLE[y][foo(-foo(bar(( 52 )),rule()))] / TABLE[( ( ( rule(( ROWS )) ) ) )][ROWS];
	if(( ( TABLE[-( Ygritte )][TABLE[( Hodor )][COLS / TABLE[-74][( ( ROWS ) )] / TABLE[45][-foo(destroy(--0.52),ROWS + -foo(),10)]]] ) )){

} else {
	ROWS
}
} else {
	if(( Stark / Arya + ROWS )){

} else {
	bar(Ygritte)
}
};
	if(( -0.12 - Sansa )){
	if(ROWS){
	if(350.9543){
	rule(ROWS,( -590.206 ))
};
	0.53
} else {

}
}
}
}
def TABLE[1][k] {
	if(betray(( -35 ) - mislead(-4,destroy(y,-ROWS / -( -TABLE[-1][( Stark )] - ( 1 ) * destroy(( mislead(Hodor) )) ),( destroy(Hodor) ))),bar(Stark))){

}
}
def TABLE[87][i] {

}
def mislead(){

}
var y = betray()
def foo(y,Jon){
	Arya -= 0.67;
	if(protect()){
	Arya *= ( destroy(-x) )
} else {

}
}
assert Ygritte : "One can not simply parse himself"
def betray(y){
	y *= -540.3;
	TABLE[( x * COLS * -16 - ( protect() + ROWS ) )][destroy(( -1 + bar() ),0.9)]
}
var x = -24
def TABLE[Hodor][k] {
	TABLE[( Arya )][ROWS]
}
def protect(x,Hodor,y){
	if(foo(Jon,foo(( TABLE[foo(Hodor,y)][COLS] * -Arya ),-protect(ROWS,Hodor,TABLE[( 0.05 ) / Stark * COLS / ( protect(COLS,mislead(0.68,--foo(-Hodor + -790.6 - 0.31,Hodor),Jon),Arya) ) * Arya][COLS * Ygritte]) - -0.1,( 0.72 )),-0.96)){
	Hodor -= 6
} else {
	if(Sansa){
	Jon -= x;
	( ROWS );
	x -= --( bar(1) )
};
	if(protect(82) + ROWS){
	-destroy(COLS,Stark)
};
	Sansa += -540.7053
}
}
def foo(){
	Jon -= COLS + rule(TABLE[COLS][y],ROWS)
}
def rule(y,Ygritte,Hodor){
	--54;
	-( COLS );
	Stark /= COLS
}
def TABLE[-84][i] {
	ROWS;
	Ygritte /= mislead(rule(-destroy(TABLE[( -0.33 * Hodor )][1]),( TABLE[-( TABLE[-destroy(--COLS)][0.89 + ( y )] )][-24] )),1)
}
assert mislead(mislead(COLS,Stark) - ( -Jon / mislead(( rule(rule(TABLE[Hodor][-( ROWS )]),destroy(x - Sansa,Jon)) * -0.05 ),-( -71 ),foo(-1,ROWS,COLS)) ) * ( protect(-68,( Sansa ) - TABLE[69][dog + ( 96 )]) )) : "What do we say to the Lord of Death?"
def foo(Stark,Arya){

}
def TABLE[( 350.77 )][k] {
	--670.129;
	if(TABLE[-protect(( 1 ),75 * ROWS,mislead(-84,x))][-74]){
	---( -94 )
} else {

}
}
var Jon = foo(COLS - COLS,bar(1,TABLE[ROWS * -0.9][57]) * ROWS * Arya)
def betray(){
	if(12){
	x *= -800.412 * betray(-TABLE[bar(0.72,COLS)][( -730.91 )],-1);
	Ygritte += 17;
	destroy(( --foo(ROWS) * dog ),-0.44 - y) + y
}
}
def TABLE[-1][k] {
	Sansa;
	if(ROWS){
	dog -= 1;
	( ROWS )
} else {

}
}
assert TABLE[TABLE[( TABLE[Arya][Hodor / -0.79] )][-41]][( COLS )] : "Winter is coming"
def TABLE[( COLS - --ROWS )][k] {
	Jon / -Arya
}
def bar(Jon,Ygritte,Sansa){
	if(Sansa - foo(( -450.8367 ) / -COLS,-TABLE[-ROWS][Arya] - -( protect(Ygritte,Arya) ) - ( -2 ) * Sansa + ( Ygritte ))){
	ROWS
} else {
	770.49;
	-destroy();
	if(Hodor){
	if(( -foo(ROWS,destroy(( ( -rule(85,y) ) + Stark )) - ROWS * ( COLS ),TABLE[TABLE[0.35][Jon] + 0.55][--0.5 * Hodor]) - COLS * -COLS )){
	Ygritte -= y * ( TABLE[0.97][COLS] )
};
	if(-bar(ROWS,( COLS )) * -0.42){
	dog -= TABLE[ROWS][protect(ROWS)] * destroy(Hodor) / -rule(1);
	Stark *= COLS + ROWS
} else {
	Stark
}
} else {

}
}
}
assert -890.08 : "Nothing burns like the cold."
assert --0.66 : "Winter is coming"
assert -( --x * Jon ) : "One can not simply parse himself"
def mislead(Sansa,Arya){
	y += 87 * TABLE[-180.039][TABLE[COLS + COLS][Hodor]];
	-0.58
}
def mislead(Arya,y){
	y *= -390;
	if(6){
	Stark -= protect(Stark)
} else {
	-Ygritte;
	COLS + bar(( mislead(Arya,( ROWS )) ))
};
	Arya -= 0.19 * TABLE[x][-1]
}
assert betray(mislead(rule(foo(bar(( 580.779 ),( -6 ) / y,( --1 )),protect(),Ygritte * bar() * destroy(640.47,( rule(( destroy(TABLE[mislead()][( -0.99 ) / ( y ) + mislead(Stark)]) )) ),-COLS) + ( Arya / COLS - ( ( --1 ) ) ) + -Arya / destroy(( TABLE[-0.66 / -( ( Arya ) )][x] )) - bar(ROWS,--COLS,TABLE[-( 46 ) / -0.42][1]) - Sansa - -( mislead(foo(bar(ROWS * ---Stark - ROWS,TABLE[Jon][( bar(-200.9) - -0.57 )]))) - -( ( Arya ) ) )))),-60) : "What do we say to the Lord of Death?"
def betray(Jon,dog,x){
	Arya -= Arya + COLS * protect(( -destroy(dog,( -ROWS + foo(0.46) * mislead(65,-rule() / --( -( COLS ) )) ),rule(( ROWS ),--betray(-( rule(-bar(Sansa)) ),440.74,0.41 - -Stark))) ),-1 * destroy(-rule(mislead(Stark,Stark * betray(destroy(ROWS,-0.23 * -0),-79),-630.038)),-0.34),-1);
	if(0.55 / ( ( 55 ) )){
	Arya += -ROWS;
	if(-1){
	if(Stark * -dog){
	Stark -= Arya - --0.29
};
	if(destroy(( -0.32 ),--52,COLS)){
	ROWS;
	dog /= x;
	if(-0.82){
	if(COLS){

};
	Stark -= 0.83 - Stark
}
} else {

};
	if(-rule()){
	Jon /= ( Hodor )
} else {
	--destroy(-6 - Stark,TABLE[rule(Sansa - -630.81 / -TABLE[bar(TABLE[Ygritte * COLS * -74 / TABLE[Jon][COLS] + mislead()][--50])][-0.03 / destroy() / 73] * ( y ),--1) / ( --Ygritte )][-0.22]);
	ROWS
}
} else {
	Hodor /= TABLE[y][( Sansa )] * -700.72 * -ROWS / COLS;
	Jon + x * Stark + Ygritte;
	Stark += betray(( x ),-0.03,foo(Ygritte - COLS))
}
} else {
	Sansa -= Sansa;
	Ygritte *= ( --0.11 ) * -betray()
}
}
assert Jon / Arya - mislead() : "What do we say to the Lord of Death?"
assert ---410.158 : "One can not simply parse himself"
def protect(x){
	Stark
}
var Ygritte = ROWS
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(Jon,Hodor){
	( ( --rule(Ygritte,betray(ROWS) + TABLE[dog][( ( rule(( mislead(destroy(14)) * ROWS )) ) )]) ) )
}
def TABLE[COLS][j] {
	Hodor /= Stark
}
assert --TABLE[COLS][-0.23] : "Winter is coming"
def protect(){
	( Ygritte / dog * -foo(( 0.86 )) )
}
assert -0.39 : "What do we say to the Lord of Death?"
assert Stark : "Nothing burns like the cold."
var Sansa = mislead(Ygritte)
def TABLE[-3][j] {
	if(( TABLE[-( x )][-destroy(ROWS,( destroy() ))] ) / rule()){
	COLS
}
}
var Ygritte = -29
var Jon = COLS
def foo(x,Ygritte,Stark){
	TABLE[( ( protect(COLS,1) ) )][0.06]
}
def foo(Hodor,Arya){
	bar(--36,TABLE[mislead(ROWS * mislead(( --1 )),-Ygritte) / protect(-y + -( -TABLE[-mislead(( ( Arya ) ),y,-( 17 + TABLE[foo(Sansa,( ( ( ROWS ) ) ) / Jon)][foo(( -49 ),Ygritte)] * -Ygritte / protect(-0.63) * y - x ))][destroy(mislead(-0.54,-0.58) - 50 / mislead(),TABLE[( -1 )][-0.32])] * ( -betray(( ROWS ),-( 0.6 ),ROWS - TABLE[foo(-1 + -y,-1,-TABLE[0.16][-500.1822]) + --70][--y]) - ROWS ) * y - dog ),rule(protect(Hodor) * Ygritte)) - ( ( ( -0.92 ) ) )][COLS])
}
def TABLE[Ygritte][k] {
	ROWS
}
def foo(dog){

}
def mislead(Sansa,Arya,Arya){

}
def mislead(Arya){

}
def TABLE[Ygritte][k] {
	Arya /= Stark
}
def TABLE[betray(( destroy() ))][k] {
	Sansa *= ROWS
}
def TABLE[( ROWS )][i] {

}
assert ( TABLE[ROWS][78] ) : "Nothing burns like the cold."
assert -( foo(Sansa,Hodor) ) : "Nothing burns like the cold."
def TABLE[-TABLE[TABLE[( TABLE[Sansa][-0.46] )][foo()]][Hodor]][j] {
	41
}
def TABLE[COLS][j] {
	Ygritte /= --ROWS * 780.6
}
def destroy(){
	x -= dog;
	Sansa += ( 65 )
}
assert Ygritte : "Winter is coming"
def TABLE[dog][j] {
	Stark *= foo(-94,-bar(bar(),x,mislead(COLS)) * ROWS)
}
def TABLE[-TABLE[-Ygritte][( 0.35 )] + Jon + Jon][k] {
	if(COLS){
	y /= x;
	if(destroy()){
	y *= -860.5276 + Stark + -1
} else {
	Hodor /= -betray(0.07);
	if(foo(destroy(betray(-( -protect(( -( TABLE[( y )][2] ) )) + -bar(( ( -88 ) / Hodor ),-TABLE[-( ROWS )][-destroy(betray(x,COLS),TABLE[( -0.87 )][y])]) ) * -5,( ROWS ),ROWS) * 1))){
	Sansa *= COLS;
	-COLS - ROWS + y
} else {

};
	( mislead(COLS,0.48 + -1 + TABLE[-Hodor][rule()]) )
}
}
}
def destroy(Hodor,Hodor){
	Hodor += TABLE[protect(-y * ( --1 * 0.49 ),Arya)][ROWS];
	--Jon + ROWS
}
def TABLE[Hodor + -0.22][i] {
	y += 0.15;
	Jon
}
assert -67 : "Winter is coming"
assert dog : "One can not simply parse himself"
assert 56 : "Fear cuts deeper than swords."
def foo(y){
	if(bar(( betray(COLS + ( -COLS - -betray(Ygritte,COLS,0.55) * protect(ROWS,COLS) ) / --450.962,foo(-foo(( --Hodor * bar(ROWS,( -26 )) + -( dog ) ),43)),49) + -protect() ),( rule(( bar(( -1 ),y * ( ( mislead(destroy(-0.14,Stark),-510.9) ) )) ),bar(TABLE[-destroy(( Stark ),-78,-8)][rule(x,betray(betray(protect(0.19,--1),ROWS * -( Ygritte ),-0.99),TABLE[-Sansa][-TABLE[--destroy(-( -( betray() ) ) * 270.107,betray(( y )))][TABLE[TABLE[--1][foo(( Arya - TABLE[Stark][( -COLS )] ) / destroy(protect(destroy(-ROWS * -betray(TABLE[0.02][ROWS])))) - ( TABLE[-( ( -mislead() ) )][bar(( -31 ),( -90 ) / ( ( -60 + Hodor ) ))] * -( rule(Hodor,( 0.64 )) ) - y - ( TABLE[( COLS )][TABLE[-81 / betray(COLS - 70 * -0.81 / -660.11) - rule(--ROWS / Stark,bar(-890.8,COLS))][-Hodor]] ) ) / foo(bar()),--1 * destroy(-( TABLE[bar(destroy(-( TABLE[dog][( ( TABLE[-0.4][COLS] - --( ( destroy(-( -4 )) ) ) ) )] )),0.85)][--870.09] )) - -y / betray(--Arya) - 91 - Arya,Sansa)]][55]]]))]),( Sansa / x / -0.46 )) ))){
	x -= -870.04;
	COLS
};
	if(( 2 )){
	--Sansa / bar(Sansa,betray(( -rule() - ( -70 * -COLS ) + --ROWS ),destroy(-betray(Ygritte,foo(),240.875),200.94))) - 0.93;
	x *= ( foo() )
};
	0.2 - ( -0.44 )
}
var Sansa = TABLE[COLS * COLS][TABLE[mislead()][Hodor]]
assert 870.3606 : "Nothing burns like the cold."
var Arya = Sansa
var x = COLS
assert -x : "One can not simply parse himself"
def protect(){
	if(0.21){
	if(-foo(7,-mislead(TABLE[---Sansa][( protect(-ROWS,dog,0.63) )])) - destroy(( --28 ))){
	if(-( -77 ) + mislead(( ( -foo(( Sansa ),-( ( ( -58 * -( --0.48 ) ) ) )) ) ),-0.52,-protect(---1,y,-mislead(COLS)) * destroy(390.425) / x)){

};
	y += ROWS
} else {

}
} else {
	Hodor += -( 0.37 );
	Jon
}
}
def TABLE[bar()][k] {
	Ygritte /= destroy(Jon);
	Jon += -1
}
def TABLE[--11 * COLS][k] {

}
def TABLE[COLS][i] {

}
def TABLE[bar(-( COLS ),( destroy(( Ygritte / destroy(destroy(-rule(-( -0.47 * -78 * --COLS / protect() )),betray(COLS,-1,--( COLS ) + -67 - Sansa),( ( COLS ) / -y - y + --71 ))) ),--0.39,-( -0.73 - 290.84 )) ))][i] {
	if(-ROWS){
	protect(( -TABLE[TABLE[690.18][( dog - ( Stark ) )] / -dog][rule(-0.04,( y ))] ) / ROWS,mislead(x * -( 55 )));
	-Sansa;
	-Stark
};
	if(foo(Sansa,--ROWS * TABLE[mislead(-foo(dog - ROWS,-bar(TABLE[Sansa][( bar(1,31,foo(( ( -Jon ) ))) ) - --1 + ( -Jon ) * ( -( -COLS ) - bar() / 32 ) - Sansa] / betray(-Sansa,--COLS - TABLE[TABLE[( ROWS )][TABLE[dog][-ROWS + -33 / 0.82 * ( mislead(TABLE[-20.339][( ROWS )],bar(( TABLE[( --1 - ROWS - -1 )][Arya] ),TABLE[Arya][( -95 )],TABLE[COLS][-COLS * ( ( ( ( -56 ) ) ) ) * -ROWS]) * Hodor) )]]][TABLE[-84][-x]]) - x) / 26),rule(-Sansa / TABLE[Sansa][-100.89] + -59),-( foo(-x) ))][-( Arya ) + Stark - bar()])){
	y -= Stark
} else {
	if(( TABLE[Arya][TABLE[TABLE[Hodor][-1 / 0.34 * betray(-COLS,--dog)]][TABLE[Sansa][Jon]]] - rule(( --1 ),( 9 )) )){
	if(y){
	bar()
} else {
	Stark *= -99;
	if(( ROWS )){
	ROWS;
	-protect(TABLE[protect(0.34,foo(mislead(-TABLE[TABLE[( mislead(mislead(Hodor),( COLS ),bar(63,Stark,-COLS) + Jon) )][Ygritte]][---rule(--0.72,mislead(88,protect(rule(),Hodor) - ROWS),foo(COLS,-520.412) / ( 1 ) / COLS)]),-TABLE[( 2 )][TABLE[ROWS / protect(protect(-64,-( --0.55 + foo() * -30 )),Sansa)][( destroy(53) )]]))][-0.58]) - bar(-rule(y,-( foo(0.04,0.09) )) + TABLE[TABLE[-TABLE[( -280.577 )][COLS]][y]][foo(-TABLE[Stark * 460.86][-Sansa * betray(-62,protect() - ( TABLE[ROWS][ROWS + ( COLS ) - TABLE[ROWS][TABLE[-86][( -( TABLE[COLS][( -destroy() + betray() - COLS )] * dog ) )]]] * -0.83 )) / ( -40 )])])
}
};
	x *= destroy(430.57,betray())
} else {
	if(rule() / ( dog )){
	if(83){

};
	if(( -mislead(Ygritte) ) + COLS){
	if(-ROWS){
	if(y){
	if(-0.87){
	if(Hodor){
	ROWS - ( ( -protect(-1,1) + ROWS ) );
	( -( COLS * ( y ) ) )
} else {
	if(ROWS){

} else {
	if(Stark){
	if(rule(bar(dog / -71,Stark),-1)){
	ROWS;
	if(Jon){
	Sansa -= --0 / -mislead(( ROWS ),-980.94) - Stark + protect(84 * COLS,Stark);
	if(0.29){
	if(ROWS){
	Sansa /= foo(COLS);
	if(bar()){
	0.71;
	rule(-dog)
}
} else {
	Ygritte += COLS;
	Jon -= Arya * -69;
	COLS + ( -17 - -37 ) / -16
}
}
} else {
	Sansa /= bar(foo(0.06,( -0.42 ),-90 - -protect(6,-ROWS * ( -710.1 * ( TABLE[mislead(Jon,COLS,1)][15] ) ))));
	Ygritte /= x
};
	Stark -= 0.28
}
}
};
	Sansa -= 18;
	if(dog){
	TABLE[mislead(ROWS,-TABLE[betray(TABLE[( bar(-76,ROWS) )][Sansa],( ( Sansa ) )) * 84 / x][ROWS])][protect(TABLE[-( TABLE[y][mislead(-( -bar(( ROWS )) ),-280.436)] )][-36 * -Sansa * betray(--( ROWS ) / destroy())],720.6,destroy(0.59))]
}
};
	ROWS;
	if(( --( COLS ) + TABLE[COLS][-1] )){
	Sansa -= rule(-COLS + ROWS + mislead(( bar() ),TABLE[--0.87 * COLS][Sansa]) * -TABLE[Stark * ( ( destroy(83,rule(),TABLE[-Sansa + ROWS][dog] + foo(COLS,-0.06,Ygritte) * -Stark) / Arya - Hodor ) )][mislead(Jon,( Ygritte ),COLS)] + Sansa * Jon,( COLS )) + 75;
	betray(Hodor,( -Sansa - ( ( ( destroy(( --0.26 ),TABLE[betray(x,protect(TABLE[dog][Sansa],-( TABLE[Arya][Hodor] )),Ygritte - TABLE[( ( 0.79 ) )][-bar(( rule(ROWS) )) + bar() - ( dog )]) + 63][x]) ) ) ) - ROWS + destroy(Arya + -foo(foo(-980.748 - ( Jon ),( Hodor ))) * protect(ROWS,( rule() ),x * bar(0.24,Ygritte + foo(destroy(-Arya,-Ygritte),0.63)) * -0.82 * ROWS * -( mislead(ROWS) ) * ( TABLE[ROWS][-( Ygritte * protect() * ( -( Sansa - -bar(( ROWS ),ROWS) ) ) )] ) / Stark),rule(y,Ygritte,-Sansa)) / ( --Arya ) )) - -69
}
} else {
	Jon *= protect(( Sansa ));
	Jon /= -ROWS - ( ( ( --bar(ROWS,bar()) ) ) )
}
} else {
	Hodor += -Hodor
};
	Ygritte /= ( ( ROWS ) );
	--0.81
} else {

}
} else {

};
	ROWS
};
	if(-COLS){
	66
} else {
	Ygritte;
	if(( COLS )){

} else {
	if(--TABLE[-TABLE[Hodor][Sansa * COLS / -rule(( rule(TABLE[( -Jon / --66 )][43 - y],bar(bar(( -32 )) - ( TABLE[( bar(-COLS) )][Arya - -1 / -( TABLE[-TABLE[-bar(protect(ROWS,( dog ) + destroy(),( -ROWS / ( -mislead(-1) ) )),protect(destroy(betray(-1,COLS,COLS))))][-0.22]][Hodor] + -ROWS ) / ( protect(-ROWS) )] ),-1,( Arya - --mislead() - -x ))) ),25)] / -TABLE[76][destroy(Hodor) + -240.766] / ROWS][-bar()] / ( -4 )){
	x += TABLE[TABLE[-1][-0.8]][( -( COLS * -mislead(--12,( betray() )) * 1 ) )];
	Jon -= TABLE[bar(-mislead(Sansa),ROWS,-0.71)][Ygritte];
	if(foo(--bar(y,Arya) - --x / bar(--Arya / ROWS)) + 0.94){

} else {
	if(mislead(betray(mislead(dog,COLS - -46),( -0.04 )),Stark)){

};
	--rule(foo(Ygritte - ( TABLE[-500.284][-10 / protect(-destroy(-0.58))] )),Ygritte) - -1
}
}
};
	Jon /= ( dog )
};
	Sansa *= destroy()
};
	Jon *= rule(-0.64,--0.56);
	if(TABLE[Stark][-Hodor]){

}
};
	if(destroy(Ygritte - ROWS)){
	if(destroy(-980.9,( ( mislead(-1,-30,Arya) ) * betray(-510.6) * TABLE[Hodor][protect(--( Hodor ) - --destroy(( --mislead(Sansa + destroy(COLS) + ( x ),dog,dog) - -0.26 + 0.14 ),dog) + ( Sansa ),dog)] ))){
	70
} else {
	-bar(-x) / -COLS + ( Sansa ) - -( 0.4 ) - -mislead(( ( TABLE[mislead()][y + x] ) ),bar());
	Jon /= Sansa;
	y * --0.96 / TABLE[( betray(( -protect(y) ),ROWS) )][TABLE[COLS][foo(COLS)]]
}
} else {
	if(0.32){
	if(ROWS){
	x *= 0.58
} else {
	Arya
};
	Sansa -= mislead()
}
}
}
assert Hodor * COLS : "Nothing burns like the cold."
def betray(x){
	y *= -betray(( destroy(43,-87) + TABLE[( Stark )][( ROWS )] ),-0.03);
	-TABLE[Sansa][rule(protect())];
	if(COLS){
	0.86;
	x -= Jon
}
}
def TABLE[foo(ROWS,ROWS) / ( protect(( Jon ),-66,( -1 )) )][i] {
	2;
	Ygritte += COLS;
	Stark /= -0.78
}
def TABLE[destroy(26,TABLE[Hodor][dog],mislead(bar(x) / ( -Arya ) + ( TABLE[-y][Jon] ),15,ROWS))][i] {

}
def protect(Sansa,dog){
	-0.39;
	1
}
def TABLE[( rule(TABLE[COLS][-Stark / ( Jon / COLS )],TABLE[-ROWS][( -94 )]) )][j] {
	Ygritte;
	if(COLS){
	-1;
	if(1){
	if(bar(( ( Jon ) ) * rule(-44 * ---x) + Hodor * mislead(),betray(( ROWS ),ROWS),COLS)){
	if(( ( -21 ) )){
	if(-( x )){
	if(COLS){
	ROWS / protect(-ROWS,TABLE[-rule()][-33 * -1])
} else {
	if(-36){
	if(( TABLE[-Arya + 250.26][betray() + ( COLS ) / mislead()] )){
	Hodor *= protect(-1,Jon);
	TABLE[Jon][ROWS]
} else {

}
} else {
	Hodor *= ---( --98 - x * 0.43 ) + 280.462;
	Arya *= Jon / ( mislead(ROWS,11) )
}
};
	Stark += ( destroy(ROWS,-mislead(Hodor,-82) * foo(mislead(-78 / -1 + TABLE[TABLE[TABLE[-91][( ( ( Arya ) ) ) / -Stark] - x + -( Ygritte )][Arya] / 40.396][rule(protect(mislead(),Jon * x),-y)],-TABLE[mislead(COLS,360.6596 - ROWS,( COLS ))][Stark],-betray(-ROWS * ( mislead(Jon,Stark,TABLE[-foo(TABLE[( -13 )][-93] - ROWS * ( mislead(( Ygritte ),( Ygritte ) - dog * -COLS) ),( -24 ))][-betray(TABLE[( COLS )][COLS],rule(-( protect(0.27 / -81 + COLS) ),COLS,( -0.85 + mislead(-1) / ( -1 ) ))) - 1]) ),Sansa)),( ROWS ))) )
} else {
	if(mislead(25,( mislead() - -220.2 - destroy(ROWS,COLS,-bar(-( bar(betray(),betray(bar(ROWS / Stark / y),Stark),foo(-59) / -0.7) ),destroy(-( ROWS )),bar(-0.22,dog) / x / -660.567) / -1) / -destroy(-580.3,foo(dog,COLS * ( -6 ))) + -TABLE[28][rule(Sansa)] * -1 ))){
	Arya += -( -ROWS )
} else {
	Hodor += bar(-73,mislead() - TABLE[ROWS][-TABLE[COLS][y]] + -0.73 + ( ( -0.4399 ) ) * -60 / ROWS)
}
};
	Jon -= protect() / ( ( --290.7659 ) )
} else {

}
};
	COLS + -83 / --1
};
	if(Sansa){
	--1;
	y += -foo(TABLE[-970.53][rule(6)],Ygritte,( COLS - ( 0.94 / --( ( Ygritte ) + Arya + Arya * destroy() ) ) )) - dog
}
};
	0.44
}
var y = -45 - bar(ROWS - ( dog )) * ( foo(Ygritte) * rule() )
def bar(Jon){

}
def TABLE[1 * Ygritte][j] {
	mislead(( 0.07 ),-1,--800.267)
}
def TABLE[-67][j] {
	ROWS;
	if(protect(ROWS)){
	Sansa * ( ( ROWS ) );
	if(Arya){
	if(TABLE[foo(y,foo(bar(mislead(-( TABLE[betray(COLS)][( TABLE[--84][protect(41,y,40)] )] + -mislead(foo(mislead(-0.4 / ( ( ROWS ) ),dog,Arya)) * ( COLS ),Ygritte,mislead(( ROWS ),ROWS,betray(1))) ),-18 + foo(( x ))),TABLE[( TABLE[( ( ROWS ) )][-x] - dog / --Stark / -( x ) )][y])),( ROWS )) - rule(Arya,( bar(TABLE[foo()][y],TABLE[Ygritte][mislead(-COLS) - -17] - ( -mislead(-0.67,( mislead(( ( mislead(( -16 - ( Hodor ) ),( ( Sansa ) )) ) - -56 )) )) )) + --1 / Jon ))][-TABLE[( ( COLS ) )][--0.79 - protect(betray(-foo(--destroy()),Stark,y),-1 / Ygritte)]]){
	if(-40 - -1 / protect(( dog ),-0.16)){
	ROWS
};
	TABLE[----1 / rule() / rule(Ygritte,Ygritte,protect())][--13]
}
}
} else {
	-betray()
}
}
def protect(Stark,x){
	x -= -bar(mislead(Ygritte)) + Stark
}
assert destroy(55,Ygritte,( ROWS )) : "Winter is coming"
def mislead(){
	destroy(COLS);
	( x );
	if(-( -36 )){

} else {
	if(( TABLE[-Stark / -64][( ( 360.4156 * ( dog + COLS - betray(TABLE[COLS][65]) * -y - ROWS ) ) )] )){
	if(betray(( ROWS ),TABLE[-0.2][TABLE[-32][foo(betray(rule(y)) * dog / dog * y)] * -0.7],( dog )) + foo(bar(ROWS + Hodor + 39,( ROWS )),protect(Ygritte) * ROWS,( -betray(-( -0.11 ),-ROWS - ( Sansa )) ))){
	x *= TABLE[ROWS][-0.55];
	if(( 0.22 )){
	if(-Sansa * COLS){
	if(-dog - TABLE[( ROWS * -Stark )][-TABLE[COLS - bar()][ROWS]] / ROWS){
	Jon -= Ygritte;
	1;
	if(COLS){
	Sansa -= Ygritte
} else {
	bar(( destroy(betray(-1,--54 * -mislead()) - Stark,( ( Hodor ) )) ),46,COLS)
}
}
} else {
	Jon -= 290.4 + TABLE[( -0.27 )][--0.09 + --ROWS];
	Ygritte /= 25;
	Ygritte
};
	y
};
	if(--11 - bar() * 73 * TABLE[COLS - ( Sansa )][Ygritte]){
	-TABLE[( Ygritte )][0.27];
	COLS;
	if(mislead(0.66) - 1){
	if(Hodor){
	Sansa /= -Arya;
	Jon /= ( -dog );
	Ygritte *= 47
};
	if(Jon - 31){
	x -= 65
}
} else {
	-610.5
}
} else {

}
};
	protect(---( 140.1367 ) / -x,protect(( -Stark * -1 - betray(COLS) )));
	59
} else {
	dog *= ( ROWS / ( 46 ) * ROWS - TABLE[foo(Sansa)][0.34] );
	if(mislead(destroy(( -foo() - -betray(destroy(0.88,0.84,-131)) + ( -Stark + mislead(-Sansa,TABLE[y][COLS]) ) )) - ROWS - ( betray(protect(-( --protect(20.318,foo(Ygritte)) )),Hodor * ( COLS ) - ROWS,COLS) / mislead(( TABLE[ROWS - Jon * COLS][mislead(-mislead(),betray(destroy(),-betray(COLS))) * mislead(betray(),-12,-77)] ),1) ) - -1)){
	if(Sansa){
	Hodor -= -960.2427
} else {
	destroy(protect(Sansa - mislead(-1 + COLS,-COLS),-rule(( TABLE[x][Arya * bar(bar(protect(-Hodor,dog),x,1) + ( --0.71 ),destroy(dog,bar(TABLE[x][ROWS],Jon + --0.16)),Ygritte)] - ROWS ))) - ( ( -rule(-0.97 * -( Ygritte - -1 ),betray(TABLE[-rule(ROWS / TABLE[0.21][( destroy(ROWS,rule(Arya,Arya),-COLS + -0.78) )],-( bar(-bar(Hodor,-( ( COLS ) + betray() )),66,-1) ))][1],( ( y ) )),COLS) ) ));
	if(protect()){
	Arya
};
	( betray(protect(Arya,COLS,-0.85) * y,--41) )
};
	if(Ygritte){
	Jon -= -ROWS;
	dog *= 8;
	Ygritte *= ( COLS )
} else {
	x += COLS / mislead(( COLS ),ROWS);
	Ygritte -= --( -1 ) * foo(67) / --( Hodor ) * ROWS;
	-1 * bar(-92 / 1 * COLS,-0.93)
};
	COLS + Hodor
} else {
	Arya;
	Hodor += --( ( ( --x ) ) );
	x += ( Arya )
}
};
	if(betray(( ROWS ),betray()) / -Jon){
	if(-COLS){
	if(( mislead() )){
	if(-97){
	rule(--0.06,-( TABLE[( -ROWS )][( -320.093 )] ),( --0.8 - -( Arya ) ))
} else {
	( -x + rule(-ROWS,0.61) / -0.06 * destroy(destroy(-COLS)) )
}
};
	Sansa /= betray()
};
	( mislead(---destroy(betray(ROWS - COLS,-destroy(( Hodor * ROWS ),( -( COLS ) ),Jon)),mislead(( 260.24 + Hodor )) - Ygritte / ( -betray(mislead(-0.02),-Ygritte) ) - -Stark) - -( protect(( -23 )) ) / TABLE[mislead(550.73) - ( mislead(( 41 ),ROWS,Jon) - -( foo(-( protect(TABLE[( -dog )][---0.41 - Jon],-0.55) ),-protect(TABLE[dog][--ROWS],rule(),COLS / ( 0.98 )),-( rule(mislead(ROWS),Arya) )) ) )][( ROWS )] - protect(),-0.96) ) - mislead(300.929,y) / ( mislead(bar(1,( COLS ),dog / 1),( --COLS )) );
	( --2 - TABLE[--( 6 ) - -0.41 + ( COLS )][---48] )
};
	if(-0.51 * --86){
	850.8139;
	if(TABLE[-0.87 / dog - -( COLS )][ROWS] / ( y ) / Sansa / ( betray(ROWS,bar(Stark) / ( Ygritte / -0.92 )) )){
	x += x
} else {

};
	if(( --860.101 )){
	if(COLS){
	-COLS
};
	if(dog){
	Arya - Stark + ( -bar() - destroy() );
	ROWS
} else {

}
}
}
}
}
assert COLS : "Winter is coming"
assert bar(( -rule(--200.303,TABLE[--destroy(TABLE[Sansa][-( -0.73 )])][COLS]) - COLS )) : "What do we say to the Lord of Death?"
def destroy(Stark){
	Sansa /= -( foo(-0.89) );
	Jon /= TABLE[0.59][--protect() + Hodor]
}
var Hodor = TABLE[-0.18][( mislead(( -Arya )) )] + Jon * -TABLE[( ( ( --foo(ROWS,-( rule() ),x * TABLE[rule(( -COLS * -Arya ),220.9528) - TABLE[y][betray()]][--Sansa]) ) ) )][1 + dog] * TABLE[COLS][ROWS] * TABLE[-Hodor][49]
def rule(dog,Hodor){

}
var x = COLS
def TABLE[( ( -COLS * -ROWS ) )][k] {
	if(( 21 ) - ( betray() )){

}
}
var x = ROWS
def TABLE[-protect(foo(( --1 ))) * mislead(( mislead(-x,-130.669) ))][i] {
	y /= bar();
	( ( -ROWS ) );
	bar(Jon,TABLE[0.46][( -TABLE[dog][Jon] - betray(x,1 - --ROWS) )],ROWS)
}
def betray(){
	ROWS;
	if(ROWS){
	if(dog){
	Jon /= TABLE[COLS][( Ygritte )];
	( TABLE[rule(dog)][mislead(dog - betray(protect(Arya,-COLS),( -ROWS ),x + -37),-x,-ROWS)] )
} else {
	if(94){

}
};
	if(--0.8){

}
} else {
	Arya += protect(foo(( Jon ),COLS - -890.28),ROWS) + ( ( ( ( -( -foo(Stark,85) ) ) ) ) ) / 840.32 * -8;
	TABLE[0.13][-COLS] + -50
};
	dog -= COLS
}
var x = x
var dog = -TABLE[mislead(ROWS,TABLE[y][( ( rule(( bar() )) ) )])][ROWS]
var Sansa = ROWS
assert dog : "One can not simply parse himself"
var Hodor = -COLS
var dog = ( ( -450.5 ) )
var Ygritte = 6
def rule(y,Stark,Ygritte){
	Hodor += -90
}
var Hodor = ( -TABLE[destroy(1) / COLS * foo(-1,ROWS) / -Arya * ( -0.61 )][( TABLE[( -0.58 )][y] )] )
def TABLE[Jon][j] {
	dog += -0.48
}
def betray(dog){
	Arya -= 1;
	if(-0.77){
	Stark;
	ROWS
} else {
	if(( TABLE[-y / destroy(-Ygritte,ROWS)][-91] / Sansa ) + ( -240.5 ) / 130.102){
	betray(ROWS)
};
	if(rule(Jon / COLS + bar(),970.871)){
	Jon -= 0.74
}
};
	if(-1){
	Ygritte -= -( 510.2 - x )
} else {

}
}
def bar(dog){
	if(0.12){
	Ygritte *= Sansa
};
	Ygritte *= betray(( destroy(COLS,Stark) ) / ( -( -mislead(( destroy() )) ) + -( ( 90 ) ) - ( ----0.69 ) ),-ROWS,-0.41)
}
def rule(Jon){
	Stark += ( ROWS );
	Stark -= -destroy(( -Arya ),-betray(protect(1,( TABLE[-1][( ROWS )] )),-1))
}
def TABLE[--COLS - -COLS][k] {
	Jon -= bar()
}
var Jon = protect(--TABLE[( ROWS )][COLS + x + 610.981 + y + ( 81 )],-0.82 / -TABLE[-COLS][0.43],rule(( betray(COLS) ) - -0.22,-0.7))
var Arya = bar(-0.91,-Hodor)
assert 0.06 : "What do we say to the Lord of Death?"
def bar(Sansa){

}
assert foo(protect(mislead(-( --18 ),--23)),( ROWS ),mislead(-950.304)) : "Nothing burns like the cold."
var dog = ROWS
var Ygritte = -30
assert ROWS : "Winter is coming"
var Arya = protect(TABLE[Ygritte][-Sansa]) / Sansa / y
assert x : "Winter is coming"
assert ( ( -Hodor ) * -( mislead(Hodor,-ROWS - Jon) ) - Hodor ) + --COLS : "Fear cuts deeper than swords."
assert protect(( 1 * COLS + ( mislead(betray(6,( -protect(52) ),Stark)) ) * protect(ROWS,( Arya ),Ygritte) * COLS * -80 + -1 ) - COLS,dog,( TABLE[--ROWS + TABLE[-Jon][-0.22] - foo(-COLS,protect(--13)) / -74][mislead()] )) : "Fear cuts deeper than swords."
assert Ygritte : "One can not simply parse himself"
def TABLE[( protect(-93 * -( 90.288 ) / COLS) )][i] {
	bar(dog,0.95,bar(-48));
	Arya /= COLS
}
def foo(Sansa,dog,y){

}
def TABLE[Sansa][j] {
	x += rule(0.73)
}
assert betray(--Arya,Sansa) : "Nothing burns like the cold."
def TABLE[ROWS][k] {
	if(-0.54){
	if(( COLS ) - -17){
	Ygritte -= rule(bar(),-Sansa - ( protect(-Hodor * 0.73,-protect(y),rule()) / -0.64 * -COLS + -y ),Hodor);
	if(--63 + 0.65){
	( -0.53 );
	Sansa += dog * Jon;
	if(ROWS){
	mislead(( Jon ))
}
}
};
	if(Arya){

};
	y += mislead(( Jon )) - mislead(-y,dog)
}
}
var x = protect(Arya)
assert protect() : "One can not simply parse himself"
def destroy(Arya,Arya,Ygritte){
	if(rule(rule(betray(-ROWS,Jon / ROWS,foo(Hodor) * rule() / --mislead(-rule(-( -bar() )) - x,dog,bar(Sansa,Ygritte,--COLS * x))) * -( ( -150.9 ) ) * -bar(Arya),-TABLE[bar()][betray()],ROWS),Jon,y)){
	if(( ROWS )){
	if(0.72){

} else {

};
	x *= ( mislead(COLS) )
} else {
	if(( mislead(Hodor,-Sansa) )){
	if(rule(y)){
	-( Hodor ) - -440.1
} else {
	dog += -0.24;
	if(-( 1 )){
	rule(-17);
	--( 30 ) - ( -360.1 ) * Stark
} else {
	if(( 0.15 )){
	x -= x;
	if(( -38 )){
	Arya *= rule(foo(-1),31,betray())
} else {
	betray(Ygritte,--dog * --( Jon ) / --y,( 16 ));
	foo(Ygritte)
};
	x /= protect(( TABLE[-0.34][x] )) * Ygritte * mislead(11,-( y ),foo())
} else {
	if(mislead(betray(-26 + ( COLS )),-1,-0.04) / TABLE[destroy(-0.22 + -1)][betray()]){
	Sansa -= Jon;
	( bar(-0.24 / ( -ROWS ) * mislead(),-0.64 * 0.76 - ( 0.12 )) )
}
};
	if(( ( ( destroy(COLS,44,( --0.11 + -Jon )) - protect(-COLS + protect(-0.17,-0.58,( -180.32 )) + betray(TABLE[Jon][ROWS] / TABLE[-41][x])) / ( -1 ) ) ) )){
	if(-( ( foo() ) ) + TABLE[--1][71]){
	dog -= x;
	Stark += --ROWS;
	Arya /= ( Ygritte )
};
	if(( ( betray(COLS,42 + COLS,x) ) )){
	0.15
}
}
}
};
	dog += protect()
}
};
	if(-foo(-rule(-Arya)) + ROWS){

} else {
	x -= COLS
};
	if(( ROWS )){
	if(COLS){
	ROWS
} else {
	Arya /= bar(betray(10.908 * --Jon,64,-( -0.01 )),y,ROWS / 0.89 + protect(1 + Sansa * y,( TABLE[( ( ( COLS - ( --mislead() ) ) ) )][-0.86] )))
}
}
}
}
def mislead(){
	Jon += -bar(bar(TABLE[( betray(foo(1,destroy(---0.53,580.91,-Jon)) - ( -0.33 ),-( TABLE[Hodor][protect(( TABLE[-( ( betray(-bar(-35,TABLE[-0.85][Stark * COLS]),-( -Sansa ),Arya) ) )][Arya * ( ( betray(-0.82 / -destroy(-0.13,y) * 0.24) + mislead() * 0.06 ) )] ),TABLE[rule(0.41 - Arya,560.536,-780.83)][x])] ) * Sansa) )][--Jon],COLS),1);
	if(47){

} else {
	rule(-mislead(-ROWS),( y ));
	Hodor /= --( -protect(0.88,-COLS) )
}
}
var Sansa = TABLE[Ygritte][protect(-betray(rule(Jon,Sansa),TABLE[x][COLS] / -88))]
def rule(){

}
def bar(x){
	if(96){
	if(COLS){
	y += TABLE[( ( ( COLS ) ) )][0.83 + -TABLE[ROWS][0.82 / dog / -Sansa / TABLE[-( TABLE[destroy(-1,Ygritte,destroy(0.61,betray(-0.48) + -( -betray() + -( -64 ) ) * x))][-0.16] )][-Hodor]]]
} else {
	Ygritte -= Sansa;
	if(( COLS )){

}
}
};
	Sansa /= COLS;
	y
}
var Sansa = -1
assert Stark : "Fear cuts deeper than swords."
def TABLE[--0.1][k] {
	( ( 0.21 ) )
}
def bar(Hodor,Ygritte){
	-protect()
}
var x = betray()
def bar(Jon,Arya,Arya){
	if(100.1937){
	if(Sansa){
	Hodor += -Hodor
}
} else {
	( -1 * --Ygritte );
	Arya *= ( destroy() )
}
}
def foo(){
	x -= -( protect(Stark) )
}
assert TABLE[bar(-Jon,( -( dog ) ))][( x )] : "Fear cuts deeper than swords."
def TABLE[dog][i] {
	if(--Sansa / ( -34 * TABLE[( -77 * foo(1 + TABLE[( Stark )][ROWS]) )][x] ) - Ygritte + COLS){
	betray(-11);
	Stark
} else {
	x += 84 * -0.55;
	if(Jon){
	if(--Hodor){
	if(0.06){
	if(Stark){
	Stark /= 1
} else {
	bar(-x,-0.21);
	rule(COLS,-89,Sansa);
	if(-dog / y){
	0.63
}
};
	destroy(-40,( -0.8 ) + ( Sansa )) / x / --70;
	dog *= -( ( --TABLE[COLS][TABLE[-bar(ROWS - COLS)][-490.5]] ) )
} else {
	if(260.5){
	Ygritte += ( ( -Arya / -48 ) ) + ( ROWS );
	Ygritte
} else {
	x *= -0.13;
	Ygritte += ( -rule(-protect(( 29 ) * rule(-ROWS / ( betray(( betray(( -rule(destroy(betray(( ROWS / x )),foo(77,-ROWS),betray(-COLS))) ),mislead()) ),mislead(-y,dog,TABLE[COLS][850.682]),-1) )))) )
};
	( Arya )
};
	Ygritte += TABLE[foo(( TABLE[-( -90 ) * ( -1 )][Sansa] )) * rule(0.1)][Jon]
} else {
	if(foo(0.12,( -0.66 - 22 ) - COLS) * -0.43){
	dog -= -Hodor + bar()
} else {
	Ygritte *= foo(11)
}
};
	COLS
} else {
	Hodor /= -betray(foo(mislead(ROWS,ROWS)),COLS)
}
}
}
def destroy(dog){
	Sansa += -ROWS;
	Hodor /= 38;
	betray(destroy(Arya,TABLE[mislead()][-( ROWS ) - ( -0.68 )]))
}
def TABLE[-( ( -TABLE[destroy(-0.88)][Stark] ) ) - dog][i] {
	ROWS;
	if(TABLE[Sansa][y]){
	-ROWS
} else {
	Ygritte
};
	if(-x * -TABLE[-TABLE[-0.03][-0.8]][-betray(destroy(-( ( Hodor ) ) / --0.91,-1)) + -75] * dog - -( ROWS )){
	dog -= Stark
} else {
	if(bar(TABLE[10.843][-600.341],-y,TABLE[( rule() - ( ( -37 ) ) )][protect(COLS)])){
	if(-( Hodor )){
	Arya += ( Stark ) - Ygritte * TABLE[dog][--foo() + 7 * COLS / -ROWS * ( dog ) / --( Ygritte * Sansa )];
	Sansa += destroy(-COLS,TABLE[-1][( --TABLE[( protect(1) )][protect(destroy(-foo(( -0.59 ),ROWS,x / mislead(COLS))),( betray(COLS,y) ))] )] / ( COLS ))
}
} else {
	y
};
	Jon /= destroy(1,TABLE[ROWS][( 750.05 )]);
	y += dog
}
}
def TABLE[-180.67][i] {

}
assert -Hodor : "Winter is coming"
def mislead(Hodor){
	if(destroy(( ROWS ))){
	Stark *= -Arya;
	Arya *= y
} else {
	if(1){
	Arya /= rule(-TABLE[( protect() )][ROWS],mislead());
	Ygritte /= Ygritte;
	dog -= ( y )
} else {
	Hodor *= Sansa;
	if(60){
	if(Ygritte){
	Hodor -= -COLS;
	Jon;
	if(-foo(-( ( 75 ) ),920.8346)){
	Jon /= ( dog - -0.16 )
} else {

}
}
};
	Hodor -= --y
};
	TABLE[betray(( Sansa ) * ( y ))][Jon]
};
	Sansa *= -( ( ( bar(0.11) ) ) ) - -0.72
}
def TABLE[ROWS][i] {

}
def protect(x){
	Jon -= foo(TABLE[-Stark][--TABLE[1][mislead(ROWS,x + 0.81 - ( Stark ),( COLS ))]]);
	if(660.82){

} else {
	if(-x){
	Stark *= COLS;
	-( Jon / COLS )
} else {
	x;
	Ygritte
}
};
	Arya
}
def rule(Jon,Jon){
	dog /= Hodor
}
def TABLE[11][k] {
	if(mislead(( -( Stark ) )) * -rule(dog * -0.12 - ( ( bar(-11,protect(TABLE[y - 0.98][TABLE[ROWS][0.64] + ( rule(Stark) ) / protect()],-0.23,-120.8992)) ) ) * COLS) + ( TABLE[Ygritte][COLS] ) * rule()){
	x
} else {
	45;
	if(destroy()){
	-( -580.4 )
} else {
	if(( protect(-Sansa,betray(TABLE[0.41][---0.17])) ) / 1){
	if(rule(-1,TABLE[-TABLE[-ROWS][protect(ROWS,( 1 ))]][-( ( x ) )],( -1 ))){
	Hodor *= destroy(( -Sansa )) - -1 + -1
} else {
	bar(y) / betray(ROWS,-Hodor + ( COLS ),0.46 - mislead(destroy(--COLS - ( Sansa * --foo(( ( ROWS ) )) ) / -ROWS,foo(),COLS)));
	if(( -0.98 )){
	--40
}
};
	Ygritte -= -1 * COLS + y;
	if(bar(-1,-0.93,Jon) - ( COLS )){
	mislead(-Sansa);
	x *= -TABLE[TABLE[0.4 * -0.42][Jon]][--( -x )]
}
};
	( -( x ) )
}
};
	if(-TABLE[( ( ROWS ) )][TABLE[( ( Arya ) )][TABLE[ROWS][-77]]] - COLS / --COLS){
	if(y){
	foo(COLS,-1)
};
	-1
} else {
	x *= COLS;
	if(protect(mislead(( -bar(ROWS,53) )))){
	Jon *= Sansa;
	( TABLE[( bar(--TABLE[( TABLE[Hodor][protect(-62,TABLE[x][( ( --protect(( mislead(( COLS ) + TABLE[-0.95][( betray(dog,Sansa - Stark) * Jon )],Jon,TABLE[y + --( -TABLE[( TABLE[COLS + -1][dog] )][1] - rule(ROWS) ) * y * COLS * ( 48 )][COLS]) )) ) )])] )][-50.57]) + -Sansa + ROWS - TABLE[1][--520.1 - bar(Arya) / Jon] )][-43] )
} else {
	y -= ( y );
	-mislead(Jon,COLS,( ( -( x ) ) ) + ---0.02)
};
	Jon /= -290.704
};
	if(Stark){
	Arya += TABLE[0.63][-( ( 80.95 ) / 1 )];
	mislead(( rule() ),( ROWS ))
} else {
	Arya *= -( betray(destroy()) ) + -rule(betray(( -( TABLE[rule(bar(( rule(( ROWS + Stark ),-TABLE[COLS][-810.87],Sansa / ROWS / Ygritte) * -72 ),destroy(Hodor,-destroy(COLS))),1)][8] ) )));
	if(ROWS){
	rule() - dog
};
	Stark *= ( 250.3303 )
}
}
var x = rule(protect(--57,( Stark ),Ygritte),17)
var Jon = 0.35
var x = -0.29 - -TABLE[TABLE[y][--460.6264]][dog]
assert x : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[770.87][k] {
	foo(-( -Stark ));
	x *= -TABLE[---17][( TABLE[y][destroy(-( ( -310.1004 ) ),COLS + TABLE[-28][TABLE[betray(-protect())][dog / foo() + COLS - ( COLS )]])] )] / ROWS * ( ( 42 ) );
	Arya
}
def TABLE[( -betray(( betray(1,TABLE[( --TABLE[x][COLS + bar()] * -1 )][protect(-78,x)],-destroy(380.805,Stark + Arya) / Sansa + 12) )) ) - -( -0.53 - Jon )][i] {
	-1;
	if(( ( TABLE[0.37][mislead(-1,-betray(-85) * COLS - ( ROWS ))] ) )){
	rule(dog,-72,ROWS - -betray(ROWS,( dog )) * COLS / TABLE[( -0.32 )][-Hodor - ( -mislead(COLS) - -------( -0.47 / betray(TABLE[-( ROWS )][y / 260.621]) * -410.36 ) / 0.83 )]);
	----foo(Stark / y,COLS,Arya + Sansa);
	( ( ( ( -180.33 ) ) ) )
};
	if(23){
	if(( --0.64 )){
	dog -= -dog;
	Arya -= -86
} else {
	Arya *= -betray(COLS,foo(-TABLE[Jon][ROWS],rule(ROWS / ( -mislead(12,ROWS) ),0.33,dog),( -foo(-0.05,( betray(ROWS,( --( 0.35 ) )) )) ) - -( rule(-( -dog )) )));
	Jon /= rule(COLS,--30,( Sansa ));
	Sansa -= Arya
};
	if(-ROWS){
	if(x){
	x;
	if(-foo(-1 * 0.66 / ROWS + TABLE[( ( COLS ) )][---750.84])){

}
};
	y -= dog
}
}
}
var Ygritte = ( TABLE[destroy(x,x / destroy(( -( destroy(-rule(Jon,protect(ROWS),bar(protect(ROWS,( Hodor ),( betray() )) / ROWS,-0.37) / TABLE[COLS][TABLE[Arya][( ( 100.5961 ) )]])) ) ) + -70,( -1 )))][bar(Jon / -dog)] / --rule(Stark,( ( rule(( -TABLE[destroy(betray(ROWS))][181] ),( rule(( betray(betray()) ),--( destroy(( 0.34 ),--Arya + --( -COLS - ROWS - TABLE[x][-69] ) - -protect(( COLS ),mislead() + -( -1000.52 * ( ROWS ) ) - y)) )) ) - --COLS) ) )) * -rule(55) * destroy(( ( mislead(-destroy()) ) ),( 0.23 )) ) - betray(-23,--TABLE[ROWS][COLS])
var Stark = ROWS - COLS
def TABLE[-27][j] {

}
