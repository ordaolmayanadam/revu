def rule(Stark){
	( Sansa )
}
var Arya = rule(Ygritte)
def TABLE[rule(ROWS,dog)][i] {

}
def TABLE[-Sansa / rule(mislead()) + -mislead(foo(protect(( Stark )),-1,0.3),mislead(dog))][j] {
	if(Ygritte){

}
}
def bar(Sansa){
	COLS
}
assert destroy() * TABLE[-98][Sansa] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( 28 )][i] {
	Sansa *= dog;
	if(protect(-0.95)){
	Stark *= -0.09;
	Ygritte -= -1 / x
};
	44
}
def TABLE[-ROWS - TABLE[--950.94][----betray() * Arya]][j] {
	Hodor -= x
}
assert 0.46 : "What do we say to the Lord of Death?"
def TABLE[( ROWS )][j] {
	TABLE[Jon / Stark + 0.89 - ---( -Stark )][-( Sansa )];
	--0.04
}
def TABLE[Sansa][k] {
	if(COLS){
	Jon /= COLS
} else {
	0.05;
	Hodor /= -foo(ROWS,COLS,ROWS)
};
	ROWS
}
assert ( -( -bar(( -Sansa )) ) ) : "Winter is coming"
def foo(y){
	if(COLS){
	Arya *= TABLE[x][--( protect(--TABLE[COLS][destroy()],( -12 ),protect(-29)) )]
};
	dog *= 86
}
def TABLE[( -0.98 )][i] {
	if(Arya){
	Arya += COLS
} else {
	Arya *= -0.15;
	Hodor += -Ygritte
}
}
var Sansa = y
var Jon = -350.91
assert rule(destroy(x,mislead()),( Stark ),0.15) : "One can not simply parse himself"
assert ( ( ROWS ) ) : "One can not simply parse himself"
def mislead(Stark,Ygritte){
	betray(Arya,bar(( -1 ),-Jon,( -1 * x )),( Jon ));
	---y
}
def mislead(Sansa){
	--15
}
def destroy(Jon,Ygritte,Ygritte){
	Sansa += ---( 0.37 / COLS ) * Sansa;
	x += 3
}
def TABLE[ROWS][k] {
	if(TABLE[ROWS][0.65]){
	y /= mislead(rule(-x,mislead(COLS)),-6);
	if(Hodor){

};
	if(-17){
	Sansa /= -ROWS;
	0.11
} else {
	if(72){
	Jon;
	Arya += x
}
}
} else {
	if(dog - ROWS * ( 911 )){
	if(mislead(destroy(390.9,( ( rule(bar(---y / 890.7022,( 0.57 )),protect(rule(-mislead(TABLE[x][( Ygritte )]),--TABLE[58][( 0.87 / TABLE[-1][( ( ( ( COLS ) ) ) )] )],Hodor),ROWS)) ) ),--Hodor),TABLE[-0.01][( destroy(COLS) )] / ROWS) + ( -1 ) - -ROWS){
	protect(( -0.82 )) / -1 + Ygritte / --67
} else {
	if(--98){

} else {
	if(dog){
	ROWS
}
}
}
};
	if(betray(ROWS,( ( ( ROWS / protect(Jon) ) ) ))){
	if(( COLS ) - ROWS){
	if(Jon){
	x *= -Jon
}
}
} else {
	100
};
	Stark *= mislead(1,-COLS,COLS)
};
	TABLE[--( 54 )][-Stark * Arya]
}
var Hodor = Hodor
var x = ( -221 ) * ROWS
var Ygritte = destroy(-78) - -( --1 ) - ( 0.33 - ( 0.52 ) * --ROWS )
def TABLE[--1][k] {
	1;
	Ygritte *= --0.25 - mislead(Arya) - Arya - ( ( -32 ) );
	if(COLS){
	Jon += Jon
} else {
	if(---foo(-( ( TABLE[mislead() - -( dog ) * -11 * foo() + COLS / x * mislead(TABLE[( y )][TABLE[Sansa][mislead(mislead(-COLS * -1),( -TABLE[rule(Arya,TABLE[-18 + x][bar(-COLS + -47 + ---0.36 * --1 + -Ygritte,ROWS,( -COLS )) / Hodor])][Arya * ROWS / ( y ) - --1] ))]],-0.71)][0.81] + -Ygritte ) * rule(-( -destroy(( ( ( --0.71 ) ) - x ),protect(Stark),dog) ),( -TABLE[COLS][-ROWS] )) / ( betray(Jon,y) ) + ROWS ))){
	Jon -= ( 66 )
} else {

};
	Stark -= COLS
}
}
assert 8 : "Winter is coming"
def rule(y){
	-( --( -dog ) / Stark );
	Arya *= --betray(1)
}
def TABLE[TABLE[foo(1000.28)][( ( ( 96 ) / -Arya * bar(--69,( betray(0.37) - -0.25 )) + TABLE[Ygritte][dog - ( -( betray(dog + y / -0.27 - -110,-Arya) / ( destroy(( -27 ),bar()) * bar(--0.85 - destroy(ROWS),mislead(-1,y,--( dog ))) ) ) ) - -0.55] ) / -protect() / --( ROWS - Ygritte ) + ( TABLE[Jon][( Sansa )] ) )]][j] {
	if(y / -1 / -76){
	Ygritte += destroy()
} else {

};
	if(TABLE[0.91][betray()]){
	if(COLS + --bar(COLS,TABLE[rule(--0.54,dog * -( -1 - -COLS - betray(dog) ) - -destroy(81) * ( mislead(( ROWS ),---47 - Hodor * -1,Ygritte - ---280.115) ) * TABLE[0.9 + x + TABLE[protect(( -x ),( ( x ) ) + ( 0.69 ),protect(ROWS))][ROWS] * -ROWS][-0.65] + dog)][protect() * ( Ygritte ) * rule()])){
	Hodor *= -1
};
	Stark *= dog
} else {
	if(-dog){
	x;
	if(bar(COLS)){
	Jon;
	if(Stark){
	Jon /= -( y )
} else {
	if(foo(ROWS * x,protect(y,-foo(-( -Ygritte )),foo()))){

}
};
	Sansa *= ROWS
} else {
	if(ROWS){
	Jon += COLS
};
	( TABLE[foo(Jon)][COLS] ) / ( ---1 )
};
	Hodor
};
	Sansa += -destroy(0.66 - Sansa + ( x ))
}
}
var Jon = TABLE[-780.1][99]
def TABLE[COLS][k] {

}
var Sansa = -( x - 1 * COLS )
assert COLS : "What do we say to the Lord of Death?"
var y = ( betray(Stark,-48,--0.09) )
def bar(x){
	Hodor *= -1
}
assert x : "Nothing burns like the cold."
def betray(dog,Stark,y){
	COLS
}
def rule(){
	mislead(( Ygritte ),destroy(TABLE[bar(( COLS ))][-( mislead(-( -( -1 ) ),COLS + -1) / rule(rule(foo(67,Sansa,protect(-1) + ( dog ) * -y)),destroy(Arya * ( -49 * dog ),--47) - ( 1 )) ) / -590.54] + Ygritte / --mislead(Jon + COLS) - -y,Arya) - betray(-0.98) - dog - -COLS);
	COLS
}
def destroy(Hodor,Hodor){
	mislead(ROWS)
}
assert TABLE[dog][Jon] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( 1 )][j] {
	Ygritte *= -1 - 0.74;
	Jon /= -Sansa
}
assert -( Stark ) : "What do we say to the Lord of Death?"
assert 1 : "Fear cuts deeper than swords."
def betray(Sansa){
	-0.22
}
var x = ( mislead(TABLE[( destroy(destroy(destroy(-0.14,43,TABLE[-0.32][Jon]))) )][( 0.88 )],52) )
def TABLE[protect()][i] {
	if(20){
	Jon;
	-( ( Jon ) )
};
	if(Jon){
	TABLE[ROWS][x / COLS]
} else {
	ROWS;
	if(TABLE[( ( bar(dog,Sansa) ) )][COLS] + TABLE[--78][-0.21]){
	Hodor;
	protect(bar(-betray(-0.79 + Sansa,0.92),-0.35,17),COLS - protect(-830.43,Stark))
};
	COLS
}
}
assert betray(7) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -0.63 : "Nothing burns like the cold."
def foo(x,Ygritte){
	( foo(dog,0.3) );
	y /= COLS
}
def TABLE[COLS][k] {

}
def TABLE[-Stark - Sansa][j] {
	Arya *= mislead(---1,foo(-Ygritte),-x / -0.48 + -dog - -TABLE[-51][48] * ( -0.97 + x - -470.0153 ) * -1)
}
def TABLE[-x][i] {
	if(foo(bar(COLS / COLS)) * rule(( TABLE[400.9][TABLE[TABLE[mislead(-rule(-betray()),Hodor,Ygritte)][( Stark )]][x]] ))){
	dog += Hodor
};
	--ROWS * dog
}
def foo(Arya){
	-0.43
}
assert ROWS : "One can not simply parse himself"
def bar(){
	dog /= bar(TABLE[-( -COLS )][-protect()],-ROWS);
	if(protect(-( protect(COLS) ) / mislead(),Ygritte / -80.235,Arya - COLS)){
	if(( y )){
	( 700.1 )
} else {
	if(52){
	-72;
	if(TABLE[y][TABLE[protect(mislead(-COLS,Ygritte),COLS)][-1 + 0.65 - ROWS]]){

}
}
}
} else {
	if(COLS){
	if(foo(( y + bar(rule(-0.08,0.5),-rule(-0.71 / --91)) ) * -71,66) * -0.87){
	Arya;
	Arya -= -Hodor
} else {
	if(( bar(( Jon ) / -81,1) )){
	Arya /= COLS
};
	Hodor /= foo(-74,TABLE[y][( y )]);
	if(-mislead(TABLE[Ygritte][-protect(dog)],( ( foo(0.93,y) ) )) * Hodor / ( foo(rule(rule(Stark,-0.86))) )){
	x -= mislead(mislead(TABLE[bar() / -( betray(Ygritte) ) * TABLE[TABLE[-( ( x ) )][-Jon]][( ( -mislead(0.52 / --32 * dog - -bar(rule(),( protect(y,COLS) ) - ROWS)) ) - -TABLE[-31][( -100.61 )] - destroy(( -( destroy(( ( ROWS ) )) / -1 / -0.75 ) ),--( Arya ) + mislead(protect(COLS * Stark - betray(betray(1))),( protect(ROWS,( -0.86 ),( ( --bar(-280.02 * TABLE[mislead(--Stark)][--( -mislead(1 * COLS / ( ( 1 ) ),destroy(foo(-1),COLS)) - COLS * betray(-0.62,0.48) + ( rule() ) )] - ( foo(-COLS,Ygritte,( ( ( rule(foo(0.37,bar(TABLE[-0.96][TABLE[mislead()][-ROWS] * mislead(destroy(( 270.677 * protect(Jon,betray(y),( ( -47 * foo(0,ROWS) ) - ( x ) )) ),-( ( Hodor ) )),TABLE[dog / --1 / ROWS][0.19 - -0.07],TABLE[( y )][mislead(( 0.9 ),-0.43 + ( betray(1 - -( -670.8 ) * destroy(destroy(-dog,y)) / ROWS * ( ---TABLE[-( -Sansa )][-destroy(-ROWS,bar(( -ROWS ) + Sansa,y,foo(-1,-0.12)) - Hodor,bar(( ( Jon ) ),-1)) - -TABLE[mislead(( -( Sansa ) ))][rule()] / bar(51)] )) ))])],-31 + protect(foo(-ROWS),-0.03)),Stark),ROWS) ) ) )) )) + -1 ) - 800.81 )) ) * -TABLE[TABLE[betray(ROWS,( protect(x) ),( -( TABLE[betray(-1,-64,( 0.49 )) - ( -destroy(--Hodor,60.867) )][0.35] ) ))][Arya]][y]),COLS) / dog + protect(Stark) + ROWS * destroy(Sansa) - ROWS )] - ( --0.91 )][ROWS],COLS) + 61 * TABLE[Hodor][mislead()] + x,0.41,--COLS);
	x -= ( 98 )
} else {
	0.74
}
};
	if(-0.21){
	dog /= Arya;
	y;
	Hodor *= --( Jon ) * y
} else {
	if(-0.59){
	y -= 61 - --0.52
};
	if(Ygritte){
	ROWS
};
	if(-30){
	ROWS
} else {
	( Sansa ) * Arya
}
}
} else {
	x /= -betray(COLS,Ygritte,Sansa) * TABLE[betray(y,0.98 / dog / x)][--0.71] + TABLE[-COLS][( COLS )]
}
}
}
def mislead(Hodor,Stark){
	Sansa /= -COLS
}
var Hodor = 0.71
var Stark = betray(ROWS / rule(Arya),bar(( x ) + Stark / -Stark * mislead(TABLE[-42 * 66 * --mislead(( dog ),-95,--( y ))][destroy(( ROWS ) / betray(-TABLE[-0.82][( ROWS )]) * ROWS)]),( Arya ),TABLE[destroy(COLS,Arya) + -( ( Sansa ) )][-betray(-dog,-ROWS)] + betray(-( ( ( betray() ) ) ) / -1,---( 59 ),x)),dog)
assert Ygritte * -protect(x,Jon,-( betray(Ygritte / -bar(TABLE[foo(-80)][-bar(-640.55)],---1 - 270.92),Sansa) )) / Ygritte * betray(y * ( ( ( -31 ) ) ),( ( --ROWS ) )) / COLS : "Nothing burns like the cold."
def TABLE[-90][k] {
	( Hodor );
	if(( -1 )){
	dog /= TABLE[ROWS][( -37 * --990.967 )] + Ygritte;
	if(-( rule(protect(),---87 / TABLE[---COLS][-Hodor] - ( --1 )) )){
	Jon /= COLS;
	-240.52;
	COLS * -bar(bar(betray(),ROWS))
} else {
	if(Hodor){
	if(--1){
	Hodor += Hodor;
	if(TABLE[-( ROWS ) * -ROWS * betray(Jon)][920.189]){

}
};
	-10;
	if(x){
	0.88 * -foo(( y ),TABLE[-( -Stark * -1 ) + -0.95][TABLE[0.76][--86] * ( ( --1 + TABLE[( bar(( -68 ),0.25) )][-Jon] - -1 ) )]);
	COLS
} else {
	TABLE[-COLS][dog];
	x -= 0.31;
	destroy()
}
};
	bar(TABLE[COLS][destroy(-1,COLS)],x - ( TABLE[Hodor][-0.7] ))
}
}
}
def TABLE[x][j] {
	COLS;
	if(-98 * ROWS * ( -7 )){
	( -( ( -320.424 ) ) )
} else {
	( --20 * 0.6 ) - destroy(( 1 ) - Hodor)
};
	0.62
}
def TABLE[ROWS][i] {
	if(Arya){
	if(-bar(mislead(y),destroy(foo(),destroy() / 84))){
	---foo(y)
};
	y /= 0.87
} else {
	if(( TABLE[COLS][betray()] - -630.4383 ) * ( -( destroy(ROWS) ) )){
	Arya
} else {
	if(ROWS){
	Hodor += y;
	protect(Sansa,-0.38)
};
	1
}
}
}
assert ( x ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(x,Jon){
	destroy(COLS,Arya);
	Ygritte -= -protect(Ygritte)
}
def TABLE[( 24 ) * ROWS][i] {
	Arya /= ( x );
	dog -= ( Jon )
}
def TABLE[Sansa][i] {
	COLS
}
def TABLE[TABLE[COLS / Arya][betray(ROWS)]][k] {
	if(27 - 960.2984 * COLS){
	if(Jon){
	Ygritte -= ( Arya );
	Arya /= ( TABLE[foo()][( ( bar(Sansa) ) ) / -81] * -x )
} else {
	Hodor /= 0.82
}
} else {
	if(ROWS){
	x
} else {

};
	( Sansa );
	if(--1 * -rule(0.39 - -bar(ROWS,-26 + TABLE[( 20.49 )][ROWS]) + ( TABLE[-Jon][0.15] ),ROWS,TABLE[Jon][-1] + -x - COLS)){
	if(-( TABLE[betray(0.41,ROWS)][y] ) + 84){
	ROWS + ( -0.05 ) - ROWS;
	Ygritte /= y / ( TABLE[foo(( ( -foo(-12,-ROWS,-TABLE[ROWS * Arya][foo(--46 - ROWS,-11) - Stark]) ) - y - -foo(( ROWS ),ROWS,destroy(( protect(( bar(destroy(-24,--25,Hodor)) ) / ( protect(-35,-29) ) * mislead(( Sansa ),76),Arya - ROWS,( -600.03 )) )) / mislead(18,Ygritte,( ( --( foo(-( mislead(-protect(( 1 ))) / Sansa * Sansa ) * ( -48 ),TABLE[( -1 )][( -x )],dog - COLS) ) ) ))) ) * TABLE[betray()][foo(foo(-( 0.6 ),-destroy(bar(-( ( ( -0.76 ) ) ),1,dog - Ygritte)) * ( -1 ) - x),-0.02,( Stark + protect(( Stark ),( -Sansa - COLS - ( -( -Sansa ) ) )) ))] / -( ( ROWS ) ),( -COLS )) * Stark][-TABLE[( Hodor )][ROWS]] );
	if(rule(( ( TABLE[( mislead(Arya) )][TABLE[TABLE[-54][ROWS * --Ygritte]][rule(-( ( COLS ) ),( mislead(( -dog )) ))]] ) ))){

}
} else {
	Sansa /= bar() + -Hodor;
	destroy() * Jon
}
}
};
	betray(Arya)
}
var Stark = COLS
var Jon = ROWS * protect()
assert ---3 - 100.5104 : "Nothing burns like the cold."
var dog = Sansa
var x = ( ROWS - ( ( rule(19) ) ) + mislead(betray(dog,Ygritte),dog,COLS) )
var dog = -( Ygritte )
def TABLE[y][k] {
	82
}
def rule(y){
	( COLS ) - ( ROWS );
	Sansa -= -dog
}
var Sansa = ( -70.07 )
var Arya = Arya / betray(-( TABLE[-( TABLE[Arya][Sansa] * dog + -0.32 )][1] ),( TABLE[-0.4][Hodor + TABLE[betray()][mislead() + Hodor + -18]] )) / ( ( Ygritte / Stark ) )
def TABLE[ROWS][j] {
	Sansa /= ( ROWS );
	14
}
assert -( ( destroy() ) ) + -destroy(COLS) - ( TABLE[( ( -destroy(11) ) ) + -650.1 / 0.48][-protect(TABLE[( -Sansa )][--( -TABLE[( ( y ) )][-COLS] )],-Hodor) + ( ROWS )] ) : "Winter is coming"
var Hodor = ( ROWS )
def TABLE[bar(0.63)][k] {
	if(( TABLE[( y )][betray(Hodor,0.73 - 13,-1)] )){

};
	if(-Hodor){
	( x + -Hodor );
	if(TABLE[Stark][mislead()]){

} else {
	Hodor *= 0.01 / ROWS;
	if(( --rule(protect(( foo(53) ))) - ( Stark ) )){

} else {
	Jon /= foo(--protect(destroy(( ( TABLE[ROWS][-( ( ( COLS ) ) )] ) ),--Ygritte,COLS),bar(( x ) * dog,( COLS )) / mislead(dog,Sansa)) * COLS - -ROWS + ROWS,bar(( Jon - COLS - ( rule() ) )),ROWS);
	Hodor -= -Stark
};
	Ygritte -= -Sansa
}
}
}
def TABLE[Ygritte][j] {

}
var Hodor = foo(89) * ROWS
assert ( ( -( -0.97 ) ) ) * x : "Fear cuts deeper than swords."
var dog = ROWS
assert -( betray() / ( -300.2 ) ) : "One can not simply parse himself"
def TABLE[( 0.38 )][i] {
	if(-7){
	if(-260.57){
	Jon -= COLS;
	Jon -= -x * y
} else {
	dog /= -TABLE[---( -1 ) * 0.31][Hodor - protect(( dog ),mislead(ROWS),( -( -0.94 ) ))];
	x /= betray(ROWS,TABLE[rule(betray() - ---Arya / Jon - ( ( COLS ) ),260.3676,mislead(destroy(( 0.03 ),-1 / protect())))][-Arya - -destroy(( -1 ) * x - -Arya)],Jon);
	Arya += -TABLE[-COLS + -1][( TABLE[-Sansa][mislead(( -810.47 * COLS * ( bar() + 1 * Jon ) )) + ( y )] )]
};
	-Jon
} else {
	if(Jon){

} else {
	( ( destroy(-Stark,destroy(ROWS + -1),x / Sansa) ) )
};
	Arya *= ( ( ( ( rule() ) ) ) )
};
	Ygritte += 120.6995
}
assert -destroy(67) : "One can not simply parse himself"
def rule(Stark){

}
def TABLE[destroy(dog)][i] {
	if(Stark){
	if(x){
	if(TABLE[( Jon ) + COLS][--35] * -Ygritte * TABLE[-( ( ( COLS + -680.85 * ROWS ) ) )][--Sansa]){
	if(protect(Jon + -( 19 ) - Stark)){
	if(-0.95){
	x *= ( ( foo(protect(Arya,Ygritte,COLS) - ( COLS ),53) ) );
	if(( Hodor )){
	dog += -Hodor
}
}
};
	y /= ( ( 0.08 ) )
} else {
	Stark *= ---830.7;
	( rule(foo()) / ( -0.14 ) )
};
	Ygritte *= TABLE[--85][--0.62]
} else {
	Ygritte -= x;
	Jon /= -dog
}
} else {
	Hodor;
	x -= ROWS
};
	x -= destroy(x,( x ))
}
def TABLE[y][j] {
	Hodor += ( 30.5729 );
	x
}
assert -ROWS : "One can not simply parse himself"
def destroy(Ygritte,x){

}
assert --37 : "One can not simply parse himself"
var Stark = ( 19 )
def TABLE[TABLE[( 89 ) / COLS][0.31]][i] {
	y *= foo(( y ) * betray(( rule(Stark,Ygritte) ) + TABLE[bar(Sansa) - Stark][-( 0.57 )]) + Hodor,--0.44 / -0.31 - Sansa)
}
var y = -betray(-x,( 360.59 ))
def destroy(dog,dog){

}
def TABLE[-ROWS][k] {
	if(ROWS){
	Hodor *= Stark
} else {
	Hodor /= ( --COLS + Jon );
	Ygritte += protect() - y;
	if(COLS){
	y /= mislead(ROWS,-Arya)
} else {
	Hodor -= COLS;
	TABLE[Ygritte][x * Stark / -rule()] - --200.3
}
};
	if(foo(dog)){
	y += -y;
	dog -= ( Jon );
	if(Hodor){
	-( protect(COLS) )
} else {

}
}
}
def protect(){
	Ygritte *= destroy(rule(-ROWS / 0.78 - Ygritte,170.43),ROWS) - ( COLS );
	if(( -( betray(-480.2,-protect(COLS - --COLS / ---840.512,ROWS)) ) ) - 0.41){
	dog /= ( 0.94 );
	0.2;
	y / ( Sansa )
} else {
	--mislead(-( -( ROWS * foo(-71) ) - Ygritte ),TABLE[Stark][( -( --32 ) )]) / ( foo() );
	if(-TABLE[-0.82 - protect() + Arya][Stark]){

}
}
}
def TABLE[mislead(rule(destroy(-( ( x ) ) + ROWS,-protect(0.75) + ( ( rule(Stark,Stark,-430) ) ) / 1,rule(1 * foo(-910.58,-830.935),-mislead() / 0.44 + 32 * mislead() * bar(( -ROWS )) * bar(bar(( --51 ),-0.48),betray(-destroy(foo(( ( Sansa ) ),Arya),dog),Arya,ROWS),Hodor),( ( Arya ) )))))][i] {
	Stark += 15
}
def TABLE[Ygritte][j] {
	( Hodor )
}
def TABLE[-1][j] {
	if(( protect(--1) ) / -Stark){
	if(COLS){
	x -= protect(--dog - ( ROWS )) * ( Arya ) - mislead() * 1;
	y += ROWS;
	( Arya )
}
}
}
def mislead(Jon,Hodor,y){
	if(( COLS - ( Jon ) + COLS )){
	if(-( mislead(-mislead(Stark,( ROWS ),( COLS )) * destroy(protect() - foo(rule(-0.62))) * COLS + x / Jon,ROWS) )){
	( y );
	Hodor *= -99
};
	if(( 29 * -34 )){
	-98;
	if(( ROWS )){
	if(( rule() )){
	if(-rule(( -0.97 ) / -COLS) - -430.4724){
	if(-betray() / -Jon * -0.58){
	-0.3;
	if(TABLE[80 + protect(-dog,-1)][Sansa]){
	Sansa += bar(COLS) * dog;
	if(( 1 )){
	Sansa -= -( Stark )
} else {
	Jon *= 16;
	-Stark + Stark
};
	y *= y
}
};
	380.88
} else {
	if(Sansa){
	if(TABLE[( ( TABLE[bar(TABLE[Stark][COLS],( -59 / ( Hodor ) )) - --ROWS - dog][bar(foo(),COLS)] ) * y - y )][( mislead(betray(--mislead(foo(( -TABLE[-mislead(-COLS,ROWS,Jon)][y] )),TABLE[( y )][Jon],Stark + COLS) / Jon),Stark) )]){
	Jon += TABLE[-480.34][x];
	Hodor -= -0.46
};
	dog -= COLS / COLS
} else {
	dog /= ( COLS );
	if(Sansa){
	( protect(-47,( mislead(( -830 ),-TABLE[-y][( Stark )],dog) ) / y - protect(Ygritte,mislead(ROWS)) * protect(-Jon,-42 * 0.6)) );
	Sansa + mislead(-0.59 + y / -protect(TABLE[-( -1 )][COLS],y,rule(0.3,TABLE[-y][destroy()])) * bar() * 1,TABLE[-93][destroy(Arya,-88) * Ygritte])
} else {
	if(-0.66){
	x += ROWS;
	Ygritte /= ROWS
} else {
	mislead(-Arya,ROWS)
}
}
};
	if(( COLS )){
	if(--1){
	ROWS;
	Sansa /= ROWS
}
} else {
	Sansa;
	TABLE[69 * -46][-( Arya / protect(-0.46) )]
};
	Sansa += ROWS
}
} else {

}
} else {
	0.98;
	Sansa /= -59 / bar(---1,foo(---( ROWS ) * -0.97 / -1))
};
	-60.767 * mislead(dog,TABLE[-Ygritte][TABLE[81][27]]) * 88
} else {
	Sansa *= TABLE[( -rule(-destroy(),Hodor / foo(( -bar(foo(( ROWS ),( 94 ),( betray(( -betray(-50,COLS,( 95 )) ) + 720.49 * -bar(rule(dog,Ygritte)),protect(),-95) )),--( protect(Jon,Jon) ),x) - -0.98 ),-( -COLS ))) )][TABLE[bar(destroy(45,Ygritte * 1),mislead(---TABLE[y][y] / TABLE[ROWS][mislead(( x ))])) * y][-81]] * bar()
}
} else {
	if(( bar(Sansa) )){
	Arya
} else {
	y /= dog / -92;
	Stark -= Hodor / bar();
	-ROWS
};
	bar()
};
	Ygritte /= ( TABLE[( ( -ROWS ) )][-Hodor] )
}
assert -destroy() / ( --9 + bar(Stark,protect(-TABLE[-0.25 + -( COLS ) / ( ( ( bar(COLS) ) ) )][-ROWS - ( TABLE[Jon][-( ( ( ( --mislead(( Jon ),( betray(--COLS + bar(( ( -( Stark ) ) ),ROWS,ROWS),Sansa,-dog) )) ) ) * ( -0.42 ) ) ) * x] )],bar(( ROWS * ( -TABLE[y][( -( ( foo() ) ) )] ) ),COLS * x * ROWS / ( Sansa ) + betray(Jon,Stark))) + 430.881) - dog ) - Arya - ROWS : "Nothing burns like the cold."
def TABLE[Arya][k] {
	Hodor;
	if(ROWS){
	Stark += mislead(--( mislead(Ygritte) ),TABLE[( Stark )][-85],-800.147 + betray(( ( ( 0.22 ) * ( ( ( ROWS ) * ( COLS ) ) + Jon ) ) )) - -0.87);
	Arya /= betray()
} else {
	Jon += -( TABLE[TABLE[-1][---85]][mislead(TABLE[ROWS][-ROWS],COLS * COLS)] );
	Arya *= 1
};
	if(Ygritte + Sansa + -COLS){
	if(Stark){
	-83;
	if(( x )){
	mislead(( COLS ) + 99)
};
	if(41){
	if(( -0.79 )){
	if(destroy()){

} else {
	Stark -= Jon;
	if(COLS - 1){
	if(( x )){
	--Ygritte
};
	if(ROWS){
	-55;
	( dog );
	( TABLE[-( rule(( ( Arya ) ),Hodor) ) - rule(TABLE[TABLE[( Ygritte )][0.92]][1],dog,-bar(dog))][( ROWS ) - Sansa] ) / ( ROWS ) + -COLS
} else {
	Hodor += Jon;
	Sansa += Jon
}
} else {
	dog += rule(COLS);
	if(TABLE[betray(-protect(( 1 ),( -0.64 ),mislead(43 / 47 * rule()) - -( ( ROWS - -( destroy(( ( ROWS ) ),-Ygritte + -22) ) ) / 600.9251 / --ROWS * -170.35 )) / mislead(( ( COLS / mislead(-67) ) )),foo(-betray(-17,-foo() + ( ( -destroy(-mislead(destroy(ROWS,---0.96) / protect(500.445,( 0.59 ))) - TABLE[mislead(ROWS)][dog + rule(1,Jon)] / -35 - -bar(820.89,-1,destroy(COLS,-betray(TABLE[-( -ROWS )][Arya / y],Jon + ( -84 ))))) ) - COLS / -0.63 ),ROWS)))][COLS]){
	Hodor /= -destroy();
	x;
	if(ROWS * ( COLS )){
	x /= TABLE[-( Jon + --( ( -1 + -betray(-( 67 )) / betray() * destroy(( ( -19 ) )) ) ) / COLS - 0.21 ) - mislead() - COLS * ( foo(0.7) )][destroy(COLS,protect())];
	x += bar(destroy(dog,( -1 )),( -betray(( ROWS ),( betray() + Jon + -ROWS + COLS - TABLE[-TABLE[--1][( -1 )]][mislead(bar(),ROWS,ROWS / -( TABLE[Stark][y] ) + ROWS * COLS)] + ( ( -87 - 1 ) ) / -( ( ROWS ) ) - 0.08 / TABLE[-( -Jon ) + foo(--89)][COLS] + TABLE[-63][TABLE[( ( Hodor ) )][-foo()]] - mislead(TABLE[35][y],foo(destroy(( ( destroy(dog,Arya) ) ) + ( foo(foo(ROWS,( Ygritte ) * -1,1) / --Stark - bar(y,56)) ) - protect(( x )) / ( ( ( -( TABLE[--foo(dog) * ( -68 ) + destroy(--ROWS,530.7455)][TABLE[( Hodor )][( Arya )]] - TABLE[COLS][dog / -( Stark )] ) ) ) ),COLS / ( TABLE[-TABLE[COLS][ROWS]][( protect(( COLS + bar(TABLE[Jon * ( destroy(COLS * protect()) - ( ( Ygritte - destroy(-protect(( -Sansa ))) ) ) )][1],bar(--96 / -( ( -33 ) ),( ROWS ))) ),ROWS * --rule() / y * ( ( -( -520.61 ) ) ),x) )] )))) ),( -( rule(COLS,-92,ROWS) ) )) ),-protect(Jon * ( -ROWS + -dog ) * destroy(foo(COLS) / --y),mislead() / -99 - 0.64,ROWS))
} else {
	if(Ygritte){
	if(ROWS){
	protect(--37 / foo(),COLS,COLS) - -( COLS )
}
};
	if(( ( dog ) )){
	if(foo(-15,betray(COLS))){
	if(-x * Ygritte - TABLE[-( -( ( destroy(---protect(-( ( -0.56 ) ),ROWS)) ) ) - mislead(rule(820.529) - Arya,20,( x )) * ( ( y ) ) + COLS ) * ( bar(( bar(ROWS) + -840.4 ),COLS,-TABLE[destroy(-1 * protect(( -30 ),y),-COLS)][Ygritte]) )][-0.34]){

};
	Jon += --1
};
	if(-79){
	ROWS
}
}
}
} else {
	if(--COLS){
	if(-x){
	if(-0.74){

} else {

};
	COLS
};
	x /= TABLE[( ROWS )][( Sansa )] / ( ( -46 ) );
	Hodor /= dog
} else {
	if(-( Ygritte )){
	x *= x
};
	Stark -= ( y + ROWS )
};
	Sansa /= ( x ) + dog
}
}
};
	if(-1){
	if(Arya){
	if(Hodor){
	bar(830.5302,--protect(ROWS) * -( ( TABLE[--protect(0.76) * COLS][Ygritte] ) ),----betray(ROWS) / foo(-mislead(( ---15 ),0.28 / ( -8 ) / ROWS),-dog) / foo(( destroy(Ygritte,( mislead(bar(0.03 / -COLS + foo(COLS,TABLE[( --TABLE[( -13 )][COLS] )][-ROWS],-( betray(0.07,650.98) - -TABLE[Ygritte][-ROWS] ) / ( 38 )))) )) ),rule(COLS,protect(destroy(),rule(y,Jon,Ygritte)) + COLS - -x,--1),x) / ROWS / -bar(( x )) - dog) + ( 0.82 ) - ( mislead(COLS,( 0.86 ),-( Ygritte ) - -0.41) );
	if(( dog )){
	if(Arya){
	if(Stark - ( dog / ( TABLE[mislead(foo(-1 / x,foo(-mislead(ROWS + 650.6663,COLS),430.866) / Hodor) / y,1)][( 31 ) + bar(-( --1 ) - -betray(-ROWS + TABLE[( destroy(x - ( bar(destroy(betray(( -0.95 ) / --Sansa,mislead(),destroy(TABLE[x][( protect(dog * ROWS) )]))) * rule(bar()) * COLS,( -mislead(x * protect() / COLS - mislead(-betray(destroy(protect(),( -0.43 + ( -( --0.34 ) ) )))) + destroy(Sansa,0.53) + ---( 630.92 ),-COLS * 1 * Sansa - -0.6 - bar(Jon,-0.47)) * Hodor / ROWS + ROWS * ( TABLE[betray(COLS)][-rule(ROWS,15)] ) )) ),TABLE[destroy(( betray() ))][Jon]) )][Ygritte],( ( bar() ) + --83 - ( 1 ) + -betray(0.16,Hodor) )),betray(-TABLE[Stark][-38] * -y / -betray(),ROWS,Hodor))] ) )){
	if(Jon){
	Stark /= protect(-0.87,x - Sansa);
	if(Arya){
	if(rule() - Arya - mislead(Hodor,dog) - -0.07){
	if(betray()){
	Jon -= betray(( y ));
	Jon
};
	dog -= destroy()
} else {
	rule(-( Hodor ),( 10.5 )) + TABLE[( COLS )][protect(( bar(Sansa) ))];
	Arya -= TABLE[( 1 )][-mislead(Stark,( 30 + ROWS ),0.3) * -Ygritte];
	Stark -= -1
};
	if(y){
	if(--protect(-( foo(( mislead(( ROWS ) / bar(-510.8143,-COLS),bar(ROWS)) )) ),COLS,-0.09)){
	y += Jon;
	mislead(protect(),( betray(betray()) ),72);
	Ygritte += -COLS - Sansa
};
	if(( -TABLE[260.6][( protect(( bar(COLS * -rule(-Arya / --Arya / 20),( foo(-74,betray(0.62),ROWS) ) * betray(( 0.77 )),-Stark) )) - 0 )] )){
	( ( -( COLS ) + -ROWS - destroy(-protect(Jon),0.18 - -Ygritte - -1) ) );
	-52
}
} else {
	if(protect(TABLE[betray()][( destroy(970.136,ROWS) ) * 0.16],44)){

};
	dog
}
} else {
	if(-ROWS){

};
	betray(mislead(destroy(dog)),Ygritte) * ( ( 0.11 ) )
}
} else {
	( x )
}
};
	28
} else {
	ROWS;
	-47
};
	if(-( 89 )){
	( ( Hodor ) - ( COLS ) )
};
	Sansa += ( rule(bar(rule(( -79 )),( -COLS ))) )
}
} else {
	rule(Ygritte);
	if(x){
	dog;
	ROWS
}
}
} else {
	if(COLS){
	Arya *= COLS;
	y *= Ygritte * -destroy(COLS,--540.22 + -0.06) / x
} else {

}
};
	Stark *= ( 7 )
} else {
	y /= -Jon;
	TABLE[( ROWS ) - ROWS * foo(-ROWS,( destroy(( -70 )) ))][730.98]
}
} else {
	if(( TABLE[COLS][-( -730.3 )] ) - Jon){
	Arya -= 0.64;
	rule(destroy(( betray(270.47,( destroy(-mislead(y,COLS),Ygritte) ),protect(-1,1) / Sansa) ),-ROWS)) - -TABLE[COLS][( mislead(betray()) )];
	if(Stark){
	if(0.36 / -rule(rule(Arya,COLS),ROWS + 85 * COLS / 0.21 - TABLE[--TABLE[-dog - -38][( ( -COLS - y ) - ROWS )]][( -Arya )] - ( x ) + ( mislead() ),Arya / TABLE[0.78][-bar(Sansa,-1)] * ( foo() ))){
	Arya /= ROWS;
	if(COLS){
	if(TABLE[( 0.71 * 53 - --( foo(ROWS) ) - -350.84 / ( ( -Hodor ) + -0.05 + rule() ) - Arya + ( bar(( -dog )) ) )][( destroy(ROWS,ROWS,-1) )]){
	if(x){
	x
}
};
	x /= 0.37
} else {
	Stark;
	-950.629
}
} else {
	COLS;
	if(-y){
	dog /= Hodor;
	Sansa += -79 * TABLE[-Hodor][250.564]
} else {

};
	-Ygritte
}
}
} else {
	if(1){

} else {
	( ( --TABLE[--( --Hodor ) * 0.21][TABLE[ROWS][-( 65 )]] ) - betray(0.05) - ( -( COLS ) ) + Sansa );
	Sansa -= 50;
	TABLE[-COLS][-Hodor * -protect(COLS) - ( y * -Hodor )]
};
	rule(TABLE[( ( betray(destroy(-( -1 ))) ) )][0.66] / -Arya,( betray(TABLE[( ( ( -43 ) ) )][Stark]) ));
	---Sansa
};
	ROWS
};
	Jon /= ROWS * ( foo(TABLE[COLS - dog][TABLE[mislead(( ( ( ( ROWS ) - x ) ) + ( COLS - 1 ) ))][( ( mislead(490.7,x,-0.52) ) / -bar(betray(41),( COLS - ( Hodor * 10.82 ) )) / betray(COLS) ) - dog]],COLS * ( --betray(-520.51) ),-destroy(destroy(),y)) ) - ( ( 820.36 ) ) + -( destroy() )
} else {
	Arya *= 170.89;
	-0.76;
	Stark
}
};
	-28 + TABLE[Sansa][( TABLE[foo(COLS,mislead())][( foo() )] ) - ( Stark * betray(foo(Ygritte)) / -94 )]
}
}
def rule(){
	( rule() + COLS * ( COLS ) )
}
assert dog : "Winter is coming"
var Hodor = -( COLS )
var Jon = --13 / 75
var Sansa = 630.559
var Arya = -1
def TABLE[rule(-( 39 ))][i] {
	Stark *= -0.02
}
var Hodor = ( Sansa )
var Arya = betray(rule(-betray(Hodor),TABLE[TABLE[-1][--0.33 + Hodor]][x]),ROWS,betray(-TABLE[12][ROWS / COLS],( rule(Hodor,( -260.363 + betray(ROWS) ),foo(COLS * TABLE[0.2][( rule(TABLE[-0.13][dog]) / -720.72 * 0.41 * -TABLE[x][1] + COLS * TABLE[mislead(-0.36,betray(-foo(betray() - ( ( -70 ) ) - bar(ROWS,-mislead() / COLS),ROWS,-TABLE[-23][--betray(( ( -TABLE[-Arya - ROWS][( TABLE[-ROWS * -1][bar(( Jon ))] )] / ( betray(y,Stark,Ygritte - TABLE[Jon][( -TABLE[-betray()][dog] ) - ROWS]) / foo(COLS,TABLE[COLS + COLS][-20]) ) / Stark / Hodor ) ) * x)]) / COLS * ( rule(-0.13,-( 900.8 ),-( 55 * ( ( Ygritte * foo(( -0.91 + -0.63 ) - foo(Arya)) ) ) ) / -( ( ( dog ) ) ) - 510.156 - TABLE[62][( 0.6 )]) ),-foo(),Stark),Hodor)][Jon] )] * Jon)) )))
var Stark = 57
assert ( -Sansa + -66 ) : "Nothing burns like the cold."
assert 1 * ( Sansa ) : "Fear cuts deeper than swords."
def TABLE[betray(destroy(( destroy() ) + bar(( TABLE[-0.87][-86] / 1 ),-ROWS + bar(1,foo()) * 340.6105,( -betray(rule(-250.561),destroy(-( ROWS ),( -1 ))) * ( Stark ) )),Arya))][j] {
	if(bar(-( protect() - ( foo(ROWS) ) + rule(-0.25) / ROWS * TABLE[COLS][TABLE[TABLE[COLS][94]][1]] ),45,protect(( -Ygritte ) * TABLE[-y][mislead(-66 / mislead(( 90 ),-1),Arya)],-ROWS * dog / COLS + rule(COLS) - ROWS * ( y ) - rule(( ( bar(--x,dog) ) ),( Stark ))))){

};
	x += ROWS
}
def TABLE[--( dog ) * mislead(0.84,Hodor)][i] {
	y;
	Sansa;
	Jon *= COLS
}
assert Hodor : "Fear cuts deeper than swords."
assert COLS + ( betray() + ( TABLE[foo(Sansa) + bar(foo(foo(1,-31,dog),( -TABLE[( COLS )][Sansa] / -1 ),dog / ROWS))][y] ) ) + -betray(-protect(destroy()),-COLS - protect(),TABLE[protect()][-ROWS] + ( ( -33 ) )) : "What do we say to the Lord of Death?"
var Stark = y
def protect(Arya,Arya){
	Arya += ROWS
}
assert Jon : "Winter is coming"
assert 0.62 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Stark : "What do we say to the Lord of Death?"
def TABLE[TABLE[destroy(COLS)][ROWS]][j] {

}
assert x : "Winter is coming"
def foo(x,Stark){

}
var Ygritte = ( -1 - Ygritte )
assert -0.5 : "Fear cuts deeper than swords."
assert Hodor / TABLE[( ( betray(Stark,rule(mislead(-1,TABLE[destroy()][mislead()],ROWS)),-68) ) )][( -1 )] + 80.06 + TABLE[-0.66][ROWS] : "What do we say to the Lord of Death?"
def TABLE[--TABLE[-80][1] * -1][i] {
	if(betray(COLS,--betray(COLS) / dog - dog)){
	-1 * Sansa;
	if(y){
	if(mislead(( TABLE[-y][--41] ),( -protect(Hodor) + mislead(Stark,( Sansa )) * ----COLS ),-0.38)){
	if(66){
	rule(0.05,y * Jon)
} else {
	if(TABLE[bar(-1,foo(Stark,ROWS,-0.44)) + -Arya - ( -1 ) * ( ROWS ) - COLS][Stark]){
	TABLE[( -0.9 )][( COLS )]
} else {
	betray(COLS) - Arya;
	if(Ygritte){
	if(-( -0.96 ) * bar(-0.05)){
	Arya *= -( Hodor );
	( -0.64 + ROWS * 99 / 1 )
} else {
	dog -= protect(Stark);
	x -= Ygritte;
	Arya /= ( Ygritte )
};
	if(--22){
	Arya -= --1;
	Sansa
}
};
	if(Arya * ( COLS - y ) / -Sansa * TABLE[Hodor][( -Ygritte - mislead(-0.05 - Stark) )] * betray()){
	Jon -= ( -bar(-98,-1) ) + --0.86
}
}
};
	x *= -17
} else {
	Sansa -= bar(Arya,( betray(protect(-25)) ))
};
	Hodor += ( -85 );
	Sansa *= bar()
} else {
	Sansa
}
} else {
	dog /= Sansa * COLS
};
	-ROWS;
	x += destroy(rule(0.24,( foo(( x )) )),ROWS,TABLE[--1 + -dog][bar(-TABLE[--( Stark )][Hodor],83,--0.93 + destroy(( ( Sansa ) ) * rule(TABLE[mislead(( -43 ) - 90 + ( ( betray() ) )) / ( destroy(ROWS) )][-0.1],ROWS) + ( 1 ) + destroy(-0.7,Jon),Sansa))])
}
def TABLE[Arya][j] {
	if(Sansa){
	Jon -= rule(--COLS + -15,COLS,-ROWS)
} else {
	if(COLS){
	73
} else {
	if(Ygritte){
	-Jon;
	-rule(COLS);
	TABLE[( 60.7 / -( ( Sansa + -( COLS ) ) ) + ROWS )][( TABLE[( -30 )][( ( COLS ) * ( dog ) ) / ( mislead(0.4) )] ) - ( -destroy() * -Ygritte - --0.45 * ROWS ) / ---360.301 * --foo(--30.9 / rule(ROWS))]
} else {
	if(TABLE[( ( protect(COLS,-rule(-( 380.08 ))) ) + Hodor )][Ygritte]){
	destroy(TABLE[ROWS][-( ( rule(--65) / TABLE[Jon][Arya] ) ) - -1 / dog]);
	if(1){
	if(COLS){
	ROWS
} else {
	Arya -= -0.41
};
	COLS
} else {

}
};
	if(foo(bar(COLS,COLS),-COLS,( -protect(--98) + foo(( ( rule(Arya,rule(COLS,( TABLE[-COLS][ROWS] ))) ) ) - TABLE[85][-0.41 * 0.44 - Arya],bar(),( betray(-betray(bar(Sansa),ROWS)) )) ))){
	Stark -= -35
};
	COLS
};
	Hodor *= -5
};
	0.7
};
	Sansa
}
assert -( -( ( ( destroy(Ygritte) ) ) ) ) : "One can not simply parse himself"
def foo(Stark,Stark){

}
def bar(){
	Arya / 670.45;
	if(Stark){
	-rule(-70);
	if(Sansa){
	0.83
}
} else {
	Arya /= -94;
	if(-( Ygritte )){

} else {
	--x;
	if(0.08){

} else {
	if(ROWS){
	-betray(-destroy(( bar(( x ) - protect(mislead(),-1) - -bar() * Ygritte * -ROWS) )),Jon * -0.97,Jon);
	y += --52 - 1;
	Sansa += COLS
} else {
	Stark -= -39
}
}
}
}
}
def bar(Stark,Ygritte){
	Hodor += ROWS;
	foo(foo(2),-x);
	if(TABLE[0][foo(Stark,dog - Ygritte)] - 170){
	if(( foo(-750.3,COLS) )){

}
}
}
var dog = -Hodor
def mislead(){

}
def TABLE[( ---rule(-61,Jon,--ROWS + rule(-( COLS ))) + -82 )][i] {
	COLS / ( ( -Jon * -1 ) )
}
def bar(x){
	Stark -= rule(TABLE[ROWS][( ( ( 610.4 ) + COLS ) )],( -( 0.91 ) ),( Arya ))
}
var Arya = 320.09
def TABLE[ROWS][k] {
	dog / foo(( Sansa ),( ( -mislead(protect(-( 0.58 ) / y / 440.596 * foo(rule(ROWS,-TABLE[( Hodor )][rule(-76,COLS,-ROWS)])),ROWS,Jon),betray(-8,TABLE[ROWS][betray() / Sansa])) ) ))
}
def TABLE[y * 0.32][j] {
	Sansa -= TABLE[( ( ROWS ) )][-ROWS] * ( COLS );
	38 + 0.2
}
var Sansa = Hodor
assert ( ROWS ) * foo(( -( 99 ) ),Jon,0.92) : "Fear cuts deeper than swords."
def protect(x,y){
	-0.62 / -( -14 ) + -1;
	if(destroy()){
	Hodor -= -( ( ROWS ) )
};
	if(-79){
	-760.689;
	-30
}
}
def bar(Jon,Hodor,Jon){
	-( --Arya );
	19 / dog
}
def bar(Stark,y){
	Jon /= 1
}
assert bar(-( ( 0.87 ) )) : "Nothing burns like the cold."
assert protect() : "Fear cuts deeper than swords."
var Hodor = ROWS
assert -0.71 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[betray(--( 83 ))][i] {

}
def TABLE[bar(0.96)][i] {
	Stark /= Arya
}
def TABLE[COLS + rule(0.81,protect()) * -( Jon + TABLE[Stark / ---Arya][0.61] )][k] {
	( betray() );
	-Stark / TABLE[destroy(COLS)][( protect() )]
}
def mislead(Ygritte){

}
def TABLE[TABLE[( -ROWS )][Hodor]][j] {
	if(--( x ) * betray(Stark + TABLE[ROWS][Hodor] / TABLE[destroy(dog,ROWS)][COLS],x,( destroy(betray(rule(dog,TABLE[y][-Stark]) + -( bar(( y )) ),1 - mislead(mislead(COLS,protect(-ROWS,ROWS),( TABLE[-TABLE[-( --0.64 )][0.51]][Arya * rule(bar())] * --bar(-rule()) + ( Stark ) ))))) ))){
	dog += ROWS
};
	if(-dog){
	if(89 / Stark){
	y /= 3
};
	if(760.79){
	Sansa *= -55
};
	--240.12
}
}
def TABLE[( -980.3 )][k] {
	protect();
	Hodor
}
def foo(Ygritte){
	Hodor += ROWS
}
def TABLE[COLS][j] {

}
def TABLE[-110.841 - protect(bar(),ROWS)][j] {
	dog *= TABLE[-Arya + rule(--( Hodor ) + mislead(-y,Arya),protect(Sansa,( y ) / -1),( -( -( ROWS ) ) ))][-Hodor];
	Arya -= bar(COLS,bar(mislead(Hodor,rule(Hodor,( foo() + -destroy(( -( betray(( 0.38 / Hodor + ( -41 ) )) ) )) ))),( -0.42 - -Ygritte )))
}
var y = protect(( -Sansa + foo() ),( -52 / -0.38 ) - --0.7)
def TABLE[-( ( -( TABLE[( ---Sansa + y ) + Jon / ( ( ( ( -1 ) - ( mislead(rule(( Hodor * ROWS ),( ( y ) ))) / -COLS ) ) ) )][rule()] ) ) )][j] {

}
assert ( TABLE[-63][Jon] ) : "One can not simply parse himself"
assert y : "Winter is coming"
assert 0.82 + destroy(rule(ROWS),( -0.52 )) : "Fear cuts deeper than swords."
assert -24 : "One can not simply parse himself"
def TABLE[-ROWS][i] {

}
def betray(Stark,Sansa,Arya){
	Hodor -= 39
}
def bar(Ygritte){
	dog
}
def destroy(dog,Hodor){
	ROWS;
	-1
}
var Hodor = Stark
var Hodor = ( Sansa )
def bar(y){
	Sansa -= destroy();
	if(TABLE[--( Sansa )][--COLS]){
	if(( --77 )){
	if(1){
	--betray(-ROWS) + ( ( -Sansa ) )
};
	if(TABLE[( 0.63 )][( -destroy(-Stark / -1,TABLE[( -40 ) * mislead(( -ROWS ))][-Ygritte] * ( ( -1 ) ),-0.31) )] / -( ROWS )){

}
}
} else {
	y *= -57
}
}
def destroy(Jon,x,x){
	if(-9 - ( COLS ) / ( ROWS ) * ( betray(Stark,( betray(Ygritte - --0.72,-33) ),-73) )){
	if(-destroy(-6,TABLE[-protect(-protect(TABLE[( TABLE[bar()][TABLE[Sansa][mislead(x)]] / ROWS * foo() ) / Stark][rule(0.42)]),( -y ))][-0.41 / bar(foo(-17) - ( --foo(( Hodor ) / ( --( ( TABLE[( ( mislead(-( -0.52 * mislead(Jon,TABLE[protect(dog,dog) * TABLE[-ROWS][( ( TABLE[Ygritte][---98 / COLS] ) * ( -0.05 ) - rule(-0.11,bar(( Arya ))) )]][destroy(-dog,1)] * rule(0.05) / TABLE[1][betray(-1)] / 0.53,ROWS) )) ) ) * COLS][-protect(-destroy(TABLE[( x + Arya * ( 0.98 ) + dog )][-dog] * ( -550.2 ),( betray(TABLE[dog][( bar(( foo(ROWS,-( COLS )) ),TABLE[TABLE[TABLE[-1 * ( x ) / 1][protect(COLS) * rule(( -22 ),COLS)]][( rule(( ROWS ),dog) )]][-destroy(( -betray(Jon,-ROWS - TABLE[--dog - COLS][TABLE[-77][( ( --94 ) ) * Stark]]) / ROWS / rule(Ygritte,foo(380.373)) / 370.96 ),ROWS)]) - 960.4383 )],( ROWS )) ),TABLE[COLS][0.26 + ROWS / -destroy(330.1) / ( --64 ) - bar(0.2,-TABLE[( ( rule(80.7156,--1 / -COLS,( mislead(-1) )) ) )][protect(Ygritte,--rule(foo(Jon,TABLE[-protect(( bar(x) ) + -1) * ROWS][-x],830.1),COLS / 0.59,( Arya )))]) - COLS - ( ( Stark ) )]),-2,protect(protect(-1),TABLE[-1][( -1 / COLS / Jon / ROWS )] * -0.87,( bar(( betray(-betray(52,-70,---COLS * -0.82)) ),-y - foo()) ))) * -0.77 / -COLS + -( -COLS ) * ( ( destroy() ) )] ) ) ) * -73 / mislead(TABLE[-Stark][dog],-Hodor)) ),( 0.2 ))],COLS - 66) / destroy(mislead(-91,( -y ),TABLE[ROWS][( 0.22 )] / destroy(-0.48,rule(1)) + ( 0.85 ) - -Stark),-Ygritte)){
	-60;
	if(-destroy(( 23 ))){
	Ygritte /= x
};
	if(dog){
	if(-0.38){
	if(-1){

} else {
	ROWS
}
} else {

}
}
};
	Stark
} else {
	if(protect()){
	if(590.5331){
	if(TABLE[( ( dog ) )][-1000.6]){
	y *= --14 / mislead(COLS,71)
} else {
	x -= -1;
	y
};
	if(Sansa - foo(( ( Stark ) ),-Hodor * TABLE[TABLE[( y )][-betray(mislead(Jon,( Jon )))] - 0.03 - -y * 3][-Hodor - TABLE[TABLE[( ROWS )][foo(mislead(COLS,Ygritte))] * ROWS][( ( Stark ) )]],TABLE[dog * Jon][0.1]) / TABLE[Sansa][-ROWS - mislead(x)]){
	if(ROWS + COLS){
	Sansa *= rule(Sansa,destroy(-0.57,( dog ),x))
};
	if(mislead(---640.415)){
	if(-37){
	-( 260.091 )
} else {
	Arya += COLS * ( --( ( ( ROWS ) ) * ROWS - 94 / -0.46 ) ) + destroy(ROWS,( ( -( COLS ) ) ) / 810.4049) + Ygritte;
	if(0.94){
	ROWS + Hodor / x / dog
};
	x
}
} else {
	if(Arya){
	if(dog){

};
	if(-870.066){
	y += -1;
	-1 * ( 93 )
};
	1 + destroy(4,COLS / y,( TABLE[betray(( COLS ) / TABLE[ROWS][-( 0.08 - --y ) - ( -1 )])][0.39] )) + mislead(TABLE[0.77][-430.21],dog + x) - destroy(bar(--1)) - -40
} else {
	-5;
	Arya += -1
}
}
};
	if(rule(-protect(TABLE[ROWS][-( -Stark )],protect(),-destroy(( -0.21 ),( protect(---0.8,( betray(COLS,foo(betray(( -ROWS ),75),ROWS - ( Hodor ),protect(-( betray(Jon,-Arya / ( -protect(-( Arya )) ),( COLS )) )))) ),Stark) ))),ROWS)){

} else {
	dog /= Stark
}
}
};
	0.2
};
	COLS;
	if(-COLS){
	destroy(Hodor,mislead(Stark,0.19,( COLS )),--1)
} else {

}
}
assert 43 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = 0.34
def TABLE[1][k] {
	mislead(-10) * Jon - Arya;
	Hodor += ROWS
}
var y = bar(Ygritte * y,ROWS)
def TABLE[y][k] {
	Stark;
	Sansa + COLS;
	if(-mislead(betray(-foo(bar() * ( -ROWS ) / Jon - ( Sansa ) / Sansa),-ROWS,COLS),COLS) - destroy(COLS,-TABLE[COLS + TABLE[--53][---420.07]][ROWS / mislead(-Stark) / bar(200.41 / -ROWS,Stark)],-0.02)){

} else {
	-( betray() )
}
}
def foo(Hodor,Ygritte,Arya){
	destroy()
}
var x = -COLS + COLS + ( mislead(COLS) )
def TABLE[Sansa][j] {
	if(47){
	protect(foo(--1,-TABLE[ROWS][180.72]));
	Jon += -1 / Hodor
} else {
	if(-99){
	if(----1){
	COLS;
	Stark /= -400.23
};
	x *= -0.59;
	Stark /= ( ( -ROWS ) )
}
}
}
var x = ( ROWS )
var Hodor = 1
var Ygritte = 890.4
var Ygritte = ROWS
def TABLE[1][i] {
	if(61){
	Arya *= y;
	if(COLS){
	if(protect(0.14)){

} else {
	if(-510.6148){
	-destroy(Sansa) + mislead(Arya,( COLS ),Stark)
} else {
	if(0.14){
	Jon *= bar(rule(),COLS,COLS);
	protect() - ( Ygritte );
	Hodor /= Jon
} else {
	if(-( COLS )){
	0.44;
	Sansa -= 0.91;
	Hodor
}
}
}
}
}
} else {
	if(COLS){

} else {
	if(( -protect(-14 + -0.25,-x) )){
	if(-Jon){
	dog += Stark;
	Jon *= protect(-0.58)
};
	if(protect(destroy(-50,-36))){
	-( Sansa );
	if(protect(( dog / -bar(77,-( betray(protect(( Hodor ),COLS),( --23 )) )) ))){
	15;
	x += Stark
} else {

}
} else {
	dog
}
};
	Hodor - TABLE[ROWS][betray()]
};
	x -= TABLE[rule()][( -55 )]
}
}
def TABLE[-Stark][j] {
	Sansa *= -( ROWS );
	if(( 90 )){
	if(ROWS / -49 / 800.0456){
	ROWS;
	if(foo(--520.35,( TABLE[COLS][-0.77] ),-( destroy() ))){
	-( --dog );
	-1
}
}
}
}
def protect(){
	Hodor /= TABLE[-Stark * ( 60.5 ) * -58][-TABLE[protect() / COLS][TABLE[( -TABLE[foo()][( bar(destroy(---14,-bar(protect(x,1),TABLE[COLS][140.6 * -0.59]),bar(dog)),840.58,-1) )] * ( Hodor ) )][-0.85]]];
	COLS
}
var Stark = ROWS
def rule(Hodor,y){
	-45 - -7 - y
}
def foo(Hodor,Ygritte,dog){
	COLS
}
def TABLE[0.77][j] {

}
def rule(){
	y /= mislead(COLS);
	if(250.48){
	if(Arya + COLS){
	betray(-0.97)
} else {
	Jon += ( ( COLS ) ) * -x
}
};
	Ygritte += ( betray(( ROWS ),--7 / dog) / protect(Sansa) )
}
assert ( -TABLE[( rule(0.28,Ygritte) )][( -93 )] ) : "What do we say to the Lord of Death?"
def betray(x){
	y -= 0.44
}
def protect(dog,Sansa){
	Jon *= foo() - ( Arya );
	if(( --0.31 / 660.9426 )){
	Arya += ( y )
}
}
assert -0.06 / Stark : "Fear cuts deeper than swords."
assert x : "Fear cuts deeper than swords."
def TABLE[rule(( mislead(COLS,( ( betray(--destroy(( 870.323 )),protect(---betray(-950.154))) ) ),-0.29) ),ROWS)][i] {

}
def protect(Stark,Ygritte){
	if(( bar(betray(protect(protect())) + Arya) )){

};
	Stark *= dog
}
assert x : "One can not simply parse himself"
assert --y : "One can not simply parse himself"
def TABLE[ROWS][i] {

}
var y = COLS
def destroy(Jon,Stark,y){
	930.36;
	x /= 80
}
assert 97 : "Nothing burns like the cold."
def TABLE[COLS][i] {
	if(COLS){
	if(-TABLE[-protect(mislead(( --TABLE[-dog][--( ( ROWS ) )] ) / ( ROWS ) + ( -TABLE[930.4 - -TABLE[0.36][-1 + -dog]][mislead(( ROWS + Ygritte ))] ) * mislead(( ( ROWS ) )),-( COLS ),TABLE[-( ( mislead(( -Ygritte - -( -Arya ) / -1 * bar(bar(-rule(-COLS / -Ygritte / --Ygritte * protect(0,( --65 )) / ( Hodor ),COLS)) * -1) )) - -( -( 1 ) ) ) )][ROWS]),-12,( -390.3 )) / -dog][Arya]){
	-y - COLS + -( ROWS + betray(-1) - --72 );
	Arya /= -Jon;
	-x
}
}
}
def TABLE[Stark][k] {
	bar(TABLE[betray(( ( 0.37 ) ),-1) + ---COLS * -COLS + ( dog )][Ygritte - x * destroy() + ( -0.13 )])
}
def TABLE[-( ( ( ( betray(( ROWS ) + -1,mislead(Stark) * bar(betray(-( Sansa ),( -74 )),-Ygritte,( protect(-0.41,x) ))) ) ) ) )][i] {
	Jon;
	Hodor += Ygritte
}
var x = 0.52
var Stark = rule(ROWS,( TABLE[-dog][Arya] ))
def TABLE[Stark][i] {
	if(1 + ROWS + TABLE[Ygritte][-850.835 * foo(-( ( ROWS ) / COLS + ( 0.33 ) )) / y] * COLS - y){
	Stark -= foo(y / ( COLS ),--0.19 / Jon);
	if(TABLE[-350.53][( 640.396 )]){
	-21
} else {
	if(-1){
	if(40){
	if(( protect(Hodor,Hodor) )){
	Hodor /= Sansa * 0.14 - TABLE[bar()][-y + y]
}
}
} else {
	if(-47){
	( COLS )
} else {
	if(Stark){
	if(betray(-1)){
	dog /= y
} else {
	if(Arya){
	Ygritte + rule();
	mislead(dog,COLS,COLS);
	Sansa /= x
};
	-( -( COLS ) )
};
	betray();
	Sansa -= ( destroy(-bar() + dog / -x) )
};
	( protect(( 0.12 )) )
};
	if(ROWS){

} else {
	if(foo(TABLE[y - betray(--Ygritte)][Ygritte],( -( COLS ) )) * betray(ROWS)){
	if(800.58){
	if(( Hodor )){
	if(-0.92){

} else {
	Stark;
	y -= betray(0.03,340.019 + rule())
}
} else {
	if(ROWS - -( foo(COLS) + betray(betray(),( ( -destroy() ) ),( TABLE[-1][dog] ) / -1) )){

} else {
	if(( ( -0.1 / --COLS ) )){
	Ygritte -= bar(foo(foo()),rule(COLS,Hodor) + dog,( --27 + -foo(-Stark) - ROWS ))
} else {
	x /= foo(1,foo(0.59,mislead(protect(1),-mislead(),bar(--Arya * COLS + ROWS,destroy())),Jon));
	920.81
}
};
	TABLE[-ROWS / 43][0.33]
};
	Hodor -= TABLE[-51 - Sansa][-23]
} else {

};
	x *= 13 / -0.4 + -( -1 + ROWS )
};
	dog *= ROWS;
	if(-77){

}
};
	Ygritte += -Stark * 190.748
};
	dog += ( Hodor )
}
} else {
	if(( ROWS )){
	-0.44;
	if(( COLS )){
	if(TABLE[Sansa][x]){
	dog;
	( TABLE[COLS][TABLE[-( ( 73 ) )][Arya]] )
} else {
	if(TABLE[--COLS][Arya]){
	-0.55;
	rule() + -( -COLS );
	if(--140.903){
	if(TABLE[-foo(( Sansa )) / --( ( y ) ) - ( -TABLE[14][-TABLE[( -ROWS - destroy(COLS,Hodor,-ROWS * ROWS) ) * 950.355][dog]] ) / -( -350.8 ) / ( ( ( protect(betray(-310.65,Sansa,destroy(Hodor,protect(COLS)))) ) ) - --( betray(-dog,Ygritte,1) ) )][Stark] / --( bar(( COLS ),protect(rule(-0.14 * -1,7))) ) * Stark - -48){
	if(rule()){
	( TABLE[0.47][Jon] ) / --( ( -0.04 ) );
	TABLE[30.79][destroy(( ( -ROWS / COLS ) ),Arya)]
} else {
	Hodor *= y
};
	Ygritte *= ( -TABLE[( betray(COLS,COLS,( COLS )) )][-ROWS] )
}
}
} else {
	36
}
};
	if(0.31){
	---protect(( protect(43,dog) ),y) + ROWS;
	Stark /= ---Ygritte + -Jon + Sansa;
	if(( -betray(ROWS) )){
	y -= mislead(( ( TABLE[ROWS][y] * Sansa ) ))
} else {
	if(( COLS )){
	y / ( ( -rule(rule(-69) + Sansa,Hodor) ) );
	Arya
} else {
	-Hodor - mislead(-28,( -bar(Stark) ),foo(( Hodor ),mislead(88 - -( 0.09 )),-0.49) + rule(x,TABLE[-0.13][Sansa],65) * -19);
	Stark *= -750.145
};
	dog * -2
}
} else {
	if(COLS){
	if(TABLE[-300.92][TABLE[COLS][-31]]){
	destroy(rule() / 16 + Ygritte)
} else {

}
} else {
	Arya += ( protect(( TABLE[-780.493][--75] )) - protect(---rule(TABLE[ROWS][-1])) );
	-1
}
};
	y += rule(-( ( --Stark ) ))
} else {
	dog *= ( ( Sansa + -TABLE[-( mislead(60.451) ) + Sansa - rule(( -840.152 ) + x)][rule(TABLE[( -17 )][( -( foo(( ( ( -Sansa - mislead(-bar(),mislead(foo(COLS - 0 * -TABLE[-670.99][-TABLE[-rule(y)][( ( ( rule(( -530.6 ),protect(-0.29)) ) ) )] / betray(( bar(Sansa,-Sansa) ),Hodor)] / ( COLS ) / ( ROWS ),rule(( betray(( mislead(( mislead(56,-Sansa,COLS) ) * -0.236 * ( Stark )) ),( Jon ),dog / COLS + -( ( ( --destroy(( Hodor ) + betray(-0.89),--0.51,( dog )) - destroy(( ( ROWS ) ),-( rule(mislead(( bar(( Hodor ),-0.94,790.3) ),ROWS)) ) + -1,ROWS) ) ) ) / -y * COLS) ),( mislead(betray(Sansa,-140.7475 - --0.4 * 0.24) + -17,-1) ),x)),destroy(bar(ROWS)),-550.75),( Arya )) + 930.7845 / mislead() - ( y ) ) * COLS ) ),TABLE[Jon][bar(mislead(COLS,x - x),( destroy(-850.57 + ( COLS / Jon + dog + Stark ),( -dog + -( Ygritte ) ) + ( dog )) ) + 0.59)]) ) )],dog)] + ROWS ) )
}
}
}
}
def TABLE[COLS][j] {

}
def TABLE[TABLE[destroy(COLS,ROWS)][-ROWS]][k] {
	-rule(TABLE[rule(-Hodor / rule(COLS,--1 * TABLE[destroy(x)][protect(COLS,COLS) * Jon]) + y,TABLE[TABLE[-ROWS][Arya]][-340.59])][y],0.03,COLS);
	mislead(-( COLS ))
}
var Jon = x
var Arya = --0.22
assert COLS + y : "What do we say to the Lord of Death?"
def mislead(Arya){
	64
}
assert ( mislead() ) : "What do we say to the Lord of Death?"
def TABLE[COLS][j] {

}
def TABLE[( Jon ) - Hodor][j] {
	-0.9
}
var dog = -destroy(( ( COLS * bar(( --1 )) ) ))
var Hodor = TABLE[TABLE[( Ygritte )][-710.54]][1]
assert ( --ROWS ) : "One can not simply parse himself"
assert ( Arya ) : "One can not simply parse himself"
def TABLE[( destroy(( -COLS ),ROWS) + -TABLE[TABLE[--( ( Sansa ) )][--TABLE[ROWS][( --0.82 / 0.09 )]]][251] * COLS + foo(( --betray(TABLE[dog][-y]) ),ROWS) )][k] {
	COLS;
	if(( rule(-320.94) )){
	Stark
};
	y -= 0.8
}
def TABLE[-betray(0.93 * -( --1 ) * COLS)][k] {
	y *= COLS;
	y *= TABLE[foo()][COLS];
	Ygritte * ( ROWS )
}
var Sansa = ROWS
var x = 26
def TABLE[160.6][j] {
	-0.65;
	if(---44){
	y;
	Arya *= 0.61
}
}
var Sansa = protect(---0.13 - COLS,-destroy(( foo(destroy(-TABLE[( -1 )][foo(mislead(destroy(dog,rule(TABLE[x - bar(Arya,TABLE[protect()][( Ygritte / --TABLE[-bar(Arya / ( -0.04 ))][( TABLE[-650.106][destroy(betray(),foo(ROWS,-ROWS,COLS))] )] )])][-Sansa],-0.95)),( 1 ) * -160.3821 + foo(-( -880.8 )),COLS),Jon)],-( y )),( y + ROWS ),foo(Ygritte,mislead(Arya,COLS),ROWS)) / rule() + -COLS / -( ( ( protect(-0.6,-foo()) / -85 ) ) ) / COLS ),betray(-Hodor,( TABLE[-Jon][( ( foo(( Arya + COLS ) / mislead(COLS,98),--1) ) )] ),ROWS)))
assert --0.99 : "Nothing burns like the cold."
def TABLE[ROWS][i] {
	if(( dog )){
	Jon *= -betray(-( destroy(Stark) ),ROWS);
	COLS
} else {
	Stark *= TABLE[( 1 )][protect()];
	foo();
	( ROWS - x )
}
}
def bar(Ygritte,Sansa,Sansa){

}
var Arya = -0.25 + protect()
def betray(Jon,dog,dog){
	( protect(1,-betray(-ROWS),1) )
}
def TABLE[-1][k] {
	-350.6617;
	TABLE[-0.91][-ROWS];
	Sansa /= bar()
}
assert COLS : "Nothing burns like the cold."
def TABLE[0.28 / -0.11][i] {

}
def foo(){
	Hodor -= rule(TABLE[Ygritte * -Hodor][--0.79],( TABLE[foo(Sansa)][bar(-0.97)] ));
	-750.5088
}
def TABLE[COLS][i] {
	x *= COLS
}
def TABLE[bar(-1)][j] {
	-destroy(x)
}
var Ygritte = ( foo(Hodor,y) )
def TABLE[-0.58][j] {

}
def bar(Sansa){
	-920.7
}
def rule(Arya){

}
assert COLS : "One can not simply parse himself"
def TABLE[( x )][j] {
	-Ygritte * dog;
	50
}
var Stark = ( ( ( y ) * 0.61 ) )
def TABLE[foo(--destroy(foo()) / TABLE[Arya + ( ( TABLE[Arya][( Ygritte )] ) ) + ( rule() )][( dog )])][i] {

}
assert --ROWS - ( bar(--ROWS - ---83 + -1,Hodor,( 1 )) ) : "One can not simply parse himself"
def TABLE[-93 / -10][k] {

}
def bar(){
	y
}
assert protect(( mislead(1) )) : "One can not simply parse himself"
assert rule(( ( --30 ) ),ROWS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = TABLE[COLS][-( ( -destroy(1,-0.4,protect(COLS / ROWS,( 13 ))) ) )] * ( -18 )
def destroy(Arya,Stark){
	if(-rule(-TABLE[betray(32,TABLE[-y][rule(COLS + ROWS,mislead() - 1,ROWS)])][---foo(-ROWS) + COLS * COLS],destroy(),rule())){
	if(Arya){
	Sansa *= ROWS / -( -( COLS ) ) - -Stark + Stark * -980.161
};
	Jon += -77
} else {
	if(770.238){
	Arya += --50;
	if(foo(Hodor + ( -TABLE[destroy()][--( ( Sansa ) ) / COLS - ( -Arya + TABLE[( 1 )][580.959] + --0.39 ) - x] )) * -COLS + ( ( COLS ) ) / protect(--88 / ( -1 ),COLS,0.41) * foo(bar(--40.973)) + protect(( ROWS ),( ( ( dog ) ) ) / Jon,0.14)){
	Hodor;
	if(x + ( -71 ) * 1){
	x /= ( Stark );
	x *= ( ROWS );
	if(0.04){
	Jon *= betray(-destroy(),( mislead() ))
}
};
	Stark += destroy(14) + -Hodor
};
	Hodor -= -11
};
	( Sansa )
}
}
var dog = -ROWS
assert destroy(y) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = bar(90.3292)
var y = ROWS
def mislead(Jon){
	Ygritte += ( Ygritte )
}
assert ( -20.83 ) : "What do we say to the Lord of Death?"
def protect(){
	if(Stark){
	if(-rule()){
	( destroy(-58,ROWS) );
	Arya
} else {
	x /= ( -( Hodor + -y ) ) / TABLE[-ROWS + protect(bar(x,x),( protect(( TABLE[( TABLE[ROWS][-destroy(foo(),COLS + COLS,mislead(Jon,-Jon))] )][--ROWS / ( 920.775 ) * TABLE[( rule(( ROWS )) )][foo(( -4 ))]] )) ))][bar(betray(Ygritte / Arya),Hodor,( bar(1) ))] - ROWS;
	--destroy(COLS,-COLS)
};
	TABLE[-( Jon ) / TABLE[ROWS][-680.9]][COLS]
} else {
	370.6
};
	if(-bar(Hodor,--( ( -1 ) ) + 0.58,COLS)){
	bar(( Stark ),-34,--0.22 * ( Ygritte ));
	if(-Ygritte){

} else {

};
	ROWS
} else {
	if(----Jon){
	if(1){

}
} else {
	if(( ( TABLE[Hodor][-45] ) )){
	if(-0.93 * ( ( -TABLE[Hodor][TABLE[72][-protect(betray(-Hodor,-890.31 + x),TABLE[0.34 * betray()][( TABLE[370.4][( COLS )] ) - -0.3 / -39],-( -Jon )) * COLS]] ) )){
	x /= Sansa + bar();
	Hodor *= destroy(ROWS,betray(COLS));
	Jon
} else {
	if(TABLE[-COLS - -Hodor][-380.85]){
	Ygritte *= -36;
	Jon += ( --510.7886 )
} else {
	dog -= bar(( -foo() / Arya ),1)
};
	if(-19){
	mislead()
};
	y *= ( ROWS )
};
	if(0.27){
	COLS;
	dog += ROWS;
	ROWS
} else {
	if(--0.81){
	Stark += -901
} else {
	Jon /= -Stark;
	if(foo()){
	Ygritte /= Jon
};
	x /= y
};
	if(Sansa){
	if(Ygritte){
	Ygritte /= mislead(83,95);
	TABLE[rule()][-61];
	if(850.6307){
	if(COLS * x){
	8;
	if(betray(-( x ),( -Sansa * ( bar(x) ) * protect(( Hodor / COLS )) ))){
	1 / x;
	mislead(foo(y,-( Arya ))) * 50.7594
} else {

}
};
	y += ( Jon )
} else {
	COLS;
	-dog;
	if(Sansa / -0.4 / 1){

}
}
}
} else {
	if(( -bar(TABLE[-( ( rule(0.74,Hodor) ) )][Arya],x) )){
	ROWS;
	Ygritte /= -690.76;
	if(16){
	mislead(bar(( ( ( COLS ) ) ),-( ( foo(-( 0.42 )) ) ) * -x),COLS);
	Hodor -= ROWS;
	if(COLS + bar(-destroy() - -1 + --0.47 * ( COLS * mislead(-82) - betray(Hodor) / x ))){
	bar(destroy(bar(-70.79,( Hodor ))));
	destroy(protect(( COLS ),-TABLE[( COLS )][-destroy(0.38,-930.93) - bar(ROWS / mislead(foo()) * ( -170.1 ),COLS,-bar(-10,Ygritte) - -( ROWS ) / dog) / -COLS + TABLE[0.24][( x )]]) / -720.7823 - x)
} else {
	x += Ygritte
}
}
}
};
	x -= foo(dog,Sansa)
}
}
};
	Ygritte *= Ygritte
};
	650.5402
}
var Ygritte = Ygritte
var Jon = 1
def TABLE[bar()][k] {
	if(( ( Arya ) + 89 - dog )){
	-710.7 + 0.32
} else {
	if(Sansa){
	if(--26){
	Jon += Arya
} else {
	if(-( mislead(-COLS,0.56 + -39) - COLS - 0.73 ) / dog){
	y *= -TABLE[Arya][-y - Ygritte] / COLS;
	x -= ( betray() )
} else {
	if(Stark){
	if(y){
	Stark += TABLE[( TABLE[dog][Hodor] )][( TABLE[Arya][Sansa] )] + --50 + COLS
};
	if(bar(-0.52 * Hodor / 0.53)){
	if(-11){
	if(-y){
	betray(-1)
}
} else {

};
	dog *= 500.861 * -0.54;
	if(Arya){
	protect(( mislead(( -Sansa ),x) + ( 34 + --bar(Arya,( ( bar() + rule(-0.61) ) )) ) ) + -COLS * 54,( 0.7 )) / Jon * -470.207;
	if(Arya){
	Ygritte *= 89
}
} else {
	Arya *= Ygritte
}
} else {
	0.1
}
}
};
	( -rule(Arya,---( ROWS - ( destroy() ) )) )
}
} else {
	dog *= -9
};
	if(ROWS){
	protect(COLS);
	0.77
} else {
	if(ROWS){
	dog *= -0.8;
	if(60){
	protect(Sansa,-70,foo(foo(Jon,destroy(destroy(-Sansa,Arya - mislead(foo(destroy(-0.52 / 0.74) * foo(( ( ROWS ) ) - --ROWS / TABLE[betray(ROWS,( --44 ))][Ygritte]),bar(-( ROWS ) * -rule(( Sansa )) / -790.8 + ( ROWS ),-( TABLE[-foo()][destroy() - COLS] ))),destroy(( -85 ),-0.42,( ( -1 ) + Stark * foo(Sansa) )))),-Ygritte,-0.59),Jon),( ROWS ) - -dog / COLS,bar(ROWS + ( Hodor ))) / destroy(( -foo(( protect(Jon,( -( Hodor ) )) ),240.78,COLS) ),-29,( -dog )) - mislead(-0.04));
	if(bar(( ( x - ROWS ) ),-0.51)){

} else {
	Stark /= dog * Stark
}
} else {
	Ygritte -= rule(55)
}
};
	mislead(470.5,COLS)
}
};
	-mislead(mislead(-dog,Hodor,-( 18 / TABLE[bar(ROWS,81,destroy(rule(-y / -590.519))) * mislead(( TABLE[COLS][dog] ),0.23,bar(--1,Stark,COLS))][Ygritte] )),-0.53,ROWS) / y
}
var dog = ( foo(destroy(94,-( -( mislead(( destroy(COLS,COLS) )) ) )),COLS) )
var Ygritte = ( ( ( mislead(( protect(( ( 15 ) ),64) ),--0.05 / ( ( ( COLS ) ) ) * -0.36,betray(( betray(-45 + ( TABLE[rule(-protect(x / destroy(---1 + TABLE[130.991][( -810.283 )],-Ygritte),-100,-COLS))][( ROWS )] ),560.513,1) ) + ( y ) + foo(y,rule(mislead(protect(protect(( COLS )),( --510.5 - Sansa + Stark + ( ( destroy(-foo(x)) ) ) * protect() ),COLS),mislead(foo(( COLS ),TABLE[y][TABLE[Jon][Arya]],-dog))))))) ) ) )
assert x : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( protect(mislead(COLS,-88) + ( TABLE[-52][ROWS] ),betray(),dog) ) : "Fear cuts deeper than swords."
assert -1 : "Nothing burns like the cold."
assert TABLE[-betray(8)][( ( -54 ) )] - y : "Fear cuts deeper than swords."
assert Hodor : "Fear cuts deeper than swords."
var Arya = bar(( destroy(betray(bar())) + -1 ),TABLE[590.59 - 1][bar(COLS,-----COLS) - ( TABLE[-64][-x] )],destroy(( Ygritte )))
def TABLE[( ( ( Hodor ) ) )][i] {
	dog += destroy(( -( 1 ) ))
}
def bar(Ygritte,Stark,Ygritte){
	Stark /= x;
	if(-70.7905){
	Ygritte /= y;
	if(TABLE[Ygritte][Sansa]){
	-Hodor;
	if(Arya){
	if(protect()){
	COLS;
	if(1){

}
} else {
	( ROWS )
};
	if(( -840.16 )){
	-Arya;
	COLS * ( --COLS * ---bar(TABLE[TABLE[-dog][rule(( Hodor - ( -TABLE[dog][Sansa] + -0.19 * COLS ) ))]][-51]) ) * -dog
} else {
	protect(( ROWS ) + Arya);
	Jon
}
} else {
	if(y){
	if(--betray() * 100){
	Ygritte /= -( x );
	if(destroy(COLS,Ygritte,TABLE[-0.27][bar(x,bar(destroy(1),betray()),-COLS)])){
	Stark *= mislead(-1 + -0.64)
} else {
	if(-0.99){
	-foo(-COLS,-Ygritte);
	70
} else {
	if(bar(y,-45,foo(TABLE[rule() * Arya][y]))){
	x -= -TABLE[-betray() / Stark + TABLE[TABLE[bar(COLS,( 87 ),41)][mislead(x)]][( ( ROWS ) )] * -1][--foo(foo(COLS,foo(TABLE[1][( ROWS )],rule(-Ygritte / mislead(( 1 / ( y ) )))) / foo(destroy(foo(( -1 ),rule())))),betray(-x))];
	if(Arya){
	if(betray(bar(rule(( -COLS )),Hodor),ROWS)){
	TABLE[ROWS][Hodor];
	if(COLS){
	if(11){
	Sansa -= COLS
}
};
	if(Jon){
	Sansa += protect(betray());
	if(x){
	foo(y,mislead(ROWS,690.253));
	-ROWS;
	if(destroy(( 8 )) * betray(destroy(foo(ROWS,-COLS),0.23))){
	COLS
} else {
	mislead(TABLE[rule(y,y,mislead(rule(COLS) + 0.25))][( Hodor )],-protect(Ygritte,destroy(( Sansa + ( ROWS ) ),COLS)) + ROWS)
}
}
}
}
};
	if(---42){
	if(77){
	if(Sansa){
	x -= y;
	Ygritte += Stark - --0.77
}
} else {
	TABLE[Arya][58];
	if(-ROWS){
	( ( Ygritte ) + rule(destroy(Arya,1),( ( ( ( bar() / ( -ROWS ) * -0.63 ) ) ) ) + ( -COLS ),-destroy(--49) * ( -0.33 )) );
	if(betray(-1)){
	1;
	if(bar()){
	Jon /= -77
}
} else {
	if(Jon){
	if(--ROWS){

} else {
	480.36;
	if(destroy(COLS)){
	Stark -= Ygritte
}
};
	y
} else {
	if(( ----0.99 )){
	Arya *= TABLE[foo(bar())][TABLE[0.16][--36] * -0.59];
	TABLE[-mislead(-0.99) * -COLS][x] + -0.08
};
	dog += TABLE[( ---COLS )][TABLE[( protect(Hodor / protect(),destroy(( -0.38 ),protect(ROWS))) )][( Arya )]]
}
};
	Sansa -= -foo(( Stark )) - ( COLS )
};
	if(ROWS - ( ( ROWS ) ) + -22 / betray() + ( 7 )){
	3
} else {
	Sansa /= mislead(ROWS,Arya + ( --bar(( 64 ),( ROWS )) + 0.86 ),Sansa)
}
}
} else {
	COLS - y;
	-ROWS;
	if(-Sansa){
	protect(Jon);
	---dog
}
}
};
	mislead(ROWS,Jon - dog,Jon * -0.92 * ( ---COLS ))
};
	Ygritte += -0.47;
	( x )
};
	Stark /= foo(( ( betray(ROWS) ) ),( ROWS ))
} else {
	Stark -= ROWS;
	-dog + foo(dog,protect(COLS,( --y ),TABLE[bar(( ( foo(betray(89)) ) / Stark ),destroy(0.29,COLS,TABLE[protect()][ROWS]),( -98 / ( ( bar(TABLE[-330.03 * --63][betray(( 130.3434 / --COLS ),COLS,TABLE[Jon][dog])],-1 * 0.31 + -38) ) ) ))][0.97])) - ( -Sansa );
	rule(x,y)
};
	COLS * foo(destroy(Ygritte,1),( -Sansa ))
}
}
} else {

}
} else {
	foo(-67);
	if(rule(Jon)){
	if(70.9){

}
};
	if(Arya){
	if(TABLE[betray(--Ygritte,COLS)][1]){
	0.74
}
} else {
	Hodor += -0.32;
	-0.49;
	if(-94){
	Sansa *= Stark
}
}
};
	Arya
}
def TABLE[( foo(Jon,ROWS) )][j] {
	Ygritte *= y + -betray();
	y -= Jon
}
var Ygritte = ( destroy(390.8) )
assert -destroy(COLS) : "Fear cuts deeper than swords."
var x = -( TABLE[( rule(-97,( Jon ),rule(dog,-( rule(( TABLE[( COLS )][TABLE[( Arya ) * COLS + COLS][ROWS]] ),y,-560.08) ))) )][-destroy(Arya,-360.67 / TABLE[Hodor][TABLE[( ROWS )][TABLE[Hodor][TABLE[ROWS][97 * 1 / Sansa]]] - Arya],rule(betray(foo(-dog,Sansa,dog)))) - COLS] )
var Arya = destroy(-( --0.86 ),x) - TABLE[-Sansa][destroy(( TABLE[-Hodor][91 - -Arya + ( -x + -( ROWS ) )] ) + y)] / TABLE[( ( 0.3 / Stark ) )][mislead(( y ))]
assert -1 / -0.37 : "Fear cuts deeper than swords."
var y = Ygritte
def TABLE[-TABLE[protect(-ROWS + betray(--betray(( Sansa ),TABLE[ROWS][mislead(COLS)] / ( 0.09 ))),TABLE[rule(-destroy(dog,ROWS))][( ( Hodor ) )],( -bar() ))][-88] / 0.4][j] {
	if(dog){
	Stark;
	if(rule()){
	Jon += bar(TABLE[3][( dog )] + Sansa,ROWS * 56)
}
};
	if(( --1 + 660.83 )){
	if(Sansa){
	Sansa -= Ygritte + Stark
} else {

};
	if(dog){
	if(foo(COLS,( TABLE[( Hodor )][-COLS + --0.03] ))){

} else {

};
	if(82 - -TABLE[dog][ROWS]){
	11;
	Ygritte /= y
} else {
	-350.0715;
	Arya -= Stark;
	Ygritte /= -x
};
	Arya /= -Hodor * Stark
}
};
	x *= ROWS
}
assert --5 : "Fear cuts deeper than swords."
assert ( -8 ) : "What do we say to the Lord of Death?"
assert -0.57 : "Winter is coming"
var Ygritte = COLS
def rule(Jon,y){

}
def destroy(Arya){
	if(COLS){
	Stark -= ROWS
}
}
def mislead(Sansa){

}
var Arya = Arya
def betray(){
	Hodor *= bar(destroy(-5),Arya,1);
	( TABLE[-0.22][TABLE[-destroy(-( ( ( protect(--( y ) * betray(-1,Hodor) * 53,1,-0.61) ) ) - protect(COLS,0.76 * ( -( COLS ) )) ) - foo())][--y]] )
}
def rule(Ygritte,x){

}
assert -Stark : "One can not simply parse himself"
def TABLE[-( 0.21 ) + COLS][k] {
	Jon -= y / 67 / -98
}
var Jon = ROWS - TABLE[( ---91 - destroy() + ROWS )][( -( betray(( 1 ),betray(y,COLS)) ) )]
def rule(Arya,Stark){
	( ( -120.8 ) );
	if(betray(( -0.1 ),( Stark ))){
	-16
} else {
	if(ROWS){
	if(1){
	if(-13){
	450.52
} else {

}
} else {
	dog += x - Hodor;
	Arya -= ( betray(betray(Jon),Ygritte) );
	y
};
	-x
};
	if(x){
	Ygritte += rule(COLS);
	x
};
	Arya
}
}
assert 50.71 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(Arya,Jon){

}
assert -1 : "Fear cuts deeper than swords."
assert ROWS : "Fear cuts deeper than swords."
assert ROWS : "What do we say to the Lord of Death?"
var y = betray(x,ROWS)
assert -ROWS : "One can not simply parse himself"
def TABLE[( ROWS )][i] {
	Stark - protect(--730.885,( x ),0.39);
	--86
}
assert protect(-1,Arya) : "What do we say to the Lord of Death?"
def TABLE[34][k] {
	Sansa;
	-( 34 )
}
var y = -COLS
def mislead(Ygritte){
	if(-TABLE[foo()][-Hodor * ( -0.35 )] - Jon){
	TABLE[-( -1 )][COLS]
} else {
	TABLE[destroy(--( foo() ),Ygritte)][( 0.39 )]
};
	Hodor += ( -9 )
}
def TABLE[850.854][j] {
	dog += x;
	Stark *= ( Arya ) * Stark * ( --1 );
	if(betray(Jon / dog)){
	-dog;
	--( dog ) - Ygritte
}
}
def TABLE[-0.67][j] {
	Sansa *= Ygritte
}
def TABLE[COLS][i] {
	-99;
	dog -= COLS / ( 0.5 );
	if(( ---destroy(x,-0.76,-0.67) - rule(Arya,-22,( -bar(-Arya,-62 + ( protect() ) / ROWS + --COLS + ( COLS ),TABLE[81][rule(--COLS)] + betray()) / --21 )) )){
	if(-protect(-670.452,1)){
	if(( -( Sansa ) )){
	Ygritte -= ( 690.222 )
}
} else {
	Jon /= Hodor
}
}
}
def TABLE[-230.1][i] {
	Stark -= ( bar(( --68 )) - protect(-Hodor - y) );
	if(protect(( foo(COLS,ROWS * -Stark) ))){

} else {
	if(( --82 )){
	Hodor *= rule(COLS)
}
}
}
def bar(y,Hodor,Stark){
	--TABLE[--95 * rule()][1];
	COLS
}
def TABLE[dog][i] {
	dog -= ( TABLE[( TABLE[-76][-1] * bar(-( -0.65 ) - -0.44) ) * 31][mislead(( ROWS ),destroy(protect(COLS,( -17 ),TABLE[0.15][( ( -bar(-960.399 - -( ROWS ) - -47,( -Arya )) ) )])))] )
}
assert --2 : "What do we say to the Lord of Death?"
assert ROWS : "Fear cuts deeper than swords."
def TABLE[-27 + Sansa][k] {
	ROWS;
	if(betray(Sansa,( Jon )) + -64 / -1 * TABLE[x][protect()]){
	-0.26;
	if(( TABLE[x][( destroy(-20,( ( -6 ) )) - TABLE[rule(destroy(destroy(destroy(Hodor,( -foo(( ROWS )) ))),( ( ROWS ) )) / --( TABLE[foo(foo(---550.4554 - COLS,30,rule()),betray())][ROWS] ))][-80.7] )] ) / Ygritte * TABLE[320.701][Arya + ROWS]){

};
	if(foo(foo(-0.8,COLS,0.6),0.79)){
	Sansa *= -730.379;
	-93;
	if(4){
	-Hodor;
	Stark += ( --730.27 )
}
}
} else {
	-341;
	if(TABLE[foo(( bar() ),Hodor,-COLS)][( 100.24 * ( foo(mislead(-1),mislead(( -( 95 ) ),destroy(bar()),( -foo() ) / ( Stark + -71 ) * mislead(protect(),850.29,-mislead())),( Sansa )) ) )]){
	if(--130.215 - Arya - 33 * -13 - -protect()){
	if(--x){
	( -0.79 )
} else {
	Ygritte -= ( ROWS );
	y /= ( foo(COLS) )
};
	if(--( TABLE[COLS][97] )){
	Hodor *= Ygritte;
	Sansa *= Sansa;
	Sansa
}
} else {

}
} else {
	( Ygritte );
	80;
	if(dog){
	if(ROWS){
	Arya -= -TABLE[-0.72 - ROWS][foo(rule() * destroy(-31,( --COLS )) * -ROWS)];
	if(0){
	Arya += ( protect() * --19 - Ygritte * -destroy(foo(1),Stark) );
	-52
}
} else {
	Sansa /= COLS
};
	--bar(Hodor)
} else {
	Sansa -= Hodor;
	if(-40){
	y += ROWS;
	if(COLS){
	TABLE[TABLE[rule(( Ygritte ))][-Arya / destroy(0.75,ROWS,-TABLE[bar(3,ROWS,-0.93 / ( 400.907 ))][-28])]][COLS];
	y /= -ROWS - TABLE[-0.01][( --protect() )]
} else {

}
} else {
	if(mislead()){
	Ygritte /= 1 * dog
}
};
	-COLS
}
}
};
	TABLE[foo(Arya,10,TABLE[--bar(-970.14,-230.5,destroy(Hodor,-1))][Arya])][Hodor * -ROWS]
}
def TABLE[TABLE[-0.43][ROWS]][j] {
	TABLE[57][-Sansa]
}
def TABLE[ROWS][j] {
	( -y ) / ( -destroy() - ( TABLE[-( Stark )][mislead(( -19 ))] / ( Hodor ) ) )
}
assert foo(ROWS) + -0.82 - ( TABLE[-dog][rule(ROWS)] ) - protect(-x,Jon / bar()) : "What do we say to the Lord of Death?"
assert 71 : "Fear cuts deeper than swords."
def destroy(x){
	( TABLE[-( rule(Stark) ) * mislead(-0.74,-1,bar(-0.21,( ( destroy(ROWS,Hodor) ) )))][TABLE[TABLE[TABLE[( 34 )][1]][-710.517]][( -betray(bar(rule() / --90 + 70.308),ROWS) )]] );
	Hodor -= --24
}
var Arya = COLS
assert ( Hodor ) : "Nothing burns like the cold."
assert -0.57 : "Nothing burns like the cold."
var Ygritte = Stark
assert Ygritte : "Nothing burns like the cold."
var x = -0.35 * Jon
def TABLE[foo(dog,Stark * Arya / protect() + COLS - -59,-0.8)][k] {
	y *= foo(ROWS,Hodor);
	if(protect(Ygritte,( protect(-25) ),ROWS)){
	if(y){
	rule();
	if(( ( 76 ) )){

} else {
	Sansa += dog;
	if(mislead(x,-0.8)){

};
	x -= ( 35 )
}
} else {
	Stark /= -betray(( ( foo(1,TABLE[foo(( Sansa ),bar(-1,-foo(y,-0.69)))][TABLE[--Arya][COLS]],( ( foo(49) ) )) ) ),betray(( ( betray(--Sansa * -rule()) ) ),( -( Jon * Jon ) / -ROWS )) * mislead() / -( 26 ) / destroy(( 380.1049 ) * Ygritte,( 1 )));
	if(ROWS){
	dog /= destroy(( 52 )) + ( -0.99 ) / ROWS
}
};
	if(-Jon){
	Sansa -= bar(ROWS,--1,--Hodor / 9) / foo(Hodor);
	51;
	77 * ROWS
} else {

}
} else {
	if(dog){
	Stark *= -62 * Stark + betray(-48)
} else {
	TABLE[mislead() * ROWS][bar(( -destroy(ROWS,--betray(destroy(Ygritte,dog)) / Sansa,-( TABLE[TABLE[-1][-TABLE[rule(Arya / COLS,TABLE[--( ( -ROWS - 1 ) )][y])][betray(-ROWS,dog)]]][( Sansa )] )) - ( TABLE[TABLE[ROWS][mislead(--0.95) / x]][-0.72] ) ) - -770.56 - Ygritte,TABLE[-30.4529 * 70 / y - protect(-Ygritte - Sansa / -( -0.6 ) - COLS) / Sansa][dog] + 96) - COLS];
	Arya *= Sansa;
	COLS
}
};
	if(ROWS){
	if(-1){
	96
}
}
}
def TABLE[-ROWS][k] {

}
var Jon = ROWS
def destroy(Jon,Stark,y){
	---0.67 * TABLE[-COLS - mislead(( COLS ),( ( -25 ) ))][TABLE[-( dog )][foo(ROWS) / ( -( foo(betray(ROWS * ( Jon ) + -410.148 / 870.225) - rule(--bar(0.63 + foo(( TABLE[TABLE[-5 + foo(COLS * TABLE[-ROWS / 1][TABLE[-----protect(( ( Ygritte ) ),-15,bar()) + ( 0.74 )][Jon]] * ( ( TABLE[Jon + 1 * -rule(( bar(y,rule()) ),y) - ( 0.58 ) - bar(( -64 + -270.724 ),-600.961 - -Ygritte * ROWS / x - COLS,TABLE[( ROWS ) * 89 / ( -0.68 )][ROWS] / --0.15 / Sansa) - ( Stark ) / TABLE[-0.1][57] + ( ( ( Sansa - 52 ) ) ) / ---COLS + ( COLS ) - 1][730.3] + ROWS ) ) + -1 - TABLE[( betray(-0.75,COLS / ---99) )][x / ROWS],COLS)][rule(Jon,-COLS)]][( ( ( 28 ) ) )] ),-ROWS,protect(rule(Sansa,( Arya )),betray(1))),TABLE[foo(( Sansa ),-dog)][Stark]),( -1 ),( -Ygritte )) / Ygritte,Stark) ) * destroy(( Hodor ) + 0.59 - 0.83,rule(-ROWS + betray(-ROWS,0.38) + -( 1 + -mislead(-Arya) + Arya ))) )]] / Ygritte;
	COLS
}
assert ( ROWS ) : "One can not simply parse himself"
def foo(){
	Arya /= ROWS / TABLE[( -0.23 )][Jon] * TABLE[destroy(-0.14,COLS)][( -TABLE[COLS][Ygritte] )] - ROWS;
	if(-x){
	dog;
	if(( protect() )){
	Ygritte += -( Ygritte );
	if(-( ( -( -y ) / ROWS * -( bar(Hodor) ) / Sansa * ( TABLE[-TABLE[( -0.26 + ( ( x ) ) ) + ROWS][--TABLE[destroy() - bar(-COLS,Hodor,( bar(foo(ROWS)) ))][foo()]] * -1 - TABLE[( ( -( -54 * 560 ) / 0.34 ) )][( ( foo() ) )]][-TABLE[bar(x)][30.99] / 0.46] ) / ( ( 1 ) ) - protect(( ROWS ) / --bar(( 30 ) - -1 + -0.28 - destroy() - mislead(),-0.28) + ROWS) - ( --1 ) ) )){
	Ygritte *= -COLS
} else {
	if(TABLE[protect(ROWS,protect())][-TABLE[-----mislead(Stark) + -20 - ( -protect() ) / ( TABLE[destroy(-( --0.87 ) * Arya,Arya,destroy(0.72,dog / -TABLE[protect(--0.08 / y * -52,-0.85)][COLS] - COLS * ( protect(-82,ROWS / COLS,-29) )))][destroy()] )][0.41]]){
	if(COLS){
	Ygritte /= -1;
	( -20 )
} else {
	COLS;
	if(( 86 )){
	Sansa += ROWS * destroy(( ( bar(1 - protect(Jon - -0.53 * -0.82 * rule(-0.71))) ) ),-betray())
} else {
	if(Ygritte){
	y -= rule()
};
	y -= -destroy();
	Jon -= Stark
};
	Jon *= ( -foo() )
};
	if(TABLE[betray(y / -0.49,( y ))][-bar() + ( ( -870.75 ) )]){
	Jon /= ROWS + ( -( -0.18 ) + -77 ) + Stark
}
}
};
	if(dog){
	if(( --( ( Ygritte ) ) )){
	Ygritte -= COLS;
	if(bar(( ROWS ))){
	rule(99,( ( 0.48 ) ));
	x
}
} else {
	Stark /= destroy(-( 30 ),( betray(--980.7843,-800.127) / -ROWS ));
	( TABLE[( ( TABLE[foo(bar(),y)][ROWS] ) )][Jon] );
	if(40){
	Stark /= ( ROWS ) - Sansa
} else {
	if(COLS){

}
}
};
	x /= ( 50 )
} else {
	if(-1){
	if(ROWS){
	ROWS
}
};
	if(-COLS){
	Arya += ( TABLE[foo(COLS,dog)][( -betray(1,-270.368,Arya + -Jon + COLS / mislead(-Sansa,0.77)) - Hodor )] );
	Hodor -= Stark
} else {
	mislead(protect(protect(protect(0.99 - destroy(protect(rule(-foo(( -( --TABLE[rule(270.319) / -ROWS][0.84 * Jon] - ROWS ) ),1)),-12,1)) + ( -COLS ),--mislead(-( ( ROWS ) ) - destroy() / ROWS / ( ROWS ),dog)),x)),mislead(-610.184,-ROWS))
}
}
}
}
}
assert -0.2 : "Fear cuts deeper than swords."
def mislead(){
	y += bar(1);
	--1 + rule(betray(TABLE[-1][520.314] + rule(( 1 )) * -( betray(--dog) ) + TABLE[( 0.7 )][( ( COLS ) ) * TABLE[ROWS][dog]],x))
}
def TABLE[-17][j] {

}
assert ( ROWS ) / -TABLE[-ROWS][TABLE[betray(protect())][-1]] * ( ( Arya ) ) : "Fear cuts deeper than swords."
assert y : "One can not simply parse himself"
var Ygritte = -89
assert TABLE[69][11] : "One can not simply parse himself"
var dog = bar(1,( -bar(--bar(dog),1,destroy(rule(19),0.75)) - -Stark ))
assert ROWS : "Fear cuts deeper than swords."
var Sansa = y
def rule(Ygritte,Stark,Jon){
	73;
	x += TABLE[-Jon][( Sansa )];
	if(ROWS){
	dog -= bar()
}
}
assert protect(-COLS * ( 53 ) + ( destroy(( TABLE[dog][--rule()] ),COLS) ),( COLS )) : "One can not simply parse himself"
def protect(Hodor,y,Hodor){
	Arya /= betray(Sansa);
	Ygritte -= ( Ygritte );
	-730.45
}
assert TABLE[-110.74 - -( ( --0.79 ) )][( --1 / 38 / rule() )] : "Fear cuts deeper than swords."
assert Ygritte : "Winter is coming"
var Hodor = ( -mislead(Jon,-mislead(( --ROWS ),-79) + 0.82) / Arya / bar(( -74 ),foo(( Arya ))) ) * ROWS
def TABLE[-x][k] {
	if(---Jon){

}
}
def bar(){
	Ygritte;
	if(-51){

}
}
var y = -protect(--1)
def mislead(Stark){
	( ( ROWS ) );
	x /= ( 910.265 - 100.132 )
}
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-bar(Stark,mislead(96))][k] {
	-mislead(TABLE[TABLE[x][-ROWS]][TABLE[( 84 )][-bar()]],Arya);
	( mislead(12) )
}
def rule(Ygritte,Jon,Ygritte){
	Hodor -= ( -470.5712 )
}
assert foo(rule(),bar(protect(y,destroy(( ( dog ) )),-700.4)) / Stark) : "What do we say to the Lord of Death?"
var Jon = -( destroy(Arya,( ( COLS ) + ( mislead(Stark,-Hodor,-( ( 0.34 ) )) ) )) )
assert TABLE[rule(ROWS)][0.25] : "Nothing burns like the cold."
def destroy(dog){
	Sansa *= rule(--1);
	( ( destroy(Sansa) ) )
}
def mislead(Ygritte,Stark,Jon){
	if(Ygritte){
	if(foo(COLS,TABLE[-( -bar(-40,( 27 ) - --0.44 + destroy() + -37 + -0.37) )][( ( 0.57 ) )],TABLE[-20][x])){
	if(0.93){
	if(-560.4){

} else {
	Jon / -1 * bar(Hodor);
	if(-51){
	if(( -0.67 )){
	ROWS
} else {
	Hodor += ( -97 );
	x += TABLE[( ( COLS ) )][( x )]
};
	x -= TABLE[--foo(85,-dog + rule(TABLE[betray(( destroy(( ( ( ( COLS / Ygritte ) ) ) ),COLS) ),( ( -1 ) ) - Ygritte)][31],rule(bar(( betray() ),ROWS),mislead(rule(60.6725))),-dog)) / -rule(foo(44,( y )))][mislead(bar(-( -Hodor ),( --( -Jon - -0.08 - 0.25 ) - Hodor - y + Arya * Hodor - -0.64 - bar() )))]
}
}
}
}
} else {
	rule() + foo(destroy(1),rule(-0.93,-0.44),( -protect(--0.83,ROWS) - ( bar(Arya,TABLE[Ygritte][Hodor],( -TABLE[-TABLE[( --( foo(-23) ) ) / 29][ROWS]][-40] ) / 1 * ROWS) ) ) - bar(betray(0.68,( -( ( ROWS ) ) ) + Hodor - 480.2),betray(Hodor,Sansa),10 - destroy()) + Hodor) - -17 * 0.61;
	if(1){
	if(( ( -foo() ) / Arya ) * TABLE[( -1 )][betray(--Sansa)]){
	( ( --95 ) );
	COLS;
	-50
} else {

};
	dog *= foo(( mislead(ROWS) ) * ROWS - 89 + 1)
}
};
	if(TABLE[( -( ( ( -bar(( -ROWS ) * COLS) ) ) - ( mislead(-destroy(-( Stark + dog )),x) * Hodor / ( -500.12 ) ) ) )][-100]){
	if(( TABLE[betray(-0.83,-0.29)][( -Hodor + -7 / rule(-0.65,-76) / TABLE[Jon][-88 - y] + protect() )] )){

} else {
	Hodor -= --1
}
} else {
	betray(betray(),Jon,( Jon ));
	if(Sansa){
	-bar(( -85 + y ))
}
}
}
var dog = -68 * -( ROWS )
def TABLE[Jon][k] {
	if(0.71){
	if(foo(-1,-800.22,rule(destroy(bar(),-Hodor),( ( -1 ) * 0.63 )) * betray() / ( ROWS - -44 / 55 + 20 ))){
	dog += ( -0.97 / TABLE[-( ( --( betray(-Sansa,-0.43,( Hodor * ( --73 * 0.25 ) ) / -( protect(-COLS,( 0.34 ),mislead(foo(mislead(COLS,( x )) * TABLE[---rule(mislead(( ( Hodor ) ),y * -foo(COLS,bar(0.05))))][-( dog - ( destroy(COLS + 0.91,19) ) )],TABLE[dog][( -COLS )]))) )) ) + TABLE[70][50.64] ) ) - COLS][( -0.12 ) + --( -TABLE[Ygritte][protect(dog,-( -340.5998 * -910.75 ),-11 + -y)] - -1 - COLS ) + -ROWS * ROWS] ) / 1;
	Arya *= -77
} else {
	Arya *= -( x ) * ROWS;
	Hodor *= betray(y) * -( ( --1 ) );
	if(Arya){
	if(( Stark )){
	dog - rule();
	if(40.77 + 51 / protect(( -6 ),0.87,( protect(-Stark,destroy(betray())) )) / bar(--( protect(mislead(bar(( Jon ),-Jon + ROWS - -x - betray(TABLE[-TABLE[-0.77][destroy(--0.53)]][-betray()]))) / -( -800.7 )) ))){
	ROWS;
	if(Ygritte){
	if(bar(Hodor,-46,( betray() ))){
	( protect(--mislead(y - ( Arya )),betray(bar(COLS / 10 * -Arya,--41),( COLS ) * ( --45 / mislead() ))) );
	if(520.137 - -0.57 + -14){
	0.21;
	1
} else {
	Hodor *= bar(ROWS,protect(TABLE[dog][-( Stark ) / Hodor],-Stark / TABLE[-ROWS][--39]),170.5)
};
	if(-( y )){
	TABLE[-470.34][ROWS];
	-200.0601
} else {
	if(x){
	Arya += --TABLE[( rule(ROWS,-COLS - Arya,-TABLE[-( TABLE[mislead(( -y ),bar(),0.74)][y + --TABLE[TABLE[rule(-54)][-Jon / Arya] - ( TABLE[690.98 + COLS][-1 - TABLE[dog][( ( COLS ) + ( -370 ) + -8 + bar(y,( destroy(y,ROWS) )) * Stark )] - COLS] )][( 0.45 )] + -77] )][protect(--30)]) )][-0.32];
	Arya
} else {
	if(rule(ROWS)){
	if(Arya){
	-TABLE[betray()][Jon]
};
	ROWS
}
};
	if(81){
	Arya += -COLS;
	if(( -Sansa )){
	if(( ( 8 + -0.05 - y / -24 - -----38 + COLS ) )){
	dog -= --61;
	x += destroy(x,COLS)
}
};
	if(( 0.53 ) * Arya * -0.29){
	if(COLS){
	Hodor;
	if(Stark){

} else {

};
	Arya /= -0.8 / ( COLS )
} else {
	COLS;
	if(-mislead(Arya)){
	Hodor *= 0.45
} else {
	if(Jon){

}
}
};
	80.384 - destroy(-660.5)
}
} else {
	Sansa *= COLS;
	if(( -Ygritte )){
	-COLS - ( -ROWS )
} else {
	Jon += -0.38 + foo(ROWS,( -y ),-89);
	Stark += -520.727 + ( TABLE[1][-ROWS] );
	if(19){
	x /= -0.74;
	if(( 1 / Sansa )){
	Jon -= Ygritte * -ROWS + destroy(( --0.4 ),-690.79);
	Hodor += betray(-0.74);
	if(--1){

} else {
	if(destroy(---0.27)){
	Ygritte += Arya
};
	Stark *= mislead(-0.73,ROWS,--Sansa)
}
} else {
	if(-betray(( y ) * 18,Stark) * -betray(-0.31) * foo(( 0.75 )) * Hodor){
	if(TABLE[38][Hodor]){

} else {
	if(-1 / x - rule(Hodor)){

} else {
	Arya -= ( ROWS );
	if(( -1 )){
	Arya *= ---destroy(-1,39 + 2 / ( -protect() + COLS ) + -360.31) * -ROWS - -Sansa
} else {
	protect();
	y;
	Jon -= -61 + foo() - ( Arya * protect(-44,( COLS / ( ( Arya + Hodor ) ) / destroy(betray(( ROWS - -1 )) - 73,protect(Sansa + foo(protect(Jon - foo(( ( ROWS ) ),destroy(betray(( -ROWS - TABLE[--250.9][foo(COLS,( ( -COLS ) ))] ) - ( ( Stark ) + Ygritte / -1 )),-y),( ( ROWS ) )),93),--bar(dog,betray())),-95 * y) - TABLE[Hodor + 43][protect(--25)]) ),TABLE[0.32][rule(Hodor,( Sansa )) + -0.5] * betray(-( dog ),-rule(mislead()) * TABLE[( foo(( Sansa ),foo(Jon,1)) )][( ( -1 ) - -0.06 )])) )
}
}
};
	if(ROWS){

} else {
	Sansa += -destroy();
	if(-13){
	x -= foo();
	-1
} else {
	if(TABLE[( protect(Ygritte) ) - Sansa][--foo(-1,( -betray(ROWS) ))]){
	protect()
};
	protect(-( ( ROWS - -mislead(( Stark )) / ( Jon ) ) ),-foo(0.68) / foo(COLS * TABLE[( Sansa )][foo(-COLS,---x)]))
};
	dog /= COLS
}
} else {
	Hodor *= TABLE[destroy(Jon,---86 / -0.67) / 0.27][-1];
	if(( Sansa )){
	( rule() );
	( ( 20.9736 ) )
}
}
};
	if(( -10.68 )){
	if(Jon){
	if(COLS){

}
};
	-( TABLE[ROWS][Sansa] ) + --y * ( ( ROWS ) )
} else {

}
} else {
	if(220.7){
	-0.15
};
	x;
	Arya -= Stark
}
};
	mislead() * -( TABLE[Sansa][Jon] )
}
}
} else {
	Hodor -= -y
}
} else {
	x *= -( Ygritte ) + -0.63 / -330.68 - Sansa
};
	if(-1){
	( TABLE[dog][0.51] );
	mislead(mislead(( -92 )),ROWS)
}
};
	Stark -= Sansa
};
	x += -35;
	if(Stark / bar(( dog ),--ROWS)){
	-1;
	if(1){

} else {
	--Hodor
}
}
}
};
	if(TABLE[COLS / dog * betray()][-mislead(( ROWS ))]){
	if(( -( 0.99 ) )){
	( rule(( 28 ),Stark) );
	dog += Ygritte
} else {
	y -= COLS;
	TABLE[dog][-990.179] / Hodor;
	y *= -( Stark - 21 )
}
};
	if(Jon){
	y *= COLS;
	if(COLS){
	ROWS;
	if(dog){
	-ROWS
} else {
	foo(TABLE[COLS][( -( TABLE[-0.49][ROWS] ) + -46 )] + destroy(0.91),Sansa) + --Hodor
}
} else {

}
} else {

}
} else {
	if(destroy()){
	if(y){
	Arya *= ( Ygritte );
	Hodor -= -COLS
} else {
	Arya += TABLE[ROWS][protect(TABLE[( ( Sansa - COLS ) )][-ROWS],-81) - Jon + dog]
}
} else {
	if(Hodor){
	if(COLS){
	Ygritte -= COLS - -Stark - 0.37;
	if(COLS){
	Stark *= 18;
	if(protect(-1 + -0.7 + destroy(mislead(),( -56 )))){

} else {
	Sansa -= protect(-230.257);
	if(mislead(Hodor,-49)){
	Hodor *= ( ---0.56 / ( ROWS ) );
	if(( 1 )){

} else {
	Hodor *= ( -( bar(Hodor + dog,-18,-COLS) ) )
}
} else {
	if(-( COLS )){
	if(-TABLE[Hodor][rule(protect(( rule(( ( ( ( ( -( 0.83 ) ) ) / -0.62 ) ) ),x + ROWS,Stark) ),Jon,Arya))]){
	if(x){
	x *= --680.12 - rule(Arya,( TABLE[y][rule(Hodor)] + ROWS ));
	Stark += Sansa
}
};
	Ygritte *= ( ( TABLE[protect(ROWS,ROWS / ROWS) + betray(protect(ROWS,( protect(protect(( protect() ),foo(ROWS * ( Ygritte ) * Sansa,75),Sansa)) ),( -77 ) + Arya),x) - dog][-290.92] ) );
	-0.82
} else {
	mislead() / Sansa;
	if(rule(ROWS,( ROWS * -COLS ))){
	if(-25){
	-82;
	if(betray(Stark,protect(),--( mislead() ) / TABLE[COLS / TABLE[protect(Sansa,rule(-mislead(Hodor,mislead(-COLS,--65)) / rule(betray(290.509,bar(-Arya),0.24),Ygritte)))][-1]][0.06] * ( bar(( -rule(( ----680.7 / ( mislead(--betray(destroy(( Jon ),-bar()),( -0.3 ) / -1,0.55) * Sansa) ) ),TABLE[( mislead(Stark,foo(-( bar() ))) )][betray(-( protect(--170.36,( dog ),foo(protect(-490.5223 / ROWS,bar(( mislead(( TABLE[-( ( TABLE[( Arya )][-( Jon - TABLE[ROWS][( ( COLS ) )] )] ) ) - Hodor][bar(Stark)] ) - -0.76,ROWS,--TABLE[-0.97 + 140.144 + -890.19][Arya]) )) / -0.53 - Ygritte - COLS - dog),---mislead(),--( TABLE[( -TABLE[TABLE[Arya][( bar(( Sansa * x )) )]][ROWS] + -0.39 )][Jon] ) - ( bar(bar(( ( 61 ) )) + Ygritte,betray(foo(( 1 * ROWS ),COLS),0.4)) + ROWS )) - Hodor) ),Sansa)] - -0.16 / Hodor / mislead(( -Jon + TABLE[TABLE[-0.51][( COLS )] + ( COLS ) / 1][COLS] * ROWS ) + Stark,destroy()) / y / Jon) + ( TABLE[360.236][foo(( TABLE[bar(Jon,foo(y,ROWS / Ygritte - destroy(-mislead(0.75 - Stark,850.4),0.73) / Stark),Stark)][COLS] ),betray(TABLE[0.26][( -protect(TABLE[-0.79][ROWS],destroy(-0.54,( -( dog - -ROWS + Jon ) ),TABLE[-540.8][TABLE[-0.27][x]]),bar()) ) - -foo(--63,-64,( Stark )) - -490.86 * COLS],( ( -TABLE[( ROWS )][Ygritte] ) ),y))] ) ) * TABLE[rule()][foo(58)]) ) / --ROWS + Stark - ROWS / ( TABLE[betray(ROWS)][( ( Sansa - foo(-protect(-1) * destroy(43),TABLE[bar(destroy(ROWS),Arya / 79)][Sansa - 0.45]) ) - destroy(x,Jon,Hodor) )] ) / destroy(rule(( ( Arya ) ) / ( 0.42 ),Jon)))){
	y *= Jon
} else {

}
} else {
	if(( Stark )){

};
	( ( TABLE[--TABLE[TABLE[TABLE[-x][34]][( ( -Jon ) - -1 - mislead(y,-430.09,0.43) * -x * COLS * COLS )]][Arya] + ( -( betray() ) )][( dog )] * -mislead(Stark,-protect(-Stark) + TABLE[x * -0.064][Stark]) ) - -TABLE[( -bar(-COLS,Arya,ROWS) ) * -COLS][( rule(protect(ROWS,foo()),TABLE[COLS][-390]) ) + 750.379] ) - --destroy(COLS,-COLS)
};
	ROWS
} else {
	if(-9){
	if(( dog )){
	if(-TABLE[( COLS )][TABLE[500.131][-0.04 / rule(-1 * ROWS,67 - Ygritte,COLS)] * COLS]){
	Hodor
};
	COLS;
	Arya += COLS
}
} else {

};
	-( COLS ) - COLS * ( -COLS )
}
};
	Stark += -6
};
	Hodor /= 460.767 * foo()
}
} else {
	( COLS )
}
};
	Hodor += -0.94;
	Stark /= ( x )
};
	Sansa -= COLS;
	( protect(--foo(--42 - 710.983 - bar(ROWS)),dog) ) + foo(TABLE[970.02][( bar() )])
}
}
}
def TABLE[Hodor][j] {
	if(-Arya){
	( -63 ) * -dog
};
	Ygritte += -( TABLE[dog][betray()] ) * foo(y,-670.362) - y
}
def mislead(){
	Arya;
	Sansa += bar(protect(betray(0.78),ROWS),-0.87,Stark)
}
def foo(dog){
	if(-destroy(Arya,( -COLS ) / Stark)){
	Stark += rule(destroy(mislead(( 710.105 ),( ( bar() ) ))),--ROWS * destroy())
};
	if(-( ROWS ) * ( --mislead(COLS) )){

}
}
def TABLE[-860.61][i] {
	betray(TABLE[rule(betray())][Stark]);
	x += ( ( 0.92 ) );
	if(foo(Hodor,COLS)){

}
}
def TABLE[COLS][k] {
	Sansa *= -49 * -Jon / Hodor
}
assert ( x ) : "What do we say to the Lord of Death?"
def protect(Jon){
	if(-0.82){
	Hodor -= Ygritte
}
}
def TABLE[destroy(COLS,( -1 ))][i] {

}
def TABLE[Sansa][j] {
	if(Jon){
	if(Arya){

};
	( 0.42 )
}
}
def protect(x,x,Jon){
	x -= -( -1 )
}
def betray(Hodor,Jon){
	dog += TABLE[Sansa][-1];
	Ygritte += protect(betray(-0.94,TABLE[y][-29] / ( TABLE[-protect(0.44,--x)][Jon] - ( ( -410.067 ) ) ) / bar(dog) + dog,( COLS / ROWS )) - -( COLS ) + -0.69 + 0.8)
}
var Arya = --0.86
var Ygritte = -( --( -y - 1 ) - --( ( -y ) ) + -0.61 )
assert betray(Jon + ( TABLE[220.84][( -TABLE[-1][360.797] - y )] - 76 ) * -COLS / -destroy(),foo(( ROWS ),( TABLE[x - bar(( betray(( -0.35 ) - ( rule(TABLE[( mislead(-500.1356,( -0.8 - COLS ) / ROWS) )][2],-19) ) / rule(-68 - Ygritte,36) * -26 / rule()) ),ROWS,82)][Stark + ( -57 )] * ( -( dog ) ) ) * foo(-ROWS)),( foo(ROWS,( --0.9 )) )) : "Winter is coming"
assert ( ( betray(protect(760.9228,43,-bar(protect(TABLE[TABLE[-( ( ( ROWS ) ) ) - protect(COLS) - Arya][mislead(Hodor,20 * ( betray(bar(-640.2934 * -46)) / --89 ),Stark)]][-( dog )]),( COLS ),-270.57)),TABLE[Ygritte][ROWS]) ) ) : "Winter is coming"
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(Ygritte){
	Stark + -ROWS;
	Ygritte /= bar()
}
assert 0.39 : "What do we say to the Lord of Death?"
assert ( Jon ) / Ygritte : "Nothing burns like the cold."
var x = TABLE[Jon][( Hodor )]
def foo(Ygritte,dog){
	if(( ROWS / 78 * ( ( Arya * -foo(-0.36,0.53,-( bar(dog,-destroy() - Jon) + dog )) - protect() - Arya ) ) / -140 ) + ( ROWS )){
	Arya;
	foo(-1,-ROWS,Ygritte);
	Sansa /= 0.33
} else {
	if(COLS - ( TABLE[mislead(Sansa,0.93)][-84] )){

} else {
	Jon += -0.19
}
}
}
def bar(y,Stark,Ygritte){
	if(TABLE[TABLE[TABLE[foo()][-0.36 * y]][( -ROWS * bar(TABLE[-protect(-bar(-TABLE[Sansa][( dog )],x))][TABLE[Sansa][COLS]],betray(( Stark ),COLS)) ) + ROWS]][COLS] / ( ( destroy(( -ROWS ) / --( -67 ),-Stark,y) ) ) / COLS){
	Ygritte -= foo(destroy(),-( bar(mislead(),mislead(destroy() + ROWS,-bar(ROWS - 0.31) + mislead()) * ( ( Ygritte ) )) * --TABLE[0.63][ROWS] * COLS * protect(bar(Hodor,bar(-880.9347,( bar(--48,Sansa) )) - ( ( foo(-1) ) )),mislead(Arya * -32)) - ( Jon / 420.946 ) / ROWS + mislead(--81,( ( mislead(( TABLE[Arya][-Sansa + -COLS] ),( ( TABLE[-93][--TABLE[0.89 - -0.78][-( ( TABLE[Hodor][-1 * betray(( -Arya ) / foo(( -( -dog ) ),Ygritte,ROWS))] ) )]] ) )) ) )) ))
};
	Jon /= x
}
def TABLE[Sansa][i] {
	-( betray() )
}
assert COLS : "Fear cuts deeper than swords."
assert x : "What do we say to the Lord of Death?"
assert Arya * dog : "What do we say to the Lord of Death?"
assert -COLS : "Winter is coming"
def betray(Arya,Arya){
	-mislead(1);
	if(ROWS){
	if(( TABLE[-( -14 )][400.7] )){
	TABLE[1][COLS];
	if(( -( 0.9 ) )){
	-69 * ( mislead(TABLE[( ROWS )][74 / foo()],TABLE[-0.95 + TABLE[Sansa * --COLS][Stark]][0.86]) );
	COLS
};
	if(bar()){
	Arya += destroy(( ( ROWS ) ),( ---0.55 * ( Stark ) ) * Arya,--Sansa);
	dog -= ( y / y - Arya ) - ( destroy(( -( -0.7 ) ),( -780.562 )) )
}
};
	x
};
	Jon += Stark
}
def TABLE[COLS][j] {

}
def betray(x){
	if(--( -0.23 )){

} else {

}
}
assert ---0.08 : "One can not simply parse himself"
assert x : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( 22 ) : "Nothing burns like the cold."
assert ( ---x ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = ROWS
var Stark = ( TABLE[---( TABLE[foo(-Jon + y,ROWS - -dog,95)][0.24] ) / -x][-50.7 / Stark / -( protect(87,---39,ROWS - mislead(1)) )] )
var Sansa = dog
def bar(Sansa,dog){
	rule(ROWS) + -COLS;
	Sansa += ( -1 )
}
assert foo(TABLE[( TABLE[Arya][Arya] + -foo(( ROWS ),--1) / ( -COLS ) )][( ( protect(( TABLE[-870.6][-1 - 0.78] )) + foo() + ROWS ) )] / destroy(COLS)) : "Winter is coming"
def TABLE[-610.244][k] {
	if(destroy(Stark,ROWS) + dog){
	x *= Ygritte / ( ( ( destroy(betray(-1,Sansa + ( Jon ))) ) ) / -( -TABLE[-bar(bar(-22,Jon,ROWS),foo(-1,( 46 )))][-foo(dog,( -( ( ( -Hodor ) ) ) ),Stark)] * ( Jon + ---0.96 + ROWS ) ) - TABLE[-TABLE[Ygritte][COLS] / COLS][--protect(TABLE[COLS][TABLE[-Arya][--79]])] + dog ) - -protect(-Stark);
	if(0.69){
	Ygritte /= ROWS
}
} else {
	Ygritte += TABLE[x][protect(COLS,( -( ROWS ) / COLS ),-destroy(-foo(-TABLE[dog][Jon],-Hodor - -0.92,protect(-x))) - foo() + Sansa)];
	if(0.51){
	Sansa -= -0.24;
	Stark /= -600.364
}
};
	if(TABLE[Ygritte][-0.41]){
	Ygritte += protect(-foo() / ( -( -rule(1,betray(mislead(),foo(ROWS + ROWS,--11))) ) ));
	( Ygritte )
};
	-COLS
}
def TABLE[( ROWS )][i] {
	if(Arya){
	y
};
	( 1 );
	if(y){

}
}
var Hodor = ( 72 )
var Stark = ( -COLS )
var Sansa = TABLE[-65][-protect(( ROWS ))]
var Hodor = ( COLS )
def TABLE[foo(TABLE[( -940.39 ) * -ROWS][ROWS / destroy(( 1 ))],protect(betray(530.005)))][j] {
	if(y / y){
	Jon /= Hodor;
	protect();
	850.67
}
}
def TABLE[ROWS][k] {
	dog *= ( bar(betray(mislead(-0.1,( destroy(-TABLE[betray(( betray() ),-bar(1 - -( dog ),bar(),destroy(rule(( protect(dog) - Sansa ),( Arya )) - dog,bar(-0.02),--( TABLE[TABLE[( COLS )][destroy()]][360.821 + TABLE[ROWS][--15]] ))))][-1]) - bar(COLS,Jon) )),destroy(TABLE[Stark][Ygritte]))) );
	Sansa += TABLE[( -bar(--( foo(foo(-mislead(),-( ( 0.9 ) )),-rule(bar(-( 1 ),( protect(protect(ROWS,TABLE[COLS][-foo(( rule() ),0.83)]) * Jon,dog) - ( bar() + ( bar(TABLE[Arya][TABLE[betray(Stark,Jon / ( rule(1 + -710.51 + x - --protect(( --( ( -19 ) ) + -ROWS * rule(-0.19,Arya,-TABLE[-0.48][-880.7]) * ( -( betray(protect(foo(-( rule(protect(Arya),-23) ))),Stark) ) + 57 * destroy(Sansa,( 34 - ( -Jon ) ) + Jon) / dog / -( ROWS ) ) / COLS ) - -390.867,Sansa,-TABLE[bar(x * Hodor)][( ( TABLE[mislead()][-85] ) - ( Stark ) - -Stark / foo(x) ) / rule(rule(COLS))])) ) + foo(-( Ygritte ) - -1),rule(Jon,mislead(-87))) + ( -mislead(betray(( -Ygritte )),--ROWS) )][COLS]]) ) ) ),Hodor)),( ROWS )) ) * Jon / -betray(51,--destroy(y),Arya) + dog) )][destroy(( destroy(-destroy(bar(-90,0.77) / ( COLS ) / -Sansa + mislead())) ),( ( ROWS ) ) * -1 / -64 * Sansa / Sansa,Jon)];
	dog /= Jon
}
def TABLE[-460.64][i] {
	if(-0.31){
	destroy(( --mislead(ROWS,betray(Ygritte,( -( ( foo(betray(Ygritte),destroy()) ) ) ) * x),1) ),destroy(rule(( foo(40 / Stark,( ( Stark ) )) )),ROWS - -0.76 * COLS));
	if(dog){
	if(COLS){
	bar(-17);
	COLS
};
	--14 / Hodor - -62
};
	59
} else {
	x *= mislead(( Ygritte ),ROWS);
	Sansa;
	protect(--74)
};
	if(( -y ) + -13){
	Hodor -= Ygritte
};
	Sansa += ROWS
}
def rule(dog,Ygritte){
	Sansa -= -mislead(TABLE[( COLS )][bar(Jon + -1 + mislead(),Arya,( 1 ))]);
	-Jon
}
assert Stark : "One can not simply parse himself"
def rule(y){
	if(-Arya - Hodor){
	Arya -= 1;
	if(y - COLS){
	COLS;
	if(720.778){
	Sansa /= ( bar(( protect(COLS) )) );
	if(-( Jon )){
	Jon *= Sansa
}
} else {
	( 290.78 - -betray(( COLS )) );
	COLS
}
} else {
	dog *= rule(foo(TABLE[TABLE[( protect(--COLS,---1,3) )][ROWS]][----( -0.25 )]),Hodor,Jon);
	Ygritte *= Ygritte
};
	y -= -31
};
	TABLE[-17][bar(Arya,Ygritte)];
	if(-TABLE[TABLE[0.2 - foo(Hodor)][1 / ( ( COLS ) ) * -10 * ( dog ) - -betray(ROWS + COLS - 120.374,-Ygritte,destroy(220.837,rule(bar()),( Hodor ))) * -0.87 * TABLE[( y )][COLS]] + -30][dog / ( ( y ) )]){
	if(Arya){
	Hodor -= dog
} else {
	-1;
	if(betray(Hodor,mislead(-( 940.6825 ),betray(( dog ),ROWS)))){

} else {
	Sansa *= TABLE[( -24 )][( rule(--ROWS,ROWS,rule(-0.32 / 89,protect(mislead(Arya,bar(( --48 ) * bar(ROWS),( ROWS ) / -0.05 - COLS,y)) + rule(bar(bar(( Jon / rule(-( rule(( ( 950.364 ) ) / rule(COLS)) )) - -40 - 88 + destroy(-50.65 * Hodor * ROWS) ),Sansa * 1,foo(x)))) / TABLE[-( dog )][-( bar(0.78,-18 / ( COLS )) )]),( -destroy() ))) ) / mislead(-ROWS / 0.91)]
}
}
} else {
	if(0.47){
	64
}
}
}
def TABLE[-19 * -protect(0.67) + ROWS][j] {
	bar();
	if(( ( destroy(-97) ) ) + -1 / mislead(COLS,Stark) / ( betray(ROWS) ) / -ROWS){
	if(0.45){
	ROWS + rule()
} else {
	foo(protect(( ( COLS ) ),destroy(COLS,-COLS)),-19,COLS) * -0.55 + ---6;
	TABLE[1][-destroy(( -COLS ),( ( Stark - destroy(betray(ROWS) / Jon,90.22) * ( -( ROWS ) ) - ( foo(betray(-580.24 * 0.91,x),-x) ) ) ) / 59 * ( ROWS ),x)];
	if(foo(0.31,betray(dog) + x * foo(betray(0.91),-COLS - foo() + protect(1,( -( Jon - ( mislead() + Jon ) - ( 0.9 ) ) ) * x),destroy(Ygritte,( -810.07 ),betray(rule(Ygritte,TABLE[-TABLE[foo(0.11)][( -43 - destroy(-( ( y ) ) + COLS) )]][Ygritte]),Hodor))))){
	dog += y;
	Sansa /= COLS;
	if(( --0.63 )){

}
}
};
	if(( rule(( dog ),COLS) ) - mislead(COLS)){
	Jon /= destroy(-mislead(Sansa,-COLS) * TABLE[-( TABLE[TABLE[0.41][( -TABLE[rule(Sansa,Jon)][COLS] )]][-Ygritte] )][( 1 )],( -1 - -mislead(-( -1 ),Arya) / y / TABLE[-destroy(0.13,ROWS) + 36 + dog][( --protect(bar(),-1) )] - 6 ));
	Stark -= ( COLS )
}
} else {
	COLS - -0.67;
	betray(( destroy(x * COLS,-0.34) ),ROWS,TABLE[-52 / -destroy()][( --1 ) * destroy() / ROWS]);
	if(Ygritte){
	Ygritte *= ( TABLE[( -COLS + TABLE[x - ( -1 )][( Stark )] )][-Arya] );
	( ( betray(0.44,betray(Stark,-bar(COLS))) ) )
}
}
}
assert Sansa / -Arya - betray(destroy(Stark * -0.66),--20.36 / 9 - destroy(Jon,bar(( ROWS ),-0.41,-250.91),protect(-52,COLS * 1 / y - --0.34)) + TABLE[dog][---0.21],Sansa) / -rule(( Jon ),-dog + mislead()) : "One can not simply parse himself"
def protect(Sansa,Sansa){
	Jon += ROWS;
	840.81
}
var y = bar(1,dog)
assert Stark : "Nothing burns like the cold."
def mislead(x){
	Ygritte
}
def bar(Ygritte,y){
	if(bar(1) / --TABLE[Stark][( betray(( betray() )) )]){
	Sansa /= Stark
}
}
var Stark = Jon * TABLE[Ygritte][0.29]
def TABLE[-foo(betray(dog),rule(Jon)) - 42][j] {
	if(betray(---( 0.53 ) - -foo(0.26,-destroy(COLS)),( foo(-Ygritte) ))){
	if(x){
	COLS;
	( foo(ROWS,( betray(protect(TABLE[-71][0.17 + -690.66]),380.11,( 0.1 )) ),Jon / dog) )
};
	x *= ( y )
};
	if(TABLE[betray(88)][-42]){
	bar(dog);
	if(( dog - 0.39 )){
	TABLE[TABLE[foo(( ROWS ),y)][( Stark + ROWS / destroy(( ( --1 - Sansa ) )) )]][( dog )]
}
}
}
def mislead(Stark,Ygritte,Arya){

}
var Stark = TABLE[( -( 0.12 ) + -Stark )][Hodor]
def TABLE[Arya][i] {
	if(-ROWS){
	-0.33;
	--0.25
};
	if(-( -Jon ) * -( protect(ROWS) + TABLE[destroy(--( betray(--y,-0.87 - ROWS) ))][( -960.78 )] ) * x){
	Arya *= protect(( -dog )) + ( 99 )
} else {
	if(-TABLE[ROWS][TABLE[Arya][--( -TABLE[( ( Sansa ) )][-0.09] )]]){
	( Hodor ) / y
} else {
	y /= ( Arya );
	( 0.68 );
	y += 1
};
	x *= -ROWS - --0.48
}
}
var Arya = -ROWS / ---COLS + COLS * dog
def destroy(Ygritte,Hodor){

}
assert Hodor - bar(-44 - ( destroy(---0.2) / TABLE[y][( -630.654 )] ),Ygritte,( ( bar(Sansa,COLS,Sansa) ) )) : "What do we say to the Lord of Death?"
def TABLE[-14][k] {
	Jon -= dog + ( -rule(Stark) );
	if(ROWS){
	Ygritte;
	-( foo(rule(0.66),ROWS,-rule(( ( -rule(( destroy(--ROWS,-0.01,COLS) )) ) ),0.24 - betray(x,Ygritte))) - --44 )
}
}
var Sansa = protect(ROWS)
assert ROWS : "Winter is coming"
var Jon = 0.79
assert Sansa : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = ( COLS )
def TABLE[-ROWS + TABLE[foo(---betray(-protect()),foo(protect(mislead(mislead(foo(betray(--8),34)) * Jon),protect(-( COLS ),--betray(0.12),( mislead(y + COLS,ROWS / foo(-ROWS,COLS,--y),-970.5) + -foo(betray(bar(-ROWS,dog * Hodor - bar(mislead(-23,-x) + ( Arya ),protect(-77,( Sansa ),-rule(-590.351,ROWS,rule(( ( destroy(--( COLS ) + y,-1,0.6) / foo(--Ygritte) ) / mislead(73) + -88 ),-( -( 1 ) ))) + betray(ROWS,y) + destroy() - ( ( -55 ) )) + ( Hodor )),Stark),( bar(ROWS,--( 0.9 )) ))) )) + TABLE[Jon / TABLE[ROWS][( ROWS )]][dog / ( protect(-( ROWS )) * 1 ) - ROWS] - bar(betray()) / -( ROWS ) - betray(betray(TABLE[( COLS )][mislead(80,betray(Sansa - 82,0.14),bar(-( -( ROWS ) * -13 / mislead() ),Arya * Ygritte,0.49 / -COLS) + -dog / Sansa)],900.57)) + -( y ),320.27) / -dog,x,( ( TABLE[-70][-destroy()] ) )))][-protect(( ( --( foo(( ( 15 - ROWS ) ),( ( ROWS ) ),-TABLE[( COLS ) - TABLE[( ( COLS ) )][-TABLE[--0.1][ROWS * TABLE[( 0.85 )][-Stark] - Sansa]]][--750.233]) * TABLE[660.488][--( COLS ) * ( ( bar(COLS + 1 * ---( ( -( TABLE[ROWS * COLS][TABLE[( -betray(protect(-dog),dog) )][ROWS]] ) ) ),-( x - ( -1 + ( betray(Ygritte,y) ) / -84 + Hodor ) )) * -protect(rule(( -( -79 / destroy(y,y,( Arya )) ) )) - ROWS) / -61 ) ) / ( 59 ) * ( mislead(mislead(( --0.88 ) + ( --0.16 / ( TABLE[protect(foo(--Ygritte / 0.18,-( foo(( ( ROWS ) ),Stark,x) * ( 13 - Jon ) + ( Stark + -bar(0.94 + 0.93 / x / -ROWS / mislead(),COLS,COLS * Arya) ) )) - -COLS - y * ROWS)][-96] ) * 93 * ( Sansa ) + dog * TABLE[( ( ----88 ) )][( mislead() )] )),rule(( ( TABLE[( ROWS + TABLE[ROWS][( protect(-( betray(( COLS ),TABLE[-48][( ( COLS ) ) + ROWS],0.93) - -0.04 + --COLS + -0.27 )) )] )][110.4322] ) ),dog + ROWS,TABLE[--bar(-68 / ( -0.86 ) * TABLE[betray(y)][Hodor] - ROWS,foo(mislead(COLS,99),protect(TABLE[mislead(-bar(y,36),-ROWS)][-0.62] / TABLE[protect(-850.844)][-160.311]),foo()),protect(-0.13,bar(COLS,( ROWS )),TABLE[TABLE[( ( protect() + ( -( Arya ) * ( ( rule(( mislead() ),rule(bar(( -100.2 ),ROWS + COLS / TABLE[dog][( ( ( Sansa ) ) )] + ROWS))) ) ) ) ) - Stark ) + 78 / mislead(COLS,( Ygritte ))][--42 + -( betray(Arya) ) * 60]][destroy(1,16) + TABLE[-0.24 + 660.832][0.52]]) * ( Sansa )) * x][-Jon - foo(( TABLE[95][( ( ( TABLE[destroy(COLS)][86 + destroy(dog,( Ygritte ))] ) ) )] )) - TABLE[destroy(y - ( -1 ),TABLE[Hodor][dog] + ( rule(( y ),1) )) / y + --y][-1]] * ( ( 0.32 - destroy(Stark,-1,44) ) ) * --Ygritte / ( betray(( COLS ),1,-1) ) + -rule(( COLS ))),ROWS) )] ) ) ),1) - ( COLS ) + 13] + 0.37][i] {
	Sansa /= protect(-Ygritte,dog);
	dog *= TABLE[-9][dog]
}
def betray(Stark){
	Hodor += --54 / x;
	if(( y )){

} else {
	foo(-destroy(destroy(Stark - -Arya,--0.53),( 100.4137 )))
}
}
var Jon = 0.28
var Ygritte = betray(-Hodor,ROWS * Stark,TABLE[-590.91][--1])
def rule(y){
	protect(COLS,-Jon)
}
assert --dog : "Fear cuts deeper than swords."
def mislead(){
	( ( Sansa ) );
	dog /= COLS
}
var x = dog
assert -13 : "Winter is coming"
assert Jon : "One can not simply parse himself"
assert protect(dog * --56 - foo(( Sansa ) / -52),rule(Stark * Stark,TABLE[x][x * --90.6])) : "Winter is coming"
def TABLE[( ( Hodor ) )][i] {
	if(-500.743){
	0.74;
	protect(foo(0.16,--27) - bar(( --Hodor )) * COLS,-ROWS);
	Sansa += bar(( -TABLE[( mislead(mislead(dog)) * 42 * Stark )][--62] )) - TABLE[-mislead(ROWS)][Hodor]
} else {
	--90.4706
}
}
var Jon = -Sansa / rule(mislead(),Jon) + -0.35
def TABLE[0.57][i] {
	if(foo(-400.33,Stark) * ( -1 ) - COLS){

}
}
assert Sansa : "Winter is coming"
def foo(){
	if(-460.012 * mislead()){
	Jon += bar()
}
}
def foo(Jon,Ygritte){
	if(ROWS){
	protect();
	if(TABLE[COLS][--bar(-( -foo(TABLE[protect(bar(( ROWS ) * ( mislead(TABLE[dog][( ( --ROWS ) - -Ygritte / -( -1 ) / ( --ROWS ) + Stark + y )]) ),-( ( 710.6 / ROWS ) )),0.88)][-Arya + ROWS],( ( ROWS + -5 ) )) ))]){

} else {

}
} else {
	Sansa /= TABLE[0.95][-1];
	-0.75
}
}
def destroy(dog){
	if(( -76 )){
	( ( y ) )
};
	destroy(TABLE[COLS][Jon - -destroy(x)])
}
def destroy(){
	--0.53
}
def rule(Sansa){
	y /= Stark
}
def TABLE[-10][j] {
	Ygritte /= ( 0.78 )
}
def bar(Ygritte){
	Sansa += -1
}
def TABLE[Stark][k] {
	--betray(protect(protect(x),ROWS,-8),TABLE[0.8][-Ygritte] + ( -1 + ( Ygritte ) - protect() ),( ( --570.999 ) )) * -( -0.01 ) - 0.61;
	0.9;
	if(( -x )){
	( y - -dog );
	Hodor += destroy()
} else {
	if(TABLE[-43][Hodor]){
	-( TABLE[protect(-0.19 / -67 / ( betray(-1,-350.308) )) - ( -0.8 ) * --( -( y + -bar(x,--0.65) * Stark ) ) / ( ROWS ) / TABLE[0.4][betray(rule(-1,bar(( Arya ),-Stark)),mislead(dog,-ROWS),-( mislead(-0.59) ))]][TABLE[-0.27 - Sansa][( ( COLS ) ) / COLS]] );
	Arya -= dog
};
	--Sansa
}
}
def protect(){
	if(-Sansa + ROWS){
	if(( mislead(( -foo() ),TABLE[-Stark][bar(COLS,mislead(ROWS))] * 0.08) )){
	-destroy(-1 - COLS);
	betray(bar(),protect(-( -0.59 ) * ( ( Hodor - 1 ) ) * ( COLS ),ROWS))
} else {
	Jon /= -0.66 - -COLS - ( Stark )
}
};
	bar(ROWS,bar(destroy(1) / ROWS,foo(99 - -COLS,destroy(bar(COLS,x,( protect() )) + 980.66,ROWS) + rule(( betray(foo(1,protect(x + ( ROWS ),TABLE[( TABLE[TABLE[0.75 + COLS * -( -0.11 )][-15]][TABLE[foo(Stark,bar(( ( betray(ROWS,Stark / ROWS) ) ),-y + -destroy(COLS,1,1))) - 46][-0.93 / ( --0.12 )]] )][foo(-92)]),--66)) ),( COLS )) * -( Sansa ),Jon),x) / -( dog ));
	if(rule(--TABLE[-( ROWS )][foo(-440.3)],COLS,-0.82)){
	if(TABLE[mislead(Hodor,1)][( ( rule(foo(),( -( foo() ) )) ) * ROWS )]){
	x *= -0.72
};
	--ROWS
} else {
	Hodor -= -( x ) * ( -mislead(mislead()) ) - ( Arya )
}
}
def TABLE[x][i] {
	if(-1){
	if(Stark){
	if(0.85){
	--1 / Stark
};
	Jon *= mislead(Jon,-91);
	Jon += -10
} else {
	if(--foo()){
	if(Ygritte){
	if(--0.42){
	Arya -= --( -0.88 );
	if(Jon){

} else {
	Arya /= bar(-51,0.18);
	TABLE[betray(-480.69 - ( COLS ))][mislead(-TABLE[COLS][-930.7 * bar()],81)] + --foo(1)
}
} else {
	--100;
	Jon /= ( -( bar(--0.6 + --ROWS,1,destroy()) ) - x - -780.07 );
	Sansa *= destroy(destroy(Jon,ROWS))
}
}
};
	if(( rule(-protect(( COLS ),Sansa / COLS,destroy(destroy(Arya,ROWS,COLS) / -y)) / 960.1 * TABLE[Stark][ROWS / TABLE[( ( ROWS ) )][--( destroy(-destroy(( protect() - -( y ) )),ROWS,-0.23) )]],bar(mislead(-22 - 0.98)),-foo(protect(bar(-( COLS )),86))) )){

} else {
	foo() / ( protect() ) * betray(Ygritte,betray(-71 - rule(0.87),ROWS / protect()));
	( 0.12 )
};
	COLS
}
};
	y += Ygritte
}
def TABLE[ROWS][i] {
	Ygritte *= bar();
	if(--Ygritte - -( protect(betray(protect(TABLE[COLS][COLS])) - -Stark + TABLE[betray(y)][-( 0.61 )] * bar(-1,87) - Ygritte) * foo(-11,ROWS / ( ROWS )) ) * --89){
	Stark -= bar(( TABLE[bar()][( rule() )] + ( COLS ) ),-( mislead(( -( -780.8327 ) / mislead() ) + foo(),( COLS ),dog) / ROWS ));
	if(Ygritte){

}
} else {
	rule(protect(ROWS),Ygritte);
	if(-63){
	Ygritte *= -1;
	if(x){
	if(40){
	if(1){
	if(COLS){
	if(( y )){

};
	( 0.69 )
} else {
	if(ROWS){
	dog -= betray(bar(Jon,-610.4269,Sansa),TABLE[ROWS][( -36 )])
}
};
	if(ROWS){
	if(-TABLE[( ( -0.19 ) )][TABLE[-COLS][protect(( -( -ROWS ) ),bar(--COLS + ( 0.07 ) / ( COLS ),ROWS),TABLE[COLS][rule(--TABLE[COLS][dog],98)])]] * ( -0.71 ) - rule(( ( -Hodor ) * ( dog ) / COLS * ( ( 0.08 ) ) )) + dog){
	if(y){
	if(dog){
	mislead(betray(ROWS)) - ( -mislead(foo(( -COLS - y )),y) )
}
};
	Ygritte -= Hodor
} else {
	if(bar(-690.032,( 100 ))){
	Jon *= -Sansa;
	( -mislead(0.48,-( -betray(ROWS) )) )
} else {
	Arya += Arya;
	Stark /= --ROWS
}
};
	Sansa -= mislead(-( TABLE[--460.82][COLS] ),Arya)
}
};
	y -= ( Jon )
} else {
	1;
	Jon /= -Sansa;
	if(74){
	if(-12){
	y -= -39 / ( --foo(Arya,bar()) );
	Stark /= 0.7 + x;
	( destroy(y * bar(1)) )
} else {

}
} else {
	-1;
	Sansa /= ( TABLE[-1][-ROWS] )
}
}
} else {
	Ygritte -= destroy(COLS * ROWS,--( Hodor ) / Arya)
}
} else {
	Jon /= rule(COLS / 730.469,destroy(bar(-( betray(betray(24,TABLE[68 / ( destroy(-rule(ROWS) - 670.28 + y / foo(TABLE[-COLS][bar()]) + ( ( Ygritte ) ) / -860.8961) )][( Jon )]),mislead(( -15 + Arya ))) ),( Sansa ),Hodor)));
	dog *= 0.75 * ( bar(rule(-0.77)) ) + ( ( -rule(( 37 / destroy(-900.057,-ROWS,TABLE[Hodor * foo(TABLE[-foo(COLS)][destroy(COLS,-foo(x)) + COLS],( ( COLS ) ),foo(-550,-COLS))][bar(bar(betray(1)))]) )) - Hodor ) - foo(Stark / ( ( bar(-foo(rule(Ygritte),x,-TABLE[( 0.52 )][Hodor]),TABLE[Jon][protect(TABLE[protect(Stark)][Arya])]) ) )) ) - 1;
	if(TABLE[-300.5][dog] + -Ygritte){
	Hodor /= Sansa;
	rule(rule(bar(( -371 ) - 0.26),TABLE[protect()][ROWS - -280.789]))
}
}
};
	Jon *= ( -0.39 ) / Ygritte
}
def TABLE[destroy(ROWS)][j] {
	Arya -= ( Hodor );
	y /= ( -bar(ROWS,bar(( COLS ) + Hodor + Arya - --1,-0.47 - -Ygritte + foo(TABLE[foo(Sansa,COLS + COLS) - 0.57][rule()]),ROWS)) )
}
var dog = -1
assert x : "Nothing burns like the cold."
def protect(){
	if(-79){
	if(( 52 )){
	if(foo(-destroy(0.76 - rule(( ( betray() ) ),-( ( ( betray() ) ) ),0.64),y) / destroy(-0.46 - protect(protect(TABLE[( Stark )][18] / 0.27,Hodor))) - ( y ) * COLS,Stark,-mislead())){
	y -= -44;
	if(0.64){
	ROWS;
	if(79 / y){
	if(1){
	if(-1){

} else {
	if(y){
	x
};
	if(Ygritte){

} else {
	-ROWS
}
}
}
}
}
};
	Ygritte;
	Arya += -38
};
	protect(-0.57,ROWS)
};
	Jon;
	foo(( Arya ) + ROWS,bar(Sansa))
}
var Jon = --1
def betray(x,Arya){
	-( dog * ( -COLS ) * betray(( protect(-230.4447) * x ),0.48) )
}
assert Sansa : "Nothing burns like the cold."
var Ygritte = -( TABLE[COLS * -480.08][COLS] ) / ( foo(dog,( COLS - COLS / ROWS ) / Arya) )
def TABLE[( Jon * COLS )][k] {
	if(( ( mislead(( --bar(rule(--dog + 0.21 - -( dog ) * -destroy()),( 0.77 ),COLS) ) / -530.28) ) * -protect(y,Hodor) - --1 )){
	-dog - 0.18
} else {
	if(Arya){
	if(TABLE[-ROWS][-ROWS * 78]){
	Arya -= dog
};
	if(-protect(-( -710.01 ),-690.967,( ( Arya ) - dog ) - mislead(0.54 + -( rule() ),( protect(( TABLE[ROWS][Sansa] ),bar(ROWS,( -x )) + COLS,x) )))){
	Hodor *= Arya
} else {
	ROWS;
	mislead(61,( -0.77 ))
}
};
	if(COLS){
	Jon /= mislead(destroy(protect(( ROWS ) * TABLE[ROWS][ROWS])),bar(( ROWS ),dog)) - ( 0.54 )
};
	if(COLS){
	ROWS;
	if(-protect(COLS,( protect(x) ) + --1)){
	Ygritte;
	dog -= TABLE[COLS][y];
	if(( destroy(COLS,bar(-1)) )){
	x += ( ( -ROWS / --Hodor ) ) / Ygritte / ( Stark ) - -Stark - --31 + -Ygritte / TABLE[( -0.25 )][-0.13];
	( TABLE[( -39 )][COLS] ) / mislead(protect(Ygritte))
} else {
	( destroy() - protect(rule(foo(ROWS),( Sansa ) * ROWS / ( -0.81 )),Stark) );
	-810.25;
	if(y){
	if(-0.61){
	TABLE[-Stark][rule(-0.19,-1)] * Hodor
};
	Arya /= ( betray(-destroy(-0.59),25,protect(ROWS) * COLS) )
} else {
	if(ROWS){
	0.76;
	if(970.1){
	Jon /= TABLE[( Hodor )][Stark];
	TABLE[---0.21 * -protect(ROWS,( mislead(betray(TABLE[mislead(bar(( destroy() )),COLS)][-betray(-48)],-TABLE[840.6][ROWS]),mislead(COLS,( protect() ) * --Arya),0.73) )) / mislead(Sansa,betray(Stark),-1)][---betray(TABLE[COLS][-Arya + 91 * 8]) + -1] / --COLS * ROWS
}
} else {
	foo(betray(),( Hodor )) - Arya
}
}
}
} else {
	-Ygritte * 910.3 / 15
};
	foo()
} else {
	destroy(-mislead(ROWS,-( Jon )),-Arya);
	-( Jon )
}
};
	Sansa
}
var dog = foo(TABLE[39][betray()],x)
var x = -0.04
def protect(dog,y){
	Arya /= ROWS - Ygritte;
	if(foo(y,dog)){

};
	if(rule(ROWS,--880.39)){
	COLS;
	if(COLS){
	Sansa += betray(COLS,( -destroy(COLS) / destroy(protect(( ( --COLS * ---1 ) ),foo(-Arya) * --TABLE[-0.1][COLS]) - -670.691) ));
	if(( dog )){
	y -= -Hodor
} else {
	( ( --( rule(-12) ) + ( Jon + Hodor ) ) )
}
};
	Stark /= -1
} else {
	-670.19 - ( bar(Ygritte) )
}
}
assert 55 : "Fear cuts deeper than swords."
def TABLE[Sansa][k] {
	if(COLS + ( -0.73 / COLS )){
	Ygritte *= betray(-bar(Sansa + ROWS) * 220.83 * protect(( 45 ),--Sansa),-1,-destroy(destroy(0.15,ROWS),-56,Jon));
	protect(-rule(),-foo(-( 750.38 ) * COLS + 96,-0.84,-mislead() - foo(( ( -78 * y / bar() ) ),--0.44))) + ( Hodor )
};
	Jon /= ROWS
}
var Arya = Jon
def destroy(x){
	dog *= -foo(-0.27)
}
var Sansa = TABLE[-TABLE[( -( ( -( ( ( TABLE[( Sansa ) / TABLE[TABLE[-540.2][foo(COLS)]][TABLE[Jon][betray()]] / dog][( ( TABLE[ROWS][( ( --1 - destroy() ) ) * ( betray(--COLS) ) * ( -17 )] + COLS + ROWS ) )] ) ) ) ) ) )][protect(( ROWS ),betray())]][betray(COLS) * bar(23,destroy(-( --1 )))]
assert Sansa : "Nothing burns like the cold."
var Stark = --( 94 - ROWS )
def destroy(){

}
def TABLE[COLS][j] {
	Ygritte
}
def rule(x,Hodor,Ygritte){
	---92 / ( ( -TABLE[( Ygritte - betray(-foo(destroy(-COLS - foo(1,protect(-58,0.33,COLS - -y)),foo(-0.51,( -Ygritte / ---bar() / -650.2088 ),-Arya))),dog) )][--85] ) ) - betray(-10.071) / -( protect(COLS,-1) );
	if(( COLS )){
	y /= ( ---( Stark ) / ( -( ( foo() ) ) ) + bar(( rule() )) + -x );
	Jon += foo(78,--720.4);
	if(( ROWS )){
	dog /= -COLS;
	if(Hodor){
	if(ROWS){

};
	( COLS )
} else {

};
	-0.28
} else {
	( -0.03 )
}
};
	75
}
assert -destroy(--0.79,( Hodor ) - TABLE[mislead(( Hodor ),TABLE[ROWS][-Arya],13)][-COLS]) : "Fear cuts deeper than swords."
var Jon = 0
def foo(Arya,Jon){
	Arya -= -75 * foo(y,-rule());
	x += 0.45
}
def rule(){

}
assert Hodor : "Nothing burns like the cold."
var Arya = 0.36
assert -0.18 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( -ROWS ) + ( ROWS )][k] {
	Sansa;
	Hodor *= Jon;
	if(-rule()){
	Arya / COLS - 0.1;
	bar(Hodor,52);
	Ygritte *= y
} else {
	Arya /= foo(Arya / -Hodor,( -Jon * TABLE[( ( -Sansa ) )][--x] * --Sansa - foo(( Sansa ),( Hodor )) ));
	if(ROWS){

}
}
}
def foo(Sansa,Ygritte){
	0.01 * COLS;
	Sansa -= destroy(COLS,Jon,-0.28) + ( destroy(Jon,dog,Sansa) - -Sansa ) * -TABLE[( --Hodor / ( ( betray(-0.4,COLS + ROWS) ) ) )][-Hodor] / Sansa
}
def betray(Stark,Ygritte,Sansa){
	Ygritte -= -COLS + 0.05;
	COLS;
	y
}
def TABLE[mislead(-0.06)][j] {
	if(( y - -79 + y )){
	x -= ( ROWS );
	Hodor *= Hodor;
	if(TABLE[bar(foo(( -foo(( -22 )) )),340 - COLS)][x]){
	28 + Hodor;
	if(protect()){
	Sansa += ( 1 )
} else {
	Jon /= -1
};
	Ygritte /= x
}
} else {
	1 / TABLE[Jon][( rule(y,COLS) - ( -220.135 ) )];
	--( ( -97 ) ) - 20.309
}
}
var Hodor = -Stark / ( 1 ) + -Hodor
var Stark = ( ( COLS ) )
def TABLE[( 0.7 )][k] {
	Stark /= ( ( -1 ) );
	rule(mislead(dog + ( Sansa - Hodor ),mislead(TABLE[COLS][-betray(-COLS * ROWS - TABLE[1][TABLE[Hodor][mislead(( 0.25 ),-1)]],-64)]) - Sansa) + Hodor,ROWS)
}
def TABLE[Hodor][k] {

}
var Sansa = Stark - mislead(( TABLE[( ( -0.62 ) )][( foo(ROWS,Arya,destroy(28,protect(-( -37 ) - protect(-0.1,rule(Ygritte),--dog)))) )] ),460.71 - Hodor) - 40
var Arya = COLS
def betray(Hodor,Ygritte){
	Hodor += Jon;
	foo(-55,69);
	if(-COLS){
	-rule(foo(betray(ROWS,ROWS)),Stark,destroy(foo(TABLE[--COLS][( -75 )]),( TABLE[--40][-ROWS * foo(Hodor,destroy(),COLS + protect(bar(),-96))] ))) + ( mislead(-( ( TABLE[-x + TABLE[Hodor][bar()]][--48] ) ),foo(-Hodor),64) )
}
}
assert foo(rule(),COLS,-( ROWS )) + -87 : "One can not simply parse himself"
def foo(Stark,Hodor){
	x *= COLS;
	y /= ROWS
}
def betray(Stark,Arya){
	x;
	if(TABLE[TABLE[ROWS][x]][TABLE[mislead(rule(-0.76,Arya),-( -190.5 ))][68] - protect(0.66,( 0.28 ),Arya)]){
	mislead(y * -ROWS * Hodor,Ygritte);
	if(-0.31){
	Hodor += -mislead(-y - y,mislead(ROWS) + ---destroy());
	if(0.23){
	if(1){
	if(Arya){
	if(COLS){
	dog += -mislead(ROWS - ---36,TABLE[x][--0.56]);
	bar(( ( bar(0.28) ) ));
	if(dog){
	if(rule(Stark,( TABLE[--150.32 / 1 * destroy(( -TABLE[rule(-1)][dog] ),960.639) / ( Ygritte ) * -TABLE[bar(TABLE[-COLS][---( --( -( 860.8838 + -COLS - -ROWS * ROWS ) ) + 61 )],0.3)][ROWS] + mislead(protect(rule(Hodor),Sansa,( -93 )))][( -92 )] ))){
	y /= ( ( ROWS * -ROWS ) ) / Stark;
	x -= -98 * ( ( TABLE[-94 * COLS][protect(-foo(73))] ) )
};
	dog
} else {
	if(COLS){

};
	y *= 0.72 / TABLE[-x * -( -Stark )][300.5448 + -( Hodor )];
	-COLS + 850.6
}
}
};
	1;
	ROWS
} else {
	( -( 86 ) * -96 )
};
	Sansa *= --0.3
} else {
	Sansa /= 980.758;
	y += mislead(TABLE[y][Arya]) * rule(dog,( Sansa / Jon ) + Ygritte,( ROWS ))
}
}
};
	ROWS
}
var x = -ROWS
def destroy(Ygritte){

}
assert dog : "What do we say to the Lord of Death?"
var Jon = ( mislead() )
def betray(Arya){
	destroy();
	Jon *= ( ( protect(-230.9197,13) * ROWS ) )
}
def TABLE[x][i] {
	Arya *= -( 0.12 - -( 73 ) );
	( TABLE[-destroy(ROWS + mislead(x,( betray(mislead(--bar(-( --7 )) - ROWS,protect(-0.09,( bar(-34,mislead(-( TABLE[( 27 )][ROWS] ),0.5)) ),x)),ROWS,ROWS) ) + ( protect() )),42)][-42] * --82 - -95 / Stark );
	Stark *= Ygritte
}
var Hodor = ROWS
def TABLE[Arya / rule(betray(0.88))][j] {
	if(-( dog )){
	foo(Hodor)
};
	if(-0.09){
	( ( 98 ) )
} else {
	if(-Jon){
	if(( COLS )){
	Ygritte += destroy(COLS,-protect());
	TABLE[-ROWS][COLS + -0.45]
} else {
	Jon
};
	Ygritte;
	if(( COLS )){

} else {
	ROWS;
	if(0.71){
	if(protect() + TABLE[ROWS][-1]){
	Hodor *= 0.81;
	if(31){
	if(-( bar(-180.87,-0.91) )){
	ROWS;
	if(-21){

}
} else {
	if(52){
	if(TABLE[bar(0.06,0.09)][-820.47 / -1 / bar() + rule(Jon,-440.625)]){
	x -= COLS;
	( 20 ) * -1;
	if(Hodor){
	if(y){
	if(( 1 )){
	Sansa += Jon;
	if(ROWS){
	-( TABLE[destroy(( Jon )) + Arya / ( TABLE[( -760.54 )][Jon] )][-Stark + --1 - -19 * 61] );
	if(Sansa){
	dog *= COLS;
	if(45){
	Sansa /= betray(rule(-30.34 + ( Sansa ),72,ROWS))
};
	Stark /= Arya
} else {

};
	Sansa += ( rule(-TABLE[x][foo(dog) / ( -y ) - mislead(bar())],( 50 ),0.6 / 1) / ( foo(-( -x ) + ROWS,x) ) - ROWS )
} else {

};
	Jon *= Ygritte
}
} else {
	if(bar()){

}
};
	if(-COLS){
	protect(( ( TABLE[( destroy(COLS) ) - -61 * Stark][( destroy() )] ) ));
	if(-( bar(TABLE[( Jon )][-TABLE[ROWS][--0.39 + -( TABLE[bar(protect(( TABLE[-190.132][( Ygritte )] )),-bar(TABLE[Ygritte][( 73 )] * --rule(-59,-0.96) / bar() * 44 - Jon,( Arya - rule(COLS + ( ( TABLE[-Hodor / Jon - foo(dog)][( TABLE[( foo(rule(-( x / Ygritte ),-1)) - Hodor + -protect(COLS,Sansa) / dog ) + ( ( --440.3542 ) )][bar(75,( ---y ))] )] ) + ( destroy(ROWS - rule(-ROWS),( 93 )) ) * -0.58 )) ) + -y),mislead(Arya))][--1] ) - ( dog ) / -mislead(( Sansa )) / Stark + -( -bar(Hodor) + dog * -240.852 )]],mislead(TABLE[0.17 - protect(-bar(TABLE[dog][destroy(1,68,( -COLS + y + ROWS ))],mislead(-68) + rule(Hodor + Jon,-( 94 )) + mislead(-betray(( Ygritte ),destroy(bar(--8 * ROWS) - ( ( ( -TABLE[-foo(( ROWS ),destroy(-41,rule(foo(rule(( y - ( 0.19 ) ),foo(),( -ROWS ))),( mislead() ) * COLS,-90)))][COLS] - mislead(COLS - Arya,-41,betray(COLS)) ) ) ))),-61,-0.04 * Stark),ROWS))][betray(( foo(( 520.717 ),( -foo(Arya) + COLS )) * dog + bar(-1) )) + ( x )],COLS * -58)) )){
	if(protect(Stark,Sansa,( TABLE[ROWS][( ( Arya ) )] ))){
	Arya -= destroy(-Sansa)
};
	protect(----TABLE[( ----0.58 )][-( -dog ) + -ROWS] - Stark,protect(--0.82,-ROWS + -1 / -bar(Jon,protect(-1)) / 0.84 + Jon * ( --3 ),90))
} else {
	x /= TABLE[Jon][COLS];
	Stark += -Ygritte / TABLE[--61][destroy()]
};
	-x
} else {
	Hodor += 73;
	if(-79){
	if(( ROWS )){
	dog;
	y *= ( ROWS * Jon );
	Sansa *= -650.265
};
	x += Hodor;
	-1
};
	dog -= -280.2
}
} else {
	480.77;
	Arya -= destroy();
	COLS
}
} else {

};
	-( -foo(Stark,( ( -betray(-COLS,( -( -0.45 ) - protect(( ( mislead(( -0.34 ),1 - -0.03,-780.5) - ( TABLE[--( protect() + -81 )][( ROWS * -ROWS ) - -580.405 * -0.23 - rule(( -0.89 ),Arya) - -foo(( Jon )) + 20 / 5 + ( ROWS )] ) ) )) + 0.63 ),100.9712 * TABLE[bar(( ( ROWS ) / y ) / ( ROWS ) + Hodor - destroy(),ROWS,COLS) - foo(betray(ROWS),y - -( ROWS ) - -1)][( mislead(31 + -71 / --( -( -ROWS ) ) + -betray(betray(( foo() ),-6) - -1 / TABLE[( 38 )][-TABLE[-58][betray(destroy())] - 68 + betray(TABLE[Sansa - x][x] + Sansa - Stark - Hodor,1,( Sansa ))],44,0.76),-77 - ROWS) )]) ) / ( 0.78 ) + --0.88 - -0.32 )) ) + bar(bar(COLS),bar(bar(( COLS ),Ygritte)));
	26
}
};
	Sansa *= -TABLE[( ( rule(ROWS,-940.703) ) )][21 - Hodor]
}
};
	if(Stark){
	( COLS );
	if(Stark){
	TABLE[y][0.95] + foo(--19)
}
};
	protect(COLS,Hodor,-1)
} else {
	y -= ( destroy(Ygritte,( Hodor )) );
	ROWS;
	if(Ygritte){
	Hodor;
	if(destroy(-68)){
	if(destroy(mislead(y),--( ( -TABLE[rule(-78 * ROWS * --( 93 ) * Stark,foo(TABLE[y][COLS]),-betray(COLS) - bar(y,destroy(( bar(-betray(TABLE[0.69][0.48 + -Sansa],( -0.42 )),bar(x)) ),TABLE[550.8215][-y],-TABLE[-640.4 + TABLE[Sansa][foo(-1)]][( COLS )] + protect() + ROWS / 1),dog))][rule(ROWS) * Jon] / -ROWS ) ),COLS)){
	ROWS / mislead(-Jon,( dog )) / foo(-( ( 0.21 * ( 53 ) ) ) - ( destroy(-( Sansa ),COLS,( Ygritte * 1 )) / Sansa ))
} else {
	if(( 32 )){
	if(Sansa){
	x /= TABLE[rule(-ROWS,Jon / -TABLE[COLS][x])][( ( --mislead(( Sansa - TABLE[---( --1 ) + mislead(bar(rule()),1) * 1][ROWS] )) ) )];
	if(-1){
	if(0.77){
	Jon;
	Stark += rule(protect(bar(( dog ),( ROWS + Ygritte ))));
	if(( ( ( 10.392 ) ) )){
	if(COLS){
	Stark /= rule(bar(0.41,720.82,destroy(50))) - -COLS / TABLE[foo()][( -0.16 ) - ROWS * -ROWS]
} else {
	Arya /= Sansa
}
} else {
	Stark += -TABLE[rule(( ( 490.9 ) ))][ROWS]
}
} else {
	ROWS
};
	bar(-780.693,bar(COLS,rule(TABLE[foo()][TABLE[5][0.24]]),destroy(ROWS)))
}
} else {

};
	68
}
};
	if(dog){
	if(Stark){
	-mislead()
};
	Stark /= ( TABLE[TABLE[-79][--340.7]][x] );
	( Hodor - ( ROWS ) ) + y * -( -protect() / TABLE[Jon][37] )
}
} else {
	( mislead(-100 / ( -( ( -70 ) ) / ( ( destroy(TABLE[( -0.19 )][--Sansa - ( bar(--( -y ),betray(350.43 + -Sansa,COLS,x)) )],ROWS - ( -55 ),ROWS) ) ) ),destroy(Jon,protect(1,Jon) + -destroy() - protect() / rule(ROWS * COLS - rule(0.95),bar(-51)) - foo(Jon,protect(x,rule(foo(betray(-COLS + ROWS,--1 - Hodor),( bar() ))))) - ( Hodor ) - 0.5)) )
}
}
};
	Hodor -= ----Arya * foo(mislead(),-Arya,COLS) + Jon / dog
}
}
}
}
assert rule(betray(),betray(( Jon ))) : "One can not simply parse himself"
def TABLE[( ( TABLE[( mislead(ROWS,( -140.145 ) * y,-rule(-ROWS,--bar(TABLE[( Ygritte )][ROWS]))) - -( ( ( ( -TABLE[0.96 + -53][-0.31] ) ) ) ) )][COLS] ) )][k] {
	y += ROWS;
	if(COLS){
	if(x){
	31;
	if(y){
	Hodor
} else {
	Jon;
	Hodor /= x * 71
}
}
} else {
	if(-( --210.121 + 77 + ROWS )){
	if(-( -0.84 )){
	if(-10){
	if(rule(65)){
	Ygritte /= Stark
};
	if(foo(ROWS,-220.3) + bar(betray(mislead(-4),-bar(COLS),-betray(( Ygritte ))))){
	Arya *= -mislead(TABLE[--rule(-( --Stark ) * 90.9) - COLS * -ROWS * betray(--mislead(Hodor,-1) + destroy(-bar(( -66 ) / ROWS,ROWS)) / ROWS * COLS - destroy(--TABLE[ROWS][COLS],betray(-destroy(ROWS))) + TABLE[COLS][Hodor])][-3 - TABLE[bar(( foo() )) * -Jon - protect(COLS,foo(( 11 ),bar(),foo()) * -92 + foo(mislead(-ROWS) / -12) / -0.57) / -1][( ROWS )]])
} else {
	protect(dog) - destroy(COLS,( Sansa ),-protect(mislead(Hodor,Hodor) - protect()) + protect(COLS));
	if(( COLS )){
	if(( COLS )){
	( -12 )
}
}
}
} else {
	if(Arya){
	Sansa += COLS;
	if(Stark + ( ---( mislead(ROWS) ) / ROWS ) - 94 + ( destroy(-0.67 * COLS) )){

} else {

}
} else {

}
}
} else {
	Hodor *= Sansa
}
};
	Stark
};
	if(-protect(TABLE[ROWS][( -0.46 )],destroy())){

}
}
def destroy(x){

}
def TABLE[( ( Arya ) )][i] {
	Sansa *= -42;
	( -1 )
}
def destroy(y,x){
	if(bar(mislead() + bar(Arya),( Sansa ))){
	( ROWS * -( x ) / TABLE[( ( dog ) )][( 0.59 )] );
	y += -TABLE[bar(( y ))][TABLE[0.2][TABLE[-betray(-9,rule(foo(-COLS,-770.85,dog - mislead(( COLS ),--bar(82,protect(TABLE[foo()][Jon],betray(TABLE[( -( ( --( -820.9 ) * --( -1 ) + Hodor ) ) )][TABLE[( 74 )][rule(( ( Hodor - ( ( Arya ) ) ) ),( ( TABLE[TABLE[( -550.52 )][( Sansa )] / -260.488][ROWS] * COLS * betray(( 95 ),( betray(1) ) + TABLE[TABLE[foo(TABLE[( -TABLE[( y )][dog] - ( 37 ) )][-720.35],betray(ROWS))][0.09 - -ROWS]][-0.82] - Stark) ) * -0.54 ),protect())]]))) + ( ( dog ) )))),foo())][rule()]]] / -( Hodor )
} else {
	y += COLS / betray(bar(39,TABLE[1][-y - rule(COLS,mislead(destroy(protect(52,Hodor)),( betray() )))]));
	if(ROWS){
	Sansa += TABLE[-( -61 )][-Hodor * foo()];
	if(( -( betray(68,Ygritte) ) )){
	x -= Jon;
	Arya /= COLS
} else {
	Stark /= -82;
	Jon -= TABLE[Arya][COLS];
	88
};
	ROWS
}
}
}
def TABLE[0.58 - destroy(( -45 ),COLS,( ROWS ))][k] {
	ROWS;
	----0.98;
	y - dog
}
assert 0.03 : "Fear cuts deeper than swords."
var y = ( -Stark + rule(TABLE[Arya][-( ( 1 ) - -TABLE[Jon][Arya] ) - foo(TABLE[COLS][COLS],-Ygritte / protect(ROWS))],ROWS + -1,( 0.43 )) )
def TABLE[bar() / destroy(-10.671 / ROWS)][k] {
	Jon += ( TABLE[protect(( y ) + ( 46 ) * ROWS - TABLE[TABLE[-( foo(Sansa,y,ROWS) )][rule(-0.93,-760.397)]][TABLE[-( Stark )][-Arya]])][-68] * TABLE[-COLS][690.2358] );
	Ygritte /= -0.04
}
var x = ( -0.23 )
def TABLE[0.02][j] {
	x /= 1;
	if(( foo(-0.14,( 0.34 )) )){

} else {
	rule(-26,foo());
	if(dog){
	y -= bar(( Arya ));
	if(Hodor){

} else {
	if(ROWS){
	1;
	Stark /= Stark;
	if(Arya){
	if(COLS){
	if(foo()){
	if(( ( ( ( TABLE[Stark][-0.46] ) + 0.52 ) ) )){
	if(( x )){
	x -= -1 / -COLS + ( rule(220.432) ) + -16 - ( foo(--4) ) - 0.11 - -( Hodor ) / ( dog )
}
}
} else {
	if(dog){
	if(COLS){

};
	if(Arya){
	if(COLS){
	ROWS;
	if(( bar(( dog ),-ROWS) )){
	Arya
} else {
	if(protect(TABLE[COLS][-70.77] * ( 1 ),-4,( ( --ROWS * x ) ))){

} else {

}
}
} else {
	ROWS - mislead(ROWS);
	if(TABLE[rule(( 0.52 ),dog)][TABLE[x][mislead(Arya,( TABLE[84 / ( -0.19 )][COLS] ),destroy(-14,rule(0.1)) + 0.036 - Stark)]]){
	x
}
};
	if(--mislead(( Arya ),( TABLE[-ROWS][( 48 )] ) * ROWS)){
	if(betray(( -79 ))){
	dog *= ---dog
} else {
	ROWS;
	dog /= ( -15 / -mislead(ROWS,Stark) )
}
}
} else {
	Sansa * -( mislead(Jon) );
	if(( betray(( -( -Sansa ) * TABLE[COLS][destroy(-0.19)] * TABLE[betray()][Ygritte - Arya] )) )){
	-1;
	y
}
};
	COLS
};
	Hodor -= -y
};
	Sansa -= ROWS
} else {
	betray(( --0.16 * 820.6 ) - Ygritte,COLS);
	Arya -= betray(betray(( rule(COLS) * ( --COLS * -0.07 ) ),( dog )) / TABLE[ROWS][-290]);
	( destroy(-dog + ( x ),-1) )
}
}
}
};
	if(dog){
	ROWS;
	Stark += mislead(0.03 * -72,-x)
}
} else {
	if(TABLE[Sansa][bar(( 120.6959 - -protect() ))]){
	dog -= y;
	ROWS
};
	-protect(--rule()) - -x + 47 / -0.33
};
	-dog
}
}
def rule(y){
	if(TABLE[Ygritte][ROWS]){
	x;
	( ( Jon ) )
}
}
assert 470.4117 : "Nothing burns like the cold."
def TABLE[-560.286 - -0.35 * Stark][j] {
	TABLE[-17 - -y][ROWS];
	1
}
def foo(Hodor,dog,Hodor){
	Jon += dog
}
assert COLS : "One can not simply parse himself"
assert -1 : "Fear cuts deeper than swords."
def betray(x){
	y *= betray(67,TABLE[destroy(Sansa,ROWS,TABLE[Arya][COLS])][-TABLE[( ( COLS ) )][Ygritte]]);
	if(491){
	y - mislead(( -destroy(destroy(-( Stark ) * Hodor) / destroy(( 990.016 ))) ) - --46)
} else {
	if(--Ygritte){
	if(TABLE[rule()][-protect(Arya - ( ( ROWS ) ),( 900.32 ))]){

};
	if(y){
	if(-( TABLE[( -( 1 ) - -ROWS )][COLS] ) + ( ( Stark ) ) / Sansa){
	if(( ROWS * ( COLS ) )){

} else {
	x -= Hodor;
	-Stark / 0.3 / ROWS + destroy(betray(dog * 0.28,( -0.07 ),-foo(x,destroy(protect(COLS,ROWS,protect(Hodor,-destroy(),foo(0.3)))))) / y,dog,Ygritte) + -( bar(Ygritte,( Arya ) - Ygritte / rule(-COLS) / destroy(ROWS,dog),( rule(destroy(destroy(Stark,COLS),( -1 + protect(y,-55,-14) - Ygritte + 1 )),mislead(-foo(TABLE[bar(-Ygritte,ROWS)][( COLS - -0.79 )]) / 1 - -Sansa,-COLS,ROWS * ( mislead(ROWS + -790.72,bar(x)) ) - Arya * 820.663 * -930.3)) )) )
}
} else {
	if(91){
	if(-1 / ( -4 )){
	if(TABLE[bar()][ROWS]){
	( Ygritte )
} else {
	TABLE[-Ygritte][COLS];
	( Hodor ) + -1;
	y *= dog
};
	-COLS
};
	Arya
} else {

}
};
	Jon += Stark;
	( -bar(99) / -betray(Stark) )
} else {
	x /= TABLE[destroy(--protect(),COLS / -rule(-mislead(TABLE[Hodor][-0.64],( 89 ) * dog) * x,( destroy(1,Ygritte,COLS) - ( foo(-TABLE[ROWS][( TABLE[ROWS][ROWS] )] + ( -30 ),-mislead(y,( --0.03 )) + Arya - ( ---dog ) * ( -COLS )) ) ))) + bar(88,-0.81,ROWS)][-0.25];
	Arya -= 0.27
};
	1
} else {
	if(( 59 )){
	82
};
	protect();
	x *= COLS
}
};
	Arya -= COLS
}
def TABLE[COLS][j] {
	x -= dog;
	Sansa += TABLE[590.99][--( ( ( Sansa ) ) ) + --betray()]
}
var dog = ROWS
var Sansa = mislead(( 0.66 * dog ) / protect(( Jon * -y - Jon ),foo(y,-0.48,--TABLE[mislead(COLS,x,protect(ROWS * -1,( TABLE[( -1 ) + protect(-( x + -1 + COLS * foo() ) * destroy(ROWS,( rule(--( ( ( 69 * protect() - COLS ) ) ) + Stark * TABLE[COLS][mislead(destroy(-60.97,COLS))] * -140.574 / ROWS,TABLE[bar(---920.668,( destroy(Sansa) ),( destroy(COLS,y) ))][-1 / Sansa]) ),( x ) - Stark) + ROWS + destroy() * -97) * y][protect(-0.9)] ),rule(( betray(-950.396) / protect(foo(( betray(bar(( ROWS ) - foo(-foo(),-160.863),TABLE[-( TABLE[TABLE[-ROWS][Hodor]][( betray(-Ygritte) )] )][( -0.72 + bar(bar(y) + ROWS) )],ROWS),foo(26,--x)) )),( ( COLS ) )) / x ),Sansa) - -0.18))][betray()]) + Hodor / rule(COLS),( ( -foo(-Hodor,-( TABLE[TABLE[ROWS + Ygritte - rule(Ygritte,-98)][-ROWS]][-Ygritte - betray(mislead(TABLE[dog][1 - --( Stark )]) * -28,TABLE[( foo(53) / dog )][bar(dog,-( -COLS ),( ROWS ))])] )) ) )),0.46,( ( ( -32 ) / TABLE[-( -70 ) - destroy(( ( -( mislead(47 / Arya + -rule(bar(-( -foo(COLS) ) - ( dog ),COLS + ( -0.63 )) - x + -710.15),TABLE[TABLE[-28][bar(Ygritte / ( x ) * ( TABLE[COLS][( x )] ) * ( TABLE[640.245][Jon] ),( protect(24,( ( ( 92 ) ) )) ) * ROWS)]][-0.51]) ) ) ),Ygritte,Hodor)][( Sansa ) + -55] - -( x ) ) )) + ROWS
def destroy(Stark,y,Hodor){
	Sansa += -300.388;
	if(-0.65){
	if(TABLE[( COLS )][y]){
	y /= x
};
	if(( dog )){
	if(98){
	Hodor /= betray(COLS,( Hodor ));
	if(Jon){

} else {
	-ROWS / ROWS;
	mislead(13)
};
	COLS
};
	COLS;
	if(-( Ygritte )){
	--dog;
	if(-13){
	TABLE[29][0.05];
	0.04
}
} else {
	( -72 );
	Sansa -= -dog + protect(ROWS * -COLS * 0.8 * ( ( Stark ) )) + ( ROWS ) * ( dog + betray(( ( -75 ) ) + Stark) ) / Jon
}
}
} else {
	9;
	if(COLS){

}
};
	( Sansa ) / ( 630.398 )
}
assert foo(COLS,0.59 - -1 * Stark) : "What do we say to the Lord of Death?"
assert -rule(y) - ROWS - COLS / -0.33 / rule(-100) : "What do we say to the Lord of Death?"
var Jon = bar(( COLS + destroy() ),( -( -Arya + 8 ) / -foo(( Sansa ),rule(1)) / -x * -( ( ---0.45 ) ) * foo(bar(COLS / ( ( -ROWS ) ),-670.4191)) ) / ( ( -0.1 ) ) + -0.86)
var y = bar(( protect(TABLE[ROWS][rule(( -protect(-260.58,-mislead(37,-370.8)) ),( y )) - -bar(-destroy(Stark,65 / COLS + Sansa) + -29)]) ),-COLS)
var y = -( Arya + foo(mislead(destroy(COLS),( TABLE[x][Ygritte] ))) + ( TABLE[-TABLE[( -betray(0.16,-dog - COLS * bar(bar(ROWS)) * 0.55) )][--33]][0.26] ) )
def bar(Arya,Arya){
	y /= --COLS
}
def rule(Arya,Sansa,Hodor){
	rule(COLS,COLS) - Ygritte;
	Ygritte -= ( TABLE[TABLE[COLS * -69][x + Jon] + Ygritte][Jon] ) * betray(COLS,rule(TABLE[-( bar(dog,( ( dog ) )) ) / Sansa / -betray(Ygritte)][Sansa],--x - destroy(( mislead(protect(( -54 )),destroy(COLS)) ) * COLS)) + foo(ROWS),-( TABLE[-Ygritte][TABLE[x][Ygritte]] )) - -( foo() );
	Stark
}
assert Stark : "Fear cuts deeper than swords."
def protect(dog){

}
def mislead(){
	if(foo(0.24 / Ygritte * x - y - bar(COLS,-0.44,( -foo(780.1364,Ygritte - Hodor,destroy() + ( ( dog ) )) )) - ROWS)){
	if(-0.71){
	--68 + -x + 660.7698 / x + ROWS / -1;
	COLS
};
	0.53 + x + --ROWS * -97;
	if(TABLE[-destroy() + mislead(-0.83)][TABLE[-( -bar() )][( ( dog ) )]]){

}
};
	TABLE[Stark][( --destroy(98,bar(( ( COLS ) ))) * -Jon + -foo(COLS,--x + -0.59 + -9,-Stark) + ( -0.85 ) )];
	if(( -protect() ) * -1){
	Stark += 1
}
}
var x = Stark
def foo(Arya){
	rule(COLS / COLS);
	-( -y + x + COLS );
	Stark /= ROWS
}
def TABLE[-41][i] {
	Sansa += rule(ROWS,( Arya ));
	( -0.54 )
}
var Sansa = Sansa * --0.45
def betray(){
	if(betray(TABLE[( bar(foo(54,Hodor) * ( ( -92 ) )) )][-Jon]) - -0.29){
	if(--1 / Ygritte / -foo(-TABLE[( 0.78 )][--ROWS - protect(mislead(TABLE[-1 / Ygritte][-( -Jon ) * 11 - -0.6 / -TABLE[-94][Ygritte - 0.33]]),-bar(destroy(( -dog / Sansa + y ),y),y,( -1 )) / COLS) * TABLE[-20 + mislead(( TABLE[Arya][betray(( 1 ),protect(( ( Sansa ) ),TABLE[-dog - -80.1482 / ( COLS - ( y ) )][-14]) / bar(x,destroy() - bar() - 570.236 * destroy(( ( dog ) ),( ( -0.3 ) ))))] ),1)][Arya - 89]],ROWS) - ( y * TABLE[--1][ROWS] * destroy(foo(( -protect(TABLE[--destroy(-63,COLS) - Hodor * TABLE[-92][ROWS - protect(Ygritte,-570.19 + -490.36 / ( -TABLE[-rule(-y,39)][betray(rule(( ROWS )) - bar(( 41 ),-71))] )) * Stark] / ROWS][Arya]) ),Arya,ROWS),86,x) )){
	( ( -57 / 1 ) );
	x *= 0.25
}
} else {
	dog /= Sansa;
	COLS
};
	0.02
}
def TABLE[740.143][i] {
	rule(ROWS,ROWS) - ( ( -10 ) )
}
def TABLE[--0.97 - -0.72 + ( -60 )][j] {
	if(x){
	dog *= COLS;
	if(( Arya ) + TABLE[Ygritte + y][90.2]){
	Jon *= TABLE[-0.76][foo(ROWS)];
	dog -= COLS;
	Jon /= Sansa
};
	Stark /= 18
} else {
	dog;
	Sansa
};
	COLS
}
assert --68 + ( ROWS ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert destroy(betray(--( ( -x ) ) * protect(-0.33,371),Ygritte),( x ) + rule(-x,-Sansa + ( COLS ) * -bar(TABLE[0.69 / COLS][Hodor],-( -1 )) / mislead(),0.91 + ( --foo(mislead(COLS) / -670.426,14) - ( betray() ) )) * -COLS / rule(( betray(--93) * Sansa ),-Arya,ROWS) * ROWS) : "Fear cuts deeper than swords."
var Jon = ROWS + protect(( 1 ))
def foo(Stark,Hodor){

}
assert Sansa : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(Jon,Hodor){
	protect(1)
}
def bar(Ygritte){
	Stark -= ( -ROWS )
}
var Sansa = ( --( bar(( -COLS / 0.6 ) + ( -( TABLE[4][-destroy(protect(-99),foo(),mislead(ROWS,Sansa,ROWS)) / -0.63] ) + Sansa * betray(-1) ),Jon,45) ) )
def destroy(){

}
def protect(Sansa){

}
assert ( -betray(( ( ( ( Sansa ) ) ) - destroy(destroy(x),rule(( dog ))) )) ) * 4 : "What do we say to the Lord of Death?"
def TABLE[rule(-1)][j] {

}
def TABLE[COLS][k] {
	Hodor -= ( ( ( -97 ) ) / -Ygritte )
}
def TABLE[ROWS][i] {
	if(-54){
	if(--410.1547 / -40.5903 - 0.5 * -rule(mislead(COLS - -0.92,ROWS),( bar(-71) * ( ( mislead(----ROWS,betray(-COLS / 0,-0.61) / ROWS / y) ) ) )) - COLS / COLS / ( mislead(Arya,ROWS) ) - Jon){
	ROWS
} else {
	COLS - y
}
} else {
	if(y){
	dog /= foo(-y) - -870.521
};
	betray(Hodor,foo(Sansa,TABLE[-( 1 )][880]),-( -0.27 ))
}
}
var Sansa = protect(--( -0.82 ))
def bar(Stark){

}
var Jon = COLS
var Ygritte = bar() + -( betray(y) )
var Jon = y
var Jon = 1
def betray(Sansa,Arya){
	if(Ygritte){
	Sansa += -1;
	protect(26,destroy(( protect(( -rule(protect(-y - -foo(rule(COLS,foo(COLS))) * -40.88 + ( Hodor - Sansa ))) )) ),x),69 - ROWS)
};
	y -= -0.14;
	Jon /= protect(TABLE[-1][protect(Ygritte,( Jon ))],( rule(( COLS ),( ( protect() ) ),foo(betray(-foo(Stark)),42,( Stark ))) ),( ( 68 * ( 29 ) + foo() + COLS ) ) * rule(bar() + 140.66,COLS))
}
def TABLE[x][i] {
	Jon += -bar(-TABLE[( COLS )][( -630.0125 )],ROWS,ROWS)
}
var Stark = ROWS
def betray(){
	Jon;
	if(Hodor + 24 / betray(-1,0.46 * ( 380.2 * ( rule() ) ) + betray())){
	Ygritte - -( ( TABLE[0.46][-TABLE[COLS * 1][ROWS]] ) );
	if(ROWS){
	if(Jon + Stark){
	if(foo(840.424)){

};
	x - -( -foo(-ROWS) )
} else {
	-0.08 - COLS
};
	Ygritte -= -( ( -betray(( --0.96 ),Jon) * 57 * Sansa ) )
} else {
	if(dog){
	Ygritte -= -ROWS
};
	Jon -= ( y )
}
} else {
	-TABLE[Jon][--Stark];
	Stark += foo(0.93,-55 / 39) / ( COLS );
	if(COLS){
	dog += 0.51 - x;
	if(-0.98){

} else {
	if(ROWS){
	if(-ROWS / x - betray(ROWS,0.94,( y ))){

} else {
	if(TABLE[bar(dog) * x][--80.4249 * 540.44]){
	Ygritte -= -82;
	if(1){
	ROWS;
	y /= COLS
} else {
	-( ROWS );
	if(bar(Hodor)){
	Jon += ( destroy(Stark,TABLE[x][( ROWS )]) );
	dog *= TABLE[-Arya][Stark];
	if(destroy(1,protect(mislead(-0.6)),---1 / -280.8 + -Arya + foo(-95,TABLE[1][bar()],-dog)) - betray(( -mislead(( ( -Ygritte - ( protect(( -0.97 )) ) - 1 * y + betray(-25,0.62) ) ) + -foo(TABLE[--220.9163 + dog][bar(( ( -mislead(Jon,-0.45) ) ),1)],( destroy(( ( ( mislead(x,COLS - COLS / -0.02 * TABLE[mislead(-0.64,Hodor)][Jon]) ) ) ),-84) ),ROWS) * Hodor + -49 - bar(( COLS ) * betray(foo()) / ROWS - -Hodor - ( betray(--Hodor,ROWS) ),betray()) * foo(-50),( --1 )) ))){
	Jon /= bar(( -ROWS ),TABLE[betray(TABLE[-( Ygritte - mislead() )][( TABLE[--0.79][dog] )])][ROWS])
}
} else {
	( ( betray(-( bar(Jon) ),-80.908,Stark / Sansa) ) );
	dog -= COLS
}
}
} else {
	850.76
};
	if(--( TABLE[( -0.56 )][-( ( COLS - 0.76 ) )] ) - 23 + -( Stark / 11 )){
	x /= ( COLS ) + y;
	-( Stark ) - protect(-0.58 + --0.28 * 420.82)
};
	x *= Sansa - ROWS + 1
};
	COLS / TABLE[( COLS )][bar(600.122)]
} else {
	Jon;
	Arya /= ( dog );
	x -= ( betray(-0.7,Hodor) )
};
	y *= protect(foo()) - Jon
}
}
};
	COLS
}
def destroy(Sansa){
	0.49
}
def TABLE[( TABLE[Hodor - ( TABLE[0.31][-COLS] ) + -( Ygritte )][protect(( ( Arya ) ))] ) / 0.11][k] {

}
def TABLE[mislead(72,ROWS,destroy(( -Jon ),900.44 - bar(-48)))][i] {
	--foo(bar()) + 4;
	COLS
}
def TABLE[( Stark )][i] {
	rule(rule(( Ygritte ),---( ( Arya ) ) * 1),( Arya ),bar(mislead()));
	Jon += -13
}
def TABLE[1][k] {
	-ROWS
}
def TABLE[( betray(-410.17,y,TABLE[Arya][-betray(Hodor / -22,betray(-0.38,( -mislead(-1,COLS,-COLS / ROWS) )) - COLS - y)]) - ( --ROWS ) )][k] {
	destroy() * -Sansa + Stark
}
var Stark = ROWS
def TABLE[Sansa][k] {
	TABLE[x][Ygritte * -1 - Sansa / -0.75 - Jon * ( ( 0.05 ) / Hodor ) / ---Jon];
	77;
	x += -0.32
}
def foo(dog){
	( 97 );
	COLS
}
def TABLE[( ROWS ) / -TABLE[COLS - ( ROWS )][ROWS] * TABLE[( ROWS )][( bar(TABLE[TABLE[-70.5332][rule(dog)]][1],11) )] + -1][j] {
	if(Ygritte){

} else {
	-protect(Arya,ROWS);
	if(protect()){
	( ( y ) / Sansa )
} else {
	if(1){

} else {

};
	x += bar(( -620.75 ) * x);
	Arya *= 73
};
	1
}
}
assert betray(-Stark,dog,-7) : "What do we say to the Lord of Death?"
var Stark = Sansa
def TABLE[( 0.61 )][k] {
	if(mislead()){
	if(-1){
	if(-1){

};
	if(280.6314){

} else {
	Ygritte += -0.52;
	-rule(( -75 ),--( Sansa ) * ---Hodor + -27)
};
	Jon -= COLS
} else {
	if(COLS){
	if(TABLE[( -( ( TABLE[-mislead(0.62,COLS)][protect(Ygritte,Jon)] ) ) + ( ROWS ) ) / ( TABLE[( ( -0.49 ) ) * 50.53][bar(-betray(ROWS,( 1 )))] - TABLE[ROWS][-80.65] )][COLS]){
	Arya *= -850.473
}
} else {
	Stark;
	---x
}
}
}
}
def protect(dog,Jon){
	Jon -= protect(-48)
}
def TABLE[-Sansa][j] {
	ROWS + y;
	if(--destroy(-( -foo(-210.47 - protect(-rule(ROWS,ROWS,ROWS) - 1,x),-30) )) / TABLE[( -( rule(TABLE[-ROWS][ROWS],( x )) ) )][TABLE[670.8 * 880.38][-1]]){
	Stark *= foo(-450.2021,protect(Arya,-COLS - ( Hodor )));
	Hodor -= mislead(destroy(destroy()) - -TABLE[foo()][TABLE[-TABLE[--6][-0.02 + TABLE[( Stark ) / 1][COLS]] * 1][( ( ( ( ROWS ) ) ) )] + -0.33 / foo(Arya,-( -0.08 )) * ( -Jon ) - -840.386] - 0.59 / dog - COLS,( x ),bar(Jon,( -TABLE[0.3][--TABLE[( ( --0.08 / -betray() - ROWS ) )][Stark / protect(foo(Arya),Ygritte) + -TABLE[-ROWS - -21 - 97 / --Jon + ( -Arya + TABLE[-1][y] )][COLS] - -0.86]] )))
} else {
	Sansa /= 7
};
	if(0.68){
	Sansa *= Ygritte
} else {
	( bar(( -1 ),rule(bar(-760.1265,TABLE[betray(( -( COLS ) ))][betray(--mislead(Sansa),-COLS)] + -TABLE[0.9][-95] * -destroy(( --( betray(-COLS,Ygritte / --TABLE[y / Jon][( ( ( -COLS ) ) )] / --0.7,y) ) ),-0.87,protect(COLS * Hodor))) * y),Arya) / -Sansa );
	Arya *= destroy()
}
}
assert -0.65 : "Nothing burns like the cold."
assert foo(-0.68,-bar(( -( --1 ) ),mislead(bar(-480.3949,y) + --1 / --63 + ROWS,( protect(COLS) ))) / ROWS + TABLE[protect()][bar(( -y ) - ( ( -Sansa ) )) + protect(Jon,foo(protect(-( 0.3 ),-x,Stark)))]) : "One can not simply parse himself"
var x = protect(COLS)
var x = Jon / destroy(-810.8)
def TABLE[COLS][k] {
	mislead(0.92,--0.18 / TABLE[ROWS][COLS] - 960.92 / 0.98);
	bar(18 * -0.12,-32,( Jon ));
	mislead(rule(Sansa,TABLE[-32][dog]),betray(dog / -Hodor,-( 570.21 )),Hodor) + bar(bar(ROWS + ( ROWS ),protect(-( ( ( -ROWS ) ) ) / -TABLE[51][ROWS] / -( betray(0.5,rule() - -10) + COLS ),bar(y,( ( destroy(18) ) ) / ROWS * protect(( Jon ) / COLS,( destroy() ) - -3,--0.26) - -Jon * betray(0.83,( -0.54 ),-COLS) / 56))))
}
var Sansa = COLS - --y + -0.07 - -0.92 - ( ( bar() ) )
def TABLE[Jon][j] {
	dog
}
assert ROWS : "Fear cuts deeper than swords."
var dog = ( ( ( destroy(( -( -( destroy(COLS) ) ) / -betray(ROWS - x,( destroy(TABLE[-0.86][foo(( -ROWS ),ROWS,( -( --rule(750.189,bar()) ) ))],Jon) )) ),-betray(Sansa,( -1 + -1 ))) ) ) )
def TABLE[( 440.476 )][i] {

}
var Sansa = rule(-57,( --( destroy(COLS) * ---1 + TABLE[ROWS][rule(( COLS ),destroy(Hodor),( COLS ))] ) )) + ( Arya ) - 550.0169
var Hodor = 34
var Ygritte = -0.81 / -TABLE[-62][-ROWS] / ( dog )
var Arya = ( Jon )
var Sansa = Sansa
assert --mislead(mislead(foo(( ( COLS ) / mislead(-( -0.61 + y - Ygritte ) / --destroy(mislead(-86,destroy(-betray(Ygritte),( ROWS + bar(TABLE[x][foo(protect(-40 * TABLE[Jon][Jon],-180.365),Jon + ( Hodor - dog + 97 ))],ROWS,--( Hodor )) + COLS ))),mislead()) - -COLS - -1) - Sansa ),Sansa) * destroy(y),( Stark )),-18) : "Fear cuts deeper than swords."
def TABLE[TABLE[destroy(( ( Ygritte ) + 0.52 + betray(-1) ))][Sansa]][i] {
	if(-95){
	Sansa += ROWS - Ygritte;
	( betray(-600.9,foo(41),--dog / ( ( -TABLE[bar(-dog)][-foo(ROWS)] + -ROWS - 70 ) )) );
	Hodor *= ( mislead(0.99) )
} else {
	Jon -= Hodor;
	if(TABLE[-( -1 )][( ( --( -ROWS ) ) )]){
	if(y){
	x -= protect()
} else {
	Sansa += ( TABLE[( COLS ) * y][0.16] * betray(84) )
};
	if(( ( 380.395 ) )){
	Stark *= 65
}
} else {
	if(Ygritte){
	dog /= 0.68 * -11;
	Arya -= COLS
};
	Ygritte *= -66;
	if(( --ROWS ) - 30){

}
};
	if(-0.29){
	if(protect()){
	if(( 21 )){
	Arya -= -20
} else {
	if(COLS){

};
	if(protect(-foo(( ( ( -protect(( TABLE[TABLE[( dog )][-Sansa / -0.32 * ( Stark ) - dog]][x] ),TABLE[Sansa][destroy(x,Jon,Arya)]) ) ) / -0.25 )) * ( ( -53 ) ),--( bar() * -protect(x) / 85 + ( COLS ) ) - --1) + -1){

} else {
	mislead(-0.51,TABLE[dog / mislead(mislead()) * COLS][Arya]);
	if(Jon){
	x /= destroy() / ROWS;
	40 * Stark
} else {
	( TABLE[-590.7507][dog] )
}
};
	Ygritte /= betray(-protect())
};
	-0.82;
	if(bar(rule(TABLE[-betray(COLS * ( foo(( -60 )) ),-( foo(Sansa,-( bar() )) / -Arya ))][betray(x,-foo(--( TABLE[--76][0.54 * -( -( -0.74 ) )] ) * Hodor))],COLS))){
	if(bar(( -y ))){

} else {
	TABLE[( rule(rule(),destroy(TABLE[ROWS][-1])) )][-4];
	Stark
}
} else {
	if(-protect(0.53,( -foo(( ( ROWS ) ),betray()) ) - Arya / dog,Jon)){
	Arya /= betray(-( -0.91 / -890.5362 / -dog ) + -900.1,Arya,44) / dog;
	if(640.0592){
	Sansa *= protect(94 + -0.44,-0.11)
}
} else {
	Stark *= ( bar(Hodor,( -Arya ),mislead(( ( ( dog * Sansa / -0.19 ) ) ),-0.86 / ( -0.24 ))) )
}
}
};
	x;
	-Ygritte
} else {
	y *= dog;
	Jon += protect(-40.238,( ( -620.7494 ) ) - -( -bar(mislead()) ))
}
};
	Ygritte /= -0.43 + -460.44 * -destroy(destroy(-bar()),destroy(( --1 ) / COLS,72,y))
}
def destroy(Arya){

}
assert betray(( --betray(-( 430.09 )) )) : "One can not simply parse himself"
def TABLE[( ---89 * rule() )][k] {
	if(( mislead(( TABLE[betray(--1,COLS,( --TABLE[Stark][destroy(-0.12)] ))][ROWS] ) - Stark,-0.35,COLS) )){
	if(protect(0.43,foo(TABLE[protect(( -foo(dog,mislead(COLS,Hodor,Stark / -53)) ))][COLS + ROWS]))){
	Stark -= mislead(( dog / ( -rule(foo()) ) ),460.7308,foo(40.896,Stark));
	91;
	Ygritte -= Stark
};
	Ygritte *= destroy(-51,0.09,-920.495)
} else {
	COLS / Arya
}
}
var Arya = ROWS
def destroy(){
	bar(( ( COLS ) - betray(-11,-0 * protect(-betray(),-COLS / Stark)) + ( COLS ) / ROWS ) - rule(( Arya ),( --79 ),y + protect(-270.511,Hodor)),x);
	Arya += -0.41
}
assert --1 : "What do we say to the Lord of Death?"
def protect(y){
	( TABLE[ROWS][-bar(-destroy(foo(-1) + ROWS),-0.27,-46)] );
	y
}
assert rule(mislead(y) * --y * -( 11 ) / 0.97 * -50,-Jon,y) : "Nothing burns like the cold."
def TABLE[1][i] {
	Arya *= COLS;
	if(( -destroy(--ROWS,protect(( --Ygritte ),Hodor)) * betray(33,Arya) )){
	x *= Hodor / TABLE[-1][--ROWS];
	if(ROWS + y){
	Ygritte /= protect(0.91)
} else {
	rule(mislead(-0.5,Stark))
}
};
	Jon / 0.58 * 1
}
assert ( -Ygritte ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert 0.34 : "Winter is coming"
assert -( --Arya - ( -x ) + ( ( rule() ) ) ) * protect(ROWS,mislead(-Stark,( ( -68 ) ))) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = destroy(( --0.14 ),ROWS)
def TABLE[-30][j] {
	if(73){
	if(( betray(TABLE[1][--COLS],COLS,ROWS) )){

}
}
}
assert destroy(TABLE[1 - protect(( COLS ))][--56] + dog,-COLS) : "One can not simply parse himself"
assert -58 : "One can not simply parse himself"
var dog = Jon
var Arya = x
assert ( ( ROWS ) ) : "Fear cuts deeper than swords."
def protect(Stark){
	Stark -= ( Stark - TABLE[-0.25][( Sansa )] / ( Arya ) ) / betray(Stark);
	-TABLE[ROWS][( 0.74 )]
}
var x = COLS - 6
def TABLE[ROWS][j] {

}
assert -0.68 - COLS / -( TABLE[--TABLE[protect(( -57 / ( Sansa ) ),-( COLS ),-foo(----ROWS))][-1] / ( COLS ) - TABLE[Jon][( --0.62 )]][-protect(-foo(( -46 ),mislead(protect(-43,protect(protect(-( 63 ),--( ( betray(( ( y ) ),( 52 )) ) ) * 0.79,COLS) / TABLE[-foo(-ROWS,( Arya ),-790.7665)][TABLE[COLS][Stark]],-Stark) - 1) / ( -690.26 ),( ( ( ( ( ( rule() ) ) ) ) ) ))))] ) * ( Sansa ) : "What do we say to the Lord of Death?"
var Jon = Hodor
def TABLE[Hodor][j] {
	ROWS
}
assert y / -( x ) * TABLE[Arya][foo()] : "Winter is coming"
def TABLE[Hodor][i] {
	TABLE[0.35][protect(ROWS,-Hodor)];
	Ygritte *= -rule(-920.15,TABLE[y][60.97])
}
assert y : "Fear cuts deeper than swords."
var Jon = protect(TABLE[-96][( foo(( ( Arya ) - ( foo(-66 - dog,betray(( COLS ))) ) * COLS ),-( 610.4 / 80 ) - Sansa) + destroy() / ( ( -COLS ) ) )],-( mislead(0.92) ))
def betray(x){
	if(TABLE[ROWS][1 / ( foo(Sansa,1) )]){
	if(74 - -y * COLS){
	if(Ygritte){
	if(bar(rule(Ygritte,foo(-65)),-1)){
	if(( ( betray(-0.81) ) )){
	( foo(TABLE[ROWS][TABLE[Hodor][mislead(( 870.3 + -770.7 + ( ( ROWS ) ) / COLS / ( ROWS ) ))]],bar(ROWS,x),foo(60)) )
} else {
	x -= -( COLS );
	770.8 * -66;
	x *= COLS
};
	Hodor /= TABLE[44 - -250.916][-ROWS - ( ( 29 ) ) + ( foo() )]
}
};
	COLS;
	980.85
}
};
	ROWS;
	y *= ( foo(TABLE[73][-dog]) )
}
var Arya = -50 - ( 630.39 / dog )
def TABLE[( ( protect(29) ) ) * TABLE[COLS][-87]][j] {
	Arya += -foo(Sansa,( -( Stark * ( ( -470.9 ) ) ) )) * -Arya;
	if(TABLE[bar(-COLS * ( rule(-y) ),-COLS,( 1 ))][dog] * -0.51){
	dog -= y + Sansa;
	Ygritte;
	Arya
} else {
	Sansa /= x;
	Hodor /= protect(1);
	x /= mislead(x,( TABLE[-97][( COLS )] ))
}
}
assert -foo(COLS,( TABLE[( COLS )][-( ( COLS + -TABLE[-protect(( ( destroy(x,( -betray(33) * COLS - 56 ) + ROWS) ) ) / x,( -49 * ( ( -52 * 0.74 * bar() ) - COLS ) / ROWS - Ygritte / Arya ) + -450.832)][-0.52] ) * -710.7869 ) + TABLE[TABLE[( y )][Arya]][( --17 * -38 )] + Hodor] ),destroy(foo(Hodor),-TABLE[-0.82 * 1][-0.83] + Sansa * TABLE[Sansa][( --foo(0.69) ) * TABLE[protect(-Stark / 88 - dog,y)][-( 0.56 ) - foo(( -0.72 - ROWS - ( protect(ROWS,betray(0.67,ROWS)) ) ),ROWS)] / destroy(-770.9) * Hodor])) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = Ygritte
assert dog : "Nothing burns like the cold."
def TABLE[TABLE[-0.78][TABLE[--0.95][65] * TABLE[93 + -0.24][-0.75] / destroy(( mislead(( -0.93 ),-800.6248,Sansa) ) - -ROWS)]][i] {
	Hodor -= destroy(49,foo(-Hodor,x / COLS,Stark),-44);
	if(Sansa){
	Stark += TABLE[x][( ( -0.58 ) )] * TABLE[-35 / Hodor + -0.01 / ( COLS )][( ROWS + ( Sansa ) )]
}
}
def TABLE[destroy(( TABLE[-protect(bar(-Ygritte,( rule() )),76,Stark)][120.96 / --0.18] ))][j] {

}
assert y : "Nothing burns like the cold."
var Stark = betray(TABLE[-COLS - COLS + betray(protect(),Jon)][-protect(COLS)],TABLE[y][( 1 )] / ( -( 160.311 / --TABLE[-TABLE[---COLS * -destroy(ROWS)][destroy(ROWS - Sansa)]][TABLE[( Ygritte )][COLS]] ) - -protect(-protect(Arya),-65 + ROWS - -730.7) ))
def rule(Arya,Stark,Ygritte){
	Hodor *= ( 350.066 );
	Arya += ROWS;
	if(-TABLE[( ROWS )][dog] - Stark + x + betray()){
	rule(destroy(),-( ( ( ( Ygritte ) + COLS ) ) ),--96 + 0.71)
} else {
	ROWS;
	if(bar(ROWS,( -80 ),betray(-97 * COLS - ( ( 67 ) * TABLE[-COLS - ( TABLE[-93][Arya + Sansa] )][-87] - bar(( 0.53 )) - Stark ) / bar(-( TABLE[-rule(-( COLS ),destroy(COLS,protect(-y * -rule()),( Sansa ))) / ( ( destroy(-1 + Ygritte + Stark) ) )][Arya] ) * -34 * ( COLS ) / x + TABLE[-protect(bar(),-( COLS )) * 60.57][Stark],x,x) / y,-( -28 - Stark ),( dog ) * Ygritte))){
	if(Sansa){
	x -= ----1
};
	if(dog){
	if(( ROWS )){
	x -= TABLE[COLS * 1][Sansa / ( -510.721 + ( ( ---0.32 - x ) * COLS + dog ) * COLS ) * ( 91 / ( Ygritte ) / -31 )] - -0.2 + ( ( ( ( Arya ) ) ) );
	Ygritte /= COLS
} else {

}
}
} else {

}
}
}
def foo(Hodor,dog){
	( destroy() )
}
def destroy(Sansa){
	mislead(foo(destroy(--foo(-910.1))) - -ROWS,Sansa)
}
def rule(){
	Ygritte /= TABLE[ROWS][( -( y ) )];
	dog -= Jon;
	Arya
}
def TABLE[--290.444][j] {
	dog *= -Ygritte + destroy() + -TABLE[-rule(( ( -0.33 ) ),-0.44) + Sansa * dog][41] + ( -1 );
	if(-81){
	-25
} else {
	( -1 * mislead(TABLE[Hodor][( COLS )]) )
}
}
def TABLE[TABLE[-0.444][y / -COLS - TABLE[betray(( -( COLS / -COLS + bar(-0.87,( -foo(mislead(TABLE[ROWS][destroy(COLS,-78)] - 0.28,--foo(bar()))) )) / destroy(-( ( rule(( Stark )) * -bar() ) * Stark ),COLS) ) ))][-TABLE[-0.88][( -1 )]]]][k] {
	if(Hodor){
	bar()
} else {
	Sansa *= -ROWS;
	if(-( TABLE[( COLS )][ROWS] )){

} else {
	protect(---12,-Stark) * rule(Arya * -65,Stark + protect(betray(betray(Ygritte,( ( -12 ) )),-rule(bar(( -rule(0.42,TABLE[-0.98][Stark],0.76) - COLS )),-bar(Stark,( Sansa ) - COLS + bar(ROWS,70),ROWS * protect(Stark,TABLE[( mislead(TABLE[betray(Sansa,x)][foo(-ROWS) * -( -betray() ) * Ygritte],COLS,rule(-110.8,destroy() + 86)) - x * destroy(bar(--( --rule(( COLS )) ),0.75)) )][-Hodor])),-86) / -dog + -( 61 )))) / betray(TABLE[foo(-Ygritte * -23,( -0.57 ))][ROWS],mislead(( destroy(( -ROWS ),Hodor * dog,-bar()) ),( destroy(--( ( ( ( ROWS ) * -Ygritte ) ) ),( ( ROWS ) )) ),Sansa)) + -0.62
};
	if(rule(-92,---820.9,0.81)){
	Jon -= TABLE[-x][--Sansa * ( ( COLS ) ) - TABLE[ROWS][-( ROWS )] / 940.86 - -0.55]
} else {
	if(TABLE[--y / -0.89][( -780.66 )]){
	if(-7){
	x -= -COLS
} else {

};
	43
} else {
	if(bar()){

};
	foo()
}
}
}
}
def foo(Jon){
	( Ygritte );
	if(destroy(protect(),8)){
	Arya;
	Stark /= x + -100 * Arya;
	-( ( Sansa ) )
};
	if(-rule(25,TABLE[ROWS][( ( TABLE[TABLE[destroy(-69 - TABLE[( Sansa - bar(Stark,( ROWS ),( --180.58 )) )][foo(-TABLE[protect(Jon,-( TABLE[Stark][( 0.24 )] ))][Jon - -1],-( dog ))])][destroy(-( 1 ),( Arya ))]][830.23] / -46 ) )]) + Sansa){
	if(( 0.19 - ---980.294 ) + COLS){
	if(( TABLE[bar(Arya - --Ygritte + Jon,Sansa)][ROWS] )){
	if(( foo(--0.35 / Jon) )){

} else {
	Sansa *= COLS;
	COLS
};
	if(dog){
	COLS
} else {
	destroy(COLS + Sansa,-Stark);
	-1 / ( mislead() )
}
} else {
	if(protect(bar())){
	dog;
	Sansa -= -92
} else {
	if(-ROWS){

} else {
	if(-Jon){
	x *= ( Ygritte )
};
	rule(( -500.224 ) + Ygritte,ROWS) - --Jon;
	Arya += ROWS * ROWS / y + ( ---( x ) ) * Ygritte * foo(( -( bar(-0.53,0.17) ) + ( protect(dog,Arya) ) ),Arya,foo(protect())) / Hodor / protect(Ygritte) * --ROWS - ( mislead(( protect(-foo(( -35 ) - -80,-bar(y) + Sansa + ( --1 ),-0.28),-mislead() - -88 + rule(--0.9 - TABLE[-foo(-39) - Sansa][( -32 )] + y)) ),dog * foo(TABLE[-0.84 / bar(-9,Jon,ROWS)][Ygritte / ( TABLE[-( -0.47 + destroy(( bar(-Jon) ),( -46 ) / ( -73 )) * ( TABLE[( COLS )][0.59 * -dog] ) )][-( ROWS )] )],( -0.9 ),-Jon)) ) * TABLE[rule(TABLE[-Hodor][TABLE[( -1 ) * 710.759][-1] - -58])][COLS] + ( ( 1 ) + 0.54 ) * destroy(-rule(bar(y,Hodor),( y )))
}
}
}
};
	if(-COLS / rule(mislead(destroy(( mislead(COLS) ) / ( x ) + -rule(-TABLE[-( 440.933 )][rule()]),protect(--ROWS - -96 / Sansa,ROWS,( rule(( ( ( 13 ) ) ),--1 - TABLE[rule(Arya) * y][Ygritte * ( ROWS )]) ) * mislead()),Stark)))){
	Stark *= protect()
} else {
	if(foo()){
	if(-( ( -0.27 ) )){
	if(x + ROWS){
	0.24
} else {
	protect(Arya);
	dog -= ( ( ( Jon ) ) )
};
	Sansa += ( dog / betray(-480.454) )
} else {
	Hodor;
	Jon += ( --33 )
}
}
}
} else {
	TABLE[foo(mislead(Ygritte),-0)][-( dog )]
}
}
var Ygritte = ( y )
assert Sansa : "Winter is coming"
def TABLE[( --rule(( TABLE[( ( TABLE[( -35 )][-1] ) )][Sansa - ( 77 ) + Hodor] ),( Hodor )) )][i] {
	dog;
	if(-bar(x,( ( rule() ) ),Sansa)){
	y /= Jon;
	ROWS - -( rule(ROWS,-70 - -0.9,destroy(-y / protect(-0.72,( ROWS )) + x,-( bar(--0.99,TABLE[Sansa][COLS]) / -ROWS / y ) + 79 / ROWS,67)) );
	if(( ( protect(Sansa,-0.13) ) )){
	Sansa
}
}
}
def rule(){
	if(Sansa){
	Arya /= ( destroy(x,--80) )
} else {
	0.66 + ROWS * 33;
	27
};
	Jon
}
var y = ( dog )
def TABLE[y][k] {
	if(COLS){
	-Hodor;
	Jon += ( ( -protect(Stark,( ( mislead(-( mislead(Stark,protect(-destroy(( 1 ),mislead(),Stark)),-TABLE[bar(x)][-( ( -TABLE[( ( destroy() ) * ROWS ) + ( -Arya - Hodor )][-1] * ( betray(ROWS,betray(destroy(COLS,TABLE[-( Stark )][ROWS] / y + -60,ROWS))) ) ) )]) ),1) ) )) ) )
};
	Hodor -= ( 0.89 );
	if(44){

}
}
def TABLE[Arya][j] {
	if(bar(-26 + ROWS)){
	Arya /= -y;
	-98 + TABLE[--( -betray() )][-20] / TABLE[( -rule(( 0.81 )) + -890.69 )][Ygritte]
} else {
	2;
	if(ROWS){
	if(Hodor){
	Hodor
} else {
	TABLE[COLS * Arya][Stark] * ( -950.92 );
	y += COLS
}
}
};
	if(( COLS - --Stark ) * -1){
	( ( ( -1 ) ) )
}
}
var Jon = betray(ROWS,TABLE[protect()][TABLE[foo(-( COLS ),protect(-50),( rule(rule(Ygritte),-destroy(bar(dog,( destroy(( x + foo(-Stark,-88) ),( --840.42 - -Jon / 0.12 + dog ),-Ygritte) )),( foo(-1) )) / rule(( 1 - ( ( ( ROWS ) ) ) ),TABLE[610.457][TABLE[--( ( 130.5618 ) ) + COLS * --0.37][-Ygritte - x]]) - x / ROWS - ( x )) ) / TABLE[Hodor][( -0.3 )])][Ygritte * 1 + --140.169]])
def foo(){

}
var Sansa = 0.23
assert COLS : "Nothing burns like the cold."
var x = COLS / destroy(-1,( TABLE[mislead(( x ) + -0.76,Sansa)][protect(1,Hodor,x * protect())] )) / -rule(( ( TABLE[foo(( 0.78 ),-54)][rule(( 0.79 ))] ) ))
def destroy(Hodor,Sansa){
	if(rule(mislead(),( dog ) - ( -( ( foo(rule(----TABLE[TABLE[y][-ROWS * -bar() * --mislead()]][Hodor] / Hodor,ROWS),Ygritte) ) ) ),y)){
	COLS
} else {
	Ygritte -= -0.83
}
}
assert COLS : "One can not simply parse himself"
var Stark = ----ROWS + ( foo(rule(900.7,COLS)) ) + TABLE[-foo(( -600.46 ),21,protect(COLS,dog))][y + protect(Hodor)] / -Sansa / ( bar(-Arya,x) ) - -53
def destroy(Jon){
	Arya *= -Stark / -30 + Hodor + ( protect(COLS,Jon,ROWS) ) * Stark * -foo(-42 * -bar(( Arya )) * -0.94 - bar(mislead(COLS,77,COLS) * -TABLE[y][( COLS )] + -0.55) - foo(),-( --protect() )) / Ygritte
}
def TABLE[foo(destroy(( -98 )),mislead(TABLE[-0.58][Stark] / 92) * Arya)][k] {
	Jon *= ( --( -COLS ) );
	x += COLS
}
assert -betray(( --( dog ) ),foo(-Sansa,( ( y ) ))) - x + Hodor * COLS : "What do we say to the Lord of Death?"
def protect(Hodor){
	Stark /= destroy(TABLE[( y )][COLS]);
	y += -0.91 - --600.5;
	ROWS + ( -TABLE[dog / -( COLS )][y] )
}
def TABLE[-0.05][i] {
	y;
	if(( protect(foo(ROWS) * --1,foo(-1)) )){

} else {
	if(( Stark )){
	x -= ROWS;
	ROWS
}
}
}
var dog = ( rule(TABLE[ROWS][COLS - COLS],--87 + Arya) )
assert -dog : "One can not simply parse himself"
def TABLE[destroy(x)][i] {

}
var y = foo(COLS - Sansa * ( -x ))
def mislead(){
	y += foo(-36 * destroy(foo(--510.9 + COLS * ROWS / betray(rule(rule(destroy(( betray(-( -860.27 ),-0.02 + destroy()) ))),( mislead(-13,mislead(( Stark ) / rule() + destroy(( --0.68 ),-TABLE[betray()][( Hodor )],-1) * Stark + 940.184,dog)) )),970.004,--COLS * y),protect(mislead(( ( -Ygritte ) / y ))),( betray(TABLE[COLS][protect(-protect(810.18,-700.71),Ygritte)]) ))));
	Ygritte *= mislead(foo(),destroy(-rule() - ( ROWS + -0.21 ),bar(),( -ROWS )))
}
var Stark = protect()
def TABLE[-destroy(Jon,----( x ) - mislead(( -y + Jon / Jon - ( -1 ) - COLS )) - -54)][j] {
	TABLE[x][rule(ROWS,( ( rule() ) + -( Ygritte ) ),Jon)]
}
var y = ( Sansa )
def destroy(){
	if(betray(( ( protect(ROWS) ) ))){
	Stark *= -TABLE[-0.54][foo(--1)] * COLS
};
	-destroy(1,-0.93,ROWS / ROWS)
}
def rule(){
	x;
	-69
}
def TABLE[0.39][i] {
	if(-88){

} else {
	if(( ( ROWS ) )){
	x += -( TABLE[-( ---830.6671 )][-( x )] );
	y *= rule(-0.19,1 - dog) / ( ROWS )
}
}
}
assert ( ( ( -0.36 + -TABLE[( x )][y] ) ) ) : "What do we say to the Lord of Death?"
var y = ( ( TABLE[-1][1] ) )
assert -( ROWS ) : "What do we say to the Lord of Death?"
var Stark = -21 / y / 1
def foo(y,dog){
	if(rule(( ( -COLS ) ),COLS)){
	protect(0.97);
	dog -= TABLE[-78][-COLS] - dog
} else {

};
	if(mislead(-0.94,( TABLE[( rule(( foo(( -x )) )) )][-COLS] * x ),protect(-60))){
	Hodor += Arya;
	ROWS
} else {
	if(-( -44 ) - ( TABLE[-destroy(-bar(),ROWS,--73)][COLS - ( destroy(Stark) )] ) * foo(-1)){
	Arya
} else {
	if(( ROWS )){
	destroy(ROWS,COLS - Arya,protect(-Ygritte))
} else {
	if(destroy(bar(( ROWS ),1))){
	if(-240.366){
	( rule(Stark,( COLS )) ) * betray(destroy(( ROWS )),rule(TABLE[--0.73][0.34] / ( --betray(( Stark )) ),( ( 370.3 ) )),TABLE[protect(TABLE[29][( 960.557 )])][92] - dog)
}
}
}
}
}
}
assert dog : "Nothing burns like the cold."
def TABLE[destroy(0.8,dog)][k] {
	-ROWS
}
def TABLE[( betray(( bar(( ( ( protect() ) ) )) ),Stark) )][k] {
	-( ( -TABLE[( -14 ) + -0.79][-COLS - -78] / ( bar(rule(( Arya ),Hodor) * ( foo(betray(-1 / y - COLS - COLS,dog * ( 0.83 )),COLS,Jon) )) + protect(x) / ( -0.21 ) / Stark / foo(( -52 ),--( ROWS ) - ( x )) * -TABLE[Stark][-82] ) + destroy(-TABLE[TABLE[COLS][-Arya + bar(-1,( -( COLS ) / Stark )) + ( ( -foo(-1,( -( ( protect() ) ) - --66 )) ) ) + betray()]][y],y - ROWS) + --Jon / ( ROWS ) ) ) / ( 960.9 );
	-Stark
}
def TABLE[TABLE[mislead(-TABLE[mislead(Arya,COLS,1)][-( Hodor ) + betray(bar(TABLE[y][59],-ROWS)) + x],( -0.44 ) - ( Ygritte ))][foo(( -0.84 ),-620.017) - COLS]][k] {
	Stark += ---destroy(y,( -40 ) / betray(100.176),( -betray() - Jon - ( 60 * -COLS ) / ROWS ));
	if(--protect() - mislead(COLS,( COLS ))){
	y -= Ygritte;
	-Hodor
} else {
	dog /= Stark + -( ROWS )
}
}
assert ( -910.809 ) : "Nothing burns like the cold."
def mislead(Hodor,Hodor){
	Sansa -= ( -370.3 );
	dog += --0.05 - ( Sansa + destroy(TABLE[1][-( -17 )] + mislead(-Stark - bar(y,0.54,-Hodor)),Hodor) * 30.9 - rule(dog,destroy(protect(( -betray(( bar(-960.6,( y ) * mislead()) ),-9) - TABLE[( ( bar(COLS) ) )][Ygritte] - TABLE[( Hodor )][COLS] - -36 ),25))) )
}
def TABLE[Arya][k] {
	ROWS
}
var dog = COLS
def TABLE[-0.68][k] {
	if(-( x ) + bar(-0.24)){
	if(-dog - -( y )){
	if(( -x )){
	dog /= ( -( 0.67 ) );
	Ygritte /= foo()
} else {
	if(( -mislead(dog / -bar(( destroy(-( COLS ),-0.51 - betray(ROWS,-97) / ( -110.824 )) / Arya ),Hodor),( ( foo(betray(-260.981 - ROWS / ( Hodor ),Jon),Stark) ) ) / -rule(( ROWS ),COLS,--1) / bar(TABLE[ROWS - mislead(( Ygritte ),betray(470.9),rule(-38))][-COLS] / Sansa) * -1 + 0.3 - -( TABLE[ROWS - Sansa][Stark] ),Arya) )){
	if(( Hodor )){
	dog *= ROWS
}
};
	-COLS
}
}
} else {
	y
};
	-y - 0.31
}
var Jon = -( -370.36 )
assert ( -( COLS ) ) : "Nothing burns like the cold."
assert bar(( 0.35 )) : "Winter is coming"
def mislead(Ygritte,dog){
	Arya *= Jon
}
var Hodor = -0.95
def foo(Hodor,Hodor){
	dog += ROWS + rule(TABLE[-x][Hodor - 71]) + -1;
	Jon *= destroy(ROWS,( TABLE[TABLE[Ygritte][-0.46]][ROWS] )) - ( -( TABLE[ROWS][( ( --COLS ) )] ) )
}
var Sansa = TABLE[mislead(ROWS)][-( x ) * ROWS]
assert ----Jon : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Stark : "Fear cuts deeper than swords."
def bar(Hodor){

}
def TABLE[COLS + ( ( -0.82 ) )][i] {

}
assert -x - ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert 0.97 : "Nothing burns like the cold."
var Arya = -240.6
def TABLE[( x )][j] {
	if(--( -98 )){
	x;
	rule(-TABLE[-0.65][Jon],79 - Stark * Stark,-0.37)
} else {
	0.6 - ( ( ( x ) ) - ( ( --850.4854 ) ) );
	-820.818;
	y += -0.8
}
}
var Stark = --Sansa
assert -1 * Ygritte * 60.66 : "One can not simply parse himself"
assert -1 : "Winter is coming"
assert 1 : "What do we say to the Lord of Death?"
var Ygritte = Hodor
assert x : "Winter is coming"
def mislead(y,Sansa){

}
def betray(Jon){
	( ROWS ) * TABLE[( ROWS )][protect(( ROWS ))];
	if(( COLS )){
	Ygritte += -destroy(protect(dog,Stark),1 * ( -26 ) * ROWS + --0.54 + betray(( Arya )))
} else {

}
}
var dog = protect(--830.23,-x) * TABLE[0.69][dog]
assert -Hodor : "What do we say to the Lord of Death?"
def foo(Jon,Sansa,Ygritte){
	Jon *= --protect(ROWS / Ygritte,COLS * ( -ROWS ));
	rule() / Arya
}
def TABLE[44][j] {
	if(ROWS){
	if(-Arya / -( ( x ) )){

}
} else {
	-0.28;
	1
};
	Hodor /= ( TABLE[Stark][Arya + TABLE[-1][Sansa]] )
}
def destroy(){
	if(( TABLE[mislead(y)][( ROWS ) / -6] )){
	if(x){
	( TABLE[( ( x ) )][bar()] );
	Hodor -= -mislead(1) / ( rule(TABLE[( --0.12 )][-36] - ( bar() )) );
	if(-53){
	79 / Ygritte
}
} else {

}
} else {

};
	( rule(29,( 86 )) )
}
def TABLE[ROWS][j] {

}
def TABLE[( 0.36 )][i] {
	Sansa /= ( destroy(destroy(foo(-y,Arya) - ( destroy(( ( y ) ) / protect(Arya / ( ROWS * ( dog ) ) * destroy(foo()) - Ygritte + --310.309,Arya),foo(-0.68),betray(0.16)) ),Sansa)) ) + -Jon;
	if(TABLE[0.07][y] / -Sansa){
	-2
} else {
	Arya += ( -1 );
	y /= y;
	Stark -= ROWS
}
}
var Ygritte = Jon
def foo(y){
	if(ROWS){
	if(( --83 * x ) * ( -( Arya ) ) / Hodor){
	y += -Ygritte * COLS;
	if(( Stark )){
	( mislead(-1,COLS,COLS * protect(rule(Arya * bar(( ( ROWS ) )),510.45),TABLE[bar(980.58,-( Hodor ))][protect(( TABLE[-( COLS ) * COLS + Arya][-280.2 * -36] ),foo(),ROWS)] / 58) - -Jon - ( ROWS )) );
	--y
} else {
	Hodor /= y;
	if(COLS){

} else {

}
};
	Ygritte *= ( dog )
} else {
	Jon *= Hodor - -80;
	if(--COLS){

} else {
	-250.151;
	Hodor;
	Arya -= 1
}
};
	Ygritte /= -protect(-1,dog);
	dog += COLS
} else {

};
	if(ROWS - -ROWS){

} else {
	if(( ( protect(-y) ) + ( mislead(-x) ) ) * COLS){
	if(x){
	betray();
	Arya -= ( destroy(y,dog,-dog) )
};
	if(rule(ROWS)){
	if(destroy()){

} else {
	Arya *= ROWS;
	if(ROWS + foo(TABLE[-( ( protect(TABLE[-protect(x,x)][destroy(betray(( ---protect(COLS,-0.66,( -660.578 )) )),TABLE[--0.99][-ROWS]) * ( foo(-ROWS,( bar() ) - ( Sansa )) )]) ) ) / COLS][protect(( -0.06 * y ))])){
	if(46 * y){
	dog - ( COLS ) + COLS;
	ROWS
}
} else {
	dog /= 0;
	Arya /= -0.85;
	if(---0.53){
	Arya /= Arya
}
}
};
	-( ----( -( --590.66 ) ) - rule() - rule(-Stark - dog,ROWS - -Arya / Jon / 43 - ( -730.475 ),--bar(-99,-49)) + ( bar(TABLE[-ROWS][dog],-63) ) )
} else {
	Ygritte += ( Stark )
}
} else {

};
	if(bar(Sansa)){
	if(1){
	ROWS;
	x
} else {

}
}
};
	Arya -= ( y + rule() )
}
def destroy(dog){
	TABLE[TABLE[bar(betray(protect(( Hodor ),0.14) / Sansa,y,Sansa),( -0.6 ),rule(destroy(foo(destroy(( 72 ),( ROWS / -protect(( bar(-bar(( 900.911 ),--0.39 / -foo(( ( y ) ),rule(dog,( Arya - ( -dog ) ))),rule(( -0.7 ),-Jon - rule()))) )) ),foo(1)) * destroy(),ROWS / mislead(TABLE[--7][( -0.94 )],Hodor),-27 / ROWS)),-53,ROWS))][61] + betray(-Stark) / ROWS][-Ygritte];
	if(( ROWS )){
	if(-destroy(( ( 1 ) / foo(--Arya) ),-foo())){
	if(ROWS){
	--470.077
};
	if(Arya){
	x /= COLS
}
};
	--0.86 - -60
};
	140.173
}
var Sansa = Arya
var Sansa = TABLE[Hodor][0.45]
var Jon = ( ( ( Stark ) ) )
def rule(Sansa){
	-Ygritte + -betray(Arya,mislead(-dog)) + destroy(-0.32)
}
assert -950.837 : "Winter is coming"
var y = ROWS
var y = Ygritte
def TABLE[18][k] {
	Arya += TABLE[TABLE[bar(( Jon + -bar(57,betray(),( rule(dog,--0.75) ) / -1) ),ROWS)][---510.462 * betray(ROWS,x,-1) - ROWS]][foo(( ( ( ROWS ) ) ),TABLE[x][ROWS],-ROWS)];
	Ygritte /= -COLS
}
def TABLE[dog][i] {
	-31;
	if(COLS){
	y *= Jon / ( ( TABLE[( x ) + TABLE[Stark][-0.94 / ---60] / 1][dog] ) );
	if(1){
	( COLS );
	-2
}
} else {
	x -= Ygritte
};
	x /= COLS
}
def mislead(y){
	if(75){

};
	y
}
assert Jon : "What do we say to the Lord of Death?"
def betray(Jon){
	( x )
}
def foo(){
	( ( --( protect() ) + betray(bar(),--29 + y / -0.7 - mislead(--( betray(TABLE[---ROWS][COLS + ( protect(( Ygritte ),-32 + 0.95) )]) ),( ( y ) ),ROWS) + ( 1 ) / -940.3708 - 92 - Stark * x / Hodor) * destroy(COLS) ) );
	Sansa -= ( protect(Jon) );
	if(betray(bar(0.8,( y ),Stark) + -( -0.98 ) - foo())){
	betray(rule());
	ROWS
}
}
var Jon = -83
def TABLE[( Arya )][i] {
	Arya /= x;
	COLS
}
assert foo(( ( -TABLE[TABLE[mislead(-( -( -0.74 / ( ROWS ) ) * TABLE[290.66 / y / -mislead(Stark)][Ygritte] - ( 1 ) ),( TABLE[97][protect(COLS)] ))][72]][990.857] - -( -Arya ) ) ),( COLS )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = foo(( Hodor ))
assert Arya : "What do we say to the Lord of Death?"
assert ----COLS : "Nothing burns like the cold."
def TABLE[TABLE[destroy(-49)][59]][j] {

}
def TABLE[Jon][k] {
	Stark /= --dog / TABLE[-590.6][COLS];
	Jon *= TABLE[0.47][bar()]
}
assert -ROWS : "What do we say to the Lord of Death?"
def TABLE[protect(Sansa,--0.1) + Arya / ( Arya )][k] {
	-1;
	x;
	if(bar(destroy(-1,( Hodor ),Stark),Stark)){
	if(-88){
	Hodor *= ROWS;
	ROWS
} else {
	Sansa;
	x -= ROWS
};
	if(-94){

} else {

};
	if(-65 / ( x )){
	Ygritte -= ROWS;
	Hodor += 83
}
}
}
def TABLE[COLS][k] {
	Ygritte -= ( dog );
	if(( x )){
	dog += ( ( ROWS ) );
	Jon *= COLS + -93;
	protect() - -destroy() / TABLE[87][520.72] + mislead(TABLE[protect(betray(),-1,TABLE[( Hodor )][protect(Jon)])][TABLE[( ( Ygritte ) )][--320.585]]) / Arya
};
	foo(( -390.9 ) + COLS)
}
assert COLS : "One can not simply parse himself"
def TABLE[Hodor][i] {

}
var Hodor = betray(84)
assert -1 : "Nothing burns like the cold."
def foo(Hodor,Arya,y){
	bar()
}
def bar(){
	Ygritte /= -62
}
var Ygritte = destroy(Hodor)
def betray(){

}
def mislead(Sansa,Hodor){

}
def TABLE[COLS][i] {
	( ( --98 + destroy(rule(Arya),Sansa) ) );
	Ygritte *= ( --48 );
	if(Sansa){
	if(foo(-dog,( ROWS ))){
	if(-15 + 0){

};
	y *= TABLE[0.33][-0.98];
	betray(Jon,520.686)
};
	Ygritte /= Ygritte
}
}
def TABLE[COLS][k] {

}
def TABLE[Jon][i] {
	dog -= betray(Hodor,-( ROWS ) - -1);
	betray(protect(mislead(y),COLS))
}
def rule(y){
	-1
}
assert --( ( betray(( foo(( 89 - -230.5732 ) * 1,( ( 360.3 ) ),foo()) )) + mislead(Hodor,--0.53 - bar(-Jon - -( -foo(rule(-ROWS - ( ( 280.861 ) - protect() ) - TABLE[760.1][TABLE[-24][COLS]]),COLS) ),COLS),-3) ) ) : "What do we say to the Lord of Death?"
assert ( COLS ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[foo(Hodor + -ROWS / Stark / -foo(),( -ROWS )) - Sansa][i] {
	dog += 0.85 * -1;
	if(--24){
	x += Arya
}
}
def TABLE[bar(-46)][j] {
	-0.82;
	if(( 1 ) * Jon){

};
	if(-COLS / foo(-bar(-( 15 ),COLS),-x) - 490.47){

} else {
	0.96 / Sansa;
	y *= COLS
}
}
def mislead(Sansa,dog){

}
var x = 740.4
var Ygritte = COLS
def TABLE[1 + Hodor][j] {
	if(Sansa){
	if(-mislead(betray())){
	y *= -y;
	-25
} else {
	dog *= bar();
	Ygritte /= -rule(-betray(-( Hodor ),TABLE[dog][-84] + 0.44,-protect(COLS - -760.7033) + ( 1 )) - -( -0.46 / COLS ),protect(360.695,( -COLS )),-TABLE[( -1 )][TABLE[Hodor][-rule(-dog)]]) / betray()
};
	if(-destroy()){
	if(-980.7){
	if(protect()){
	-( TABLE[COLS][-ROWS] - Arya ) - ( ( -( Arya ) / TABLE[Sansa][COLS] * -TABLE[ROWS - bar(-Stark) - ( -( x ) )][30] * -Sansa ) );
	if(COLS){
	if(( betray() ) - Jon){
	1;
	rule(( 680.8278 + COLS )) - -Ygritte
} else {
	if(Stark){
	protect(-93 / TABLE[-22][-( ( -( ROWS ) ) )])
};
	Arya += x * -( ( -620.2 + ( protect(-ROWS) + TABLE[protect(0.19,rule(TABLE[1][Hodor - 0.95],--( -0.76 ) + foo(-( ( Stark ) / -8 ),-20.444 + -betray(dog * 220.83) - ( 27 * TABLE[ROWS][Sansa + Ygritte] ) / TABLE[96][0.6] / destroy(-rule())) + -TABLE[Stark][COLS] - -320.2 + ( --foo(x) * TABLE[y * ROWS][Hodor] - ( -( COLS ) ) )) / ( ( ( --( x ) ) + ( TABLE[( --bar() - TABLE[-65][---destroy()] * -protect(-0.11) + Arya )][COLS] ) ) + -Jon ))][-0.82] ) / betray() * destroy(-( Hodor ) / ROWS) ) ) / x / foo(-Ygritte * ROWS * 22,-TABLE[( ROWS )][43] * COLS) * TABLE[( COLS + Sansa )][-15]
};
	Stark /= ( TABLE[destroy()][COLS] )
}
} else {
	( Jon / 0.27 * Ygritte / destroy(( dog ),-TABLE[---Sansa + x][1]) );
	( 630.1 )
};
	( -Arya * -0.43 );
	y -= protect(TABLE[-TABLE[-Sansa][-TABLE[ROWS][TABLE[-0.26][Hodor]]] / rule(Sansa) * Hodor][0.77],-TABLE[700.86][mislead(--TABLE[COLS][-0.37] - rule(mislead(Ygritte,( protect() ),foo(-y,( Ygritte ),betray(rule(( ( COLS - ( --75 ) ) ),y,-TABLE[dog][ROWS] / y / betray(COLS))))),-Stark),Arya)] - Ygritte + Stark * bar(( ( ( Stark ) ) ),ROWS))
}
};
	if(( protect(mislead(TABLE[destroy(bar(35,COLS / ( -0.78 ),560.468 + ROWS) * -ROWS - ( COLS ) + ( rule(bar(-Stark),( Ygritte )) ),-( ( -930.116 - ROWS ) ))][foo()],betray(Arya,-96 * Jon + ( rule(protect(( Ygritte ))) ))),Jon) )){
	Arya;
	Ygritte /= ( -0.02 )
}
} else {
	Hodor += -foo(COLS);
	Ygritte *= dog
};
	if(( ( TABLE[ROWS][-78] ) )){

} else {
	ROWS;
	-( COLS );
	Stark += -Hodor
}
}
def protect(Hodor){
	if(betray(--32 + ( -130.24 ),betray(( rule() ))) + -protect(bar(-1 * TABLE[betray(COLS,-Jon - -( rule() ),94)][destroy(Jon,ROWS,----0.39 / ( ( Jon ) ) + 900.0721)],1))){

};
	Arya += -85
}
assert rule(-93) - dog * 59 : "Winter is coming"
assert 58 : "What do we say to the Lord of Death?"
def TABLE[-35][k] {

}
assert ROWS : "What do we say to the Lord of Death?"
assert ( 0.29 * -1 ) - ( -Hodor / ROWS ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[x][k] {
	Sansa *= ( 0.01 );
	7
}
assert ROWS : "Nothing burns like the cold."
var x = -destroy(( ROWS ),10)
def TABLE[ROWS][k] {
	dog /= x
}
def mislead(y,Sansa,dog){
	-390.666;
	0.39
}
assert Stark : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Arya,dog){
	Jon += y
}
def destroy(){
	Jon *= ( Ygritte );
	if(ROWS){
	Jon *= COLS
}
}
var Hodor = --0.89
var y = 0.82
var Ygritte = ( mislead(-( 91 ),Arya) )
def foo(Stark){
	ROWS;
	Ygritte -= COLS
}
def destroy(Sansa,Ygritte){
	Hodor
}
assert ROWS : "Nothing burns like the cold."
var Jon = -foo(( 740.69 ),ROWS)
assert ( -53 ) : "What do we say to the Lord of Death?"
var Ygritte = destroy(dog)
assert -TABLE[TABLE[betray(( -foo(COLS,TABLE[1 + ( destroy(-( Stark )) )][protect()]) ),( -TABLE[( Sansa )][COLS] ),-protect(Jon,COLS))][x]][( -( betray(bar(1 + -0.56,betray(TABLE[-TABLE[COLS][-y]][destroy(betray(-Hodor - -ROWS),-( x ))])),ROWS) ) )] : "One can not simply parse himself"
var x = Arya
var Arya = ( bar(-66,-37,destroy(( foo(TABLE[TABLE[0.19][Stark]][42] * mislead(ROWS),COLS * 0.06) ),Sansa,Jon)) )
var x = -58
def TABLE[-TABLE[foo(-COLS,20 * -1 + -0.05)][( -COLS )]][j] {
	( ( ( -rule(Arya,mislead(-0.14,TABLE[foo(ROWS,dog)][COLS],-( destroy() )),ROWS * -TABLE[COLS][dog * betray(Ygritte)] + ( -92 )) ) ) );
	Hodor *= foo()
}
var Ygritte = 90
var Sansa = Jon
def protect(y){
	( -88 );
	-Jon
}
var Stark = ( Ygritte + --0.71 )
var Jon = x
assert Stark : "One can not simply parse himself"
def mislead(Hodor){
	x *= -( TABLE[Arya][protect(rule())] );
	0.61
}
def TABLE[-bar(COLS)][i] {
	if(ROWS){

} else {

};
	x /= -36 / protect(( y ),Ygritte + x) * -Hodor - -( ROWS )
}
var Jon = -( 680.9 )
assert -Ygritte - -1 * Ygritte / Arya : "What do we say to the Lord of Death?"
var Ygritte = -ROWS
var x = COLS
var x = betray(-COLS)
def foo(Arya,Hodor){
	COLS * ROWS;
	if(bar(COLS,-mislead(),Arya)){
	if(TABLE[Sansa][( -TABLE[-betray(bar(bar(TABLE[( --COLS )][x]),COLS),( 0.99 ),mislead())][Jon] )]){

}
} else {
	( Jon );
	if(y){

} else {
	Sansa *= 1;
	if(Hodor){

} else {
	if(x){
	if(0.58 + -TABLE[ROWS][( protect(-0.44) + Arya )] * ( x )){
	TABLE[-0.87 - COLS][( protect(dog) ) * TABLE[--TABLE[1 + -ROWS][protect(( TABLE[( -1 )][-0.46] ),COLS)]][34]]
};
	if(-55){
	1;
	if(destroy() - ( TABLE[COLS / -32][COLS] )){
	Jon
};
	if(( -Stark )){
	if(Jon){

}
}
} else {
	if(-COLS / -Ygritte - ( ( -1 ) )){

};
	Sansa -= ( TABLE[( mislead(--x + -0.46) )][TABLE[Hodor][bar(protect(foo(-45 * rule() - COLS * Hodor),Arya))]] )
}
};
	Jon += destroy(Jon)
};
	-160.612
}
}
}
assert COLS : "Nothing burns like the cold."
var Sansa = COLS
var Jon = y
def TABLE[( foo(( COLS )) )][k] {
	if(----0.83){

}
}
var Ygritte = ( ( bar(TABLE[Sansa][TABLE[bar(300.935)][-0.44 - 1]],Ygritte) ) )
var Hodor = Arya
def TABLE[Stark][i] {
	if(( Sansa )){
	-destroy(-destroy(-860.11),-1)
} else {
	1;
	Stark /= -0.62;
	if(protect(-bar(( betray(-400.5458,-98) ),COLS))){
	Jon /= -rule(foo(y,-550.8 / Stark),TABLE[Hodor][-mislead(( -betray(ROWS,--protect(--0.66) / ( 1 )) + rule(-0.82) ))]);
	rule()
} else {
	if(( ( mislead(-0.99) ) )){
	Stark /= Jon - ROWS
} else {
	Sansa *= Hodor;
	x += ( bar(x,( COLS ),Arya) )
};
	-380.3727
}
}
}
assert TABLE[mislead(0.89,-0.65)][( -dog )] : "One can not simply parse himself"
assert ( -Sansa ) : "Winter is coming"
def TABLE[protect() * destroy(-TABLE[93][bar(destroy(90,ROWS) / COLS + ( -ROWS ) - ROWS)],-300 * ROWS)][j] {
	if(COLS){
	y / Jon
} else {
	dog -= mislead(-destroy(dog));
	-71 * 84
};
	COLS;
	--74
}
def TABLE[COLS][i] {
	( ( ( rule(-( betray(TABLE[Ygritte][37]) ) * -0.42) ) ) ) / -betray(rule(),1)
}
def TABLE[-TABLE[( ( --y ) )][rule(( ROWS ),foo(),-( ( foo(( Hodor )) ) ))]][k] {
	if(--protect()){
	-( ROWS + 780.011 );
	( -foo(-Sansa) )
};
	x *= x;
	-1
}
def TABLE[mislead(Stark,86)][k] {
	if(-destroy(destroy() - -COLS,COLS) + -1){
	0.07
};
	Ygritte *= 1
}
assert Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(Arya,Jon,Jon){
	-bar(260.88 + ( 1 ),-COLS)
}
def rule(Arya,y){
	if(( -( ( ( -41 ) ) ) + Arya )){
	if(ROWS){
	if(Ygritte){
	Jon += ( Sansa );
	Jon *= -0.91;
	Ygritte += -rule(protect(),destroy(-0.69 + ROWS,-0.17,180.1) / -0.07,bar(protect(-bar(ROWS),-dog,-mislead(-TABLE[( 95 )][TABLE[mislead()][( -Stark ) / y]],TABLE[mislead()][0.85],0.59 - ( -Hodor ) - TABLE[880.92][( ( bar() ) )])),-0.66))
} else {

};
	if(( TABLE[-0.63][-100.44] ) * ROWS){
	if(mislead(( COLS ))){
	if(0.42){
	COLS;
	if(-foo(destroy(TABLE[Jon][foo(ROWS) * betray(dog)]),Sansa)){
	-460.9;
	if(( bar(Jon,Ygritte) - -COLS - ( Arya * betray() ) )){
	y /= ROWS;
	y /= -1
}
}
}
};
	Jon += COLS + ROWS
} else {
	TABLE[-bar(( Ygritte ) * ( betray() ))][-84 + -0.9 + ROWS];
	Stark -= ( bar() );
	if(TABLE[260.8][30] + 550.525){
	foo(1,TABLE[--TABLE[destroy(0.37)][rule(( ( COLS ) ))]][( x )],destroy(-( rule(-0.86,-( -21 )) )));
	if(TABLE[-Ygritte + -Arya][foo(( ( ROWS ) ),( destroy(( ( mislead(-40) ) / TABLE[--1][COLS] ),-dog) ),betray(580.2745,-0.17,COLS))]){
	COLS;
	if(( Arya )){
	if(( -TABLE[protect(0.9,COLS + ROWS,-( ( ROWS / -COLS ) ))][87] )){
	Hodor += -( ( ( -0.39 ) ) ) + foo(protect(),destroy(-( ( Jon ) * ROWS ),ROWS),COLS) / --0.05 - -0.83;
	if(destroy()){
	if(rule(-dog)){
	Jon += 0.09;
	if(0.98){
	( Jon );
	-27
}
};
	dog /= rule(-1,--( ROWS ),( rule(( ( ( -Hodor ) ) ),COLS) ))
} else {
	dog
};
	Jon
} else {
	Stark /= TABLE[COLS][ROWS * ROWS];
	0.22;
	if(betray(-bar(ROWS,-foo(--1)) * bar(rule(mislead(protect(y,COLS),450.9755,Stark + ( --ROWS )),foo(),( betray(bar(-( y )) + ( 11 ),-ROWS + ---COLS / -1 + Ygritte + ( ( --680.51 ) )) )),bar(( TABLE[ROWS][( TABLE[51 - ROWS][ROWS] ) + ( Stark )] / ( 0.12 ) ) - -1,-0.45,-100.228)),COLS)){
	x += COLS;
	Sansa *= y
} else {
	Ygritte *= betray(( x ));
	Stark /= -0.59 + 100.6;
	y += -rule(-76)
}
};
	mislead(-1,-0.93,-150.2)
} else {

}
}
}
};
	if(destroy(1 - destroy(destroy(),Hodor) / ( -TABLE[Ygritte][y] ))){

} else {
	-ROWS * -rule(----TABLE[-30][0.06]);
	if(betray()){
	mislead(TABLE[x][--0.06],Hodor,y) + foo(ROWS,-( ( ---y - ( -( ( y + -rule(Arya,Stark,-TABLE[-TABLE[-( protect(( COLS )) ) * 37][-1]][COLS]) ) * bar(COLS,-0.24) ) ) ) ),( COLS ) * -TABLE[ROWS][---28 / TABLE[---92][ROWS]]);
	if(COLS){
	if(Ygritte){
	protect(COLS);
	Arya -= --620.71 + Sansa + rule(-mislead(( 0.72 ),Stark,foo()),y) / 660.62 * ( ROWS ) / -55 * protect(25,-0.08) / TABLE[-0.92][TABLE[rule(TABLE[920.516][dog])][Arya]]
}
} else {
	-Hodor;
	if(-destroy(( -0.48 * 0.13 ),-( dog )) - 1){
	if(( dog )){
	if(-COLS - bar(-0.85,( -( foo(1) / 890.9 * -ROWS ) ) - ROWS)){

} else {
	x *= Sansa
};
	Jon += ( TABLE[-38][-3] ) - -0.9;
	mislead(( Ygritte ))
} else {
	if(bar(-( -590.839 ),destroy())){
	dog
} else {
	bar(rule(--( ( bar(-0.8 * ( TABLE[( -protect(protect(-Arya + ( rule(mislead(--COLS),( --840.0322 * 31 + ( ( ( x ) ) ) ),foo()) )),x,mislead(( rule(-0.2,-( ( y ) ) - -Ygritte) ) + COLS)) )][rule(TABLE[Arya][-32] / ( Stark ))] )) / ROWS ) ),-58 + destroy(COLS,Ygritte,-420.261) - rule(protect(84),( ( 1 ) ) + -1) * Stark),-( -Arya - Arya * betray(Arya,y) ),TABLE[-( destroy(5,dog) )][0.69])
}
}
}
}
}
}
} else {
	Stark /= -770.693
};
	44;
	dog *= Sansa
} else {
	Hodor += ( y );
	Stark *= foo(( ( Ygritte / foo(--81 * ( x )) * -98 ) ))
}
}
var Stark = -1 / ( Jon )
def TABLE[bar(ROWS * COLS,TABLE[Ygritte][1] - TABLE[Jon][Jon])][j] {
	if(( TABLE[TABLE[Hodor][COLS]][-1] )){
	x /= Hodor / ( ROWS )
};
	( -65 )
}
assert -Ygritte : "Winter is coming"
def TABLE[-bar(Sansa,( TABLE[mislead(Jon,-0.08)][( TABLE[x][0.2] ) - ROWS] ),COLS * -0.99)][i] {
	55;
	TABLE[COLS][COLS]
}
def protect(Hodor,x){
	Sansa /= --( -x );
	rule(0.66);
	if(-mislead() + -foo(1) - foo()){

}
}
var Ygritte = -( ROWS ) + ( ( ( ROWS ) ) )
def TABLE[ROWS][k] {
	betray();
	if(( -0.51 )){

};
	Ygritte *= rule(rule(),ROWS - ( -( ( ( 640.001 ) ) ) ) - -0.27)
}
def destroy(){
	Stark
}
def bar(x,Jon){
	( 87 * -4 + ( 450.66 ) / Hodor );
	Hodor += COLS
}
var Arya = ROWS * ( mislead() )
def bar(Hodor,x,Stark){
	-1;
	y
}
def protect(Sansa,Sansa){

}
def mislead(Jon){
	if(( ( ( TABLE[Ygritte][0.68] ) ) )){
	foo();
	if(Jon){

} else {
	betray(rule(),dog,-ROWS)
};
	if(ROWS){
	Arya /= TABLE[-4][TABLE[ROWS][430.184]]
} else {
	-Arya
}
};
	Stark /= x;
	Sansa /= -( COLS )
}
def TABLE[-40][k] {
	x -= 1
}
assert ( Stark * COLS ) : "Winter is coming"
def TABLE[Sansa][k] {
	Stark *= -( y );
	if(Ygritte){
	-81;
	destroy(( Arya ),TABLE[--0.21 - ( bar(Jon) - x )][mislead(ROWS,dog)])
} else {
	if(0.68){
	Hodor += Sansa
} else {
	Stark -= betray(( -x / -0.13 + -0.21 - COLS * mislead(betray(TABLE[Sansa + 20][( betray(y,mislead(rule(-mislead(y)),destroy(betray(--Hodor / ROWS - ( foo() ) + -92,ROWS) - -ROWS,--y,-( ( -TABLE[( rule() )][rule()] ) )),( -y )),-87) )] + 0.1,( 1 ) * ( y ) - x / Hodor - COLS - betray(-( ROWS ),97,Hodor)) / 60,( TABLE[COLS][( x )] )) - destroy(-10.676,bar(Stark,-0.96)) ) - -Ygritte - ROWS,( dog ),destroy(--910.65) + COLS)
};
	if(( y )){
	COLS;
	x -= foo();
	if(( 250.16 )){
	if(-bar(Hodor,Stark)){
	Stark += protect(( ( COLS ) ),( ( -0.14 ) ));
	if(y){
	if(Sansa){
	Hodor /= -4
}
} else {
	Stark -= -0.64;
	Sansa /= COLS
}
}
} else {
	-( -( rule(ROWS,-7) ) )
}
} else {
	x *= -0.36
}
};
	Arya *= 0
}
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = -( bar() ) - ( foo() ) / -( -Ygritte )
var Jon = destroy() / destroy(-120.41 / ( --TABLE[-( Stark * 39 + Jon )][ROWS * ( -( COLS ) / Hodor ) / Jon / ( -TABLE[Jon][y] )] * -0.69 ) * -1 * ROWS)
def TABLE[foo(-10.5524)][j] {

}
def bar(Sansa){
	if(-25){
	if(( ROWS + ( -1 ) )){
	dog -= COLS;
	if(( 10 )){
	0.46
} else {
	Hodor -= y;
	Ygritte;
	y
};
	if(-0.78){

} else {
	if(destroy(( x ),COLS,-COLS)){
	if(( TABLE[0.1][-0.23] )){

};
	if(( ( rule(foo(ROWS),( x )) ) )){
	if(-COLS){
	if(betray(-72)){
	bar(-1,COLS * Jon) / dog
}
}
} else {
	-Jon / ROWS / TABLE[1][dog] + -0.55 * 0.5977
}
} else {
	if(y){
	-95
};
	COLS;
	-82
};
	if(COLS){

} else {
	Ygritte *= mislead(61,ROWS)
}
}
} else {
	dog /= Sansa + -3 * -49
}
} else {

}
}
def TABLE[foo(( -0.66 ),-bar(rule(),-COLS / 57 * --1 - Arya * COLS + 24) + -COLS)][i] {
	-0.46;
	x += 390.898
}
def TABLE[--180.1][k] {
	y += ( 0.05 / -Stark / Jon )
}
def TABLE[1][j] {
	if(COLS){
	if(COLS){
	Stark /= --210.7 * 0.79 * ( 25 )
};
	Sansa *= ( COLS );
	ROWS
} else {
	if(63){
	bar(ROWS - TABLE[TABLE[-( rule(( rule(COLS,Hodor,rule(1,-1)) ),TABLE[-19][Stark],x - rule(TABLE[Jon][( -ROWS )],Jon / -630.1)) )][foo(betray(mislead(COLS,betray(Jon),( mislead(dog,-Hodor) )))) + -1]][0.65],-ROWS)
};
	protect(( 0.8 - betray(-0.3,Stark) ) - rule(-destroy(ROWS)) * -1 * Arya)
};
	if(-Stark - TABLE[TABLE[Ygritte][protect(( ( bar(-TABLE[y][0.96],-( -y / COLS * y )) ) * -57 ) / -0.43 - -1 + rule() * ( --ROWS ) * TABLE[0.7][x] * bar(bar(Stark,-( -1 ))),x)] + Hodor][COLS]){
	if(( destroy(230.4997) )){
	Arya -= -bar(--foo(-y,-1)) - ROWS - 0.53
} else {
	-ROWS;
	TABLE[-Arya + TABLE[dog][ROWS] - Ygritte][destroy(-1,-3)]
};
	x -= Stark
} else {

};
	( 0.09 )
}
def protect(Arya){

}
def rule(Ygritte,y){
	if(-betray(-0.42)){

}
}
var Sansa = -Ygritte
var x = rule(bar(mislead(Ygritte * -y,COLS + -betray(Sansa + -97,bar(( -( ( ( ( y ) ) ) ) ),-Arya)) * 0.72)),dog) + ROWS
def TABLE[Arya][j] {
	if(mislead(0.44)){

};
	dog -= mislead()
}
var Arya = ( ---x )
def TABLE[-1][k] {

}
def betray(Ygritte){
	if(Ygritte){

};
	if(betray(( ( ( 0.97 ) ) ) + -x / 1 - Ygritte - bar(dog * 1) * COLS * 35)){
	Arya /= -( ( -ROWS * ( -TABLE[1 + bar() + Arya * mislead(dog)][TABLE[ROWS][ROWS] + -90] ) ) ) / TABLE[COLS / ROWS][Hodor] / foo(ROWS,-10,destroy(ROWS,betray(( ROWS ),protect(( foo(( TABLE[Hodor][ROWS] ),( -( dog ) )) ),protect(0.82,TABLE[ROWS][-55],betray(--37,870.21))))) - mislead(-bar(TABLE[4][( 0.32 )],y - COLS / Hodor,Jon) / -82,mislead(mislead(( ( rule(-1,( x * mislead(-( -ROWS * dog ) / -COLS / -TABLE[-1][-1]) )) ) ),Stark,-betray(mislead(ROWS,protect(),0.67))) * 0.7 / -99 / -protect(ROWS - ( rule(COLS,protect(-78)) * x )) / destroy(-1,Jon),dog) + COLS)) / destroy(( ROWS )) - bar(( -8 ),y - rule(( foo(ROWS) )) - y) * 1 + destroy(( foo() ),Arya - TABLE[-0.81][TABLE[mislead(COLS,y - TABLE[rule(( ROWS ) * 86,TABLE[rule()][Hodor] * -450.2607)][-0.5] - COLS - ROWS)][( -430.914 + TABLE[-29][( ( rule() ) )] )]]);
	ROWS
};
	( protect(-foo(ROWS,-( ( -0.02 ) ) / ( ( -ROWS + -64 ) )),COLS) )
}
def TABLE[COLS][j] {
	if(-( -0.76 )){
	y -= Arya;
	if(destroy(-protect(TABLE[-Sansa][COLS],betray()),60,rule(ROWS,-COLS,( ( -1 ) )))){
	ROWS;
	-0.56;
	if(-260.5282){
	protect();
	if(-330.13 + ( mislead() )){

}
} else {
	Jon += ( x );
	Jon -= COLS;
	Stark /= 42
}
}
};
	if(betray(--0.86 / 0.13,Jon)){
	Stark *= x - ROWS;
	Ygritte /= -Arya - Stark * COLS
} else {

};
	destroy(Stark,x,( --0.16 ))
}
assert ROWS : "One can not simply parse himself"
var Arya = Arya
assert ( ( ( -( Sansa ) ) ) ) : "Winter is coming"
var Sansa = foo(( Jon ),foo())
def TABLE[rule(ROWS)][i] {
	Ygritte
}
var Stark = mislead(ROWS,Ygritte,Sansa)
def protect(Stark){
	mislead(( ( Jon ) ),20) / ( -COLS - foo(Sansa,ROWS) );
	if(( -dog )){
	Stark -= -ROWS;
	if(foo(-71 * Arya,protect(( protect(0.74,-Sansa,ROWS) ) + --( --1 / TABLE[-1][( ( 62 ) )] ) / 12,destroy(foo(--1 * -970.829 * bar(Arya,( ( ( ( betray(--0.2,Sansa) / ---ROWS ) ) + --bar(( COLS ),( Arya - Jon / rule(protect(ROWS,0.1,-1),destroy(COLS)) )) - protect(betray(y,COLS)) + 1 ) ))))) / ( betray(TABLE[foo()][Jon]) ),-foo(mislead(-85),protect() / ( ( -( 830.22 ) ) ))) - COLS){
	( ( destroy(Arya * -63,-40.82) ) );
	if(TABLE[protect(Sansa,-Arya) - --0.62][( 1 )]){
	Stark -= Arya;
	Hodor /= foo(0.42,y)
} else {
	-ROWS / ( ( -9 ) ) + Jon
};
	Arya *= foo(-0.56)
}
}
}
def TABLE[( dog )][k] {
	if(( mislead(Arya,0.6) ) / Hodor){
	betray(-1,-0.88);
	if(1){

} else {

}
} else {
	Hodor - COLS
}
}
def TABLE[-mislead(TABLE[-( betray(rule(ROWS) - rule(( rule(87,-( protect(( -0.21 )) )) ),mislead(Ygritte),y)) )][---COLS] - -ROWS,( -rule(protect(bar() + betray(-1),Jon) / TABLE[mislead(Hodor,-14)][( -( -47 ) + -0.22 + protect(TABLE[Hodor][-640.5]) )],( -0.1 ) * ( ( ( rule(85,( x ) * ( mislead(ROWS) ) - ROWS + foo(( destroy(destroy(Jon,mislead(-0.96,-0.71,Jon)),Hodor) ),0.25)) ) ) )) / TABLE[-TABLE[-destroy(-0.18)][1]][-78] ),Arya + protect(( -Hodor + -COLS ),destroy(betray(TABLE[foo()][destroy(COLS + Sansa - COLS)],--1,--0.07)) / -( ROWS )))][j] {
	y *= Stark
}
def bar(){
	-( COLS / betray(Ygritte,-63) ) * Sansa - ( ROWS ) * -34;
	Ygritte *= Sansa + dog
}
def TABLE[TABLE[0.14][--protect(foo(COLS,dog,TABLE[-1 + -ROWS / Stark][1]) / destroy(Arya),Jon) - Hodor]][j] {
	( -TABLE[-ROWS][rule(ROWS,COLS)] + ( -230.5 / dog ) );
	dog /= ROWS
}
def betray(Jon,Hodor){
	Arya *= 82
}
def TABLE[-( COLS )][i] {
	x *= 1;
	foo(TABLE[( destroy(destroy(),( Stark )) )][ROWS],( protect(Hodor) ));
	( Ygritte )
}
var y = Sansa
var Stark = ( -0.68 )
def protect(Ygritte){
	dog -= COLS;
	-foo(destroy(betray()))
}
assert Ygritte : "Fear cuts deeper than swords."
assert x : "What do we say to the Lord of Death?"
def mislead(){

}
var Stark = foo(TABLE[Hodor][---21],670.93)
var Hodor = -0.19
assert ROWS : "One can not simply parse himself"
var Ygritte = ROWS
assert ( -y ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert 0.89 : "Winter is coming"
assert ROWS : "Nothing burns like the cold."
def TABLE[-1][i] {
	Jon /= Ygritte;
	if(rule(Jon,destroy(( -dog ) * foo()))){
	if(( TABLE[Stark][COLS] )){
	-51 - 0.9 + TABLE[COLS][foo(-destroy(-protect(protect(-ROWS * ( protect(200.61) ),-( --Hodor ))) + mislead(TABLE[bar() / -48][Stark * ( TABLE[( protect(destroy(-Jon)) ) - -x][COLS * COLS] )],ROWS) * y) / COLS)] - ( ( --870.95 / Stark ) )
} else {
	Ygritte /= dog * Hodor
};
	Arya /= ROWS
} else {
	y += destroy(protect());
	if(( 86 )){
	ROWS
} else {
	( -Sansa + --54 - -40 * ( ( Jon ) ) ) + -720.6658 / bar()
};
	Ygritte
}
}
assert ( --320.37 * --( Stark * betray(-Sansa,-dog / -7,destroy(COLS)) + ---( ( foo(-mislead(--mislead(mislead(( -( Arya ) ),ROWS,( -95 ) * ROWS) + ( ( y ) ) - betray(Arya,Stark) / Hodor),21),-Sansa,ROWS) ) ) ) ) - ( ---dog ) + -800.1 + ( protect(betray(),protect()) ) : "Fear cuts deeper than swords."
def TABLE[Arya][j] {
	( foo() - COLS * COLS );
	if(ROWS){
	Arya += COLS;
	Arya -= COLS;
	Sansa -= -80
} else {
	if(destroy(Sansa * TABLE[Ygritte][( ---0.17 )] / protect(ROWS,--( TABLE[COLS][--COLS + ( -y )] ),-93) / mislead(COLS),270.7)){
	if(TABLE[-( -910.9725 )][-protect()]){

};
	if(( ( destroy(destroy(foo(y,( COLS )))) ) )){
	ROWS;
	y -= Stark;
	y *= Hodor
} else {
	Hodor;
	if(-840.918 - -0.15){

} else {
	if(( -TABLE[ROWS][-ROWS] )){
	( -mislead(bar(-36,TABLE[-0.68][Hodor]) / ---destroy(-1 * -0.75) - mislead(Stark,betray(-destroy(( ( ( -ROWS ) ) - foo(Stark,( -( 0.11 + betray(Sansa * 300.89,Sansa / ( Ygritte ) - bar(Hodor)) ) )) * COLS )),-TABLE[80][bar(mislead(COLS,ROWS + x),protect(( 0.84 )))],( ( ( ( Arya ) ) ) * -920.34 ))) * COLS * rule(-0.57,Stark) + bar(ROWS - --Ygritte)) * COLS / -protect(COLS,Ygritte,( -700.59 )) )
} else {
	Sansa /= -Sansa
};
	x -= Jon
};
	-( ( rule() ) ) / -1 * mislead()
}
} else {
	y *= -betray(-x) - betray(Sansa,( Ygritte ))
};
	if(-TABLE[( -( COLS ) )][Stark - -0.21] / ( ( Arya ) )){
	-TABLE[TABLE[( COLS - COLS )][-0.6]][protect(-y)];
	x += 0.01
}
};
	1
}
def TABLE[y][k] {
	dog *= Stark
}
def bar(Ygritte,x,Jon){
	protect(0.29);
	if(-1){
	if(79){
	y *= --49;
	( ( mislead(dog,( ( mislead(mislead(TABLE[Sansa][ROWS]) / protect(TABLE[foo(0.44)][COLS / protect(-0.95,betray(( -690.3 + betray(241 / COLS,Sansa,Arya) - --46 - ( COLS ) ),Ygritte,TABLE[52][-( 980.57 ) / -720.32]))],-400.79),mislead(Sansa,TABLE[bar(TABLE[x * 7][mislead()],( destroy() ))][0.32],1 / -COLS / --20.2169),Jon) ) ),TABLE[( rule(dog) )][( --Stark )]) ) - foo(TABLE[( ( -( -200.181 ) * ( --Sansa ) - COLS ) ) - rule()][rule(dog,( ( rule(87) ) )) - ( COLS )],Ygritte * Stark / mislead()) / 50 ) + Jon;
	if(TABLE[( destroy(dog - foo(0.93,( ( destroy(protect(-COLS)) ) ),mislead(Sansa,Jon)) - ---betray(-rule(ROWS,dog / COLS),Arya)) )][dog]){
	Arya /= x
}
};
	--ROWS
};
	Arya -= COLS
}
assert foo(( Jon ),-0.56) : "One can not simply parse himself"
def TABLE[dog][k] {
	if(ROWS){
	Arya -= -0.9
}
}
assert ( ( Hodor / COLS + Stark ) ) : "Winter is coming"
var Stark = ( ( ROWS ) )
assert ( destroy(dog,foo(Ygritte,( COLS )),COLS) ) : "One can not simply parse himself"
def mislead(Stark){

}
def TABLE[Jon][j] {

}
var Sansa = -foo() / COLS
assert -1 : "Fear cuts deeper than swords."
def TABLE[Arya][k] {

}
var y = betray(ROWS,ROWS)
def destroy(){

}
assert Sansa : "Fear cuts deeper than swords."
assert dog : "One can not simply parse himself"
var y = ( TABLE[( Stark ) * -( -73 )][Arya] + Stark * Hodor ) / -Arya
assert TABLE[( ( -( -( TABLE[-0.92][y] ) * -ROWS / Arya ) ) )][destroy(x,( ( -0.72 ) ),foo(destroy(700.26,-rule(TABLE[x][130.8],--1 - 0.03,ROWS),mislead() - -mislead(Jon,COLS,-1)),mislead(bar(TABLE[betray(-11 + -( COLS * ROWS ) * -3)][-Ygritte])) / -Hodor + protect(foo()),ROWS))] : "Winter is coming"
def TABLE[Sansa][k] {
	Arya *= ROWS
}
var Hodor = Sansa
var x = y
def bar(x,x){

}
assert -bar() : "Winter is coming"
var y = x
assert y : "Winter is coming"
def rule(){
	if(( Jon )){
	Stark /= ROWS + 0.69
} else {
	150.653;
	if(750.6){
	if(Arya){
	Hodor;
	y *= 0.6;
	Sansa /= protect(x,dog,TABLE[destroy()][710.6])
};
	Jon += ROWS
} else {
	y -= COLS
}
};
	if(( COLS ) + ( dog ) + TABLE[y][COLS / Arya - Jon]){
	if(TABLE[protect(COLS)][-0.53 / ( Jon - ( Hodor * COLS ) )]){
	if(( betray(-60,y) )){
	-0.36;
	-1
}
};
	if(1 + -0.06){
	Ygritte /= protect(( -0.15 ));
	if(protect(COLS + COLS,-dog)){
	Jon /= destroy(Ygritte,Sansa);
	ROWS
};
	Sansa *= -Ygritte
}
} else {
	if(COLS){
	Hodor /= -( ROWS / ( -62 ) + COLS ) + Arya * ( -70.77 )
}
}
}
assert --0.38 : "Winter is coming"
def destroy(dog,dog){
	if(( -protect(COLS,ROWS,COLS) / rule(Arya) )){
	26 * Arya;
	if(( COLS )){

} else {

}
} else {

}
}
def foo(dog,y,Arya){
	if(-rule(Hodor / y)){
	if(( COLS )){
	Ygritte + -0.2;
	if(mislead(-660.8663,Arya + rule())){

}
} else {
	x -= -0.74
};
	( 74 )
}
}
assert --y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = -( TABLE[bar(TABLE[1][0.77],( Stark ))][-( ( ROWS - ROWS ) / x + TABLE[-x + ( mislead(-80,Hodor) ) + ( foo(destroy(ROWS,---TABLE[Ygritte][-y]),protect(60,ROWS,Jon),-( ( -TABLE[-ROWS][( betray(1,Jon,ROWS) )] ) )) ) * TABLE[betray(rule(ROWS,-0.31) + TABLE[ROWS][( x )] + destroy(betray(-2,( mislead(COLS) )),TABLE[COLS][-ROWS],( TABLE[Ygritte][foo(64,-0.52)] )) + Hodor,( ( bar(-Ygritte / 0.94 + 230.6,( -0.68 ),-dog) ) ))][TABLE[Ygritte / ( destroy(1,rule(-Arya)) )][ROWS]]][y] )] ) * COLS / -COLS + COLS / -20
var x = ( -( -0.89 ) )
assert Ygritte : "Winter is coming"
def foo(y){
	if(( bar(-dog,-( -Sansa / Arya + betray(Stark) - COLS ),0.05) )){
	if(betray(( -( -1 ) ))){
	bar(protect(),foo())
}
}
}
def TABLE[--TABLE[( ( Stark ) )][-Jon]][j] {
	if(bar(ROWS,Sansa,Sansa)){
	Ygritte /= destroy(-Jon)
} else {
	rule(TABLE[-1][( COLS ) / Arya],x)
};
	dog /= TABLE[-TABLE[betray(-Arya)][---0.24 - mislead(--( ( Arya ) ),x / -0.76)] + Ygritte][--Jon - ( ( ( -Arya * ( ( Ygritte ) ) + 32 / Hodor - -91 / -y - Stark ) ) )]
}
var Sansa = ROWS
var Jon = Hodor
def betray(Ygritte){
	if(Sansa){
	Jon /= -foo(-Arya,mislead(x,( ROWS )) * -destroy(betray(-74,COLS,-1),foo()) + ( -ROWS ));
	rule(destroy(ROWS,COLS,betray(Stark)))
};
	Sansa -= ( dog )
}
def destroy(Jon){

}
assert 0.02 : "One can not simply parse himself"
assert ROWS : "One can not simply parse himself"
var Sansa = 70
assert Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert rule(-mislead(0.66,destroy()),TABLE[( --0.27 )][TABLE[Stark][-( ( -79 ) * -12 )]]) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[--1][j] {

}
assert Stark : "Nothing burns like the cold."
var Ygritte = betray(TABLE[1 / ( -protect(-0.67) )][destroy(-33,x,-TABLE[--COLS][( 800.009 )])],bar(rule(TABLE[bar(-( Sansa / -ROWS - -mislead(Stark,mislead(Arya)) ),ROWS)][0.56])),Arya)
def bar(Arya,Stark){
	Stark -= TABLE[( -230.0461 )][foo(bar(-0.43 + Jon + -500.2782,( Arya ),41) / ( rule() ),( ROWS ))]
}
def TABLE[( -0.14 ) + Stark][i] {
	dog /= --foo(destroy(rule(Ygritte)),TABLE[TABLE[24][rule()]][rule(dog)]);
	if(foo()){
	if(Arya){
	Arya -= dog;
	Ygritte -= ( ( dog ) );
	Sansa -= -Arya
} else {
	--x
};
	37 + COLS * protect();
	--780.11
} else {
	if(protect(--27)){
	x /= ROWS;
	if(-COLS){
	Hodor;
	-Sansa * TABLE[-( -Jon * COLS ) + -91 - ( Arya ) + ( ROWS / -COLS ) + ( -betray(( --1 )) - Hodor - y / -COLS )][Ygritte] * Stark - -( Stark )
};
	if(-1){
	y -= rule(-( COLS ) * -( ( betray(Arya) ) ),y,--Hodor);
	Ygritte
}
};
	0.18
};
	if(Sansa){
	if(TABLE[rule()][-0.22] + TABLE[betray(-y,-44 + 790.62)][destroy(-170.21)]){

} else {
	TABLE[-170.3683 / Hodor][( -0.58 )]
};
	--0.79 + ( -y ) * rule(69)
}
}
var y = rule(ROWS)
def destroy(dog,Stark,Jon){
	Stark;
	if(-ROWS){
	y *= x
} else {
	Ygritte *= -35;
	if(-14){

};
	-0.42
};
	-Jon / ( 87 ) / --( Arya ) + -270.93 + --betray()
}
assert -protect(TABLE[-43 + ROWS][TABLE[0.5][-1]],ROWS) : "One can not simply parse himself"
def TABLE[dog][i] {

}
var y = 64 - Stark
def destroy(Arya){
	Hodor /= Sansa
}
def mislead(Stark,Hodor){

}
def TABLE[-640.234][j] {

}
var Ygritte = Sansa
var y = ROWS
var Stark = protect()
var Stark = -Ygritte
var Hodor = TABLE[( destroy(Ygritte) )][COLS]
assert COLS + ( ROWS * COLS ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-Ygritte][j] {
	-( -0.13 )
}
var Arya = Ygritte
var Stark = bar(77,destroy(0.38,( mislead(-COLS - protect(dog,Stark),rule(990.19) - Hodor) )))
def protect(Hodor,Hodor,dog){
	-Sansa;
	TABLE[--Arya][( TABLE[( destroy(83) ) - mislead()][Sansa] )]
}
assert ( COLS ) + Hodor * COLS : "Fear cuts deeper than swords."
def TABLE[-18][i] {
	if(-0.5){
	-0.18;
	( 61 )
};
	if(y){
	Ygritte -= ( Stark )
} else {
	Ygritte -= rule();
	0.24 * ( foo(96 * ( mislead(bar(-destroy(TABLE[x][-TABLE[rule(-COLS,-( Jon ) - COLS)][400.84] - Hodor]),Ygritte)) ) / -( -TABLE[Hodor][-ROWS] * foo(protect(TABLE[--( COLS )][-x]),---( TABLE[COLS / COLS][0.59] ) - bar(-Stark),foo()) / destroy(-ROWS,16) ) + COLS) );
	y /= COLS - -58 / -0.05 * -mislead(bar(mislead(x,x)))
};
	if(-ROWS){
	y += -0.48
}
}
def mislead(Arya,Ygritte){

}
def mislead(dog,x,Hodor){
	Sansa /= COLS;
	TABLE[mislead(20)][( -760.59 / ( Sansa ) )];
	x /= ( -52 )
}
def rule(Jon,y){
	if(-Jon / -destroy(( -COLS )) / Ygritte + bar(( betray(-Sansa) / -84 ),--Sansa)){
	if(destroy(TABLE[( --930.1222 )][destroy()],-Hodor)){

} else {

};
	x -= ROWS
} else {

};
	TABLE[TABLE[--TABLE[y][betray()] + ( -COLS )][49]][Arya]
}
assert COLS : "What do we say to the Lord of Death?"
def bar(Sansa){
	rule(-1);
	y -= -57
}
var y = y
var y = 920.495
def mislead(){
	x -= ( Ygritte );
	-85;
	Ygritte *= x
}
def TABLE[Sansa][k] {
	Hodor /= bar(ROWS)
}
var Ygritte = Ygritte
assert -( TABLE[-( 0.96 )][-ROWS] ) : "One can not simply parse himself"
def TABLE[Stark][i] {

}
def TABLE[x][k] {
	Arya /= ( Arya );
	if(( protect() )){
	Stark *= ( ( protect(COLS) ) );
	if(( -TABLE[-mislead(( -destroy() ))][( ( -Arya ) )] )){

} else {
	Hodor *= y;
	COLS
};
	Arya += ---1
} else {
	Hodor *= COLS;
	if(( ( ROWS ) - rule(-1) )){
	betray(0.97,-y)
} else {
	TABLE[bar() / TABLE[( TABLE[32][TABLE[ROWS][46] - dog] )][ROWS]][foo(protect(betray(( ( -( foo(-47,480.6609) ) ) ),1)))]
}
}
}
def protect(Jon){
	dog
}
def rule(y,Arya){
	if(-TABLE[-1][mislead(dog,( -200.3 ),400.672)] / ( betray() ) - TABLE[TABLE[rule(Ygritte,foo(( ROWS ),TABLE[--bar() + bar(( ( -36 ) ))][( ( -Ygritte * -0.31 ) ) + -( ( ( -bar(betray(ROWS,( betray() ))) / y / -1 ) ) )],95))][destroy(mislead(0.83),( y ) - rule(( -1 ),--0.37 * ROWS,y))]][ROWS - -y]){
	COLS;
	Stark *= y
} else {
	x -= ROWS
}
}
var x = Arya * -51
var Ygritte = ( Ygritte )
assert -970.3783 : "What do we say to the Lord of Death?"
def TABLE[-0.9][k] {
	if(COLS){
	if(( ( Jon ) - --1 )){

} else {
	if(foo()){
	if(-mislead(0.32,( -0.37 ),COLS)){
	Hodor /= ( ( -ROWS ) )
} else {
	if(mislead(-Hodor)){
	if(( ( Sansa ) )){
	if(Ygritte){
	if(Arya){
	if(-30){
	Stark += -1 + bar(-Jon);
	if(-0.44){
	if(( -49 )){
	if(-23){
	x -= -Hodor
} else {
	if(dog){
	TABLE[TABLE[Jon][( Sansa - destroy(0.78) )]][( -( x ) )];
	--64;
	if(-1){
	dog += rule(-Stark * ( ( -TABLE[ROWS][( ROWS )] ) ) + ( mislead(( protect() )) ),Sansa,bar(ROWS) - -Jon - 15 - -28 * ( bar(COLS) ));
	Sansa *= ( -destroy(( -1 ),Stark / ROWS) )
}
};
	if(foo(Hodor,0.24,protect(( protect(0.89) ) / 0 - -( Sansa ),-410.6823 - 0.11))){

}
};
	y *= Sansa
};
	-Hodor
}
};
	bar(-750.328)
}
} else {

};
	Stark *= 0.62
} else {
	dog -= -Sansa + betray(( 1 ));
	if(ROWS){
	if(rule() + rule(--bar()) * x){
	TABLE[Jon / -rule(72 + -COLS)][( ROWS )]
};
	foo(Ygritte,betray(1 + -bar()))
}
};
	-betray(TABLE[760.2][ROWS]) * ( y )
} else {
	if(( -ROWS )){
	Sansa -= -47 + ROWS
}
};
	dog += mislead(x,-( Arya ))
};
	if(( Jon )){

} else {
	( 54 ) + ROWS;
	if(-ROWS){
	if(-1){
	TABLE[ROWS][-COLS]
};
	if(TABLE[Arya][Sansa]){
	if(-COLS){
	Arya += ( ( 15 ) )
}
};
	if(mislead(( -TABLE[-10.87][COLS] ),( -( ( TABLE[ROWS][( dog )] ) ) ))){
	betray(( -270.9291 ))
} else {
	if(Arya){

} else {
	-0.5 * Sansa;
	( TABLE[ROWS][ROWS - Stark * COLS] );
	( Stark ) + protect(protect(-( 1 )),-( Jon ))
};
	if(bar() * ( rule(Hodor) )){

} else {
	( 0.16 );
	if(-betray(-y + Hodor - Hodor,TABLE[bar(ROWS,-dog,--( x ))][foo()])){
	0.48;
	if(ROWS){
	( ( COLS ) )
} else {

}
} else {
	y /= ROWS
};
	if(1 * TABLE[Arya][--Stark + x * betray(--40.908 / ( -x * -Jon ))] + -y){
	Arya *= destroy(protect())
}
};
	Ygritte -= -1
}
};
	if(ROWS){
	if(( --ROWS )){

} else {
	if(-mislead(( -37 ),ROWS)){
	TABLE[Hodor][-72];
	if(Ygritte){

} else {
	if(ROWS){
	if(( --( Hodor ) * ( x ) )){
	Hodor /= Arya;
	if(dog){
	if(0.23){
	dog += ( ( ( TABLE[1 * 6][0.65] ) ) );
	rule(( -0.9 ) + TABLE[( betray(foo(Hodor,Ygritte,( dog ))) ) / -930.95][( COLS )],Ygritte);
	TABLE[--y + ( -y * Hodor )][( Ygritte )]
}
} else {
	Sansa
}
};
	y
}
};
	y *= -1
}
};
	Stark *= mislead(810.331);
	20
} else {
	COLS * rule(Stark) / 22 * -Ygritte / -Ygritte
}
}
} else {
	if(-0.78 / TABLE[rule(-destroy(-Stark,ROWS,Ygritte),Arya,-( -1 ))][-0.38 - -protect(TABLE[mislead(-( COLS ),mislead(39))][( ROWS )],1) * TABLE[( -1 )][( rule() )] / -0.22 - foo(Stark * destroy(Sansa))] + -91){
	Hodor *= -( COLS )
} else {
	Sansa += -11;
	-foo() + destroy()
};
	Ygritte /= -0.95
}
}
} else {
	Hodor
};
	if(mislead()){
	Jon *= Arya - -betray();
	if(rule(-( protect(-rule(51 + -1)) ),1,Stark)){
	COLS;
	Stark += rule(COLS * TABLE[( foo(--betray(destroy(),Arya) / protect(( ( ( ( x ) ) ) )) + Jon) )][Sansa] / 50.2,-x - -( ( TABLE[--560.6 * Ygritte * protect(betray(-TABLE[( -COLS )][x],TABLE[( TABLE[-ROWS][-destroy(-0.26)] )][-( ( ( protect(destroy(mislead(),dog,( foo(-Jon) )),betray(( ( 24 ) ),( 1 ))) ) ) + --1 * x - COLS + ( dog ) )])) + Arya / 20.1 + 3][( ROWS )] ) ))
} else {
	Stark /= destroy(foo(( -1 * COLS ) + 3 * Hodor)) + protect(Stark);
	0.96;
	Hodor -= destroy(( ROWS ),510.113)
};
	Sansa += Ygritte
};
	Hodor /= -0.13
}
def TABLE[Hodor][i] {
	Arya -= -9 * 1;
	if(( -ROWS )){
	ROWS;
	if(-COLS){
	Hodor -= -1;
	if(-bar(-0.15)){

};
	y *= -x
} else {
	if(TABLE[TABLE[-0.48 - 490.742][Ygritte]][x]){
	Ygritte -= 0.87
};
	if(COLS){
	Hodor *= ( -destroy(( Stark + destroy(Sansa,-mislead(),-440.39) )) - -( ( ( mislead(bar(-( COLS ) / -40),-Sansa,Jon) ) ) ) );
	13
}
}
};
	if(COLS){
	betray(0.76)
}
}
def protect(dog){
	Jon *= -protect(-TABLE[ROWS][destroy(0.28)] + -rule(betray(-( Sansa )) * mislead(( ROWS ))),foo() / y);
	y *= ( Hodor )
}
assert ( Sansa ) : "Fear cuts deeper than swords."
def TABLE[x][i] {
	Hodor -= ( ROWS + protect(mislead(-bar(destroy())),-( Ygritte )) )
}
def TABLE[mislead(rule(-x / foo()))][j] {
	if(-COLS){
	if(Jon){
	ROWS;
	bar(-0.34 + ( Arya ) + 270.409,-0.3);
	y *= -mislead(24,( -1 ) - Stark)
} else {
	-( Arya )
};
	if(bar(( protect(TABLE[-1][ROWS],65) ),770.8)){
	Ygritte *= ( -dog ) - ( ROWS )
}
} else {
	( bar(foo(protect(1)),-Arya) );
	Stark += Jon;
	Stark -= y * ( TABLE[-Hodor + ---0.44 - ROWS][TABLE[( ( -ROWS ) )][rule(-betray(-38 / ROWS,ROWS),foo(( -53 )) / -COLS * betray() + ( destroy() )) * Ygritte]] )
};
	protect(Ygritte,Arya)
}
assert ( Hodor ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(Stark){
	if(-0.13){
	COLS;
	if(-140.08){
	x /= TABLE[betray(( -( -COLS + TABLE[COLS][ROWS] * ( COLS ) / ROWS ) ),50.2,-1)][-Arya]
} else {
	Arya += ( ( ( ROWS ) / rule(( foo(-76,Sansa) ),-35) ) - bar(-TABLE[940 + Arya][COLS],-560.84,1) );
	if(Hodor / ( ( COLS ) )){
	( 0.13 + -Stark * Sansa - -rule(TABLE[-destroy(( ( rule(betray(TABLE[0.24 * x - 0.77][mislead(protect())] - dog,--protect(( ( -1 ) )) / mislead(( ( bar(---221,( bar(--dog,dog + ROWS) )) * ( protect(dog) ) ) ) * foo(x),( -dog * foo(TABLE[-60][protect(( foo(Sansa) ) - ( -y * TABLE[950.9][( ( 17 ) ) * rule(mislead(protect(betray(),Arya * y,1),( 0.01 )),--Stark * -56,y)] ) + ( ( Jon ) ) - ROWS,ROWS,( -0.22 ))],1,Sansa) / mislead(ROWS,protect(( mislead(( -26 - COLS ),bar(1,rule()) - ( TABLE[Arya / x][-1] ) / foo(( -49 ),-Ygritte - -83 - ( COLS ),y),bar(betray(( ( foo(protect(ROWS)) ) ),TABLE[( -0.73 / --y )][-( Stark * destroy(-84 - -69 / -31,690.57) / -1 * x )]) * Ygritte - ( ( 110.3112 ) ) * -Hodor,-111)) ))) ) * --Jon),-83)) ) ))][( ( TABLE[COLS][-COLS] ) )],mislead(( ROWS ))) * ( ( Ygritte ) ) + ( protect(-0.61) ) )
} else {
	dog;
	1;
	Stark *= COLS
};
	Ygritte
}
} else {
	if(TABLE[TABLE[Arya][betray()]][ROWS]){
	-rule();
	if(destroy(( Ygritte ),TABLE[rule(destroy(-ROWS,foo(),-60.0971))][TABLE[( ( ( TABLE[-43][x / Jon * foo(-ROWS,Hodor)] ) + ( ROWS ) / ( -( Ygritte ) ) ) )][( -mislead(x) )]])){
	-0.09
} else {
	Sansa *= TABLE[Jon][1] * Ygritte
}
}
}
}
var Ygritte = x
def rule(Sansa,Jon,Stark){
	Hodor -= -Ygritte
}
var Stark = x
var Ygritte = -20
def TABLE[-ROWS + foo(0) + Jon][j] {

}
def TABLE[mislead(TABLE[bar(1 - ( ROWS - TABLE[TABLE[84][1]][( ROWS )] ),48,Ygritte)][COLS],( 34 ) + rule(( mislead(COLS,Jon,betray(TABLE[destroy()][Ygritte],-ROWS)) ),-530.548))][i] {
	if(Hodor){
	260.97;
	if(1){

}
};
	if(TABLE[COLS * COLS][-0.57]){
	destroy(y,0.38);
	if(( ( --1 / Arya ) )){
	y /= y;
	mislead(--1) * --COLS / -0.73
}
};
	mislead(-0.67)
}
assert COLS * -( -( 0.22 / Stark ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = -350.8415 - ( mislead() )
var x = ROWS
def TABLE[betray()][i] {

}
def protect(){
	Ygritte -= -Hodor
}
def mislead(x){
	Sansa += ROWS
}
def TABLE[70][k] {
	if(foo(Ygritte)){
	ROWS
}
}
var Hodor = COLS
def protect(Arya){
	-TABLE[Arya][1 - Arya];
	if(x){
	if(-360.768 / Jon){
	-( --betray() );
	Stark += TABLE[y * ( TABLE[COLS][protect(COLS)] )][-0.33];
	COLS - COLS + betray(--bar(--dog)) / -TABLE[( rule(dog / rule(ROWS,dog),bar(( Hodor ))) )][protect(--1)] * COLS
}
}
}
var dog = 1
assert TABLE[-8][destroy(( protect(protect(TABLE[-980.8279][-Stark],1) - -( x ) + betray(),--( protect(660.257,-750.57) ),Sansa) ) + betray(ROWS / -24,protect(-0.55,ROWS)) + ( TABLE[-dog][-COLS] ),( ROWS ) + ( y ))] + -COLS * Sansa : "One can not simply parse himself"
assert ( 0.98 ) : "One can not simply parse himself"
var Arya = TABLE[bar()][ROWS]
var Stark = -37 + -110.29
def bar(Jon,Arya){
	Sansa *= Stark
}
def betray(Stark,dog){

}
def TABLE[destroy(( Hodor ),COLS)][j] {
	Jon *= ( betray(bar(mislead(--bar(( ROWS ),COLS,( Arya ) / ( ( 41 ) )))),-0.13,rule(--42,ROWS / ( Stark ))) );
	if(16){
	--42;
	if(protect(( COLS / -450.007 ),( TABLE[--( rule(protect(Hodor,TABLE[foo()][( -56 )])) ) + ---( TABLE[-x - -Ygritte * Hodor * betray(mislead(),-810.7 + Stark)][y] )][rule(( -Stark * Stark ))] / Jon ) + COLS)){

}
}
}
assert -( 92 ) : "Winter is coming"
def betray(Ygritte){
	x += dog
}
var dog = ( Arya ) - COLS
def TABLE[x][k] {
	y *= 970.42;
	Ygritte += -( -rule() + ( ROWS ) ) / Hodor;
	if(mislead(0.99) - -1){
	y -= ( -1 );
	Stark += -0.77 / foo(COLS) / 0.4;
	COLS
}
}
assert Stark : "What do we say to the Lord of Death?"
assert betray(( destroy(ROWS) ),( ( ( -1 ) / Sansa ) )) : "Fear cuts deeper than swords."
def TABLE[mislead(-rule(-COLS,COLS,y) - TABLE[( -( TABLE[-TABLE[( Sansa )][TABLE[( foo(protect(ROWS),TABLE[-82][bar(bar(---68,Arya,( -Stark ))) / ( 0.28 + y )]) )][foo(mislead(ROWS) - -protect(ROWS)) / ( -x )]]][Hodor] ) )][TABLE[foo(dog - --mislead(( 0.59 )))][( ( --Ygritte ) )]],bar(63,foo(( 1 ))) + COLS,( Stark ))][i] {
	if(dog){
	dog += ROWS - rule(( -TABLE[-( ( Arya ) ) + ROWS / protect(-destroy(-1 + Ygritte - -0.91,mislead(protect(protect(protect(y)),( rule(Ygritte,( -destroy(COLS,destroy(Arya) / rule(destroy(( -76 ),x),-foo(-bar(( ( bar(rule(( ( TABLE[-1][-betray(ROWS)] ) )),1) ) ),( -39 )) - ( 130.06 ),destroy(( 970.791 ) + Ygritte,( -( COLS ) ))),destroy(( Ygritte ),( mislead(Hodor,rule(y),TABLE[Jon][mislead(Arya)]) )))) )) ),-mislead(foo(-0.67,--rule(Sansa,-1)),--TABLE[( destroy(-1 / ROWS) )][bar(-89,protect(Stark,( foo(destroy(x,-destroy(TABLE[-bar()][COLS]) - TABLE[( --ROWS )][-280.137],destroy(destroy(--x,rule(Stark,1) * -0.71,mislead()))) * foo(( ( -( bar(-Arya * ( 1 / Hodor ),Ygritte) ) / foo(COLS,( destroy() ),x - ( Arya )) * 5 ) ),Jon),680.05) ) / destroy(23,Ygritte * -10 - Sansa + -0.12 * Jon)),-23)],mislead(Ygritte)) - 0.21))),mislead(-( ROWS ),destroy(destroy(-0.72,0.32 / TABLE[900.92][destroy()]) - 24,( ( 450.26 ) )),betray(rule(TABLE[protect(Hodor,--( -1 ),( TABLE[TABLE[Sansa][TABLE[( ( TABLE[--0.47][0.29] ) + ( 0.76 * -1 ) * ( -25 ) )][rule(dog,COLS) / betray(ROWS * ROWS)]]][1] ))][( mislead(TABLE[-COLS][bar()]) )] * TABLE[TABLE[( 0.65 )][--85]][( -( --0.57 * ( Ygritte - bar(-( -1 ),betray(--protect()) / ( Jon ),-TABLE[Arya][( -( 0.04 ) )]) / ( betray() - ( ( foo(Jon) ) ) ) + TABLE[1][Arya] + COLS - Arya ) ) )]),78) / rule(foo(COLS,Ygritte,( -0.06 )))))][1] ));
	if(-0.25){
	dog
}
};
	if(Hodor){
	x *= --foo() * --COLS
} else {
	( ( mislead(-protect(Stark,rule(rule(( -( 0.64 ) ),( y )),y,-0.15)),36) ) );
	if(TABLE[-ROWS + -71 - Arya][y]){
	if(dog){
	-rule(y);
	-mislead(( foo(-96,( betray(ROWS) )) ))
} else {

}
} else {
	if(-COLS){
	( -62 ) - ( -Arya );
	if(ROWS){

}
}
}
}
}
def bar(x){
	COLS;
	510.37;
	if(-x){
	Jon -= ( ( ROWS ) );
	if(-TABLE[COLS][( -0.49 )] / protect() + 0){
	Ygritte /= destroy(destroy(TABLE[( x )][-370.12]),-3) + Jon * ( 0.55 );
	if(y){
	Hodor;
	32
}
} else {
	if(rule(--TABLE[mislead(bar(( -rule(x,--mislead(protect(),730.815) / TABLE[( ROWS )][73],Stark / ( ( COLS ) ) * ( -610.09 ) * TABLE[Stark - -( TABLE[0.57][x] )][( x * destroy(protect(( ( ( ROWS ) ) ),20,--53 - ( Ygritte ) - -( TABLE[ROWS][ROWS] ))) )] * x) )),TABLE[ROWS][-bar(y)])][x],( COLS ))){
	x -= ROWS;
	if(-( ROWS ) / ROWS + TABLE[0.88][Hodor] / -0.65){

}
} else {
	if(bar(( 1 + Arya ))){
	rule(--480.05 + ROWS,ROWS / -0.13 - 760.91 - 0.44)
}
};
	0.73;
	Jon -= destroy(TABLE[destroy(-410.1579,-betray(COLS - Sansa))][ROWS] + mislead(--63) + ( COLS / Arya ))
};
	if(-destroy(( -Jon - TABLE[ROWS][COLS] ),( Ygritte ),850.4)){
	Ygritte -= foo();
	if(Ygritte){
	if(mislead(COLS,( -62 ))){
	if(-TABLE[( ROWS - ROWS / -Ygritte )][50] + 12){
	if(( 0.6 )){
	if(-----31 * -( x ) * ROWS){
	y += rule(Sansa,Sansa);
	if(protect(Ygritte) * -( Ygritte ) * ( ---1 ) / ROWS * Hodor){
	if(---TABLE[Arya][( -rule(( 77 )) )] - bar()){
	-0.81
} else {
	ROWS;
	0.92
};
	if(destroy()){
	( TABLE[--0.52][x] );
	if(( -mislead(-protect() - ROWS) * dog )){
	( 0.61 );
	Hodor *= -COLS;
	x /= -( -1 ) + ----Stark + TABLE[COLS][( bar(ROWS) )] + -39 + ROWS
}
}
}
} else {
	Jon += ( protect(destroy(destroy(-( 45 ) - bar(foo(-ROWS),-180.04)) + Stark) / protect(-Hodor) / ( -destroy(-9,Stark) * ( y ) - ( ROWS ) ),COLS) );
	if(1){
	if(67){
	x += 72
};
	Arya *= -( COLS );
	Ygritte -= -mislead(--bar(( -0.06 )),-COLS) * Stark + Ygritte
} else {
	x += -0.4;
	x /= COLS
};
	Ygritte *= mislead()
}
} else {
	if(( COLS )){
	Stark *= -0.81
} else {

};
	COLS;
	if(-( COLS * --Ygritte )){
	Stark -= Sansa
} else {
	( -TABLE[betray(-790.7)][( x ) * -ROWS - ( ( destroy() ) )] );
	Ygritte -= mislead(ROWS) - COLS
}
};
	COLS - x
}
};
	0.45 / ( -mislead() );
	if(destroy(--COLS,-mislead(ROWS))){
	Sansa /= Sansa;
	Ygritte *= -30 / betray(Stark,TABLE[-23][mislead(3,-betray(-0.59,dog)) / dog],( Ygritte ))
} else {
	TABLE[foo(TABLE[foo(( -foo(x,betray()) ))][Ygritte],( -Jon )) / ( -y + betray(rule(( --betray(destroy()) + --49 ),COLS),rule() * betray(-3,( 190.2 ),TABLE[TABLE[( Stark )][ROWS] + bar(TABLE[ROWS][bar(--4 * 64 + foo(96,-33),bar(mislead()),( -96 ) - dog / ( Jon ) / -dog) * TABLE[-0.27][x]] / ROWS * protect(( TABLE[1][foo(( -100.6 ),--( Jon ))] ),( dog * -TABLE[75][y - ( -53 ) / ( ROWS )] - 97 ) * ROWS * ( Stark )))][( Ygritte ) + Ygritte])) )][Stark];
	if(( -0.39 )){
	0.84;
	if(( --90 )){
	Stark /= 70
} else {
	if(( -Hodor )){
	0.23;
	if(( COLS )){
	Ygritte
} else {
	y *= Stark;
	if(( -0.41 ) - COLS / rule()){
	Stark *= COLS;
	Hodor -= -( ( TABLE[-protect(( ( 0.52 ) ),y)][rule(0.22,destroy(21,( -( -0.55 ) )))] - bar(-Hodor,( -TABLE[--( Stark )][mislead()] )) ) )
} else {

};
	Hodor /= foo(-1,0.54,mislead(Ygritte))
}
} else {
	Sansa;
	if(-betray(0.26,-protect(( ( 0.59 ) ),Ygritte,x))){

} else {
	( ( Ygritte ) );
	COLS
}
};
	dog += -betray(-Jon,COLS,COLS)
};
	if(--Jon){
	x *= COLS;
	Arya -= COLS;
	dog /= ( y )
} else {
	if(--Ygritte){

};
	Hodor /= COLS
}
} else {
	if(dog){
	if(-37){
	( ( -340.6031 + bar(ROWS,Sansa) ) );
	Ygritte /= ROWS
};
	( TABLE[-6][( dog )] )
} else {
	y *= --x;
	y -= dog
};
	Stark += ( Stark );
	if(mislead(-0.53 - protect(y,( ROWS ),ROWS * mislead(-( -y )))) / foo(Ygritte,COLS / --x,mislead(Arya))){
	Stark /= Ygritte;
	rule()
} else {
	dog
}
}
}
};
	if(TABLE[COLS][betray(Hodor,protect(56,300.8,TABLE[( Ygritte )][betray()]))] / -Hodor + foo(COLS)){
	( Jon )
}
} else {
	Hodor -= ( rule(ROWS,( Hodor )) ) + COLS / --1 + -0.59;
	rule(-----22 / -COLS + -0.28 - --( Hodor ),( -protect(( 600.88 )) ) * -dog)
}
} else {
	Stark /= Arya - ( --18 ) - mislead(mislead(Stark,( TABLE[dog - bar(COLS,Hodor + x) * TABLE[x][( --78 )] / -0.79][rule(protect())] )) - rule(( ROWS ) + TABLE[1][bar(--20 * bar(Jon - ( -rule(TABLE[( protect(ROWS) )][bar(ROWS,bar(Hodor))],0.18) ),mislead(protect() * ROWS,-0.59,-30.851) / ROWS),TABLE[--1][Stark])]));
	Stark *= Arya
}
}
var Stark = -28
def TABLE[-x - mislead(-mislead(--( -1 )) / -0.21,-46)][k] {
	if(y){

} else {

};
	if(mislead(Sansa,-mislead(-protect(( ( mislead(dog) ) ),ROWS) - TABLE[-Sansa - -ROWS * rule(----ROWS,x)][( TABLE[dog / Hodor + destroy(Sansa,bar(0.39 * foo(-betray(-39 / -x + ( rule() + -dog ) - COLS,1),--betray(-0.19,TABLE[( rule(Stark,ROWS) )][destroy(foo(rule(-0.44,Arya),protect() + protect(( ( ROWS ) * -( -280.5279 ) ),--0.65)),ROWS) - ( -COLS )])) / ROWS / ( --( ( Sansa ) ) ) * ROWS + mislead(Arya / ROWS,y,-85) + destroy(-6,280.8,destroy()),-1,( TABLE[x][destroy(Ygritte,( -0.8 ),foo(-10)) + --COLS] ))) / TABLE[( 19 )][protect()]][foo(-( --1 + ( ROWS * -COLS ) - Hodor ),y,Stark)] )]),y)){
	if(ROWS){
	49 / Ygritte + destroy(-1,49) / TABLE[TABLE[foo(-( ( bar(dog) / TABLE[( TABLE[COLS + bar(destroy(),Arya / ROWS,1) + -mislead(13) * 75 / 1][Stark] ) - foo(-ROWS)][TABLE[bar()][-foo(-0.63,protect(ROWS * ROWS),dog) * --48]] ) ))][COLS]][-42]
}
}
}
var dog = 31
assert Jon : "Winter is coming"
def foo(Stark,Hodor){
	if(-( TABLE[-42][bar(Arya / ( --betray() ) / bar() - Stark,( ROWS )) * ( -( ROWS ) )] )){
	foo(-( Ygritte ) / -610.37,COLS * TABLE[Ygritte][-0.8],-bar(protect(rule(-TABLE[x][( -dog )],mislead(protect(0.05 * destroy(-mislead(),0.07),COLS) + bar(COLS - 240.6 - COLS * -dog * bar(ROWS),COLS,Sansa),rule(( -mislead() + ( TABLE[( Hodor - -Arya )][bar(TABLE[-660.949][COLS] + ( -( protect(rule(-y) / TABLE[( -0.81 ) * dog][COLS] * ( protect(( Arya )) ),---betray(COLS,( -0.94 ),58) + -TABLE[0.73][( ( --0.2 * mislead(( 46 ),-1,y) - foo(mislead() * Sansa) - -betray(COLS) ) ) + -y + ( destroy(TABLE[-Sansa][-Jon],-TABLE[y][-( ( bar() ) ) - rule()],ROWS) ) + -0.49 - -66]) ) / 1 - ( dog ) ) * protect(-betray(),( ( ROWS ) )) + 94 + TABLE[COLS][ROWS * foo()] - Stark - --Hodor + -COLS,83)] ) )),-Sansa)),-74 - COLS / 0.09 + TABLE[140.073][x]),destroy(59,( Ygritte ),94)));
	if(ROWS){
	COLS;
	if(-0.87){
	if(-5){
	x *= Ygritte
} else {
	70 / ( ROWS ) * ( COLS )
};
	if(Stark){

} else {
	if(rule(-rule(( ROWS ),-980.4816 + ---1 + dog,( ( ( ---35 ) ) )),( ( ( 0.44 ) ) ))){

} else {
	if(-700.6){

};
	if(Jon){

};
	if(0.07){
	Hodor;
	Stark /= Arya
}
};
	Hodor -= Stark * mislead(Sansa,betray(-COLS))
}
};
	0.47 + -foo(-( -( betray(-( TABLE[--0.64][( TABLE[( -bar(x) )][-1] )] )) + Arya ) ),( ( -( TABLE[dog][81] ) + Hodor ) + 790.74 )) * rule(mislead(( TABLE[( rule(Jon) )][y] ),( Arya ),x),Stark) + ( ( Ygritte ) )
} else {
	if(-dog){
	x *= rule()
};
	if(-TABLE[Jon - TABLE[( Stark )][bar(ROWS,rule())] * ( ( betray(Stark) ) )][Arya]){

}
};
	( mislead(--Arya,-COLS) )
} else {
	Arya /= ( -570.68 / TABLE[--1 * TABLE[--Ygritte][89]][-790.25] )
}
}
assert -57 : "One can not simply parse himself"
var Hodor = ( x * Jon )
def destroy(Hodor,Jon){

}
def foo(){
	if(( -( -Stark ) + 0.2 )){
	if(680.684){

} else {
	if(COLS){
	mislead(Jon * destroy(-mislead()),TABLE[COLS][-0.69])
} else {
	if(( --rule(COLS) )){
	Jon /= ( destroy(ROWS,Stark,260.54) )
}
};
	TABLE[-1][-bar(0.65,Sansa)]
}
} else {
	Jon;
	Hodor /= rule()
};
	Stark *= ( COLS ) + -9;
	if(0.65){
	COLS
}
}
def bar(Stark){
	if(COLS + COLS){
	dog -= rule(45,( betray(Jon) ) / ( y + protect(( 0.26 ),-foo() / ( ( -( Ygritte ) ) )) ));
	Stark;
	if(x){
	betray(320.97)
}
};
	TABLE[( y + dog )][-mislead(-910.008)]
}
def rule(){
	dog -= mislead();
	if(COLS){
	if(-Arya * -( Stark )){
	dog /= protect(mislead(),-Sansa);
	Sansa += -Ygritte
}
}
}
var Stark = ROWS
assert -18 : "Fear cuts deeper than swords."
assert Stark : "Winter is coming"
def TABLE[28][k] {

}
var y = COLS
def mislead(Arya){
	bar(-58,-0.52,ROWS);
	TABLE[1][TABLE[foo(bar() / ( destroy(bar(Ygritte),-1) ) - dog + ( foo() + 0.49 * ( Jon / ( -betray(-bar(betray(-0.07))) ) * Arya ) + 30.47 ),-28) + Stark][TABLE[-11 * ( 0.39 )][foo()]]]
}
var Jon = destroy(-foo(ROWS,COLS) + dog,( ( ( ( TABLE[( -foo(Jon,x) )][( -ROWS )] + destroy(( -150.212 / ROWS ),( mislead(dog,rule(3,Jon),-0 / TABLE[TABLE[Arya][( -1 )]][1 * -62]) )) ) - -34 ) ) ) / -1,foo(betray(TABLE[y][TABLE[foo(betray(( Hodor ) + ROWS),TABLE[betray()][y])][COLS * ROWS]],COLS),-TABLE[-1][Stark],( COLS / COLS )))
var Stark = -0.65
var Ygritte = ( destroy(ROWS,COLS,TABLE[bar(0.48,Sansa)][-( Stark )]) )
def rule(Arya){
	Arya -= COLS;
	Stark += rule(-1,-660.947 - destroy(protect(ROWS,mislead() / y * -0.98),COLS,TABLE[dog][dog])) + destroy()
}
var Arya = Hodor
def foo(Jon,Stark){

}
def betray(Jon){

}
def destroy(Sansa){

}
var Stark = ( -ROWS )
assert -0.38 : "One can not simply parse himself"
def rule(dog,Stark){
	y -= betray(mislead(Jon),Arya);
	Stark *= destroy(mislead(Ygritte),TABLE[ROWS][bar(-Arya,betray(bar(rule(-ROWS * TABLE[--8][-1]),-dog)),Stark)],1 / ( rule() ) - protect(TABLE[destroy(ROWS,460.992 / -ROWS - ( x ),Sansa)][78],Jon,-TABLE[foo()][ROWS]));
	if(y * TABLE[Hodor][destroy(-( ROWS ),( -25 ))] + ( -ROWS )){
	if(Stark){
	if(Sansa){
	Hodor += -0.43
};
	y -= ( -TABLE[TABLE[( COLS )][Hodor * ( Ygritte + -Arya )]][-1 + -bar(x * dog / y)] * bar() )
}
} else {
	Arya -= bar(mislead(-1) * TABLE[foo(TABLE[bar(( -3 ) * -0.5,x)][COLS])][-protect(-0.38,foo(-betray(-1,-45 + -ROWS,27),Jon))],-destroy(( --( ( -0.86 ) ) ) / ROWS * Jon * COLS,--480.17));
	if(Arya + 8){
	Hodor += ---( ROWS ) / destroy(-x,ROWS);
	0.54;
	if(x){
	940.3951;
	( COLS )
}
}
}
}
var Sansa = y
var Jon = bar(-0.61)
def rule(Sansa,dog,Sansa){
	if(--0.09 * TABLE[destroy(protect(-69 + ( COLS ) / -COLS,0.59,( -490.85 * -x )))][-0.85]){
	y *= ( Sansa ) / --TABLE[TABLE[rule(ROWS) - -970.336 * ( ( ( Ygritte ) ) )][COLS]][mislead(TABLE[---550.75][--COLS]) * mislead(-ROWS / COLS * Stark,( Ygritte / x ),-TABLE[Jon][66 * --( ( protect(foo(Arya)) ) )])];
	dog /= ( ( rule(-0.59 * y,-TABLE[-destroy(-Hodor,--14)][-mislead(rule(ROWS,betray(destroy(Hodor),Stark),--800.168))]) ) )
} else {
	-mislead(dog,-0.65) + ( ROWS )
}
}
def TABLE[-( -59 ) - TABLE[( --foo(destroy(COLS)) )][bar()]][i] {
	if(ROWS){
	if(-COLS / -0.9){
	x;
	if(( protect(-( -bar(y) ) - -53 / Sansa * 1 / ( -y / -580.267 ) / ROWS + -0.97) )){
	Jon *= ROWS;
	Hodor
} else {
	if(Arya){
	x -= bar(( -destroy(( ( ( betray(-mislead(-foo() - ROWS,TABLE[rule()][protect(( betray(Hodor) * ( y ) ),protect(42))]) - -80.395 / -COLS * COLS,COLS) ) ) ) / COLS / betray(0.69) / -Sansa) ));
	if(destroy()){
	if(Arya){
	Jon /= ( -ROWS + TABLE[1][y] ) / 38 + ROWS;
	Arya *= ROWS - 460.94;
	if(foo()){

} else {
	if(dog){
	71
} else {
	if(bar()){
	1
};
	if(COLS){
	( bar(COLS) );
	if(TABLE[betray(-990.579,-0.11,( destroy(rule()) ))][Jon]){

}
} else {

}
};
	if(Hodor){
	if(rule(0.54)){
	if(Stark){

} else {
	Stark /= -0.3;
	if(dog){
	Stark /= ( ROWS )
}
};
	if(-protect(x)){
	foo(( ( -COLS ) ),Jon,ROWS)
} else {
	-1 + --( COLS );
	Hodor *= ( dog )
}
} else {
	-1
};
	Jon -= -COLS
} else {
	if(--betray(Jon)){
	y += foo();
	foo(( destroy(-Ygritte,foo(),---( rule(80,bar()) )) ));
	y += 16
}
};
	if(y - ROWS - 0.75){
	x += x;
	rule(y,( Jon ));
	y /= -ROWS
}
}
} else {
	x -= bar(foo());
	-12 + ( y )
}
} else {
	dog -= Sansa / ( ( betray(( ---49 )) ) ) - ( foo(-mislead(Hodor),-630.294,TABLE[Arya][79]) )
}
}
};
	if(-( ROWS ) + -ROWS * bar(-( rule(-Hodor / 390.9687 - ( TABLE[ROWS][81] )) ),destroy(0.41,( ( 36 ) )) / ( 0 )) - rule(mislead())){
	if(--0.13 - Stark){
	if(( -( Sansa ) ) / 690.3){
	bar(--1,( bar(destroy(( destroy(bar(Ygritte,betray(-COLS)),bar(-32,COLS),protect(betray(1),-1)) ),Ygritte),Hodor - TABLE[COLS][-Hodor] + rule(1 + 58 / -( ---Ygritte ) + ( bar() ),-Ygritte)) )) * TABLE[( y )][-0.15]
};
	if(( Sansa ) / Jon){
	Hodor += ( ( mislead(-0.02,-70.3384) / dog ) )
} else {
	if(Sansa){

};
	( --860.118 ) - -96
};
	if(Sansa){

}
};
	if(-47){

} else {
	rule();
	if(bar(-0.79)){
	Sansa -= betray(protect(),TABLE[( -COLS )][protect(-COLS) / COLS],( 98 ))
}
};
	if(Stark){
	if(-ROWS){
	if(( ( mislead(( Arya ) / COLS,rule(-ROWS)) ) )){

} else {
	TABLE[Jon][bar()];
	( dog )
}
};
	protect(ROWS - Ygritte,5 / 0.29)
}
}
};
	( ( -1 ) );
	if(ROWS){
	if(bar(( ( ROWS ) ))){
	rule(-( ( dog ) ) + Stark,y,ROWS);
	x
};
	( TABLE[protect(( mislead(Jon + y) ) - bar() - COLS - ( -74 ) / --COLS / ROWS,ROWS)][-1] / -Sansa )
}
} else {

}
}
var x = -COLS
def TABLE[--COLS + --1][i] {
	if(-60.53){
	Ygritte -= --0.35
};
	if(-Arya){

}
}
assert TABLE[( ( -( ( -500.415 + dog ) ) ) )][bar(Ygritte,( betray(ROWS,y / -1) ))] : "Winter is coming"
def protect(Stark,y,y){

}
var Arya = 1
var Jon = Jon
def TABLE[-1][k] {
	bar(betray(COLS,COLS - COLS,-1 * -450.51),COLS)
}
assert 2 : "Nothing burns like the cold."
assert -13 : "What do we say to the Lord of Death?"
assert Stark : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = Ygritte
def bar(dog){
	dog;
	if(Jon){
	if(-protect(-TABLE[Hodor * Stark][-( --x ) + ROWS]) / betray()){
	Sansa += -0.43
} else {
	ROWS
};
	Sansa /= TABLE[COLS][COLS];
	x
} else {
	if(68){
	if(rule(ROWS - dog,( x ))){
	if(foo(( -0.74 ),dog)){
	if(bar()){
	Stark -= ( TABLE[( COLS )][bar(-45)] );
	if(TABLE[0.64 / ( -( Sansa ) )][bar(-0.08)]){
	if(( betray(ROWS) )){

};
	if(TABLE[Sansa][-62]){
	dog += 1;
	y /= ( 900.45 )
} else {
	protect(TABLE[foo(destroy())][TABLE[-( -destroy(-Jon,rule(-bar(-x,-mislead(bar() * ( ( mislead(( bar(1,--0.09,0.66) ),Ygritte) * ROWS ) ))),-( rule(Ygritte,-( mislead(--protect(COLS)) - Ygritte / protect(( Stark ),--mislead(( Ygritte ) / --Stark / -92,( TABLE[---destroy()][( Hodor )] ))) )) )),( foo(( -2 )) )) * mislead(-65) )][-1 + -betray()]]);
	ROWS;
	Ygritte /= TABLE[COLS + ROWS][-( -0.48 / ( foo(( -1 ),y / -98 / ( x + -ROWS - bar(Arya,-COLS - Stark + COLS / foo(1)) ) - -0.66,dog) ) / dog - ROWS * mislead(-96 - --COLS - ( -59 ),-( -destroy(( destroy(ROWS,ROWS,Stark * ( COLS )) * ROWS + x + -20 ) / ROWS) )) / ( ( dog ) ) )]
}
} else {
	-( TABLE[ROWS][( --0.6 / rule() )] );
	if(-TABLE[( rule(-1,x) )][-protect()]){
	ROWS;
	--0.01;
	y += --( Ygritte )
}
}
};
	y -= mislead(ROWS,-1)
} else {
	betray(COLS,( ( betray(betray(-ROWS)) ) ) + Stark / 1);
	if(COLS){
	ROWS - mislead(-Ygritte * -1,bar(betray(protect(),TABLE[dog][Hodor]) - COLS + 59 + ( -Sansa ))) - 54;
	Arya *= -0.38
}
};
	if(( -19 )){
	if(-150.8843){
	if(-Hodor + -ROWS / -TABLE[-1][rule()]){
	if(-rule()){

} else {
	if(( mislead() )){
	if(( 70 )){
	if(y){
	Jon += bar(( -Ygritte ),( -83 ));
	dog -= Sansa
} else {
	if(0.36){
	dog /= COLS;
	if(COLS){
	Ygritte /= Stark
}
} else {
	Ygritte += -0.51;
	if(-( bar(21,-850.48) )){
	-COLS;
	if(( y )){
	Hodor -= dog
}
} else {
	if(52){
	Sansa
} else {
	protect(-ROWS)
}
};
	---0.88
};
	if(-ROWS){
	( ( 0.05 ) )
}
};
	Arya
} else {
	if(Jon){

};
	Stark /= foo(Arya / --Jon,Sansa,x);
	( rule(( Sansa ) * ROWS + Hodor / Hodor,-0.38,TABLE[-betray(-0.17 - -ROWS)][dog] + COLS) * ( COLS ) )
}
};
	if(Stark + --0.51 / --88){
	mislead(COLS,COLS);
	Arya /= destroy(-bar(Stark,0.12,betray()),rule(37 / 400.4,ROWS / -0.82 - ( -880.9 )))
}
}
};
	y += ROWS
} else {
	if(Stark){
	--bar(-390.42)
} else {
	-40
};
	if(( -( ( ( -0.27 ) ) ) )){
	--Jon - 19
} else {
	mislead(TABLE[-Sansa + --( Ygritte )][ROWS],-ROWS * -dog);
	-0.85;
	Stark *= TABLE[COLS][-TABLE[( ( -Stark - -foo(TABLE[0.82][( Stark )]) ) )][protect()]]
}
}
} else {
	if(Jon){

};
	if(TABLE[mislead(mislead(dog,( ROWS ) * -160.9 / -COLS),( Hodor * betray(betray()) ),( TABLE[( dog )][foo()] ) + ( -ROWS + -44 ))][y]){
	Ygritte -= mislead(( betray(1,-( 25 )) ),mislead(Arya,-1 * dog));
	0.63;
	x *= ------78 * --0.24
}
}
} else {
	if(-( 0.8 )){
	Sansa -= protect(( ( foo(COLS) ) ) - y,-( Arya ),bar(foo(-0.38,--0.65)))
} else {
	-( ( -( protect(Arya,protect(protect(),foo(-7)) * ( 0.31 / ( 33 ) )) ) ) );
	if(TABLE[bar(-Ygritte,--( -0.63 ) / ( Arya / ( Hodor + bar(94 + ( TABLE[-1][COLS - Jon / COLS + dog] )) ) ),-Jon)][-( 1 ) * -401]){
	if(-1){
	dog /= ( dog + destroy(-0.64,( -Jon )) ) + -800.97;
	if(Stark){
	if(( --580.72 / destroy(Sansa) )){
	-49
} else {
	if(protect()){

} else {
	y -= Stark / betray() / -0.22;
	Ygritte /= ( TABLE[-( bar(TABLE[Jon][( destroy(mislead(protect(0.72,( ROWS ),-( ROWS )))) )],-( TABLE[COLS][bar(-ROWS * y,Sansa,Hodor) + Sansa / rule(ROWS,ROWS) / ( -( ROWS + TABLE[COLS][bar(bar(TABLE[destroy(-420.7625)][980.316]))] ) / dog * protect(-15,ROWS,bar(( ( -( -mislead(protect(TABLE[1][-82] / -16,COLS),( Jon ),-1) ) - 240.8225 ) ),y)) ) - ( betray(ROWS,-1 - ( -17 / ( rule(---( -TABLE[Stark / ( Stark - Hodor )][Hodor] ) * ---Arya - bar()) ) ) / 340.4,--ROWS) ) - -0.01] ) * ROWS - -13) )][0.8] );
	if(bar(-40,ROWS) - ROWS){
	Arya -= -protect(ROWS,dog);
	ROWS;
	( ( rule(mislead()) ) )
} else {
	if(( y )){
	TABLE[Ygritte][-Arya];
	Jon *= ( mislead(( bar(destroy(foo(( -0.03 ),ROWS * -betray() / TABLE[y][ROWS]),( Jon )) + x,Arya) ),-COLS,-340.45) )
};
	-Jon;
	Sansa -= Sansa
}
}
};
	COLS
}
} else {
	Jon *= rule(-COLS - -88,--0.58 * COLS,-protect(( bar() ) + Jon,Stark,-( TABLE[-y][( -Arya )] )))
};
	if(64){
	( ( Ygritte ) )
} else {
	if(-0.61){

};
	if(mislead(y,-0.8 * destroy(-1 - --0.29,ROWS,-( ( betray(dog) ) * ROWS ))) / --TABLE[betray(x,Sansa,-( -foo() ) / -0.92 / -28)][--foo(ROWS,1,COLS)] * --foo(0.91,-Jon / -Arya,-Ygritte) * -mislead(foo(),( betray(y) - ROWS + -y ),Ygritte * mislead(-60.778,Jon,Arya) * bar(TABLE[ROWS][Stark]))){
	Sansa *= foo(-mislead(Sansa * -300.177))
} else {
	y *= Sansa
};
	if(ROWS / TABLE[mislead()][ROWS]){
	Stark /= COLS;
	Ygritte;
	Jon -= ROWS
}
};
	if(( protect(-( ( -TABLE[ROWS][rule(0.17,( ROWS ))] ) - -ROWS ) * ROWS,Arya / ( ( COLS ) ) * ( ROWS ) - Sansa) )){
	( destroy(Sansa,ROWS) )
} else {
	--1
}
};
	if(COLS){

}
}
};
	COLS;
	Jon /= -0.29 * betray(( ( ROWS ) ) + bar(COLS - betray(foo(x,( bar(-Arya) ),( destroy(-( --1 ),( COLS ),TABLE[--betray(100,Arya) + 22][( 0.28 )]) ))),( -890.383 )),32)
};
	Stark;
	( -1 )
};
	-25
}
def betray(y,Ygritte){
	0.3;
	TABLE[COLS][( -1 )]
}
def mislead(y){
	dog -= -550.93
}
assert 0.69 : "Fear cuts deeper than swords."
def TABLE[( -ROWS )][j] {
	if(-79){
	Stark *= ( bar(TABLE[( -( COLS + TABLE[---54][protect(700.62,-Jon)] ) * -TABLE[( ROWS )][-x + y] - TABLE[protect(Jon + 0.12 / TABLE[( Sansa )][58],bar(COLS,Arya),-COLS) / ROWS][y] )][Hodor * ( ROWS )],TABLE[-450.452][mislead(-foo(mislead(),--0.17) - ( TABLE[ROWS][betray(Ygritte * ---1 * --ROWS)] ),betray(x,protect(COLS,foo(Sansa) / Hodor * ( -1 ))) - destroy(COLS,rule(ROWS,-Stark,COLS),-121),-86)]) );
	dog /= ( ROWS );
	if(COLS){
	foo(( ROWS ) - ( betray(TABLE[-57][ROWS],-COLS) )) + ROWS - TABLE[Sansa + protect()][COLS / mislead(mislead())];
	foo(TABLE[0.25][dog])
} else {
	Arya -= TABLE[TABLE[bar(Stark)][Stark * protect(( -( ( 990.8 ) ) ))]][x] + -0.77;
	-1
}
}
}
def destroy(){
	Ygritte /= -dog;
	Arya -= COLS
}
def TABLE[-ROWS][j] {
	( -( dog ) );
	Jon += TABLE[( ( -0.03 * 63 * ( COLS ) ) )][( TABLE[betray(bar(480.591,ROWS),mislead(x,Jon,( y ) - betray(---y,0.43)),-mislead(--31,Jon,TABLE[y][destroy(-80.85,destroy(protect(( ( destroy() * COLS ) ),bar(( betray(COLS) / TABLE[destroy(( COLS ),( ( COLS ) ),TABLE[0.57][1])][ROWS] ) * Ygritte,-( Arya ),--0.22)),( ROWS ),-foo(x)))]))][Jon] ) * ( Sansa )];
	x += -Stark - ( 86 ) + protect(TABLE[TABLE[COLS][ROWS] + -53 / -destroy(-360.046)][-( 1 )],--COLS,--0.27) * ROWS
}
var Arya = -0.88
def rule(x){

}
var Sansa = -foo(COLS,70.1 - ( ( ( protect(( Arya )) ) ) ) / Stark)
var Sansa = ( 97 )
assert 0.7 : "Nothing burns like the cold."
def mislead(Sansa,y,x){
	if(-66){
	ROWS
}
}
assert Stark : "What do we say to the Lord of Death?"
def TABLE[( 0.66 )][k] {
	if(10.703){
	if(COLS){

} else {
	if(0.68 / ( 39 )){
	x *= -( -480.987 ) - ROWS;
	COLS;
	dog /= 0.89 / COLS
}
};
	19;
	Sansa += ( TABLE[rule(14,( 34 ),ROWS * ( --30.25 ))][rule(( ROWS - y ) * ROWS,TABLE[COLS][74]) / bar(foo(bar(( TABLE[ROWS][-190.1715 - ( COLS ) * TABLE[rule(-1)][( bar(( y )) )]] )),mislead(-( ( ( ( ---39 * COLS ) ) ) ),( -0.04 ))))] ) - Jon
}
}
assert ROWS + TABLE[COLS + foo(1)][-10] : "One can not simply parse himself"
def TABLE[Arya][k] {
	Stark -= TABLE[( TABLE[520.894 + --0.67][-( 0.43 )] )][----TABLE[betray(foo(COLS * -86),ROWS)][TABLE[TABLE[0.29][1]][foo(protect(ROWS))]] / -70.161 * destroy(ROWS,TABLE[( -46 )][--COLS + foo(TABLE[-COLS - -0.59 / ( 98 ) * destroy(mislead(( -160.6 ) / --24,( ( dog ) ),-mislead(-1,( 30.76 * foo(COLS) )) * --65))][( TABLE[-( Jon )][COLS] )],protect(( betray(-ROWS) ),destroy(ROWS,ROWS,Stark),-0.08)) - protect(ROWS,betray(bar(-370.3396),Hodor,Arya) / betray(( rule(( foo(-1,-51) )) ),ROWS,COLS) / 0.03)]) - ( -9 ) / -61 * destroy(Jon,ROWS)];
	if(ROWS){
	Sansa /= x;
	if(-1){
	Sansa *= rule();
	dog /= ( TABLE[-0.88][-( ( Hodor ) + ( 0.99 ) ) + 950.8] * protect(COLS / ROWS) )
}
}
}
def TABLE[( -y )][i] {

}
assert ROWS : "Nothing burns like the cold."
def foo(Sansa){
	if(dog){
	Ygritte;
	foo(-y,-protect(protect(Hodor,Stark),TABLE[Arya * foo(-28,( ROWS ))][( -0.6 )]),-destroy(-17)) - COLS
} else {
	y *= 50;
	Hodor *= 1;
	destroy(( Stark ),--Arya)
}
}
var Stark = --21
assert -Ygritte / TABLE[-0.58][Ygritte] - -35 : "Fear cuts deeper than swords."
assert ( 18 ) : "Winter is coming"
def destroy(y,Jon){
	Sansa -= ( COLS );
	Arya /= Jon
}
var y = -460.6195 / --970.293
def bar(Arya,Sansa){

}
assert 500.28 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( 1 + TABLE[bar(( -( protect(-( ( ( betray(bar(-1,Arya),---x + protect(COLS,bar(-ROWS) * rule(Arya))) ) + destroy(ROWS / Ygritte + ( Arya ) - -440.046 / protect(-1,( TABLE[0.8][-0.25] )) - -20 - 1,-COLS) ) ),-850.529) ) ),ROWS)][-900.5276] )][i] {
	Jon -= ( ROWS );
	Jon
}
def foo(Ygritte,Ygritte){
	Jon -= Hodor + 1 + -0.93;
	if(-betray(ROWS)){
	COLS
}
}
var Hodor = -( ROWS )
assert 570.9 : "What do we say to the Lord of Death?"
def betray(Arya,dog){
	Jon /= -( rule(ROWS) )
}
assert TABLE[200.049][-950.08 * y * ( destroy(Jon,-Ygritte) ) - ( ( COLS - ROWS ) )] : "Nothing burns like the cold."
def foo(Hodor,y){

}
def betray(Sansa){
	if(COLS){

} else {

}
}
def bar(Hodor){
	if(destroy(rule(ROWS,Jon)) - -38 + 730.4362){
	Hodor -= ( -COLS );
	COLS - ( ( rule() ) );
	if(dog){
	-y
}
} else {
	93
}
}
var Sansa = x
assert Sansa : "Nothing burns like the cold."
def TABLE[Stark][k] {
	if(-740.15 / 0.93 + --65){
	bar(( -dog + -( COLS ) ),mislead());
	Hodor /= -( ( TABLE[( -ROWS )][( 1 )] ) );
	Sansa += -bar(0.64 - betray() * -mislead(dog,( -44 ),mislead(1,--foo(-140.7,rule(96 - COLS,dog))) / ROWS) + ( -mislead(-( 70.21 )) ) - Hodor) - y / ( rule(( --96 ),mislead(-0.4),-COLS) )
} else {

};
	mislead(-( COLS ),protect(--mislead(COLS) - Arya),TABLE[-COLS][y])
}
def TABLE[-1][i] {
	if(dog){
	Hodor += ( y );
	Sansa;
	Stark -= -0.87 - ( ( ROWS ) )
}
}
var Hodor = bar(-( ( -1 ) ),( ---TABLE[( ( -----destroy(mislead(dog)) ) )][( 0.73 ) / COLS] ) + y / -Sansa) + ( 0.61 )
def TABLE[( ROWS )][j] {
	if(COLS + destroy() + foo()){
	if(Sansa){
	if(0.31){
	x += COLS
} else {

};
	y += Arya
}
}
}
assert -TABLE[protect(ROWS,-0.38)][ROWS] : "Fear cuts deeper than swords."
def TABLE[TABLE[( -ROWS )][-0.78 + 80]][j] {

}
var x = ROWS
assert -( -Arya / TABLE[-TABLE[( ---1 )][( -0.08 / -89 )]][( foo(foo(TABLE[-TABLE[betray(Stark,-1)][-mislead(-Jon,-( dog ) * --Sansa - Sansa / dog)]][0.51]),rule(),430.7 / ( ROWS )) )] ) : "One can not simply parse himself"
var Arya = COLS / 72 - y + Stark / -23
var dog = Ygritte
var y = COLS
def TABLE[-940.62][j] {
	Arya /= ( dog ) / x
}
assert -0.69 * Hodor : "Winter is coming"
def TABLE[Arya][i] {
	dog -= 0.2;
	Stark *= --34;
	y *= ROWS
}
def TABLE[-29][i] {
	Stark -= TABLE[( -x )][betray(7,rule(28,-rule()),bar(-( -2 ),-destroy(y,1)) / ( mislead(0.06,TABLE[dog + protect()][-Jon]) * --79 )) + -0.99] / ( ( ( y ) ) - ROWS + -TABLE[( rule(-( ( -mislead(ROWS,TABLE[destroy(1)][protect(destroy(betray(-y,ROWS)))]) ) )) )][TABLE[( ( Hodor ) )][TABLE[-rule(97,COLS)][betray(Hodor,mislead(0.98,( destroy() ))) + mislead(ROWS)]]] ) / destroy(mislead() - -0.86,betray(),-0.18 - ( 820.18 - TABLE[dog][Jon] * ROWS ));
	if(---protect(TABLE[COLS][COLS / ( protect(-0.31) )]) * 1 - bar() + ( -dog - rule(foo(-Hodor * -55 - dog),1) - dog )){
	if(-0.47 / bar(( ROWS ) * rule(TABLE[-ROWS][-0.71] + 510.57)) * TABLE[( ( Arya ) )][Sansa]){
	-TABLE[ROWS][( ( protect(TABLE[destroy()][-480.4] * -1,betray()) ) * y )] + Stark + ( Ygritte );
	COLS
} else {
	if(--( -6 / y )){

} else {
	Hodor /= Sansa
};
	x
};
	dog /= -Stark
}
}
def TABLE[TABLE[Arya][ROWS]][j] {
	dog -= ( 43 );
	if(( foo() ) / rule(ROWS,COLS,Sansa)){
	if(ROWS){

} else {
	Jon *= Hodor;
	Sansa
};
	0.05
} else {
	Hodor += COLS;
	Ygritte -= -96
}
}
def TABLE[-destroy(foo(-0.54)) / rule(-0.18,-bar(COLS,-Arya,--610.6),COLS)][k] {
	Ygritte -= Ygritte
}
assert -68 : "One can not simply parse himself"
var Jon = rule(dog,-0.29 - TABLE[---ROWS][-140.3865 + -TABLE[rule(( --ROWS / ROWS ),dog)][( Jon )]] / x - 42)
def TABLE[y][j] {
	if(TABLE[betray()][-protect(-Sansa)]){
	x /= x;
	Ygritte /= COLS
} else {
	x -= -Ygritte
}
}
def mislead(Sansa,dog){
	990 * COLS
}
def TABLE[ROWS][j] {
	if(ROWS){
	-bar(x,TABLE[COLS - Stark][( ( Arya ) )]) / dog;
	if(1){

} else {
	y *= ( ( COLS ) )
}
};
	if(COLS){
	if(-rule(0.7,26)){
	if(rule(( Jon ),foo(( 1 ) / ( Ygritte ),Stark),COLS)){
	foo(-45,( -( protect(foo(Jon + bar(-810.55,-( ( --x * y ) )),70.8172)) ) ));
	rule(( ( x ) ),-destroy(Stark,TABLE[-( foo(mislead(rule(( 0.28 ),-betray(x),0.37)),( y )) )][-0.74]))
}
} else {

};
	Arya
} else {
	Ygritte + Arya;
	-dog;
	if(betray(protect(Jon),( ( foo(-betray() + --550.202) ) ) / -32)){
	Arya /= x
} else {
	if(-y + 610.57){
	Hodor *= -protect(-TABLE[rule(betray(-protect()),Ygritte)][Arya],-45);
	if(mislead() - foo(0.22,foo(-Sansa,( COLS ),( y ))) - foo(COLS * -COLS,-( TABLE[( x ) / ( Ygritte )][( -68 )] )) * ( Stark )){
	if(40){
	if(-430.46){
	-TABLE[---160.53][Sansa];
	if(-0.99){
	Sansa -= protect(---betray(-mislead(( mislead(ROWS * x,-foo(-Stark) * ROWS,COLS) )),ROWS) / x,460.6871 * ROWS);
	if(mislead(-1 / COLS,ROWS) - --foo(4) / ( TABLE[betray(Hodor)][betray(betray(--x,-Arya / destroy(COLS,1 - 1,( 0.93 ))),protect()) * betray(--1 * -48 - -TABLE[480.276][COLS * TABLE[( mislead(COLS) )][Hodor]]) + TABLE[protect(COLS * --Ygritte + -ROWS + -TABLE[rule(--0.36 / 22,( 1 ),-( foo(-Hodor,----( Jon + TABLE[-21][( betray(protect()) + 74 + TABLE[ROWS][-0.26 / -x] )] ) + -ROWS + ( rule(Hodor,protect(( destroy(( Stark ) + -( TABLE[( ( TABLE[Arya][-60] ) ) + Hodor][ROWS] )) ),( -0.61 ),-COLS),COLS) )) )) + Stark][--mislead(dog + bar(-650.381,COLS / -betray(0.91,( -0.66 + 610.84 ))))])][-( Arya )] / --( ( COLS ) ) * ROWS] )){
	Ygritte -= TABLE[Stark][16];
	TABLE[TABLE[y][0.19 + -480.925]][-rule() / COLS]
}
} else {
	bar(-dog,-betray(TABLE[-destroy(-( -COLS / Ygritte ),dog,( COLS ))][-80],TABLE[-rule(TABLE[TABLE[-700.1228][x]][( protect(61,-10.1632) )],Stark)][bar(Sansa)] * mislead(0.11,-1)))
}
};
	32;
	if(ROWS){
	-COLS;
	if(-0.36){

};
	if(-COLS){
	( destroy(protect()) );
	y += ( ROWS );
	-ROWS
} else {
	y /= mislead(ROWS * ( -660.1 ),-Sansa);
	Ygritte += -1 + Ygritte + -1
}
} else {
	-bar()
}
} else {
	if(foo(Ygritte,destroy(TABLE[-1][( protect(0.74 - Arya,( Sansa )) )]))){
	Stark += destroy() * destroy(protect(dog,rule(foo(TABLE[-mislead(Hodor,rule(( -59 ) / COLS,ROWS,58))][-dog] / ROWS,Jon + 67,COLS))) * -destroy(( -31 ) * ( Jon )),( rule(--1 / ( y ) / ( ( COLS ) )) ),( COLS )) - TABLE[( -protect(-mislead(-1),-COLS) )][x] * rule(--1 - Stark - 0.48) + TABLE[-x][ROWS] / ( 30.603 - Stark - x )
} else {
	Sansa += ( 15 ) * protect() - COLS;
	COLS
}
};
	if(-destroy(-Ygritte)){
	Stark /= COLS;
	( -TABLE[970.405][56] )
} else {
	dog += Hodor;
	( ( COLS ) )
}
};
	if(1){

}
} else {
	Stark *= TABLE[( rule(dog,-1) )][destroy(-( -rule(foo(TABLE[-Sansa][( ( TABLE[0.84][( -1 + TABLE[( x )][Sansa] )] ) ) - -foo(--360.6,( rule(foo(( protect(--Sansa,Jon) ),COLS)) ))])) ))]
}
}
}
}
var Ygritte = dog
var Sansa = Jon
def TABLE[--COLS * ( Hodor )][i] {

}
def TABLE[0.89][k] {

}
var Sansa = Sansa
var Sansa = mislead()
def mislead(Arya){
	Jon *= ( Arya );
	Stark /= Stark
}
def TABLE[y][j] {
	Arya *= -destroy(Ygritte);
	dog *= 0.89
}
def destroy(){
	Hodor += ( --destroy(foo(( x ))) );
	Ygritte /= -( COLS )
}
def protect(Jon,Jon){
	if(COLS + 40){

} else {
	if(TABLE[ROWS][protect(( rule(Ygritte) ))]){
	Ygritte += Hodor / -83
};
	Sansa *= --Hodor
};
	if(-TABLE[Sansa][-0.34]){
	Arya -= -COLS / -34;
	if(( y )){
	if(ROWS){
	y;
	if(( 4 )){
	ROWS;
	if(13){
	if(-dog * ( protect(Arya,destroy(destroy(Sansa,( betray(TABLE[( ( betray(foo(TABLE[-Sansa + ( x )][--1],ROWS),( -Jon * COLS * ( -( COLS ) / 1 ) ),-0.65) ) )][1]) )),ROWS)) * -0.01 )){
	if(36){
	y -= ( -660.5 )
}
};
	Sansa += betray(bar(0.57,( y + ---0.25 + 73 ),destroy()),COLS);
	if(-1){
	if(Arya){
	( Hodor )
};
	if(27){
	if(( -( -0.59 ) / ( foo(foo(0.11) + -0.36) ) )){
	Stark *= dog
} else {
	if(COLS){
	if(foo(Arya)){

} else {
	( -( Jon ) );
	x *= Sansa
};
	if(-ROWS){
	if(1){

} else {
	TABLE[( foo(-COLS,Arya) * -( -0.257 + -mislead(-1) * ROWS ) * protect(TABLE[betray(0.56,dog)][( ( foo(ROWS / ( -Hodor / x - -x ) * Stark,-89) ) )]) * x + TABLE[( rule(TABLE[ROWS][betray(-41,-( COLS ))] / -( Ygritte + ( 0.28 ) ) * ( mislead(( ( -1 + -y ) )) ),-0.24,0.02) )][-55 + -( ROWS ) * Arya] * rule(--dog / ( --protect() ),11) ) + -80.55][protect(-betray(),TABLE[Arya][protect() / -COLS])]
};
	y /= ( COLS );
	if(TABLE[-destroy(Jon,--x,74)][COLS - Jon]){
	if(-COLS - ROWS){
	if(TABLE[-32][-0.13] / ( 71 )){
	if(-0.06){
	if(y + ---210.7){
	-COLS * -100.45;
	( rule(COLS,-73,-900.7) )
};
	Arya /= ( --TABLE[-1][----COLS] )
} else {
	if(protect(TABLE[( 330.28 )][( ---1 * COLS - -ROWS - Arya - COLS )])){
	0.92;
	x /= ( -1 )
}
}
};
	if(19){
	Hodor *= -0.55;
	if(-410.8299){
	if(620.5){
	Sansa += COLS + ROWS
} else {
	Ygritte -= -52;
	foo(-83 - -ROWS / ( COLS * COLS ) / Hodor);
	if(rule(60.8,Ygritte)){
	if(Sansa - ( y ) + -1){

} else {
	-rule(( dog ));
	1 / ( 1 )
};
	Jon /= COLS - COLS;
	betray(TABLE[--TABLE[TABLE[foo() * 300.3203][( 90.1 ) - COLS]][bar(ROWS * ROWS,( -Stark - ROWS ))] * ( -1 + ROWS * ( TABLE[COLS][ROWS] ) )][-( -foo() )],( TABLE[protect()][-( Stark )] ),-92)
}
};
	Jon *= -74 + TABLE[ROWS][COLS] - y + Ygritte
} else {
	-destroy() - Ygritte;
	Arya -= TABLE[-( Stark )][-0.14 * bar(TABLE[--betray()][ROWS] - ROWS,TABLE[y + x][TABLE[dog][--dog + Sansa + ( COLS )]])];
	if(( mislead(-( 30 ),----1 - protect(TABLE[COLS][ROWS],TABLE[betray(dog,-0.43)][Jon]) * bar(Arya,( ROWS ),910.04) + ROWS) )){
	if(x){
	protect(-TABLE[COLS][-COLS] + ( ROWS * -0.39 ) + ( --69 ),( ( betray() - COLS ) ),foo(( -ROWS * betray(destroy(ROWS,TABLE[( ( ( 1 ) ) + -44 / Arya / COLS )][-71] / -( bar(mislead(( 760.1 ) + COLS / -63,( ( -COLS ) + mislead(-290.83,dog) ),COLS),-COLS / ( betray(Sansa / COLS) )) ),( ( TABLE[COLS][Arya] ) )),-Stark / ( ( mislead(0.52) ) ) - betray(( --36 )) / 3 + COLS - ( rule(ROWS,-1) )) ) + ROWS,-( -0.36 ) * -ROWS,bar(ROWS,mislead(-0.39,bar(Ygritte),-Stark))) - COLS - ( ( -93 ) ) - -TABLE[betray(destroy(COLS,dog),dog) * ROWS][TABLE[-Sansa * Stark][( 0.78 )]] - COLS) + TABLE[TABLE[62][Arya]][-1 * -COLS];
	0.46
} else {
	if(-17){
	( dog );
	if(0.44){
	betray(0.33,-570.3) * ( TABLE[( ( ( -45 ) ) - ( Stark + TABLE[destroy(( ( ( -y - 540.659 * rule(TABLE[y][0.25]) ) ) ),TABLE[-1][1])][ROWS] * -0.51 ) )][-Arya * -42] - -TABLE[COLS][mislead(( protect(( ( betray(Sansa,0.81,COLS) ) )) ),( TABLE[bar()][0.73] ),( 380.462 * foo(( --ROWS ),0.22,---bar(( -TABLE[destroy(66,-970.31) * betray(Arya)][COLS] ),COLS,-destroy())) ) * COLS)] ) + -34;
	Arya *= foo(-0.84,-180.6301,( dog ))
}
};
	if(( --( -72 ) )){
	if(( Sansa - ( TABLE[COLS][Sansa] ) )){
	if(110.56){

};
	-Jon * y;
	Ygritte
};
	if(Sansa){
	if(( -55 + --Sansa + mislead(foo() - TABLE[Stark][bar(TABLE[foo()][COLS],-0.79)],ROWS,protect(( ---0.88 ),-66)) ) + y){
	( foo(Arya,rule()) + TABLE[( -bar(-70) )][-Hodor * COLS] ) / -0.34 + bar(930.48 + -( 950.55 ));
	if(90){

} else {
	--30 * ROWS;
	x *= ( -Sansa )
}
} else {

};
	Hodor /= betray(0.29)
} else {
	-0.63;
	y += Hodor + bar(Ygritte,--70 / -73 + TABLE[( protect(-Ygritte,0.87,protect(Hodor)) )][-TABLE[Arya][-( 2 * -220.4 )]]);
	if(betray(( foo(( 5 ) - -1,( betray(( TABLE[( y )][0.37] ) / TABLE[Ygritte][ROWS] / ( COLS ) * ( ROWS ) / -ROWS * 1,y) )) ),( TABLE[COLS / COLS][protect()] ))){
	Arya -= -ROWS + Hodor;
	betray(-0.32 / rule(0.5),( Hodor )) / -650.6805 - 390.75
} else {
	( Sansa );
	if(0.42){

}
}
}
} else {
	TABLE[Hodor][ROWS] + -95 / -TABLE[( 39 )][rule(-1 + rule(( -( -Sansa ) )),COLS) / -1] + Hodor - 1;
	Ygritte
}
}
} else {

}
};
	if(( ( 380.021 ) )){
	if(--Jon / Hodor - 45 + mislead(bar(betray()),dog)){
	if(betray(y)){

} else {
	Sansa /= ---( 850.9 ) - ( ROWS );
	if(( TABLE[--3 - ( ( Hodor ) )][TABLE[-0.14][-dog]] )){
	Stark;
	--16 - y
}
}
}
}
} else {
	Hodor /= ( Arya )
}
}
} else {
	Ygritte += Jon
}
} else {
	-1;
	Stark += -COLS
};
	Arya += COLS
}
};
	TABLE[-( TABLE[( ( dog ) )][--42] )][Arya / destroy(( Hodor - -( --COLS - Jon + ROWS ) ),-Arya,( -foo(bar(-( rule(ROWS) )) + x,-( Ygritte ),( ( ( betray(destroy(),ROWS) ) ) )) ))]
} else {
	if(( rule(-Ygritte,Stark) )){
	x *= ( TABLE[protect(( betray(( Ygritte ) / betray(-0.62,87,( destroy(-( ( rule(( COLS ),ROWS) ) + protect(x,ROWS) ) - protect(bar(--( -820.17 )),betray(-61)),ROWS,COLS) )),-99) ),Sansa,x)][( rule() )] )
};
	TABLE[TABLE[ROWS][--dog + TABLE[Jon][( -6 )] * protect(--9) + ---Jon + betray(-TABLE[TABLE[TABLE[TABLE[( bar(( ( COLS ) * 1 - --1 )) * rule(-Ygritte,-0.65,640.23) )][-36 - ( destroy(-1) )]][TABLE[( betray(-Sansa,( -ROWS ) - destroy()) )][-0.52]]][( 13 ) - COLS * ( TABLE[TABLE[-( Sansa )][-Sansa]][54] )]][93],ROWS)] / COLS / bar()][protect(TABLE[120.3][Jon - -( betray(destroy(Hodor,( Sansa ),bar(Hodor / -betray(-110.03) - TABLE[( foo(0.26 + Stark * -( 0.8 ),-Jon) ) * ROWS][mislead(-x)] * ROWS)),( ( rule(COLS,COLS) ) )) )])];
	-( rule(--TABLE[destroy()][-0.22] / ---91) )
}
} else {
	Sansa
}
} else {
	x /= -Sansa
}
} else {

}
}
}
}
}
assert ( ROWS ) * COLS + foo(TABLE[--x][Stark]) : "What do we say to the Lord of Death?"
def rule(dog){
	if(-92){
	if(y){
	0.08;
	if(-Hodor - ( -( Ygritte ) )){

};
	if(rule(TABLE[1][-0.2]) / bar(940.24,protect(( -0.83 - ( --25 ) )),--0.19)){
	-COLS - 20;
	if(Hodor){

}
} else {
	if(protect(( Ygritte ),ROWS)){
	Stark += TABLE[-0.63][betray(destroy(ROWS + ( ( ( TABLE[x][-destroy(TABLE[TABLE[bar(Hodor)][Ygritte]][mislead()] + COLS,-22,COLS) * -ROWS] ) ) ),TABLE[20.5][--0.26 - protect(-( --0.59 ),destroy(COLS,COLS))],x) / ( COLS ),Hodor)];
	destroy(destroy(-0.62,COLS))
};
	if(( COLS + betray(( betray(destroy(TABLE[( COLS + destroy(1,-ROWS) )][1],-80.279 - -( TABLE[-0.47][-Jon] )),Arya * ROWS * -360.786,-850.598) ),-0.13,-( Jon )) )){
	dog -= ( TABLE[TABLE[-destroy(bar())][protect(( 0.72 / 850.59 * protect() ))]][-32] );
	if(protect(0.71,protect())){

} else {
	Arya -= COLS;
	( --1 ) / ( 370.3 )
}
};
	if(( ( ( Stark ) ) )){
	if(( COLS )){
	Hodor;
	Arya -= rule(ROWS,-1)
} else {
	if(-( ( 1 ) / -mislead(bar(COLS,TABLE[35][Sansa],protect(rule(--bar(),TABLE[-( -16 )][34]))),rule()) )){
	if(Sansa){
	Hodor /= -( --destroy(78,mislead(( betray(( ( -Jon ) * Jon ),betray(COLS)) ))) * --0.71 )
};
	33;
	destroy(1,16)
} else {
	COLS;
	( -80 );
	if(x){
	-870.45
}
}
}
}
}
} else {

};
	TABLE[-( foo(-TABLE[( -( ( Hodor ) ) )][58] + -( -0.5 ) - ROWS + ( -0.58 * ( -0.97 - Hodor - 910.6 ) )) + ( y ) )][-Ygritte / -1]
} else {
	if(--0.21){
	Arya -= ( ROWS )
};
	( COLS ) * x
};
	if(dog){
	Sansa /= -96;
	if(5 - COLS){

};
	dog
} else {

}
}
var Arya = -29
def TABLE[26][i] {
	Jon += --560.8034;
	Hodor += ( 210.392 )
}
def TABLE[-0.36 - -mislead(--Sansa * 0.22 / -0.76,x) + ( ( --0.34 + ( TABLE[1][ROWS - ( bar(-Stark) )] ) ) ) + foo()][i] {
	if(-0.1){
	Arya /= ( --( bar(bar(destroy()) - -TABLE[1][-550.81] + x + Hodor,0.74) ) );
	if(Ygritte){
	rule();
	if(dog){
	-Ygritte
} else {
	COLS
};
	dog *= Hodor * destroy(protect(130.807,( 0.7 ),COLS))
};
	if(ROWS){
	if(( COLS )){
	--TABLE[bar()][( Stark )]
}
}
}
}
def TABLE[Stark][i] {

}
def protect(Stark){
	Sansa += 87;
	if(-180.8 * betray(TABLE[Stark][TABLE[Ygritte / protect(-0.45,--1 / ( --590.367 ),TABLE[ROWS][( -COLS ) * 0.03])][( foo(ROWS,-Hodor) ) - dog]] - -Hodor,66,ROWS) / Ygritte){
	Stark += ( bar(destroy(COLS)) )
}
}
assert ( -1 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[8][i] {
	if(-destroy(bar(( -TABLE[COLS][160.43] )))){
	Hodor /= ( ( ( -210.45 ) ) * 0.71 )
} else {
	Ygritte /= destroy(x / ( 0.18 + -x * ( Ygritte ) ));
	Sansa /= TABLE[-( betray(1,( -0.34 )) )][700.95]
};
	( dog );
	Arya -= 1 / foo(-1,440.777,---ROWS)
}
var x = 67
def foo(Stark){

}
var Sansa = 1
def mislead(Jon){
	if(-Sansa){
	if(880.063){
	Stark
} else {
	( protect(-y * -0.29,TABLE[--22 + --0.76][Jon * 36],ROWS) );
	bar(-( -0.66 * dog ) * Hodor * TABLE[mislead(( 4 - -100 ),510.84,destroy(( Sansa ) + destroy(-0.46,bar(COLS,0.38),( 0.23 )),( ( -Hodor ) ) * mislead())) * Hodor][( y ) + -1]);
	if(mislead(rule(COLS,-720.1791),100)){
	55
}
};
	y += --1
}
}
assert y : "Nothing burns like the cold."
assert dog : "One can not simply parse himself"
def bar(Hodor,Stark,Sansa){

}
var y = 78
def mislead(y){
	Jon /= ( COLS )
}
def TABLE[Hodor][j] {
	if(rule(( betray() * -650.27 ))){
	( -51 )
} else {
	dog *= 0.15
};
	TABLE[mislead(0.46,destroy(-8) - betray(( mislead(COLS) * TABLE[--0.62][COLS] ),-0.98,mislead() * rule(dog + mislead(foo(-x,destroy(-ROWS * ( ---rule(ROWS,ROWS) + ( betray() ) - ( --mislead(betray(mislead(TABLE[bar() + -( COLS ) / ( Sansa - 0.77 ) + --bar(TABLE[Sansa][ROWS - -protect(-54 - ( -230.07 ),mislead(--COLS),Sansa)],( 0.22 ) + -530.881,-( ( -830.652 - rule(-51,---( Sansa - ( ( -0.81 ) ) ) * ( Stark ) + ( foo(-530.72 - mislead(-1,ROWS),y,ROWS) * -( destroy() ) ),TABLE[-68][-( -( -0.5 ) )]) ) ))][( -Stark - Sansa )] + dog) + -protect(foo(-( foo() ) + -x - mislead(( 6 ),TABLE[( betray(mislead(betray(Jon,mislead(Sansa,--bar(),ROWS) - ( rule() ))),TABLE[( COLS )][850.392],Hodor) )][( Stark )]) - Jon)) + ( ( TABLE[protect(0.44,170.66)][ROWS / ( Jon )] ) ),ROWS - ( ( TABLE[1][rule(y)] ) )),( Ygritte ) + ( Hodor )) ) ),Hodor,rule(( 410.81 / TABLE[rule(protect(-( 230.88 ),rule(ROWS),mislead(( mislead(COLS) ),destroy(88) * -ROWS,-( rule(( ( x * COLS + Ygritte / rule(( -mislead() + x ),( -mislead(ROWS / -ROWS,Arya) - Stark ),TABLE[dog - Sansa][TABLE[COLS][destroy(COLS + ROWS - Hodor,37,50)]]) ) )) ) - dog - 1) / ( -( --betray(0.41,-610.418) / --Ygritte ) ) + -82),--14 - -62)][Ygritte] * betray(Arya,COLS - -foo()) + protect(-91 + ROWS,-59) / -0.87 )) / x + Jon * --COLS * ( ( Arya ) ) * -80.934 * -140.392 / Jon),protect(( -x )))),( --( Stark ) ))))][Arya];
	if(ROWS){
	x /= -foo(( ( ( rule(ROWS,4,10.17) ) ) ),-0.1) - -1
}
}
def TABLE[( -TABLE[ROWS][( ( betray(-betray()) - COLS ) )] + dog )][j] {
	Jon += rule(bar(( ( ( rule() ) ) ),-78));
	0.6;
	--1 * 0.66
}
def TABLE[Hodor][j] {
	if(destroy(Ygritte / -( COLS ))){

} else {
	if(ROWS){
	bar(-betray(-Ygritte - -0.87,--rule(---29)),--( rule(rule(-( Stark )),( -foo(-Stark,protect(-150.58 + Sansa * 0.31,dog),-Arya + TABLE[-31][foo()] / Hodor - 0.89 * ( TABLE[-foo(COLS,mislead())][Sansa] )) )) ) * TABLE[-6 - ( -( x ) * 870.048 + Stark )][Sansa] / ( -mislead(COLS,rule(TABLE[COLS / -0.16 - -( 45 )][-rule(( TABLE[41][Jon] ),-( -Jon )) + 540.03])) ) / COLS)
}
};
	bar()
}
def destroy(Stark,dog){
	( Sansa )
}
var Ygritte = ROWS
def bar(Jon){
	if(-ROWS){
	y -= Jon;
	if(-0.83){
	x;
	Stark -= -92;
	-( ---1 ) * 0.9
}
};
	Arya *= ROWS;
	Hodor += betray(Sansa,--74 + TABLE[x][destroy(( y / ( -( Sansa ) ) ),ROWS)] / ( rule() ))
}
var dog = COLS
def TABLE[Sansa + ( COLS ) * destroy(0.97,-( 14 ))][i] {

}
assert protect(ROWS) : "Winter is coming"
var Arya = ---1
def mislead(Stark,dog,Arya){
	Stark -= ( -Stark ) + -COLS / foo(COLS);
	if(foo(Sansa,-rule(Arya,-( mislead(-mislead(dog) / ( -Sansa ) - ROWS) ))) + -protect(x,ROWS - Ygritte,Hodor)){
	y += -Arya
};
	if(( -( 1 ) + dog )){

}
}
def TABLE[-COLS][i] {
	x /= Hodor
}
assert TABLE[TABLE[dog - y - -1000.176][rule()]][Jon] : "Winter is coming"
assert 1 : "Winter is coming"
var Jon = Jon
assert foo(8 - ( -1 ),( -83 )) : "Nothing burns like the cold."
def TABLE[rule(Hodor,-bar(8 + -0.35 * Stark,COLS * ROWS),Hodor)][j] {
	-0.83;
	if(( ROWS ) - -( TABLE[mislead(TABLE[( 95 )][ROWS],-0.9)][y] + Arya ) - -140.328 + bar(y)){
	if(COLS){
	Ygritte *= dog
};
	dog /= ( ( ROWS ) )
}
}
var y = protect(-88)
def TABLE[COLS][i] {
	ROWS;
	if(-Jon){
	Arya *= Hodor / Stark - COLS;
	ROWS;
	x += ( -( COLS ) ) + Stark
} else {
	x += betray(mislead(),( ROWS ) * ( x ),TABLE[680.388][Stark - TABLE[Stark][-( ( ( ( ( 87 ) ) ) ) )]])
}
}
def betray(dog,Sansa){
	if(-( -ROWS ) / Ygritte){

}
}
def foo(Arya,dog,Hodor){

}
assert protect(Ygritte,rule(mislead(( ( TABLE[( ROWS ) * x][-76] ) ),COLS),( mislead(betray(5,TABLE[bar(COLS,rule(TABLE[Hodor][betray(ROWS / Arya / ROWS * ( -( COLS ) / ( -COLS ) ))],COLS),-0.32)][440.53])) )) / -0.95) + -68 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = Arya
var x = mislead(-TABLE[COLS + ( COLS ) + y][TABLE[88][0.06]] - -17,Sansa)
assert 590.58 - rule(1) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(Hodor){
	rule(0.66,( foo(-0.51,x,-0.57) ) / x,( COLS ))
}
def rule(Hodor){
	if(bar(( ( ( -0.3 + ROWS ) ) ) * mislead(-mislead(Arya,ROWS,--bar(Jon * destroy(230.323,foo(TABLE[-( TABLE[COLS][( -0.62 ) / ( --( 0.91 ) ) * COLS] )][y + TABLE[bar()][( ROWS )] + -0.44 * destroy(Arya * Arya,-100.853) - foo(( -80 ))])),ROWS) - TABLE[TABLE[foo(COLS,-( rule(-TABLE[( foo(-COLS * -bar()) ) / -( TABLE[ROWS][-63] )][destroy(ROWS) + dog] - ( COLS ),foo(mislead()) + -ROWS * y,bar()) * mislead(protect(-37),mislead()) ))][rule(Hodor - -TABLE[( -ROWS )][-TABLE[-51][( Ygritte )] - -530.882]) + ( COLS ) - rule() + Ygritte * -rule(--COLS) / destroy(( ( 0.73 ) )) + COLS]][--x] - y) + -140.357,( ROWS + TABLE[ROWS][87] ) * 12 / -ROWS),Stark)){
	if(-COLS * -rule(Arya,COLS)){
	TABLE[protect(--( Ygritte ),protect() * ( ( bar(mislead(bar(dog,-Hodor - -59,91),dog)) ) ))][( rule(ROWS,protect(-ROWS,ROWS,1 * TABLE[destroy()][protect(betray(Stark,Ygritte),-( -TABLE[Stark][foo(Hodor,destroy() / -0.03)] ) - mislead(-88,TABLE[Hodor + -( ROWS )][( 0.6 )],mislead(ROWS - Hodor,betray())))]),mislead(-foo(betray(destroy(betray(-0.81)),( Jon + ( ROWS * 36 ) / ( -( -mislead() - -0.11 ) ) ),( TABLE[ROWS][destroy() - ( --betray(x,dog,-( ( ( TABLE[( foo(ROWS,--0.53) ) / Jon - y][ROWS] / ( protect(-ROWS / Sansa,-( -Jon / ( ( -270.41 ) ) )) ) / Sansa ) ) )) )] * rule(Arya,-COLS,Hodor) )),( protect(Ygritte,-( TABLE[foo(( COLS ))][COLS] )) )))) )];
	if(1){

}
} else {

}
};
	if(Jon){
	if(rule(-Jon,-0.04) / Jon){
	Stark /= --0.87
};
	Jon -= ROWS
}
}
var y = x
def TABLE[--77][k] {
	if(-( -12 ) + destroy(-490.412) + betray(( -84 ),( destroy(protect(betray(0.44) * bar(-( protect(mislead(Ygritte) / 93) ) / ---0.92 - -bar(Jon) * -COLS / 34 * 150.8217 * ROWS - COLS),690.925)) )) + -TABLE[--250.67 - -0.11 / rule()][TABLE[protect(( foo(ROWS) ),COLS * destroy(-59))][dog]]){
	COLS
};
	y *= Arya;
	x /= destroy(1)
}
def bar(Arya){
	if(bar(-0.22 + foo(1,( x ),---TABLE[( x )][Arya]) * 1 * 0.22)){
	y;
	--0.61 / Jon
} else {
	Ygritte
};
	if(ROWS){

}
}
def TABLE[foo()][k] {
	if(( Hodor ) - -( -foo(-COLS) )){

};
	TABLE[Arya][x];
	-0.22 - betray(protect())
}
var dog = Arya
assert ( --1 ) : "Fear cuts deeper than swords."
def TABLE[Stark][j] {
	Ygritte *= COLS - -protect(-bar(foo(betray(Stark),( betray(y,1 - ( ( -1 ) ) + ( -32 / COLS ) / -0.22,( foo(1,( ( 0.78 ) )) )) ),foo(Sansa + y + ( -COLS ))),( ROWS / Arya )),COLS * destroy(betray(destroy(TABLE[ROWS][Jon],TABLE[47][bar(0.39,-0.5)]),-Sansa) + ( ( 1 ) )) / ROWS);
	dog -= Ygritte
}
assert -1 : "Nothing burns like the cold."
assert ROWS : "Winter is coming"
var Hodor = COLS + -0.96
def bar(){

}
def rule(Sansa){
	y += destroy(TABLE[mislead(TABLE[( ROWS )][-0.61],protect(Sansa,16)) + Arya][( -COLS )] + 0.04);
	x;
	if(x / protect()){
	if(( ( -destroy() ) )){

};
	if(( 31 )){
	Sansa /= rule(TABLE[Arya][-COLS],protect(ROWS),COLS);
	if(0.01){
	if(-( -TABLE[( Sansa )][-0.03] - ROWS + --1 * -0.16 + Stark + --0.07 ) / ( 810.469 ) + protect() - betray(-TABLE[Sansa][-COLS]) * TABLE[2][y / ( ( -75 ) )] / Sansa * -0.55 * ROWS - ( Stark + ( dog ) - COLS - -Stark ) + bar(-( TABLE[betray(Hodor)][bar(destroy(Hodor,---0.85,TABLE[-( -dog / 77 )][TABLE[( --Jon )][Stark]]),-0.79) - Sansa] ) / -990.2456)){
	y += Arya * -Arya
}
};
	Stark /= betray() + TABLE[COLS][72] + mislead() - ( ROWS )
} else {
	dog / -40
};
	x /= Sansa
} else {
	if(-0.91){
	Hodor;
	if(-Jon - 0.18){
	Jon += x;
	if(Sansa){
	Arya -= betray(930.0236,TABLE[Arya][-Sansa],-62) * protect(x,TABLE[Stark][TABLE[mislead()][Arya]]);
	if(y){
	0.01;
	x *= -( -94 - -Stark ) - x
} else {
	if(TABLE[-( ( ROWS ) ) - --5][destroy(1 + COLS) * foo(protect(0),dog,-0.66)]){
	if(Jon * ( protect(dog) )){

} else {
	Ygritte
};
	COLS
} else {
	if(ROWS){
	if(( rule(( ( ( ( 460.27 ) ) ) ) - 97) )){
	if(ROWS){
	x += TABLE[x][--0.34];
	if(ROWS){
	x -= ( --1 );
	ROWS / 0.87
} else {
	if(( 80.5 )){
	y += bar(Sansa * Jon,-0.43,28);
	Hodor;
	if(ROWS){

} else {
	if(( betray(TABLE[x - ( TABLE[bar(( TABLE[TABLE[1][---240.3]][TABLE[destroy(Hodor)][-( COLS / ( -Arya ) ) / -ROWS * 1 / TABLE[y - Sansa][-760.53] + ( --betray(-Stark,( 0.65 )) ) + Hodor * --dog]] ),betray(--destroy(COLS) / y,rule(TABLE[bar(( Jon ))][-Arya],-COLS * -0.04),bar(rule(),COLS + -1) - COLS))][Stark] )][destroy(-1)]) )){
	ROWS
};
	Jon -= ROWS
}
};
	x += -mislead(dog,TABLE[destroy(--0.54 + --44)][-35])
}
} else {
	( TABLE[protect(6,( -rule(--foo(dog),-0.59,---COLS) ))][241] )
};
	Arya /= Sansa;
	if(1){
	Arya
} else {
	if(betray(-1,COLS - dog + x - ROWS * mislead(-mislead(COLS,destroy(-TABLE[( betray(-( destroy(Stark) )) ) - ( ( foo(Arya) ) )][58]),COLS)))){
	if(COLS){
	dog *= -dog
} else {
	x += ROWS;
	rule(-0.1,-Sansa) / ROWS
}
} else {
	( ROWS )
};
	if(( Jon ) - ( COLS )){

}
}
} else {
	if(-0.06){

} else {
	if(( -Sansa )){
	if(-rule(foo(mislead(ROWS * foo(Arya,destroy(Stark,rule(--destroy(-600.35,1))) + 930.5),destroy(),( --0.98 / -( TABLE[1][TABLE[bar(rule() - -Stark,COLS)][ROWS + TABLE[( ROWS )][TABLE[81][x]]]] ) )),-1))){
	if(ROWS){
	if(rule(Stark,Ygritte) + rule(1)){

}
} else {

}
};
	if(-Hodor){

} else {
	if(bar(ROWS * Arya - Ygritte,TABLE[--10][0.36])){
	x += y;
	if(protect(-( ( -( Stark ) ) * -320.1 + -1 ),Ygritte,Jon + COLS)){
	y -= TABLE[dog][( -rule(ROWS) )] - 0.98 / 60.7
}
};
	( TABLE[Sansa][TABLE[x][TABLE[Sansa][Ygritte]]] )
};
	if(Jon){
	Arya -= ( Arya );
	betray(( protect(ROWS,-1) - 46 / TABLE[-destroy() / ( --TABLE[rule()][Hodor] ) / -( foo(-32,( -destroy(-0.71) - -( COLS - x + COLS ) - protect(Hodor,( ( TABLE[bar(44)][--protect(--940.4799,x)] ) )) - Ygritte ) - ( 0.89 ),dog + ROWS) )][-430.46] + -TABLE[0.56][0.58 * rule()] )) - dog;
	ROWS
}
} else {
	dog += ( COLS );
	if(Sansa / ( -1 )){
	Sansa *= foo(( protect(y,y) ),Sansa,10);
	x
} else {
	-mislead(protect(( rule() ) / -0.37,x),( y + -0.02 - -destroy(Arya) * TABLE[--ROWS][410.88 - ( 0.39 )] ))
}
};
	Sansa -= -ROWS + Stark - bar(( ROWS ))
}
}
};
	0.13
};
	x
};
	Arya *= ( ROWS )
}
}
};
	y
}
}
def betray(Arya,Hodor,x){
	if(( bar(ROWS) )){
	Hodor -= ( ( betray() ) )
};
	mislead()
}
assert -1 : "What do we say to the Lord of Death?"
assert -1 : "What do we say to the Lord of Death?"
def TABLE[COLS][k] {
	if(-670.11){
	if(foo()){

} else {
	Ygritte += -130.17
};
	x
} else {

}
}
def mislead(y,Jon,Ygritte){

}
assert ( rule(Sansa,TABLE[Arya][Jon],( -( --COLS ) ) / x) ) - x : "What do we say to the Lord of Death?"
assert Hodor : "Winter is coming"
def betray(x,x,Ygritte){
	( destroy(0.75,-0.89) );
	-0.97;
	dog *= mislead(y + COLS,y,TABLE[x + -( -3 )][x])
}
def mislead(Ygritte){
	Ygritte /= Ygritte;
	Sansa += y;
	if(Sansa){
	foo(( ( Arya - --COLS - COLS ) ),rule(mislead())) * mislead(TABLE[y - y][TABLE[COLS][-0.96 / ( ( protect(TABLE[y][x - ( ( mislead(-1,-bar(Hodor,Jon,1)) ) )]) ) )]]) * ROWS * ( ( Hodor ) ) - ( mislead(-TABLE[-COLS + rule()][ROWS] / 1,( -1 )) );
	-ROWS * ( -0.34 ) + ROWS + Stark - mislead(Sansa,x) + 0.16 / COLS / -83
} else {
	if(protect(66,Sansa) - 140.5){

}
}
}
var dog = -TABLE[-0.84][( -0.09 )] * mislead(TABLE[( betray(TABLE[ROWS][1]) * Sansa )][protect(foo(COLS,rule(rule(ROWS))),Stark)])
assert ( ---55 ) : "One can not simply parse himself"
def mislead(){
	Hodor *= ( y )
}
def TABLE[ROWS][k] {
	if(0.31){
	x /= -TABLE[Ygritte][1] * -13;
	dog -= betray(54);
	if(foo(-ROWS,Jon * -x)){
	if(mislead(destroy(Stark,0.36),COLS,betray(foo(bar(TABLE[COLS][1]),Arya,TABLE[( TABLE[-53][-480.94] )][y]),Sansa,dog))){

}
}
} else {
	-bar(Sansa,Arya,-mislead(---21,foo(( COLS ),( ( ROWS ) ),-0.75)));
	mislead(44,-720.3);
	( COLS )
}
}
var Arya = ROWS
def destroy(Stark,dog){
	y /= foo(foo(TABLE[TABLE[ROWS / 1][( TABLE[-betray(( ROWS ))][-1] )]][1],-0.41),---100);
	TABLE[59][( 98 )]
}
def destroy(){
	Jon /= 0.86;
	x -= rule(( bar(COLS - -1) ))
}
var Sansa = --0.88
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[mislead(-110.22 - mislead(COLS,( COLS )),140.62,-COLS)][j] {
	Jon /= ( -95 )
}
var y = TABLE[mislead(-22,( 0.05 ))][ROWS]
var Hodor = ( --19 - dog * -( -COLS ) )
def rule(Hodor){
	-0.77
}
def TABLE[foo(Sansa,TABLE[Hodor][( destroy(( dog ),protect(-15) - ( -( ( -0.09 ) ) ),protect(-Hodor - x)) / x )])][k] {
	Jon *= ROWS;
	Arya += ( bar(y) )
}
assert ( Hodor ) : "Fear cuts deeper than swords."
assert 0.3 : "Winter is coming"
var Hodor = ROWS
def TABLE[Hodor][i] {
	Arya /= rule(( Stark ));
	Jon -= mislead(TABLE[( Ygritte )][0.49],Jon - ( Jon ),-COLS) * 930.67 * destroy(( -rule(-1) ))
}
def betray(Hodor){
	Hodor *= -rule(-1);
	if(Ygritte){

};
	if(TABLE[destroy(--0.53 / COLS - TABLE[rule(( -Jon / foo(COLS / -ROWS - COLS) ),bar(Hodor),( ( -80 ) ) / 380.38)][-protect(betray(Jon,betray(( betray(betray(ROWS,( -( -x / TABLE[protect()][TABLE[76][rule()]] / Stark - TABLE[x][-1] ) ) + y),Arya) ),rule(-rule(ROWS,ROWS),destroy(-93,mislead(TABLE[-41][dog - mislead(TABLE[protect(mislead(mislead(1 / -( -( --( y ) ) - Ygritte ) * COLS / TABLE[0.53][betray(betray(Stark,--1) / ( Stark ) + TABLE[bar()][Ygritte],-( ROWS ))] + foo(dog,--( Stark ) - TABLE[mislead(( ROWS + destroy(ROWS) ))][mislead(dog,bar(ROWS),Sansa)],destroy(ROWS,0.72,-Hodor)),1,( x )),Ygritte,-COLS),-( Arya ))][x] + mislead(( ( betray() ) )) + protect(-ROWS / -0.08,( COLS ) * betray(x)) - COLS / COLS - ( -foo(( TABLE[( Ygritte )][COLS] / ( 1 ) )) ),TABLE[-0.34][( protect(y,-y) )],-( -( ( COLS ) - -0.88 ) ) * -TABLE[( -y )][-17]) * betray(-0.59 + 0.52) / ROWS])))),( -Hodor )),COLS - ( 0 + ( ---( -COLS ) + TABLE[1][-Stark] + 0.25 ) ),COLS) + Hodor * mislead(( 0.08 ))],Jon)][( ( protect(x,y + 0.29,( rule(Jon) )) ) )]){

}
}
def TABLE[--Sansa - ( -86 )][k] {
	if(Stark + TABLE[COLS][dog]){
	Jon -= mislead(( TABLE[-COLS][rule() * bar()] ),-Arya) + -0.87
} else {
	if(Ygritte){
	Jon /= Hodor;
	if(---89){
	Ygritte -= COLS;
	Ygritte -= -y;
	( destroy(--43) )
} else {
	if(COLS){

} else {
	-0.55;
	-88
};
	Jon *= ( -34 );
	( TABLE[-COLS][x] )
}
} else {
	Hodor -= 130.3;
	if(COLS){
	if(betray(COLS)){
	x /= COLS
} else {
	-500.218;
	Hodor -= 0.42
};
	dog += betray(protect(y,TABLE[0.87][Sansa]),mislead(rule(-ROWS + Sansa)),-( bar() ));
	-1
} else {
	if(( ( -COLS * COLS ) )){
	if(bar(TABLE[dog][mislead()])){

} else {
	COLS
};
	if(COLS){
	if(COLS){
	if(( Ygritte )){
	Jon /= Arya;
	Sansa -= Jon
};
	0.7;
	Arya *= COLS
}
};
	x /= 0.24
} else {
	dog += -ROWS
};
	-destroy()
};
	destroy(COLS,( foo() * Jon ),38)
};
	( ---TABLE[COLS][ROWS] * -0.42 )
};
	Hodor /= betray(rule())
}
def TABLE[( ( protect() * 43 ) )][i] {
	if(rule(0.95,COLS)){
	if(mislead()){
	if(98){
	if(-Sansa){
	600.433 * rule(ROWS)
};
	x;
	if(( TABLE[Stark][0.03] )){
	if(-39){
	if(foo(-( ( -ROWS ) ),destroy(0.65))){
	Stark -= betray(ROWS,COLS + ROWS);
	TABLE[Jon][dog]
} else {
	Jon /= ( ( TABLE[dog][TABLE[( ( Arya * ROWS ) )][-y]] ) );
	x *= Hodor
}
};
	Stark /= 0.56
} else {
	if(-Hodor){
	if(( ( betray(-betray(-----32 + -1),mislead(rule(( TABLE[-41][-COLS + Hodor] ),-810.04),Sansa)) ) )){

} else {
	Sansa -= -( mislead() + TABLE[-( y - -0.25 / betray(-0.51,ROWS) )][betray(0.32 / dog + 0.35)] );
	if(bar(--0.2,ROWS,ROWS)){
	if(9){
	if(y){
	0.45;
	-COLS;
	Sansa *= Ygritte
} else {
	if(foo(Jon / Sansa / -0.47)){

} else {
	Jon
};
	if(bar(1)){
	Arya += TABLE[ROWS - x][380.1];
	if(COLS){

} else {
	if(TABLE[-( COLS ) + -1 - 91][( -0.35 )]){
	if(-0.49){
	x -= bar(Stark)
};
	dog /= COLS
};
	76
};
	Arya
} else {
	if(( rule(110.2,-COLS,( ( Stark ) )) )){
	0.55
}
}
};
	ROWS
} else {

};
	foo(-rule(TABLE[x][730.8941],ROWS))
}
}
} else {
	if(ROWS - destroy()){
	y += ROWS
} else {
	if(-0.92){
	( Hodor - ( COLS + ( ( -destroy() ) ) ) + ( TABLE[-( ( protect(( -0.89 )) ) + 1 * ROWS ) + ( Hodor )][( 94 ) / ROWS * ( COLS + -ROWS )] * -Arya ) )
} else {
	Stark *= 0.02 * ( Jon / 0.12 )
};
	if(( 71 ) / mislead(-ROWS * -1,( ( -x ) )) * destroy(-320.82,( 18 ) / dog)){
	Jon += ( ( Hodor - Hodor / ( -0.18 ) ) )
}
};
	Stark /= TABLE[-ROWS][mislead()]
}
}
} else {
	-ROWS;
	if(ROWS){
	if(bar(ROWS,( -COLS ))){
	rule(( -Arya ),TABLE[destroy(ROWS)][-0.81])
} else {
	Jon -= --0.38;
	y += y;
	dog -= -56 * TABLE[( -64 )][-( 61 )]
}
} else {
	if(( -ROWS )){
	y -= Arya;
	Sansa *= COLS;
	Stark /= 0.9
}
}
}
};
	if(betray(--0.64,destroy(foo(Hodor,---31) / mislead(( rule() ) - protect(mislead(-Stark,-x + Ygritte) / ( ( protect(-Ygritte) ) ) / x + -x,TABLE[70][( ( 0.86 ) - ( ( 0 ) ) ) * COLS]),TABLE[-ROWS][( -0.44 * 0.47 ) + -1000.82],-TABLE[foo() / 34 + ( 0.14 - Arya ) / ( Sansa )][( mislead() )]) / rule(TABLE[rule(Hodor,-ROWS,( Arya ))][--foo(x)]),-9))){
	Arya += ( Sansa )
};
	if(0.42){
	if(-TABLE[Jon][Arya]){
	Ygritte;
	x *= Hodor
} else {
	Sansa
}
}
} else {

};
	dog /= -0.87
}
def foo(Stark,Arya){
	y -= rule(y + foo(0.19,COLS - -690.797,Arya),rule())
}
var Hodor = Sansa
def TABLE[---1 * COLS][k] {
	if(-780.5304){

}
}
assert -( -0.53 ) : "Fear cuts deeper than swords."
assert -( COLS ) : "Fear cuts deeper than swords."
assert ( -18 ) : "Winter is coming"
def bar(y){
	if(( COLS )){
	TABLE[( -16 / Jon + TABLE[-Ygritte][32] )][dog]
} else {

}
}
def bar(){

}
def protect(dog){
	y -= x
}
def TABLE[COLS * 0.49 + 0.16 / ROWS + -1 + ( -( ROWS ) )][j] {
	Stark;
	( ( -0.25 ) )
}
assert -0.61 : "One can not simply parse himself"
var Stark = Jon + COLS
def TABLE[Jon][j] {
	Sansa -= -0.97
}
def TABLE[( -370.7 + Jon + ROWS )][i] {
	dog *= -16;
	Arya + bar()
}
var Jon = betray(270.4,( ( Hodor ) ))
assert -( 91 ) : "Nothing burns like the cold."
assert ROWS : "What do we say to the Lord of Death?"
assert mislead(COLS,mislead(foo(Stark - ( ROWS )),-( -( destroy(bar(COLS,0.89),( -( -x * foo(-( -rule(betray(bar(-0.61,-9),77)) ),( 830.526 )) ) )) ) ) + ROWS + 0.93 - ( TABLE[-ROWS][protect(Stark / Hodor,-290.48)] )),( ( y ) )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( TABLE[61 / bar(rule(( -mislead(Hodor,x) )),( -( protect(-( -Hodor ),Jon,destroy()) - 530.371 ) )) / y][-60.04] / ( ( ( ( 0.02 ) ) * TABLE[TABLE[-0.95][-82]][-0.07] ) ) ) : "Winter is coming"
assert y : "Winter is coming"
def destroy(){
	if(( COLS )){

}
}
def TABLE[ROWS - 92][k] {
	x;
	if(0.96){
	Sansa += Sansa;
	( protect(0.85,destroy(dog,TABLE[-0.94][x]),( TABLE[dog][protect(( ( 1 ) ),Jon)] )) );
	Sansa
}
}
assert rule(COLS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[protect(--TABLE[( ( ROWS ) )][( 41 )])][j] {

}
var Hodor = COLS
def bar(y,dog){
	( -y ) + x * ( Jon - -COLS ) * ( 650.68 );
	y += TABLE[720.196][foo(dog,( protect(Hodor,( dog )) / -COLS ),86)]
}
def TABLE[rule(-destroy() / destroy(Ygritte,-COLS),betray(COLS))][k] {
	if(Hodor){

}
}
def TABLE[rule(Arya,( mislead(1,TABLE[( ( ( Stark ) ) / protect() )][rule()],0.2) ) - ( TABLE[x][-TABLE[TABLE[( Hodor + --ROWS * -480.2 )][mislead(dog * ( ( -COLS ) ),-Jon,bar(( mislead(rule(-COLS),TABLE[Sansa][rule(Arya)],100) )))] * ( 0.93 )][-betray(( -TABLE[-( rule(( foo(0.85,Ygritte,ROWS) * COLS - Stark * destroy(( TABLE[TABLE[-15][-550.98 / ( TABLE[TABLE[( Arya )][( -0.98 )]][ROWS] ) * bar(ROWS,66) - Arya]][ROWS] )) ) / betray(0.44,-13 / --0.46)) )][x] - -93 ) / ( Hodor * ( protect(TABLE[ROWS][TABLE[( 83 ) * -47][x]],( ROWS / ( x ) )) ) ))] - ROWS] ))][i] {
	( Sansa - -10 );
	Hodor *= ( COLS );
	betray(COLS,x * dog)
}
var Arya = mislead(Ygritte,Arya,Ygritte)
def TABLE[--y][j] {
	if(( Stark )){

}
}
def foo(){
	if(rule() / ( x ) / -( Hodor )){

} else {
	bar(TABLE[--1][1]);
	Hodor += destroy(Sansa,COLS,-( -mislead(TABLE[y][( Jon )]) ) - TABLE[-0.55][-Stark - destroy(protect(foo(bar(( protect(bar(ROWS),ROWS) - COLS ) * 35),Ygritte))) / destroy(rule(COLS),-0.47) + --0.42])
};
	if(-protect()){
	-0.04 - Arya
} else {
	if(ROWS){
	--1
} else {
	( Ygritte )
}
};
	if(( -69 * 10.67 * Sansa )){
	if(COLS){
	( -390.75 )
} else {
	dog -= ( -rule(-18,( destroy(TABLE[-foo(( ( ( ROWS ) ) ),COLS)][( ROWS )]) / COLS ),x) + -1 - Hodor * -y / destroy(( -25 + -ROWS ),-80) );
	y -= protect(Sansa);
	( bar(Arya,dog) + COLS )
};
	if(mislead(( --21 ),Arya,x)){
	foo(dog,( -y ),ROWS / Ygritte - protect())
} else {
	x /= --destroy(-11,mislead(-97,Ygritte)) + rule() / Sansa;
	if(Ygritte){
	Hodor += bar(Stark,( -( 82 ) ))
} else {
	if(-( 47 )){
	rule(-1 * ( TABLE[-x][x] ) + mislead(-x - y,Sansa),34,-ROWS)
}
}
}
} else {
	ROWS;
	if(0.81){

} else {

}
}
}
var Sansa = -TABLE[-70][( Sansa / Hodor )]
def TABLE[( ( y ) * TABLE[Stark - 68][destroy(0.96,x,Arya)] ) / TABLE[( Jon * Stark )][( mislead() - ( COLS ) )]][i] {
	y /= 850.11;
	9
}
var Stark = ( mislead() )
def bar(Jon){
	if(betray(-COLS * Jon)){
	( ( Arya * COLS - dog ) );
	Sansa *= 1
};
	( Jon )
}
def TABLE[y * x + Jon][i] {
	27;
	y
}
def mislead(Hodor){
	if(-y * -Ygritte / 1 + ( TABLE[( dog ) / Jon / protect(590)][protect(( COLS + ( ( --90 ) ) ))] + foo(betray(--0.88 * protect(( ROWS )),-1,( ( TABLE[-( 63 )][TABLE[protect(-63 + ROWS,ROWS,TABLE[--TABLE[foo(COLS,y)][-( TABLE[( x / ( rule(--TABLE[COLS][protect(protect(( ---( Ygritte ) ),y)) * --( Jon )],ROWS) * --0.35 * protect(ROWS,79) ) )][( Hodor )] * Stark * -1 / ( foo(31) ) + Stark + COLS )]][rule(bar(-12,destroy(ROWS * 0.06)),Hodor)])][destroy(70.855)] + ( TABLE[Sansa][destroy()] )] ) )),-Arya - 26,Sansa) - ( -( TABLE[-COLS / ( ( ( destroy(-foo() - -y) - -91 - ROWS ) * x ) / Arya )][foo(-protect(80.69),Hodor) - -10] ) - -84 ) ) + ( bar(( Ygritte ) * bar(-1,Jon),( ROWS ),TABLE[-0.08 + ( x )][( 0.13 ) - TABLE[( Ygritte )][-0.02]]) ) + 400.154){
	if(( betray(-( y )) ) * betray(x,mislead() / -protect(( x + 1 / TABLE[( foo(dog,TABLE[-640.9 / -COLS - y - ( Ygritte ) - -( -63 ) / -bar(( Jon ),TABLE[TABLE[ROWS - ( Jon ) * COLS][betray()]][destroy(-COLS,-dog - dog,-( x )) * ( ( ( COLS ) ) / x + rule(-destroy(-betray(),mislead(destroy(0.23,foo()),ROWS),destroy(ROWS,-0.63,destroy(-y / ( 1 ) + 1,TABLE[mislead(y)][bar(-970.7806) - ROWS],Sansa))) * -0.93) ) - 1 + TABLE[-840.9][rule(COLS,foo(1),-0.72)]])][-( -980.382 ) - 18]) )][ROWS] / -COLS + dog ),Stark / ( ( TABLE[rule(betray(( Hodor ),rule(),destroy(( -0.31 ),( -destroy(mislead(protect(1,( COLS )),x,0.21) - ROWS,ROWS,80) ))),( -0.47 ),( ( ROWS ) * y ))][TABLE[x][-protect()]] ) )) * ( 190.567 ))){
	if(betray(Sansa / rule(),TABLE[betray()][Hodor])){
	betray();
	--COLS + ( dog )
};
	if(-300.3){
	( ROWS * -0.97 );
	foo(---COLS - ( COLS ) / betray(0.72),COLS)
} else {
	dog - ( ( -10 ) + --x )
};
	if(dog){
	x += ROWS;
	Hodor -= COLS
}
};
	y
};
	dog += ( foo(-260.2383) * -COLS );
	Stark /= mislead(dog)
}
var x = --Ygritte
assert destroy(-ROWS,ROWS) : "One can not simply parse himself"
def TABLE[Jon][k] {

}
def TABLE[TABLE[( ( Jon ) ) + Jon][ROWS]][k] {
	dog += TABLE[340.054][-Jon]
}
var Arya = x
var Ygritte = ( ROWS )
var Stark = Ygritte * --1
assert Arya * ( ( foo(-Arya,Arya) ) ) : "Winter is coming"
assert foo(TABLE[-x][ROWS + -ROWS * Arya]) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[betray(( Sansa ),-COLS)][k] {
	bar()
}
assert ROWS : "What do we say to the Lord of Death?"
def mislead(x){
	if(TABLE[Ygritte][( destroy(Arya) + mislead(destroy(( -19 ))) + ROWS )]){
	Arya /= foo()
} else {
	if(Jon){
	if(-Sansa){
	-Ygritte - --TABLE[x][( 840.16 )];
	x += -protect(Sansa)
};
	Hodor -= -protect(--TABLE[( 480.45 )][( TABLE[( x )][0.7] ) - -65] + x - -( betray(ROWS + Arya) ),-COLS - -87);
	foo(-Jon,Ygritte,bar())
} else {
	Jon -= 590.3075 + COLS
}
}
}
def protect(Stark,Sansa){
	--ROWS + -Jon;
	Stark *= COLS
}
var Arya = TABLE[-( -0.11 * TABLE[x + destroy(bar(( ( y ) ))) / ( Sansa ) * ( 1 ) / -200.16][-( TABLE[bar(TABLE[destroy(protect(( ( ( ( -70 ) ) ) ) / ROWS - 65,-6,( Stark )),--1 * -2,-COLS)][TABLE[y][( ( -betray(-7,( Stark )) ) )]] / x,TABLE[betray()][-( 0.32 )] + protect() - -1,-ROWS)][0.57] )] )][y]
def TABLE[Sansa][i] {
	dog /= -0.91;
	y *= -420.3484 * 230.3
}
def TABLE[x][j] {

}
def destroy(x){
	if(COLS){
	Hodor += y;
	Arya /= -89;
	Stark -= TABLE[( -94 )][destroy(-30,foo(810.6))]
} else {

}
}
def TABLE[foo() / ( ROWS )][k] {
	if(COLS){
	Sansa -= ROWS;
	if(( -Arya + foo(x,-destroy(( COLS ),0.73) * 45) * TABLE[COLS][( Jon )] )){
	Jon *= ( ( TABLE[ROWS / -( x - bar(12 / 1 / y,betray(-( -0.14 ),( -( ( ( 560.1 / COLS ) ) ) )) * ROWS * -210.523 * destroy(x,-1),-Stark) ) * TABLE[Sansa][39] / betray(bar(destroy()),rule(COLS),0.15)][foo(bar(( -( 61 ) - 0.09 / Arya ),-560.774))] ) );
	if(-810.86){
	-( COLS )
};
	if(Arya){
	mislead(( -bar(Ygritte,( -0.02 )) ))
} else {
	betray(-39)
}
} else {
	-95;
	if(foo() + Jon){
	Arya += -COLS * foo(protect(bar(( Hodor )),bar(COLS,140.3),protect(-( ( ROWS ) ),1,-1) + Arya / ROWS));
	Stark
} else {
	Stark += ROWS
}
}
} else {
	y += destroy(-15 - Ygritte - --0.39,TABLE[-COLS + ROWS * TABLE[-( ( bar(-170.328 - Ygritte / Hodor) ) )][rule(( ( destroy(COLS,-protect(( COLS ),-TABLE[-95][-0.9 / ROWS],destroy() / Stark + TABLE[( -protect(rule(0.73),ROWS / -54) )][( -830.85 )])) + -Hodor ) ))] * ( ( dog ) )][rule(-0.79)] / -720.466);
	Jon /= -45
};
	Sansa -= mislead(ROWS,7);
	Arya /= Ygritte + -20
}
def mislead(Hodor,x){
	Stark;
	if(( y ) - ( foo(-( bar() )) ) * x){
	x -= x;
	if(TABLE[mislead(( -dog + ( ROWS ) ),Hodor)][Sansa]){

} else {
	if(0.97){
	Stark -= x;
	if(TABLE[--Arya][Jon]){
	Stark -= y;
	Arya -= bar(0.67,-940.8)
};
	( destroy(ROWS) )
} else {

};
	protect(Stark)
}
} else {
	ROWS;
	-0.8;
	Hodor -= TABLE[60][0.48]
}
}
assert betray(270.4,( destroy(( TABLE[-TABLE[Arya][Sansa]][---39] + destroy(TABLE[-( Jon + bar(protect(-1,-670.995 + 88),-x - TABLE[destroy()][( rule() ) + -betray(( ROWS ),-10)]) )][Arya]) )) )) : "Winter is coming"
var Jon = protect(x)
var Jon = destroy(( dog ))
def TABLE[-TABLE[Ygritte][-COLS]][i] {
	Ygritte -= destroy(-0.47)
}
def TABLE[dog / -65 * TABLE[-rule(protect(( -0.05 ),mislead()),-( rule(( -( destroy(--89) * -75 ) ) / destroy(rule(-( ROWS * -TABLE[COLS][-50] ))),( Sansa )) ))][protect(protect(-25,( COLS )),-1)]][i] {
	Hodor += betray(-59,TABLE[bar()][COLS],destroy(( foo(bar(bar(Hodor) / 0.18),-Arya + betray(( -COLS )) - --ROWS) ),-( COLS ) + ( rule(destroy(destroy(),COLS),-380.613) ),( -TABLE[-rule(12)][Sansa + ( COLS )] * -0.49 )));
	if(betray(mislead(ROWS,-mislead(( protect(x,mislead(0.8,-betray(ROWS) - ROWS - bar(( COLS / ROWS ),84) + -ROWS - -x + -bar(rule()),-COLS / COLS / mislead(mislead(0.65,1),( -betray(ROWS) )))) ),protect(bar(COLS / COLS,--ROWS,-ROWS),protect())),mislead(COLS,-840.416)),bar(( Sansa * foo(-0.73,ROWS) ),( ROWS ),-360.574),betray(Arya,( ( --ROWS / -0.76 ) * bar(( --1 / -foo(-2) - ROWS / ( betray() ) + COLS / -0.83 * -Stark ),COLS) ))) + -Arya){
	if(foo(Stark,-Jon)){
	y += mislead(x,Sansa) / mislead(ROWS,Stark) - ( Arya ) * TABLE[TABLE[x + ( y )][mislead(ROWS / ( Ygritte - Arya ) - 98,ROWS,TABLE[-foo(ROWS)][--5 / rule(Sansa,mislead(--destroy(COLS,TABLE[TABLE[protect(10,1)][-0.87 * y] / -dog][( Stark )]),-1 * ( y + -( COLS ) )),COLS)] * TABLE[ROWS][Arya] / Ygritte)]][TABLE[-43][( ( ( y ) ) )]] - Jon + --rule(( ( ( COLS ) - COLS - x + ( ( TABLE[( -COLS - 0.26 )][y] ) ) ) )) * ( ROWS );
	if(( -( Arya ) )){
	ROWS;
	0.97
}
}
}
}
var Stark = 1
assert TABLE[Stark][COLS + destroy(mislead(--3))] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = dog
def TABLE[-0.35][i] {
	if(Stark){
	Jon *= 1
} else {
	if(( ( y ) + TABLE[--1][Arya] ) - Hodor){
	-1;
	if(TABLE[( protect(1,-y) )][Sansa]){
	---1;
	Arya
}
};
	( COLS * ( destroy(Hodor) ) * COLS / mislead(TABLE[mislead(Stark / -1,protect(15 + 0.66 + ( ( ( -( ( TABLE[destroy(Jon * COLS,COLS * rule(-60,-1 / rule(-( -910.789 ),COLS)),-protect(-89,-68))][TABLE[mislead(( -x + ( --88 * Stark * ROWS ) ))][destroy(( dog ),0.93 / -1) * Ygritte] - -0.62] ) ) ) ) - -Arya )))][ROWS] * x,-0.94) )
};
	if(-rule(48,protect(bar(--( -650.6 ),-19,protect(betray(Sansa,betray() * destroy()),Stark))))){
	if(rule(Hodor)){

} else {
	if(Arya){
	Arya -= Stark
};
	COLS
};
	-x
};
	if(140.45 + -Ygritte - -0.7 / bar(( Sansa ),-rule(y,destroy(ROWS * Ygritte * bar(betray(-ROWS,--1),-510.354))),bar())){
	dog *= 130.88;
	if(Hodor){
	Jon
}
} else {
	Arya *= ( -1 )
}
}
var Jon = Sansa
var Arya = mislead(-24,( TABLE[rule(Jon)][mislead(rule(( -foo(dog * ROWS,foo(betray(),( 0.33 ),0.01) - -( 25 ) + --TABLE[x][foo() * -Sansa - -800.069 / Hodor / ----( mislead(--TABLE[betray(y)][( -6 )] + -1 - --y) ) / Arya * -betray()],20) ),0.71),-Arya - 330.4218,( ( ( --TABLE[1][( 0.65 )] ) ) ))] ))
def TABLE[Stark][i] {
	if(TABLE[betray(-0.12 * betray(( rule(0.62) )),--( 100 ))][TABLE[Hodor][-( Hodor - 62 )] + ( ( Ygritte ) - ----( 240.0403 ) / -0.5 )]){

} else {
	if(Stark){
	if(-98){
	Sansa *= -1
};
	betray(Jon,-destroy());
	if(TABLE[( mislead(( -500.141 ),y * Jon / ( -0.42 )) )][-10]){
	--foo(ROWS,-protect(dog * TABLE[-foo(-x,-rule(y)) + betray(--( TABLE[dog][-( ROWS ) - Sansa] )) - ( --x - ( ( ( 60 * betray(( 0.44 )) + -ROWS ) ) ) )][( --Sansa )] - ( -Sansa * 0.97 ),rule(92),protect(( --270.072 - foo(y,ROWS) + ( -35 ) * ( foo(( -( ( TABLE[COLS][ROWS] / 0.38 ) ) * ( --71 - 1 * TABLE[TABLE[Hodor][( 80 )]][ROWS] / --TABLE[TABLE[foo(TABLE[-1][-1])][( TABLE[( Stark )][Hodor] )]][( ( Jon ) )] ) - foo(-( dog ) - Hodor - TABLE[Stark][( ( ( ROWS ) ) )],TABLE[COLS][COLS] + -COLS + COLS,( -500.417 - -0.63 )) ),destroy(( 1 ) / -foo(mislead(-1,destroy(TABLE[Jon][Stark]))))) ) ))));
	-Stark * Sansa
}
} else {
	Hodor *= 670.07;
	Stark *= ( ( y ) )
}
};
	if(( ( y ) )){
	COLS;
	( ( 89 ) )
} else {
	Sansa += 0.05;
	TABLE[Arya][-51 + TABLE[TABLE[ROWS][bar()]][0.19]]
}
}
def destroy(Stark,Jon,x){
	if(-COLS + COLS){
	betray(( ROWS * ( ( COLS ) ) / ( COLS ) ),bar(( --0.39 )))
}
}
assert ( protect(y) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(x){
	y -= TABLE[( -foo(( -48 )) * ( ROWS ) - destroy(( Hodor )) / TABLE[-COLS][Hodor] )][( Arya )] - -TABLE[-0.52][Arya] + ROWS - -bar(-( COLS * -Jon / -ROWS / Hodor / 0.85 ),Arya) / --0.43
}
def mislead(Jon){
	x /= protect(( -0.62 ))
}
def TABLE[y][j] {
	betray(y / --mislead() * -protect(Hodor,ROWS) * ROWS)
}
assert rule() : "One can not simply parse himself"
var Arya = rule(-protect(-TABLE[-( Hodor ) + 0.35][ROWS] + ( ROWS )) + -1)
var Sansa = -TABLE[--destroy(foo(-COLS) / Ygritte * TABLE[( ( COLS ) ) - Sansa][--mislead()])][( destroy(y) )]
var Hodor = Stark + 0.04
def betray(){
	if(TABLE[y][COLS]){
	if(mislead()){
	x /= bar(TABLE[-42][( destroy(-TABLE[x][TABLE[bar() + 81][y] * ( -0.23 ) - -mislead(-0.73,-TABLE[-Sansa][--350.189 * --0.4])] + COLS,ROWS) )]) / ( TABLE[-0.65][bar(-bar(( ( ( protect(-ROWS + TABLE[400.6352 - ( ( -790.7661 ) )][-destroy(-Ygritte)],52) ) ) / --rule(Jon) )) + COLS)] );
	Sansa -= TABLE[-0.37][dog]
}
} else {
	if(( 0.19 )){
	x /= -( -( mislead(( -42 ),COLS,Stark) ) ) / Sansa;
	if(betray(-1,-0.53)){
	ROWS;
	x += ROWS;
	dog
}
} else {
	rule(--1,0.96,-ROWS)
};
	( ROWS );
	if(-Ygritte + -betray(COLS) * x){

}
}
}
def mislead(Arya,y){
	if(Ygritte){
	--( COLS ) / ( ( -0.61 ) )
}
}
def TABLE[ROWS][i] {
	dog
}
def TABLE[1][k] {
	( ( ( COLS ) ) );
	if(-Ygritte){

} else {
	if(( Arya * ROWS / mislead(-COLS / 63 + -73) )){

};
	ROWS;
	dog += ROWS
};
	Stark += -y
}
assert 0.17 : "What do we say to the Lord of Death?"
assert 1 : "Fear cuts deeper than swords."
def rule(){

}
var dog = COLS * bar(-( TABLE[destroy(--betray(rule() * TABLE[-TABLE[( --Stark )][ROWS]][TABLE[( 56 )][--COLS] * mislead(( protect(( -67 ) - 0.85 + dog,TABLE[-92][x]) ),-200.572,--71)],Jon,0.96 / dog))][mislead(TABLE[betray(170.74,ROWS - --780.951,-0.99)][Stark],mislead(( -rule(COLS) )))] ),bar(Stark,0.38 * -( -( -x ) )))
def TABLE[Sansa][i] {
	-ROWS
}
var x = x
var Sansa = 1 * COLS
assert --( bar(Sansa,Arya) ) : "Winter is coming"
def betray(Arya){
	if(( -dog / betray(-TABLE[-ROWS - rule(mislead(COLS,1 / 21,--Hodor * -0.9 / rule(Hodor,Stark)) + ( ROWS + ( ( dog - ( ( dog ) ) ) ) ) - -1) / betray(-( COLS ))][-0.21] - Sansa) - Jon + COLS )){

} else {
	-( --Sansa )
}
}
def rule(y){
	Jon -= x;
	Arya *= Ygritte
}
var x = dog / 10
def TABLE[mislead(0.25,-21)][k] {
	if(-0.94 * 0.65){
	x *= -1 - Stark;
	( TABLE[--ROWS - COLS / --34 * -COLS][COLS] )
};
	if(--TABLE[--foo(1,bar(TABLE[-destroy()][ROWS] * COLS,-680.1 * Ygritte * -foo(-0.12 * TABLE[-770.115 * COLS][-bar(-26,Hodor + Sansa) - COLS],destroy())),0.55) + y + ( -( bar(-Stark) ) ) / 9 - ----Hodor * bar(90) - -1 * ( x )][dog]){
	Jon += COLS
}
}
var y = ( -( COLS ) )
def rule(Jon,Ygritte){
	--1;
	if(-36){
	20
};
	if(( ROWS )){

}
}
var Jon = TABLE[-0.16][-46]
def bar(Stark){

}
def destroy(y,Arya){
	Hodor += ( ( --y - -bar(destroy() + 1) ) )
}
def foo(){
	Sansa /= foo();
	y /= 6
}
def TABLE[protect(ROWS)][j] {

}
def TABLE[ROWS][k] {
	Jon -= 58;
	if(-0.7){
	x -= Jon;
	-48
}
}
assert ( --bar(( -1 ),-( -foo(COLS,( ROWS )) * y / mislead(57) ) * 35 / ROWS,( Ygritte )) * -( -( betray(58,-dog,-COLS) / -TABLE[ROWS][Hodor] ) ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = -0.01
def bar(dog,x){
	-rule(( ( ( 9 - -( bar(ROWS,mislead(COLS,63,( ROWS ))) ) - ( dog ) ) ) ),-mislead(580.92,-dog / COLS)) - Arya / ( -Ygritte ) + x
}
def bar(dog,Jon){

}
def TABLE[0.63][j] {
	if(Ygritte){
	Arya -= bar(( bar(protect()) ),ROWS,x)
} else {
	Jon += 1
};
	if(rule(-0.97)){
	Stark
} else {
	if(1){
	Hodor += -63;
	foo(COLS / ( mislead(--42) ))
} else {
	Arya /= rule(-Hodor,250.8589);
	Stark -= -1
};
	if(x){
	x *= mislead(COLS,-0.92,-19);
	if(1){
	y -= dog
} else {
	-750.13
}
} else {
	rule(betray());
	if(TABLE[Ygritte][betray(protect(bar(-670.808,COLS),Stark,---protect(( COLS )) - TABLE[y + ( -0.17 ) - ( --bar(y) / y - ROWS ) / -230.667 * COLS][foo(-foo(Jon))] + ( COLS )))]){
	if(1){

} else {
	Ygritte += -0.18;
	y
}
};
	Stark += -24
}
}
}
assert x : "Winter is coming"
assert destroy(( 480.2624 )) : "Winter is coming"
def betray(Ygritte,Sansa,dog){
	if(x - bar(-foo(COLS - ( Arya ),--rule(( betray(610.99,( COLS )) ),( ROWS )),-dog)) + -0.18){
	90;
	y += Arya
}
}
assert ( rule(0.07) ) : "Fear cuts deeper than swords."
var Hodor = -1
assert 42 : "Nothing burns like the cold."
var Ygritte = 1
var Sansa = destroy(Sansa,foo(ROWS,-580.662),( ( -( -( ROWS ) * 380.3 / 68 ) ) ))
var y = betray(-43 / x)
def betray(x){
	if(protect(( --180.2 * protect(TABLE[-( --1 - -48 )][rule(TABLE[TABLE[x][-COLS + ( -250.15 )]][TABLE[ROWS][--Sansa + destroy(( 0.59 ) - foo(TABLE[Jon][x]) / -5,betray(( Jon / --betray(0.79,ROWS,x) - betray(destroy(Ygritte,-dog),( 10 )) ),( --( TABLE[( protect(dog) )][COLS] * -13 ) - Jon ),-0.24 - -1))] - -( -TABLE[( protect(-0.46,bar(TABLE[COLS][---bar(Ygritte,ROWS,betray(230.1904,y / 0.74 + TABLE[52][rule(( 180.57 ),Sansa)])) + ( -betray(-protect(ROWS),1,TABLE[24][( --ROWS - ( 35 ) * --( Sansa ) - 1 / 0.75 * ( mislead(0.47) * -mislead(betray(bar(( 0.7 )) - ( destroy(17) ),dog),-rule()) ) )]) - -TABLE[bar(Hodor)][foo(-1,97) / -( dog ) * -bar()] * Jon + ( ( ( destroy(COLS + -betray(( 0.65 )) * -COLS,destroy(betray(( Stark ),( rule(y,betray(--640.73,TABLE[foo(bar(-10.534,protect(destroy(( protect(( TABLE[--1 / -COLS][protect()] ),Stark / -( y ),COLS) ),foo(--destroy(TABLE[0.87][foo(mislead(foo(1) * 45,ROWS),ROWS,( ( -460.268 ) ))]) / ROWS,-ROWS / --TABLE[-59][( ( ( -COLS * COLS ) - Hodor ) - Sansa / rule(-0.79,-TABLE[ROWS][( ( -0.02 ) )]) )] - betray(-25,0.4 * -( x )),0.55))) / Ygritte + Ygritte,-ROWS),( TABLE[( destroy(( protect(-Jon,-0.44,0.63 - Sansa) ),-390.419 / TABLE[( ( -86 ) / ( -1 * y ) + COLS ) * TABLE[foo(-ROWS,COLS) * foo()][-betray(Ygritte)]][mislead(COLS,Jon,rule(mislead(---TABLE[( mislead(Sansa - 0.05) ) - y][rule()] / ( Jon * TABLE[ROWS][-x] ),destroy(-1 / -0.41,1))))]) )][99] ))][-( 0.47 )]),-25) ) + Arya),ROWS),y - -( protect(TABLE[COLS][( bar(protect(-1,-57,--0.81 + ( bar(ROWS,-1) ) * Ygritte),-Hodor - -TABLE[-1][bar(COLS)]) )],Stark) - --dog )) ) ) + Ygritte ) )]) * ( rule(ROWS) )) )][ROWS] )])] - ( -bar(( ROWS ),-0.37) / rule(( x ) * -COLS) )) * 1 ),protect(( -destroy(-( destroy(( TABLE[ROWS][--0 + Ygritte] ),--61) ),COLS) )))){
	-4;
	( ( x - -( 3 ) / -0.17 ) / COLS * ( 610.53 ) )
} else {
	if(protect(410.6676 * 52)){
	( 37 )
} else {
	if(Arya){
	if(Jon - ( -Jon )){
	if(COLS){
	Arya -= Ygritte;
	TABLE[x][( -ROWS )];
	TABLE[-31][( ( mislead(y / COLS) ) )]
} else {
	dog += -betray(( ROWS ),-bar(-COLS,-y,( 1 - -0.16 )) + ( Sansa ) / ( betray(( ( ( -0.98 ) ) ),-Arya) ),Stark + TABLE[TABLE[-( protect(( ( destroy(-0.77,x - -rule(ROWS,( bar(COLS,protect(-1 / rule(0.47),1 * betray(-( --1 ) - ( -protect() ),( destroy(( 94 ),COLS) - rule(-56,betray(COLS - -foo(TABLE[COLS][Sansa] / ROWS * y),foo(-ROWS - Jon * foo(-47 - ( 0.47 ),foo()) - -ROWS - -( y )))) ) / -17))) )),mislead(Sansa)) * -( destroy(0.12) / ROWS ) ) ),( ( y ) )) )][Hodor]][Hodor]) / protect(--( TABLE[ROWS][-9] + ( 45 ) / foo(-0.3,( Hodor )) ),betray(foo(( 1 * destroy(48) ),-Sansa) - ( foo(( TABLE[COLS][( -( ( foo(destroy(( 27 )),840.008) ) ) + --destroy(Jon) + ( -x + betray(Arya,-0.23) * 0 ) + COLS / -( TABLE[--0.81 * -ROWS][Jon] ) ) / x] )) ),TABLE[( -COLS )][protect(( -93 ))],ROWS + Stark - --destroy(-Hodor * -1) / ( ROWS ) - TABLE[-mislead(( -dog * destroy() ),-( ( bar(580.9154,protect(rule(( destroy(ROWS) ) / 96,( bar(TABLE[betray(foo(( ( foo(ROWS) ) + Arya )) - TABLE[destroy(( -1 ),-1 - -( 73 ) * TABLE[Arya][-0.64 * COLS] + --( rule(-TABLE[-1][TABLE[( --96 )][( ( COLS ) )]],Hodor) ),Ygritte)][-1],-ROWS,dog)][y],( COLS )) )))) ) / -55 ))][protect(-75,-ROWS)]))
}
} else {
	COLS * -970.03;
	Hodor *= -790.597;
	if(-COLS){
	Sansa *= ( ( -rule(-88,protect(destroy(-( -Ygritte ) / -26,ROWS),COLS),-25) ) )
}
};
	--Stark;
	if(TABLE[--COLS][-TABLE[Arya][x]]){

}
} else {
	Arya;
	Ygritte += Jon
}
};
	Arya -= 28 / 1;
	if(( ( -Sansa * -38 - COLS + 44 ) )){
	if(( TABLE[Sansa][betray(rule(0.65))] )){
	Arya
};
	Stark += protect(bar(Sansa,destroy(-0.43,destroy(ROWS) - Stark)) + ( bar() + mislead(ROWS,0.56) + -mislead(1 + -ROWS * 0.22,COLS,-Arya) ) / ( mislead(Hodor - -90 - --81,Arya) ),--0.45)
} else {
	y -= -1
}
}
}
assert Jon : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(){
	if(480.1){
	foo(Sansa,COLS,( destroy(x,1) ))
};
	Ygritte += Arya;
	if(Hodor){
	if(rule(ROWS)){
	if(protect(COLS,-dog,----0.51 - ROWS)){
	-bar(-( ( --0.38 ) ),-( ROWS ) * ( TABLE[-dog + -0.77][-0.29] ),Ygritte);
	if(rule()){
	if(rule(Ygritte,-Ygritte,( ( ROWS ) ))){
	Jon /= COLS
};
	if(--( dog ) * -ROWS){
	-TABLE[( mislead(protect(ROWS - ( ( TABLE[-rule(46,-61)][-( COLS )] ) ),( betray(betray() * -( -( y ) ) - Hodor - protect()) ),-Sansa)) )][rule(0.23)]
}
}
};
	Stark += -( 57 ) + -0.89
}
} else {
	dog /= -240.073;
	if(destroy(--0.46)){
	( ( --100.3045 - Jon * rule() ) )
};
	if(--COLS){

} else {
	if(-71){
	if(mislead(-bar())){
	26
};
	-betray(-100.1,Ygritte)
} else {
	Arya -= -betray(-1 + protect(-8 * TABLE[destroy(rule(Arya) / ( destroy() ))][ROWS] * ( Hodor ),TABLE[--97][protect()],-0.71));
	Ygritte /= ---0.47 * ( ( Jon ) ) - ROWS + ROWS - ( ( -bar(( x )) ) ) * ROWS * betray();
	if(-0.09 - -rule(Jon) * COLS){

} else {

}
}
}
}
}
var Ygritte = ( rule() )
def TABLE[bar(ROWS)][i] {
	if(ROWS){
	if(-1000.2957){
	Arya *= ( betray(ROWS + destroy(Arya,rule(( ( -( COLS ) ) )),foo(790.5,-1,( TABLE[Arya][Jon] )))) )
};
	if(x){
	if(-25){
	if(-740.01){
	Hodor /= COLS + ( --1 ) / ( foo() * -86 ) * ROWS / ( ( TABLE[y][TABLE[( dog )][---64]] ) )
};
	Ygritte -= destroy()
} else {
	Ygritte += ( ROWS );
	if(( destroy(mislead(betray(0.03,0.15),( ( -96 ) ))) )){
	( Ygritte )
} else {

}
}
}
}
}
def foo(){
	if(Sansa){
	if(( --COLS * -88 )){
	Sansa /= destroy();
	if(Stark){
	if(x){
	destroy(COLS + betray(ROWS));
	if(bar(COLS,ROWS)){
	Ygritte -= TABLE[( ( COLS ) )][-1 * COLS]
} else {
	if(mislead(-bar(( mislead(y,-730.15) - ( ( ( -rule() / ( mislead(--0.27 * foo(0.55,-betray(--Stark) / -0.69)) * ( destroy() ) ) ) ) ) ),foo(( COLS ),Jon,-mislead(-27,COLS) - protect(COLS,-TABLE[mislead(destroy(( protect(-( Arya )) ),betray(),x),-0.92)][( 0.06 )]))),ROWS,83)){
	ROWS;
	Sansa += ROWS * -( Arya * destroy(( Arya )) + -1 ) / -240.26
} else {

};
	if(bar()){

}
}
} else {
	Ygritte /= COLS;
	dog += ( TABLE[( -0.83 + bar(-ROWS) - -57 )][Ygritte] / -TABLE[-Sansa][( 1 ) + Ygritte] ) / ( COLS )
};
	-COLS;
	-150.423
} else {
	Ygritte += dog;
	Arya *= Arya
}
} else {
	x;
	if(foo(Jon) - mislead(TABLE[TABLE[protect(0.99)][-98]][TABLE[---x][dog * destroy(Stark / TABLE[TABLE[--0.28][140.222]][COLS],rule(-x),( COLS )) - ( Sansa )]] + -foo(Ygritte + -( --betray(dog,dog,--( protect(ROWS,bar(-Ygritte * ( COLS ) + COLS,ROWS * ( -84 ))) )) / x ) * --93 / TABLE[Sansa][( ( 350.3 ) + ROWS )]),dog) - Sansa){
	mislead(( ROWS )) * bar() + 6;
	Jon /= destroy(--450.09,Arya)
};
	if(--950.569){
	y;
	mislead() / rule(-49 + ROWS);
	x /= Jon
} else {
	Hodor += destroy(y);
	Arya *= -360.57
}
};
	Ygritte += Hodor
} else {
	if(ROWS){
	dog /= -27;
	-ROWS * destroy(-COLS * -620.997) + ( ( protect(( Jon ),COLS) ) ) / ROWS * -protect(Stark)
} else {
	if(-Ygritte){

} else {
	-39;
	if(( -0.07 )){
	if(( COLS )){
	if(ROWS){

} else {
	if(x){
	if(rule(( COLS ))){
	if(( Jon )){
	if(betray(Ygritte,Jon)){

} else {
	if(Hodor + protect(-0.45)){
	y;
	if(-330.27){
	dog -= COLS;
	Stark *= TABLE[COLS / betray(-rule(( TABLE[y * TABLE[( 770.7701 * ( ROWS ) )][y]][( COLS )] ),-Stark) * -0.74,---( -Jon ) - -( COLS ))][Jon]
};
	( ( ROWS ) )
} else {
	if(y){

};
	if(-29){
	if(( ( TABLE[foo(-16) + ( x )][-Sansa - Arya] ) )){
	( betray(dog) )
} else {
	Hodor *= bar(-55 / COLS - destroy(-47,-59,-TABLE[-Jon][COLS]),-0.68 / -0.84 / Ygritte + ROWS)
};
	dog += TABLE[( 26 ) * --37 + TABLE[-bar(ROWS * Jon,( 1 )) * -360.39][( --betray(-( ( 1 ) ) - --23) ) / x]][rule(( ( -( -( y ) ) - -foo(COLS / -Jon,Hodor,COLS) ) ) / 0.54 + 74,TABLE[( ROWS )][-0.5] / -880.183 + -30,destroy(( destroy(ROWS,0.49) ),x))]
}
};
	if(x){
	Arya -= -0.29;
	Arya /= -170.125;
	destroy(TABLE[y][COLS],-Arya)
} else {
	y += destroy(0.78);
	Hodor *= ( protect(ROWS) );
	Stark
}
};
	if(0.64 / mislead(betray(bar(( ROWS )),-0.22,ROWS),-( dog / bar(( --TABLE[COLS][-Arya - COLS] )) / -110.21 ),( 0.13 * Ygritte ))){
	COLS
}
} else {
	if(( ROWS - TABLE[TABLE[-dog][-dog]][rule(ROWS,ROWS)] ) / ( ROWS )){
	if(Ygritte){
	foo(dog,( betray(TABLE[betray()][Stark],betray(),0.69) )) / ( COLS )
} else {
	-y
};
	Sansa /= betray(betray(( Jon ),protect(-7,COLS,x),-( ROWS )),-90)
};
	if(ROWS){
	Jon -= ( ( 0.7 ) )
}
};
	dog *= 46 * bar()
};
	-0.72
}
}
}
}
};
	y -= -TABLE[TABLE[x][rule()] - rule(( protect() ) - protect(y,0.93),-( bar(-COLS,-dog) ),-x)][COLS + COLS]
}
};
	Stark *= COLS
}
assert ROWS : "Fear cuts deeper than swords."
assert 40 : "What do we say to the Lord of Death?"
def mislead(){

}
def TABLE[-610.761][i] {
	Arya += ---TABLE[( -1 )][-65] / -COLS - ( ROWS ) * Ygritte
}
var x = ( y )
def foo(x){
	Arya /= Stark
}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert bar(-490.68) : "Winter is coming"
assert rule(COLS) : "Fear cuts deeper than swords."
var Sansa = ( dog )
var x = ( ROWS / 62 )
def TABLE[TABLE[ROWS][dog]][i] {
	if(-63){
	TABLE[( Ygritte )][( ROWS - -44 / 94 * --50 )];
	if(Ygritte){

};
	Arya
} else {
	if(-TABLE[rule(0.36,protect(foo(Hodor)) - ( -0.43 ),Ygritte + COLS)][-ROWS / ROWS + ( ( -1 ) )]){
	if(-250.459){
	if(Sansa){
	if(-( dog )){
	y /= ( bar(rule(--Sansa - rule(( mislead() ))) / ( TABLE[y][COLS] ) / ( protect(-( -protect(-34) )) )) );
	if(destroy(COLS,TABLE[x][( TABLE[destroy(Sansa / COLS / 430.37)][( -Arya )] )])){
	if(destroy(ROWS,Hodor,betray(Ygritte,mislead(Arya),-0.55) + ROWS + TABLE[destroy()][( bar(( -1 - bar(ROWS) + ( destroy() ) * ( ( ( 320.4 ) ) - ( ( 1 ) ) ) ),protect(foo(),rule(destroy(-betray(),-660.261),( 0.05 )),y) - betray(Jon,( protect(Arya,-( -95 ) * ( -y ),Hodor * betray(Jon,Hodor) / rule()) ),( x ))) * rule(-ROWS,-( Ygritte ),1) )])){
	( -COLS );
	Ygritte /= 75
} else {
	if(y){
	Hodor += ROWS - -Hodor
} else {
	if(75){
	if(bar(( -TABLE[30.698][-Stark] / -88 ),-110.781)){
	foo(ROWS,betray(TABLE[protect(-bar(betray(( destroy() )),Ygritte),23)][TABLE[Arya][-( foo(( ROWS ),dog,-bar(COLS + protect(( -( Sansa + TABLE[46][( ROWS )] ) / -TABLE[TABLE[--TABLE[-Jon * -Arya - dog][COLS]][Sansa / ( ( protect(Ygritte,rule(-910.33,( protect(y + x) )) - --( --47 * -bar(ROWS) ) / ( bar(dog - --530.04) )) ) )]][-26] * -Stark * destroy(Jon) ),Arya,dog),Stark)) ) * Hodor - ( Stark )]]),( Hodor ));
	Stark += 31
} else {

};
	--0.43;
	Stark += foo(( x / -870.331 ),-TABLE[-0.1][0.58])
};
	if(TABLE[-dog * TABLE[-5][-79]][-ROWS] + -0.98){
	( foo() )
}
};
	mislead(-x,ROWS);
	Hodor += -1
}
};
	Jon -= ( -destroy(COLS,350.0668,0.66) )
} else {
	Stark *= 1;
	TABLE[-( ( COLS ) )][TABLE[( ( ( -rule(( TABLE[-98][--18] + -ROWS ) * rule(Ygritte,1) - dog) ) ) )][bar()]] - 0.62
};
	-TABLE[-40][destroy(COLS,mislead(-0.31,-100,69) - ROWS + -1)]
};
	y *= --0.79 * Sansa
} else {
	if(ROWS){
	ROWS - ( TABLE[Jon][COLS] )
}
};
	if(-0.12){
	Ygritte -= -11;
	if(TABLE[( COLS )][Sansa]){
	if(-( x )){
	( COLS );
	Arya *= -71;
	Hodor += -rule(-1)
} else {
	-Sansa
}
} else {

}
} else {
	bar(foo(),COLS)
};
	if(Arya){
	Ygritte += destroy(8 + Ygritte - Jon,protect(( -Ygritte ),( 0.0641 + ( ( x ) ) ),( Sansa )))
}
};
	if(( -Jon / ( -38 ) ) - ROWS + foo(Hodor)){
	Jon += ROWS * ( COLS );
	if(-1){
	Sansa;
	--28 * ( -0.81 )
};
	if(TABLE[( Arya )][-ROWS - ( -0.16 * -0.12 / COLS )]){
	if(( -80 )){
	x -= -1
} else {

};
	if(-rule()){

} else {
	Stark += betray(48,Hodor / ( Stark ) - Stark,betray(TABLE[( ROWS )][TABLE[Sansa * COLS][ROWS] / dog],--rule(180.472) - 0.71 * 0.79)) * mislead(( ( ROWS ) ),betray(-1 - Arya))
}
} else {
	if(-500.109){
	y;
	Jon -= ROWS - ROWS * -betray(y);
	( -Stark * ROWS )
}
}
} else {
	if(bar(0.2,protect(),--( Stark ))){
	dog += 8
};
	--0.84
}
};
	x;
	Sansa /= Ygritte
}
def TABLE[-destroy(-bar())][k] {

}
var x = -0.97
def TABLE[( -destroy(x,( TABLE[-94][x] * Hodor ) / destroy(TABLE[-rule(Jon) - TABLE[ROWS][-( ( foo(x) ) )]][-( 850.307 )] / TABLE[COLS][betray(TABLE[Arya][COLS],Jon + -protect(Stark,( x ),-ROWS),protect(rule(( TABLE[x][-COLS - Jon] ),x / 1),---ROWS))],-destroy() / ( 20.1319 ),Arya)) - TABLE[TABLE[COLS - -1 - 24][ROWS]][-( Sansa )] )][k] {
	if(--( Arya + ( x ) ) - TABLE[-840.701][ROWS]){
	1 / foo();
	if(dog){
	if(0.25){

} else {
	Arya *= 34;
	if(( TABLE[COLS / --( --( ( -mislead(( -( -( betray(0.91,-( -( COLS * ( x ) ) )) ) / x - 56 + ( foo(Sansa,-x) * -( -ROWS ) / ( x ) - Jon ) ) ) + -1) ) + rule(COLS) ) ) / bar(( Ygritte )) / 0.2][TABLE[-Sansa][72]] ) * -940.0854){
	0.2;
	Stark -= Stark;
	if(-( --1000.149 ) - Jon){
	( COLS ) / betray()
} else {
	COLS
}
} else {
	Ygritte += COLS;
	Hodor /= -( dog / -Arya );
	( ( --1 ) + 1 ) + TABLE[Ygritte][-( ROWS * --destroy(destroy(( ROWS ),ROWS) - destroy(--foo(y),x) * -bar(-TABLE[( foo(( 56 ),1,y) )][destroy(-1)],betray(TABLE[( ( ( ( bar(100.225,94) ) ) ) ) + Hodor][0.53],TABLE[betray(COLS)][-( ( ROWS / ( 0.02 + -0.23 - x + ( 0.21 ) ) ) )]))) )]
}
};
	destroy(rule(( y ),( destroy(bar(1000.84,( 81 ),x - mislead(-( Sansa ),x))) ) + TABLE[110.372 * Jon][betray(Hodor - 7)]),Stark)
} else {
	Stark /= TABLE[mislead()][-COLS] * COLS
};
	if(--dog){

}
} else {
	Sansa / ( TABLE[betray(-( -y ))][( -1 )] )
}
}
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[TABLE[-x / x][rule(protect(--( dog )))]][j] {
	Jon += Sansa - Sansa
}
assert betray(-66) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = -bar(dog)
var Ygritte = ( Ygritte )
var Jon = rule(destroy(Hodor,0.57,-97))
def foo(Hodor){
	TABLE[( --Sansa )][y];
	bar(-69,--betray(TABLE[( Hodor )][---( TABLE[76][COLS] )],bar(-x,mislead())));
	if(-betray(TABLE[Sansa][ROWS] - ( -Hodor ),Stark) / -x * ( -COLS / -26 - ( betray(COLS * -0.14,Arya) ) )){
	if(Arya){

} else {
	0.32
};
	Hodor /= -( ( 380.6 ) )
} else {

}
}
def TABLE[-( x ) * COLS][j] {
	( ROWS )
}
var dog = protect()
def destroy(Jon,x){
	if(-0.64 / y){
	if(bar(( ROWS ),--Sansa - -50 / -85)){
	-COLS - 0.92;
	Sansa += ( 520.2 ) / --820.854;
	( 0.36 * Hodor )
} else {

};
	-betray(( ROWS ))
};
	Hodor *= -3 + Arya
}
assert -destroy(Ygritte,-bar(( Hodor )),rule(( ( 0.99 * ( COLS ) * ( mislead(mislead() + ( -Sansa )) ) ) ) + ( foo(( COLS / COLS )) ))) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ROWS : "Winter is coming"
def TABLE[( -TABLE[Jon / ( ( -0.56 ) * 68 )][Sansa] )][k] {
	Sansa
}
def TABLE[( bar(-( ( COLS ) ),rule(Sansa)) / -( -0.66 ) )][k] {
	y /= -( ROWS ) * COLS;
	Sansa
}
def TABLE[Hodor][j] {
	destroy();
	Stark /= ( Hodor )
}
def bar(Hodor){
	Ygritte;
	if(TABLE[-58][-TABLE[protect()][Sansa]] + Arya){
	if(bar(( Jon ),Stark) * -88){
	if(mislead(COLS,dog)){
	dog += destroy(30)
} else {

};
	Jon
};
	( ( 0.26 ) );
	if(dog){
	( ( x ) );
	Stark += ( ( -16 ) );
	rule() / -( COLS ) + -Sansa / ( dog ) * ROWS / TABLE[betray(-( Sansa ) / Hodor,( --30 )) / TABLE[COLS][-ROWS] / ( Sansa )][foo()]
}
} else {

}
}
var Stark = ( dog )
def mislead(Stark){
	if(-770.1591){
	0.52;
	x
};
	if(COLS){
	x
}
}
def rule(Stark,Jon){
	if(( bar(12,1) )){
	if(rule(COLS,---foo(-89,Jon / -bar(COLS,-mislead(TABLE[0.81][rule(( foo() / ( -rule(protect(Arya,TABLE[( bar(COLS) ) * -( -foo(( betray(50) ),Arya,--dog / rule()) )][Arya]) / protect(ROWS,-foo(Jon,-TABLE[-0.94][mislead(rule(( 650.52 )))],bar(--COLS,( betray() ))) * -betray()),COLS) ) )) + ( -450.42 )])) * ROWS),Jon * --mislead(Stark,protect(Arya)))){
	Hodor += ( -( 31 + -Stark ) )
};
	-140.7
} else {
	-TABLE[-0.93][--( ( ---y + ROWS / -20 - TABLE[( COLS / -Hodor - COLS )][bar(-foo(),foo(x,Hodor),TABLE[y][dog])] ) )]
};
	0.14 * -( ( foo(-protect(COLS,betray()) / x,ROWS) ) );
	protect(betray(-79,( ( Arya ) ) * foo(-( betray(ROWS,-13,--betray(-1,dog)) ))),betray(0.71 - foo(),-430.59))
}
var Ygritte = TABLE[foo(( -COLS / -74 ),ROWS)][-rule(Hodor,-0.75,Jon) - -420.218 * --ROWS]
var Arya = ( mislead(-91,-mislead()) )
def mislead(Sansa){
	TABLE[( 0.91 )][destroy(-Jon,y,mislead(Stark + 62,TABLE[-Sansa][Sansa]))];
	-Arya
}
var x = y
var dog = 260.366
def mislead(){
	Hodor /= mislead(mislead(( -0.97 ) / -0.08,TABLE[( ( --foo(( 44 ),-80.16) ) - betray(destroy(foo(-0.5),COLS)) )][rule(-( mislead(protect(0.11,-mislead(-36) * ( COLS )) / -( -0.21 ) + 39) ))]) - -protect(),-protect(84,TABLE[780.88][ROWS],bar(Jon,TABLE[-dog / -bar(-30) + ( Sansa ) + protect(rule(-( --63 ),-betray(),-COLS - Arya),-270.63) / rule(ROWS,-Jon)][Jon / Sansa],Hodor)) / -77,( 0.93 ))
}
def TABLE[-Sansa * 0.97][k] {
	Hodor /= Hodor
}
assert destroy(-1,-92,mislead(protect(0.37,( ( -bar(--0.33,-43,-( 83 )) ) ) + 34 * -3),67 - -0.66 * destroy(-TABLE[-Stark][( ROWS ) + -y / -47] * -0.24),-foo(-1,( betray(COLS) ) + ( -bar(TABLE[COLS][COLS] - -ROWS) ),( COLS )))) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-260.22 + ( --1 + ( COLS ) )][i] {
	Jon *= --1
}
def mislead(Stark,Jon,Hodor){
	if(Stark){
	Hodor *= TABLE[( y )][( -( Hodor ) + betray(foo(( Hodor ),-1,protect(-0.21,Hodor)),Arya) )]
};
	69
}
def TABLE[--87 / -92 * ( 1 )][k] {
	Arya /= COLS;
	( y - -COLS )
}
def TABLE[ROWS][j] {
	-Arya
}
def TABLE[-x][j] {
	-ROWS - protect();
	if(Stark){
	if(--0.72 * Jon){
	( Sansa );
	Sansa += -66
} else {
	Hodor /= TABLE[0.95][--( 0.67 )];
	y /= TABLE[-80][( ( ( bar(ROWS * -( ( Hodor ) )) ) ) )]
};
	if(dog){
	-1 / -53;
	Hodor += x
} else {
	Ygritte /= ( -1 );
	Ygritte *= TABLE[mislead(foo(protect(-Hodor / ( ( COLS - Stark ) ) / -74),-bar(TABLE[TABLE[( COLS - -Sansa / foo(bar(-ROWS)) * ( bar(betray(-29),--1 - ( Hodor )) ) )][1 - x]][y * ROWS],0.87,( ROWS )),( mislead() )) + Stark + x - -Sansa,-( -350.7941 ) - -( ( 68 ) - COLS - ( Sansa ) - Hodor ) + TABLE[betray(( --Ygritte - Ygritte ) / TABLE[-( -( COLS ) ) + rule(--mislead(-76) - 0.02 * 0.67 / COLS) / ( ROWS / TABLE[COLS][0.04] ) / Hodor][bar(90.531) + -Arya]) / protect(-( ( 0.21 - -420.49 * -710.51 ) ),( ( COLS - betray(-0.27) ) ))][680.6] - ROWS / x + -0.74 * ( -0.94 / Sansa + TABLE[y - Arya / ( -35 * ---0.61 / --betray(-dog - destroy(-y,betray(1,-0.32,TABLE[( 37 )][( ROWS )]))) )][bar(-0.42,Jon)] ) + --Arya * mislead(rule(( ( Ygritte ) )) * 77) - y)][Arya]
};
	if(-COLS){
	COLS
}
} else {

}
}
def foo(dog){
	-250.936
}
def TABLE[670.714][k] {
	dog += Stark;
	if(( Arya )){
	protect(TABLE[ROWS][x])
} else {
	Jon /= TABLE[protect(-1 + bar(( ( ( Sansa ) ) ),dog))][TABLE[( Ygritte )][ROWS - Stark]];
	Hodor -= foo(690.3,Stark);
	if(( betray(-28,-1) )){
	TABLE[( 86 )][-betray(-( betray(Arya) / dog - ( TABLE[betray(COLS)][foo(-15)] ) )) + ( destroy(-TABLE[( foo(-TABLE[mislead(destroy(y,-TABLE[-0.15][protect(-1,--90 * ( -0.11 ))],COLS - ( -64 ) * COLS),--destroy(Hodor,( Jon )) + ROWS * ( ( bar(Sansa / 220.77,ROWS) ) ) + 1 + bar(660.2633) - dog)][COLS * protect(betray(( destroy(Arya) ),ROWS) * 0.17,57)],-0.3,( foo() )) )][( ( -1 ) )],1,Hodor) ) - rule(Jon,betray(9 + TABLE[-destroy(( bar(( x ),-rule(Stark - TABLE[( x ) + Sansa][protect(rule(-1,TABLE[0.36][TABLE[Arya - 0.76 / COLS + rule(rule(destroy(18,mislead())),-destroy())][Stark]],x))],-0.86) + -betray(-98,1) + -950.2904) ))][-Sansa] - ROWS * rule(),rule(COLS,ROWS - destroy())),99) / rule(TABLE[Sansa][x],--bar(foo()))];
	protect(bar(-( foo(Arya * ( ( TABLE[TABLE[bar(ROWS)][( mislead(COLS,( -mislead(-Hodor,protect(Arya / ROWS),rule(-Jon)) ) * rule() * rule(rule(-rule(COLS,95 + Ygritte) + Jon - rule() - TABLE[( -200.57 ) / rule() * COLS][COLS] - y * ( Jon ),Arya)),-14) / --( ( ( 24 ) ) ) * bar(( bar(Arya) ),( Hodor )) + ( -0.85 + COLS - destroy(--TABLE[Hodor][( ---1 ) / -( TABLE[COLS + ( bar(rule(-( Arya ),TABLE[mislead()][dog] - -Jon)) ) - -( COLS )][ROWS / Jon] * Sansa )] - 19 * Hodor + betray(Jon,Sansa - ( ( mislead(Ygritte + TABLE[( foo(x,---ROWS * ( TABLE[--36 + -Sansa][--13] ),0.75 + -Stark) ) - y][( betray(--betray(),( 0.53 ) - foo(destroy())) )],--0.08) ) ))) ) )] + ( ( destroy(( 140.67 )) ) ) / TABLE[120.277 + -ROWS][-99]][( betray(-0.88) )] ) ) + COLS,protect(y)) ) - -protect(( -0.53 ))),-bar(foo() + rule(Hodor),--7,( ROWS )))
}
}
}
def TABLE[TABLE[bar(Sansa,( mislead() ))][1]][k] {
	if(-0.7){
	Hodor
};
	( Ygritte )
}
def foo(x,Hodor){
	Arya -= Jon;
	if(-( -x )){
	Jon
} else {
	-( ( rule(---610.19) ) );
	if(foo(( -( mislead(mislead(betray(1)),betray(-75) * -( -COLS ) + --protect(x) - ( ( protect(x,-betray(( ROWS ),95,Ygritte * -0.56 * mislead(-destroy(( Stark )))),betray(ROWS)) / 0.4 ) )) ) ))){
	Arya += --( ( -COLS + -74 / dog / -( -( 93 ) ) ) )
} else {
	dog /= ROWS
}
}
}
var Hodor = Hodor
def betray(){
	if(-Hodor + -78){
	-0.28
} else {
	if(dog){
	foo(-1,0.74) / ( y * rule(destroy(-300.424),( ( ( ROWS ) ) ),foo(protect(-21),COLS) - ( TABLE[-TABLE[-( TABLE[rule()][bar(protect(-betray(),( Jon ) - Stark * -950.1,Jon))] )][mislead(ROWS)]][-ROWS * -11 * mislead(Arya)] ) - COLS) + -0.73 * dog );
	if(COLS){
	if(mislead()){
	Jon -= -Arya
};
	if(ROWS){
	-( 1 )
}
}
};
	x /= rule(--0.92,( -( 54 ) )) + bar(-( -0.4 ),Hodor)
};
	Arya
}
var dog = Arya
assert Hodor : "Winter is coming"
assert y : "Winter is coming"
def TABLE[( COLS )][k] {
	190.955;
	Arya += ( ( 0.02 ) )
}
def rule(x,dog){
	if(TABLE[-39][-0.95 - Stark]){
	x /= Hodor
} else {
	if(0.97){
	if(--( TABLE[Stark][destroy(ROWS + protect() / ( ( 0.75 ) ))] )){
	Sansa += Stark;
	Arya /= -mislead(Jon)
};
	1
};
	if(COLS){
	mislead(( ROWS ),( Hodor ))
}
};
	TABLE[( TABLE[rule(rule(( Jon ),-( ( ( Hodor ) / mislead(Stark,( -betray(betray(),COLS * TABLE[( Jon )][COLS],betray(( -230.908 ),mislead()) * ( protect(( -18 + ( ( 1 ) ) - protect(mislead(),x) / Jon - betray(( 0.12 + -COLS ),-75,betray(-COLS,foo(-COLS)) / COLS * -TABLE[y * -Hodor - 23][dog]) ),Arya,dog + 60 + Sansa) )) )) ) )),-1,ROWS)][-0.4] )][--0.22]
}
def TABLE[betray(-0.73 * -betray(-destroy()),-Sansa,x)][j] {
	if(destroy(( Arya ),0.19,TABLE[Ygritte * protect()][destroy(Sansa) / -y]) - COLS){

};
	if(Jon){
	Hodor += ROWS;
	if(( COLS )){
	if(ROWS){
	if(-( ( -( ( -rule() - ROWS ) * destroy(Stark - ( ( -TABLE[y][-0.99 * betray(mislead(( betray(77 + -98,Stark) ),Sansa)) * COLS / -ROWS * --80 * dog - mislead(-25,COLS,dog) - -1 * foo(COLS,41)] ) ) / Hodor) ) / -Jon - -mislead(29,( ( ( Sansa ) ) ) * ( x ),( TABLE[destroy()][Arya] )) - ( -0.22 ) ) )){
	if(( -destroy(Stark + TABLE[--rule(bar(-ROWS,0.59)) - rule(COLS,( protect(y) ) - -1)][-Sansa]) + -COLS )){
	dog += Stark
} else {

}
}
}
} else {
	Arya;
	if(Hodor){
	x -= ( Arya );
	dog += Jon
}
}
}
}
def TABLE[-x][k] {

}
assert mislead(COLS) : "Winter is coming"
def TABLE[TABLE[destroy(x,TABLE[bar(destroy(-TABLE[1][Arya],-( Arya ) + COLS))][0.41])][-0.25]][k] {
	x += Jon
}
def TABLE[-y][i] {
	foo() * foo(470.131,( y ),mislead(destroy(),-foo()) * -66);
	700.824;
	dog
}
def TABLE[betray(TABLE[rule(Arya,protect(-( dog ))) + -COLS][dog],COLS,41) + -( 9 )][k] {

}
def bar(dog,Stark){
	if(( -26 )){
	Sansa /= x / ( --( -COLS ) ) - -1
}
}
def TABLE[-0.98][k] {
	( rule() );
	Hodor
}
var y = protect()
assert ( -Arya / ( Arya ) ) : "Nothing burns like the cold."
assert foo() - destroy(( ( mislead(Arya,rule(betray(( x ),mislead(Hodor,( Ygritte ),Sansa)),Ygritte)) ) ) / mislead(-600.989),-Jon,betray(betray(-TABLE[66][Ygritte]))) - 1 / bar(( y + ( x ) ) + 0.17) : "Winter is coming"
def mislead(x){
	Jon -= rule()
}
assert -TABLE[betray(x)][mislead(( ( -rule(ROWS,COLS,( COLS )) ) ),destroy(protect(),-( ROWS ),-x)) / Jon] : "Winter is coming"
def foo(dog){
	if(Jon){

};
	Jon /= 1
}
var Arya = ( -( ( ROWS ) ) )
def mislead(Arya,Ygritte){
	( x );
	if(( -TABLE[-destroy(Ygritte,-0.74) + ROWS][ROWS] )){
	bar(0.54,-bar(Hodor));
	bar(Ygritte)
};
	Hodor *= ROWS + COLS
}
def TABLE[betray(Arya,TABLE[betray(betray(TABLE[-COLS][48],dog * destroy(( protect(( mislead() ),--70) ),COLS)) / ( ( mislead(-Ygritte,-0.05) ) )) - Hodor][COLS / ( -560.12 )])][j] {
	x += 520.037
}
assert -rule(( ROWS + -mislead() - COLS * Sansa - ROWS ),mislead(),-1) : "Nothing burns like the cold."
def betray(Jon,Hodor){

}
def betray(Stark){
	( Arya );
	if(COLS * COLS + foo(-120.7)){
	if(COLS){
	if(Ygritte){
	if(( Arya ) - dog){
	protect();
	x += ROWS + Sansa;
	Jon *= rule(bar(destroy(-bar(-y,rule(mislead(-ROWS * ( -Sansa )) + -0.42))),ROWS),--ROWS,COLS)
} else {
	if(-1){
	if(32){
	dog /= ( COLS );
	if(-ROWS * ( mislead() ) / --0.6){

}
} else {
	Jon -= rule()
};
	( TABLE[bar(ROWS)][bar(0.03 * -1 + --TABLE[rule(COLS)][mislead(-( COLS ),( foo(Hodor) ),( COLS / -( TABLE[ROWS][Jon] ) + ( betray(-1,bar(),COLS) ) ))] + ROWS - -destroy(foo(betray(( COLS ),65,( destroy(--( rule(betray(Hodor,Stark,-23),COLS) ) * Hodor) )),betray(Arya) * dog)),-ROWS + ( -1 ))] )
} else {
	-mislead(-1)
};
	if(bar(1)){

} else {
	if(Sansa){
	if(bar()){
	if(TABLE[COLS][( destroy(0.88) / 0.99 * x )]){
	( ( Jon ) + 290.6 );
	Hodor - ( ROWS );
	ROWS
};
	Jon += Sansa
}
} else {
	TABLE[TABLE[TABLE[270.17][protect(dog,x)]][( -COLS )]][rule()]
};
	if(COLS){

};
	if(destroy(--Stark)){
	if(-0.53){
	x -= Arya / -Stark;
	Stark *= ( -42 )
} else {

}
}
}
}
} else {
	Sansa -= 1
}
} else {
	( COLS )
};
	if(dog){
	if(destroy(Hodor)){
	Arya /= mislead(-( -y + Arya - ( -1 ) / ( -Jon ) * x ) * Stark);
	TABLE[( ( TABLE[protect(( -62 ))][-0.32] ) )][ROWS]
} else {
	COLS / -Jon;
	if(-71){

}
};
	if(53){

}
}
}
}
var Ygritte = -rule()
def TABLE[Hodor][k] {
	Ygritte -= rule(( ( Hodor / 230.58 ) ),( x / ROWS ))
}
def TABLE[-27 + TABLE[Stark][1]][j] {
	betray(TABLE[Stark][Ygritte])
}
var Jon = --TABLE[( 0.79 ) / bar(TABLE[--760.33 / --destroy(Jon,-Hodor,Sansa) - x + y][-( mislead(0.34,ROWS,-97 / -( ( -foo(ROWS,COLS) ) )) ) + COLS + 1],( dog ),Arya)][Hodor]
assert COLS : "Fear cuts deeper than swords."
def TABLE[COLS][j] {
	TABLE[( y + COLS - ( bar(( -730.629 ),Arya) ) * -( 77 ) )][77];
	( foo(94,65) * ( ( Sansa ) ) );
	Jon -= y
}
assert ( 8 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(){
	( Stark )
}
assert ROWS * -0.17 : "Nothing burns like the cold."
assert -72 : "Nothing burns like the cold."
def protect(Hodor){
	x /= -0.28
}
def TABLE[Jon][k] {
	if(-( --0.37 / Jon + Ygritte )){
	if(betray(( -destroy(Jon) ))){
	if(TABLE[-( 0.24 )][-0.08]){
	Hodor /= betray(( -foo() ),Stark);
	if(Sansa){
	if(TABLE[-0.67][0.17]){

}
} else {
	if(TABLE[betray(( ROWS ),( Arya ),--bar())][-76] - ROWS){
	rule();
	Stark += bar(TABLE[ROWS][-0.72],TABLE[ROWS][( ( ( dog ) ) )])
};
	if(Stark){
	1;
	Ygritte -= -60.1319
} else {
	if(Jon){

}
}
}
}
} else {
	if(Sansa){
	if(y){

};
	--0.74
};
	y += 0.18
}
};
	15;
	Sansa
}
def TABLE[98][j] {
	if(bar(0.24,TABLE[dog][-1 + ( betray(0.41 - TABLE[-COLS - Hodor][Sansa] - y - -1,rule()) )] / y)){
	Sansa *= destroy()
};
	foo(88)
}
var dog = ( ( ( TABLE[( x * -Ygritte )][TABLE[ROWS][COLS]] ) ) )
def foo(){
	COLS;
	if(( ( COLS ) )){
	Jon += ( -73 - 38 ) - 0.59;
	x += Ygritte
};
	Hodor += -TABLE[y * Hodor + foo() / mislead()][-530.4]
}
assert -74 : "One can not simply parse himself"
def bar(Arya){
	-x
}
def destroy(Jon){

}
def betray(Hodor,Hodor){
	Stark /= Jon;
	x -= --( bar() ) * COLS - -( ROWS - -0.48 + ( mislead(Hodor,Stark,ROWS) ) );
	COLS
}
def protect(Arya,x){
	if(Ygritte){
	if(ROWS){
	ROWS
};
	dog /= -protect(0.49)
} else {

};
	Stark -= -0.47;
	y *= TABLE[-0.69][-47]
}
def destroy(Arya,Ygritte,x){
	COLS / ROWS / 0.55
}
var Sansa = -( foo(0.75,COLS) )
assert bar(-Arya,ROWS,rule()) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = -10
def protect(x,Arya,y){
	Arya += -Stark
}
assert 0.64 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = TABLE[destroy(protect(Jon,840.716) - Stark * protect(bar(Jon),dog),ROWS / -610.78 / y)][y]
assert TABLE[protect(TABLE[Jon][ROWS],foo(-97))][-y * protect()] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( ( TABLE[-0.15][y] ) ) : "Fear cuts deeper than swords."
var y = TABLE[0.81][destroy(COLS,Hodor,Arya / -1)]
def betray(Hodor,Ygritte){

}
var y = 690.9
assert bar(Stark) : "One can not simply parse himself"
var Arya = x
assert -mislead(-74) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -540.059 : "Fear cuts deeper than swords."
assert Hodor : "Fear cuts deeper than swords."
assert mislead(-dog,( y ),bar()) : "Fear cuts deeper than swords."
def foo(dog,x){
	dog -= --( Sansa );
	if(COLS - 54){
	if(-mislead(COLS) / destroy()){
	-1;
	-30 / COLS / ROWS + -1;
	Sansa /= TABLE[-1][foo(Ygritte,( ( ( -ROWS ) ) ),Jon)]
} else {
	y /= --0.92 - -0.7 - 1
};
	( -1 ) + Ygritte - ( -0.97 );
	if(( rule(---610.75,0.39,36) )){

} else {
	protect(ROWS);
	if(( dog )){
	Sansa += -mislead(Ygritte - 1);
	if(-14){
	if(---TABLE[( ---( -34 ) )][( bar(( 23 ),0.98 - -1 + ( ( ( Arya ) ) ) / ( -100 ) / destroy(COLS)) * betray(( --0.81 - TABLE[foo(-dog,-TABLE[dog][45])][foo(Arya,0.67)] / -protect(-TABLE[-230.28][6] * rule(( Arya ),-61) / Sansa - ( -( -Arya ) * ROWS - TABLE[-destroy(Arya)][Arya] ) - Stark / ( -TABLE[-51][y] ),rule(ROWS,ROWS)) - foo(betray(y / x),( --10.2 )) )) + ( protect(Stark) ) )]){
	if(Ygritte){
	Arya -= ( ( -1 ) );
	if(-ROWS){

} else {
	if(Sansa){
	Arya
};
	Sansa += bar(( -6 ));
	if(-ROWS){
	if(bar(destroy(( protect(Arya) ),Arya,( destroy(destroy(-mislead(Arya) + y),-TABLE[( x )][rule(Ygritte,rule(-26),ROWS)]) )))){
	Ygritte += -1;
	dog += ( -( betray(destroy(betray(),13 + TABLE[mislead()][Ygritte / 0.98 / foo(-( --protect(Arya,protect()) ),Jon) - COLS])) ) * bar(( ( -Stark ) )) )
}
} else {

}
}
} else {

};
	if(destroy()){

} else {
	Stark += -72
};
	Jon /= -1
} else {
	if(Sansa / ( 1 + 81 )){
	Sansa += Jon;
	-ROWS
} else {
	COLS;
	if(-0.51){
	-650.39;
	Ygritte += destroy()
} else {

}
};
	dog += dog
}
} else {
	COLS
}
}
}
} else {
	Stark
};
	Hodor
}
var Stark = TABLE[0.31][82]
var Jon = Arya
def TABLE[---( foo() - 120.003 ) - ROWS + Ygritte][i] {
	Ygritte /= -0.12
}
assert -destroy(-Sansa,--dog) : "What do we say to the Lord of Death?"
var x = ( COLS )
def TABLE[--0.82][k] {
	dog += ( -0.26 - ( -( betray(( ( protect(Sansa) + Stark * 1 ) ) - ROWS - -0.5,-97) ) ) - betray(Jon) ) - Arya
}
def TABLE[ROWS * ( -0.83 )][i] {
	dog *= 670.12;
	if(Ygritte){
	y /= -1;
	Arya /= Jon
} else {
	COLS
}
}
def TABLE[ROWS - Sansa / Hodor][j] {
	Hodor -= dog;
	dog /= bar(-ROWS,( ( -Hodor ) ))
}
var Jon = betray(ROWS,1,( bar(ROWS,COLS) ))
def bar(dog){
	dog += bar(TABLE[Hodor][( x )],destroy(dog,TABLE[( betray() * ( dog ) )][--0.64] / betray(ROWS) * ( dog ) * destroy(0.58)))
}
def destroy(y,Sansa){
	Ygritte /= --46;
	if(Hodor){
	x /= -ROWS
} else {
	if(-rule()){
	-betray(mislead(( mislead(y) ),43 / ( -COLS ),--0.5)) * y + -x + COLS;
	-280.1
} else {
	Jon *= TABLE[( mislead() )][( rule(mislead(Hodor / Stark),x) )]
};
	x *= -TABLE[( ( 3 ) )][( -TABLE[ROWS][Ygritte] )]
}
}
def TABLE[TABLE[-destroy()][Jon]][k] {
	Sansa += ( ( ROWS ) )
}
assert -betray(Sansa) - COLS + 0.21 : "Fear cuts deeper than swords."
var Stark = ( ROWS )
def TABLE[12][k] {
	Hodor /= foo();
	y
}
var dog = dog * 0.9
def rule(Jon){
	Stark
}
def TABLE[( bar(0.26) )][j] {
	y - rule(dog,destroy(ROWS),1 * TABLE[( TABLE[TABLE[Hodor][Arya]][-0.71] ) + ROWS][ROWS] / y);
	if(( foo(COLS,COLS) + TABLE[( TABLE[foo(destroy(),ROWS)][rule(COLS,( ROWS ))] )][bar(foo(-20,TABLE[( betray() )][--0.7]),( Arya ))] - TABLE[dog * COLS][( -ROWS )] )){
	Sansa /= -( rule() );
	Ygritte *= destroy()
} else {
	Ygritte *= ( --Ygritte )
}
}
def TABLE[mislead(--( Ygritte ))][j] {

}
var y = -protect(( TABLE[( -mislead(( -970.2557 ),TABLE[-destroy(rule(Ygritte),---0.28 - TABLE[-0.41][-destroy(COLS,-0.58)])][Hodor] / 41) + Sansa )][COLS] ),-14 * -81)
def TABLE[ROWS][k] {

}
assert TABLE[270.805 * Arya][---( 44 ) / -( TABLE[TABLE[-( Arya )][TABLE[TABLE[destroy()][ROWS]][-0.12]] + foo(-( -0.54 ),-0.24 / -ROWS)][( -dog )] ) + ( ( -330.6 ) )] * ( ( x ) / Sansa ) - COLS : "Nothing burns like the cold."
assert ROWS : "Fear cuts deeper than swords."
var Sansa = -( y )
var dog = ( -Jon ) / dog - ROWS
def protect(Sansa){
	Arya += Sansa;
	ROWS
}
def rule(Sansa,Stark){
	Arya /= foo(Hodor);
	if(-betray(mislead(-( -dog )))){
	if(TABLE[( ROWS )][foo(ROWS,( ( Jon ) ),foo(ROWS,0.12))]){
	Arya += betray()
} else {
	Sansa -= ( 450.025 );
	y *= protect(TABLE[COLS][-( -0.13 )],--72)
};
	y -= ( rule(x,Jon) - rule(-Stark) - ( --1 - mislead() ) );
	-500.35
} else {
	if(0.97){
	if(protect(-( dog ) / bar(--TABLE[destroy() / x][Hodor]),Sansa,TABLE[TABLE[( 0.9 )][( Hodor ) + ( COLS ) * TABLE[( protect() )][-( -0.39 )]]][0.81])){
	rule(mislead(--61),betray(),ROWS);
	Stark -= -( Hodor ) + COLS;
	if(Ygritte){
	Jon += x
}
};
	dog -= destroy(-COLS / -ROWS,-COLS / TABLE[ROWS * mislead(730.65,dog,Ygritte)][-34]) * TABLE[( ( destroy(-protect(-0.55)) ) )][68];
	if(destroy(mislead(( ROWS )),Hodor)){
	if(-77){
	Jon *= TABLE[rule(-mislead(Stark),x * -TABLE[-ROWS][COLS],--( -55 / 0.19 ) - y / betray(-betray(-COLS + y / COLS) / ( ROWS ) * ( 9 ),protect(Arya,COLS),destroy(ROWS,-protect(betray(-dog / 1000.2589,--19,-rule(rule())),-0.66),betray(--foo(-0.02,betray(0.92)),0.09,foo()))) + -0.19 / mislead() + TABLE[-44][( ( Hodor / rule(( 1 )) ) )] * betray(-dog))][TABLE[Jon / y][TABLE[---TABLE[-Jon][-0.45]][64 / TABLE[Ygritte][COLS] * Jon]]] / -51 / ROWS;
	if(Hodor){
	Arya -= ROWS;
	Hodor *= --0.48
};
	Ygritte += ( bar(rule(98),rule(rule(Hodor),( -COLS * -foo(y) ))) )
};
	if(COLS){
	if(protect(protect(bar()))){
	Sansa *= ROWS;
	if(0.9){
	betray();
	if(( ( ROWS ) )){
	dog *= ( -34 )
}
} else {
	ROWS;
	if(ROWS - TABLE[Sansa][TABLE[Arya][protect(bar(bar(Hodor * --Arya,-ROWS + rule(-y,Hodor) * ( COLS ) + ROWS + ROWS + --Ygritte / destroy(-0.43,-1 * ( COLS ) / Ygritte - COLS) + bar(-Sansa,TABLE[COLS][Jon],protect(mislead(-0.1,COLS,-COLS))))),Arya / -Ygritte * -Sansa / -67)]]){

} else {
	Hodor;
	COLS;
	Stark /= -0.41
}
};
	-rule(protect())
} else {
	if(COLS){
	if(COLS){
	if(( TABLE[y][rule(COLS,-bar() / --0.99 - dog)] )){
	Sansa *= ( ( ( -ROWS + TABLE[mislead(-( ( y ) ))][0.41] / ( foo() ) / 72 * ( foo(destroy(( Sansa ),rule(-1 / Stark,820.3087),Jon),COLS) / -36 ) ) ) );
	if(-Stark){
	( ( ( bar(-0.33,-mislead(-1 - COLS,mislead(Arya,( ROWS ))),-TABLE[TABLE[-( -( --Sansa ) )][protect()]][-rule(TABLE[( Sansa )][TABLE[-17][bar(Hodor,( COLS ))]],bar(destroy(-Ygritte,ROWS,destroy(-29,( COLS / -bar(TABLE[( rule(x) )][bar(-ROWS,protect(COLS))]) ))),bar(foo(( 500.6 )),dog)))] / -0.13 / ( COLS )) ) ) );
	-Jon - destroy()
} else {
	if(x){
	Jon /= ( -1 )
}
};
	x -= Sansa
} else {
	if(Arya){
	Ygritte *= -60.7324;
	if(Arya){

}
}
};
	if(destroy()){
	if(TABLE[-1][1]){
	Sansa += TABLE[( protect(Jon) / -76 )][rule(( ( betray() ) ) + Stark / 30,-Jon,ROWS)]
} else {
	if(-ROWS){
	Arya += ROWS
} else {
	if(( ROWS * rule(-1 / -ROWS) )){
	x
};
	Sansa -= bar(-( ROWS ),rule(x,betray(ROWS,( -dog ))))
};
	x += ( --rule(0.75,TABLE[( foo(( foo(--ROWS) )) / COLS )][rule(TABLE[Hodor][ROWS] * Ygritte,y)]) )
}
};
	if(100.66){
	x += 0.54 + --( Jon )
}
};
	if(dog){

}
} else {
	foo(-55)
}
}
} else {
	-79;
	TABLE[Sansa][Stark];
	Sansa += Arya
}
}
};
	if(mislead(-1 - -59)){
	rule(protect(y,( bar(ROWS) ),bar(COLS,92,( --protect() - bar(--0.07) ))),0.12,y + foo())
}
}
}
assert bar(-0.12,bar(( destroy(Sansa,-ROWS + ROWS) ),TABLE[--mislead() / ROWS][destroy()] * 29,-TABLE[TABLE[foo(( ( bar(( COLS ),protect(rule(59) / Stark)) ) ))][TABLE[( ( -COLS ) )][betray(-mislead(-0.01 * ROWS * ( COLS )),96)]]][mislead(--12,( Hodor ),1) + dog] / TABLE[Sansa][Sansa]),TABLE[--( -( -1 ) ) - Hodor][ROWS]) : "Winter is coming"
var Ygritte = -mislead()
var Hodor = -44
assert Stark : "Fear cuts deeper than swords."
def TABLE[destroy(( dog / -65 ),-960.3075,bar(Sansa * rule()))][k] {

}
var dog = ( COLS )
def bar(Jon){
	if(TABLE[24][ROWS]){

} else {
	if(ROWS + mislead(Stark)){
	dog *= TABLE[400.7][-0.68]
} else {
	destroy()
}
};
	y *= Sansa;
	Arya += -0.9
}
assert 0.64 : "Winter is coming"
var Jon = ( -destroy() / y )
def betray(y,Arya){
	Arya *= COLS;
	if(rule(COLS,y)){
	-0.66;
	Sansa += x
} else {
	Stark += -890.618;
	y *= betray(( ROWS ),--83,betray(810.779))
}
}
assert ( Hodor ) : "One can not simply parse himself"
def TABLE[COLS][j] {
	rule();
	if(( ( -( betray(dog) ) ) )){

}
}
var Hodor = Jon
assert -Ygritte * 0.79 : "What do we say to the Lord of Death?"
def bar(Stark,Arya){
	( 0.85 );
	Sansa
}
assert ( ( ( mislead() ) ) ) : "What do we say to the Lord of Death?"
assert dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Arya * -Jon][i] {
	x *= ( -betray(( foo(-TABLE[bar(-y,COLS)][-0.5],bar(( -1 * Stark - ROWS ))) )) - ( ROWS * ( Stark ) * ( ( 1 ) ) ) / -770.25 * -22 )
}
def TABLE[ROWS][i] {
	y += -1;
	Stark *= ( mislead() )
}
def rule(Stark,dog){
	if(protect(COLS) / -TABLE[x + -0.01][COLS - 85]){
	if(y){
	( -81 )
} else {

};
	Jon *= ROWS
} else {
	Jon
}
}
var Hodor = ( ( -0.09 ) )
var Hodor = TABLE[-( -COLS )][ROWS]
var Stark = Jon
var dog = ( -93 )
var x = -0.79 * bar(( 1 - --0.95 - ( Stark ) + mislead(Stark * ROWS) - -510.156 )) + -( foo(-0.05,x * ( betray(--59,0.68,Ygritte - betray(( -0.52 ),--Ygritte + ( ( ( --Arya ) ) ))) ),COLS * ( destroy(mislead(Arya,( COLS / dog ))) ) + ( 77 )) )
def bar(Jon){

}
var Stark = -betray(1)
def TABLE[( bar() )][j] {
	Hodor -= -( ( 0.11 ) ) - Jon;
	if(foo(0.58,9 - COLS * mislead(( --protect(COLS,TABLE[y / y][( Arya )]) / Hodor - foo() ))) / 97){
	if(bar(COLS,--0.22)){

} else {

};
	-0.34
}
}
def destroy(Hodor,dog){
	if(mislead(( Ygritte ))){
	if(( TABLE[( TABLE[COLS][-TABLE[TABLE[( COLS * protect(( 0.72 ),( 0.2 ),( Sansa ) - ( ( TABLE[Sansa * ( 1 )][50 / TABLE[rule(-66 + ROWS / ( -1 / TABLE[-27 * mislead(betray(foo(-430.031,Stark),( foo(foo(mislead(mislead(TABLE[-1][foo(( 0.09 ),y) - betray(-dog,( Jon )) * Hodor]),TABLE[-ROWS][( -ROWS )],TABLE[TABLE[-0.01][-( Jon )]][-1]),100) + --Jon) )))][ROWS] ),ROWS,( COLS ))][-0.89]] / dog + ( ( -protect(--690.136) ) ) ) ) * -y) - Stark )][destroy(COLS,( 0 ))]][bar(-destroy(-TABLE[bar(bar(-6,-0.28))][-0.91 + mislead(betray(protect(( COLS ),mislead(-18,--0.58)),0.89,210.36),( 0.36 ))],ROWS + Stark) + -0.78 + 0.12 * ROWS,mislead(destroy(0.23,foo(1)),( TABLE[--COLS][-1] ) * ( -( -Stark ) )),y)] / ROWS + TABLE[foo(Stark + Jon)][Ygritte]] )][( -0.76 )] )){
	Stark += ( COLS );
	protect(ROWS)
};
	Sansa *= ( 0.32 ) - TABLE[-87][TABLE[-0.38][rule(-73)] * Jon]
} else {
	Arya += Sansa
};
	if(--580.29){

}
}
assert TABLE[( 0.55 ) * ( 0.07 )][1] + Jon / COLS : "Nothing burns like the cold."
var dog = COLS
assert -81 : "Nothing burns like the cold."
def TABLE[( ( foo(Arya) ) )][i] {
	Ygritte *= ROWS
}
assert ( ( -70 ) ) : "One can not simply parse himself"
var Hodor = ( Arya )
assert -dog : "Winter is coming"
assert -TABLE[rule(( -0.41 ),-ROWS + Sansa + -( COLS ) + -0.99) - bar()][COLS] / protect(Ygritte,rule(( ROWS ),-bar(-bar(),TABLE[-TABLE[destroy()][-53] - -0.3][bar(0.88)]),y)) : "Winter is coming"
def TABLE[( rule(-69 * 85,x) / -( -0.53 / -( ( 1 ) ) ) - COLS / 0.72 )][k] {
	TABLE[foo() - Hodor][y - rule() * ( COLS )];
	dog *= ( ( Ygritte ) - --ROWS + Arya / -91 )
}
def protect(Hodor,y){

}
var Ygritte = COLS * Jon * destroy(0.45,0.62,( y * -0.43 - --bar() - foo(-ROWS / Sansa,0.24) ))
var Sansa = foo(destroy(( 0.16 ),-Hodor),( -( --210.77 * ROWS ) ))
assert ( rule(-betray(rule(120.129,-foo(y) - rule(( betray(y) ) * COLS,Ygritte) - Arya + ( y ) + -TABLE[---25][Ygritte / ( Ygritte / ROWS * foo(TABLE[---TABLE[COLS / foo() - TABLE[-( bar(bar(dog,( TABLE[foo(0.11,-Jon)][( COLS )] ),-( y / --( x ) ) - foo(Hodor)),protect(-TABLE[-ROWS / -protect(betray(( --16 )),rule())][x],-0.34 - COLS)) )][( 410.59 * ROWS )]][destroy(COLS)] / TABLE[Jon][x] * -12][-28],Hodor,TABLE[--7][TABLE[Hodor][280.3]]) - ( TABLE[protect(bar(( -80 ),COLS - -Arya * ( -ROWS + TABLE[-0.08][Ygritte] ) + COLS / ROWS,-( ( rule(TABLE[-COLS + ROWS][bar(-440.47,Jon + mislead(destroy(( TABLE[Sansa][Stark] ))))] * ROWS) ) )))][y] ) / ( dog ) )] / COLS + Arya / -ROWS,dog * destroy(COLS) - ( ( --31 ) ) - 820.899)),COLS) ) : "Fear cuts deeper than swords."
assert Sansa : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(dog,Stark){
	Arya += protect(( ROWS ),Arya * -36);
	Arya *= ROWS
}
assert 890.789 : "One can not simply parse himself"
var Jon = ROWS - 14
assert destroy(COLS,( protect(y) )) : "Fear cuts deeper than swords."
def TABLE[y][i] {
	( -rule(( foo() ) * ( ROWS - --86 ),TABLE[TABLE[dog][mislead(-0.81,betray())]][1],39) );
	0.42;
	Hodor += TABLE[1 + -protect(-410.673) * ( ( bar(x) + --790.914 * TABLE[ROWS][y] ) ) * --( rule(( COLS ),0.38) / y )][32]
}
def TABLE[-0.4][i] {
	1 * Ygritte;
	( ( Hodor ) )
}
var Jon = -( Sansa )
def protect(){
	0.8;
	if(-mislead(Jon,-45,COLS)){

} else {
	if(-rule() / ( ( COLS ) )){

};
	0.83;
	Arya
}
}
def bar(Stark,Arya,Sansa){
	destroy(-0.46 - -Jon + mislead(-( TABLE[rule(Hodor,-0.56 - Arya) / Ygritte][ROWS] ),destroy(x,foo(COLS,0.73 - ( Stark )),ROWS * COLS),foo()),-500.376)
}
def bar(Jon){
	if(36){
	dog *= 94;
	( TABLE[rule(--0.6 / 75)][COLS] )
} else {
	Sansa += ( COLS - ---1 - Stark + ( -----8 - foo(foo()) + mislead(TABLE[0.9][39] * ROWS + Stark / ( rule(COLS,( 1 )) ) - Stark + bar(( destroy() ),dog),-31) ) - destroy(Ygritte,COLS,rule(-790.683,( ROWS ),-2) / Stark) )
}
}
var y = ROWS / ( -TABLE[-Jon / --240.3 + -COLS / ( Jon / 0.17 )][bar(-x)] )
def rule(Arya,Arya){

}
def TABLE[rule(TABLE[foo(( Sansa )) + ROWS * mislead()][Stark * y],-bar(---TABLE[rule(COLS,--0.47)][destroy(( Arya * ( protect(( y / -190.968 ),-destroy(( betray(-( -Arya )) )),--ROWS) * -destroy(ROWS) ) ))] + betray() * ROWS,( TABLE[protect(( betray(1,190.074) ),protect(Ygritte,Sansa,Jon) + ROWS)][bar(-0.5)] )))][i] {
	-0.61 + -880.17;
	if(Stark - Sansa){
	-ROWS;
	TABLE[-rule() * ROWS][protect(( -ROWS + TABLE[bar(TABLE[0.47][Hodor],( -1 ))][mislead() * 0.2] ),0.63)];
	x -= Ygritte
}
}
var Hodor = 60
def TABLE[rule(( -Hodor * --COLS - destroy() * Hodor * ( bar(-0.12 + -destroy(),ROWS) ) * 0.52 - ( -Hodor ) ),Arya)][j] {
	Sansa += ( 0.86 );
	Ygritte /= ( --( 0.44 ) + 0.43 )
}
def TABLE[rule(-TABLE[destroy()][TABLE[Hodor][-( 0.48 + 35 )] - y])][k] {
	if(( -( COLS ) * 0.31 )){
	if(0.9){
	-Hodor
};
	if(Arya * ( COLS ) * -TABLE[COLS][COLS] + protect(foo())){
	0.11
}
} else {

}
}
assert destroy(-0.7,--( ( 40 ) )) : "Winter is coming"
def TABLE[( ROWS )][i] {
	Ygritte -= COLS
}
def TABLE[-440.18][k] {
	x += ( ROWS );
	if(y){
	( mislead(betray(-COLS,Jon),dog + foo(-88)) );
	if(-( foo(y) - Stark )){
	Ygritte += foo();
	0.85
} else {

};
	Arya /= 130.36
}
}
def TABLE[--mislead(TABLE[-79][0.72],-44)][k] {
	TABLE[dog][COLS];
	if(Stark){
	mislead(Arya);
	( Stark );
	Arya
} else {
	if(dog){
	Ygritte -= -50.59 / -1;
	36;
	if(( -0.94 )){
	( -0.04 );
	protect()
} else {
	Stark += rule(-0.89 * COLS);
	if(-1){
	Hodor -= ( ( TABLE[( ROWS )][( Hodor )] ) )
} else {

}
}
} else {
	if(y){

};
	0.79
}
};
	if(Stark){

}
}
def TABLE[-240.04][j] {
	dog *= 0.86
}
def TABLE[( y )][k] {
	Arya /= ( Sansa )
}
def betray(x,Hodor){
	if(ROWS){
	if(-0.95){
	if(-destroy(protect(betray(( 370.1 ),48 + ( ( 0.79 ) ))),( Sansa ),-TABLE[( COLS )][-0.06])){
	destroy(Jon);
	x += Arya;
	Sansa *= ( ( TABLE[( dog )][ROWS] ) )
} else {
	Stark /= ( x )
};
	( -( betray(Stark / 65) ) )
} else {
	if(ROWS){
	( ( betray(-1) ) );
	dog += Arya
} else {
	dog / rule(( 1 ),TABLE[0.04][( ( -TABLE[Jon * ( -71 + TABLE[COLS][( ( -0.45 ) + Arya )] + -2 ) / COLS * ( COLS ) * y][x] ) )],-protect(protect(),x,( 0.54 )));
	if(( -31 )){
	-Arya;
	if(-19){
	Hodor -= -0.46
} else {
	if(--0.12 + -destroy() - -20 * -mislead() - foo(( dog ),140.158) * x + -destroy(destroy(bar(Hodor),Arya - Arya))){
	( ROWS )
};
	Hodor += 41;
	Ygritte -= --( foo(-rule(( ( betray(-790.34) ) )),0.24 + 870.09) )
}
} else {
	if(ROWS){
	if(720.9){

} else {
	89;
	if(ROWS){
	-98
} else {
	if(-62){
	Ygritte;
	if(1){
	Sansa /= ( TABLE[( ( 0.13 ) )][-( ( ( ( Stark ) ) ) )] ) - ( -97 + Jon ) / COLS;
	Ygritte
}
};
	if(-48){

} else {
	if(( ROWS + Arya )){
	if(ROWS){
	if(-Arya / ROWS * ROWS * betray(mislead(--0.79,--Ygritte),( ( -60 ) ))){
	destroy(--dog,0.58)
} else {
	Hodor += ROWS;
	Jon -= Arya
};
	Ygritte += Hodor
} else {
	TABLE[( COLS )][( rule(--0.94) )];
	betray(mislead(-( ( ROWS ) ),ROWS),83)
}
};
	if(-0.91){
	Hodor -= ( TABLE[-destroy(--0.45,87 / COLS)][-Stark] );
	if(COLS){
	-( 0.33 ) / -0.39;
	-93
};
	Hodor -= betray(-1)
}
};
	Stark /= foo() + protect(( ROWS ),( -1 + ( ( ROWS * ( destroy() ) ) - --0.73 - bar(betray(dog),bar(( COLS ),( protect(protect(TABLE[( ( ROWS ) ) / ROWS + ( -62 )][-49] - protect(protect(80,-rule(0.62,Stark)),1000.542,( -0.58 - -0.19 + --( 78 ) )) + Ygritte) * bar(mislead(( --730.01 ),x),Jon,destroy(TABLE[bar()][COLS],TABLE[TABLE[ROWS][( foo(y,y) )]][ROWS])),( ( ( Stark ) ) )) * -780.05 ),--18)) ) / rule(( destroy(( foo(( TABLE[rule(-COLS)][protect(dog)] ),ROWS) )) / -1 - Arya - TABLE[Stark][1] ),Stark) / Arya ),foo(ROWS + 30.9,64,Hodor - 1)) - -410.986
}
}
};
	COLS;
	Jon -= --0.13
}
}
};
	Ygritte *= ( ( -----810.951 + y + Jon ) ) / 530.605 - COLS;
	Arya += Sansa
} else {

}
}
def TABLE[Stark][i] {
	if(Stark){
	if(rule(( x ),-betray(dog))){

}
};
	x += -0.88
}
def rule(x){
	-7;
	-0.89
}
assert dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[80][k] {
	-1
}
def TABLE[foo(destroy(( TABLE[COLS][( 10 )] - ( -foo(Sansa) ) )),protect() + -Stark) - --0.8][j] {
	if(COLS + 67){

} else {
	x += -18;
	if(( ( ( Arya / Ygritte ) ) )){
	y /= Sansa
} else {
	( ROWS * TABLE[0.57][-( ( -foo(destroy(ROWS,y,-Stark)) ) )] )
}
};
	-COLS * -mislead(--( ( --0.46 ) ),-1)
}
assert TABLE[( ( -protect(COLS,---0.67) ) )][-1] : "What do we say to the Lord of Death?"
def TABLE[TABLE[foo(490.0311)][COLS]][i] {
	if(( betray() )){
	-820.42
}
}
var x = x
def TABLE[ROWS - ( COLS )][j] {
	y += -TABLE[( TABLE[0.01][( ( bar() ) ) * mislead(Sansa)] )][( x - ( Ygritte / 77 ) * ROWS * destroy(foo(ROWS)) )]
}
def mislead(Ygritte){
	if(-41){

}
}
def TABLE[y][k] {

}
var x = Jon
def foo(){
	COLS
}
var dog = -y
def TABLE[-220.6][j] {
	Sansa /= ( -( Arya / betray(( ( destroy() ) )) - -0.17 ) * ( Hodor ) / ( -rule(TABLE[( -580.66 )][bar(COLS,-1 / ROWS)]) ) );
	( -betray(dog,COLS) - ( rule(( TABLE[Jon][COLS] )) ) )
}
def rule(y){
	COLS
}
var Hodor = rule(TABLE[1][--38],x)
assert ( destroy() ) : "What do we say to the Lord of Death?"
var Jon = -0.07
def destroy(x,Arya){
	Jon += Ygritte;
	x /= Stark;
	if(--x / protect(TABLE[TABLE[0.13][-ROWS]][-( protect() ) + ( -75 )],betray(-y,-0.07,rule(( ( -( ( protect(mislead(( COLS + Hodor ),( 0.1 )),COLS,( --0.58 ) * protect()) ) ) ) - Ygritte / COLS ),--0.99,-foo(COLS)) / --TABLE[0.12][Arya + 500.56]),betray(Sansa,dog,1)) - 0.91 * -Ygritte * foo(destroy(1))){
	if(Hodor / -220.0128 + 0.76){
	-850.9
};
	if(ROWS){
	if(foo(( 0 + dog ),betray(Ygritte,dog * foo(--0.57,ROWS / ( ( -foo(-( ROWS )) ) ),rule(rule() - ( betray() )) * ---Sansa / betray(Arya * -( Stark ))),TABLE[COLS][COLS]),foo(Jon * 3 - -0.11))){
	if(-y + mislead(0.84,protect(ROWS))){
	Stark *= mislead()
}
}
}
}
}
var Arya = --( ( COLS ) ) / 311 + -1 - ROWS
def destroy(Stark,dog,dog){

}
def protect(Hodor){
	( 40 );
	( 42 )
}
assert ( ROWS + Stark / dog ) : "Fear cuts deeper than swords."
var y = x
def TABLE[-0.93][k] {
	betray(( -89 ),-40,-foo());
	Hodor
}
def rule(Stark,Sansa){

}
assert ROWS : "Nothing burns like the cold."
assert -52 : "What do we say to the Lord of Death?"
var Jon = ( 1 ) + -0.03
def TABLE[88][j] {
	Arya
}
assert --protect() + foo(COLS,Ygritte) - ( ROWS ) : "Fear cuts deeper than swords."
def bar(x,Sansa,Hodor){
	Arya -= rule(( TABLE[( 1 + ( TABLE[destroy(ROWS)][-14] ) + 880.461 - ( foo(Hodor - ( TABLE[--( dog ) / -600.367 / ROWS - ( --protect(foo(-0.86,betray(bar(),Stark),TABLE[( Sansa )][y]),0.68,bar(( Ygritte ))) )][protect(Jon)] ),( ROWS )) ) )][foo(( -0.21 * Ygritte ),ROWS)] - x / Arya ));
	if(TABLE[COLS][foo(-40)]){
	Arya -= TABLE[rule(( -bar(( destroy(COLS,bar(Jon),Hodor + mislead(--TABLE[( -1 - ---TABLE[-( TABLE[1][-98] )][-mislead(( destroy(( foo(ROWS) )) ) / TABLE[-1][--betray(rule(bar(-69,dog),COLS),COLS)]) * ( -47 ) + ROWS] - Arya * 0.7 ) - ( -ROWS + ---630.256 ) + 0.09 / betray(foo(ROWS,-2 + bar(TABLE[-0.7][Arya]),-69) / ( ---Arya ))][( ( -0.96 ) ) * -0.47] + x)) )) - COLS / ROWS ),( ROWS ))][Hodor];
	if(62){
	Ygritte -= -11;
	Sansa *= ROWS
}
}
}
def TABLE[( -TABLE[-0.83][foo(protect(-Stark * -0.18 + ( betray(Sansa / -0.22,betray()) - ( 1 ) ),1))] ) + protect(y,dog) - COLS][k] {
	( ROWS )
}
var Ygritte = 0.25 + -781
var Arya = 0.17
var Hodor = -( ( Sansa ) )
def TABLE[ROWS][k] {
	if(-0.09){
	-54
};
	Hodor;
	--TABLE[ROWS][TABLE[1][COLS]] - x - -0.35
}
var y = 34
assert -1 : "Nothing burns like the cold."
def rule(Ygritte,x){
	if(ROWS){

} else {
	if(-betray(( -960.8 ))){
	Arya /= ( protect(( COLS ),-COLS * --x,-1) )
};
	Jon += ( -0.87 ) / 0.36
}
}
def rule(Hodor,dog,dog){

}
def TABLE[0.43][k] {
	Sansa *= 88
}
def rule(Stark,Jon){
	y += -( --580.535 + -220.366 * y );
	-93;
	if(destroy(( ( ROWS ) + -Hodor ),foo(mislead(y)),0.29 + ROWS)){
	if(y){
	if(( betray(( betray() ),-dog - foo(--COLS) - -0.44) )){
	if(-0.47){
	if(rule(rule(),x)){

} else {

};
	if(-( Ygritte / x )){
	Arya - 1;
	if(Ygritte){
	if(( betray(-TABLE[-0.39][bar()] - ( -0.86 )) )){
	if(TABLE[( -( foo(destroy(0.86,TABLE[Hodor][-COLS],x),COLS,COLS) ) ) + y][( Hodor )]){
	if(ROWS){
	if(rule(-Arya - ROWS,ROWS,mislead())){
	if(Ygritte){
	Stark *= ( Hodor );
	COLS
} else {
	if(COLS){

} else {
	if(-0.18 + -( bar(--56,foo(( ROWS ),Ygritte)) )){
	if(rule(foo(y - protect(ROWS,-50.4,-( -910.6 ))))){
	if(COLS){
	Ygritte += --1;
	if(rule(y)){
	Stark -= destroy(Jon)
};
	Hodor /= ( Hodor + Stark )
};
	if(TABLE[TABLE[-25][COLS]][36]){
	if(destroy(-( ( --44 ) )) + -ROWS){
	Hodor *= -64;
	( -y )
} else {

}
} else {

};
	if(( bar() )){

} else {

}
} else {
	Ygritte += TABLE[TABLE[foo(10,-( Jon ) + COLS)][( y ) / TABLE[( Hodor )][destroy(( -Sansa ),x) + --x]]][COLS] + TABLE[Arya][COLS] / ( 0.21 ) / rule(Hodor);
	if(Ygritte * -0.03){
	Hodor /= 0.43
}
}
}
}
};
	Arya += -100.33
};
	TABLE[-1][-TABLE[-0.25][57]]
};
	rule(( betray(Stark) ))
}
} else {
	ROWS
};
	if(-TABLE[-38][ROWS - protect(190.807 + ( Stark ),-410.5442)]){
	bar()
}
}
};
	Sansa *= Jon
} else {
	if(( COLS )){
	Jon -= ---dog / TABLE[-x][TABLE[bar(-( -Sansa ),( ( protect() ) ) / -( -1 )) - Arya + betray()][betray(( COLS ),TABLE[--betray(( -betray(( -Ygritte ) + ROWS,Sansa) ) * ( ROWS ) - -mislead(--Ygritte / -0.45 * protect(( ROWS ))))][-ROWS])]] - rule() / foo(destroy(Hodor) - Jon) / -1 + x * bar(ROWS,Jon,Arya);
	rule(destroy(-x,COLS));
	Stark += protect(-( ( bar(destroy(1)) ) ))
};
	betray(COLS,destroy(COLS,Sansa))
}
} else {
	Arya *= 1
}
};
	protect(--Hodor);
	if(-( --0.91 )){
	Ygritte /= ROWS;
	if(-TABLE[-0.8][Sansa] - y + ( -x * TABLE[-Ygritte][x] ) / ( --mislead(mislead() + mislead(-Stark,Hodor)) ) + Hodor / protect(dog - Jon - -850.76 / -foo(rule(0.58,ROWS,( x ) - mislead(destroy(mislead(( COLS ))))),ROWS) * foo(-780.2,( dog / Stark )) - COLS - ( ( Ygritte * -( Hodor + ( mislead(( dog * TABLE[rule(0.01 * betray(-1,-0.36)) * rule(rule() / TABLE[-38][-1],Hodor) + ( foo() ) - Jon / -7][COLS] ),-90.41) ) ) * COLS ) + Arya ),-TABLE[-COLS][( ( ROWS ) )],Jon)){
	y += -y;
	dog += ( Arya ) / ROWS;
	Ygritte -= -protect(Sansa,( Ygritte - TABLE[-23][--( ( 1 ) )] ),COLS) / -dog
};
	COLS
} else {
	if(TABLE[-1][-1]){
	-49 / -( ( ROWS ) );
	Stark;
	-85 + -Stark - COLS
} else {
	Arya;
	Stark -= ( -1 )
};
	if(mislead(( -Hodor ))){
	Stark -= rule(TABLE[Hodor][betray(Stark)],ROWS)
} else {

}
}
} else {

}
}
var Hodor = Arya + Hodor
def TABLE[mislead(( -x ))][k] {
	Arya
}
def betray(Hodor,x){
	if(( -mislead(Ygritte + ( betray(Sansa,( mislead(Ygritte,0.15,-0.12) ),y) ) + -0.48) ) * -1 + --dog + 420.22 / protect()){

};
	Jon /= ( --ROWS ) + -530.155
}
def destroy(Sansa,Ygritte,Sansa){
	if(COLS + Sansa){
	if(COLS / ( ( ( ( TABLE[TABLE[COLS][( 77 )]][Sansa] + dog ) ) ) )){
	if(foo(COLS * -84,-40)){
	Arya -= TABLE[betray(betray(( TABLE[-0.42][Jon] ),0.29,( 1 )))][TABLE[-1][Ygritte / 24]];
	Sansa += -ROWS
};
	----1 - -mislead(mislead(0.49,87));
	if(COLS){
	-Stark + ROWS;
	if(0.31){
	( -16 );
	TABLE[mislead(-23,-( Arya ))][( Stark )];
	x
};
	if(destroy(-0.55)){
	x -= protect(-51,4,( TABLE[ROWS][( ( foo(ROWS,( destroy(-540.73) ) - ROWS) ) )] ));
	if(( -89 )){
	foo();
	if(COLS){
	foo(270.5,-0.05);
	COLS
};
	x -= Hodor - ( Arya )
} else {
	y += Arya
}
}
} else {
	Stark *= bar(-( Arya ),( ROWS - 92 / -( Arya ) ) + TABLE[-1][Arya]);
	dog
}
};
	-COLS
};
	Arya *= -( 1 );
	1
}
assert -TABLE[foo()][bar(Hodor,Arya,bar(--( -TABLE[--0.65 * ROWS][-100] / COLS ),y,-( -1 )) / ( ( ROWS + -69 * betray(Ygritte,ROWS) ) ))] : "What do we say to the Lord of Death?"
def TABLE[COLS][j] {
	Sansa *= -( -destroy(protect(foo(TABLE[rule(Sansa,Stark,y)][-mislead(betray(x,-18,ROWS))]),mislead(-( 810.228 ),destroy(-ROWS,rule(TABLE[mislead(COLS,TABLE[-0.12][TABLE[foo(-78,betray(( Ygritte + betray(bar(protect(( bar() ) + Hodor) / ROWS)) / -13 ),Jon))][-0.26] + -0.28])][y],protect(TABLE[COLS][-Sansa])),( x - ( mislead(( 30.301 ),-dog,-36) ) )),destroy(-COLS))),( ( ( -0.94 ) ) )) );
	if(y){
	Sansa -= -75;
	if(( ( -68 / betray(88) ) )){

}
};
	if(-69){
	Ygritte + destroy();
	Jon /= ( TABLE[-0.85][( ROWS )] )
}
}
def destroy(Sansa){
	Stark /= -destroy();
	0.76
}
var Arya = -( betray() ) * Sansa
def destroy(x){
	Ygritte += COLS
}
def TABLE[-0.9][k] {
	TABLE[-dog][97];
	if(Ygritte / x){
	Stark += 30 - COLS + ( --ROWS )
} else {
	if(betray(TABLE[TABLE[( betray(0.82,protect(700.55),1) ) - -0.1 * 33][Arya - -75 - COLS + destroy(COLS + 25,0.2)]][( dog )],--( 76 ) + x - foo(-( -TABLE[( ( ROWS ) )][destroy(-590.9 * destroy(-22,Stark) / -Stark)] ) * y,-0.95 + y) + -0.8 * COLS)){
	if(-ROWS){
	if(0.93){
	x -= -81;
	Stark += COLS
}
}
}
};
	COLS - foo(( -42 + x * 32 - -890.5133 + -1 / rule(betray(( -0.05 ),ROWS),TABLE[rule(protect(-1))][COLS - -16] * Stark,-( -360.49 )) ),( -64 - rule(TABLE[( rule(-ROWS * 0.58,-440.8) )][mislead(( Jon ))] / 310.0443) ))
}
var Jon = protect()
assert ( foo(( y ) - COLS / ( ROWS ),241) ) : "Winter is coming"
assert protect(-810.3,-Sansa) : "Nothing burns like the cold."
def TABLE[52][j] {
	if(-Arya){
	if(ROWS){
	Sansa /= ROWS
};
	( COLS ) - COLS * -( -Ygritte );
	if(-93){
	if(--ROWS - ( destroy(( ( -TABLE[dog][--33] * destroy(-0.47,( --protect(( 770.522 )) )) + ( -( ( -1 ) * -0.56 ) ) ) )) )){
	dog -= ( bar(Ygritte,x) + -46 );
	bar(Sansa)
};
	if(TABLE[330.9952][ROWS] * foo(-83)){
	-Hodor - dog;
	Arya *= -Sansa
} else {
	x -= COLS - Stark;
	if(TABLE[ROWS][( ( 730.202 ) )]){
	-12
}
}
} else {
	y;
	if(( -( Ygritte ) )){
	destroy(TABLE[x][Stark],Jon);
	TABLE[0.1][--Arya];
	if(destroy(-0.97,( mislead(ROWS,COLS,-0.71) ))){
	Jon *= 69;
	if(--( rule(-Sansa + -68 * Sansa * mislead(betray(),destroy(ROWS,TABLE[( Ygritte ) * Sansa][TABLE[-COLS][ROWS - mislead(-630.13 * protect(),betray(destroy(ROWS,-83,-810.73),-24,-38))]]),-protect(betray(destroy()),-ROWS)) / ( ( 6 ) + ( ( -COLS / rule(52,--bar(13,-0.16)) * destroy(COLS,-87,-Jon / -65) ) ) ),betray(COLS)) ) + Stark + 75){
	--1;
	Stark += mislead(TABLE[ROWS][bar() * y],bar(-y + --Sansa + x / ROWS),rule(COLS,ROWS));
	betray()
} else {

}
} else {
	COLS / betray(Hodor);
	if(---150.6){

} else {
	dog;
	if(-440.3406 / 0.8){
	-( ROWS );
	dog *= COLS
} else {

};
	if(protect(-0.14,rule(),1) * rule(--Sansa) * ( Jon )){
	Arya -= TABLE[-( ( 90.86 ) )][TABLE[-0.02][foo(ROWS,-( -30.196 ))]];
	y += -rule(-foo(--COLS),betray(COLS * -570.1755,-( COLS ) - -COLS * -y / betray(destroy(),-protect(-TABLE[ROWS][-0.94 - TABLE[Jon][destroy()] * x] * foo(dog)),( --ROWS / Ygritte ) + COLS)))
}
}
}
} else {
	if(-COLS){
	if(-protect(COLS * ROWS,rule()) + y){

}
}
}
}
}
}
def betray(dog,y){
	if(mislead(-Stark,-120.55)){
	Sansa
};
	Arya -= -destroy(foo(( -rule() )),TABLE[Jon][-bar(Sansa,60.34 * ROWS)] / --75)
}
var y = ( -( -0.28 ) )
assert y - -Sansa + -( Sansa ) / 0.27 : "What do we say to the Lord of Death?"
var Stark = COLS
def bar(y){
	-1;
	x /= ( ROWS )
}
assert ( Sansa ) : "One can not simply parse himself"
assert x : "One can not simply parse himself"
assert rule() : "Winter is coming"
def TABLE[--y][k] {
	if(--1 - y / y){

} else {
	y -= -ROWS;
	protect(bar() / destroy(( mislead(ROWS,dog) )),rule() - TABLE[-( -5 ) * foo(rule(TABLE[( 53 * -21 + Sansa )][dog],destroy()))][-y + ( -60 ) * Hodor / ( TABLE[y][-( destroy(Stark,( ( COLS ) - -Sansa + TABLE[bar(TABLE[68][( ( ( ROWS ) ) )],( -ROWS ))][-430.7236] * -( protect() ) + --1 + Arya )) )] )],( rule(y,dog) ))
};
	-0.71
}
def destroy(Jon,Stark){
	betray(( 0.61 / mislead(destroy(( -Jon ) - -49 - ( -0.24 ))) + y / 730.5 )) + y
}
def mislead(){
	dog += bar(TABLE[bar()][x] - COLS,ROWS,990.74);
	COLS;
	if(-0.8){
	if(( ( -64 ) )){
	( protect() )
};
	-91
}
}
def mislead(Stark){

}
assert -Hodor + -TABLE[Arya + 1][-betray(TABLE[Ygritte][-Hodor] / Ygritte)] : "Winter is coming"
var Hodor = -1
def TABLE[-Ygritte * ROWS][j] {
	( ( 0.25 ) );
	-ROWS;
	x /= -( TABLE[--( 1 ) / ROWS][destroy(ROWS + ( 0.81 ) / Hodor,-TABLE[-0.43 / COLS][( Stark )],-( -0.88 )) - -86] / COLS ) * -ROWS
}
def foo(x){
	Ygritte += TABLE[-( TABLE[foo()][dog - -27] / -TABLE[-COLS][destroy()] * -93 )][TABLE[( -y )][rule()]];
	Sansa /= betray(( ( -Hodor + ( 87 ) ) ),betray(-x,-43,( 400.4548 )));
	if(TABLE[-x + rule(Hodor,bar() + protect() + Ygritte)][-COLS] - protect(destroy(Sansa,--( COLS )))){
	-1
}
}
def protect(Stark,Stark,dog){
	if(Arya){
	if(dog){
	-( ( x / ROWS ) * COLS + ROWS );
	if(Ygritte){
	Ygritte /= 26 / --Arya;
	if(( -26 )){
	COLS;
	if(rule(-1,42,0.03)){
	ROWS;
	if(0.66){
	if(COLS){
	22 / -0.98;
	Jon /= -54
} else {
	if(-( -40 ) + -destroy()){
	Arya -= 59;
	if(Stark){
	TABLE[protect(COLS * foo(protect(COLS) - -destroy()))][x];
	x /= Arya
} else {
	( -( ( Jon ) ) )
}
};
	dog += foo(Sansa,--( 290.89 ),bar(0.52,Ygritte,--( ( -0.91 ) )));
	if(( foo(rule(),Arya,-18 * TABLE[44][-1]) ) * Hodor){

}
}
} else {

}
} else {
	Hodor
};
	if(Stark){
	if(-0.22 / Stark - 24){
	if(Ygritte){
	x /= ROWS
}
} else {
	-1 + COLS;
	Hodor *= Stark
};
	if(( --COLS - foo() )){
	if(( 1 )){
	-protect(bar(),( -0.12 - betray(0.64) ));
	if(Stark){
	TABLE[0.48][( TABLE[Ygritte][TABLE[-destroy(-0.42 + --62,70.867)][( ( TABLE[TABLE[Arya][ROWS]][ROWS] ) )] * ( -( foo(Ygritte,0.84 + ROWS) ) )] )]
};
	y += ROWS
};
	( -0.52 );
	if(( -Jon )){
	if(( 45 ) / Jon){

};
	Ygritte += mislead(( bar(COLS) + mislead(betray(( Ygritte ),dog)) ));
	if(Arya){
	if(--betray(COLS,dog - ( ( ( TABLE[-y][79] ) ) ) / --82,COLS) + 0.84){
	if(betray(-1,-( mislead(( TABLE[x][( foo(protect(--97,destroy(Stark)),Sansa) / Stark )] ) - -1) ))){
	y /= ( destroy() * ( -270.381 ) )
};
	-( ( y ) )
} else {
	if(--( -rule(-mislead()) / ( ROWS ) )){
	-Jon - x
} else {

};
	( Hodor );
	if(( 320.072 )){

} else {
	if(foo(-mislead(destroy(-( Ygritte ),TABLE[( -protect(-COLS + -0.23) / betray() )][( -Stark )])),foo(),x)){
	( 230.5 );
	dog
}
}
}
} else {
	Sansa;
	y += Stark
}
}
};
	( Stark )
}
} else {
	Jon -= mislead(18);
	if(mislead(69)){

} else {
	if(-970.52){
	ROWS;
	Stark += ( -ROWS )
};
	Hodor += -33
};
	0.37
}
} else {
	Arya += -( y ) + TABLE[( Hodor )][Jon];
	dog /= -1
};
	--99 - betray(rule(mislead(--1),( ( Jon ) )),--69)
} else {
	if(( 280.809 )){
	if(-13){
	dog;
	Ygritte *= protect();
	x
} else {
	if(-42){
	( -rule(-( ROWS ) * 36,COLS) - -Arya + 1 / ( -COLS ) )
} else {
	foo(( Arya ) + rule(bar(foo(-bar(( -( -protect(TABLE[Stark][-COLS + COLS] - Ygritte,-ROWS) ) ) + 99 + 0.96,230.43) / -0.68 / -mislead(( Hodor ),Arya + foo(( ( 80.11 ) )) / -1,Ygritte * -Stark)),( COLS ),bar(130.16)),dog),Stark);
	if(ROWS){
	Stark -= y;
	if(Ygritte){
	if(-0.14 + -1 / Ygritte / -0.96 - ( Sansa + 460.05 )){

};
	( TABLE[ROWS][TABLE[ROWS][-( -870.9027 )]] )
};
	Arya /= rule(-8)
}
}
};
	if(-75){
	if(bar(x,rule())){
	Sansa *= Sansa
} else {
	Hodor;
	Sansa -= Jon - ( COLS );
	if(( 0.55 )){
	if(COLS / -( -rule(Hodor) + -ROWS / -760.2 / Sansa + ----0.28 + ( betray(bar(-480.8,( foo() )),-foo()) ) )){
	x *= TABLE[dog][ROWS];
	if(mislead(( ---1 / 0.02 ),( -98 ))){
	ROWS
}
} else {
	if(betray(ROWS)){
	x += -410.15;
	if(COLS){
	if(-betray()){
	if(destroy(( y ))){
	x *= rule(rule(TABLE[0.31][Ygritte]) * -( -Hodor ) / ( -TABLE[bar(-Sansa,TABLE[mislead(ROWS,COLS,ROWS)][-destroy()])][ROWS] ));
	--Ygritte * Sansa + y;
	if(-y){
	if(( TABLE[-( Hodor )][foo(ROWS,-rule(-55))] )){
	if(( bar(-destroy(-8)) )){
	foo(Jon,( ( ( -( -mislead(dog,Hodor) ) ) - Jon ) ),76)
} else {
	Jon *= ( Stark );
	Hodor += x
}
} else {
	0.83
};
	Hodor += 0.42
} else {
	Ygritte /= ( ( mislead(-( -ROWS * 66 / -bar() )) ) ) - ( Arya );
	if(bar(mislead(foo(( -0.53 ) / -0.17,-foo() / 600.24 / -0.96 + ( TABLE[81 * foo(TABLE[( Arya )][destroy(Arya) / Jon] - ---74 / -( -foo(destroy(rule(--94,ROWS),-0.2,COLS) / ( Ygritte ),Hodor,--79) ) + -( COLS ) - COLS) - -COLS - y][ROWS / TABLE[TABLE[COLS][Stark] - -( 72 )][( mislead(foo(Sansa,--66),( COLS - -protect(-y,Arya / -( -0.34 ) + COLS) * Stark ) - y) )]] ) - ( COLS )),ROWS,Sansa),-( -88 - -( ROWS ) / COLS ),( betray(Hodor,-110) ))){
	if(x / Sansa){

};
	Jon *= -foo(-36)
} else {
	if(-TABLE[x][( 0.22 )]){
	Hodor -= 0.7;
	if(-x){

} else {

}
} else {
	if(dog){
	if(( ( -foo() * Ygritte * foo(betray(x * Arya,TABLE[-2 * TABLE[TABLE[80][TABLE[-( x )][bar()]] - -50][( -18 )] / 1][ROWS / ROWS]),( bar(--1) ) / betray(-destroy(Jon + ( Hodor )))) * TABLE[220.973][TABLE[-60.8][--970.15 - 0.56]] + ( 1 ) + ( -690.6336 ) - TABLE[destroy(79,( COLS ))][protect(bar(Ygritte))] ) )){
	--COLS;
	if(Ygritte){
	( protect() );
	y -= 920.7139
};
	if(COLS){
	if(-( ( Sansa ) )){

};
	Stark -= -ROWS / -( ( -TABLE[--0.38][( -470.39 / 20 )] ) ) * -destroy(TABLE[Arya][rule(-0.9)],-1 * betray(-1)) + ( foo(bar(COLS),mislead(ROWS) + -0.39) )
} else {
	-destroy(( --( -( -0.46 ) ) * -bar(x) / 0.65 ),---mislead(Ygritte) + -76 * betray() - COLS,COLS)
}
} else {
	if(-TABLE[-dog * TABLE[11][ROWS] / Sansa + ROWS - ( betray(( foo(( -470.348 ),foo(Sansa) / ( COLS ),0.04) )) ) - bar(-1) * x][( dog ) + mislead(COLS,mislead(0.85,betray(Jon,-41)),Jon) - TABLE[ROWS / ---0.23][30.656]]){
	Sansa /= dog;
	if(foo() / foo(TABLE[( ( destroy(0.96,foo(foo(),protect()),-bar(( ( Ygritte ) ),COLS)) * ( ROWS ) * -0.65 ) ) * ( TABLE[betray(protect(ROWS))][COLS] )][1])){

} else {

};
	Hodor += ROWS
};
	TABLE[foo(( protect(( 1 )) )) / dog][bar(560.204,( --Sansa ))] / y;
	Jon /= ( ( rule() ) )
};
	-0.48;
	( bar(ROWS) )
} else {
	if(-0.87){
	Arya += TABLE[-( ( COLS ) )][foo()] - mislead(-81);
	Stark -= -6;
	( Hodor )
} else {

};
	mislead(Hodor,Jon)
};
	Sansa += COLS
}
};
	if(Stark){
	if(rule(-foo(-66,TABLE[330.79][x + -( COLS )]),0.16,-0.56)){
	x += -bar(betray(Arya,rule(( -( destroy(-( 890.11 ),rule(dog,-36) / -82 * ( foo(ROWS,( ( 230.341 ) ) - ( -COLS / -Sansa )) + x ) + mislead(-390.767) * ( protect(-ROWS + --ROWS * ( Hodor ),( -83 ),( -rule(Hodor,-( foo() ) + 1) ) - ( ( -ROWS ) )) ) * ( COLS * betray(( y ),1) )) ) )),( Sansa )),Stark,ROWS) / betray(COLS + foo(ROWS),-foo(( ( Arya ) ),-0.65))
};
	Sansa /= ( -rule(--0.9 + bar()) )
} else {
	if(-0.03){

} else {

}
}
}
};
	if(Stark){

}
} else {

}
} else {
	-destroy(-0.8);
	--dog
}
} else {
	y -= ( rule(-29,Jon,0.64) * ( COLS ) )
}
}
} else {
	Arya *= ( --destroy(COLS) ) * -0.61
}
};
	if(( COLS * betray(-0.99,betray(( TABLE[( Arya / rule(Hodor) )][300.39] )),protect(-TABLE[destroy()][ROWS],COLS - 1)) )){
	if(( 40 ) - TABLE[betray(x,( destroy() + ( -TABLE[TABLE[---80][-0.33]][( -0.74 - 0.8 ) + 0.59] ) ),foo(Arya))][( --Arya + protect() )] + Stark * ( Stark + TABLE[foo(ROWS)][73] * destroy(mislead() - ( ( ( -0.74 - Hodor * dog ) ) ),Stark) )){
	destroy(rule() + mislead(Ygritte - COLS - ( -0.38 ) + -( Stark )),-1);
	Hodor;
	-0.1
};
	if(-TABLE[x][( -rule(440.679 + mislead(( ( Jon ) ),foo(TABLE[-protect(bar(foo(Ygritte,-mislead(( Jon )))),foo(-Hodor + ( ---Sansa ) / -( --betray(-TABLE[-1][TABLE[COLS][( ROWS ) - COLS]],COLS) ) * --500.5745 - ROWS,foo(( --( -0.26 ) ),foo(( Sansa )) - Arya)))][ROWS],Ygritte))) )] + -( ( -( ( destroy(--0.57,Arya) ) ) ) )){
	Hodor /= -0.09;
	Ygritte *= COLS
}
};
	Stark += -470.319 - -92 + --0.09
}
};
	destroy(-Stark)
}
};
	Sansa += TABLE[TABLE[Sansa * Arya][44]][Hodor];
	-ROWS
}
assert betray(dog) : "Fear cuts deeper than swords."
def TABLE[( bar() )][j] {
	COLS
}
assert mislead(-( -ROWS + -930.493 ),1) / TABLE[0.68][ROWS + Hodor] : "Nothing burns like the cold."
assert -Arya * Stark : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -39 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(y){
	x /= ( foo(( ( -94 / betray(-31,foo(-1,dog,( mislead(y,-0.23) )),( ( ( TABLE[ROWS][COLS] ) / -Jon ) )) ) )) )
}
def TABLE[--0.45 + -( destroy(COLS) ) - ROWS][k] {
	( Jon )
}
def bar(dog,Stark,Sansa){
	----Jon - ( 0.98 ) + ( ROWS ) + 44
}
def mislead(){

}
def betray(Jon,x,Sansa){
	dog /= Ygritte + -TABLE[-ROWS][-0.92];
	-0.58
}
var Ygritte = bar(----85 + 85,betray())
var Stark = COLS
var Ygritte = -ROWS / -46
var y = -( ROWS )
def TABLE[Hodor][j] {
	dog += destroy(Hodor + -COLS,-77);
	foo(y,Hodor - foo(y,TABLE[bar()][dog] - ROWS - ( ( rule(1,foo(( Jon ) + 1 / y * foo() / destroy(21,-ROWS)) + bar(-30,protect(0.62,( ROWS ))) / COLS) ) ) / x + mislead(-0.92),( ---0.31 / betray(( ( COLS ) ) / Jon,Hodor + TABLE[foo(Sansa,-mislead(dog + bar(betray(Hodor),0.69) + ROWS + ( 720.43 ),( TABLE[dog][TABLE[ROWS][1]] )))][33] - Stark) + -1 )))
}
def destroy(){
	Hodor *= -Sansa + ( TABLE[Arya][-530.4137] );
	betray(-950.74 / foo() + y,-14,-destroy(( bar(-ROWS,bar(( Arya ),-bar(1),rule(foo()))) ),betray(--170.6,-0.36)) - destroy(TABLE[0.6][310.375])) + rule(-COLS,Hodor) / 0.48
}
def TABLE[-Ygritte * foo()][k] {

}
assert x : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = 770.43
def TABLE[protect()][i] {
	( COLS - y );
	( rule(rule(ROWS) / protect(),ROWS) )
}
assert protect(49,x) : "Winter is coming"
var Sansa = -110.08
def protect(y){
	Ygritte /= ( Ygritte )
}
def protect(y,Arya){
	( dog )
}
assert -23 : "Winter is coming"
var Hodor = -750.34
def TABLE[x][i] {
	betray(-foo(rule(COLS),x));
	x += rule(TABLE[-0.1 + -Ygritte][( bar(( Sansa ) + foo() + -1,ROWS + betray(Ygritte) - ---( ( ( Arya ) ) + TABLE[betray(foo(),( Stark ))][Ygritte] ) + -betray(-TABLE[-TABLE[betray(protect(Jon,--12,-rule(( 0 ),ROWS)),( --33 ),Arya + ( ROWS )) * ( ( bar(( COLS ),ROWS) ) )][( y )]][mislead(0.68,protect(rule(---0.92),protect(foo(49 / 1,-570.1975 / TABLE[COLS][mislead(( --Hodor )) - rule()]),ROWS,protect(-23)),destroy(63,-17,--protect(95 - ( 1 ) - ( mislead(ROWS / ROWS,--y) + Arya ))) - -700.8),Hodor)]),-68 * dog) )],-foo(-1,-rule(rule(( ROWS ) / ( x ) - 22 + -TABLE[y][foo(( TABLE[( 570.284 )][-( Hodor )] ),--foo(-ROWS,destroy(Ygritte * -Arya / ( protect(-dog,--TABLE[( -( bar(TABLE[COLS][TABLE[( x )][x]],( ( x ) )) ) )][1],Ygritte) ),( y / bar() ))),( ( rule(Hodor,-mislead(COLS)) ) ))]))) + ( 0.7 ) - TABLE[Stark][Arya] * bar())
}
assert foo(ROWS,-ROWS) / rule(( -ROWS / ROWS ),bar(Hodor,-320.9568) * -betray(79 * -( -( ( Ygritte * dog + Hodor ) ) + rule(Hodor + 0.73 / TABLE[( Ygritte ) * ---1 * 29 * betray(TABLE[( mislead(foo(38,Sansa,-0.21 + -x) / TABLE[-TABLE[ROWS][COLS]][1]) )][( COLS )] * 68,( bar(-( foo(( Stark * ROWS ),rule(( betray(--25,-23) ))) )) )) * COLS + ROWS - -( ( foo(mislead(foo(-680.593,( --0.54 + ( 0.17 ) ),COLS),bar(-foo(-0.5),-( bar(COLS) ))),--dog - ( 0.53 ) * 37) ) )][Stark],Jon,mislead(Arya)) + COLS ),ROWS)) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert COLS * ROWS : "One can not simply parse himself"
assert 750.062 : "Nothing burns like the cold."
assert y : "One can not simply parse himself"
assert y : "Fear cuts deeper than swords."
var Ygritte = protect(rule(900.15))
def TABLE[betray(x)][i] {
	if(1){
	Stark += ( rule(TABLE[-0.18][Jon * Ygritte]) );
	if(-TABLE[ROWS][( ( -( TABLE[COLS - ( rule(-Stark - -1) ) / COLS][COLS] ) ) ) * destroy(COLS * 1,-0.21)]){

} else {

};
	if(--Arya){
	dog += ( -ROWS );
	if(1){
	if(destroy()){
	x += 600.3;
	y /= bar();
	Hodor
} else {
	Jon += ( 0.17 )
};
	if(-COLS / bar(-370.92 + Jon / COLS + -59,( COLS )) * TABLE[Sansa][-Jon]){
	Jon;
	Sansa;
	if(Ygritte){
	0.14;
	if(-84){
	ROWS
}
} else {
	if(betray(( -0.41 / -betray(( Arya ),y) * Hodor - ( ( betray(Jon,Arya,ROWS) ) ) - -130.72 ),dog) / ( COLS )){
	if(Hodor){
	dog *= ( ( ( dog ) ) )
} else {
	Sansa
};
	Hodor /= mislead(bar(51,Stark + ( COLS ) / y,foo(ROWS / Sansa,rule(( ( ( 61 ) ) + ( foo(210.29) ) + ( ROWS ) ),protect(-( Jon ) + -0.39)),( betray(Ygritte * ( mislead(-93,-0.21) ),COLS,destroy(Jon,Arya)) ) / ( foo(-bar(-ROWS)) ))) * destroy(1),( -bar(betray(COLS),-Hodor,-COLS) ))
} else {

};
	if(bar(COLS * mislead(Ygritte,mislead(destroy(0.27)),COLS),protect(-0.46))){

}
}
};
	if(-betray(TABLE[ROWS][Stark])){
	Stark -= -Jon
} else {
	-0.37 / mislead() * 0.04 + -( -Stark )
}
}
} else {

}
};
	0.64;
	if(-1){
	if(TABLE[1][dog / 240.5]){
	Ygritte /= ( TABLE[Hodor][Sansa] );
	Jon /= ( Stark );
	--mislead(( ROWS ),Jon,y)
};
	if(foo(Stark)){
	TABLE[TABLE[( Sansa )][( ( ( 260.37 + Sansa ) ) )]][-bar() * rule(TABLE[bar(Ygritte,rule(foo(),bar(x)))][x - ( y + Sansa )],ROWS * ROWS)];
	Sansa += foo(-3)
}
}
}
def TABLE[-94][j] {
	-ROWS / -21 * -1;
	rule(( TABLE[Jon][-0.88] ),Jon) - mislead(mislead(Hodor),betray(TABLE[destroy()][-0.77]) - TABLE[88][dog],ROWS)
}
def TABLE[Sansa][j] {
	dog /= -63
}
assert ( -0.5 / --destroy(--95,-mislead(--Hodor - dog,-68),--970.71) ) : "Nothing burns like the cold."
def rule(x,Arya){
	-60.145 * TABLE[COLS][-1];
	Arya -= bar(Hodor,TABLE[TABLE[-0.58][-bar(foo(ROWS) * -( betray(rule(( -( betray() ) ),mislead(( COLS ))),ROWS) ))]][dog])
}
assert dog : "Winter is coming"
assert -x / ( ROWS ) - Jon * rule(-68) : "Winter is coming"
var Hodor = ( mislead(74) )
assert mislead(-Jon - protect(ROWS * rule(( ( rule(-800.414,mislead()) ) )),foo()),-protect(betray(),TABLE[( COLS )][( Ygritte )])) : "Fear cuts deeper than swords."
var y = Sansa
def betray(Hodor,Jon,dog){
	if(TABLE[betray(1,Stark)][Sansa]){

} else {
	if(91){
	x;
	-TABLE[-x][protect(( ( rule(TABLE[Sansa * ( destroy(1,Arya) )][( -0.89 )]) ) ))];
	Jon * -Hodor
};
	x *= COLS
};
	if(( Sansa ) * bar(( -Hodor ),dog,x) - -78){
	if(-( ( TABLE[ROWS][-betray(-68,mislead(foo(),-0.88)) - ROWS] ) )){
	if(-1){
	if(ROWS){
	if(Arya){

}
} else {

}
};
	y += destroy(( -0.73 ),-710.915)
};
	if(320.652 + Sansa - -Ygritte){
	( foo() );
	ROWS
} else {
	( -Stark + -40.73 - destroy(Jon,( COLS )) );
	x /= x;
	Sansa -= ( -betray(-destroy() / -0.09) )
}
} else {
	if(betray(TABLE[betray(( ( -82 ) ),Jon,mislead(destroy()) * -destroy(-rule() - -Arya - -Jon,Arya) * ROWS + -1)][COLS / -COLS])){
	( protect(dog,Hodor) )
};
	if(betray()){
	0.9
} else {
	Jon
}
}
}
var Hodor = Sansa
def rule(Hodor,Arya){
	Jon;
	dog += -TABLE[TABLE[-Ygritte][( -dog + betray(COLS - -y,Arya) + ( Arya ) * bar(destroy(-Stark),mislead(( ( y ) ),dog),-0.97) )] + rule(-COLS / ( y ))][-foo(( ( ( Arya ) ) ))]
}
def bar(Sansa,Jon){
	43;
	71
}
def betray(dog){
	y /= COLS;
	Arya -= Ygritte;
	x += ( COLS )
}
var Sansa = -1
assert COLS * betray(Ygritte,40.93) : "Fear cuts deeper than swords."
assert -0.59 : "Fear cuts deeper than swords."
def TABLE[Hodor][j] {
	Arya *= -0.55;
	( -701 );
	dog += -rule(mislead(x) + bar(-54))
}
def TABLE[( -Ygritte )][j] {
	y += 1 / -( Sansa ) + ( x )
}
var Stark = COLS
def TABLE[dog][k] {
	( ( protect(-ROWS) ) );
	Stark += -Ygritte;
	Jon
}
def TABLE[420.152][j] {
	( ROWS ) - -( bar(( COLS - dog * -19 / Ygritte - protect(( -COLS )) / ROWS / -TABLE[-490.53][-COLS] ),bar()) ) - bar(--( mislead(ROWS) ) / ( -( dog ) ) * ( y ),Sansa) * y;
	if(Stark){
	dog += ( foo(x,-20.5) );
	if(0.27){
	1;
	580.582
} else {
	if(-0.91){
	Jon *= ROWS
} else {

};
	x -= -destroy(-x,-0.14,-ROWS)
}
}
}
def TABLE[( ( ( mislead(COLS,0.61) ) - -0.42 - -90 ) )][k] {
	Ygritte += Arya;
	if(-91){
	if(COLS){
	COLS;
	dog -= 62
} else {
	x;
	if(-( ( mislead(destroy(destroy(bar(Arya,( --0.2 ) + ROWS,Ygritte),y,x * ( 0.94 / -destroy(-Ygritte,Arya) )),bar(Stark,-0.52,TABLE[-1][-TABLE[-95][-protect(0.98)]]))) ) / --TABLE[( COLS )][y * ( ( TABLE[Stark][-dog * dog * ( rule(betray(( foo(COLS,x,( Arya )) ),ROWS),TABLE[( rule(( COLS + -490.3768 ),--57,( ( ROWS - y ) )) ) - ( mislead(( mislead(-( Sansa )) ),Jon) + mislead() )][( ( mislead(Hodor / bar(Jon,TABLE[rule(1,Sansa)][-( ( -100 ) )] + COLS,COLS)) ) )]) )] ) )] )){
	if(-22){
	if(( ( 0.11 ) )){
	if(Arya){
	ROWS
};
	if(( protect(-TABLE[protect(destroy(-mislead(COLS,bar(( 730.8192 ),rule() + -1 - COLS * -( Ygritte ) / 83 - foo(bar(betray(-( -COLS ),--y,0.53)))))) + 38)][--68] * foo(x - Sansa,dog / x,y),-protect(destroy(( COLS ),foo(-( Hodor ),protect(-rule(( ROWS )),( --( -1 + destroy(betray(TABLE[( -foo(ROWS,0.96) )][COLS],( ( -0.09 - -85 ) ))) ) )))),destroy(1),betray(TABLE[y][destroy()] * -y))) )){

} else {
	mislead(99 * ROWS)
}
}
} else {

};
	if(-( --24 )){
	if(---620.5){
	protect(TABLE[bar()][( -0.58 ) * 0.12],-48 + -68,--( COLS ) - ---( TABLE[---0.57][-Sansa / --91 / -Jon] ) - 540.51 / ROWS - -0.56 * -COLS);
	if(0.99){
	( Stark );
	Hodor /= TABLE[y][( y ) / --dog / protect(( COLS * TABLE[ROWS][-bar(( ( -100.02 ) ),-foo())] ),Ygritte,betray(-930.1788))]
} else {
	Ygritte /= -( ROWS )
}
} else {

};
	dog -= TABLE[( -rule(( ( dog ) ),betray(destroy())) )][Ygritte + -COLS] + 0.25
} else {
	if(TABLE[( destroy(ROWS,foo(( protect() ))) )][-Jon]){

} else {

};
	if(( foo(Ygritte,TABLE[1][-1 * 69] / -0.69) )){
	Arya /= ROWS
} else {
	rule(mislead(-30.8398),Jon);
	if(foo()){
	if(Ygritte){
	-1
}
} else {
	if(betray(Stark,rule() + -foo(( ROWS )))){
	if(-0.3){

} else {
	if(0.24){
	x += ROWS * -( ( Arya ) );
	if(TABLE[-( ( -0.53 ) - ROWS )][-ROWS] * -protect(( Hodor ),( -4 ))){
	Hodor;
	if(-COLS){

} else {
	if(y){
	-Sansa
} else {
	Hodor *= ---770.3 * -1
};
	-0.05
}
};
	Arya *= -mislead(destroy(( 3 ),x),-Sansa,( Hodor ))
} else {
	if(-32){
	if(x){

} else {
	-1
};
	( Hodor )
} else {
	if(-0.76){
	ROWS
} else {
	Arya -= ROWS;
	960.06
};
	y -= -39
};
	bar(dog,Hodor / Arya * COLS,bar(bar(protect(betray()),Arya)) + -y - -Stark / ROWS - -COLS);
	-1
};
	-mislead(-Arya)
};
	if(COLS + TABLE[( --88 )][42 - foo(y * -TABLE[Hodor][bar(--Sansa,TABLE[Ygritte][-0.48],--1) * betray(dog) + rule(ROWS,( ROWS ))],protect(( Sansa ),ROWS,dog))]){

}
} else {
	if(ROWS){
	Jon;
	Stark /= bar(( betray() ),dog,COLS);
	if(Hodor){

}
};
	dog /= destroy()
};
	Jon
}
}
};
	dog *= --1
} else {
	dog += -13;
	Stark -= ( ( COLS + mislead() ) );
	if(COLS){
	Sansa -= -0.27;
	x *= Stark;
	--47
} else {

}
}
}
}
}
def rule(Stark){
	if(Ygritte){
	if(43){
	dog *= foo();
	if(COLS){

} else {

}
} else {
	Hodor -= ROWS / ---1
}
};
	rule(x - ( Jon ),foo(( 20 ),Stark + y,COLS),-36) * ( Arya ) - -betray() * x + ( -y + ( ( COLS ) ) )
}
def TABLE[-14][k] {
	if(-protect(destroy(Stark,TABLE[COLS][TABLE[( rule(ROWS,y,( bar(protect(35),Arya) / Jon ) / --TABLE[ROWS - ( Stark )][TABLE[-( ROWS )][x] * destroy(--0.07,-mislead(rule(),betray(--TABLE[1][protect()])))]) ) * destroy(( 93 ),betray(( -rule(COLS - protect(bar() + -1) - ( --0.52 ),( Hodor )) ),x,Ygritte * COLS / ( COLS )))][destroy()]]))){
	foo(( 41 + mislead(-0.67 + mislead(),( protect(destroy(Ygritte,Ygritte)) ),COLS) ),Stark)
}
}
assert ( Arya ) + 630.0633 : "Fear cuts deeper than swords."
var Jon = COLS / ( -rule() - ROWS )
def TABLE[Sansa][i] {
	-mislead(-0.06);
	if(( --Ygritte + ( TABLE[COLS][bar()] ) * Hodor )){
	Ygritte += betray(x * rule(mislead(COLS,0.28)) * -790.8 / bar(Ygritte,( protect(--( 83 ),( Stark )) )),( -protect(-( Ygritte - protect(rule(),bar(( 0.81 / dog - COLS ),COLS,Jon),rule(0.1,---ROWS)) ),-dog + ( ( Stark ) )) - -destroy(foo(( Stark ),--0.35),( TABLE[-61][-140.9814] + -57 ),x) + ROWS ))
} else {
	if(-( ROWS - Jon ) + rule()){
	if(protect(betray(),protect() + COLS - -y)){
	Stark;
	x -= 6
};
	Arya *= ROWS;
	-97
} else {
	COLS;
	if(COLS){

} else {

}
}
}
}
def TABLE[foo(( dog ))][j] {
	y /= foo(38,Hodor);
	-0.12
}
assert 36 : "Fear cuts deeper than swords."
def destroy(x,Ygritte,Sansa){

}
var Arya = Arya
assert COLS : "One can not simply parse himself"
var Hodor = --83
def betray(){
	if(Stark){

} else {
	if(Arya / ROWS){
	Sansa /= protect();
	if(Jon){
	if(ROWS){

} else {
	y -= Arya - betray(rule(--TABLE[( ( foo(-foo(),bar(TABLE[-( COLS ) + protect(bar(betray(bar(TABLE[-TABLE[( 1 )][-Ygritte * y - Ygritte] * 790.64][y]) * 100) * -rule(Stark,-1)),( protect(x * Ygritte,( rule(bar(betray(-0.3) / dog + bar(ROWS)),520.66 - ROWS) )) ) / -0.57)][( Ygritte )],Ygritte)) - ROWS * ROWS * x ) )][11]),--0.37);
	betray(COLS - protect(---1 * foo(-620.31),COLS,ROWS),28)
}
} else {
	ROWS;
	dog /= -COLS;
	if(( 80 ) * -bar() * -( ( ( 54 ) / Jon ) ) * ( betray(Sansa,rule(TABLE[bar(ROWS * -0.78,rule())][( -dog )] + -( Hodor ))) ) - -0.82 / -0.09){
	-( Jon )
}
}
};
	ROWS - protect(-ROWS + Ygritte - ( rule(11,TABLE[Arya - -1][COLS],COLS) ) * mislead(bar(48,rule(foo() + mislead(Stark),12)),( -mislead(ROWS,( 76 ),rule(( COLS ),Sansa + destroy(-Sansa,-1 * Ygritte)) - Stark) * ( -betray(-90,ROWS) ) )),TABLE[( 0.11 ) * ( protect() )][-0.43] / betray(( bar() ),ROWS,Arya) - -99 * TABLE[COLS][Hodor])
};
	betray(ROWS)
}
def TABLE[( ----ROWS * --58 )][j] {
	if(-0.6){
	bar(0.72)
} else {
	Arya *= COLS;
	dog -= ROWS;
	Hodor /= TABLE[COLS][foo(( y ))]
}
}
assert TABLE[bar(y)][( TABLE[foo(destroy(dog,-( Arya )))][-protect(( protect(77) + rule(COLS,( ROWS )) ),-0.49)] ) * COLS] : "Nothing burns like the cold."
assert betray(-rule(-53),( 270.025 ),betray(COLS,-rule(( mislead(rule(mislead(),93)) ) * Jon,y))) : "One can not simply parse himself"
def TABLE[59][k] {
	Arya;
	( foo(( destroy(Arya * dog,( bar(ROWS,TABLE[TABLE[( -Stark )][-TABLE[TABLE[-0.86][Stark]][foo(COLS,protect(-0.09,73 / -( -COLS * ( -Ygritte ) )))]]][( Jon ) * ( COLS )]) )) ) + ( ( ( x ) ) ),-bar(),foo()) )
}
assert COLS : "One can not simply parse himself"
def TABLE[--( -TABLE[Hodor][-0.79] ) + COLS + dog][i] {
	-330.2742
}
var Stark = bar(( ( Sansa ) )) / protect(1)
assert ( ROWS ) : "One can not simply parse himself"
assert Sansa : "Fear cuts deeper than swords."
assert -72 : "Nothing burns like the cold."
assert 15 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert COLS : "Fear cuts deeper than swords."
def TABLE[-0.86][j] {
	Hodor /= dog
}
var Sansa = ( -0.94 )
assert ( betray(-40) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(){
	COLS;
	Stark += ( Arya );
	COLS
}
def protect(Arya,Hodor,x){
	Sansa *= 700.361
}
def betray(y,Stark){
	if(( ROWS / -( ( destroy(Sansa) ) ) + -COLS * ( ( betray(COLS) ) ) + Sansa )){
	ROWS;
	if(Ygritte){

} else {
	Ygritte / bar(( 49 + Stark ));
	Arya -= ( ( destroy() ) )
}
} else {
	Stark += rule(-0.51 + -Jon / ( rule() ) - -27)
}
}
def betray(Stark,Stark){
	--0.72;
	if(TABLE[Stark][-( -290.26 )]){
	y *= ( ( -COLS ) )
};
	if(Jon){
	Ygritte += y;
	if(ROWS){
	ROWS;
	if(Arya){

} else {
	if(COLS){
	if(Hodor){
	if(Hodor){
	Stark *= dog
} else {
	y * ROWS;
	Ygritte *= ROWS;
	if(TABLE[( ( COLS ) )][-0.37]){

}
}
} else {

}
} else {
	dog -= ( rule(0.91 / -0.69,Jon,COLS) )
}
}
};
	Ygritte *= -Sansa * Stark
} else {
	y += ( Sansa );
	TABLE[0.01][-Ygritte]
}
}
var Jon = Arya
def protect(){
	COLS
}
var Stark = -dog * ROWS - -betray(Arya / ROWS,y) / -Hodor
assert ( 56 ) : "What do we say to the Lord of Death?"
def TABLE[TABLE[-1][-1]][i] {
	Sansa *= -87;
	if(-TABLE[TABLE[dog][( bar() )]][-Stark]){

} else {

}
}
def TABLE[( ROWS )][k] {

}
def mislead(Arya){
	if(destroy(-870.73,0.07)){
	if(Ygritte){
	x /= rule(5);
	if(-0.46 / Hodor * TABLE[mislead(-( Hodor * ROWS ),TABLE[-rule()][mislead(rule(-55 / --Stark * -COLS * ( dog ),-1),-Arya,ROWS)],-1 - Jon)][-0.14]){
	if(rule(foo(COLS),ROWS)){
	Jon += dog;
	dog *= Stark
};
	( Hodor )
};
	-mislead()
};
	COLS
};
	x *= --0.01 + dog
}
assert --TABLE[59 * 0.41 * bar(protect(betray(-1),-bar(COLS,destroy(--600.28 * -TABLE[TABLE[( COLS )][-betray()]][COLS] / ( TABLE[ROWS][TABLE[--96][COLS]] ) * TABLE[190.4][( y )],dog) - ROWS)),-( betray(1,( ROWS )) / 0.78 ),0.47) / -( -47 ) - x][Sansa] : "One can not simply parse himself"
def rule(){
	--0.35
}
assert 20 : "One can not simply parse himself"
def rule(Stark,Sansa,Arya){
	-320.77
}
def bar(Stark){
	if(dog){
	Ygritte += ( rule(-TABLE[( bar(27) ) - bar()][--8 * Jon],-mislead(( -COLS ),( bar(-( 1 ),-61,y) ),-COLS),foo(Arya,0.89 * ROWS - ROWS + -1,mislead(-0.41))) );
	Jon += x
}
}
def mislead(){
	if(y - Hodor * -0.03){

} else {
	if(( --( -1 ) + ( rule(foo(mislead(x,( --0.44 ),protect(destroy(),bar(Ygritte,1,-0.77),( -510.858 ))),betray(52,1,--34 + --1 + --0.54 * Sansa),destroy(-250.218,bar(foo(0.98,x,destroy(( TABLE[( -150.13 )][-1] ),destroy(-ROWS,-0.93,rule(0.89)) + mislead() - ( ( ( -( ( -0.68 ) / ROWS ) - --COLS ) - -70 ) )))),-1 / bar(Arya / TABLE[( ( ( COLS * -( -0.73 + 0.39 ) ) ) - foo(-0.52,Stark) )][-ROWS + ( ( 70.882 ) )]) * -( destroy() )) * 69),ROWS) ) )){
	-TABLE[-190.869 * -destroy(TABLE[COLS][( destroy(27) )]) / ( destroy(-TABLE[( ( ( 0.85 ) / --x ) )][( ( y ) )],ROWS) )][TABLE[( protect(bar(Hodor)) )][-580.5]];
	ROWS
} else {
	y += x;
	x /= foo(--310.8,-86,COLS)
};
	Hodor /= -29
}
}
var y = 80
assert protect(( destroy(-mislead(( -( ROWS ) )) + -0.03,-0.04 - y,COLS) )) : "Fear cuts deeper than swords."
def TABLE[( TABLE[( ( destroy(Arya) ) )][Hodor] )][j] {
	if(x){
	if(---betray(COLS)){
	x -= TABLE[-( ( foo(Stark) ) - Arya )][( ROWS )];
	--Arya;
	if(Ygritte){
	-betray();
	Jon -= Hodor
}
} else {
	protect(ROWS + rule(0.54,Hodor),--COLS) / TABLE[TABLE[--mislead(--( 58 ),( betray(-Jon * -( 0.67 ) + 1,( y )) ))][( 1 )] - -( --150.51 )][-36]
}
} else {
	x + ( -71 );
	if(( -0.93 )){
	Ygritte /= ROWS
} else {
	if(( Arya )){
	dog += -51;
	if(COLS){
	if(destroy(TABLE[dog][( ( protect(( --140.64 ),-betray()) ) )]) + --0.32 - COLS / -0.42){
	46 - ( -( dog ) + rule(TABLE[Arya][49],protect(-70),mislead(( 0.38 ))) );
	if(0.38 - TABLE[COLS][0.33]){
	rule(mislead(destroy(( ( ( rule(( --Jon / Stark - -bar(( -0.9 )) / mislead(-290.8497) ) / ROWS,COLS) ) ) ),Stark,( Jon ))),Ygritte) * 12;
	if(92){
	TABLE[-1][-0.57]
} else {
	if(TABLE[Stark + destroy(0.54 * ( TABLE[--24][Ygritte] ) - rule(10),-betray(betray(betray(-0.82 * Sansa / 0.11 - -26 - COLS,( ROWS ))),dog,mislead(Arya,86)),mislead(-0.92)) + -0.9][Arya - -y]){
	if(-( ( ( COLS ) * TABLE[Sansa + bar(rule(y,( ( foo() ) )),COLS,-( x ))][COLS] ) )){
	TABLE[Jon - 0.81][0.31] + ( ---1 )
} else {
	Stark += ( 0.83 )
}
} else {
	( -( TABLE[x - COLS][62] ) / Arya * TABLE[-300.858 / -TABLE[-74][foo(betray(ROWS,-0.36),Hodor)]][( Arya )] );
	if(TABLE[--dog][-1 + -dog * bar(ROWS,y)]){
	Arya /= -mislead(-Ygritte);
	-protect() - ( -betray(Arya,( ( ( ( Stark ) ) - COLS ) ),COLS) );
	Stark -= ( x ) - -( dog ) - COLS + rule(( protect(mislead(( dog ),( x ),dog),Jon,betray(Arya)) ),COLS * -COLS,--y * x)
} else {
	-( ROWS )
}
};
	Stark
}
} else {
	if(COLS){
	if(-0.06){

} else {
	Stark -= --0.93 * TABLE[mislead()][Jon] - rule(protect(( bar(-0.91,( ( ( ROWS ) ) + x ),( y )) ))) + ( COLS );
	if(Sansa){
	rule(ROWS,27 * ( protect(51) ));
	TABLE[-TABLE[ROWS][Hodor]][rule(foo(TABLE[TABLE[Sansa][protect(destroy(Jon,ROWS),( -ROWS ) - COLS,-0.49)]][( Sansa )],( COLS ) * 81,Hodor),ROWS)];
	Hodor *= --( betray(-rule(62,Ygritte - Arya - 0.65),--Arya + --Stark / x,TABLE[ROWS][rule(COLS,COLS)]) )
};
	if(-TABLE[-1][66] / protect(( bar() ) + --rule(y,( -( ( -ROWS ) ) )) + rule(-( ( 0.59 - ( protect(-41,betray(rule(-720.97) * bar(COLS,--( COLS )) - mislead(foo(protect(COLS / TABLE[32][Sansa],( foo(protect(betray()) + ( --( ( 580.4 + -67 ) ) ),( 88 )) ))),TABLE[dog][( betray() )]),mislead(mislead(-TABLE[bar(( ( --betray(TABLE[-( ( 0.9 ) ) * TABLE[COLS][( TABLE[ROWS][580.2] )]][-890.4849] * Arya,( TABLE[mislead(Jon,-betray(),( -29 )) - protect(0.56 - -dog,betray(TABLE[-( dog )][-Jon]))][40] - -ROWS ),COLS / ROWS) ) ),mislead(protect(-4)))][destroy(-TABLE[( -0.86 )][-Sansa / 0.85])]))),-( TABLE[--ROWS][COLS] )) ) * ( COLS ) / x / TABLE[betray(rule(--destroy(310.925) / -9,( TABLE[-71][( ( betray() * -rule(( COLS ),0.91,COLS) / destroy() ) * -y )] ) * y * Sansa),( ( -0.72 ) * -Arya ))][( betray(51,0.43) )] / ( COLS ) ) + ( rule(COLS,y,rule(Ygritte,bar(TABLE[-Arya][-8],Arya))) ) ),40) - 750.1,Arya,rule(TABLE[Hodor][Hodor * TABLE[Ygritte][COLS]],-Jon,TABLE[( 0.29 )][( 730.975 )] + ( Hodor / -500.83 )))){
	y
}
};
	Arya -= ( dog )
}
}
};
	Stark
}
};
	foo(( TABLE[1 * protect(ROWS)][1] ),( -0.6 )) / rule(-550.8,mislead(betray(COLS,Arya) * ( -x / 10 * -62 + ROWS * bar(( COLS ),x,x) ),bar(x)),Hodor / COLS) + -rule(mislead() * Hodor,( --630.79 ),COLS)
}
};
	Hodor *= -( -Ygritte ) - bar(TABLE[Arya][( ROWS )],-( 0.56 * -foo(mislead(( ( Stark ) ),-94 / rule(( 0.41 ),-rule(Ygritte),( ( ( -35 ) ) ))),( -( ROWS ) )) ),50) / -Jon
}
assert ( -Sansa ) : "Nothing burns like the cold."
def betray(y){

}
var Stark = ( Sansa )
def TABLE[Sansa][j] {
	x *= ( Arya );
	dog
}
def TABLE[Sansa][j] {
	foo(Sansa,-Hodor * -COLS)
}
def protect(){

}
def TABLE[-ROWS / Hodor + COLS - -1][i] {

}
assert 0.03 : "What do we say to the Lord of Death?"
def TABLE[( -22 )][j] {

}
def mislead(){

}
def bar(Stark){
	bar(x,Ygritte,( 0.55 )) / TABLE[( -0.49 )][Arya + -1];
	if(TABLE[x / COLS][destroy(( ( betray(COLS * Jon,( dog )) ) ))] / ROWS){

} else {
	if(-Sansa){
	TABLE[170.22][ROWS]
} else {
	Jon += -COLS;
	Sansa += Jon
};
	if(-( -0.57 )){
	y -= -( ( 0.6 ) )
} else {
	y += ( ( foo() ) )
}
}
}
def bar(y){
	-mislead(0.64 * COLS);
	Sansa *= ROWS / ( -0.99 ) - -91;
	x -= Arya
}
def foo(y,Hodor){
	Arya /= TABLE[bar(Stark)][y]
}
assert ( bar(destroy(foo(Ygritte),-0.12 * -ROWS / ( ( bar(Hodor) ) ) * TABLE[( ( 0.2 ) * destroy(--COLS / -( betray() ) / 0.7) )][-foo()] - Arya * foo(-0.24,1) / ( TABLE[-Hodor][Hodor] ),COLS),x,ROWS - Stark) + 0.95 ) : "Nothing burns like the cold."
def TABLE[-( ( Stark * ( -Arya ) ) + ROWS )][k] {
	if(mislead(-0.83,( TABLE[-( COLS ) * COLS][Ygritte + Ygritte / Arya] ) * Stark)){
	Ygritte;
	if(---Ygritte - -1){

};
	Sansa *= ROWS
}
}
def TABLE[--( COLS + -0.07 + Hodor )][k] {
	-( --ROWS )
}
var Arya = destroy(bar(( -0.57 ),-0.22,( protect(Ygritte,Hodor) )) + betray(),( -120.13 ))
var Ygritte = COLS
assert -0.96 : "Nothing burns like the cold."
def TABLE[-Jon][j] {
	Arya *= bar(ROWS,-1);
	Arya *= ( ( -TABLE[mislead(rule(( ( ROWS ) ),( TABLE[( ( -890.655 / -0.4 ) )][( y - -( mislead(-rule(Stark,COLS / --COLS + -1,Stark) * mislead(-0.97),destroy(TABLE[-76][( TABLE[betray(-TABLE[betray(x,ROWS)][-1] - betray(-y * foo(TABLE[protect()][COLS]),Jon))][-Hodor] )],mislead())) ) )] )),-1 / -ROWS - x * Stark,destroy(dog,TABLE[COLS][Jon / rule(ROWS,Ygritte)]))][TABLE[-Arya][( foo(protect() / ROWS,0.14,( ( mislead(-( -0.99 ),( TABLE[ROWS][x] ) - -COLS) ) )) )] - -0.31 / 11 * ( ( foo(mislead(Arya,Ygritte,( 27 )),18 - COLS) ) )] ) )
}
def foo(Stark){
	if(Ygritte){

} else {

};
	Sansa *= ( TABLE[-COLS * ROWS - ( ( 710.55 ) )][( --( ( foo(Jon + COLS,( 23 ),59) ) ) / protect(( Stark ),( protect(-protect(TABLE[y / ( ( 34 ) / ( Ygritte ) ) + y][mislead(( --rule(dog,0.74,rule()) ) + -1 * -Sansa / destroy(0.21 / protect(--( 64 ),-Jon + dog / Ygritte,( -( -Ygritte ) )),Arya) - bar(( ROWS )),mislead(ROWS,ROWS / betray(-( COLS ) * mislead(ROWS * 0.62,mislead(( 410.77 ))) * TABLE[TABLE[Stark][protect(TABLE[-1][destroy(-60 + -x,( TABLE[1][-mislead()] )) * ( x ) - -Ygritte])] * -Arya][--0.18],-0.98,ROWS)))] - -rule(( ROWS ),ROWS,( dog ) / ROWS) / dog - 0.81,-( mislead() )) + -protect(mislead(Arya - ( TABLE[Sansa][rule(ROWS / -mislead(Ygritte + protect(-0.81)) / -betray(Sansa,Jon) + Arya + Jon,rule(( ( 0.38 ) )),-73)] )))) + ( foo() ) )) + foo(Stark) - ( -450.06 ) )] )
}
assert -bar(Jon,mislead(Sansa) - betray(destroy(mislead(-910.89,( ( 0.58 ) )),COLS),( -x )) + -1 - -dog,-28) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[COLS][i] {
	y -= Jon * -Sansa
}
var Stark = TABLE[protect()][-foo(betray(TABLE[( ( -( -1 ) - COLS + ( 0 ) - COLS * foo() ) ) * TABLE[--( ( Sansa ) ) + Jon][ROWS * ( Arya )]][protect(Ygritte / -320.96 - Stark,Sansa)] / -mislead(( Arya )) * x) + bar(34,protect(),Ygritte))]
var Hodor = -0.35 * dog
assert TABLE[Ygritte / y - Stark * -1 - ( bar(-dog) ) - ( -( --Hodor ) )][y + 1] : "Winter is coming"
var Sansa = -bar(0.61,( -1 ),-TABLE[22][betray(( -0.71 ),-47 + 0.03 + COLS)] + Hodor)
def TABLE[--Jon][i] {
	Ygritte;
	if(-( --Stark )){
	if(730.111 + -ROWS){
	if(rule(-Sansa) - TABLE[( -rule(( -0.11 ),Arya,protect(Sansa) + foo(-Ygritte + ( TABLE[-1][rule(foo(),0.04,COLS)] ),COLS)) / dog )][ROWS]){
	Stark;
	-foo()
} else {
	Sansa += TABLE[-( dog )][-320.67];
	Sansa += -dog;
	destroy(Ygritte) * 1 / -y / ( bar(protect(-1)) )
}
};
	y /= -0.34
} else {

};
	Sansa *= TABLE[0.64 - x * 0.31][bar(-0.94)]
}
def TABLE[-40.6203][j] {
	if(COLS / foo(COLS,-betray(TABLE[--910.997][( Jon + -( COLS ) )],( --bar(y,( ( Sansa ) )) ),( rule() )),foo())){

}
}
var Ygritte = Jon
def TABLE[TABLE[bar(ROWS)][Sansa]][k] {
	Jon /= -ROWS;
	( -51 )
}
def TABLE[x][j] {
	Sansa
}
var Sansa = foo(COLS + -dog)
def protect(){

}
assert 73 : "Winter is coming"
def TABLE[-72][i] {
	y += --protect(COLS,( ( 0.74 ) ));
	if(Sansa){
	Jon -= ROWS;
	Sansa;
	if(mislead() + -dog + bar()){

}
} else {

}
}
var y = ( ( ( Stark * TABLE[0.44][-0.27] ) ) )
assert COLS : "Winter is coming"
def TABLE[-( protect(mislead()) ) - 0][i] {
	Arya -= y
}
def TABLE[-60][j] {
	Stark *= rule(TABLE[COLS][( y )]);
	dog -= TABLE[( TABLE[protect(75,1,( -TABLE[Jon][COLS] * ( ( -0.94 ) ) ) * ROWS + Arya)][COLS] )][destroy(dog * ROWS,COLS,betray(-Ygritte))];
	-y
}
assert Stark : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert 0.02 - 110.071 : "Winter is coming"
var Stark = ( -10 )
var Ygritte = --Stark
var Stark = ( --75 )
def mislead(){
	Arya *= ROWS
}
def TABLE[-600.64 / mislead() / ROWS][k] {
	y;
	Sansa /= COLS
}
assert Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( COLS )][k] {
	Ygritte
}
assert -ROWS * Jon : "Winter is coming"
var Jon = -Stark
def TABLE[--0.25][k] {
	if(-0.94){
	if(160.408){
	( 0.61 )
}
} else {

}
}
def TABLE[Hodor + rule(mislead(-( -ROWS + foo(TABLE[COLS][1],0.46) ) * bar(( bar(Jon + ( ( 440.293 ) )) )) + mislead(0.36,-0.64),( bar(20) ),betray()),( Ygritte * ( -450.8 ) )) + ( TABLE[Jon][-0.54 - ( ( ( ( COLS ) ) ) ) - --ROWS] ) + ROWS][k] {
	--Arya;
	if(bar(77,Ygritte)){

} else {
	if(-TABLE[rule(TABLE[-1][bar(20.15 + COLS,y * 10 + destroy(( TABLE[( ROWS )][x] ),( ROWS )) / protect(bar(-( Arya ),rule(),bar(y,foo(rule(Jon,( ( ROWS ) ))))),betray(-Hodor,-0)))] * protect(0.82) / TABLE[-0.55][ROWS],--0.81)][COLS]){
	Hodor /= ROWS
} else {

};
	Ygritte -= ( Arya - -( -( foo(COLS) ) ) )
}
}
def TABLE[TABLE[--x][Hodor]][k] {
	if(( -( destroy(TABLE[( Arya )][Hodor],--0.91) ) )){
	if(0.74 / Jon / -400.3){
	x /= TABLE[-COLS + 420.5335 - y][rule()]
};
	( 0.13 )
};
	COLS
}
var Ygritte = -1 * ( y ) - 44
assert ROWS * Arya * 85 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(y,Hodor,Ygritte){

}
var y = ( -1 )
def rule(y,Ygritte){
	-x;
	( ( Hodor ) )
}
var Sansa = -99
assert ( Sansa ) : "One can not simply parse himself"
var x = Ygritte
def TABLE[( ( -74 ) ) + protect(22,ROWS)][k] {
	Hodor -= Ygritte;
	Sansa += y * ( COLS ) * -Sansa;
	if(34){
	x *= protect(bar(),dog);
	-ROWS;
	bar(( ( COLS ) ),-350.67 + ---( -( ---( rule(-0.33) ) ) ) + ( -0.9 )) / foo(( -13 ))
}
}
def TABLE[( ( ROWS ) )][k] {
	-Arya;
	Stark -= COLS;
	-( --( --COLS ) )
}
var Sansa = betray(ROWS,-0.38,bar(0.13,protect(-TABLE[destroy(betray(TABLE[--0.01 * --betray(57,-foo(bar(-1),betray(ROWS))) + rule(bar(protect(Arya,bar(Stark)) * COLS),-( -56 ))][( foo(-bar(480.5,-0.87,y)) )])) + -79][dog])) - 1)
def destroy(){
	bar(0.59,( foo(COLS) ))
}
assert ROWS : "Nothing burns like the cold."
def TABLE[Stark][k] {
	Sansa += Hodor;
	Stark *= ( Hodor )
}
var Jon = ROWS
var y = ( Ygritte - -Stark * Sansa )
assert TABLE[--1][Sansa] : "Nothing burns like the cold."
def TABLE[ROWS][i] {
	foo(Arya,-ROWS / TABLE[rule()][--1],( protect(--( ROWS ) + betray(mislead(-bar(-0.15 * ( 80 ),-89 / --Sansa),dog) - 54 / ( COLS ),TABLE[-35][( -0.21 )]) / Arya / ( 0.9 ),Arya) ))
}
def TABLE[mislead(-Sansa,-1)][i] {
	Hodor += TABLE[betray(foo(-Arya),( 130.15 ),Stark)][mislead(--1)]
}
def TABLE[--( Jon + Ygritte ) / ROWS / y - COLS][k] {
	if(rule()){
	if(bar(bar(Jon,--0.85,Stark),rule(),dog) - ROWS + Stark - -( ( x ) ) * 0.5 - ( -21 )){
	if(( 25 )){
	dog *= Sansa;
	Jon *= -( TABLE[880][( y )] )
} else {
	if(( mislead() )){
	betray(bar(-9,( COLS ) + Arya))
} else {
	x += -protect(-TABLE[TABLE[betray(( ROWS ),0.78)][( ( Jon ) ) / 0.88]][ROWS]);
	TABLE[78][destroy(protect(-( -0.92 ),( ( rule(destroy(bar(betray() - destroy()),x,TABLE[TABLE[0.17][( ROWS )]][( ( 0.43 ) )]),( ( COLS ) )) ) * -COLS ),79))]
};
	0.63
};
	-0.34 - ( TABLE[( --800.2124 )][mislead(ROWS,-protect() + ( y ) / 500.12 * COLS,( TABLE[rule(mislead(ROWS),Sansa - dog)][-( --Stark )] ))] )
}
} else {
	( Stark );
	y *= dog;
	-dog
}
}
assert TABLE[---dog / ( mislead(---COLS + ( -1 ) + COLS - ( ( rule(( ROWS ),rule(destroy(Hodor),betray(ROWS,mislead(Arya,TABLE[y][-0.7] * y)),Ygritte)) ) ),x) ) * COLS][-1] : "Fear cuts deeper than swords."
var Arya = -0.06
def mislead(Hodor){

}
var Sansa = 64
var y = rule(destroy(x,530.6),( Arya ),( ( ( ( -1 ) ) ) ))
def TABLE[mislead(0.16)][j] {
	x /= -1;
	dog *= Hodor
}
var x = COLS
def TABLE[-1][i] {
	if(dog){
	if(Hodor - COLS + x - -690.0539){

} else {

};
	dog /= betray(-400.1864 / destroy(destroy(rule(),( COLS ),-bar(ROWS,Jon - Arya) - ROWS / TABLE[( ROWS )][Sansa] - rule(--TABLE[COLS][mislead(Sansa,COLS)],-1 * ROWS,rule(-0.91)) + 13)));
	Sansa -= --35
}
}
var Sansa = -1 / -( ( --COLS * -( ( y ) ) ) ) + ROWS - COLS / --110.47 + 0.5 + -dog / y
def foo(Ygritte,Ygritte){
	if(( ( ( ( 0.8 ) ) ) )){
	dog /= -0.87
} else {

}
}
def TABLE[Hodor][k] {
	if(Stark){
	dog += 66
};
	betray(Jon)
}
assert 0.92 + 640.815 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = bar()
var Arya = ( Jon ) + y
def bar(Sansa,Jon){
	if(ROWS){
	Stark *= rule(ROWS,( ( ( -68 / 630.995 ) ) ) - Jon - rule(( -( ( TABLE[Stark * ROWS][foo(( bar() ),0.63,Sansa)] ) ) ) / Arya,71) - bar())
}
}
def TABLE[x][k] {
	( Arya );
	Stark += ( 0.59 )
}
assert Jon : "Nothing burns like the cold."
def TABLE[Ygritte][k] {
	TABLE[COLS][destroy(-460.8659)]
}
assert 870.361 : "Fear cuts deeper than swords."
def protect(Ygritte,Stark){

}
assert Sansa - foo(--26,-0.52 / rule(COLS / rule(Stark),TABLE[Sansa][dog],rule(-Jon)),( dog )) : "One can not simply parse himself"
var dog = -0.85
assert rule(94,1,mislead(0.36 - --Sansa,Hodor * TABLE[( COLS + Hodor + ROWS ) * -( ROWS )][-y / ( ROWS ) - -77])) : "Nothing burns like the cold."
def foo(){
	if(( destroy(( y )) )){

};
	if(-41 * ( ( Arya / COLS ) )){
	if(-( -510.559 * COLS + -0.13 ) + 0.1){
	if(-1 - ( betray(COLS / ROWS,COLS,protect(foo(Arya,-( TABLE[Arya][-0.32] )) - Stark,dog,COLS + 9 * dog)) ) - ROWS / bar(( Ygritte ) + destroy(( Hodor + ( ROWS ) ),-0.21 * ROWS),( Arya ))){
	-( protect(-destroy(Ygritte)) ) / y;
	x *= Arya;
	if(x){
	Stark *= -foo(-COLS);
	x
}
} else {
	if(( -betray() )){
	dog;
	Ygritte /= ( ( mislead(TABLE[-Stark][-1] - 78) ) ) / -0.68 * --dog + destroy()
} else {
	Sansa *= ROWS
}
};
	Stark /= -1
} else {

};
	( ( ( Stark ) ) )
} else {

}
}
def TABLE[870.6018][k] {
	-1;
	Arya += -( COLS ) + foo()
}
assert mislead() * -( -ROWS - ( COLS ) ) : "Nothing burns like the cold."
var Hodor = y
def destroy(){
	530.5481
}
def destroy(y){
	if(( COLS )){
	Ygritte -= destroy(12 - ROWS,protect(Hodor));
	ROWS
} else {
	if(Hodor){
	Jon -= bar(ROWS + -bar(y,Jon) * ( TABLE[( ROWS ) * Hodor][bar(foo(( ROWS )) - protect(-rule(( ( ( -1 ) ) ))),bar()) - COLS] ) - -0.74,ROWS)
};
	if(betray(( -dog * 0.84 ) * ( Jon )) + 35){
	Sansa += TABLE[Arya][protect(-Stark)];
	y *= Hodor
} else {
	0.8
}
};
	if(bar(( -betray(-Stark,-570.32 - --( ( ( -( ( COLS ) * ( -ROWS ) + foo(( bar(( 75 )) - 0.13 ),-COLS) ) ) ) ),COLS) / x - ROWS ),-31 + foo(( protect(( TABLE[-0.18][betray(--380.11,-390.64) + betray(---0.2,mislead(),0.2)] ),-( bar(mislead(( protect(( ( foo(( destroy(-( -49 ),mislead()) )) ) ),0.51 - COLS) ),ROWS)) )) )))){

}
}
assert ( -Stark ) : "What do we say to the Lord of Death?"
def TABLE[-60.3][j] {
	if(bar(( 990.206 ))){
	y += -( -Arya )
} else {
	if(-destroy(protect(x,Hodor),destroy(( -TABLE[protect(-Arya) * Sansa * ( ( TABLE[x][-0.29] ) )][protect(ROWS)] ) * -Arya * -0.44,( ( -Jon ) )),protect(ROWS))){
	if(-( -74 ) * TABLE[bar(x)][rule(-1)]){
	-y;
	Hodor += ROWS + protect(( ( TABLE[( ( bar(COLS,-protect()) ) )][COLS] ) ),( x - ( protect(TABLE[protect(Hodor,Stark,TABLE[( COLS )][( ROWS )] * Jon)][ROWS],( -COLS )) - 0.24 ) ));
	if(-0.82){
	1
} else {
	if(ROWS){

};
	if(foo(-( betray(ROWS) ) * ( Ygritte * TABLE[---( -COLS ) - ROWS + ( TABLE[-( ( bar() ) )][--4] + ROWS ) * foo(TABLE[betray(( Ygritte ),( foo(mislead(foo())) + y + Stark ),COLS)][( ( -41 ) )],( ( -TABLE[ROWS + 32 * mislead(Sansa,( Ygritte - betray(-32) ))][protect(mislead(( ( Arya / mislead(bar(-ROWS)) - Ygritte ) / 44 + rule(-( TABLE[betray(bar(ROWS,420.8 - rule(-0.55,--( -0.63 ),( -( -bar() ) ))),COLS * ( Hodor ))][0.42] )) / -78 ),dog) / destroy(rule(400.0417)),Stark,ROWS)] ) ),betray(-0.92)) / -0.8 + -660.956][mislead(ROWS)] / COLS * COLS + -980.49 * -1 ),mislead(1))){
	if(( -rule(1 * x,-protect(Hodor),( --0.24 )) )){
	( -30.7464 );
	Jon -= ROWS * COLS / -17
} else {
	x /= Stark;
	Sansa += -0.37
};
	Arya /= Arya
}
}
}
} else {
	Sansa /= 1 - 0.91
};
	TABLE[( -0.97 )][TABLE[TABLE[-1][destroy(99,-mislead(COLS))]][( ---46 * ( ROWS ) )]]
}
}
var x = ---1
def TABLE[0.39 * Sansa][i] {
	if(TABLE[Ygritte][COLS]){
	Sansa += ( -COLS );
	-91
} else {
	y;
	if(-0.06){
	if(( destroy(--1,TABLE[( ( mislead(ROWS) ) ) + protect()][-48]) )){

} else {
	dog /= protect(COLS);
	bar() - x / ( y ) * ROWS
};
	dog += -0.19
} else {
	Arya += dog;
	mislead(ROWS)
}
};
	if(rule(-COLS / ( -protect(( rule(dog) ),( ROWS )) ) / protect(-destroy(( ( ROWS / TABLE[destroy(-0.479,( Jon )) / COLS][Ygritte] * foo(y,Arya) ) ),( y ))),98 / ( -0.28 ))){
	if(protect(Arya,--68,protect(-dog))){
	if(Hodor){
	( bar(-0.88) * mislead(COLS,x) ) / -0.8;
	if(-1){
	if(( -mislead(TABLE[( ( protect(Jon,-TABLE[-0.23 + -0.98 / TABLE[foo(TABLE[bar(Ygritte)][560.447])][Hodor] * -510.37 + ( ( COLS ) )][0.71] / -Arya * ( -ROWS - ( ( ( COLS ) ) ) )) ) ) + dog][COLS]) / destroy(mislead(Jon),( -0.1031 + ( -0.42 ) )) / ( mislead(-COLS / -78) ) / 1 + Hodor + ( -rule() ) )){
	if(-( betray(TABLE[-Ygritte / ( TABLE[protect(63)][( ( rule(-22) ) )] ) - -420.445][betray(-77) * betray(-0.89,( bar(Sansa,mislead(mislead(foo(COLS,dog,( Arya ))),Hodor) - ROWS * ( -y )) )) * rule(foo(( mislead() )),( ( COLS * COLS ) - dog ) / 13)],-ROWS) * COLS ) + TABLE[( -dog * --Stark )][bar(destroy(-0.42,-930.2363),-40 / 64)]){
	( -93 );
	( --destroy(-betray(Sansa,COLS) - COLS,bar()) )
};
	foo(COLS)
}
} else {

}
} else {
	Jon /= 11;
	if(-dog + x){
	COLS
};
	if(x){
	if(( -( Ygritte ) )){
	23
} else {
	if(( mislead(-protect(foo(destroy(y,COLS)),bar(bar(mislead(130.45)) / Hodor,COLS,-1 * COLS * ---ROWS * TABLE[350.993][Arya]))) ) + TABLE[Jon][TABLE[Hodor][-Hodor]] - -Hodor / ---1){
	y;
	1 / ( ( COLS ) );
	if(( 41 )){

}
} else {
	Ygritte += ( -760.5 )
};
	if(Hodor){

} else {
	--y;
	Ygritte
};
	dog -= dog - -33
};
	TABLE[-74 - --20 - -Sansa][COLS]
}
};
	-( -( ( ( -12 * COLS ) ) ) );
	if(0.63){

} else {
	if(1){
	if(25){
	Stark *= ( -1 ) * -50.385;
	if(( ROWS - ( ( ( ROWS ) ) ) )){
	Arya -= --1;
	( -0.18 )
}
} else {
	if(Hodor){
	if(Stark){
	Jon -= y;
	Ygritte += -( ( -destroy(-0.99,ROWS) / destroy(( ( ( -28 ) + -mislead(-36 * y + --bar(1),690.025,( ( ( foo() / mislead(-ROWS - Jon,-510.7,Sansa) + mislead(-57,1) ) ) )) ) ) - destroy(0.97 + rule(),( ( Ygritte ) ) / -COLS),rule(0.31,( TABLE[destroy()][-ROWS] ))) ) ) + --30 + ( protect(0.01,mislead(---( -( ROWS ) / 1 * COLS ),( -( -COLS - -0.19 / -ROWS + -560.063 + -Sansa ) ) - COLS),Hodor) * COLS * mislead(-protect(-ROWS * protect(-58,COLS),TABLE[-ROWS][betray(rule(Sansa,COLS) - protect(0.46,( -880.73 ))) * -0.86]),Arya - y) ) * -Stark / ( betray(destroy(-COLS + ( -0.63 ))) ) - 71 - ( protect(----0.66) )
} else {
	if(-betray()){
	if(( rule(---0.2 + ( bar(TABLE[Arya][x],( 80 )) ),-dog,Sansa) )){
	ROWS
} else {
	Jon += -TABLE[( Ygritte )][--destroy(( betray() ),-x,COLS) * Arya];
	if(-1){
	if(ROWS){
	mislead() + ( 0.15 ) - -Arya;
	ROWS;
	dog *= -Stark
}
} else {
	if(--22 - -bar() - ( ROWS ) * ( y ) + mislead(Ygritte,Sansa)){
	if(TABLE[TABLE[-350.2202][y]][--93]){
	if(mislead(-destroy(Sansa,Sansa) + -COLS,( betray(TABLE[ROWS][ROWS],protect(protect(-( -62 ),TABLE[rule(TABLE[( bar(71,TABLE[Hodor][( ( Arya ) / -ROWS / ( TABLE[ROWS][36] ) - 620.9637 * rule(( ROWS )) ) * 240.821 / y]) )][-ROWS + ROWS],-0.06)][bar(-( TABLE[-Ygritte][Sansa] ) / -Stark * -1 - -( --COLS / ( dog ) ),bar(COLS,0.37 + -( -ROWS )))],COLS),COLS),-78) - destroy(( TABLE[-0.32][( ( 14 ) / -Ygritte )] )) ),( ( dog ) )) * TABLE[Hodor][-( ---36 )]){
	if(ROWS / COLS){
	if(ROWS){
	ROWS
};
	Hodor *= -ROWS;
	-0.48
} else {
	550.6787
}
} else {
	betray(destroy(( -370.942 ),TABLE[x / ( -96 ) - --foo(ROWS + TABLE[dog][--1],dog + ( bar(-COLS * ROWS,1 - -( ( ROWS ) )) )) / foo(mislead(protect(betray(( ( -45 / Stark ) * -( rule(380.46) ) ),destroy(y + mislead(dog),bar())),( -( -( COLS ) ) ))))][betray(rule(rule(),Arya,-Stark - protect(destroy(),---( -0.67 ),y)) + 460.613)],y),ROWS - foo(COLS + --mislead(Stark) + y,COLS) * TABLE[COLS - -( Hodor )][mislead(betray(destroy(protect() + Ygritte / Sansa - 29,( ROWS ))),x * TABLE[Stark][-0.51])]);
	if(( --( -0.58 ) / protect(620.5,ROWS + rule(Ygritte)) )){
	y -= bar(Sansa) + -0.76;
	if(y){
	Ygritte /= destroy(betray(70,rule(( y )) * foo())) - ( Ygritte ) - protect() + TABLE[TABLE[350.8][-foo(-y,( -COLS ))] / --50.7][Hodor];
	-betray();
	if(COLS){
	Arya /= 16 - bar(-Stark);
	Stark += Stark
} else {
	mislead()
}
} else {
	y *= rule(-0.33,( TABLE[bar(-0.34,--( ( bar() - protect(--0.28 / -mislead(0.35,-50) + 0.63 - ( 16 ) / ( bar(( Jon * COLS * TABLE[430.546 - 33][Arya + betray(ROWS + ( bar(COLS,TABLE[--Arya][rule(( ( ROWS ) ))]) ),( destroy(( 98 ),( ( --( Arya ) ) ) - TABLE[bar(( Ygritte ))][-rule(( Sansa ))]) )) + -( ROWS - ( ( 90.9 ) ) ) - -1 * COLS] ) * Sansa,ROWS,betray(( -120.4816 ))) ),-mislead(( --TABLE[( -1 )][-betray(ROWS) / ( mislead() ) * Arya - mislead(( ( -( ( ( 0.48 ) ) ) ) ))] )),( -( -COLS ) )) + mislead(-ROWS,Jon,TABLE[( 1 )][( -1 )]) ) ) * -TABLE[-0.23][COLS],( ( x ) ))][COLS] ),-( ROWS ));
	-1
}
} else {
	if(-destroy(0.83) - y){

};
	if(COLS){
	destroy(ROWS);
	if(bar()){
	Arya += ( -Stark )
} else {

}
} else {
	rule(( COLS ),( -rule(bar(-1,y - ( ROWS ) / x)) ))
};
	foo(ROWS)
}
};
	COLS
} else {
	( ( COLS ) );
	if(Sansa){
	Arya += -0.52;
	Sansa + -66
} else {
	if(betray(-foo(( Sansa / ROWS )) * 64,( Ygritte ),-85)){
	if(( --dog + -1 )){
	Ygritte -= protect(y,-32)
}
};
	y -= destroy(-89) * -foo(-0.2,-( rule(14,Hodor - y) ),rule(( -20.21 ) * ROWS / ( Stark / -25 ),bar(Ygritte,-10)))
};
	if(Jon / -Arya * ( COLS )){
	Arya *= --bar(ROWS) / TABLE[( ( ( Ygritte ) ) )][destroy(611,( ( -0.71 ) ))]
} else {
	if(mislead()){
	( -protect(( TABLE[rule(Jon,( -260.8 ))][foo(( ( ( Ygritte ) / ROWS ) ),-3)] )) + ( -( COLS ) ) )
} else {
	Stark -= Jon
};
	if(betray(( Arya ))){
	COLS;
	Hodor += 89
} else {
	if(0.16){
	-0.47 * 17
};
	if(Ygritte){

} else {
	Arya *= -510.5 + foo(Arya,( -COLS ))
}
};
	if(( betray(mislead(betray(TABLE[foo(bar(-0.46 + ( ( ( Hodor ) ) )) + -1,-y)][Sansa - 78],ROWS,TABLE[( TABLE[x][( x )] )][--0.39]),( TABLE[ROWS][-1] )),Sansa * destroy(protect(),Jon) + ROWS) / -0.46 * --ROWS + ( -Stark ) + Sansa - rule(-27 + rule()) )){

} else {
	x *= -( Arya );
	if(Arya){
	x *= COLS / destroy();
	if(destroy(Jon,TABLE[mislead(betray(ROWS,( -66 )),rule(Jon,COLS,-( -590.55 ) - ( Hodor )) + -620.804,TABLE[dog][bar() / -0.98])][Ygritte])){
	if(0.19){
	if(TABLE[rule(-Ygritte,( -ROWS ))][Arya]){
	( ( 17 ) );
	if(----rule(-rule(1,TABLE[( 1 )][rule(-Sansa,( -( --protect() ) ))]) + --27 + TABLE[-43][-22],foo(0.84,betray(),--y)) + ROWS * ( betray() )){
	if(Ygritte){
	TABLE[betray(Hodor,destroy(-betray()) + ( -mislead(99,protect(--TABLE[-0.82][Ygritte] + destroy(( ( ( dog ) ) + 1 )),dog)) ),COLS + -Hodor)][COLS]
}
} else {
	-( betray() );
	0.43
}
} else {
	if(-bar(ROWS,-( TABLE[-x][Ygritte] ))){
	-( --protect(( COLS ),-1,( -( -0.56 ) )) );
	x += Arya;
	Arya *= Stark
} else {

}
};
	Stark /= -0.84
}
} else {

}
}
}
}
};
	Arya /= rule(57,-COLS,Ygritte) / bar(TABLE[ROWS / TABLE[-ROWS][( betray(( ----COLS ) - betray(TABLE[26][TABLE[( -bar(-( -250.639 ) + 67,betray(destroy(),Jon)) + TABLE[foo()][Jon] )][ROWS]] / foo(TABLE[1][-betray(( ( mislead(-66,betray(bar(protect(COLS),0.63),( betray(y) )),Sansa) ) * -47 ) + ( ( Arya ) )) - mislead(( ( mislead(y,-460.452,--0.79 + -410.23 * ROWS) ) * ROWS ) + 0.57 * -0.62,dog,-Hodor + Arya * Hodor)],-Sansa),--150.9,-0.98),( -57 )) )] + Sansa][-( ( TABLE[0.45][TABLE[-betray(destroy(TABLE[-220.505][50.3132 * ( -0.62 )]))][destroy(( ROWS + ( Arya ) ) * ROWS * Hodor / ROWS)]] ) ) + 0.26],--98 + 1)
} else {

};
	Hodor -= Sansa
}
};
	if(TABLE[-ROWS][( TABLE[( COLS + 90 * ( TABLE[TABLE[TABLE[protect()][( ( --1 ) )]][( ( ( protect(Ygritte - -31,COLS) ) ) )]][-53] ) / COLS )][( 70 )] )]){
	dog += ( y ) + 130.06;
	if(-0.34){
	y -= -TABLE[-( COLS )][COLS];
	Stark -= x
}
};
	Stark += y
};
	Stark
};
	if(mislead(foo(--( -( ( Stark ) - y ) ),Hodor + 580.055 / -790.8),( -0.26 )) + Ygritte){
	if(TABLE[( -ROWS )][COLS]){
	if(-( foo(mislead(Sansa,61),ROWS) ) * ( x )){

} else {
	y -= rule(( TABLE[TABLE[mislead(-bar(--( destroy(-protect(bar()) + COLS) ),540.546 + ROWS),TABLE[( 1 )][Hodor]) / Arya][-19]][protect(-70,TABLE[--90][Jon])] ))
};
	Stark *= -Hodor
};
	TABLE[-790.23 - Jon][-foo(( bar(TABLE[-Sansa][( -30 ) / 76 / mislead(( ( x ) ),7,( -71 ))] / ( ( ROWS ) )) ),mislead(340.6,-41 - ROWS * 0.89))];
	if(rule(( Hodor ) + ( -bar(destroy()) ),( dog ))){
	COLS;
	y -= -53
}
} else {

}
} else {
	if(Arya / betray(-Sansa,betray(-COLS,Ygritte,-COLS * ( -34 ))) / foo(( Sansa ))){
	y / COLS
};
	if(dog){
	if(betray(y,ROWS)){
	-1 / -ROWS * -0.54
};
	( bar(( ( -protect(TABLE[Hodor][bar(( ( -foo() ) ),foo(bar(Sansa),1,TABLE[--dog - Hodor][--COLS])) - COLS / Jon]) * ( foo(ROWS,Arya) ) ) * ( betray(ROWS,Stark) ) )) )
}
}
};
	COLS
} else {

};
	-rule(( foo(COLS,betray(( Arya / COLS ) + COLS) + COLS) ),protect(--Stark),COLS + -COLS + -1 - 130.2637) / protect(COLS,0.28)
}
}
}
}
var Stark = betray()
def TABLE[--( COLS ) / 0.46 + 0.29][i] {
	-y
}
assert ROWS : "Winter is coming"
var Arya = ( -TABLE[TABLE[-1 / bar(-( rule(ROWS) ),( -0.52 ))][Arya]][bar(COLS,COLS)] / mislead(dog * --30.34,COLS,foo(Arya - Jon)) - ( protect(( Jon )) ) - -x + x - bar(bar(),0.01,( -mislead(-Jon,Hodor,( Stark )) )) )
def betray(Stark){
	if(ROWS * dog){

};
	Ygritte;
	Arya *= COLS
}
var Jon = -COLS
var Sansa = Jon - -foo(mislead(),ROWS)
def TABLE[--1 * dog - -88][i] {
	if(y){
	if(--26 - COLS){
	Jon += ---( -ROWS ) * ---( Sansa ) - COLS
};
	Jon += -1;
	( destroy(( protect(Sansa,mislead(foo(( 1 ) / -0.69,Arya) * -COLS * 1,--14),-0.5 + betray(( COLS - TABLE[( TABLE[-COLS][TABLE[x][x] - ( y )] / mislead(-betray(),COLS,-Hodor) )][( protect(910.917 + ( -protect() ) * -Hodor - COLS,( -Jon + -bar(Arya,ROWS) / TABLE[y][Arya] ),COLS / ( 1 / ROWS + mislead(-0.58) )) )] ),destroy(( -TABLE[--Sansa / destroy(0.2,( --350.4 ),Arya) / 870.287 + ---( protect(Arya) )][---0.16] )))) )) ) / destroy(Jon,40.3)
};
	if(( destroy(x,ROWS / ROWS) )){
	if(-650.8604){
	if(( rule(-rule(TABLE[bar()][-33],TABLE[( bar(-foo(( bar(foo(betray(protect(rule(betray(Arya,1,0.27),( mislead(Ygritte,Hodor,( --1 * -betray(-46) / ( -Stark - COLS * x / mislead(protect(destroy(bar(betray(( -COLS ) - --( -460.1 * dog ),betray(x,bar(-TABLE[TABLE[-78 / ( COLS ) + Jon / -COLS / -0.42 / -dog][foo(0.39)]][-betray()])),( --88 )),( Sansa )),-0.32)),ROWS) ) )) )),-destroy(betray(protect(-0.51,0.98))))))) - -1 - ( foo(Ygritte,ROWS) ) )),COLS,-28 / Hodor) ) * x][Hodor]),1) )){
	if(mislead(-TABLE[ROWS - ( --Ygritte + rule() + Sansa )][COLS] * destroy(--betray(( 42 ),-320.975)) * y,COLS,protect(Sansa))){
	if(protect(( ( ( ROWS + ( ROWS ) + -85 ) ) ))){
	if(Hodor / -COLS){

}
} else {

}
} else {
	x += 0.35;
	if(TABLE[( COLS )][( -2 )]){
	if(( ( 45 ) ) + ( betray(--Hodor) )){
	if(-90){

};
	bar(TABLE[TABLE[( betray() )][rule() / --1]][COLS],-0.9)
} else {
	x += y;
	if(-1){
	Ygritte *= ( dog / TABLE[Arya][-0.01] ) - 53;
	if(-0.77){
	y /= ( mislead(( Jon ),( TABLE[bar(TABLE[-TABLE[-y][ROWS]][0.44],-38)][TABLE[-39][ROWS]] ),x) );
	if(y){

}
};
	dog += ( Jon )
} else {
	COLS;
	y /= foo(dog)
}
};
	Stark *= Ygritte;
	if(betray()){
	bar(protect(Ygritte),TABLE[-destroy()][x] * -Jon)
}
} else {
	bar();
	( ( Stark ) * ( 60 - --bar() ) )
};
	TABLE[Sansa][Stark]
}
} else {
	if(-0.5){
	Hodor += -700.682;
	---( mislead(( -0.48 )) );
	TABLE[--( y ) - -mislead(( -COLS ))][bar(( -( -0.54 - -93 ) ))]
};
	if(Ygritte){
	if(foo(20,43)){

};
	Stark += 1
}
};
	x
} else {
	if(Arya){

} else {
	if(( destroy(COLS,COLS,foo(COLS,-( ( -TABLE[--TABLE[Sansa][Hodor]][( 0.78 )] ) ))) ) + mislead(dog,Stark)){
	Sansa -= ( ROWS );
	Stark += bar(-mislead(dog,Jon,y))
};
	dog /= COLS
}
}
}
}
def TABLE[47][k] {
	-1;
	y /= Jon
}
var Jon = ROWS
assert --dog - ( -860.86 ) : "What do we say to the Lord of Death?"
assert -1 : "What do we say to the Lord of Death?"
assert -87 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Jon][j] {

}
def TABLE[-( ( -0.3 ) )][k] {
	if(89){

}
}
assert -46 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert rule(y) : "Nothing burns like the cold."
def TABLE[COLS][j] {
	if(-39){
	-betray()
};
	-1;
	if(Ygritte){
	dog -= --21 * -1 / mislead(ROWS + protect(destroy() + ROWS,COLS,( ROWS )),bar(-0.68,( -dog ),-betray(mislead(-770.3),TABLE[x - 0.29][-Hodor])));
	Sansa
}
}
def mislead(){
	Jon *= ( ( -1 ) );
	dog *= destroy(( dog ),bar(( COLS )))
}
assert -420.26 : "What do we say to the Lord of Death?"
def betray(){
	y *= ( COLS )
}
def TABLE[Ygritte / -78][i] {
	mislead(-foo(( protect(-89,Sansa,( betray(( ( -( COLS ) ) ),foo(foo(x),480.09)) )) - ( ( betray(y / ( ( COLS ) ) / Jon + mislead(( -1 ),COLS,--betray(TABLE[-( Hodor )][destroy() / ROWS] + ( ( 140.0543 ) ),rule(Stark - Jon,( ROWS ),betray(Stark,---ROWS))) * Stark / betray(--0.52)) * 40.2) ) ) )) - ROWS,( rule() - protect(--( COLS + -bar() + protect(-1,ROWS) ) * ( COLS )) )) / 990.372;
	Ygritte
}
def protect(Stark,Jon){
	TABLE[-51 * rule(mislead(--1))][--ROWS]
}
assert COLS : "Fear cuts deeper than swords."
def TABLE[( foo(( -49 ) * --1) )][j] {
	Hodor += y
}
var Jon = Hodor
def mislead(Sansa,Jon){

}
var Ygritte = --( COLS ) / -Hodor
assert Sansa : "What do we say to the Lord of Death?"
def rule(Stark,y){
	if(-foo(-betray())){

} else {

}
}
var Sansa = ( -( foo() ) )
def protect(){
	Ygritte *= Stark;
	Sansa += -0.11
}
var x = ROWS
assert -16 : "One can not simply parse himself"
var dog = COLS
def TABLE[COLS][k] {

}
assert TABLE[0.35][0.25] / ( -( TABLE[( Arya )][Hodor] ) ) : "What do we say to the Lord of Death?"
var Arya = COLS
def TABLE[-480.753 / ROWS][j] {
	Stark;
	if(x){

} else {
	TABLE[-0.92][protect(bar(),( ( -1 ) ) - Sansa) / -6 - --mislead(Arya) / -destroy(--foo(COLS,-y))];
	if(destroy()){
	if(bar(Ygritte,( Jon ),mislead(0.96,-foo(foo()) * -destroy(-62)))){
	Sansa += betray(y,betray(( -950.009 ),-protect(protect(destroy(x,x,-0.57) * Ygritte,-93,-COLS)) + TABLE[( bar(foo(Arya,protect(bar(bar(0.19 + ( foo(Hodor,bar(TABLE[COLS][bar(-TABLE[-1][-Stark - ( mislead() ) * bar(destroy(ROWS,betray(),--foo(0.12)),Ygritte)])],-Jon,-y),( ( mislead(Jon,-TABLE[TABLE[-0.28 + -24][-( -( COLS * --rule(-Sansa,x) ) )]][0.6 * ( Ygritte ) * TABLE[( mislead(ROWS - ( -( TABLE[COLS][-Hodor] + dog + 0.47 * mislead(( ( mislead(mislead(Jon,( ROWS )),destroy()) ) / ROWS - COLS + x - dog )) ) )) )][x] * COLS]) ) )) )) * -0.47),protect(),mislead(( COLS ),( TABLE[-0.84][Sansa] )) + -Sansa)) * ROWS,Stark) ) + -0.8][COLS]),Jon);
	-0.31 / rule(TABLE[rule(betray(0.76,-0.88))][Jon],( 0.52 ) - -Hodor,TABLE[dog][protect(TABLE[( mislead(-0.76) )][rule(Sansa,-49)] + -0.08)])
}
}
}
}
assert 69 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-Sansa * ROWS * TABLE[bar(destroy(-COLS,0.72,--TABLE[COLS][60]),( bar(TABLE[x][-28],ROWS) ))][Stark]][k] {

}
assert Arya : "Winter is coming"
assert -240.9 : "What do we say to the Lord of Death?"
def TABLE[-Arya][k] {
	ROWS;
	y += -370.47;
	Stark *= COLS
}
def foo(Hodor){

}
def TABLE[Jon][j] {
	Ygritte -= ROWS
}
assert ( mislead(TABLE[-0.01][-COLS],( dog )) ) : "Winter is coming"
def bar(Stark){
	-27
}
var Hodor = Arya
def rule(){
	Stark += Hodor;
	if(1){

} else {
	TABLE[ROWS][-0.46];
	-Arya;
	y *= Hodor
}
}
def TABLE[mislead(TABLE[( Ygritte - mislead(protect(bar(Hodor)),protect(-1 - ( COLS ),protect(protect(COLS),Ygritte)),-betray()) / -ROWS + y ) / -0.58 / Sansa][TABLE[-destroy(Hodor) - 1][( ( -bar(--16 * protect(--destroy(foo(bar(TABLE[ROWS][( x )] / destroy(-( Ygritte ),-( ROWS )),Arya),dog,destroy(--85,( -76 ))) * -Stark,( 810.914 + -91 + Ygritte )) - foo(( -rule(( COLS ),( Stark )) ),( ( 0.44 ) ) + ---( -y ) + -550.2 - betray(rule(-Hodor,-Jon),mislead(900.257,Stark,-98)))),protect(0.42,( --1 - 0.87 ))) ) )]])][j] {
	foo(x,protect(COLS) - mislead(ROWS),foo(x,0.54))
}
assert foo(74,mislead(TABLE[-0.1][-1 + ROWS],-0.45,Arya)) : "Fear cuts deeper than swords."
assert x : "Nothing burns like the cold."
assert ( -0.15 ) : "Fear cuts deeper than swords."
def bar(y,Hodor,Sansa){
	Hodor += ( ( --1 ) );
	Hodor *= -Hodor;
	if(-TABLE[( ( -( y ) ) / 890.3 )][ROWS]){

} else {
	-1;
	Sansa *= 50.8
}
}
def TABLE[62][k] {
	if(Ygritte - TABLE[-TABLE[foo(-( -1 ))][-0.84]][x - ( -( ( bar(-0.33,ROWS) ) ) + ( -22 ) - 22 )] + Hodor){
	-betray(-0.92)
}
}
def TABLE[COLS][i] {

}
var Hodor = dog + -rule(COLS,( destroy(-bar(-( -0.67 ),COLS,--( -COLS )) * Jon / mislead(0.39),TABLE[mislead(44) / -ROWS][foo(-( -0.98 + mislead(--0.54 / Hodor - mislead(ROWS * ( ROWS * Sansa ),betray(COLS)),-TABLE[--bar(( ( ( x ) ) ))][TABLE[COLS][Stark / COLS] / -COLS * 63] * ( --Hodor ) + ROWS) * TABLE[Hodor][( COLS )] * ( Stark ) )) + ( TABLE[( -0.66 )][( 0.64 )] ) * -ROWS / ---foo(---1 + ( bar(-0.44,protect(-0.06,destroy(),-0.94)) ),betray(betray(x),-rule(protect(-bar(foo(-Ygritte,0.32),betray()) + -51,--betray(-1,-Sansa / y) - -0.44 - -( destroy(mislead() + mislead(( 97 ),-0.75,( Stark ))) ),rule()))))]) + ROWS * dog ),0.2) + TABLE[Hodor + rule()][( Stark )]
assert -35 - protect(ROWS) : "Fear cuts deeper than swords."
def TABLE[TABLE[( ( ROWS ) )][-( ( 1 ) / 31 )]][k] {
	-mislead(--330.571) + 0.65;
	foo(57);
	Arya -= ( ( COLS ) ) * -x / 0.93 - mislead(y)
}
assert Stark : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(Hodor,Jon){
	Hodor
}
def TABLE[TABLE[--68][Arya]][k] {
	Hodor /= mislead(protect(bar() / rule(protect(),---Sansa * TABLE[-0.51][0.37],( foo(-0.83) ))) / bar(betray(600.5,Hodor + ( --0.32 )),0.59),-x);
	if(TABLE[Hodor][COLS]){
	Hodor -= ROWS
};
	Ygritte *= ( 0.55 ) - ( ( -1 ) + rule(rule(Hodor,mislead(-y,ROWS * Hodor)) * TABLE[-( -80.941 )][54] + Stark,-0.39) )
}
assert COLS : "One can not simply parse himself"
var Arya = destroy(Hodor) * -Arya - Arya
assert rule(-90,COLS) : "One can not simply parse himself"
assert -( COLS ) : "What do we say to the Lord of Death?"
def TABLE[( destroy(Hodor - COLS) / Arya ) / ( -( ROWS ) ) * --COLS][k] {
	COLS / 560.38
}
assert -96 : "One can not simply parse himself"
def mislead(Arya,Jon){
	if(betray()){
	-50.3 / -0.84 * ROWS * foo(80);
	-60
} else {
	TABLE[( -330.53 )][TABLE[ROWS][7] * ROWS]
};
	if(88){
	Arya *= bar(-68);
	-TABLE[-0.61][ROWS]
} else {
	if(-mislead(Arya,( ROWS ))){
	if(foo()){
	y
};
	if(0.76){
	dog -= ROWS;
	if(protect(Sansa)){
	if(Sansa + 10.327 * -Hodor - foo(TABLE[ROWS][Stark],( ( ( -31 - Hodor ) ) ))){
	if(-1){
	betray(-y,( -TABLE[ROWS][-COLS * foo()] ) / ROWS);
	Stark
} else {
	-( destroy(foo(mislead(1,TABLE[destroy(840.22,ROWS)][y]))) );
	if(1){
	if(-42){

} else {
	Stark / ( protect(--COLS * Hodor,-ROWS * bar(-Jon) + -310.31,( ( TABLE[Stark][-91 - -0.82] ) ) / ROWS) );
	Stark /= foo(-12,---40)
}
}
};
	rule(rule(ROWS,45))
} else {
	( betray() )
};
	if(rule(( -Stark ) / ( protect(destroy(TABLE[( -0.04 ) * COLS][300.7522],60,TABLE[x][-78] - COLS),COLS,85) * 85 + --250.1192 ))){
	if(COLS){

} else {

};
	-0.23
}
} else {
	if(TABLE[( bar() )][destroy(betray(-0.64,TABLE[protect(-1,4)][( ROWS )],COLS),Sansa + y) - ROWS]){
	( COLS * -Hodor )
} else {
	-0.8
}
};
	Stark
}
} else {

};
	1;
	Ygritte *= bar(ROWS)
};
	Hodor /= -COLS
}
var Arya = ( TABLE[COLS][dog] )
def rule(dog,Ygritte){
	if(( --0.87 / 0.17 ) - x - ROWS){

}
}
assert ( Sansa ) : "Winter is coming"
def TABLE[COLS - -ROWS][k] {
	Jon *= ( ( Sansa ) ) - --0.8 * Sansa / -47;
	if(mislead()){
	if(TABLE[bar()][-26]){
	Stark *= foo(betray(--x,-destroy()),Arya);
	COLS - ( TABLE[bar(mislead())][40.031] )
}
} else {
	Hodor *= ( bar() );
	y /= ( Sansa )
}
}
var Sansa = 770.565
var Jon = ( -Ygritte )
def TABLE[Jon][j] {

}
assert ( 0.22 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[protect(-68 / -dog)][k] {
	if(--0.72){
	if(( ( y / -0.67 ) )){

};
	Arya *= COLS / Jon;
	if(betray()){
	if(TABLE[ROWS][ROWS]){
	if(TABLE[0.9][TABLE[rule()][( protect(TABLE[450.86][( 0.69 )],( 0.91 )) )] - -0.76]){
	if(( betray(TABLE[betray(TABLE[( -mislead(bar(y,ROWS) / -1,( -0.09 )) ) * ( destroy(-protect()) * 0.05 )][TABLE[Jon][-TABLE[Stark][( betray(89) )]]])][-TABLE[TABLE[destroy()][( rule(-36,-TABLE[( -490.0211 )][ROWS]) )]][---960.518] / dog],620.262,ROWS - destroy()) )){
	if(-46){
	ROWS * -0.02;
	if(( ( ( 54 * ( TABLE[protect(-protect() - ROWS,Stark)][Stark] ) - -Ygritte ) ) )){
	if(( Ygritte )){
	-490.1
}
} else {
	if(Ygritte){
	y -= y;
	if(-ROWS / ( -TABLE[( ( rule(0.3) ) )][Jon] ) / rule() - Sansa){
	if(( TABLE[bar(TABLE[destroy()][y] + ( rule(-0.93,Hodor,ROWS) / -Stark ))][--0.65] )){

};
	Hodor += ROWS
};
	Sansa *= -590.77
} else {
	Sansa *= 4;
	Hodor += -( 1 )
};
	if(Sansa){
	Stark;
	-Hodor;
	rule(x)
}
}
} else {
	Arya += TABLE[bar(Hodor - -( -22 ),ROWS)][protect()];
	x += -( rule() * COLS ) + bar(Ygritte);
	rule(COLS,( -1 ) - foo() - Ygritte + ( Stark ),-1)
};
	Ygritte += ( ( --1 * ( x ) ) )
} else {
	( dog )
}
};
	Arya -= COLS
}
}
};
	( protect(Hodor,Sansa,-Sansa) );
	-1
}
var x = Jon
def mislead(Jon){
	if(TABLE[93][bar(--0.25,bar(betray(foo(( -0.4 - -0.54 + COLS + -y ) + ( x ),68,ROWS)),-0.17),protect(60.5507 + ROWS + foo(protect(Hodor / ( -dog )),-bar(x / COLS,bar(( foo() ),0.78 / x)) + -betray(23 / ( -10 )) * Hodor),mislead(mislead(Jon),-38)))] / ROWS + -( ROWS )){
	Sansa *= dog;
	Sansa /= -( betray(Ygritte) )
} else {
	-( -ROWS );
	( Sansa ) * ( dog ) / mislead(protect());
	if(COLS){
	if(dog){
	if(Jon / ( rule(-500.9183) - -1 - ( Arya ) / -( mislead(( -Stark - dog ),Hodor,( Stark )) ) )){
	if(--76){
	if(( ROWS )){
	Ygritte += protect(-570.96)
}
};
	( protect(( Hodor ) * -ROWS - Sansa,COLS) ) / TABLE[ROWS][TABLE[COLS][y]]
} else {

};
	-140.14
} else {
	if(Hodor){
	Stark
};
	if(83){
	Ygritte += -bar(-Hodor,COLS) / -49
} else {
	Hodor *= ( Hodor + ---0.55 + -bar() );
	x += y
}
}
} else {
	if(TABLE[rule()][COLS * -0.83]){
	( ROWS );
	Hodor *= ( -( ( ( ( TABLE[ROWS][-TABLE[-3][foo(protect(( 1 ),-0.9,-betray(protect(),-y)),mislead(--0.7),Jon) + Hodor / ( -0.66 + Sansa )]] ) * -COLS ) ) * Arya ) - TABLE[Sansa][( Hodor )] );
	if(( -70 ) - -0.22){
	Jon /= destroy(mislead(),--53);
	0.92
} else {
	Stark *= COLS;
	if(( 1 / protect(Stark,( Stark ),Stark) / -( ( -0.72 ) ) )){
	if(ROWS){
	Sansa *= -22
} else {
	Ygritte;
	-( ( Arya ) )
}
};
	destroy(ROWS,-69)
}
} else {
	if(( foo(ROWS,-( COLS * foo(-Arya) ) + --Arya) )){
	COLS
} else {
	( 67 )
}
};
	-( ( Hodor ) )
}
};
	Sansa /= -0.72
}
assert ( ---protect(-70.904,TABLE[rule(( protect(( x ),TABLE[-( --( ( -690.485 ) ) / TABLE[Arya][-( Stark ) / -( ( mislead() ) ) + -110.8392 * destroy(ROWS,protect(mislead(COLS,( COLS ),( 0.11 ))),-( rule() * Jon ))] )][destroy(Hodor,( x ) / Sansa - 0.17)]) - 850.5 ),( rule(protect(),( Hodor - protect() )) )) + ROWS][betray(( -50 * Stark ) - ( -0.66 ))]) + Arya ) : "Winter is coming"
var Jon = protect(bar(-TABLE[-x][-( Arya )] - --ROWS - ( ( protect(0,-protect(ROWS)) ) )) * Jon * COLS,TABLE[Hodor][destroy()],ROWS)
assert x : "One can not simply parse himself"
def betray(Hodor,y,y){

}
def destroy(Hodor,dog){
	Stark -= y
}
assert COLS : "What do we say to the Lord of Death?"
def TABLE[Arya][j] {
	Stark *= destroy(( ( betray(Stark) - ( ( -rule(foo(),-foo(( Stark )) - 0.33 / -( Ygritte )) ) / 1 + Ygritte ) ) ),0.79);
	if(y){
	if(COLS){
	y += mislead(79)
};
	Jon /= 1
}
}
var Arya = ( destroy(ROWS) )
assert protect(Jon,( COLS )) : "One can not simply parse himself"
assert -13 : "Winter is coming"
def TABLE[--foo(destroy(0.05),-10 + -foo())][i] {
	if(bar(TABLE[-( -( COLS ) ) * -protect(1)][64],( Jon ) / TABLE[-betray(Sansa)][COLS] + COLS - betray(x / COLS) * Sansa)){
	Stark *= destroy(COLS,TABLE[rule(70,-protect(ROWS))][destroy(( ROWS ),--38)])
};
	TABLE[Ygritte][76]
}
var x = 0.91
def TABLE[TABLE[( betray() )][TABLE[protect(-0.09)][ROWS]]][i] {
	290.734;
	( -TABLE[protect()][0.28] ) * --780.01
}
def bar(Ygritte,Jon){
	Jon *= -ROWS * 880.08;
	( mislead(( ( dog ) )) + TABLE[-Sansa][Hodor] )
}
var Hodor = --dog
var Ygritte = ROWS
def TABLE[( destroy(betray(0.84),-1) )][j] {

}
def betray(dog,dog,y){
	if(-94){
	if(y){
	if(( foo(-COLS * ( Arya ),TABLE[( -Hodor )][-230.145]) )){
	Ygritte += TABLE[0.11][-bar(y,-rule(x * destroy(ROWS,Jon + y),y - ROWS)) * -( -Arya * Hodor / foo(-80 / -0.08,( Hodor )) )];
	--foo(-TABLE[dog + rule(foo() + 71,750.1,ROWS) / -860.341][1],y,TABLE[rule(foo(-( --90 )),-( foo(19,0.21,( --0.41 )) ),( Stark - -TABLE[bar(Sansa) - Jon][( COLS / TABLE[destroy(( dog ),-0.81)][COLS] ) - TABLE[Stark][Ygritte] - -( dog )] ) - ( Ygritte )) + bar(( -destroy() - Jon ),( COLS ))][76]);
	if(rule(destroy(mislead(-TABLE[( -ROWS )][0.33]),Hodor,60.848),bar(-( x )))){
	( betray(-0.66,( betray(Hodor) ),( ROWS ) - -Sansa * y - COLS) );
	if(-820.23){
	( -( Hodor ) );
	if(Arya){
	Stark += -TABLE[rule(( 0.29 ),COLS,-0.91)][0.86];
	if(Stark){
	if(Hodor){
	if(TABLE[-990.83][-COLS]){
	mislead();
	if(ROWS / COLS){
	Ygritte *= ( -( -2 ) );
	Stark /= protect(-0.32 - ROWS,y)
} else {
	y /= foo(( ( ( 46 ) ) ) * ( ( Ygritte ) ));
	if(Hodor){
	Stark;
	if(( mislead(foo(TABLE[-350.9934][-bar(-45 + --betray(ROWS) / 0.78 + TABLE[Jon + foo() / Hodor][protect(-49,42)] + ( -TABLE[COLS][COLS / protect(( COLS ))] ),x)] * Sansa,-830.7 * -destroy(Stark))) )){
	x /= ( -TABLE[ROWS][( Ygritte ) * -protect(Hodor)] );
	TABLE[Sansa][foo(-ROWS,TABLE[-COLS][-0.7])]
} else {
	if(( ( -( -Stark ) ) ) + foo(destroy(( ( -( Hodor ) ) / Ygritte ),Hodor + -0.4 * -Sansa,betray(( ROWS ) * ( TABLE[--( --200 )][Hodor * protect(( -( Ygritte ) * x ))] ))),-240.66 * ( 0.18 ))){
	x *= -rule();
	if(y){
	if(y){
	-1
};
	Ygritte /= 30
} else {
	x *= -Jon;
	( -( ( ( ( mislead(ROWS,0.13 + ( ( Jon + betray() ) * x + -90 / ( ( -0.2 ) ) ) - Sansa) ) ) - mislead(( 79 ),0.89) * betray(Jon,foo()) ) ) );
	x -= ( Jon )
}
} else {

};
	if(COLS - dog){
	if(--( -( ROWS ) )){
	Stark -= Ygritte;
	x
} else {
	protect(( destroy(COLS,-Jon) ),TABLE[destroy(bar(( TABLE[ROWS][TABLE[( -77 )][( -TABLE[ROWS * TABLE[betray(-Stark,bar(( -580.382 ),( ROWS ),( y + ( dog ) - Hodor ) * ( -93 ) - COLS))][-10]][-x * TABLE[destroy(( ROWS - 0.79 ),rule(COLS + TABLE[0.69][-79],Arya,--( mislead(dog,( -rule() )) ) / ROWS))][Arya]] )]] ) - COLS,x,foo(Jon)),19) - Hodor][-750.6],( -0.93 ))
};
	if(-8){

} else {

}
} else {
	if(Stark){
	( -0.79 )
} else {
	Ygritte += protect(Ygritte,bar(--Hodor / destroy()));
	Stark -= ( ( -bar(COLS,0.46) ) - COLS ) / -0.75 * Ygritte;
	y *= COLS
};
	Sansa /= Hodor - 23
}
};
	if(ROWS){
	if(( ( Jon ) )){

};
	-Ygritte
} else {
	if(TABLE[( -Stark ) - ( 0.93 * mislead(Arya,67 * betray(foo(( ---( ( TABLE[--1][( bar(Sansa) )] ) ) ),-0.96,TABLE[destroy(-destroy(-0.1),Stark)][COLS]) * TABLE[TABLE[ROWS][-88 - ROWS]][mislead(( ( -Stark ) ))]),-0.76) / -1 )][-0.9]){
	if(( ( 840.353 ) ) / -41){
	if(-57){
	( dog );
	if(Jon){
	TABLE[dog / protect(foo(Hodor)) / Stark][foo()] * ( ROWS ) / -0.58 - -TABLE[890.24][( x )];
	Sansa *= 1
} else {
	dog -= COLS
}
} else {
	( -TABLE[protect(-770.66)][bar(Stark,( 1 ))] - destroy() );
	if(foo(( -1 + destroy(destroy(foo(-0.78 * destroy(61,( ( ( rule(COLS,( ( ROWS ) ),--0.2) ) ) ),bar(mislead(TABLE[x][-( ( y ) ) - foo(bar(COLS / x),( ( ( 0.66 ) ) ),Jon) / ( -47 )],-( protect(TABLE[Hodor][--970.535],COLS * Ygritte + TABLE[-( -Stark )][mislead(Stark * ( betray(Stark,rule(COLS + Stark),COLS) ))] / -mislead() * 0.28,( ( foo(ROWS,protect(Ygritte,0.84)) ) ) - foo(---6,x)) ) / TABLE[ROWS][-0.32] * destroy(rule(),COLS))) / -TABLE[protect()][--( ROWS )]),-0.8),--0.83)) ),-430.516)){
	bar(COLS,COLS) / ( ROWS ) + -destroy(( -0.11 ),ROWS) / ( TABLE[-340.18][( ( -y ) / TABLE[TABLE[( -bar() + destroy(-5,Hodor + -COLS,-dog) / 0.27 * ( ROWS - -( dog ) - COLS ) )][ROWS]][-Ygritte] )] ) - 56 / -( ( 49 ) );
	-0.26;
	Hodor += 13
} else {
	-( foo(dog,-0.35) / -0.78 + ( 930.5705 + -Ygritte ) ) / -rule(rule() + y - foo(Sansa,destroy(-430)),Hodor,5) * 0.68
}
}
};
	( Arya ) / bar(--Sansa) / destroy(( -76 ),ROWS);
	if(ROWS){

}
} else {

};
	Jon;
	y /= ( ROWS )
}
};
	if(ROWS){
	if(590.84){
	if(betray(rule(( 710.4478 ),COLS) + x,foo(-91),-TABLE[Ygritte][foo(destroy(--destroy(360.87 + ( bar(-( -( -COLS ) )) ),83) * ROWS + ( ( COLS ) ) / -800.2068 + -0.16),--0.87,-1)])){
	970.972;
	Jon *= ROWS;
	if(ROWS - -Hodor + rule(-85,ROWS)){
	Hodor += -destroy(1,-ROWS);
	Ygritte -= 31
}
} else {

};
	dog -= -TABLE[Jon][( betray(protect(),ROWS) )]
} else {
	if(-bar(31,-( Sansa ),-1)){
	foo(( Hodor ))
} else {
	--1;
	ROWS
};
	TABLE[TABLE[-0.51][Sansa]][x]
};
	mislead(TABLE[Sansa][protect(betray(( dog ),-16 / ROWS))] - ( -Arya ) / -Sansa,( ( TABLE[Stark][mislead(( ( COLS ) - -0.49 ))] ) * -0.29 ) - bar(Jon,210.34,mislead(ROWS,bar(( Hodor ),Stark),Stark * ( COLS + TABLE[COLS][TABLE[COLS][1]] ))) / ( ( dog ) ))
} else {
	if(Sansa){
	foo(betray());
	Jon += ( -371 );
	mislead(-( Sansa ) / betray(mislead(( foo(y,( ROWS - -( ROWS ) )) ),( x ))),x)
};
	Sansa += -ROWS;
	Hodor *= ( -0.8 )
}
};
	if(-87){

}
} else {
	if(Arya * 1 - -destroy(-47)){
	47;
	ROWS
} else {
	if(Ygritte){
	x -= -Jon + protect() / ( -bar(0.97,x,protect()) / TABLE[( ( -( --ROWS * COLS / ( -0.89 ) ) + ( y ) ) ) / Sansa][-1] ) + COLS
} else {
	x += ---COLS;
	-Hodor
};
	Ygritte += ( COLS )
}
};
	if(Ygritte){
	if(( dog / ( COLS ) )){

} else {

};
	if(( mislead(( ( COLS ) ),-( -71 )) )){
	Stark;
	if(1){
	if(-0.13){
	Stark /= 3;
	y *= destroy(( ( bar(Jon) ) )) * 20.555 * dog;
	if(-ROWS){
	Stark;
	x;
	Hodor *= --160.3776
}
} else {
	y -= TABLE[-0.04][ROWS];
	Stark += --1;
	if(-ROWS){

}
};
	Ygritte /= -420.205;
	Sansa += 50.5
} else {
	Ygritte *= -TABLE[0.74 + protect(bar(-protect(-COLS / ROWS) * -0.84 - -( 1 ) / COLS,--0.65 / rule(),( 1 )),COLS)][ROWS];
	Arya /= 1
}
}
} else {
	if(TABLE[( Sansa - COLS - ( COLS ) )][--1]){
	Hodor /= 0.83
} else {
	Jon /= ( foo(--550.49,( ( TABLE[( 260.18 )][-( dog )] ) )) ) * foo(-420.591,TABLE[mislead(TABLE[( Jon )][COLS],Ygritte * -50)][TABLE[Jon][x]],( -Hodor ))
};
	Stark += ( destroy(--mislead(( Stark ),-( TABLE[destroy() / ( -75 )][destroy(1)] ),0.57) + Ygritte / -( -Arya ),ROWS) )
}
} else {
	if(ROWS){
	if(31){

}
};
	Hodor /= rule(( dog ),mislead(( -Stark ),-49,-1) + -ROWS);
	x += ROWS
};
	Arya += COLS
} else {
	-( -rule() );
	if(-COLS){

} else {
	Sansa
}
}
} else {
	if(y){
	ROWS;
	COLS + ( ( Jon + Hodor ) )
} else {
	Sansa /= protect(y + x - ( Ygritte ) * mislead(Sansa,( mislead(Arya) )));
	72 + ( protect(-12,0.47) )
}
}
}
}
} else {
	Stark -= Ygritte;
	if(--COLS){

} else {

}
}
}
}
}
var y = -( ROWS )
var Arya = -TABLE[( rule(-Jon + ROWS,TABLE[x][( Arya )]) )][protect(Ygritte,-0.6) - betray(dog) / COLS]
def TABLE[-84 / y][i] {
	Jon += 0.19 / betray(ROWS);
	-0.05
}
def rule(Jon){
	if(rule(-0.8 - 0.3,Stark + -mislead(),Stark)){

} else {
	if(ROWS){

} else {
	if(-14 + 32){
	-ROWS
} else {
	if(( -mislead(TABLE[-66][Ygritte / -TABLE[-( Hodor + ( ROWS + ( -880.78 ) / bar(39,( -COLS )) - bar(dog,Stark + Jon) ) - ROWS + -0.86 )][COLS] / destroy(Hodor + ROWS) * ( --( -mislead(mislead(-rule(),Arya)) ) / -60 )]) )){
	rule(( Arya ) / y,Sansa,-( Jon ) * foo(protect(destroy(-ROWS,Arya,rule(( 180.32 ),37,COLS))),Stark) + Stark);
	Sansa /= -37
}
}
};
	Hodor -= -Arya;
	if(Ygritte){
	x += mislead(--95,-Hodor * Hodor);
	if(Ygritte){
	Jon += --COLS - -830.283
}
} else {
	if(-y){
	Hodor -= 0.58
};
	if(x){
	ROWS
}
}
}
}
def TABLE[-0.75][i] {
	Sansa += ( -rule() )
}
def mislead(Stark,y){
	if(COLS){

} else {
	Jon /= 0.69;
	if(Jon){
	bar(dog,( COLS ));
	y += foo(1);
	if(( ( y ) )){
	dog /= 560.798
}
} else {
	y *= destroy(( y ) / -betray(TABLE[rule(Hodor) + mislead(-betray(TABLE[x - ROWS][Jon],-( --440.7 )) - TABLE[TABLE[Arya][370.97]][-90.546] - ( dog / bar(( ( -0.07 ) )) ),-120.2 + -TABLE[-0.37 + 600.26][1],77)][betray(TABLE[foo(44 + ( dog ) - ( ( -74 ) )) / protect()][ROWS])],( -0.02 )),TABLE[foo()][( -rule(destroy(),--39) )])
}
}
}
assert --dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Sansa : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( -( destroy() / 0.53 ) ) : "Nothing burns like the cold."
assert Arya : "What do we say to the Lord of Death?"
assert rule() : "Winter is coming"
var dog = -1
assert 0.11 / Ygritte * -1 * betray() / protect() - foo(mislead(( y ))) : "Nothing burns like the cold."
assert COLS : "Fear cuts deeper than swords."
def bar(Stark){
	( foo(Jon,( ROWS / COLS + protect(-( betray(ROWS,dog + protect(COLS,-0.98,protect(-betray(( Stark ),-0.19),mislead(( -840.77 ),rule(foo(destroy() * -Sansa + -Stark / destroy(Stark))),x * x + 60.4137)))) ),Ygritte * -COLS - ROWS,-ROWS) )) );
	TABLE[Hodor][-1 + ( -460.698 / Arya )]
}
def TABLE[( -( ( -TABLE[1][Stark] ) ) )][k] {
	Jon *= dog;
	x += COLS;
	if(COLS){
	if(COLS + destroy(protect(0.91),( -COLS ))){
	-0.09;
	if(-Sansa){
	y += COLS
}
};
	if(Stark){
	x
}
}
}
def betray(y,Jon,Hodor){
	TABLE[x][COLS];
	dog -= rule(520.8) / Ygritte;
	if(y){
	Arya -= dog;
	-73
}
}
assert protect(mislead(-0.6,-mislead(( ROWS ),TABLE[bar(---destroy(COLS) * ROWS - ( -( dog ) ) + ---foo() - -COLS / ROWS,dog,-x + rule(-330.261,COLS) - Stark)][COLS - COLS] / -COLS * rule()) / protect(ROWS * ROWS,-COLS,--x))) : "Winter is coming"
def TABLE[( 1 ) + 390.39][j] {
	protect(( destroy() ),mislead(rule(destroy(Stark,-0.67) / -47 - ROWS + -950.45) - 510.865,---foo(),-( -Stark - -rule(150.165,( protect() ) / Ygritte) * Sansa ) - -490.862),TABLE[( -dog )][betray(( ROWS ))]);
	-6;
	Ygritte -= 43
}
def TABLE[1][i] {
	Jon *= --( ROWS ) + ( -1 );
	Arya /= ( TABLE[0.8][17 + ( -TABLE[mislead(foo(COLS)) * 39][x] )] )
}
var Hodor = ROWS
def protect(Hodor){
	Jon -= ( 0.05 );
	dog *= x
}
var dog = -21
assert y : "Winter is coming"
assert -1 : "Fear cuts deeper than swords."
assert --730.3079 / mislead() : "Winter is coming"
def protect(Sansa,Ygritte){
	--1;
	if(COLS){
	-0.91;
	ROWS;
	protect(( betray(x,0.13) ) / -620.47,x)
}
}
def rule(Jon,Sansa){

}
var Ygritte = COLS
def destroy(Arya,Jon,Jon){

}
assert dog : "Nothing burns like the cold."
def foo(){

}
var x = betray(-( mislead() ))
def TABLE[y][j] {
	dog -= -foo()
}
assert rule(-1) : "Fear cuts deeper than swords."
var x = ( ( 12 ) )
def foo(){
	if(-protect(x)){
	-2;
	if(( --95 ) / dog + -620.255){
	Arya;
	COLS + rule(( -COLS ),x);
	--29
}
} else {
	14
}
}
assert ( 0.23 + ROWS ) : "Fear cuts deeper than swords."
assert TABLE[COLS][foo(-bar(mislead(-y,dog) / rule(95,foo(-1 - COLS + foo(100) / -COLS + COLS))),y) - bar(--40,protect(Ygritte),0.14)] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Sansa * ( ( 0.88 ) ) : "One can not simply parse himself"
def TABLE[mislead(-770.44,y)][j] {
	( TABLE[-protect(foo(( Sansa + ----Hodor - ( Sansa ) ),foo(x,51) - betray(TABLE[Sansa][x],dog)),-( --88 )) / -14 * --rule(( -x ) / -TABLE[Sansa - ( protect(Jon) - foo() )][( ROWS )],( x / ( ROWS ) ) * COLS + ROWS / ( TABLE[Arya][( ( COLS ) )] ),( ( ( -65 ) ) ) - TABLE[--ROWS][( ( --0.92 ) ) * Jon] / ROWS + -75) + -1 * -0.37][-86] / ( 75 ) ) - ROWS;
	Arya *= dog;
	if(-1){
	if(( protect(protect(Arya),Ygritte) )){
	if(Hodor){
	Arya += ( Arya );
	Sansa += --Sansa * -96;
	-0.67
} else {
	Arya *= COLS
}
} else {

}
}
}
def TABLE[( 72 + bar(-TABLE[( 0.69 )][28],y) )][j] {
	Ygritte -= dog + COLS;
	Sansa;
	Stark /= 15
}
var y = 11 * ( TABLE[( rule(-1 / ROWS,0.65,-TABLE[COLS * -( ( -protect() * destroy(( ( -rule(-TABLE[betray(-Ygritte + COLS * bar(-0.57,destroy(TABLE[-COLS - ( -COLS - x )][-destroy() + x / TABLE[Jon * -Arya][-foo()] - 0.76],--82 / -x,bar(-0.37,foo(-mislead(ROWS,rule(( ( 0.41 ) )),( destroy(COLS,ROWS,ROWS) )))))))][protect(-Arya)],( COLS / ( -protect(-rule(),( TABLE[y][-0.4] )) ) ),-0.47) ) )) ) )][0.46]) )][-COLS] ) - x
def TABLE[-Hodor][j] {
	mislead(COLS,ROWS) * --( -75 );
	ROWS
}
def bar(Stark){

}
assert destroy(Ygritte,ROWS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = rule(betray(43),ROWS)
assert ( Arya ) * TABLE[0.41][( ( -ROWS ) )] : "One can not simply parse himself"
def rule(Sansa,dog){
	if(mislead(rule(0.51,-0.28))){
	Jon -= Hodor;
	if(-protect(Stark,x,--160.57) / TABLE[-40.581][( ( -COLS ) ) - destroy(COLS) / ( ( ROWS ) - foo(( COLS )) ) * ( ( 59 ) ) - ( 4 )]){
	-86
} else {
	( TABLE[Ygritte][foo(370.03,( TABLE[( ROWS ) + 1][( ( -Arya ) / TABLE[Hodor][( ROWS )] )] ))] )
}
} else {
	if(bar(-53 / 1)){
	-bar(Jon);
	if(( 20 )){
	1
}
};
	if(-1){
	x *= -bar(TABLE[Sansa][rule(ROWS)],-0.59,1 + ROWS);
	Sansa;
	if(( ROWS )){
	Sansa *= COLS;
	if(Sansa){
	Stark + TABLE[x][COLS]
} else {
	Jon *= Jon;
	Hodor += betray(-990.14 / 0.32,TABLE[( TABLE[-0.13][COLS] )][-COLS]);
	if(--Stark){
	Sansa;
	if(( Sansa )){
	Jon;
	Hodor /= COLS
} else {
	if(ROWS){
	ROWS
};
	foo();
	if(-360.4){
	0.75;
	Arya *= -0.6
}
};
	dog -= ( 82 - bar(( x )) + Hodor )
}
}
} else {
	if(COLS){
	if(Hodor){
	if(97){
	if(( Stark - rule(-0.29) / ( -230.9 ) * ( dog ) * 0.5 + Sansa + -COLS * y - ( Jon ) )){
	if(betray()){
	( 5 - TABLE[Hodor][foo()] );
	Ygritte *= TABLE[Hodor + -66][mislead(destroy(rule(COLS,-38),destroy(bar(),0.14,mislead())),Hodor,Hodor + Jon)]
}
} else {
	Stark += protect()
};
	ROWS
} else {
	if(mislead(86,destroy(-1,Sansa,ROWS),protect(-11,-protect()))){
	27 - ROWS
} else {

}
};
	0.42 - TABLE[protect(-73,-( 0.28 ),( -foo(( ( TABLE[0.66][TABLE[Stark][( foo(-( -y )) )]] + destroy(dog,rule(rule(-COLS,-43,( destroy(TABLE[-dog][( ( -26 ) + 67 )] + rule(),COLS,-0.1) )),-TABLE[-protect(( 1 ),--rule() * -0.45 / -43 - ROWS)][-1 + COLS + ( ( ( Jon ) ) )] - COLS + ( foo() ),TABLE[foo(protect(ROWS),betray(ROWS,x))][1] + -dog - ( x ))) ) ),( Sansa ),Jon) * TABLE[( Arya * -x )][bar(ROWS,bar(710.541,COLS))] ) * Stark) * --TABLE[-foo(-0.76)][( TABLE[0.23 + dog][Jon] )] * -( 0.77 ) * Arya * -( TABLE[--( Stark )][ROWS] )][Ygritte] + ( ( 0.76 ) ) + COLS
} else {

};
	( mislead(Sansa,Hodor) );
	if(ROWS){
	Ygritte /= rule()
} else {

}
};
	if(99){

} else {

};
	if(-Jon){
	dog += -1
}
}
}
}
}
def TABLE[protect(TABLE[78][mislead() + 0.06 / destroy(( ( 0.61 * ( Arya ) * destroy(ROWS) / -rule(ROWS) / -0.03 ) ))],-950.8938)][i] {
	if(80){
	if(-0.59 + dog){
	if(dog){
	Sansa /= ROWS;
	Jon -= COLS / 0.56
} else {
	dog += ( --mislead(Hodor,( ( foo(ROWS) ) + ( mislead(-1) ) - ROWS / rule(-0.92) ),TABLE[Hodor - COLS][TABLE[destroy(dog)][COLS]]) + protect(-( 7 ),-COLS) )
}
}
};
	COLS
}
def destroy(Hodor,dog,Sansa){
	if(Arya){

};
	if(-1 * Ygritte + Stark){
	( -x / COLS )
} else {
	if(ROWS){
	if(TABLE[-0.7][( ( rule(( ( -( -y / COLS ) + foo(TABLE[-( -2 )][COLS],Ygritte) ) ),( ROWS - rule() )) + y ) + -( ( ( COLS ) ) - ( --36 ) ) ) - -1 * 460.7652]){
	if(--98 + dog){
	if(-Stark){

}
}
};
	if(-COLS / 0.21){
	-( ( Hodor ) );
	-0.18;
	x *= -protect(0.21)
} else {
	-Ygritte - dog + ( mislead(270.6966,foo(19) + Stark / -( --foo(protect(foo(( -0.15 ),destroy(Hodor,-61)) / protect(betray(--1 / TABLE[0.17][--betray(ROWS,-0.19) - rule(( -TABLE[COLS][-0.49] ),( -48 ) / -630.93) * ( TABLE[( -200.47 ) / TABLE[--0.8][--390.0127 - TABLE[-90][mislead(Stark)] / --foo(y)]][( protect(-90.9404) ) / Jon] ) / ROWS * -200.522] + ( 0.79 ),protect(( ( ( 300.5041 / Jon ) ) )))),ROWS),dog,rule(( -COLS ),Arya,bar(bar(ROWS,-20 * --bar() / COLS - COLS,-0.09),ROWS,Arya / -Arya - Hodor + ( TABLE[-62][Jon / 0.67] )))) * ( protect(TABLE[Stark][Arya]) / protect(y) ) + ROWS ) + ( x ) / bar(COLS - ( y ) + destroy(),ROWS - -( -0.64 ) * -1)) );
	if(foo()){
	--88;
	Stark -= -( ROWS );
	if(( -0.68 - TABLE[57][rule(( ( -Arya ) ),Ygritte)] )){
	16;
	y += destroy(COLS,COLS,COLS)
} else {

}
} else {
	y -= protect();
	Stark /= TABLE[( ( --1 / 1 ) )][-73]
};
	Stark *= Arya
}
}
}
}
def betray(Ygritte,Arya,x){

}
def destroy(dog){
	-0.42 / Stark * ( ROWS );
	if(( ROWS )){
	if(-TABLE[-destroy(COLS - -0.11,( Ygritte ))][-1]){

} else {
	Jon /= betray(destroy(ROWS,( 1 )),TABLE[-51][0.05])
};
	if(-x){
	Arya /= ROWS;
	y *= --1
};
	if(( ( -41 ) )){
	y;
	Hodor
}
} else {
	-0.79
}
}
